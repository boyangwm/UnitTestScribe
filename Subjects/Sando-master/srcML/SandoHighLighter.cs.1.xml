<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\SandoHighLighter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">ComponentModel</name><op:operator pos:line="3" pos:column="28">.</op:operator><name pos:line="3" pos:column="29">Composition</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Threading</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Windows</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Media</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Microsoft</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">VisualStudio</name><op:operator pos:line="7" pos:column="29">.</op:operator><name pos:line="7" pos:column="30">Text</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Microsoft</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">VisualStudio</name><op:operator pos:line="8" pos:column="29">.</op:operator><name pos:line="8" pos:column="30">Text</name><op:operator pos:line="8" pos:column="34">.</op:operator><name pos:line="8" pos:column="35">Classification</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Microsoft</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">VisualStudio</name><op:operator pos:line="9" pos:column="29">.</op:operator><name pos:line="9" pos:column="30">Text</name><op:operator pos:line="9" pos:column="34">.</op:operator><name pos:line="9" pos:column="35">Editor</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Microsoft</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">VisualStudio</name><op:operator pos:line="10" pos:column="29">.</op:operator><name pos:line="10" pos:column="30">Text</name><op:operator pos:line="10" pos:column="34">.</op:operator><name pos:line="10" pos:column="35">Operations</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Microsoft</name><op:operator pos:line="11" pos:column="16">.</op:operator><name pos:line="11" pos:column="17">VisualStudio</name><op:operator pos:line="11" pos:column="29">.</op:operator><name pos:line="11" pos:column="30">Text</name><op:operator pos:line="11" pos:column="34">.</op:operator><name pos:line="11" pos:column="35">Tagging</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Microsoft</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">VisualStudio</name><op:operator pos:line="12" pos:column="29">.</op:operator><name pos:line="12" pos:column="30">Utilities</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">UI</name><op:operator pos:line="14" pos:column="15">.</op:operator><name pos:line="14" pos:column="16">View</name></name>;</using>

<namespace pos:line="16" pos:column="1">namespace <name><name pos:line="16" pos:column="11">Sando</name><op:operator pos:line="16" pos:column="16">.</op:operator><name pos:line="16" pos:column="17">UI</name></name>
<block pos:line="17" pos:column="1">{
    <function_decl><type><specifier pos:line="18" pos:column="5">public</specifier> <specifier pos:line="18" pos:column="12">delegate</specifier> <name pos:line="18" pos:column="21">void</name></type> <name pos:line="18" pos:column="26">HighlightedEntityChanged</name><parameter_list pos:line="18" pos:column="50">(<param><decl><type><name><name pos:line="18" pos:column="51">IEnumerable</name><argument_list pos:line="18" pos:column="62">&lt;<argument><name pos:line="18" pos:column="63">HighlightedEntity</name></argument>&gt;</argument_list></name></type> <name pos:line="18" pos:column="82">entities</name></decl></param>)</parameter_list>;</function_decl>

    <class><specifier pos:line="20" pos:column="5">public</specifier> <specifier pos:line="20" pos:column="12">sealed</specifier> class <name pos:line="20" pos:column="25">HighlightedEntity</name> <super pos:line="20" pos:column="43">: <name><name pos:line="20" pos:column="45">IEquatable</name><argument_list pos:line="20" pos:column="55">&lt;<argument><name pos:line="20" pos:column="56">HighlightedEntity</name></argument>&gt;</argument_list></name>, <name pos:line="20" pos:column="76">IDisposable</name></super>
    <block pos:line="21" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">string</name></type> <name pos:line="22" pos:column="23">Path</name> <block pos:line="22" pos:column="28">{ <function_decl><specifier pos:line="22" pos:column="30">private</specifier> <name pos:line="22" pos:column="38">set</name>;</function_decl>  <function_decl><name pos:line="22" pos:column="44">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">int</name></type> <name pos:line="23" pos:column="20">StartLineNumber</name> <block pos:line="23" pos:column="36">{ <function_decl><specifier pos:line="23" pos:column="38">private</specifier> <name pos:line="23" pos:column="46">set</name>;</function_decl> <function_decl><name pos:line="23" pos:column="51">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">int</name></type> <name pos:line="24" pos:column="20">LineCount</name> <block pos:line="24" pos:column="30">{ <function_decl><specifier pos:line="24" pos:column="32">private</specifier> <name pos:line="24" pos:column="40">set</name>;</function_decl> <function_decl><name pos:line="24" pos:column="45">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">string</name></type> <name pos:line="25" pos:column="23">Rawsource</name> <block pos:line="25" pos:column="33">{ <function_decl><specifier pos:line="25" pos:column="35">private</specifier> <name pos:line="25" pos:column="43">set</name>;</function_decl>  <function_decl><name pos:line="25" pos:column="49">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">public</specifier> <name pos:line="27" pos:column="16">string</name><index pos:line="27" pos:column="22">[]</index></type> <name pos:line="27" pos:column="25">RawinLine</name> <block pos:line="27" pos:column="35">{ <function_decl><name pos:line="27" pos:column="37">set</name>;</function_decl> <function_decl><name pos:line="27" pos:column="42">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">string</name><index pos:line="28" pos:column="22">[]</index></type> <name pos:line="28" pos:column="25">Keywords</name> <block pos:line="28" pos:column="34">{ <function_decl><name pos:line="28" pos:column="36">set</name>;</function_decl> <function_decl><name pos:line="28" pos:column="41">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">private</specifier> <specifier pos:line="30" pos:column="17">readonly</specifier> <name pos:line="30" pos:column="26">Timer</name></type> <name pos:line="30" pos:column="32">timer</name></decl>;</decl_stmt>

        <comment type="line" pos:line="32" pos:column="9">// After five seconds, this highlight should be gone.</comment>
        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">private</specifier> <specifier pos:line="33" pos:column="17">const</specifier> <name pos:line="33" pos:column="23">int</name></type> <name pos:line="33" pos:column="27">TIMEOUT</name> <init pos:line="33" pos:column="35">= <expr><lit:literal type="number" pos:line="33" pos:column="37">10000</lit:literal> <op:operator pos:line="33" pos:column="43">*</op:operator> <lit:literal type="number" pos:line="33" pos:column="45">5</lit:literal></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">HighlightedEntity</name><parameter_list pos:line="35" pos:column="33">(<param><decl><type><name pos:line="35" pos:column="34">String</name></type> <name pos:line="35" pos:column="41">Path</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="47">int</name></type> <name pos:line="35" pos:column="51">StartLineNumber</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="68">string</name></type> <name pos:line="35" pos:column="75">Rawsource</name></decl></param>, <param><decl><type><name><name pos:line="35" pos:column="86">string</name><index pos:line="35" pos:column="92">[]</index></name></type> <name pos:line="35" pos:column="95">keywords</name></decl></param>,
            <param><decl><type><name pos:line="36" pos:column="13">TimerCallback</name></type> <name pos:line="36" pos:column="27">Callback</name></decl></param>)</parameter_list>
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">this</name><op:operator pos:line="38" pos:column="17">.</op:operator><name pos:line="38" pos:column="18">Path</name></name> <op:operator pos:line="38" pos:column="23">=</op:operator> <name pos:line="38" pos:column="25">Path</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">this</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">StartLineNumber</name></name> <op:operator pos:line="39" pos:column="34">=</op:operator> <name pos:line="39" pos:column="36">StartLineNumber</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">this</name><op:operator pos:line="40" pos:column="17">.</op:operator><name pos:line="40" pos:column="18">Rawsource</name></name> <op:operator pos:line="40" pos:column="28">=</op:operator> <name pos:line="40" pos:column="30">Rawsource</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">this</name><op:operator pos:line="41" pos:column="17">.</op:operator><name pos:line="41" pos:column="18">LineCount</name></name> <op:operator pos:line="41" pos:column="28">=</op:operator> <call><name><name pos:line="41" pos:column="30">Rawsource</name><op:operator pos:line="41" pos:column="39">.</op:operator><name pos:line="41" pos:column="40">Split</name></name><argument_list pos:line="41" pos:column="45">(<argument><expr><lit:literal type="char" pos:line="41" pos:column="46">'\n'</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="51">.</op:operator><name pos:line="41" pos:column="52">Length</name></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="43" pos:column="13">this</name><op:operator pos:line="43" pos:column="17">.</op:operator><name pos:line="43" pos:column="18">RawinLine</name></name> <op:operator pos:line="43" pos:column="28">=</op:operator> <call><name><name pos:line="43" pos:column="30">Rawsource</name><op:operator pos:line="43" pos:column="39">.</op:operator><name pos:line="43" pos:column="40">Split</name></name><argument_list pos:line="43" pos:column="45">(<argument><expr><lit:literal type="char" pos:line="43" pos:column="46">'\n'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">this</name><op:operator pos:line="44" pos:column="17">.</op:operator><name pos:line="44" pos:column="18">Keywords</name></name> <op:operator pos:line="44" pos:column="27">=</op:operator> <name pos:line="44" pos:column="29">keywords</name></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="46" pos:column="13">this</name><op:operator pos:line="46" pos:column="17">.</op:operator><name pos:line="46" pos:column="18">timer</name></name> <op:operator pos:line="46" pos:column="24">=</op:operator> <op:operator pos:line="46" pos:column="26">new</op:operator> <call><name pos:line="46" pos:column="30">Timer</name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">Callback</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">this</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="52">TIMEOUT</name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="61">int</name><op:operator pos:line="46" pos:column="64">.</op:operator><name pos:line="46" pos:column="65">MaxValue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="49" pos:column="9">////The original highlight function</comment>
        <comment type="line" pos:line="50" pos:column="9">//public bool IsLineInEntity(int number) {</comment>
        <comment type="line" pos:line="51" pos:column="9">//    return number &gt;= StartLineNumber &amp;&amp; number &lt; StartLineNumber + LineCount;</comment>
        <comment type="line" pos:line="52" pos:column="9">//}</comment>

        <comment type="line" pos:line="54" pos:column="9">//Highlight individual lines that containts the search key Zhao</comment>
        <function><type><specifier pos:line="55" pos:column="9">public</specifier> <name pos:line="55" pos:column="16">bool</name></type> <name pos:line="55" pos:column="21">IsLineInEntity</name><parameter_list pos:line="55" pos:column="35">(<param><decl><type><name pos:line="55" pos:column="36">int</name></type> <name pos:line="55" pos:column="40">number</name></decl></param>)</parameter_list> <block pos:line="55" pos:column="48">{
            <comment type="line" pos:line="56" pos:column="13">//Justify the line number</comment>
            <comment type="line" pos:line="57" pos:column="13">//if(!RawinLine[0].Contains('('))</comment>
            <comment type="line" pos:line="58" pos:column="13">//    number++;</comment>
            <if pos:line="59" pos:column="13">if<condition pos:line="59" pos:column="15">(<expr><name pos:line="59" pos:column="16">number</name> <op:operator pos:line="59" pos:column="23">&gt;=</op:operator> <name pos:line="59" pos:column="26">StartLineNumber</name> <op:operator pos:line="59" pos:column="42">&amp;&amp;</op:operator> <name pos:line="59" pos:column="45">number</name> <op:operator pos:line="59" pos:column="52">&lt;</op:operator> <op:operator pos:line="59" pos:column="54">(</op:operator><name pos:line="59" pos:column="55">StartLineNumber</name> <op:operator pos:line="59" pos:column="71">+</op:operator> <name pos:line="59" pos:column="73">LineCount</name><op:operator pos:line="59" pos:column="82">)</op:operator></expr>)</condition><then pos:line="59" pos:column="84"> <block pos:line="59" pos:column="85">{
                <foreach pos:line="60" pos:column="17">foreach(<init><decl><type><name pos:line="60" pos:column="25">string</name></type> <name pos:line="60" pos:column="32">keyword</name> <range pos:line="60" pos:column="40">in <expr><name pos:line="60" pos:column="43">Keywords</name></expr></range></decl></init>)
                    <if pos:line="61" pos:column="21">if<condition pos:line="61" pos:column="23">(<expr><name><name pos:line="61" pos:column="24">RawinLine</name><index pos:line="61" pos:column="33">[<expr><name pos:line="61" pos:column="34">number</name> <op:operator pos:line="61" pos:column="41">-</op:operator> <name pos:line="61" pos:column="43">StartLineNumber</name></expr>]</index></name><op:operator pos:line="61" pos:column="59">.</op:operator><call><name pos:line="61" pos:column="60">IndexOf</name><argument_list pos:line="61" pos:column="67">(<argument><expr><name pos:line="61" pos:column="68">keyword</name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="77">StringComparison</name><op:operator pos:line="61" pos:column="93">.</op:operator><name pos:line="61" pos:column="94">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="61" pos:column="122">&gt;=</op:operator> <lit:literal type="number" pos:line="61" pos:column="125">0</lit:literal></expr>)</condition><then pos:line="61" pos:column="127">
                        <return pos:line="62" pos:column="25">return <expr><lit:literal type="boolean" pos:line="62" pos:column="32">true</lit:literal></expr>;</return></then></if></foreach>
            }</block></then></if>
            <return pos:line="64" pos:column="13">return <expr><lit:literal type="boolean" pos:line="64" pos:column="20">false</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">bool</name></type> <name pos:line="67" pos:column="21">Equals</name><parameter_list pos:line="67" pos:column="27">(<param><decl><type><name pos:line="67" pos:column="28">HighlightedEntity</name></type> <name pos:line="67" pos:column="46">other</name></decl></param>)</parameter_list>
        <block pos:line="68" pos:column="9">{
            <return pos:line="69" pos:column="13">return <expr><call><name><name pos:line="69" pos:column="20">this</name><op:operator pos:line="69" pos:column="24">.</op:operator><name pos:line="69" pos:column="25">Path</name><op:operator pos:line="69" pos:column="29">.</op:operator><name pos:line="69" pos:column="30">Equals</name></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name><name pos:line="69" pos:column="37">other</name><op:operator pos:line="69" pos:column="42">.</op:operator><name pos:line="69" pos:column="43">Path</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="69" pos:column="49">&amp;&amp;</op:operator> <name><name pos:line="69" pos:column="52">this</name><op:operator pos:line="69" pos:column="56">.</op:operator><name pos:line="69" pos:column="57">StartLineNumber</name></name> <op:operator pos:line="69" pos:column="73">==</op:operator> <name><name pos:line="69" pos:column="76">other</name><op:operator pos:line="69" pos:column="81">.</op:operator><name pos:line="69" pos:column="82">StartLineNumber</name>
                   <type:modifier pos:line="70" pos:column="20">&amp;&amp;</type:modifier></name> <call><name><name pos:line="70" pos:column="23">this</name><op:operator pos:line="70" pos:column="27">.</op:operator><name pos:line="70" pos:column="28">Rawsource</name><op:operator pos:line="70" pos:column="37">.</op:operator><name pos:line="70" pos:column="38">Equals</name></name><argument_list pos:line="70" pos:column="44">(<argument><expr><name><name pos:line="70" pos:column="45">other</name><op:operator pos:line="70" pos:column="50">.</op:operator><name pos:line="70" pos:column="51">Rawsource</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="73" pos:column="9">public</specifier> <name pos:line="73" pos:column="16">void</name></type> <name pos:line="73" pos:column="21">Dispose</name><parameter_list pos:line="73" pos:column="28">()</parameter_list>
        <block pos:line="74" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">timer</name><op:operator pos:line="75" pos:column="18">.</op:operator><name pos:line="75" pos:column="19">Dispose</name></name><argument_list pos:line="75" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>

    <class><specifier pos:line="79" pos:column="5">public</specifier> <specifier pos:line="79" pos:column="12">sealed</specifier> class <name pos:line="79" pos:column="25">HighlightedEntitySet</name>
    <block pos:line="80" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="81" pos:column="9">private</specifier> <specifier pos:line="81" pos:column="17">static</specifier> <name pos:line="81" pos:column="24">HighlightedEntitySet</name></type> <name pos:line="81" pos:column="45">instance</name></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="83" pos:column="9">public</specifier> <specifier pos:line="83" pos:column="16">static</specifier> <name pos:line="83" pos:column="23">HighlightedEntitySet</name></type> <name pos:line="83" pos:column="44">GetInstance</name><parameter_list pos:line="83" pos:column="55">()</parameter_list>
        <block pos:line="84" pos:column="9">{
            <return pos:line="85" pos:column="13">return <expr><name pos:line="85" pos:column="20">instance</name> <op:operator pos:line="85" pos:column="29">??</op:operator> <op:operator pos:line="85" pos:column="32">(</op:operator><name pos:line="85" pos:column="33">instance</name> <op:operator pos:line="85" pos:column="42">=</op:operator> <op:operator pos:line="85" pos:column="44">new</op:operator> <call><name pos:line="85" pos:column="48">HighlightedEntitySet</name><argument_list pos:line="85" pos:column="68">()</argument_list></call><op:operator pos:line="85" pos:column="70">)</op:operator></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="88" pos:column="9">private</specifier> <specifier pos:line="88" pos:column="17">readonly</specifier> <name><name pos:line="88" pos:column="26">List</name><argument_list pos:line="88" pos:column="30">&lt;<argument><name pos:line="88" pos:column="31">HighlightedEntity</name></argument>&gt;</argument_list></name></type> <name pos:line="88" pos:column="50">entities</name> <init pos:line="88" pos:column="59">= <expr><op:operator pos:line="88" pos:column="61">new</op:operator> <call><name><name pos:line="88" pos:column="65">List</name><argument_list pos:line="88" pos:column="69">&lt;<argument><name pos:line="88" pos:column="70">HighlightedEntity</name></argument>&gt;</argument_list></name><argument_list pos:line="88" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="89" pos:column="9">public</specifier> <specifier pos:line="89" pos:column="16">event</specifier> <name pos:line="89" pos:column="22">HighlightedEntityChanged</name></type> <name pos:line="89" pos:column="47">entityChanged</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">void</name></type> <name pos:line="91" pos:column="21">AddEntity</name><parameter_list pos:line="91" pos:column="30">(<param><decl><type><name pos:line="91" pos:column="31">String</name></type> <name pos:line="91" pos:column="38">path</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="44">int</name></type> <name pos:line="91" pos:column="48">start</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="55">String</name></type> <name pos:line="91" pos:column="62">rawSource</name></decl></param>, <param><decl><type><name><name pos:line="91" pos:column="73">String</name><index pos:line="91" pos:column="79">[]</index></name></type> <name pos:line="91" pos:column="82">keywords</name></decl></param>)</parameter_list>
        <block pos:line="92" pos:column="9">{
            <lock pos:line="93" pos:column="13">lock (<expr><name pos:line="93" pos:column="19">entities</name></expr>)
            <block pos:line="94" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="95" pos:column="17">var</name></type> <name pos:line="95" pos:column="21">ent</name> <init pos:line="95" pos:column="25">= <expr><op:operator pos:line="95" pos:column="27">new</op:operator> <call><name pos:line="95" pos:column="31">HighlightedEntity</name><argument_list pos:line="95" pos:column="48">(<argument><expr><name pos:line="95" pos:column="49">path</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="55">start</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="62">rawSource</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="73">keywords</name></expr></argument>, <argument><expr><lambda><name pos:line="95" pos:column="83">state</name> <op:operator pos:line="95" pos:column="89">=&gt;</op:operator>
                <block pos:line="96" pos:column="17">{
                    <lock pos:line="97" pos:column="21">lock (<expr><name pos:line="97" pos:column="27">entities</name></expr>)
                    <block pos:line="98" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="99" pos:column="25">var</name></type> <name pos:line="99" pos:column="29">entity</name> <init pos:line="99" pos:column="36">= <expr><op:operator pos:line="99" pos:column="38">(</op:operator><name pos:line="99" pos:column="39">HighlightedEntity</name><op:operator pos:line="99" pos:column="56">)</op:operator><name pos:line="99" pos:column="57">state</name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name pos:line="100" pos:column="25">entities</name><op:operator pos:line="100" pos:column="33">.</op:operator><name pos:line="100" pos:column="34">Remove</name></name><argument_list pos:line="100" pos:column="40">(<argument><expr><name pos:line="100" pos:column="41">entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="101" pos:column="25">entity</name><op:operator pos:line="101" pos:column="31">.</op:operator><name pos:line="101" pos:column="32">Dispose</name></name><argument_list pos:line="101" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                        <if pos:line="102" pos:column="25">if <condition pos:line="102" pos:column="28">(<expr><name pos:line="102" pos:column="29">entityChanged</name> <op:operator pos:line="102" pos:column="43">!=</op:operator> <name pos:line="102" pos:column="46">null</name></expr>)</condition><then pos:line="102" pos:column="51">
                            <expr_stmt><expr><call><name pos:line="103" pos:column="29">entityChanged</name><argument_list pos:line="103" pos:column="42">(<argument><expr><call><name><name pos:line="103" pos:column="43">entities</name><op:operator pos:line="103" pos:column="51">.</op:operator><name pos:line="103" pos:column="52">ToList</name></name><argument_list pos:line="103" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                    }</block></lock>
                }</block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><op:operator pos:line="106" pos:column="21">!</op:operator><call><name><name pos:line="106" pos:column="22">entities</name><op:operator pos:line="106" pos:column="30">.</op:operator><name pos:line="106" pos:column="31">Contains</name></name><argument_list pos:line="106" pos:column="39">(<argument><expr><name pos:line="106" pos:column="40">ent</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="106" pos:column="45">
                <block pos:line="107" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="108" pos:column="21">entities</name><op:operator pos:line="108" pos:column="29">.</op:operator><name pos:line="108" pos:column="30">Add</name></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">ent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="109" pos:column="21">if <condition pos:line="109" pos:column="24">(<expr><name pos:line="109" pos:column="25">entityChanged</name> <op:operator pos:line="109" pos:column="39">!=</op:operator> <name pos:line="109" pos:column="42">null</name></expr>)</condition><then pos:line="109" pos:column="47">
                        <expr_stmt><expr><call><name pos:line="110" pos:column="25">entityChanged</name><argument_list pos:line="110" pos:column="38">(<argument><expr><call><name><name pos:line="110" pos:column="39">entities</name><op:operator pos:line="110" pos:column="47">.</op:operator><name pos:line="110" pos:column="48">ToList</name></name><argument_list pos:line="110" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                }</block></then></if>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="115" pos:column="9">public</specifier> <name pos:line="115" pos:column="16">void</name></type> <name pos:line="115" pos:column="21">RemoveEntity</name><parameter_list pos:line="115" pos:column="33">(<param><decl><type><name pos:line="115" pos:column="34">String</name></type> <name pos:line="115" pos:column="41">path</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="47">int</name></type> <name pos:line="115" pos:column="51">start</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="58">String</name></type> <name pos:line="115" pos:column="65">rawSource</name></decl></param>)</parameter_list>
        <block pos:line="116" pos:column="9">{
            <lock pos:line="117" pos:column="13">lock (<expr><name pos:line="117" pos:column="19">entities</name></expr>)
            <block pos:line="118" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="119" pos:column="17">int</name></type> <name pos:line="119" pos:column="21">index</name> <init pos:line="119" pos:column="27">= <expr><call><name><name pos:line="119" pos:column="29">entities</name><op:operator pos:line="119" pos:column="37">.</op:operator><name pos:line="119" pos:column="38">FindIndex</name></name><argument_list pos:line="119" pos:column="47">(<argument><expr><lambda><name pos:line="119" pos:column="48">e</name> <op:operator pos:line="119" pos:column="50">=&gt;</op:operator> <call><name><name pos:line="119" pos:column="53">e</name><op:operator pos:line="119" pos:column="54">.</op:operator><name pos:line="119" pos:column="55">Path</name><op:operator pos:line="119" pos:column="59">.</op:operator><name pos:line="119" pos:column="60">Equals</name></name><argument_list pos:line="119" pos:column="66">(<argument><expr><name pos:line="119" pos:column="67">path</name></expr></argument>)</argument_list></call> <op:operator pos:line="119" pos:column="73">&amp;&amp;</op:operator> <name><name pos:line="119" pos:column="76">e</name><op:operator pos:line="119" pos:column="77">.</op:operator><name pos:line="119" pos:column="78">StartLineNumber</name></name> <op:operator pos:line="119" pos:column="94">==</op:operator> <name pos:line="119" pos:column="97">start</name> 
                            <op:operator pos:line="120" pos:column="29">&amp;&amp;</op:operator> <call><name><name pos:line="120" pos:column="32">e</name><op:operator pos:line="120" pos:column="33">.</op:operator><name pos:line="120" pos:column="34">Rawsource</name><op:operator pos:line="120" pos:column="43">.</op:operator><name pos:line="120" pos:column="44">Equals</name></name><argument_list pos:line="120" pos:column="50">(<argument><expr><name pos:line="120" pos:column="51">rawSource</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="121" pos:column="17">entities</name><op:operator pos:line="121" pos:column="25">.</op:operator><name pos:line="121" pos:column="26">RemoveAt</name></name><argument_list pos:line="121" pos:column="34">(<argument><expr><name pos:line="121" pos:column="35">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name pos:line="122" pos:column="21">entityChanged</name> <op:operator pos:line="122" pos:column="35">!=</op:operator> <name pos:line="122" pos:column="38">null</name></expr>)</condition><then pos:line="122" pos:column="43">
                    <expr_stmt><expr><call><name pos:line="123" pos:column="21">entityChanged</name><argument_list pos:line="123" pos:column="34">(<argument><expr><call><name><name pos:line="123" pos:column="35">entities</name><op:operator pos:line="123" pos:column="43">.</op:operator><name pos:line="123" pos:column="44">ToList</name></name><argument_list pos:line="123" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="127" pos:column="9">public</specifier> <name pos:line="127" pos:column="16">void</name></type> <name pos:line="127" pos:column="21">Clear</name><parameter_list pos:line="127" pos:column="26">()</parameter_list>
        <block pos:line="128" pos:column="9">{
            <lock pos:line="129" pos:column="13">lock (<expr><name pos:line="129" pos:column="19">entities</name></expr>)
            <block pos:line="130" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="131" pos:column="17">entities</name><op:operator pos:line="131" pos:column="25">.</op:operator><name pos:line="131" pos:column="26">Clear</name></name><argument_list pos:line="131" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="132" pos:column="17">if<condition pos:line="132" pos:column="19">(<expr><name pos:line="132" pos:column="20">entityChanged</name><op:operator pos:line="132" pos:column="33">!=</op:operator><name pos:line="132" pos:column="35">null</name></expr>)</condition><then pos:line="132" pos:column="40">
                    <expr_stmt><expr><call><name pos:line="133" pos:column="21">entityChanged</name><argument_list pos:line="133" pos:column="34">(<argument><expr><call><name><name pos:line="133" pos:column="35">entities</name><op:operator pos:line="133" pos:column="43">.</op:operator><name pos:line="133" pos:column="44">ToList</name></name><argument_list pos:line="133" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></lock>
        }</block></function>
    }</block></class>

    <class><specifier pos:line="138" pos:column="5">internal</specifier> class <name pos:line="138" pos:column="20">HighlightWordTag</name> <super pos:line="138" pos:column="37">: <name pos:line="138" pos:column="39">TextMarkerTag</name></super>
    <block pos:line="139" pos:column="5">{
        <constructor><specifier pos:line="140" pos:column="9">public</specifier> <name pos:line="140" pos:column="16">HighlightWordTag</name><parameter_list pos:line="140" pos:column="32">()</parameter_list> <member_list pos:line="140" pos:column="35">: <call><name pos:line="140" pos:column="37">base</name><argument_list pos:line="140" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="42">"MarkerFormatDefinition/SandoSearchResult"</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="140" pos:column="86">{ }</block></constructor>
    }</block></class>

    <class><attribute pos:line="143" pos:column="5">[<expr><call><name pos:line="143" pos:column="6">Export</name><argument_list pos:line="143" pos:column="12">(<argument><expr><call><name pos:line="143" pos:column="13">typeof</name><argument_list pos:line="143" pos:column="19">(<argument><expr><name pos:line="143" pos:column="20">EditorFormatDefinition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute pos:line="144" pos:column="5">[<expr><call><name pos:line="144" pos:column="6">Name</name><argument_list pos:line="144" pos:column="10">(<argument><expr><lit:literal type="string" pos:line="144" pos:column="11">"MarkerFormatDefinition/SandoSearchResult"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute pos:line="145" pos:column="5">[<expr><call><name pos:line="145" pos:column="6">UserVisible</name><argument_list pos:line="145" pos:column="17">(<argument><expr><lit:literal type="boolean" pos:line="145" pos:column="18">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="146" pos:column="5">internal</specifier> class <name pos:line="146" pos:column="20">HighlightWordFormatDefinition</name> <super pos:line="146" pos:column="50">: <name pos:line="146" pos:column="52">MarkerFormatDefinition</name></super>
    <block pos:line="147" pos:column="5">{
        <constructor><specifier pos:line="148" pos:column="9">public</specifier> <name pos:line="148" pos:column="16">HighlightWordFormatDefinition</name><parameter_list pos:line="148" pos:column="45">()</parameter_list>
        <block pos:line="149" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="150" pos:column="13">this</name><op:operator pos:line="150" pos:column="17">.</op:operator><name pos:line="150" pos:column="18">BackgroundColor</name></name> <op:operator pos:line="150" pos:column="34">=</op:operator> <call><name><name pos:line="150" pos:column="36">ServiceLocator</name><op:operator pos:line="150" pos:column="50">.</op:operator><name><name pos:line="150" pos:column="51">Resolve</name><argument_list pos:line="150" pos:column="58">&lt;<argument><name pos:line="150" pos:column="59">SearchViewControl</name></argument>&gt;</argument_list></name></name><argument_list pos:line="150" pos:column="77">()</argument_list></call><op:operator pos:line="150" pos:column="79">.</op:operator><call><name pos:line="150" pos:column="80">GetHighlightColor</name><argument_list pos:line="150" pos:column="97">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="151" pos:column="13">this</name><op:operator pos:line="151" pos:column="17">.</op:operator><name pos:line="151" pos:column="18">ForegroundColor</name></name> <op:operator pos:line="151" pos:column="34">=</op:operator> <call><name><name pos:line="151" pos:column="36">ServiceLocator</name><op:operator pos:line="151" pos:column="50">.</op:operator><name><name pos:line="151" pos:column="51">Resolve</name><argument_list pos:line="151" pos:column="58">&lt;<argument><name pos:line="151" pos:column="59">SearchViewControl</name></argument>&gt;</argument_list></name></name><argument_list pos:line="151" pos:column="77">()</argument_list></call><op:operator pos:line="151" pos:column="79">.</op:operator><call><name pos:line="151" pos:column="80">GetHighlightBorderColor</name><argument_list pos:line="151" pos:column="103">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="152" pos:column="13">this</name><op:operator pos:line="152" pos:column="17">.</op:operator><name pos:line="152" pos:column="18">DisplayName</name></name> <op:operator pos:line="152" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="152" pos:column="32">"Highlight Word"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="153" pos:column="13">this</name><op:operator pos:line="153" pos:column="17">.</op:operator><name pos:line="153" pos:column="18">ZOrder</name></name> <op:operator pos:line="153" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="153" pos:column="27">5</lit:literal></expr>;</expr_stmt>
        }</block></constructor>
    }</block></class>

    <class><specifier pos:line="157" pos:column="5">internal</specifier> class <name pos:line="157" pos:column="20">HighlightWordTagger</name> <super pos:line="157" pos:column="40">: <name><name pos:line="157" pos:column="42">ITagger</name><argument_list pos:line="157" pos:column="49">&lt;<argument><name pos:line="157" pos:column="50">HighlightWordTag</name></argument>&gt;</argument_list></name></super>
    <block pos:line="158" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="159" pos:column="9">ITextView</name></type> <name pos:line="159" pos:column="19">View</name> <block pos:line="159" pos:column="24">{ <function_decl><name pos:line="159" pos:column="26">get</name>;</function_decl> <function_decl><name pos:line="159" pos:column="31">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="160" pos:column="9">ITextBuffer</name></type> <name pos:line="160" pos:column="21">SourceBuffer</name> <block pos:line="160" pos:column="34">{ <function_decl><name pos:line="160" pos:column="36">get</name>;</function_decl> <function_decl><name pos:line="160" pos:column="41">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="161" pos:column="9">ITextSearchService</name></type> <name pos:line="161" pos:column="28">TextSearchService</name> <block pos:line="161" pos:column="46">{ <function_decl><name pos:line="161" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="161" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="162" pos:column="9">ITextStructureNavigator</name></type> <name pos:line="162" pos:column="33">TextStructureNavigator</name> <block pos:line="162" pos:column="56">{ <function_decl><name pos:line="162" pos:column="58">get</name>;</function_decl> <function_decl><name pos:line="162" pos:column="63">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="163" pos:column="9">private</specifier> <specifier pos:line="163" pos:column="17">readonly</specifier> <name pos:line="163" pos:column="26">String</name></type> <name pos:line="163" pos:column="33">fileFullPath</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="165" pos:column="9">private</specifier> <name><name pos:line="165" pos:column="17">IEnumerable</name><argument_list pos:line="165" pos:column="28">&lt;<argument><name pos:line="165" pos:column="29">HighlightedEntity</name></argument>&gt;</argument_list></name></type> <name pos:line="165" pos:column="48">highlightedEntities</name></decl>;</decl_stmt> 
        <decl_stmt><decl><type><specifier pos:line="166" pos:column="9">private</specifier> <name pos:line="166" pos:column="17">NormalizedSnapshotSpanCollection</name></type> <name pos:line="166" pos:column="50">highlightedSpans</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="167" pos:column="9">private</specifier> <name pos:line="167" pos:column="17">object</name></type> <name pos:line="167" pos:column="24">updateLock</name> <init pos:line="167" pos:column="35">= <expr><op:operator pos:line="167" pos:column="37">new</op:operator> <call><name pos:line="167" pos:column="41">object</name><argument_list pos:line="167" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="169" pos:column="9">public</specifier> <name pos:line="169" pos:column="16">HighlightWordTagger</name><parameter_list pos:line="169" pos:column="35">(<param><decl><type><name pos:line="169" pos:column="36">ITextView</name></type> <name pos:line="169" pos:column="46">view</name></decl></param>, <param><decl><type><name pos:line="169" pos:column="52">ITextBuffer</name></type> <name pos:line="169" pos:column="64">sourceBuffer</name></decl></param>, <param><decl><type><name pos:line="169" pos:column="78">ITextSearchService</name></type> 
            <name pos:line="170" pos:column="13">textSearchService</name></decl></param>, <param><decl><type><name pos:line="170" pos:column="32">ITextStructureNavigator</name></type> <name pos:line="170" pos:column="56">textStructureNavigator</name></decl></param>)</parameter_list>
        <block pos:line="171" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="172" pos:column="13">this</name><op:operator pos:line="172" pos:column="17">.</op:operator><name pos:line="172" pos:column="18">View</name></name> <op:operator pos:line="172" pos:column="23">=</op:operator> <name pos:line="172" pos:column="25">view</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="173" pos:column="13">this</name><op:operator pos:line="173" pos:column="17">.</op:operator><name pos:line="173" pos:column="18">fileFullPath</name></name> <op:operator pos:line="173" pos:column="31">=</op:operator> <call><name pos:line="173" pos:column="33">GetFileFullPath</name><argument_list pos:line="173" pos:column="48">(<argument><expr><name pos:line="173" pos:column="49">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="174" pos:column="13">this</name><op:operator pos:line="174" pos:column="17">.</op:operator><name pos:line="174" pos:column="18">SourceBuffer</name></name> <op:operator pos:line="174" pos:column="31">=</op:operator> <name pos:line="174" pos:column="33">sourceBuffer</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="175" pos:column="13">this</name><op:operator pos:line="175" pos:column="17">.</op:operator><name pos:line="175" pos:column="18">TextSearchService</name></name> <op:operator pos:line="175" pos:column="36">=</op:operator> <name pos:line="175" pos:column="38">textSearchService</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="176" pos:column="13">this</name><op:operator pos:line="176" pos:column="17">.</op:operator><name pos:line="176" pos:column="18">TextStructureNavigator</name></name> <op:operator pos:line="176" pos:column="41">=</op:operator> <name pos:line="176" pos:column="43">textStructureNavigator</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="177" pos:column="13">this</name><op:operator pos:line="177" pos:column="17">.</op:operator><name pos:line="177" pos:column="18">highlightedEntities</name></name> <op:operator pos:line="177" pos:column="38">=</op:operator> <call><name><name pos:line="177" pos:column="40">Enumerable</name><op:operator pos:line="177" pos:column="50">.</op:operator><name><name pos:line="177" pos:column="51">Empty</name><argument_list pos:line="177" pos:column="56">&lt;<argument><name pos:line="177" pos:column="57">HighlightedEntity</name></argument>&gt;</argument_list></name></name><argument_list pos:line="177" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="178" pos:column="13">this</name><op:operator pos:line="178" pos:column="17">.</op:operator><name pos:line="178" pos:column="18">highlightedSpans</name></name> <op:operator pos:line="178" pos:column="35">=</op:operator> <op:operator pos:line="178" pos:column="37">new</op:operator> <call><name pos:line="178" pos:column="41">NormalizedSnapshotSpanCollection</name><argument_list pos:line="178" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="179" pos:column="13">HighlightedEntitySet</name><op:operator pos:line="179" pos:column="33">.</op:operator><name pos:line="179" pos:column="34">GetInstance</name></name><argument_list pos:line="179" pos:column="45">()</argument_list></call><op:operator pos:line="179" pos:column="47">.</op:operator><name pos:line="179" pos:column="48">entityChanged</name> <op:operator pos:line="179" pos:column="62">+=</op:operator> <name pos:line="179" pos:column="65">OnHighlightedEntityChanged</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="180" pos:column="13">this</name><op:operator pos:line="180" pos:column="17">.</op:operator><name pos:line="180" pos:column="18">View</name><op:operator pos:line="180" pos:column="22">.</op:operator><name pos:line="180" pos:column="23">Caret</name><op:operator pos:line="180" pos:column="28">.</op:operator><name pos:line="180" pos:column="29">PositionChanged</name></name> <op:operator pos:line="180" pos:column="45">+=</op:operator> <name pos:line="180" pos:column="48">CaretPositionChanged</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="181" pos:column="13">this</name><op:operator pos:line="181" pos:column="17">.</op:operator><name pos:line="181" pos:column="18">View</name><op:operator pos:line="181" pos:column="22">.</op:operator><name pos:line="181" pos:column="23">LayoutChanged</name></name> <op:operator pos:line="181" pos:column="37">+=</op:operator> <name pos:line="181" pos:column="40">ViewLayoutChanged</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="184" pos:column="9">private</specifier> <name pos:line="184" pos:column="17">void</name></type> <name pos:line="184" pos:column="22">ViewLayoutChanged</name><parameter_list pos:line="184" pos:column="39">(<param><decl><type><name pos:line="184" pos:column="40">object</name></type> <name pos:line="184" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="184" pos:column="55">TextViewLayoutChangedEventArgs</name></type> <name pos:line="184" pos:column="86">e</name></decl></param>)</parameter_list>
        <block pos:line="185" pos:column="9">{
            <if pos:line="186" pos:column="13">if <condition pos:line="186" pos:column="16">(<expr><name><name pos:line="186" pos:column="17">e</name><op:operator pos:line="186" pos:column="18">.</op:operator><name pos:line="186" pos:column="19">OldSnapshot</name></name> <op:operator pos:line="186" pos:column="31">!=</op:operator> <name><name pos:line="186" pos:column="34">e</name><op:operator pos:line="186" pos:column="35">.</op:operator><name pos:line="186" pos:column="36">NewSnapshot</name></name></expr>)</condition><then pos:line="186" pos:column="48">
            <block pos:line="187" pos:column="13">{
                <lock pos:line="188" pos:column="17">lock (<expr><name pos:line="188" pos:column="23">updateLock</name></expr>)
                <block pos:line="189" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="190" pos:column="21">this</name><op:operator pos:line="190" pos:column="25">.</op:operator><name pos:line="190" pos:column="26">highlightedSpans</name></name> <op:operator pos:line="190" pos:column="43">=</op:operator> <call><name pos:line="190" pos:column="45">SearchHighlightedSpans</name><argument_list pos:line="190" pos:column="67">(<argument><expr><name><name pos:line="190" pos:column="68">this</name><op:operator pos:line="190" pos:column="72">.</op:operator><name pos:line="190" pos:column="73">highlightedEntities</name></name></expr></argument>,
                        <argument><expr><name><name pos:line="191" pos:column="25">SourceBuffer</name><op:operator pos:line="191" pos:column="37">.</op:operator><name pos:line="191" pos:column="38">CurrentSnapshot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></lock>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="196" pos:column="9">private</specifier> <name pos:line="196" pos:column="17">void</name></type> <name pos:line="196" pos:column="22">CaretPositionChanged</name><parameter_list pos:line="196" pos:column="42">(<param><decl><type><name pos:line="196" pos:column="43">object</name></type> <name pos:line="196" pos:column="50">sender</name></decl></param>, <param><decl><type><name pos:line="196" pos:column="58">CaretPositionChangedEventArgs</name></type> <name pos:line="196" pos:column="88">e</name></decl></param>)</parameter_list>
        <block pos:line="197" pos:column="9">{
            <lock pos:line="198" pos:column="13">lock (<expr><name pos:line="198" pos:column="19">updateLock</name></expr>)
            <block pos:line="199" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="200" pos:column="17">this</name><op:operator pos:line="200" pos:column="21">.</op:operator><name pos:line="200" pos:column="22">highlightedSpans</name></name> <op:operator pos:line="200" pos:column="39">=</op:operator> <call><name pos:line="200" pos:column="41">SearchHighlightedSpans</name><argument_list pos:line="200" pos:column="63">(<argument><expr><name><name pos:line="200" pos:column="64">this</name><op:operator pos:line="200" pos:column="68">.</op:operator><name pos:line="200" pos:column="69">highlightedEntities</name></name></expr></argument>,
                    <argument><expr><name><name pos:line="201" pos:column="21">SourceBuffer</name><op:operator pos:line="201" pos:column="33">.</op:operator><name pos:line="201" pos:column="34">CurrentSnapshot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="205" pos:column="9">private</specifier> <name pos:line="205" pos:column="17">void</name></type> <name pos:line="205" pos:column="22">OnHighlightedEntityChanged</name><parameter_list pos:line="205" pos:column="48">(<param><decl><type><name><name pos:line="205" pos:column="49">IEnumerable</name><argument_list pos:line="205" pos:column="60">&lt;<argument><name pos:line="205" pos:column="61">HighlightedEntity</name></argument>&gt;</argument_list></name></type> <name pos:line="205" pos:column="80">entities</name></decl></param>)</parameter_list>
        <block pos:line="206" pos:column="9">{
            <lock pos:line="207" pos:column="13">lock (<expr><name pos:line="207" pos:column="19">updateLock</name></expr>)
            <block pos:line="208" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="209" pos:column="17">this</name><op:operator pos:line="209" pos:column="21">.</op:operator><name pos:line="209" pos:column="22">highlightedEntities</name></name> <op:operator pos:line="209" pos:column="42">=</op:operator> <call><name><name pos:line="209" pos:column="44">entities</name><op:operator pos:line="209" pos:column="52">.</op:operator><name pos:line="209" pos:column="53">Where</name></name><argument_list pos:line="209" pos:column="58">(<argument><expr><lambda><name pos:line="209" pos:column="59">e</name> <op:operator pos:line="209" pos:column="61">=&gt;</op:operator> <call><name><name pos:line="209" pos:column="64">e</name><op:operator pos:line="209" pos:column="65">.</op:operator><name pos:line="209" pos:column="66">Path</name><op:operator pos:line="209" pos:column="70">.</op:operator><name pos:line="209" pos:column="71">Equals</name></name><argument_list pos:line="209" pos:column="77">(<argument><expr><name pos:line="209" pos:column="78">fileFullPath</name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="92">StringComparison</name><op:operator pos:line="209" pos:column="108">.</op:operator><name pos:line="209" pos:column="109">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="210" pos:column="17">this</name><op:operator pos:line="210" pos:column="21">.</op:operator><name pos:line="210" pos:column="22">highlightedSpans</name></name> <op:operator pos:line="210" pos:column="39">=</op:operator> <call><name pos:line="210" pos:column="41">SearchHighlightedSpans</name><argument_list pos:line="210" pos:column="63">(<argument><expr><name><name pos:line="210" pos:column="64">this</name><op:operator pos:line="210" pos:column="68">.</op:operator><name pos:line="210" pos:column="69">highlightedEntities</name></name></expr></argument>,
                      <argument><expr><name><name pos:line="211" pos:column="23">SourceBuffer</name><op:operator pos:line="211" pos:column="35">.</op:operator><name pos:line="211" pos:column="36">CurrentSnapshot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></lock>
            <expr_stmt><expr><call><name pos:line="213" pos:column="13">TriggerTagChangedEvent</name><argument_list pos:line="213" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="216" pos:column="9">private</specifier> <name pos:line="216" pos:column="17">NormalizedSnapshotSpanCollection</name></type> <name pos:line="216" pos:column="50">SearchHighlightedSpans</name> <parameter_list pos:line="216" pos:column="73">(<param><decl><type><name><name pos:line="216" pos:column="74">IEnumerable</name><argument_list pos:line="216" pos:column="85">&lt;<argument><name pos:line="216" pos:column="86">HighlightedEntity</name></argument>&gt;</argument_list></name></type> 
            <name pos:line="217" pos:column="13">entities</name></decl></param>, <param><decl><type><name pos:line="217" pos:column="23">ITextSnapshot</name></type> <name pos:line="217" pos:column="37">snapshot</name></decl></param>)</parameter_list>
        <block pos:line="218" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="219" pos:column="13">var</name></type> <name pos:line="219" pos:column="17">highLightedSpans</name> <init pos:line="219" pos:column="34">= <expr><op:operator pos:line="219" pos:column="36">new</op:operator> <call><name><name pos:line="219" pos:column="40">List</name><argument_list pos:line="219" pos:column="44">&lt;<argument><name pos:line="219" pos:column="45">SnapshotSpan</name></argument>&gt;</argument_list></name><argument_list pos:line="219" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="220" pos:column="13">foreach (<init><decl><type><name pos:line="220" pos:column="22">var</name></type> <name pos:line="220" pos:column="26">entity</name> <range pos:line="220" pos:column="33">in <expr><name pos:line="220" pos:column="36">entities</name></expr></range></decl></init>)
            <block pos:line="221" pos:column="13">{
                <comment type="line" pos:line="222" pos:column="17">//var findData = new FindData(".*\n", snapshot);</comment>
                <comment type="line" pos:line="223" pos:column="17">//findData.FindOptions = FindOptions.UseRegularExpressions;</comment>
                <comment type="line" pos:line="224" pos:column="17">//var allLines = TextSearchService.FindAll(findData);</comment>

                <comment type="line" pos:line="226" pos:column="17">//highLightedSpans.AddRange(allLines.Where(l =&gt; entity.IsLineInEntity(l.Start.</comment>
                <comment type="line" pos:line="227" pos:column="17">//    GetContainingLine().LineNumber + 1)));</comment>

                <decl_stmt><decl><type><name pos:line="229" pos:column="17">string</name><index pos:line="229" pos:column="23">[]</index></type> <name pos:line="229" pos:column="26">keywords</name> <init pos:line="229" pos:column="35">= <expr><name><name pos:line="229" pos:column="37">entity</name><op:operator pos:line="229" pos:column="43">.</op:operator><name pos:line="229" pos:column="44">Keywords</name></name></expr></init></decl>;</decl_stmt>
                <foreach pos:line="230" pos:column="17">foreach(<init><decl><type><name pos:line="230" pos:column="25">string</name></type> <name pos:line="230" pos:column="32">keyword</name> <range pos:line="230" pos:column="40">in <expr><name pos:line="230" pos:column="43">keywords</name></expr></range></decl></init>) <block pos:line="230" pos:column="53">{
                    <decl_stmt><decl><type><name pos:line="231" pos:column="21">FindData</name></type> <name pos:line="231" pos:column="30">findData</name> <init pos:line="231" pos:column="39">= <expr><op:operator pos:line="231" pos:column="41">new</op:operator> <call><name pos:line="231" pos:column="45">FindData</name><argument_list pos:line="231" pos:column="53">(<argument><expr><name pos:line="231" pos:column="54">keyword</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="63">snapshot</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name><name pos:line="232" pos:column="21">findData</name><op:operator pos:line="232" pos:column="29">.</op:operator><name pos:line="232" pos:column="30">FindOptions</name></name> <op:operator pos:line="232" pos:column="42">=</op:operator> <name><name pos:line="232" pos:column="44">FindOptions</name><op:operator pos:line="232" pos:column="55">.</op:operator><name pos:line="232" pos:column="56">None</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="233" pos:column="21">highLightedSpans</name><op:operator pos:line="233" pos:column="37">.</op:operator><name pos:line="233" pos:column="38">AddRange</name></name><argument_list pos:line="233" pos:column="46">(<argument><expr><call><name><name pos:line="233" pos:column="47">TextSearchService</name><op:operator pos:line="233" pos:column="64">.</op:operator><name pos:line="233" pos:column="65">FindAll</name></name><argument_list pos:line="233" pos:column="72">(<argument><expr><name pos:line="233" pos:column="73">findData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>
            }</block></foreach>
            <return pos:line="236" pos:column="13">return <expr><op:operator pos:line="236" pos:column="20">new</op:operator> <call><name pos:line="236" pos:column="24">NormalizedSnapshotSpanCollection</name><argument_list pos:line="236" pos:column="56">(<argument><expr><name pos:line="236" pos:column="57">highLightedSpans</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>


        <decl_stmt><decl><type><specifier pos:line="240" pos:column="9">public</specifier> <specifier pos:line="240" pos:column="16">event</specifier> <name><name pos:line="240" pos:column="22">EventHandler</name><argument_list pos:line="240" pos:column="34">&lt;<argument><name pos:line="240" pos:column="35">SnapshotSpanEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="240" pos:column="58">TagsChanged</name></decl>;</decl_stmt>


        <function><type><specifier pos:line="243" pos:column="9">private</specifier> <name pos:line="243" pos:column="17">void</name></type> <name pos:line="243" pos:column="22">TriggerTagChangedEvent</name><parameter_list pos:line="243" pos:column="44">()</parameter_list>
        <block pos:line="244" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="245" pos:column="13">var</name></type> <name pos:line="245" pos:column="17">tempEvent</name> <init pos:line="245" pos:column="27">= <expr><name pos:line="245" pos:column="29">TagsChanged</name></expr></init></decl>;</decl_stmt>
            <if pos:line="246" pos:column="13">if <condition pos:line="246" pos:column="16">(<expr><name pos:line="246" pos:column="17">tempEvent</name> <op:operator pos:line="246" pos:column="27">!=</op:operator> <name pos:line="246" pos:column="30">null</name></expr>)</condition><then pos:line="246" pos:column="35">
            <block pos:line="247" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="248" pos:column="17">tempEvent</name><argument_list pos:line="248" pos:column="26">(<argument><expr><name pos:line="248" pos:column="27">this</name></expr></argument>, <argument><expr><op:operator pos:line="248" pos:column="33">new</op:operator> <call><name pos:line="248" pos:column="37">SnapshotSpanEventArgs</name><argument_list pos:line="248" pos:column="58">(<argument><expr><op:operator pos:line="248" pos:column="59">new</op:operator> <call><name pos:line="248" pos:column="63">SnapshotSpan</name><argument_list pos:line="248" pos:column="75">(<argument><expr><name><name pos:line="248" pos:column="76">SourceBuffer</name><op:operator pos:line="248" pos:column="88">.</op:operator><name pos:line="248" pos:column="89">CurrentSnapshot</name></name></expr></argument>,
                    <argument><expr><lit:literal type="number" pos:line="249" pos:column="21">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="249" pos:column="24">SourceBuffer</name><op:operator pos:line="249" pos:column="36">.</op:operator><name pos:line="249" pos:column="37">CurrentSnapshot</name><op:operator pos:line="249" pos:column="52">.</op:operator><name pos:line="249" pos:column="53">Length</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="253" pos:column="9">private</specifier> <name pos:line="253" pos:column="17">String</name></type> <name pos:line="253" pos:column="24">GetFileFullPath</name><parameter_list pos:line="253" pos:column="39">(<param><decl><type><name pos:line="253" pos:column="40">ITextView</name></type> <name pos:line="253" pos:column="50">textView</name></decl></param>)</parameter_list>
        <block pos:line="254" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="255" pos:column="13">ITextDocument</name></type> <name pos:line="255" pos:column="27">doc</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="256" pos:column="13">bool</name></type> <name pos:line="256" pos:column="18">success</name> <init pos:line="256" pos:column="26">= <expr><call><name><name pos:line="256" pos:column="28">textView</name><op:operator pos:line="256" pos:column="36">.</op:operator><name pos:line="256" pos:column="37">TextBuffer</name><op:operator pos:line="256" pos:column="47">.</op:operator><name pos:line="256" pos:column="48">Properties</name><op:operator pos:line="256" pos:column="58">.</op:operator><name><name pos:line="256" pos:column="59">TryGetProperty</name><argument_list pos:line="256" pos:column="73">&lt;<argument><name pos:line="256" pos:column="74">ITextDocument</name></argument>&gt;</argument_list></name></name><argument_list pos:line="256" pos:column="88">(<argument><expr><call><name pos:line="256" pos:column="89">typeof</name><argument_list pos:line="256" pos:column="95">(<argument><expr><name pos:line="256" pos:column="96">ITextDocument</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr pos:line="256" pos:column="112">out <name pos:line="256" pos:column="116">doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="257" pos:column="13">return <expr><name pos:line="257" pos:column="20">success</name> <op:operator pos:line="257" pos:column="28">?</op:operator> <name><name pos:line="257" pos:column="30">doc</name><op:operator pos:line="257" pos:column="33">.</op:operator><name pos:line="257" pos:column="34">FilePath</name></name> <op:operator pos:line="257" pos:column="43">:</op:operator> <lit:literal type="string" pos:line="257" pos:column="45">""</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="260" pos:column="9">public</specifier> <name><name pos:line="260" pos:column="16">IEnumerable</name><argument_list pos:line="260" pos:column="27">&lt;<argument><name><name pos:line="260" pos:column="28">ITagSpan</name><argument_list pos:line="260" pos:column="36">&lt;<argument><name pos:line="260" pos:column="37">HighlightWordTag</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="260" pos:column="56">GetTags</name><parameter_list pos:line="260" pos:column="63">(<param><decl><type><name pos:line="260" pos:column="64">NormalizedSnapshotSpanCollection</name></type> <name pos:line="260" pos:column="97">spans</name></decl></param>)</parameter_list>
        <block pos:line="261" pos:column="9">{
            <if pos:line="262" pos:column="13">if<condition pos:line="262" pos:column="15">(<expr><name><name pos:line="262" pos:column="16">spans</name><op:operator pos:line="262" pos:column="21">.</op:operator><name pos:line="262" pos:column="22">Count</name></name> <op:operator pos:line="262" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="262" pos:column="31">0</lit:literal> <op:operator pos:line="262" pos:column="33">||</op:operator> <op:operator pos:line="262" pos:column="36">!</op:operator><call><name><name pos:line="262" pos:column="37">highlightedSpans</name><op:operator pos:line="262" pos:column="53">.</op:operator><name pos:line="262" pos:column="54">Any</name></name><argument_list pos:line="262" pos:column="57">()</argument_list></call></expr>)</condition><then pos:line="262" pos:column="60">
                <break><specifier pos:line="263" pos:column="17">yield</specifier> break;</break></then></if>

            <decl_stmt><decl><type><name pos:line="265" pos:column="13">var</name></type> <name pos:line="265" pos:column="17">highSpans</name> <init pos:line="265" pos:column="27">= <expr><name><name pos:line="265" pos:column="29">this</name><op:operator pos:line="265" pos:column="33">.</op:operator><name pos:line="265" pos:column="34">highlightedSpans</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="266" pos:column="13">if <condition pos:line="266" pos:column="16">(<expr><name><name pos:line="266" pos:column="17">highSpans</name><index pos:line="266" pos:column="26">[<expr><lit:literal type="number" pos:line="266" pos:column="27">0</lit:literal></expr>]</index></name><op:operator pos:line="266" pos:column="29">.</op:operator><name pos:line="266" pos:column="30">Snapshot</name> <op:operator pos:line="266" pos:column="39">!=</op:operator> <name><name pos:line="266" pos:column="42">spans</name><index pos:line="266" pos:column="47">[<expr><lit:literal type="number" pos:line="266" pos:column="48">0</lit:literal></expr>]</index></name><op:operator pos:line="266" pos:column="50">.</op:operator><name pos:line="266" pos:column="51">Snapshot</name></expr>)</condition><then pos:line="266" pos:column="60">
            <block pos:line="267" pos:column="13">{
                <expr_stmt><expr><name pos:line="268" pos:column="17">highSpans</name> <op:operator pos:line="268" pos:column="27">=</op:operator> <op:operator pos:line="268" pos:column="29">new</op:operator> <call><name pos:line="268" pos:column="33">NormalizedSnapshotSpanCollection</name><argument_list pos:line="268" pos:column="65">(<argument><expr><call><name><name pos:line="268" pos:column="66">highSpans</name><op:operator pos:line="268" pos:column="75">.</op:operator><name pos:line="268" pos:column="76">Select</name></name><argument_list pos:line="268" pos:column="82">(<argument><expr><lambda><name pos:line="268" pos:column="83">s</name> <op:operator pos:line="268" pos:column="85">=&gt;</op:operator> 
                    <call><name><name pos:line="269" pos:column="21">s</name><op:operator pos:line="269" pos:column="22">.</op:operator><name pos:line="269" pos:column="23">TranslateTo</name></name><argument_list pos:line="269" pos:column="34">(<argument><expr><name><name pos:line="269" pos:column="35">spans</name><index pos:line="269" pos:column="40">[<expr><lit:literal type="number" pos:line="269" pos:column="41">0</lit:literal></expr>]</index></name><op:operator pos:line="269" pos:column="43">.</op:operator><name pos:line="269" pos:column="44">Snapshot</name></expr></argument>, <argument><expr><name><name pos:line="269" pos:column="54">SpanTrackingMode</name><op:operator pos:line="269" pos:column="70">.</op:operator><name pos:line="269" pos:column="71">EdgeExclusive</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <foreach pos:line="272" pos:column="13">foreach (<init><decl><type><name pos:line="272" pos:column="22">SnapshotSpan</name></type> <name pos:line="272" pos:column="35">span</name> <range pos:line="272" pos:column="40">in <expr><call><name><name pos:line="272" pos:column="43">NormalizedSnapshotSpanCollection</name><op:operator pos:line="272" pos:column="75">.</op:operator><name pos:line="272" pos:column="76">Overlap</name></name><argument_list pos:line="272" pos:column="83">(<argument><expr><name pos:line="272" pos:column="84">spans</name></expr></argument>, <argument><expr><name pos:line="272" pos:column="91">highSpans</name></expr></argument>)</argument_list></call></expr></range></decl></init>)
            <block pos:line="273" pos:column="13">{
                <return><specifier pos:line="274" pos:column="17">yield</specifier> return <expr><op:operator pos:line="274" pos:column="30">new</op:operator> <call><name><name pos:line="274" pos:column="34">TagSpan</name><argument_list pos:line="274" pos:column="41">&lt;<argument><name pos:line="274" pos:column="42">HighlightWordTag</name></argument>&gt;</argument_list></name><argument_list pos:line="274" pos:column="59">(<argument><expr><name pos:line="274" pos:column="60">span</name></expr></argument>, <argument><expr><op:operator pos:line="274" pos:column="66">new</op:operator> <call><name pos:line="274" pos:column="70">HighlightWordTag</name><argument_list pos:line="274" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
            }</block></foreach>
        }</block></function>
    }</block></class>

    <class><attribute pos:line="279" pos:column="5">[<expr><call><name pos:line="279" pos:column="6">Export</name><argument_list pos:line="279" pos:column="12">(<argument><expr><call><name pos:line="279" pos:column="13">typeof</name><argument_list pos:line="279" pos:column="19">(<argument><expr><name pos:line="279" pos:column="20">IViewTaggerProvider</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute pos:line="280" pos:column="5">[<expr><call><name pos:line="280" pos:column="6">ContentType</name><argument_list pos:line="280" pos:column="17">(<argument><expr><lit:literal type="string" pos:line="280" pos:column="18">"text"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute pos:line="281" pos:column="5">[<expr><call><name pos:line="281" pos:column="6">TagType</name><argument_list pos:line="281" pos:column="13">(<argument><expr><call><name pos:line="281" pos:column="14">typeof</name><argument_list pos:line="281" pos:column="20">(<argument><expr><name pos:line="281" pos:column="21">TextMarkerTag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="282" pos:column="5">internal</specifier> class <name pos:line="282" pos:column="20">HighlightWordTaggerProvider</name> <super pos:line="282" pos:column="48">: <name pos:line="282" pos:column="50">IViewTaggerProvider</name></super>
    <block pos:line="283" pos:column="5">{
        <decl_stmt><decl><type><attribute pos:line="284" pos:column="9">[<expr><name pos:line="284" pos:column="10">Import</name></expr>]</attribute>
        <specifier pos:line="285" pos:column="9">internal</specifier> <name pos:line="285" pos:column="18">ITextSearchService</name></type> <name pos:line="285" pos:column="37">TextSearchService</name> <block pos:line="285" pos:column="55">{ <function_decl><name pos:line="285" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="285" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><attribute pos:line="287" pos:column="9">[<expr><name pos:line="287" pos:column="10">Import</name></expr>]</attribute>
        <specifier pos:line="288" pos:column="9">internal</specifier> <name pos:line="288" pos:column="18">ITextStructureNavigatorSelectorService</name></type> <name pos:line="288" pos:column="57">TextStructureNavigatorSelector</name> <block pos:line="288" pos:column="88">{ <function_decl><name pos:line="288" pos:column="90">get</name>;</function_decl> <function_decl><name pos:line="288" pos:column="95">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="290" pos:column="9">public</specifier> <name><name pos:line="290" pos:column="16">ITagger</name><argument_list pos:line="290" pos:column="23">&lt;<argument><name pos:line="290" pos:column="24">T</name></argument>&gt;</argument_list></name></type> <name><name pos:line="290" pos:column="27">CreateTagger</name><argument_list pos:line="290" pos:column="39">&lt;<argument><name pos:line="290" pos:column="40">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="290" pos:column="42">(<param><decl><type><name pos:line="290" pos:column="43">ITextView</name></type> <name pos:line="290" pos:column="53">textView</name></decl></param>, <param><decl><type><name pos:line="290" pos:column="63">ITextBuffer</name></type> <name pos:line="290" pos:column="75">buffer</name></decl></param>)</parameter_list> <where pos:line="290" pos:column="83">where <name pos:line="290" pos:column="89">T</name> : <name pos:line="290" pos:column="93">ITag</name></where>
        <block pos:line="291" pos:column="9">{
            <comment type="line" pos:line="292" pos:column="13">//provide highlighting only on the top buffer </comment>
            <if pos:line="293" pos:column="13">if <condition pos:line="293" pos:column="16">(<expr><name><name pos:line="293" pos:column="17">textView</name><op:operator pos:line="293" pos:column="25">.</op:operator><name pos:line="293" pos:column="26">TextBuffer</name></name> <op:operator pos:line="293" pos:column="37">!=</op:operator> <name pos:line="293" pos:column="40">buffer</name></expr>)</condition><then pos:line="293" pos:column="47">
                <return pos:line="294" pos:column="17">return <expr><name pos:line="294" pos:column="24">null</name></expr>;</return></then></if>

            <decl_stmt><decl><type><name pos:line="296" pos:column="13">ITextStructureNavigator</name></type> <name pos:line="296" pos:column="37">textStructureNavigator</name> <init pos:line="296" pos:column="60">=
                <expr><call><name><name pos:line="297" pos:column="17">TextStructureNavigatorSelector</name><op:operator pos:line="297" pos:column="47">.</op:operator><name pos:line="297" pos:column="48">GetTextStructureNavigator</name></name><argument_list pos:line="297" pos:column="73">(<argument><expr><name pos:line="297" pos:column="74">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="299" pos:column="13">return <expr><op:operator pos:line="299" pos:column="20">new</op:operator> <call><name pos:line="299" pos:column="24">HighlightWordTagger</name><argument_list pos:line="299" pos:column="43">(<argument><expr><name pos:line="299" pos:column="44">textView</name></expr></argument>, <argument><expr><name pos:line="299" pos:column="54">buffer</name></expr></argument>, <argument><expr><name pos:line="299" pos:column="62">TextSearchService</name></expr></argument>, <argument><expr><name pos:line="299" pos:column="81">textStructureNavigator</name></expr></argument>)</argument_list></call> <op:operator pos:line="299" pos:column="105">as</op:operator> <name><name pos:line="299" pos:column="108">ITagger</name><argument_list pos:line="299" pos:column="115">&lt;<argument><name pos:line="299" pos:column="116">T</name></argument>&gt;</argument_list></name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
