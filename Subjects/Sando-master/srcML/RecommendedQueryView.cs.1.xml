<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\View\RecommendedQueryView.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Threading</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Windows</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Windows</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Controls</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Windows</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">Documents</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Windows</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">Media</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">Core</name><op:operator pos:line="9" pos:column="17">.</op:operator><name pos:line="9" pos:column="18">Logging</name><op:operator pos:line="9" pos:column="25">.</op:operator><name pos:line="9" pos:column="26">Events</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">Core</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">QueryRefomers</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Core</name><op:operator pos:line="11" pos:column="17">.</op:operator><name pos:line="11" pos:column="18">Tools</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">Recommender</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">UI</name><op:operator pos:line="14" pos:column="15">.</op:operator><name pos:line="14" pos:column="16">Actions</name></name>;</using>

<namespace pos:line="16" pos:column="1">namespace <name><name pos:line="16" pos:column="11">Sando</name><op:operator pos:line="16" pos:column="16">.</op:operator><name pos:line="16" pos:column="17">UI</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">View</name></name>
<block pos:line="17" pos:column="1">{
    <class><specifier pos:line="18" pos:column="5">public</specifier> <specifier pos:line="18" pos:column="12">partial</specifier> class <name pos:line="18" pos:column="26">SearchViewControl</name>
    <block pos:line="19" pos:column="5">{
        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">UpdateRecommendedQueries</name><parameter_list pos:line="20" pos:column="45">(<param><decl><type><name><name pos:line="20" pos:column="46">IQueryable</name><argument_list pos:line="20" pos:column="56">&lt;<argument><name pos:line="20" pos:column="57">String</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="65">queries</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">queries</name> <op:operator pos:line="22" pos:column="21">=</op:operator> <call><name pos:line="22" pos:column="23">SortRecommendedQueriesInUI</name><argument_list pos:line="22" pos:column="49">(<argument><expr><call><name pos:line="22" pos:column="50">ControlRecommendedQueriesCount</name><argument_list pos:line="22" pos:column="80">(<argument><expr><name pos:line="22" pos:column="81">queries</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name><name pos:line="23" pos:column="17">Thread</name><op:operator pos:line="23" pos:column="23">.</op:operator><name pos:line="23" pos:column="24">CurrentThread</name></name> <op:operator pos:line="23" pos:column="38">==</op:operator> <name><name pos:line="23" pos:column="41">Dispatcher</name><op:operator pos:line="23" pos:column="51">.</op:operator><name pos:line="23" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="23" pos:column="59">
            <block pos:line="24" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">InternalUpdateRecommendedQueries</name><argument_list pos:line="25" pos:column="49">(<argument><expr><name pos:line="25" pos:column="50">queries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="27" pos:column="13">else
            <block pos:line="28" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="29" pos:column="17">Dispatcher</name><op:operator pos:line="29" pos:column="27">.</op:operator><name pos:line="29" pos:column="28">Invoke</name></name><argument_list pos:line="29" pos:column="34">(<argument><expr><call pos:line="29" pos:column="35">(<name pos:line="29" pos:column="36">Action</name>)<argument_list pos:line="29" pos:column="43">(<argument><expr><lambda><parameter_list pos:line="29" pos:column="44">()</parameter_list> <op:operator pos:line="29" pos:column="47">=&gt;</op:operator>
                    <call><name pos:line="30" pos:column="21">InternalUpdateRecommendedQueries</name><argument_list pos:line="30" pos:column="53">(<argument><expr><name pos:line="30" pos:column="54">queries</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="34" pos:column="9">private</specifier> <specifier pos:line="34" pos:column="17">static</specifier> <name><name pos:line="34" pos:column="24">IEnumerable</name><argument_list pos:line="34" pos:column="35">&lt;<argument><name pos:line="34" pos:column="36">string</name></argument>&gt;</argument_list></name></type> <name pos:line="34" pos:column="44">ControlRecommendedQueriesCount</name><parameter_list pos:line="34" pos:column="74">(<param><decl><type><name><name pos:line="34" pos:column="75">IEnumerable</name><argument_list pos:line="34" pos:column="86">&lt;<argument><name pos:line="34" pos:column="87">string</name></argument>&gt;</argument_list></name></type> <name pos:line="34" pos:column="95">queries</name></decl></param>)</parameter_list>
        <block pos:line="35" pos:column="9">{
            <return pos:line="36" pos:column="13">return <expr><call><name><name pos:line="36" pos:column="20">queries</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">TrimIfOverlyLong</name></name><argument_list pos:line="36" pos:column="44">(<argument><expr><name><name pos:line="36" pos:column="45">QuerySuggestionConfigurations</name><op:operator pos:line="36" pos:column="74">.</op:operator>
                <name pos:line="37" pos:column="17">MAXIMUM_RECOMMENDED_QUERIES_IN_USER_INTERFACE</name></name></expr></argument>)</argument_list></call><op:operator pos:line="37" pos:column="63">.</op:operator><call><name pos:line="37" pos:column="64">AsQueryable</name><argument_list pos:line="37" pos:column="75">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="40" pos:column="9">private</specifier> <name><name pos:line="40" pos:column="17">IQueryable</name><argument_list pos:line="40" pos:column="27">&lt;<argument><name pos:line="40" pos:column="28">string</name></argument>&gt;</argument_list></name></type> <name pos:line="40" pos:column="36">SortRecommendedQueriesInUI</name><parameter_list pos:line="40" pos:column="62">(<param><decl><type><name><name pos:line="40" pos:column="63">IEnumerable</name><argument_list pos:line="40" pos:column="74">&lt;<argument><name pos:line="40" pos:column="75">string</name></argument>&gt;</argument_list></name></type> <name pos:line="40" pos:column="83">queries</name></decl></param>)</parameter_list>
        <block pos:line="41" pos:column="9">{
            <return pos:line="42" pos:column="13">return <expr><call><name><name pos:line="42" pos:column="20">queries</name><op:operator pos:line="42" pos:column="27">.</op:operator><name pos:line="42" pos:column="28">OrderBy</name></name><argument_list pos:line="42" pos:column="35">(<argument><expr><lambda><name pos:line="42" pos:column="36">q</name> <op:operator pos:line="42" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="42" pos:column="41">q</name><op:operator pos:line="42" pos:column="42">.</op:operator><name pos:line="42" pos:column="43">Split</name></name><argument_list pos:line="42" pos:column="48">()</argument_list></call><op:operator pos:line="42" pos:column="50">.</op:operator><call><name pos:line="42" pos:column="51">Count</name><argument_list pos:line="42" pos:column="56">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="59">.</op:operator><call><name pos:line="42" pos:column="60">AsQueryable</name><argument_list pos:line="42" pos:column="71">()</argument_list></call></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="46" pos:column="9">private</specifier> <name pos:line="46" pos:column="17">void</name></type> <name pos:line="46" pos:column="22">InternalUpdateRecommendedQueries</name><parameter_list pos:line="46" pos:column="54">(<param><decl><type><name><name pos:line="46" pos:column="55">IEnumerable</name><argument_list pos:line="46" pos:column="66">&lt;<argument><name pos:line="46" pos:column="67">string</name></argument>&gt;</argument_list></name></type> <name pos:line="46" pos:column="75">quries</name></decl></param>)</parameter_list>
        <block pos:line="47" pos:column="9">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">quries</name> <op:operator pos:line="48" pos:column="20">=</op:operator> <call><name><name pos:line="48" pos:column="22">quries</name><op:operator pos:line="48" pos:column="28">.</op:operator><name pos:line="48" pos:column="29">ToList</name></name><argument_list pos:line="48" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">RecommendedQueryTextBlock</name><op:operator pos:line="49" pos:column="38">.</op:operator><name pos:line="49" pos:column="39">Inlines</name><op:operator pos:line="49" pos:column="46">.</op:operator><name pos:line="49" pos:column="47">Clear</name></name><argument_list pos:line="49" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">RecommendedQueryTextBlock</name><op:operator pos:line="50" pos:column="38">.</op:operator><name pos:line="50" pos:column="39">Inlines</name><op:operator pos:line="50" pos:column="46">.</op:operator><name pos:line="50" pos:column="47">Add</name></name><argument_list pos:line="50" pos:column="50">(<argument><expr><call><name><name pos:line="50" pos:column="51">quries</name><op:operator pos:line="50" pos:column="57">.</op:operator><name pos:line="50" pos:column="58">Any</name></name><argument_list pos:line="50" pos:column="61">()</argument_list></call> <op:operator pos:line="50" pos:column="64">?</op:operator> <lit:literal type="string" pos:line="50" pos:column="66">"Search instead for: "</lit:literal> <op:operator pos:line="50" pos:column="89">:</op:operator> <lit:literal type="string" pos:line="50" pos:column="91">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">var</name></type> <name pos:line="51" pos:column="17">toRemoveList</name> <init pos:line="51" pos:column="30">= <expr><op:operator pos:line="51" pos:column="32">new</op:operator> <call><name><name pos:line="51" pos:column="36">List</name><argument_list pos:line="51" pos:column="40">&lt;<argument><name pos:line="51" pos:column="41">string</name></argument>&gt;</argument_list></name><argument_list pos:line="51" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">toRemoveList</name><op:operator pos:line="52" pos:column="25">.</op:operator><name pos:line="52" pos:column="26">AddRange</name></name><argument_list pos:line="52" pos:column="34">(<argument><expr><call><name><name pos:line="52" pos:column="35">searchBox</name><op:operator pos:line="52" pos:column="44">.</op:operator><name pos:line="52" pos:column="45">Text</name><op:operator pos:line="52" pos:column="49">.</op:operator><name pos:line="52" pos:column="50">Split</name></name><argument_list pos:line="52" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">int</name></type> <name pos:line="53" pos:column="17">index</name> <init pos:line="53" pos:column="23">= <expr><lit:literal type="number" pos:line="53" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
            <foreach pos:line="54" pos:column="13">foreach (<init><decl><type><name pos:line="54" pos:column="22">string</name></type> <name pos:line="54" pos:column="29">query</name> <range pos:line="54" pos:column="35">in <expr><name pos:line="54" pos:column="38">quries</name></expr></range></decl></init>)
            <block pos:line="55" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="56" pos:column="17">var</name></type> <name pos:line="56" pos:column="21">hyperlink</name> <init pos:line="56" pos:column="31">= <expr><op:operator pos:line="56" pos:column="33">new</op:operator> <call><name pos:line="56" pos:column="37">SandoQueryHyperLink</name><argument_list pos:line="56" pos:column="56">(<argument><expr><op:operator pos:line="56" pos:column="57">new</op:operator> <call><name pos:line="56" pos:column="61">Run</name><argument_list pos:line="56" pos:column="64">(<argument><expr><call><name pos:line="56" pos:column="65">RemoveDuplicateTerms</name><argument_list pos:line="56" pos:column="85">(<argument><expr><name pos:line="56" pos:column="86">query</name></expr></argument>, 
                    <argument><expr><name pos:line="57" pos:column="21">toRemoveList</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="37">query</name></expr></argument>, <argument><expr><name pos:line="57" pos:column="44">index</name> <op:operator pos:line="57" pos:column="50">++</op:operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>                
                <expr_stmt><expr><name><name pos:line="58" pos:column="17">hyperlink</name><op:operator pos:line="58" pos:column="26">.</op:operator><name pos:line="58" pos:column="27">Click</name></name> <op:operator pos:line="58" pos:column="33">+=</op:operator> <name pos:line="58" pos:column="36">RecommendedQueryOnClick</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="59" pos:column="17">RecommendedQueryTextBlock</name><op:operator pos:line="59" pos:column="42">.</op:operator><name pos:line="59" pos:column="43">Inlines</name><op:operator pos:line="59" pos:column="50">.</op:operator><name pos:line="59" pos:column="51">Add</name></name><argument_list pos:line="59" pos:column="54">(<argument><expr><name pos:line="59" pos:column="55">hyperlink</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="60" pos:column="17">RecommendedQueryTextBlock</name><op:operator pos:line="60" pos:column="42">.</op:operator><name pos:line="60" pos:column="43">Inlines</name><op:operator pos:line="60" pos:column="50">.</op:operator><name pos:line="60" pos:column="51">Add</name></name><argument_list pos:line="60" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="55">"  "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="64" pos:column="9">private</specifier> <name pos:line="64" pos:column="17">string</name></type> <name pos:line="64" pos:column="24">RemoveDuplicateTerms</name><parameter_list pos:line="64" pos:column="44">(<param><decl><type><name pos:line="64" pos:column="45">string</name></type> <name pos:line="64" pos:column="52">query</name></decl></param>, <param><decl><type><name><name pos:line="64" pos:column="59">List</name><argument_list pos:line="64" pos:column="63">&lt;<argument><name pos:line="64" pos:column="64">string</name></argument>&gt;</argument_list></name></type> <name pos:line="64" pos:column="72">toRemoveList</name></decl></param>)</parameter_list>
        <block pos:line="65" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">var</name></type> <name pos:line="66" pos:column="17">addedTerms</name> <init pos:line="66" pos:column="28">= <expr><call><name><name pos:line="66" pos:column="30">query</name><op:operator pos:line="66" pos:column="35">.</op:operator><name pos:line="66" pos:column="36">Split</name></name><argument_list pos:line="66" pos:column="41">()</argument_list></call><op:operator pos:line="66" pos:column="43">.</op:operator><call><name pos:line="66" pos:column="44">Except</name><argument_list pos:line="66" pos:column="50">(<argument><expr><name pos:line="66" pos:column="51">toRemoveList</name></expr></argument>, 
                <argument><expr><op:operator pos:line="67" pos:column="17">new</op:operator> <call><name pos:line="67" pos:column="21">StringEqualityComparer</name><argument_list pos:line="67" pos:column="43">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="67" pos:column="46">.</op:operator><call><name pos:line="67" pos:column="47">ToArray</name><argument_list pos:line="67" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">toRemoveList</name><op:operator pos:line="68" pos:column="25">.</op:operator><name pos:line="68" pos:column="26">AddRange</name></name><argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">addedTerms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><call><name><name pos:line="69" pos:column="20">addedTerms</name><op:operator pos:line="69" pos:column="30">.</op:operator><name pos:line="69" pos:column="31">Any</name></name><argument_list pos:line="69" pos:column="34">()</argument_list></call> <op:operator pos:line="69" pos:column="37">?</op:operator> <call><name><name pos:line="69" pos:column="39">addedTerms</name><op:operator pos:line="69" pos:column="49">.</op:operator><name pos:line="69" pos:column="50">Aggregate</name></name><argument_list pos:line="69" pos:column="59">(<argument><expr><lambda><parameter_list pos:line="69" pos:column="60">(<param><decl><name pos:line="69" pos:column="61">t1</name></decl></param>, <param><decl><name pos:line="69" pos:column="65">t2</name></decl></param>)</parameter_list> <op:operator pos:line="69" pos:column="69">=&gt;</op:operator> <name pos:line="69" pos:column="72">t1</name> <op:operator pos:line="69" pos:column="75">+</op:operator> <lit:literal type="string" pos:line="69" pos:column="77">" "</lit:literal> <op:operator pos:line="69" pos:column="81">+</op:operator> <name pos:line="69" pos:column="83">t2</name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="69" pos:column="86">.</op:operator>
                <call><name pos:line="70" pos:column="17">Trim</name><argument_list pos:line="70" pos:column="21">()</argument_list></call> <op:operator pos:line="70" pos:column="24">:</op:operator> <name><name pos:line="70" pos:column="26">string</name><op:operator pos:line="70" pos:column="32">.</op:operator><name pos:line="70" pos:column="33">Empty</name></name></expr>;</return>
        }</block></function>


        <class><specifier pos:line="74" pos:column="9">private</specifier> class <name pos:line="74" pos:column="23">StringEqualityComparer</name> <super pos:line="74" pos:column="46">: <name><name pos:line="74" pos:column="48">IEqualityComparer</name><argument_list pos:line="74" pos:column="65">&lt;<argument><name pos:line="74" pos:column="66">string</name></argument>&gt;</argument_list></name></super>
        <block pos:line="75" pos:column="9">{
            <function><type><specifier pos:line="76" pos:column="13">public</specifier> <name pos:line="76" pos:column="20">bool</name></type> <name pos:line="76" pos:column="25">Equals</name><parameter_list pos:line="76" pos:column="31">(<param><decl><type><name pos:line="76" pos:column="32">string</name></type> <name pos:line="76" pos:column="39">x</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="42">string</name></type> <name pos:line="76" pos:column="49">y</name></decl></param>)</parameter_list>
            <block pos:line="77" pos:column="13">{
                <return pos:line="78" pos:column="17">return <expr><call><name><name pos:line="78" pos:column="24">x</name><op:operator pos:line="78" pos:column="25">.</op:operator><name pos:line="78" pos:column="26">Equals</name></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">y</name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="36">StringComparison</name><op:operator pos:line="78" pos:column="52">.</op:operator><name pos:line="78" pos:column="53">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>

            <function><type><specifier pos:line="81" pos:column="13">public</specifier> <name pos:line="81" pos:column="20">int</name></type> <name pos:line="81" pos:column="24">GetHashCode</name><parameter_list pos:line="81" pos:column="35">(<param><decl><type><name pos:line="81" pos:column="36">string</name></type> <name pos:line="81" pos:column="43">obj</name></decl></param>)</parameter_list>
            <block pos:line="82" pos:column="13">{
                <return pos:line="83" pos:column="17">return <expr><lit:literal type="number" pos:line="83" pos:column="24">0</lit:literal></expr>;</return>
            }</block></function>
        }</block></class>

        <class><specifier pos:line="87" pos:column="9">private</specifier> class <name pos:line="87" pos:column="23">SandoQueryHyperLink</name> <super pos:line="87" pos:column="43">: <name pos:line="87" pos:column="45">Hyperlink</name></super>
        <block pos:line="88" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="89" pos:column="13">public</specifier> <name pos:line="89" pos:column="20">String</name></type> <name pos:line="89" pos:column="27">Query</name> <block pos:line="89" pos:column="33">{ <function_decl><specifier pos:line="89" pos:column="35">private</specifier> <name pos:line="89" pos:column="43">set</name>;</function_decl> <function_decl><name pos:line="89" pos:column="48">get</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="90" pos:column="13">public</specifier> <name pos:line="90" pos:column="20">int</name></type> <name pos:line="90" pos:column="24">Index</name> <block pos:line="90" pos:column="30">{ <function_decl><specifier pos:line="90" pos:column="32">private</specifier> <name pos:line="90" pos:column="40">set</name>;</function_decl> <function_decl><name pos:line="90" pos:column="45">get</name>;</function_decl> }</block></decl></decl_stmt>

            <constructor><specifier pos:line="92" pos:column="13">internal</specifier> <name pos:line="92" pos:column="22">SandoQueryHyperLink</name><parameter_list pos:line="92" pos:column="41">(<param><decl><type><name pos:line="92" pos:column="42">Run</name></type> <name pos:line="92" pos:column="46">run</name></decl></param>, <param><decl><type><name pos:line="92" pos:column="51">String</name></type> <name pos:line="92" pos:column="58">query</name></decl></param>, <param><decl><type><name pos:line="92" pos:column="65">int</name></type> <name pos:line="92" pos:column="69">index</name></decl></param>)</parameter_list>
                <member_list pos:line="93" pos:column="17">: <call><name pos:line="93" pos:column="19">base</name><argument_list pos:line="93" pos:column="23">(<argument><expr><name pos:line="93" pos:column="24">run</name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="94" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="95" pos:column="17">this</name><op:operator pos:line="95" pos:column="21">.</op:operator><name pos:line="95" pos:column="22">Query</name></name> <op:operator pos:line="95" pos:column="28">=</op:operator> <name pos:line="95" pos:column="30">query</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="96" pos:column="17">this</name><op:operator pos:line="96" pos:column="21">.</op:operator><name pos:line="96" pos:column="22">Foreground</name></name> <op:operator pos:line="96" pos:column="33">=</op:operator> <call><name pos:line="96" pos:column="35">GetHistoryTextColor</name><argument_list pos:line="96" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="97" pos:column="17">this</name><op:operator pos:line="97" pos:column="21">.</op:operator><name pos:line="97" pos:column="22">Index</name></name> <op:operator pos:line="97" pos:column="28">=</op:operator> <name pos:line="97" pos:column="30">index</name></expr>;</expr_stmt>
            }</block></constructor>
        }</block></class>

        <function><type><specifier pos:line="101" pos:column="9">private</specifier> <name pos:line="101" pos:column="17">void</name></type> <name pos:line="101" pos:column="22">RecommendedQueryOnClick</name><parameter_list pos:line="101" pos:column="45">(<param><decl><type><name pos:line="101" pos:column="46">object</name></type> <name pos:line="101" pos:column="53">sender</name></decl></param>, <param><decl><type><name pos:line="101" pos:column="61">RoutedEventArgs</name></type> <name pos:line="101" pos:column="77">routedEventArgs</name></decl></param>)</parameter_list>
        <block pos:line="102" pos:column="9">{
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name pos:line="103" pos:column="17">sender</name> <op:operator pos:line="103" pos:column="24">as</op:operator> <name pos:line="103" pos:column="27">SandoQueryHyperLink</name> <op:operator pos:line="103" pos:column="47">!=</op:operator> <name pos:line="103" pos:column="50">null</name></expr>)</condition><then pos:line="103" pos:column="55">
            <block pos:line="104" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">StartSearchAfterClick</name><argument_list pos:line="105" pos:column="38">(<argument><expr><name pos:line="105" pos:column="39">sender</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="47">routedEventArgs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="106" pos:column="17">LogEvents</name><op:operator pos:line="106" pos:column="26">.</op:operator><name pos:line="106" pos:column="27">SelectRecommendedQuery</name></name><argument_list pos:line="106" pos:column="49">(<argument><expr><op:operator pos:line="106" pos:column="50">(</op:operator><name pos:line="106" pos:column="51">sender</name> <op:operator pos:line="106" pos:column="58">as</op:operator> <name pos:line="106" pos:column="61">SandoQueryHyperLink</name><op:operator pos:line="106" pos:column="80">)</op:operator><op:operator pos:line="106" pos:column="81">.</op:operator><name pos:line="106" pos:column="82">Query</name></expr></argument>, 
                    <argument><expr><op:operator pos:line="107" pos:column="21">(</op:operator><name pos:line="107" pos:column="22">sender</name> <op:operator pos:line="107" pos:column="29">as</op:operator> <name pos:line="107" pos:column="32">SandoQueryHyperLink</name><op:operator pos:line="107" pos:column="51">)</op:operator><op:operator pos:line="107" pos:column="52">.</op:operator><name pos:line="107" pos:column="53">Index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>


        <function><type><specifier pos:line="112" pos:column="9">private</specifier> <name pos:line="112" pos:column="17">void</name></type> <name pos:line="112" pos:column="22">StartSearchAfterClick</name><parameter_list pos:line="112" pos:column="43">(<param><decl><type><name pos:line="112" pos:column="44">object</name></type> <name pos:line="112" pos:column="51">sender</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="59">RoutedEventArgs</name></type> <name pos:line="112" pos:column="75">routedEventArgs</name></decl></param>)</parameter_list>
        <block pos:line="113" pos:column="9">{
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><name pos:line="114" pos:column="17">sender</name> <op:operator pos:line="114" pos:column="24">as</op:operator> <name pos:line="114" pos:column="27">SandoQueryHyperLink</name> <op:operator pos:line="114" pos:column="47">!=</op:operator> <name pos:line="114" pos:column="50">null</name></expr>)</condition><then pos:line="114" pos:column="55">
            <block pos:line="115" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="116" pos:column="17">var</name></type> <name pos:line="116" pos:column="21">reformedQuery</name> <init pos:line="116" pos:column="35">= <expr><op:operator pos:line="116" pos:column="37">(</op:operator><name pos:line="116" pos:column="38">sender</name> <op:operator pos:line="116" pos:column="45">as</op:operator> <name pos:line="116" pos:column="48">SandoQueryHyperLink</name><op:operator pos:line="116" pos:column="67">)</op:operator><op:operator pos:line="116" pos:column="68">.</op:operator><name pos:line="116" pos:column="69">Query</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="117" pos:column="17">searchBox</name><op:operator pos:line="117" pos:column="26">.</op:operator><name pos:line="117" pos:column="27">Text</name></name> <op:operator pos:line="117" pos:column="32">=</op:operator> <name pos:line="117" pos:column="34">reformedQuery</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="118" pos:column="17">BeginSearch</name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">reformedQuery</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="122" pos:column="9">private</specifier> <name pos:line="122" pos:column="17">void</name></type> <name pos:line="122" pos:column="22">AddSearchHistory</name><parameter_list pos:line="122" pos:column="38">(<param><decl><type><name pos:line="122" pos:column="39">String</name></type> <name pos:line="122" pos:column="46">query</name></decl></param>)</parameter_list>
        <block pos:line="123" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">var</name></type> <name pos:line="124" pos:column="17">history</name> <init pos:line="124" pos:column="25">= <expr><call><name><name pos:line="124" pos:column="27">ServiceLocator</name><op:operator pos:line="124" pos:column="41">.</op:operator><name><name pos:line="124" pos:column="42">Resolve</name><argument_list pos:line="124" pos:column="49">&lt;<argument><name pos:line="124" pos:column="50">SearchHistory</name></argument>&gt;</argument_list></name></name><argument_list pos:line="124" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="125" pos:column="13">history</name><op:operator pos:line="125" pos:column="20">.</op:operator><name pos:line="125" pos:column="21">IssuedSearchString</name></name><argument_list pos:line="125" pos:column="39">(<argument><expr><name pos:line="125" pos:column="40">query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="128" pos:column="9">private</specifier> <name pos:line="128" pos:column="17">void</name></type> <name pos:line="128" pos:column="22">TagCloudPopUp</name><parameter_list pos:line="128" pos:column="35">(<param><decl><type><name pos:line="128" pos:column="36">object</name></type> <name pos:line="128" pos:column="43">sender</name></decl></param>, <param><decl><type><name pos:line="128" pos:column="51">RoutedEventArgs</name></type> <name pos:line="128" pos:column="67">e</name></decl></param>)</parameter_list>
        <block pos:line="129" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="130" pos:column="13">var</name></type> <name pos:line="130" pos:column="17">text</name> <init pos:line="130" pos:column="22">= <expr><name><name pos:line="130" pos:column="24">searchBox</name><op:operator pos:line="130" pos:column="33">.</op:operator><name pos:line="130" pos:column="34">Text</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><call><name><name pos:line="131" pos:column="17">string</name><op:operator pos:line="131" pos:column="23">.</op:operator><name pos:line="131" pos:column="24">IsNullOrWhiteSpace</name></name><argument_list pos:line="131" pos:column="42">(<argument><expr><name pos:line="131" pos:column="43">text</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="131" pos:column="49">
            <block pos:line="132" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="133" pos:column="17">CreateTagCloud</name><argument_list pos:line="133" pos:column="31">(<argument><expr><op:operator pos:line="133" pos:column="32">new</op:operator> <name><name pos:line="133" pos:column="36">string</name><index pos:line="133" pos:column="42">[]</index></name><block pos:line="133" pos:column="44">{}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="135" pos:column="13">else
            <block pos:line="136" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="137" pos:column="17">TagCloudNavigationSession</name><op:operator pos:line="137" pos:column="42">.</op:operator><name pos:line="137" pos:column="43">CreateNewSession</name></name><argument_list pos:line="137" pos:column="59">(<argument><expr><name pos:line="137" pos:column="60">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="138" pos:column="17">CreateTagCloud</name><argument_list pos:line="138" pos:column="31">(<argument><expr><op:operator pos:line="138" pos:column="32">new</op:operator> <index pos:line="138" pos:column="36">[]</index><block pos:line="138" pos:column="38">{<expr><call><name><name pos:line="138" pos:column="39">TagCloudNavigationSession</name><op:operator pos:line="138" pos:column="64">.</op:operator>
                    <name pos:line="139" pos:column="21">CurrentSession</name></name><argument_list pos:line="139" pos:column="35">()</argument_list></call><op:operator pos:line="139" pos:column="37">.</op:operator><call><name pos:line="139" pos:column="38">GetNextTerm</name><argument_list pos:line="139" pos:column="49">()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="143" pos:column="9">private</specifier> <name pos:line="143" pos:column="17">void</name></type> <name pos:line="143" pos:column="22">ClearSearchHistory</name><parameter_list pos:line="143" pos:column="40">(<param><decl><type><name pos:line="143" pos:column="41">object</name></type> <name pos:line="143" pos:column="48">sender</name></decl></param>, <param><decl><type><name pos:line="143" pos:column="56">RoutedEventArgs</name></type> <name pos:line="143" pos:column="72">e</name></decl></param>)</parameter_list>
        <block pos:line="144" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="145" pos:column="13">var</name></type> <name pos:line="145" pos:column="17">history</name> <init pos:line="145" pos:column="25">= <expr><call><name><name pos:line="145" pos:column="27">ServiceLocator</name><op:operator pos:line="145" pos:column="41">.</op:operator><name><name pos:line="145" pos:column="42">Resolve</name><argument_list pos:line="145" pos:column="49">&lt;<argument><name pos:line="145" pos:column="50">SearchHistory</name></argument>&gt;</argument_list></name></name><argument_list pos:line="145" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="146" pos:column="13">history</name><op:operator pos:line="146" pos:column="20">.</op:operator><name pos:line="146" pos:column="21">ClearHistory</name></name><argument_list pos:line="146" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="149" pos:column="9">private</specifier> <name pos:line="149" pos:column="17">void</name></type> <name pos:line="149" pos:column="22">ChangeSelectedTag</name><parameter_list pos:line="149" pos:column="39">(<param><decl><type><name pos:line="149" pos:column="40">object</name></type> <name pos:line="149" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="149" pos:column="55">RoutedEventArgs</name></type> <name pos:line="149" pos:column="71">e</name></decl></param>)</parameter_list>
        <block pos:line="150" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="151" pos:column="13">var</name></type> <name pos:line="151" pos:column="17">term</name> <init pos:line="151" pos:column="22">= <expr><name pos:line="151" pos:column="24">sender</name> <op:operator pos:line="151" pos:column="31">==</op:operator> <name pos:line="151" pos:column="34">previousTagButton</name>
                <op:operator pos:line="152" pos:column="17">?</op:operator> <call><name><name pos:line="152" pos:column="19">TagCloudNavigationSession</name><op:operator pos:line="152" pos:column="44">.</op:operator><name pos:line="152" pos:column="45">CurrentSession</name></name><argument_list pos:line="152" pos:column="59">()</argument_list></call><op:operator pos:line="152" pos:column="61">.</op:operator><call><name pos:line="152" pos:column="62">GetPreviousTerm</name><argument_list pos:line="152" pos:column="77">()</argument_list></call>
                    <op:operator pos:line="153" pos:column="21">:</op:operator> <call><name><name pos:line="153" pos:column="23">TagCloudNavigationSession</name><op:operator pos:line="153" pos:column="48">.</op:operator><name pos:line="153" pos:column="49">CurrentSession</name></name><argument_list pos:line="153" pos:column="63">()</argument_list></call><op:operator pos:line="153" pos:column="65">.</op:operator><call><name pos:line="153" pos:column="66">GetNextTerm</name><argument_list pos:line="153" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">CreateTagCloud</name><argument_list pos:line="154" pos:column="27">(<argument><expr><op:operator pos:line="154" pos:column="28">new</op:operator> <index pos:line="154" pos:column="32">[]</index><block pos:line="154" pos:column="34">{<expr><name pos:line="154" pos:column="35">term</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
 
        <class><specifier pos:line="157" pos:column="9">private</specifier> class <name pos:line="157" pos:column="23">TagCloudNavigationSession</name>
        <block pos:line="158" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="159" pos:column="13">private</specifier> <specifier pos:line="159" pos:column="21">static</specifier> <name pos:line="159" pos:column="28">TagCloudNavigationSession</name></type> <name pos:line="159" pos:column="54">session</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="160" pos:column="13">private</specifier> <specifier pos:line="160" pos:column="21">readonly</specifier> <name pos:line="160" pos:column="30">string</name><index pos:line="160" pos:column="36">[]</index></type> <name pos:line="160" pos:column="39">terms</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="161" pos:column="13">private</specifier> <specifier pos:line="161" pos:column="21">readonly</specifier> <name pos:line="161" pos:column="30">object</name></type> <name pos:line="161" pos:column="37">locker</name> <init pos:line="161" pos:column="44">= <expr><op:operator pos:line="161" pos:column="46">new</op:operator> <call><name pos:line="161" pos:column="50">object</name><argument_list pos:line="161" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="162" pos:column="13">private</specifier> <name pos:line="162" pos:column="21">int</name></type> <name pos:line="162" pos:column="25">index</name></decl>;</decl_stmt>


            <function><type><specifier pos:line="165" pos:column="13">public</specifier> <specifier pos:line="165" pos:column="20">static</specifier> <name pos:line="165" pos:column="27">TagCloudNavigationSession</name></type> <name pos:line="165" pos:column="53">CurrentSession</name><parameter_list pos:line="165" pos:column="67">()</parameter_list>
            <block pos:line="166" pos:column="13">{
                <return pos:line="167" pos:column="17">return <expr><name pos:line="167" pos:column="24">session</name></expr>;</return>
            }</block></function>

            <function><type><specifier pos:line="170" pos:column="13">public</specifier> <specifier pos:line="170" pos:column="20">static</specifier> <name pos:line="170" pos:column="27">void</name></type> <name pos:line="170" pos:column="32">CreateNewSession</name><parameter_list pos:line="170" pos:column="48">(<param><decl><type><name pos:line="170" pos:column="49">String</name></type> <name pos:line="170" pos:column="56">query</name></decl></param>)</parameter_list>
            <block pos:line="171" pos:column="13">{
                <expr_stmt><expr><name pos:line="172" pos:column="17">session</name> <op:operator pos:line="172" pos:column="25">=</op:operator> <op:operator pos:line="172" pos:column="27">new</op:operator> <call><name pos:line="172" pos:column="31">TagCloudNavigationSession</name><argument_list pos:line="172" pos:column="56">(<argument><expr><name pos:line="172" pos:column="57">query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <constructor><specifier pos:line="175" pos:column="13">private</specifier> <name pos:line="175" pos:column="21">TagCloudNavigationSession</name><parameter_list pos:line="175" pos:column="46">(<param><decl><type><name pos:line="175" pos:column="47">String</name></type> <name pos:line="175" pos:column="54">query</name></decl></param>)</parameter_list>
            <block pos:line="176" pos:column="13">{
                <expr_stmt><expr><name pos:line="177" pos:column="17">terms</name> <op:operator pos:line="177" pos:column="23">=</op:operator> <call><name><name pos:line="177" pos:column="25">query</name><op:operator pos:line="177" pos:column="30">.</op:operator><name pos:line="177" pos:column="31">Split</name></name><argument_list pos:line="177" pos:column="36">()</argument_list></call><op:operator pos:line="177" pos:column="38">.</op:operator><call><name pos:line="177" pos:column="39">Where</name><argument_list pos:line="177" pos:column="44">(<argument><expr><lambda><name pos:line="177" pos:column="45">s</name> <op:operator pos:line="177" pos:column="47">=&gt;</op:operator> <op:operator pos:line="177" pos:column="50">!</op:operator><call><name><name pos:line="177" pos:column="51">string</name><op:operator pos:line="177" pos:column="57">.</op:operator><name pos:line="177" pos:column="58">IsNullOrWhiteSpace</name></name><argument_list pos:line="177" pos:column="76">(<argument><expr><name pos:line="177" pos:column="77">s</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="177" pos:column="80">.</op:operator>
                    <call><name pos:line="178" pos:column="21">Distinct</name><argument_list pos:line="178" pos:column="29">()</argument_list></call><op:operator pos:line="178" pos:column="31">.</op:operator><call><name pos:line="178" pos:column="32">ToArray</name><argument_list pos:line="178" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="179" pos:column="17">index</name> <op:operator pos:line="179" pos:column="23">=</op:operator> <call><name><name pos:line="179" pos:column="25">terms</name><op:operator pos:line="179" pos:column="30">.</op:operator><name pos:line="179" pos:column="31">Count</name></name><argument_list pos:line="179" pos:column="36">()</argument_list></call> <op:operator pos:line="179" pos:column="39">*</op:operator> <lit:literal type="number" pos:line="179" pos:column="41">10</lit:literal></expr>;</expr_stmt>
            }</block></constructor>

            <function><type><specifier pos:line="182" pos:column="13">public</specifier> <name pos:line="182" pos:column="20">string</name></type> <name pos:line="182" pos:column="27">GetNextTerm</name><parameter_list pos:line="182" pos:column="38">()</parameter_list>
            <block pos:line="183" pos:column="13">{
                <lock pos:line="184" pos:column="17">lock (<expr><name pos:line="184" pos:column="23">locker</name></expr>)
                <block pos:line="185" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="186" pos:column="21">var</name></type> <name pos:line="186" pos:column="25">term</name> <init pos:line="186" pos:column="30">= <expr><name><name pos:line="186" pos:column="32">terms</name><index pos:line="186" pos:column="37">[<expr><call><name pos:line="186" pos:column="38">MakeModulePositive</name><argument_list pos:line="186" pos:column="56">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name pos:line="187" pos:column="21">index</name><op:operator pos:line="187" pos:column="26">++</op:operator></expr>;</expr_stmt>
                    <return pos:line="188" pos:column="21">return <expr><name pos:line="188" pos:column="28">term</name></expr>;</return>
                }</block></lock>
            }</block></function>

            <function><type><specifier pos:line="192" pos:column="13">public</specifier> <name pos:line="192" pos:column="20">string</name></type> <name pos:line="192" pos:column="27">GetPreviousTerm</name><parameter_list pos:line="192" pos:column="42">()</parameter_list>
            <block pos:line="193" pos:column="13">{
                <lock pos:line="194" pos:column="17">lock (<expr><name pos:line="194" pos:column="23">locker</name></expr>)
                <block pos:line="195" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="196" pos:column="21">var</name></type> <name pos:line="196" pos:column="25">term</name> <init pos:line="196" pos:column="30">= <expr><name><name pos:line="196" pos:column="32">terms</name><index pos:line="196" pos:column="37">[<expr><call><name pos:line="196" pos:column="38">MakeModulePositive</name><argument_list pos:line="196" pos:column="56">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name pos:line="197" pos:column="21">index</name><op:operator pos:line="197" pos:column="26">--</op:operator></expr>;</expr_stmt>
                    <return pos:line="198" pos:column="21">return <expr><name pos:line="198" pos:column="28">term</name></expr>;</return>
                }</block></lock>
            }</block></function>

            <function><type><specifier pos:line="202" pos:column="13">private</specifier> <name pos:line="202" pos:column="21">int</name></type> <name pos:line="202" pos:column="25">MakeModulePositive</name><parameter_list pos:line="202" pos:column="43">()</parameter_list>
            <block pos:line="203" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="204" pos:column="17">var</name></type> <name pos:line="204" pos:column="21">result</name> <init pos:line="204" pos:column="28">= <expr><name pos:line="204" pos:column="30">index</name></expr></init></decl>;</decl_stmt>
                <for pos:line="205" pos:column="17">for (<init pos:line="205" pos:column="22">;</init> <condition><expr><name pos:line="205" pos:column="24">result</name> <op:operator pos:line="205" pos:column="31">&lt;</op:operator> <lit:literal type="number" pos:line="205" pos:column="33">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="205" pos:column="36">result</name> <op:operator pos:line="205" pos:column="43">+=</op:operator> <call><name><name pos:line="205" pos:column="46">terms</name><op:operator pos:line="205" pos:column="51">.</op:operator><name pos:line="205" pos:column="52">Count</name></name><argument_list pos:line="205" pos:column="57">()</argument_list></call></expr></incr>)<empty_stmt pos:line="205" pos:column="60">;</empty_stmt></for>
                <for pos:line="206" pos:column="17">for (<init pos:line="206" pos:column="22">;</init> <condition><expr><name pos:line="206" pos:column="24">result</name> <op:operator pos:line="206" pos:column="31">&gt;=</op:operator> <call><name><name pos:line="206" pos:column="34">terms</name><op:operator pos:line="206" pos:column="39">.</op:operator><name pos:line="206" pos:column="40">Count</name></name><argument_list pos:line="206" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="206" pos:column="49">result</name> <op:operator pos:line="206" pos:column="56">-=</op:operator> <call><name><name pos:line="206" pos:column="59">terms</name><op:operator pos:line="206" pos:column="64">.</op:operator><name pos:line="206" pos:column="65">Count</name></name><argument_list pos:line="206" pos:column="70">()</argument_list></call></expr></incr>)<empty_stmt pos:line="206" pos:column="73">;</empty_stmt></for>
                <return pos:line="207" pos:column="17">return <expr><name pos:line="207" pos:column="24">result</name></expr>;</return>
            }</block></function>
        }</block></class>

        <function><type><specifier pos:line="211" pos:column="9">private</specifier> <name pos:line="211" pos:column="17">void</name></type> <name pos:line="211" pos:column="22">CreateTagCloud</name><parameter_list pos:line="211" pos:column="36">(<param><decl><type><name><name pos:line="211" pos:column="37">String</name><index pos:line="211" pos:column="43">[]</index></name></type> <name pos:line="211" pos:column="46">words</name></decl></param>)</parameter_list>
        <block pos:line="212" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="213" pos:column="13">System</name><op:operator pos:line="213" pos:column="19">.</op:operator><name pos:line="213" pos:column="20">Threading</name><op:operator pos:line="213" pos:column="29">.</op:operator><name pos:line="213" pos:column="30">Tasks</name><op:operator pos:line="213" pos:column="35">.</op:operator><name pos:line="213" pos:column="36">Task</name><op:operator pos:line="213" pos:column="40">.</op:operator><name pos:line="213" pos:column="41">Factory</name><op:operator pos:line="213" pos:column="48">.</op:operator><name pos:line="213" pos:column="49">StartNew</name></name><argument_list pos:line="213" pos:column="57">(<argument><expr><lambda><parameter_list pos:line="213" pos:column="58">()</parameter_list> <op:operator pos:line="213" pos:column="61">=&gt;</op:operator>
            <block pos:line="214" pos:column="13">{
                    <decl_stmt><decl><type><name pos:line="215" pos:column="21">var</name></type> <name pos:line="215" pos:column="25">dictionary</name> <init pos:line="215" pos:column="36">= <expr><call><name><name pos:line="215" pos:column="38">ServiceLocator</name><op:operator pos:line="215" pos:column="52">.</op:operator><name><name pos:line="215" pos:column="53">Resolve</name><argument_list pos:line="215" pos:column="60">&lt;<argument><name pos:line="215" pos:column="61">DictionaryBasedSplitter</name></argument>&gt;</argument_list></name></name><argument_list pos:line="215" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="216" pos:column="21">var</name></type> <name pos:line="216" pos:column="25">builder</name> <init pos:line="216" pos:column="33">= <expr><op:operator pos:line="216" pos:column="35">new</op:operator> <call><name pos:line="216" pos:column="39">TagCloudBuilder</name><argument_list pos:line="216" pos:column="54">(<argument><expr><name pos:line="216" pos:column="55">dictionary</name></expr></argument>, <argument><expr><name pos:line="216" pos:column="67">words</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="217" pos:column="21">var</name></type> <name pos:line="217" pos:column="25">hyperlinks</name> <init pos:line="217" pos:column="36">= <expr><call><name><name pos:line="217" pos:column="38">builder</name><op:operator pos:line="217" pos:column="45">.</op:operator><name pos:line="217" pos:column="46">Build</name></name><argument_list pos:line="217" pos:column="51">()</argument_list></call><op:operator pos:line="217" pos:column="53">.</op:operator><call><name pos:line="217" pos:column="54">Select</name><argument_list pos:line="217" pos:column="60">(<argument><expr><name pos:line="217" pos:column="61">CreateHyperLinkByShapedWord</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if pos:line="219" pos:column="21">if <condition pos:line="219" pos:column="24">(<expr><name><name pos:line="219" pos:column="25">Thread</name><op:operator pos:line="219" pos:column="31">.</op:operator><name pos:line="219" pos:column="32">CurrentThread</name></name> <op:operator pos:line="219" pos:column="46">==</op:operator> <name><name pos:line="219" pos:column="49">Dispatcher</name><op:operator pos:line="219" pos:column="59">.</op:operator><name pos:line="219" pos:column="60">Thread</name></name></expr>)</condition><then pos:line="219" pos:column="67">
                    <block pos:line="220" pos:column="21">{
                        <expr_stmt><expr><call><name pos:line="221" pos:column="25">UpdateTagCloudWindow</name><argument_list pos:line="221" pos:column="45">(<argument><expr><name pos:line="221" pos:column="46">words</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="53">hyperlinks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="223" pos:column="21">else
                    <block pos:line="224" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="225" pos:column="25">Dispatcher</name><op:operator pos:line="225" pos:column="35">.</op:operator><name pos:line="225" pos:column="36">Invoke</name></name><argument_list pos:line="225" pos:column="42">(<argument><expr><call pos:line="225" pos:column="43">(<name pos:line="225" pos:column="44">Action</name>)<argument_list pos:line="225" pos:column="51">(<argument><expr><lambda><parameter_list pos:line="225" pos:column="52">()</parameter_list> <op:operator pos:line="225" pos:column="55">=&gt;</op:operator> <call><name pos:line="225" pos:column="58">UpdateTagCloudWindow</name><argument_list pos:line="225" pos:column="78">(<argument><expr><name pos:line="225" pos:column="79">words</name></expr></argument>
                            , <argument><expr><name pos:line="226" pos:column="31">hyperlinks</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
            }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>


        <function><type><specifier pos:line="232" pos:column="9">private</specifier> <name pos:line="232" pos:column="17">void</name></type> <name pos:line="232" pos:column="22">UpdateLabel</name><parameter_list pos:line="232" pos:column="33">(<param><decl><type><name><name pos:line="232" pos:column="34">string</name><index pos:line="232" pos:column="40">[]</index></name></type> <name pos:line="232" pos:column="43">highlightedTerms</name></decl></param>)</parameter_list>
        <block pos:line="233" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="234" pos:column="13">var</name></type> <name pos:line="234" pos:column="17">terms</name> <init pos:line="234" pos:column="23">= <expr><call><name><name pos:line="234" pos:column="25">searchBox</name><op:operator pos:line="234" pos:column="34">.</op:operator><name pos:line="234" pos:column="35">Text</name><op:operator pos:line="234" pos:column="39">.</op:operator><name pos:line="234" pos:column="40">Split</name></name><argument_list pos:line="234" pos:column="45">()</argument_list></call><op:operator pos:line="234" pos:column="47">.</op:operator><call><name pos:line="234" pos:column="48">Select</name><argument_list pos:line="234" pos:column="54">(<argument><expr><lambda><name pos:line="234" pos:column="55">s</name> <op:operator pos:line="234" pos:column="57">=&gt;</op:operator> <call><name><name pos:line="234" pos:column="60">s</name><op:operator pos:line="234" pos:column="61">.</op:operator><name pos:line="234" pos:column="62">Trim</name></name><argument_list pos:line="234" pos:column="66">()</argument_list></call><op:operator pos:line="234" pos:column="68">.</op:operator>
                <call><name pos:line="235" pos:column="17">ToLower</name><argument_list pos:line="235" pos:column="24">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="235" pos:column="27">.</op:operator><call><name pos:line="235" pos:column="28">Distinct</name><argument_list pos:line="235" pos:column="36">()</argument_list></call><op:operator pos:line="235" pos:column="38">.</op:operator><call><name pos:line="235" pos:column="39">Where</name><argument_list pos:line="235" pos:column="44">(<argument><expr><lambda><name pos:line="235" pos:column="45">t</name> <op:operator pos:line="235" pos:column="47">=&gt;</op:operator> <op:operator pos:line="235" pos:column="50">!</op:operator><call><name><name pos:line="235" pos:column="51">string</name><op:operator pos:line="235" pos:column="57">.</op:operator><name pos:line="235" pos:column="58">IsNullOrWhiteSpace</name></name><argument_list pos:line="235" pos:column="76">(<argument><expr><name pos:line="235" pos:column="77">t</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="235" pos:column="80">.</op:operator>
                    <call><name pos:line="236" pos:column="21">ToArray</name><argument_list pos:line="236" pos:column="28">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="237" pos:column="13">tagCloudTitleTextBlock</name><op:operator pos:line="237" pos:column="35">.</op:operator><name pos:line="237" pos:column="36">Inlines</name><op:operator pos:line="237" pos:column="43">.</op:operator><name pos:line="237" pos:column="44">Clear</name></name><argument_list pos:line="237" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <if pos:line="238" pos:column="13">if <condition pos:line="238" pos:column="16">(<expr><op:operator pos:line="238" pos:column="17">!</op:operator><call><name><name pos:line="238" pos:column="18">terms</name><op:operator pos:line="238" pos:column="23">.</op:operator><name pos:line="238" pos:column="24">Any</name></name><argument_list pos:line="238" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="238" pos:column="30">
            <block pos:line="239" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="240" pos:column="17">tagCloudTitleTextBlock</name><op:operator pos:line="240" pos:column="39">.</op:operator><name pos:line="240" pos:column="40">Inlines</name><op:operator pos:line="240" pos:column="47">.</op:operator><name pos:line="240" pos:column="48">Add</name></name><argument_list pos:line="240" pos:column="51">(<argument><expr><op:operator pos:line="240" pos:column="52">new</op:operator> <call><name pos:line="240" pos:column="56">Run</name><argument_list pos:line="240" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="240" pos:column="60">"Tag cloud for this project"</lit:literal></expr></argument>)</argument_list></call>
                    <block pos:line="241" pos:column="21">{
                      <comment type="line" pos:line="242" pos:column="23">//  FontSize = 24, </comment>
                        <expr><name pos:line="243" pos:column="25">Foreground</name> <op:operator pos:line="243" pos:column="36">=</op:operator> <name><name pos:line="243" pos:column="38">Brushes</name><op:operator pos:line="243" pos:column="45">.</op:operator><name pos:line="243" pos:column="46">CadetBlue</name></name></expr>
                    }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="246" pos:column="13">else
            <block pos:line="247" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="248" pos:column="17">var</name></type> <name pos:line="248" pos:column="21">runs</name> <init pos:line="248" pos:column="26">= <expr><call><name><name pos:line="248" pos:column="28">terms</name><op:operator pos:line="248" pos:column="33">.</op:operator><name pos:line="248" pos:column="34">Select</name></name><argument_list pos:line="248" pos:column="40">(<argument><expr><lambda><name pos:line="248" pos:column="41">t</name> <op:operator pos:line="248" pos:column="43">=&gt;</op:operator> <op:operator pos:line="248" pos:column="46">new</op:operator> <call><name pos:line="248" pos:column="50">Run</name><argument_list pos:line="248" pos:column="53">(<argument><expr><name pos:line="248" pos:column="54">t</name> <op:operator pos:line="248" pos:column="56">+</op:operator> <lit:literal type="string" pos:line="248" pos:column="58">" "</lit:literal></expr></argument>)</argument_list></call>
                    <block pos:line="249" pos:column="21">{
                        <expr><name pos:line="250" pos:column="25">FontSize</name> <op:operator pos:line="250" pos:column="34">=</op:operator> <call><name><name pos:line="250" pos:column="36">highlightedTerms</name><op:operator pos:line="250" pos:column="52">.</op:operator><name pos:line="250" pos:column="53">Contains</name></name><argument_list pos:line="250" pos:column="61">(<argument><expr><name pos:line="250" pos:column="62">t</name></expr></argument>)</argument_list></call> <op:operator pos:line="250" pos:column="65">?</op:operator> <lit:literal type="number" pos:line="250" pos:column="67">28</lit:literal> <op:operator pos:line="250" pos:column="70">:</op:operator> <lit:literal type="number" pos:line="250" pos:column="72">24</lit:literal></expr>,
                        <expr><name pos:line="251" pos:column="25">Foreground</name> <op:operator pos:line="251" pos:column="36">=</op:operator> <call><name><name pos:line="251" pos:column="38">highlightedTerms</name><op:operator pos:line="251" pos:column="54">.</op:operator><name pos:line="251" pos:column="55">Contains</name></name><argument_list pos:line="251" pos:column="63">(<argument><expr><name pos:line="251" pos:column="64">t</name></expr></argument>)</argument_list></call>
                                        <op:operator pos:line="252" pos:column="41">?</op:operator> <name><name pos:line="252" pos:column="43">Brushes</name><op:operator pos:line="252" pos:column="50">.</op:operator><name pos:line="252" pos:column="51">CadetBlue</name></name> <op:operator pos:line="252" pos:column="61">:</op:operator> <name><name pos:line="252" pos:column="63">Brushes</name><op:operator pos:line="252" pos:column="70">.</op:operator><name pos:line="252" pos:column="71">CadetBlue</name></name></expr>
                    }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="253" pos:column="23">.</op:operator><call><name pos:line="253" pos:column="24">ToArray</name><argument_list pos:line="253" pos:column="31">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="254" pos:column="17">runs</name><op:operator pos:line="254" pos:column="21">.</op:operator><name pos:line="254" pos:column="22">Last</name></name><argument_list pos:line="254" pos:column="26">()</argument_list></call><op:operator pos:line="254" pos:column="28">.</op:operator><name pos:line="254" pos:column="29">Text</name> <op:operator pos:line="254" pos:column="34">=</op:operator> <call><name><name pos:line="254" pos:column="36">runs</name><op:operator pos:line="254" pos:column="40">.</op:operator><name pos:line="254" pos:column="41">Last</name></name><argument_list pos:line="254" pos:column="45">()</argument_list></call><op:operator pos:line="254" pos:column="47">.</op:operator><call><name><name pos:line="254" pos:column="48">Text</name><op:operator pos:line="254" pos:column="52">.</op:operator><name pos:line="254" pos:column="53">Trim</name></name><argument_list pos:line="254" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="255" pos:column="17">tagCloudTitleTextBlock</name><op:operator pos:line="255" pos:column="39">.</op:operator><name pos:line="255" pos:column="40">Inlines</name><op:operator pos:line="255" pos:column="47">.</op:operator><name pos:line="255" pos:column="48">AddRange</name></name><argument_list pos:line="255" pos:column="56">(<argument><expr><name pos:line="255" pos:column="57">runs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="259" pos:column="9">private</specifier> <name pos:line="259" pos:column="17">void</name></type> <name pos:line="259" pos:column="22">UpdateTagCloudWindow</name><parameter_list pos:line="259" pos:column="42">(<param><decl><type><name><name pos:line="259" pos:column="43">string</name><index pos:line="259" pos:column="49">[]</index></name></type> <name pos:line="259" pos:column="52">title</name></decl></param>, <param><decl><type><name><name pos:line="259" pos:column="59">IEnumerable</name><argument_list pos:line="259" pos:column="70">&lt;<argument><name pos:line="259" pos:column="71">Hyperlink</name></argument>&gt;</argument_list></name></type> <name pos:line="259" pos:column="82">hyperlinks</name></decl></param>)</parameter_list>
        <block pos:line="260" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="261" pos:column="13">string</name></type> <name pos:line="261" pos:column="20">currentQuery</name></decl>;</decl_stmt>
            <if pos:line="262" pos:column="13">if <condition pos:line="262" pos:column="16">(<expr><op:operator pos:line="262" pos:column="17">!</op:operator><call><name><name pos:line="262" pos:column="18">title</name><op:operator pos:line="262" pos:column="23">.</op:operator><name pos:line="262" pos:column="24">Any</name></name><argument_list pos:line="262" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="262" pos:column="30">
            <block pos:line="263" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="264" pos:column="17">UpdateLabel</name><argument_list pos:line="264" pos:column="28">(<argument><expr><op:operator pos:line="264" pos:column="29">new</op:operator> <name><name pos:line="264" pos:column="33">string</name><index pos:line="264" pos:column="39">[]</index></name><block pos:line="264" pos:column="41">{}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="265" pos:column="17">previousTagButton</name><op:operator pos:line="265" pos:column="34">.</op:operator><name pos:line="265" pos:column="35">Visibility</name></name> <op:operator pos:line="265" pos:column="46">=</op:operator> <name><name pos:line="265" pos:column="48">Visibility</name><op:operator pos:line="265" pos:column="58">.</op:operator><name pos:line="265" pos:column="59">Hidden</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="266" pos:column="17">nextTagButton</name><op:operator pos:line="266" pos:column="30">.</op:operator><name pos:line="266" pos:column="31">Visibility</name></name> <op:operator pos:line="266" pos:column="42">=</op:operator> <name><name pos:line="266" pos:column="44">Visibility</name><op:operator pos:line="266" pos:column="54">.</op:operator><name pos:line="266" pos:column="55">Hidden</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="267" pos:column="17">currentQuery</name> <op:operator pos:line="267" pos:column="30">=</op:operator> <name><name pos:line="267" pos:column="32">string</name><op:operator pos:line="267" pos:column="38">.</op:operator><name pos:line="267" pos:column="39">Empty</name></name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="269" pos:column="13">else
            <block pos:line="270" pos:column="13">{
                <expr_stmt><expr><name pos:line="271" pos:column="17">currentQuery</name> <op:operator pos:line="271" pos:column="30">=</op:operator> <call><name><name pos:line="271" pos:column="32">title</name><op:operator pos:line="271" pos:column="37">.</op:operator><name pos:line="271" pos:column="38">Aggregate</name></name><argument_list pos:line="271" pos:column="47">(<argument><expr><lambda><parameter_list pos:line="271" pos:column="48">(<param><decl><name pos:line="271" pos:column="49">w1</name></decl></param>, <param><decl><name pos:line="271" pos:column="53">w2</name></decl></param>)</parameter_list> <op:operator pos:line="271" pos:column="57">=&gt;</op:operator> <name pos:line="271" pos:column="60">w1</name> <op:operator pos:line="271" pos:column="63">+</op:operator> <lit:literal type="string" pos:line="271" pos:column="65">" "</lit:literal> <op:operator pos:line="271" pos:column="69">+</op:operator> <name pos:line="271" pos:column="71">w2</name></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="272" pos:column="17">UpdateLabel</name><argument_list pos:line="272" pos:column="28">(<argument><expr><name pos:line="272" pos:column="29">title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="273" pos:column="17">previousTagButton</name><op:operator pos:line="273" pos:column="34">.</op:operator><name pos:line="273" pos:column="35">Visibility</name></name> <op:operator pos:line="273" pos:column="46">=</op:operator> <name><name pos:line="273" pos:column="48">Visibility</name><op:operator pos:line="273" pos:column="58">.</op:operator><name pos:line="273" pos:column="59">Visible</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="274" pos:column="17">nextTagButton</name><op:operator pos:line="274" pos:column="30">.</op:operator><name pos:line="274" pos:column="31">Visibility</name></name> <op:operator pos:line="274" pos:column="42">=</op:operator> <name><name pos:line="274" pos:column="44">Visibility</name><op:operator pos:line="274" pos:column="54">.</op:operator><name pos:line="274" pos:column="55">Visible</name></name></expr>;</expr_stmt>
            }</block></else></if>
            <expr_stmt><expr><name><name pos:line="276" pos:column="13">TagCloudPopUpWindow</name><op:operator pos:line="276" pos:column="32">.</op:operator><name pos:line="276" pos:column="33">IsOpen</name></name> <op:operator pos:line="276" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="276" pos:column="42">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="277" pos:column="13">TagCloudTextBlock</name><op:operator pos:line="277" pos:column="30">.</op:operator><name pos:line="277" pos:column="31">Inlines</name><op:operator pos:line="277" pos:column="38">.</op:operator><name pos:line="277" pos:column="39">Clear</name></name><argument_list pos:line="277" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
            <foreach pos:line="278" pos:column="13">foreach (<init><decl><type><name pos:line="278" pos:column="22">var</name></type> <name pos:line="278" pos:column="26">link</name> <range pos:line="278" pos:column="31">in <expr><name pos:line="278" pos:column="34">hyperlinks</name></expr></range></decl></init>)
            <block pos:line="279" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="280" pos:column="17">TagCloudTextBlock</name><op:operator pos:line="280" pos:column="34">.</op:operator><name pos:line="280" pos:column="35">Inlines</name><op:operator pos:line="280" pos:column="42">.</op:operator><name pos:line="280" pos:column="43">Add</name></name><argument_list pos:line="280" pos:column="46">(<argument><expr><name pos:line="280" pos:column="47">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="281" pos:column="17">TagCloudTextBlock</name><op:operator pos:line="281" pos:column="34">.</op:operator><name pos:line="281" pos:column="35">Inlines</name><op:operator pos:line="281" pos:column="42">.</op:operator><name pos:line="281" pos:column="43">Add</name></name><argument_list pos:line="281" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="281" pos:column="47">" "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
            <expr_stmt><expr><name><name pos:line="283" pos:column="13">TagCloudPopUpWindow</name><op:operator pos:line="283" pos:column="32">.</op:operator><name pos:line="283" pos:column="33">IsOpen</name></name> <op:operator pos:line="283" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="283" pos:column="42">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="284" pos:column="13">LogEvents</name><op:operator pos:line="284" pos:column="22">.</op:operator><name pos:line="284" pos:column="23">TagCloudShowing</name></name><argument_list pos:line="284" pos:column="38">(<argument><expr><name pos:line="284" pos:column="39">currentQuery</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="287" pos:column="9">private</specifier> <name pos:line="287" pos:column="17">Hyperlink</name></type> <name pos:line="287" pos:column="27">CreateHyperLinkByShapedWord</name><parameter_list pos:line="287" pos:column="54">(<param><decl><type><name pos:line="287" pos:column="55">IShapedWord</name></type> <name pos:line="287" pos:column="67">shapedWord</name></decl></param>)</parameter_list>
        <block pos:line="288" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="289" pos:column="13">var</name></type> <name pos:line="289" pos:column="17">link</name> <init pos:line="289" pos:column="22">= <expr><op:operator pos:line="289" pos:column="24">new</op:operator> <call><name pos:line="289" pos:column="28">SandoQueryHyperLink</name><argument_list pos:line="289" pos:column="47">(<argument><expr><op:operator pos:line="289" pos:column="48">new</op:operator> <call><name pos:line="289" pos:column="52">Run</name><argument_list pos:line="289" pos:column="55">(<argument><expr><name><name pos:line="289" pos:column="56">shapedWord</name><op:operator pos:line="289" pos:column="66">.</op:operator><name pos:line="289" pos:column="67">Word</name></name></expr></argument>)</argument_list></call></expr></argument>, 
                <argument><expr><name><name pos:line="290" pos:column="17">searchBox</name><op:operator pos:line="290" pos:column="26">.</op:operator><name pos:line="290" pos:column="27">Text</name></name> <op:operator pos:line="290" pos:column="32">+</op:operator> <lit:literal type="string" pos:line="290" pos:column="34">" "</lit:literal> <op:operator pos:line="290" pos:column="38">+</op:operator> <name><name pos:line="290" pos:column="40">shapedWord</name><op:operator pos:line="290" pos:column="50">.</op:operator><name pos:line="290" pos:column="51">Word</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="290" pos:column="57">0</lit:literal></expr></argument>)</argument_list></call>
            <block pos:line="291" pos:column="13">{
                <expr><name pos:line="292" pos:column="17">FontSize</name> <op:operator pos:line="292" pos:column="26">=</op:operator> <name><name pos:line="292" pos:column="28">shapedWord</name><op:operator pos:line="292" pos:column="38">.</op:operator><name pos:line="292" pos:column="39">FontSize</name></name></expr>,
                <expr><name pos:line="293" pos:column="17">Foreground</name> <op:operator pos:line="293" pos:column="28">=</op:operator> <name><name pos:line="293" pos:column="30">shapedWord</name><op:operator pos:line="293" pos:column="40">.</op:operator><name pos:line="293" pos:column="41">Color</name></name></expr>,
                <expr><name pos:line="294" pos:column="17">IsEnabled</name> <op:operator pos:line="294" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="294" pos:column="29">true</lit:literal></expr>,
                <expr><name pos:line="295" pos:column="17">TextDecorations</name> <op:operator pos:line="295" pos:column="33">=</op:operator> <name pos:line="295" pos:column="35">null</name></expr>,
            }</block></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="297" pos:column="13">link</name><op:operator pos:line="297" pos:column="17">.</op:operator><name pos:line="297" pos:column="18">Click</name></name> <op:operator pos:line="297" pos:column="24">+=</op:operator> <lambda><parameter_list pos:line="297" pos:column="27">(<param><decl><name pos:line="297" pos:column="28">sender</name></decl></param>, <param><decl><name pos:line="297" pos:column="36">args</name></decl></param>)</parameter_list> <op:operator pos:line="297" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="297" pos:column="45">LogEvents</name><op:operator pos:line="297" pos:column="54">.</op:operator><name pos:line="297" pos:column="55">AddWordFromTagCloud</name></name><argument_list pos:line="297" pos:column="74">(<argument><expr><name><name pos:line="297" pos:column="75">searchBox</name><op:operator pos:line="297" pos:column="84">.</op:operator><name pos:line="297" pos:column="85">Text</name></name></expr></argument>,
                <argument><expr><lit:literal type="string" pos:line="298" pos:column="17">"TOFIXTHE"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="298" pos:column="29">shapedWord</name><op:operator pos:line="298" pos:column="39">.</op:operator><name pos:line="298" pos:column="40">Word</name></name></expr></argument>)</argument_list></call></lambda></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="299" pos:column="13">link</name><op:operator pos:line="299" pos:column="17">.</op:operator><name pos:line="299" pos:column="18">Click</name></name> <op:operator pos:line="299" pos:column="24">+=</op:operator> <name pos:line="299" pos:column="27">StartSearchAfterClick</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="300" pos:column="13">link</name><op:operator pos:line="300" pos:column="17">.</op:operator><name pos:line="300" pos:column="18">Click</name></name> <op:operator pos:line="300" pos:column="24">+=</op:operator> <lambda><parameter_list pos:line="300" pos:column="27">(<param><decl><name pos:line="300" pos:column="28">sender</name></decl></param>, <param><decl><name pos:line="300" pos:column="36">args</name></decl></param>)</parameter_list> <op:operator pos:line="300" pos:column="42">=&gt;</op:operator> <name><name pos:line="300" pos:column="45">TagCloudPopUpWindow</name><op:operator pos:line="300" pos:column="64">.</op:operator><name pos:line="300" pos:column="65">IsOpen</name></name> <op:operator pos:line="300" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="300" pos:column="74">false</lit:literal></lambda></expr>;</expr_stmt>
            <return pos:line="301" pos:column="13">return <expr><name pos:line="301" pos:column="20">link</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="304" pos:column="9">static</specifier> <specifier pos:line="304" pos:column="16">internal</specifier> <name pos:line="304" pos:column="25">Brush</name></type> <name pos:line="304" pos:column="31">GetNormalTextColor</name><parameter_list pos:line="304" pos:column="49">()</parameter_list>
        <block pos:line="305" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="306" pos:column="13">var</name></type> <name pos:line="306" pos:column="17">key</name> <init pos:line="306" pos:column="21">= <expr><name><name pos:line="306" pos:column="23">Microsoft</name><op:operator pos:line="306" pos:column="32">.</op:operator><name pos:line="306" pos:column="33">VisualStudio</name><op:operator pos:line="306" pos:column="45">.</op:operator><name pos:line="306" pos:column="46">Shell</name><op:operator pos:line="306" pos:column="51">.</op:operator><name pos:line="306" pos:column="52">VsBrushes</name><op:operator pos:line="306" pos:column="61">.</op:operator><name pos:line="306" pos:column="62">ToolWindowTextKey</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="307" pos:column="13">var</name></type> <name pos:line="307" pos:column="17">brush</name> <init pos:line="307" pos:column="23">= <expr><op:operator pos:line="307" pos:column="25">(</op:operator><name pos:line="307" pos:column="26">Brush</name><op:operator pos:line="307" pos:column="31">)</op:operator><name><name pos:line="307" pos:column="32">Application</name><op:operator pos:line="307" pos:column="43">.</op:operator><name pos:line="307" pos:column="44">Current</name><op:operator pos:line="307" pos:column="51">.</op:operator><name pos:line="307" pos:column="52">Resources</name><index pos:line="307" pos:column="61">[<expr><name pos:line="307" pos:column="62">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <return pos:line="308" pos:column="13">return <expr><name pos:line="308" pos:column="20">brush</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="311" pos:column="9">static</specifier> <specifier pos:line="311" pos:column="16">internal</specifier> <name pos:line="311" pos:column="25">Brush</name></type> <name pos:line="311" pos:column="31">GetToolBackgroundcolor</name><parameter_list pos:line="311" pos:column="53">()</parameter_list>
        <block pos:line="312" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="313" pos:column="13">var</name></type> <name pos:line="313" pos:column="17">key</name> <init pos:line="313" pos:column="21">= <expr><name><name pos:line="313" pos:column="23">Microsoft</name><op:operator pos:line="313" pos:column="32">.</op:operator><name pos:line="313" pos:column="33">VisualStudio</name><op:operator pos:line="313" pos:column="45">.</op:operator><name pos:line="313" pos:column="46">Shell</name><op:operator pos:line="313" pos:column="51">.</op:operator><name pos:line="313" pos:column="52">VsBrushes</name><op:operator pos:line="313" pos:column="61">.</op:operator><name pos:line="313" pos:column="62">ToolWindowBackgroundKey</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="314" pos:column="13">var</name></type> <name pos:line="314" pos:column="17">brush</name> <init pos:line="314" pos:column="23">= <expr><op:operator pos:line="314" pos:column="25">(</op:operator><name pos:line="314" pos:column="26">Brush</name><op:operator pos:line="314" pos:column="31">)</op:operator><name><name pos:line="314" pos:column="32">Application</name><op:operator pos:line="314" pos:column="43">.</op:operator><name pos:line="314" pos:column="44">Current</name><op:operator pos:line="314" pos:column="51">.</op:operator><name pos:line="314" pos:column="52">Resources</name><index pos:line="314" pos:column="61">[<expr><name pos:line="314" pos:column="62">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <return pos:line="315" pos:column="13">return <expr><name pos:line="315" pos:column="20">brush</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="318" pos:column="9">static</specifier> <specifier pos:line="318" pos:column="16">internal</specifier> <name pos:line="318" pos:column="25">Brush</name></type> <name pos:line="318" pos:column="31">GetToolBackgroundHighlightColor</name><parameter_list pos:line="318" pos:column="62">()</parameter_list>
        <block pos:line="319" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="320" pos:column="13">var</name></type> <name pos:line="320" pos:column="17">key</name> <init pos:line="320" pos:column="21">= <expr><name><name pos:line="320" pos:column="23">Microsoft</name><op:operator pos:line="320" pos:column="32">.</op:operator><name pos:line="320" pos:column="33">VisualStudio</name><op:operator pos:line="320" pos:column="45">.</op:operator><name pos:line="320" pos:column="46">Shell</name><op:operator pos:line="320" pos:column="51">.</op:operator><name pos:line="320" pos:column="52">VsBrushes</name><op:operator pos:line="320" pos:column="61">.</op:operator><name pos:line="320" pos:column="62">DropDownBackgroundKey</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="321" pos:column="13">var</name></type> <name pos:line="321" pos:column="17">brush</name> <init pos:line="321" pos:column="23">= <expr><op:operator pos:line="321" pos:column="25">(</op:operator><name pos:line="321" pos:column="26">Brush</name><op:operator pos:line="321" pos:column="31">)</op:operator><name><name pos:line="321" pos:column="32">Application</name><op:operator pos:line="321" pos:column="43">.</op:operator><name pos:line="321" pos:column="44">Current</name><op:operator pos:line="321" pos:column="51">.</op:operator><name pos:line="321" pos:column="52">Resources</name><index pos:line="321" pos:column="61">[<expr><name pos:line="321" pos:column="62">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <return pos:line="322" pos:column="13">return <expr><name pos:line="322" pos:column="20">brush</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="325" pos:column="9">internal</specifier> <specifier pos:line="325" pos:column="18">static</specifier> <name pos:line="325" pos:column="25">Brush</name></type> <name pos:line="325" pos:column="31">GetHistoryTextColor</name><parameter_list pos:line="325" pos:column="50">()</parameter_list>
        <block pos:line="326" pos:column="9">{
            <if pos:line="327" pos:column="13">if <condition pos:line="327" pos:column="16">(<expr><call><name><name pos:line="327" pos:column="17">FileOpener</name><op:operator pos:line="327" pos:column="27">.</op:operator><name pos:line="327" pos:column="28">Is2012OrLater</name></name><argument_list pos:line="327" pos:column="41">()</argument_list></call></expr>)</condition><then pos:line="327" pos:column="44">
            <block pos:line="328" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="329" pos:column="17">var</name></type> <name pos:line="329" pos:column="21">key</name> <init pos:line="329" pos:column="25">= <expr><name><name pos:line="329" pos:column="27">Microsoft</name><op:operator pos:line="329" pos:column="36">.</op:operator><name pos:line="329" pos:column="37">VisualStudio</name><op:operator pos:line="329" pos:column="49">.</op:operator><name pos:line="329" pos:column="50">Shell</name><op:operator pos:line="329" pos:column="55">.</op:operator><name pos:line="329" pos:column="56">VsBrushes</name><op:operator pos:line="329" pos:column="65">.</op:operator><name pos:line="329" pos:column="66">ToolWindowTabMouseOverTextKey</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="330" pos:column="17">var</name></type> <name pos:line="330" pos:column="21">color</name> <init pos:line="330" pos:column="27">= <expr><op:operator pos:line="330" pos:column="29">(</op:operator><name pos:line="330" pos:column="30">Brush</name><op:operator pos:line="330" pos:column="35">)</op:operator><name><name pos:line="330" pos:column="36">Application</name><op:operator pos:line="330" pos:column="47">.</op:operator><name pos:line="330" pos:column="48">Current</name><op:operator pos:line="330" pos:column="55">.</op:operator><name pos:line="330" pos:column="56">Resources</name><index pos:line="330" pos:column="65">[<expr><name pos:line="330" pos:column="66">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="331" pos:column="17">var</name></type> <name pos:line="331" pos:column="21">other</name> <init pos:line="331" pos:column="27">= <expr><op:operator pos:line="331" pos:column="29">(</op:operator><name pos:line="331" pos:column="30">Brush</name><op:operator pos:line="331" pos:column="35">)</op:operator><name><name pos:line="331" pos:column="36">Application</name><op:operator pos:line="331" pos:column="47">.</op:operator><name pos:line="331" pos:column="48">Current</name><op:operator pos:line="331" pos:column="55">.</op:operator><name pos:line="331" pos:column="56">Resources</name><index pos:line="331" pos:column="65">[<expr><name><name pos:line="331" pos:column="66">Microsoft</name><op:operator pos:line="331" pos:column="75">.</op:operator><name pos:line="331" pos:column="76">VisualStudio</name><op:operator pos:line="331" pos:column="88">.</op:operator><name pos:line="331" pos:column="89">Shell</name><op:operator pos:line="331" pos:column="94">.</op:operator><name pos:line="331" pos:column="95">VsBrushes</name><op:operator pos:line="331" pos:column="104">.</op:operator><name pos:line="331" pos:column="105">ToolWindowBackgroundKey</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if pos:line="332" pos:column="17">if <condition pos:line="332" pos:column="20">(<expr><call><name><name pos:line="332" pos:column="21">color</name><op:operator pos:line="332" pos:column="26">.</op:operator><name pos:line="332" pos:column="27">ToString</name></name><argument_list pos:line="332" pos:column="35">()</argument_list></call><op:operator pos:line="332" pos:column="37">.</op:operator><call><name pos:line="332" pos:column="38">Equals</name><argument_list pos:line="332" pos:column="44">(<argument><expr><call><name><name pos:line="332" pos:column="45">other</name><op:operator pos:line="332" pos:column="50">.</op:operator><name pos:line="332" pos:column="51">ToString</name></name><argument_list pos:line="332" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="332" pos:column="63">
                <block pos:line="333" pos:column="17">{
                    <return pos:line="334" pos:column="21">return <expr><op:operator pos:line="334" pos:column="28">(</op:operator><name pos:line="334" pos:column="29">Brush</name><op:operator pos:line="334" pos:column="34">)</op:operator><name><name pos:line="334" pos:column="35">Application</name><op:operator pos:line="334" pos:column="46">.</op:operator><name pos:line="334" pos:column="47">Current</name><op:operator pos:line="334" pos:column="54">.</op:operator><name pos:line="334" pos:column="55">Resources</name><index pos:line="334" pos:column="64">[<expr><name><name pos:line="334" pos:column="65">Microsoft</name><op:operator pos:line="334" pos:column="74">.</op:operator><name pos:line="334" pos:column="75">VisualStudio</name><op:operator pos:line="334" pos:column="87">.</op:operator><name pos:line="334" pos:column="88">Shell</name><op:operator pos:line="334" pos:column="93">.</op:operator><name pos:line="334" pos:column="94">VsBrushes</name><op:operator pos:line="334" pos:column="103">.</op:operator><name pos:line="334" pos:column="104">HelpSearchResultLinkSelectedKey</name></name></expr>]</index></name></expr>;</return>
                }</block></then>
                <else pos:line="336" pos:column="17">else
                    <return pos:line="337" pos:column="21">return <expr><name pos:line="337" pos:column="28">color</name></expr>;</return></else></if>
            }</block></then>
            <else pos:line="339" pos:column="13">else
            <block pos:line="340" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="341" pos:column="17">var</name></type> <name pos:line="341" pos:column="21">key</name> <init pos:line="341" pos:column="25">= <expr><name><name pos:line="341" pos:column="27">Microsoft</name><op:operator pos:line="341" pos:column="36">.</op:operator><name pos:line="341" pos:column="37">VisualStudio</name><op:operator pos:line="341" pos:column="49">.</op:operator><name pos:line="341" pos:column="50">Shell</name><op:operator pos:line="341" pos:column="55">.</op:operator><name pos:line="341" pos:column="56">VsBrushes</name><op:operator pos:line="341" pos:column="65">.</op:operator><name pos:line="341" pos:column="66">HelpSearchResultLinkSelectedKey</name></name></expr></init></decl>;</decl_stmt>
                <return pos:line="342" pos:column="17">return <expr><op:operator pos:line="342" pos:column="24">(</op:operator><name pos:line="342" pos:column="25">Brush</name><op:operator pos:line="342" pos:column="30">)</op:operator><name><name pos:line="342" pos:column="31">Application</name><op:operator pos:line="342" pos:column="42">.</op:operator><name pos:line="342" pos:column="43">Current</name><op:operator pos:line="342" pos:column="50">.</op:operator><name pos:line="342" pos:column="51">Resources</name><index pos:line="342" pos:column="60">[<expr><name pos:line="342" pos:column="61">key</name></expr>]</index></name></expr>;</return>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="346" pos:column="9">internal</specifier> <name pos:line="346" pos:column="18">Color</name></type> <name pos:line="346" pos:column="24">GetHighlightColor</name><parameter_list pos:line="346" pos:column="41">()</parameter_list>
        <block pos:line="347" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="348" pos:column="13">var</name></type> <name pos:line="348" pos:column="17">key</name> <init pos:line="348" pos:column="21">= <expr><name><name pos:line="348" pos:column="23">Microsoft</name><op:operator pos:line="348" pos:column="32">.</op:operator><name pos:line="348" pos:column="33">VisualStudio</name><op:operator pos:line="348" pos:column="45">.</op:operator><name pos:line="348" pos:column="46">Shell</name><op:operator pos:line="348" pos:column="51">.</op:operator><name pos:line="348" pos:column="52">VsBrushes</name><op:operator pos:line="348" pos:column="61">.</op:operator><name pos:line="348" pos:column="62">HighlightKey</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="349" pos:column="13">var</name></type> <name pos:line="349" pos:column="17">brush</name> <init pos:line="349" pos:column="23">= <expr><op:operator pos:line="349" pos:column="25">(</op:operator><name pos:line="349" pos:column="26">SolidColorBrush</name><op:operator pos:line="349" pos:column="41">)</op:operator><name><name pos:line="349" pos:column="42">Application</name><op:operator pos:line="349" pos:column="53">.</op:operator><name pos:line="349" pos:column="54">Current</name><op:operator pos:line="349" pos:column="61">.</op:operator><name pos:line="349" pos:column="62">Resources</name><index pos:line="349" pos:column="71">[<expr><name pos:line="349" pos:column="72">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <return pos:line="350" pos:column="13">return <expr><name><name pos:line="350" pos:column="20">brush</name><op:operator pos:line="350" pos:column="25">.</op:operator><name pos:line="350" pos:column="26">Color</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="353" pos:column="9">internal</specifier> <name pos:line="353" pos:column="18">Color</name></type> <name pos:line="353" pos:column="24">GetHighlightBorderColor</name><parameter_list pos:line="353" pos:column="47">()</parameter_list>
        <block pos:line="354" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="355" pos:column="13">var</name></type> <name pos:line="355" pos:column="17">key</name> <init pos:line="355" pos:column="21">= <expr><name><name pos:line="355" pos:column="23">Microsoft</name><op:operator pos:line="355" pos:column="32">.</op:operator><name pos:line="355" pos:column="33">VisualStudio</name><op:operator pos:line="355" pos:column="45">.</op:operator><name pos:line="355" pos:column="46">Shell</name><op:operator pos:line="355" pos:column="51">.</op:operator><name pos:line="355" pos:column="52">VsBrushes</name><op:operator pos:line="355" pos:column="61">.</op:operator><name pos:line="355" pos:column="62">HighlightTextKey</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="356" pos:column="13">var</name></type> <name pos:line="356" pos:column="17">brush</name> <init pos:line="356" pos:column="23">= <expr><op:operator pos:line="356" pos:column="25">(</op:operator><name pos:line="356" pos:column="26">SolidColorBrush</name><op:operator pos:line="356" pos:column="41">)</op:operator><name><name pos:line="356" pos:column="42">Application</name><op:operator pos:line="356" pos:column="53">.</op:operator><name pos:line="356" pos:column="54">Current</name><op:operator pos:line="356" pos:column="61">.</op:operator><name pos:line="356" pos:column="62">Resources</name><index pos:line="356" pos:column="71">[<expr><name pos:line="356" pos:column="72">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <return pos:line="357" pos:column="13">return <expr><name><name pos:line="357" pos:column="20">brush</name><op:operator pos:line="357" pos:column="25">.</op:operator><name pos:line="357" pos:column="26">Color</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="360" pos:column="9">private</specifier> <name pos:line="360" pos:column="17">void</name></type> <name pos:line="360" pos:column="22">SearchBox_OnSelectionChanged</name><parameter_list pos:line="360" pos:column="50">(<param><decl><type><name pos:line="360" pos:column="51">object</name></type> <name pos:line="360" pos:column="58">sender</name></decl></param>, <param><decl><type><name pos:line="360" pos:column="66">SelectionChangedEventArgs</name></type> <name pos:line="360" pos:column="92">e</name></decl></param>)</parameter_list>
        <block pos:line="361" pos:column="9">{
            <try pos:line="362" pos:column="13">try
            <block pos:line="363" pos:column="13">{
                <if pos:line="364" pos:column="17">if <condition pos:line="364" pos:column="20">(<expr><name><name pos:line="364" pos:column="21">e</name><op:operator pos:line="364" pos:column="22">.</op:operator><name pos:line="364" pos:column="23">AddedItems</name><op:operator pos:line="364" pos:column="33">.</op:operator><name pos:line="364" pos:column="34">Count</name></name> <op:operator pos:line="364" pos:column="40">==</op:operator> <lit:literal type="number" pos:line="364" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="364" pos:column="45">
                    <return pos:line="365" pos:column="21">return;</return></then></if>
                <decl_stmt><decl><type><name pos:line="366" pos:column="17">var</name></type> <name pos:line="366" pos:column="21">item</name> <init pos:line="366" pos:column="26">= <expr><op:operator pos:line="366" pos:column="28">(</op:operator><name pos:line="366" pos:column="29">ISwumRecommendedQuery</name><op:operator pos:line="366" pos:column="50">)</op:operator><name><name pos:line="366" pos:column="51">e</name><op:operator pos:line="366" pos:column="52">.</op:operator><name pos:line="366" pos:column="53">AddedItems</name><index pos:line="366" pos:column="63">[<expr><lit:literal type="number" pos:line="366" pos:column="64">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if pos:line="367" pos:column="17">if <condition pos:line="367" pos:column="20">(<expr><name><name pos:line="367" pos:column="21">item</name><op:operator pos:line="367" pos:column="25">.</op:operator><name pos:line="367" pos:column="26">Type</name></name> <op:operator pos:line="367" pos:column="31">==</op:operator> <name><name pos:line="367" pos:column="34">SwumRecommnedationType</name><op:operator pos:line="367" pos:column="56">.</op:operator><name pos:line="367" pos:column="57">History</name></name></expr>)</condition><then pos:line="367" pos:column="65">
                    <expr_stmt><expr><call><name><name pos:line="368" pos:column="21">LogEvents</name><op:operator pos:line="368" pos:column="30">.</op:operator><name pos:line="368" pos:column="31">SelectHistoryItem</name></name><argument_list pos:line="368" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then>
                <else pos:line="369" pos:column="17">else
                    <expr_stmt><expr><call><name><name pos:line="370" pos:column="21">LogEvents</name><op:operator pos:line="370" pos:column="30">.</op:operator><name pos:line="370" pos:column="31">SelectSwumRecommendation</name></name><argument_list pos:line="370" pos:column="55">(<argument><expr><name><name pos:line="370" pos:column="56">item</name><op:operator pos:line="370" pos:column="60">.</op:operator><name pos:line="370" pos:column="61">Query</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
            }</block>
            <catch pos:line="372" pos:column="13">catch <parameter_list pos:line="372" pos:column="19">(<param><decl><type><name pos:line="372" pos:column="20">Exception</name></type> <name pos:line="372" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="373" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="374" pos:column="17">LogEvents</name><op:operator pos:line="374" pos:column="26">.</op:operator><name pos:line="374" pos:column="27">UIGenericError</name></name><argument_list pos:line="374" pos:column="41">(<argument><expr><name pos:line="374" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="374" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
