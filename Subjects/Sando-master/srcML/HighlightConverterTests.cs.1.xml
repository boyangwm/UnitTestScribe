<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI.UnitTests\HighlightConverterTests.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Threading</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Tasks</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Windows</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Documents</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">NUnit</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Framework</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">ExtensionContracts</name><op:operator pos:line="8" pos:column="31">.</op:operator><name pos:line="8" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">UI</name><op:operator pos:line="9" pos:column="15">.</op:operator><name pos:line="9" pos:column="16">View</name><op:operator pos:line="9" pos:column="20">.</op:operator><name pos:line="9" pos:column="21">Search</name><op:operator pos:line="9" pos:column="27">.</op:operator><name pos:line="9" pos:column="28">Converters</name></name>;</using>

<namespace pos:line="11" pos:column="1">namespace <name><name pos:line="11" pos:column="11">Sando</name><op:operator pos:line="11" pos:column="16">.</op:operator><name pos:line="11" pos:column="17">UI</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">UnitTests</name></name>
<block pos:line="12" pos:column="1">{
    <class><attribute pos:line="13" pos:column="5">[<expr><name pos:line="13" pos:column="6">TestFixture</name></expr>]</attribute>
    class <name pos:line="14" pos:column="11">HighlightConverterTests</name>
    <block pos:line="15" pos:column="5">{
        <class><specifier pos:line="16" pos:column="9">private</specifier> class <name pos:line="16" pos:column="23">InternalHighlightRawInfo</name> <super pos:line="16" pos:column="48">: <name pos:line="16" pos:column="50">IHighlightRawInfo</name></super>
        <block pos:line="17" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="18" pos:column="13">public</specifier> <name pos:line="18" pos:column="20">string</name></type> <name pos:line="18" pos:column="27">Text</name> <block pos:line="18" pos:column="32">{ <function_decl><name pos:line="18" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="18" pos:column="39">private</specifier> <name pos:line="18" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="19" pos:column="13">public</specifier> <name pos:line="19" pos:column="20">int</name></type> <name pos:line="19" pos:column="24">StartLineNumber</name> <block pos:line="19" pos:column="40">{ <function_decl><name pos:line="19" pos:column="42">get</name>;</function_decl> <function_decl><specifier pos:line="19" pos:column="47">private</specifier> <name pos:line="19" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="20" pos:column="13">public</specifier> <name pos:line="20" pos:column="20">int</name><index pos:line="20" pos:column="23">[]</index></type> <name pos:line="20" pos:column="26">Offsets</name> <block pos:line="20" pos:column="34">{ <function_decl><name pos:line="20" pos:column="36">get</name>;</function_decl> <function_decl><specifier pos:line="20" pos:column="41">private</specifier> <name pos:line="20" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="21" pos:column="13">public</specifier> <name pos:line="21" pos:column="20">IndentionOption</name></type> <name pos:line="21" pos:column="36">IndOption</name> <block pos:line="21" pos:column="46">{ <function_decl><name pos:line="21" pos:column="48">get</name>;</function_decl> <function_decl><specifier pos:line="21" pos:column="53">private</specifier> <name pos:line="21" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>

            <constructor><specifier pos:line="23" pos:column="13">internal</specifier> <name pos:line="23" pos:column="22">InternalHighlightRawInfo</name><parameter_list pos:line="23" pos:column="46">(<param><decl><type><name pos:line="23" pos:column="47">String</name></type> <name pos:line="23" pos:column="54">Text</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="60">int</name></type> <name pos:line="23" pos:column="64">StartLineNumber</name></decl></param>, <param><decl><type><name><name pos:line="23" pos:column="81">int</name><index pos:line="23" pos:column="84">[]</index></name></type> <name pos:line="23" pos:column="87">Offsets</name> <init pos:line="23" pos:column="95">= <expr><name pos:line="23" pos:column="97">null</name></expr></init></decl></param>)</parameter_list>
            <block pos:line="24" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">this</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">Text</name></name> <op:operator pos:line="25" pos:column="27">=</op:operator> <name pos:line="25" pos:column="29">Text</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">this</name><op:operator pos:line="26" pos:column="21">.</op:operator><name pos:line="26" pos:column="22">StartLineNumber</name></name> <op:operator pos:line="26" pos:column="38">=</op:operator> <name pos:line="26" pos:column="40">StartLineNumber</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="27" pos:column="17">this</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">Offsets</name></name> <op:operator pos:line="27" pos:column="30">=</op:operator> <name pos:line="27" pos:column="32">Offsets</name></expr>;</expr_stmt>
            }</block></constructor>
        }</block></class>
        
        <function><type><attribute pos:line="31" pos:column="9">[<expr><name pos:line="31" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">void</name></type> <name pos:line="32" pos:column="21">MakeSureEmptyLinesAreHandled</name><parameter_list pos:line="32" pos:column="49">()</parameter_list>
        <block pos:line="33" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">converter</name> <init pos:line="34" pos:column="27">= <expr><op:operator pos:line="34" pos:column="29">new</op:operator> <call><name pos:line="34" pos:column="33">HighlightSearchKey</name><argument_list pos:line="34" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">var</name></type> <name pos:line="35" pos:column="17">sb</name> <init pos:line="35" pos:column="20">= <expr><op:operator pos:line="35" pos:column="22">new</op:operator> <call><name pos:line="35" pos:column="26">StringBuilder</name><argument_list pos:line="35" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for pos:line="36" pos:column="13">for (<init><decl><type><name pos:line="36" pos:column="18">int</name></type> <name pos:line="36" pos:column="22">i</name> <init pos:line="36" pos:column="24">= <expr><lit:literal type="number" pos:line="36" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="36" pos:column="29">i</name> <op:operator pos:line="36" pos:column="31">&lt;</op:operator> <lit:literal type="number" pos:line="36" pos:column="33">10</lit:literal></expr>;</condition> <incr><expr><name pos:line="36" pos:column="37">i</name> <op:operator pos:line="36" pos:column="39">++</op:operator></expr></incr>)
            <block pos:line="37" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="38" pos:column="17">sb</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">AppendLine</name></name><argument_list pos:line="38" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="31">"abc"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="39" pos:column="17">sb</name><op:operator pos:line="39" pos:column="19">.</op:operator><name pos:line="39" pos:column="20">AppendLine</name></name><argument_list pos:line="39" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            }</block></for>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">var</name></type> <name pos:line="41" pos:column="17">info</name> <init pos:line="41" pos:column="22">= <expr><op:operator pos:line="41" pos:column="24">new</op:operator> <call><name pos:line="41" pos:column="28">InternalHighlightRawInfo</name><argument_list pos:line="41" pos:column="52">(<argument><expr><call><name><name pos:line="41" pos:column="53">sb</name><op:operator pos:line="41" pos:column="55">.</op:operator><name pos:line="41" pos:column="56">ToString</name></name><argument_list pos:line="41" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="41" pos:column="68">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">var</name></type> <name pos:line="42" pos:column="17">lines</name> <init pos:line="42" pos:column="23">= <expr><op:operator pos:line="42" pos:column="25">(</op:operator><op:operator pos:line="42" pos:column="26">(</op:operator><name pos:line="42" pos:column="27">Span</name><op:operator pos:line="42" pos:column="31">)</op:operator> <call><name><name pos:line="42" pos:column="33">converter</name><op:operator pos:line="42" pos:column="42">.</op:operator><name pos:line="42" pos:column="43">Convert</name></name><argument_list pos:line="42" pos:column="50">(<argument><expr><name pos:line="42" pos:column="51">info</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="57">null</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">null</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="69">null</name></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="74">)</op:operator><op:operator pos:line="42" pos:column="75">.</op:operator><call><name><name pos:line="42" pos:column="76">Inlines</name><op:operator pos:line="42" pos:column="83">.</op:operator><name pos:line="42" pos:column="84">ToArray</name></name><argument_list pos:line="42" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">var</name></type> <name pos:line="43" pos:column="17">n</name> <init pos:line="43" pos:column="19">= <expr><name><name pos:line="43" pos:column="21">Environment</name><op:operator pos:line="43" pos:column="32">.</op:operator><name pos:line="43" pos:column="33">NewLine</name></name></expr></init></decl>;</decl_stmt>
        }</block></function>

        <function><type><attribute pos:line="46" pos:column="9">[<expr><name pos:line="46" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="47" pos:column="9">public</specifier> <name pos:line="47" pos:column="16">void</name></type> <name pos:line="47" pos:column="21">HandleTextWithHeadingAndTailingEmptyLines</name><parameter_list pos:line="47" pos:column="62">()</parameter_list>
        <block pos:line="48" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">var</name></type> <name pos:line="49" pos:column="17">converter</name> <init pos:line="49" pos:column="27">= <expr><op:operator pos:line="49" pos:column="29">new</op:operator> <call><name pos:line="49" pos:column="33">HighlightSearchKey</name><argument_list pos:line="49" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="50" pos:column="13">var</name></type> <name pos:line="50" pos:column="17">sb</name> <init pos:line="50" pos:column="20">= <expr><op:operator pos:line="50" pos:column="22">new</op:operator> <call><name pos:line="50" pos:column="26">StringBuilder</name><argument_list pos:line="50" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">sb</name><op:operator pos:line="51" pos:column="15">.</op:operator><name pos:line="51" pos:column="16">AppendLine</name></name><argument_list pos:line="51" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">sb</name><op:operator pos:line="52" pos:column="15">.</op:operator><name pos:line="52" pos:column="16">AppendLine</name></name><argument_list pos:line="52" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <for pos:line="53" pos:column="13">for (<init><decl><type><name pos:line="53" pos:column="18">int</name></type> <name pos:line="53" pos:column="22">i</name> <init pos:line="53" pos:column="24">= <expr><lit:literal type="number" pos:line="53" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="53" pos:column="29">i</name> <op:operator pos:line="53" pos:column="31">&lt;</op:operator> <lit:literal type="number" pos:line="53" pos:column="33">10</lit:literal></expr>;</condition> <incr><expr><name pos:line="53" pos:column="37">i</name><op:operator pos:line="53" pos:column="38">++</op:operator></expr></incr>)
            <block pos:line="54" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="55" pos:column="17">sb</name><op:operator pos:line="55" pos:column="19">.</op:operator><name pos:line="55" pos:column="20">AppendLine</name></name><argument_list pos:line="55" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="31">"abc"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="56" pos:column="17">sb</name><op:operator pos:line="56" pos:column="19">.</op:operator><name pos:line="56" pos:column="20">AppendLine</name></name><argument_list pos:line="56" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            }</block></for>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">sb</name><op:operator pos:line="58" pos:column="15">.</op:operator><name pos:line="58" pos:column="16">AppendLine</name></name><argument_list pos:line="58" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">sb</name><op:operator pos:line="59" pos:column="15">.</op:operator><name pos:line="59" pos:column="16">AppendLine</name></name><argument_list pos:line="59" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="60" pos:column="13">var</name></type> <name pos:line="60" pos:column="17">info</name> <init pos:line="60" pos:column="22">= <expr><op:operator pos:line="60" pos:column="24">new</op:operator> <call><name pos:line="60" pos:column="28">InternalHighlightRawInfo</name><argument_list pos:line="60" pos:column="52">(<argument><expr><call><name><name pos:line="60" pos:column="53">sb</name><op:operator pos:line="60" pos:column="55">.</op:operator><name pos:line="60" pos:column="56">ToString</name></name><argument_list pos:line="60" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="60" pos:column="68">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">converter</name><op:operator pos:line="61" pos:column="22">.</op:operator><name pos:line="61" pos:column="23">Convert</name></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">info</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">null</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="43">null</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="64" pos:column="9">[<expr><name pos:line="64" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="65" pos:column="9">public</specifier> <name pos:line="65" pos:column="16">void</name></type> <name pos:line="65" pos:column="21">HighlightedWordAtBeginningTest</name><parameter_list pos:line="65" pos:column="51">()</parameter_list>
        <block pos:line="66" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="67" pos:column="13">var</name></type> <name pos:line="67" pos:column="17">text</name> <init pos:line="67" pos:column="22">= <expr><lit:literal type="string" pos:line="67" pos:column="24">"|~S~|add|~E~|{\r\n}"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">var</name></type> <name pos:line="68" pos:column="17">info</name> <init pos:line="68" pos:column="22">= <expr><op:operator pos:line="68" pos:column="24">new</op:operator> <call><name pos:line="68" pos:column="28">InternalHighlightRawInfo</name><argument_list pos:line="68" pos:column="52">(<argument><expr><name pos:line="68" pos:column="53">text</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="68" pos:column="59">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="69" pos:column="13">var</name></type> <name pos:line="69" pos:column="17">converter</name> <init pos:line="69" pos:column="27">= <expr><op:operator pos:line="69" pos:column="29">new</op:operator> <call><name pos:line="69" pos:column="33">HighlightSearchKey</name><argument_list pos:line="69" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">converter</name><op:operator pos:line="70" pos:column="22">.</op:operator><name pos:line="70" pos:column="23">Convert</name></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name pos:line="70" pos:column="31">info</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">null</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="43">null</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="49">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
