<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\undoredo.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for undoredo.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__undoredo_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__undoredo_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IAction_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IAction_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IAction</name></type> <name pos:line="53" pos:column="27">IAction</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IAction_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__IEnumActions_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__IEnumActions_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">IEnumActions</name></type> <name pos:line="59" pos:column="32">IEnumActions</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __IEnumActions_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef</cpp:directive> <name pos:line="63" pos:column="9">__IActionHistory_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">__IActionHistory_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="65" pos:column="1">typedef <type><name pos:line="65" pos:column="9">interface</name> <name pos:line="65" pos:column="19">IActionHistory</name></type> <name pos:line="65" pos:column="34">IActionHistory</name>;</typedef>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="66" pos:column="9">/* __IActionHistory_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifndef</cpp:directive> <name pos:line="69" pos:column="9">__ActionHistory_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">__ActionHistory_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef</cpp:directive> <name pos:line="72" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="73" pos:column="1">typedef <type pos:line="73" pos:column="9">class <name pos:line="73" pos:column="15">ActionHistory</name></type> <name pos:line="73" pos:column="29">ActionHistory</name>;</typedef>
<cpp:else pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="75" pos:column="1">typedef <type pos:line="75" pos:column="9">struct <name pos:line="75" pos:column="16">ActionHistory</name></type> <name pos:line="75" pos:column="30">ActionHistory</name>;</typedef>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="76" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="78" pos:column="9">/* __ActionHistory_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="81" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="82" pos:column="10">"oaidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="83" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifdef</cpp:directive> <name pos:line="85" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="86" pos:column="1">extern <lit:literal type="string" pos:line="86" pos:column="8">"C"</lit:literal><block pos:line="86" pos:column="11">{
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif</cpp:directive></cpp:endif> 


<cpp:ifndef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifndef</cpp:directive> <name pos:line="90" pos:column="9">__IAction_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="91" pos:column="9">__IAction_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="93" pos:column="1">/* interface IAction */</comment>
<comment type="block" pos:line="94" pos:column="1">/* [unique][helpstring][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="97" pos:column="1">EXTERN_C</name> <specifier pos:line="97" pos:column="10">const</specifier> <name pos:line="97" pos:column="16">IID</name></type> <name pos:line="97" pos:column="20">IID_IAction</name></decl>;</decl_stmt>

<cpp:if pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">if</cpp:directive> <expr><call><name pos:line="99" pos:column="5">defined</name><argument_list pos:line="99" pos:column="12">(<argument><expr><name pos:line="99" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="99" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="99" pos:column="29">!</op:operator><call><name pos:line="99" pos:column="30">defined</name><argument_list pos:line="99" pos:column="37">(<argument><expr><name pos:line="99" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="101" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="101" pos:column="19">(<argument pos:line="101" pos:column="20">"D8C8AB11-7D4A-11d0-A8AA-00A0C921A4D2"</argument>)</argument_list></macro>
    <label><name pos:line="102" pos:column="5">IAction</name> :</label> <expr_stmt><expr pos:line="102" pos:column="15">public <name pos:line="102" pos:column="22">IUnknown</name>
    <block pos:line="103" pos:column="5">{
    <expr pos:line="104" pos:column="5">public<op:operator pos:line="104" pos:column="11">:</op:operator>
        virtual <name pos:line="105" pos:column="17">HRESULT</name> <name pos:line="105" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="105" pos:column="43">GetName</name><argument_list pos:line="105" pos:column="50">( 
            <argument pos:line="106" pos:column="13">__RPC__deref_in_opt BSTR *bstrName</argument>,
            <argument pos:line="107" pos:column="13">BOOL fLongName</argument>)</argument_list></macro> <op:operator pos:line="107" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="107" pos:column="31">0</lit:literal></expr>;
        
        <expr pos:line="109" pos:column="9">virtual <name pos:line="109" pos:column="17">HRESULT</name> <name pos:line="109" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="109" pos:column="43">GetSize</name><argument_list pos:line="109" pos:column="50">( 
            <argument pos:line="110" pos:column="13">__RPC__in long *piSize</argument>)</argument_list></macro> <op:operator pos:line="110" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="110" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="112" pos:column="9">virtual <name pos:line="112" pos:column="17">HRESULT</name> <name pos:line="112" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="112" pos:column="43">Undo</name><argument_list pos:line="112" pos:column="47">( 
            <argument pos:line="113" pos:column="13">__RPC__in_opt IUnknown *pObject</argument>)</argument_list></macro> <op:operator pos:line="113" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="113" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="115" pos:column="9">virtual <name pos:line="115" pos:column="17">HRESULT</name> <name pos:line="115" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="115" pos:column="43">Redo</name><argument_list pos:line="115" pos:column="47">( 
            <argument pos:line="116" pos:column="13">__RPC__in_opt IUnknown *pObject</argument>)</argument_list></macro> <op:operator pos:line="116" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="116" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="118" pos:column="9">virtual <name pos:line="118" pos:column="17">HRESULT</name> <name pos:line="118" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="118" pos:column="43">Abort</name><argument_list pos:line="118" pos:column="48">( 
            <argument pos:line="119" pos:column="13">__RPC__in_opt IUnknown *pObject</argument>)</argument_list></macro> <op:operator pos:line="119" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="119" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="121" pos:column="9">virtual <name pos:line="121" pos:column="17">HRESULT</name> <name pos:line="121" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="121" pos:column="43">AddSibling</name><argument_list pos:line="121" pos:column="53">( 
            <argument pos:line="122" pos:column="13">__RPC__in_opt IAction *pAction</argument>)</argument_list></macro> <op:operator pos:line="122" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="122" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="124" pos:column="9">virtual <name pos:line="124" pos:column="17">HRESULT</name> <name pos:line="124" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="124" pos:column="43">GetNextSibling</name><argument_list pos:line="124" pos:column="57">( 
            <argument pos:line="125" pos:column="13">__RPC__deref_in_opt IAction **ppAction</argument>)</argument_list></macro> <op:operator pos:line="125" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="125" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="127" pos:column="9">virtual <name pos:line="127" pos:column="17">HRESULT</name> <name pos:line="127" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="127" pos:column="43">AddChild</name><argument_list pos:line="127" pos:column="51">( 
            <argument pos:line="128" pos:column="13">__RPC__in_opt IAction *pAction</argument>)</argument_list></macro> <op:operator pos:line="128" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="128" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="130" pos:column="9">virtual <name pos:line="130" pos:column="17">HRESULT</name> <name pos:line="130" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="130" pos:column="43">GetFirstChild</name><argument_list pos:line="130" pos:column="56">( 
            <argument pos:line="131" pos:column="13">__RPC__deref_in_opt IAction **ppAction</argument>)</argument_list></macro> <op:operator pos:line="131" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="131" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="133" pos:column="9">virtual <name pos:line="133" pos:column="17">HRESULT</name> <name pos:line="133" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="133" pos:column="43">CanMerge</name><argument_list pos:line="133" pos:column="51">( 
            <argument pos:line="134" pos:column="13">__RPC__in_opt IAction *pAction</argument>)</argument_list></macro> <op:operator pos:line="134" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="134" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="136" pos:column="9">virtual <name pos:line="136" pos:column="17">HRESULT</name> <name pos:line="136" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="136" pos:column="43">Merge</name><argument_list pos:line="136" pos:column="48">( 
            <argument pos:line="137" pos:column="13">__RPC__in_opt IAction *pAction</argument>)</argument_list></macro> <op:operator pos:line="137" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="137" pos:column="47">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="141" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="143" pos:column="5">typedef <type><struct pos:line="143" pos:column="13">struct <name pos:line="143" pos:column="20">IActionVtbl</name>
    <block pos:line="144" pos:column="5">{<public type="default" pos:line="144" pos:column="6">
        <function_decl><type><name pos:line="145" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="147" pos:column="9">HRESULT</name></type> ( <name pos:line="147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="147" pos:column="37">*</type:modifier><name pos:line="147" pos:column="38">QueryInterface</name> )<parameter_list pos:line="147" pos:column="54">( 
            <param><decl><type><name pos:line="148" pos:column="13">IAction</name> <type:modifier pos:line="148" pos:column="21">*</type:modifier></type> <name pos:line="148" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="149" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="149" pos:column="24">__RPC__in</name> <name pos:line="149" pos:column="34">REFIID</name></type> <name pos:line="149" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="150" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="151" pos:column="13">__RPC__deref_out</name>  <name pos:line="151" pos:column="31">void</name> <type:modifier pos:line="151" pos:column="36">*</type:modifier><type:modifier pos:line="151" pos:column="37">*</type:modifier></type><name pos:line="151" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="153" pos:column="9">ULONG</name></type> ( <name pos:line="153" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="153" pos:column="35">*</type:modifier><name pos:line="153" pos:column="36">AddRef</name> )<parameter_list pos:line="153" pos:column="44">( 
            <param><decl><type><name pos:line="154" pos:column="13">IAction</name> <type:modifier pos:line="154" pos:column="21">*</type:modifier></type> <name pos:line="154" pos:column="23">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="156" pos:column="9">ULONG</name></type> ( <name pos:line="156" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="156" pos:column="35">*</type:modifier><name pos:line="156" pos:column="36">Release</name> )<parameter_list pos:line="156" pos:column="45">( 
            <param><decl><type><name pos:line="157" pos:column="13">IAction</name> <type:modifier pos:line="157" pos:column="21">*</type:modifier></type> <name pos:line="157" pos:column="23">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="159" pos:column="9">HRESULT</name></type> ( <name pos:line="159" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="159" pos:column="37">*</type:modifier><name pos:line="159" pos:column="38">GetName</name> )<parameter_list pos:line="159" pos:column="47">( 
            <param><decl><type><name pos:line="160" pos:column="13">IAction</name> <type:modifier pos:line="160" pos:column="21">*</type:modifier></type> <name pos:line="160" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="161" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="161" pos:column="33">BSTR</name> <type:modifier pos:line="161" pos:column="38">*</type:modifier></type><name pos:line="161" pos:column="39">bstrName</name></decl></param>,
            <param><decl><type><name pos:line="162" pos:column="13">BOOL</name></type> <name pos:line="162" pos:column="18">fLongName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="164" pos:column="9">HRESULT</name></type> ( <name pos:line="164" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="164" pos:column="37">*</type:modifier><name pos:line="164" pos:column="38">GetSize</name> )<parameter_list pos:line="164" pos:column="47">( 
            <param><decl><type><name pos:line="165" pos:column="13">IAction</name> <type:modifier pos:line="165" pos:column="21">*</type:modifier></type> <name pos:line="165" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="166" pos:column="13">__RPC__in</name> <name pos:line="166" pos:column="23">long</name> <type:modifier pos:line="166" pos:column="28">*</type:modifier></type><name pos:line="166" pos:column="29">piSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="168" pos:column="9">HRESULT</name></type> ( <name pos:line="168" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="168" pos:column="37">*</type:modifier><name pos:line="168" pos:column="38">Undo</name> )<parameter_list pos:line="168" pos:column="44">( 
            <param><decl><type><name pos:line="169" pos:column="13">IAction</name> <type:modifier pos:line="169" pos:column="21">*</type:modifier></type> <name pos:line="169" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="170" pos:column="13">__RPC__in_opt</name> <name pos:line="170" pos:column="27">IUnknown</name> <type:modifier pos:line="170" pos:column="36">*</type:modifier></type><name pos:line="170" pos:column="37">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="172" pos:column="9">HRESULT</name></type> ( <name pos:line="172" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="172" pos:column="37">*</type:modifier><name pos:line="172" pos:column="38">Redo</name> )<parameter_list pos:line="172" pos:column="44">( 
            <param><decl><type><name pos:line="173" pos:column="13">IAction</name> <type:modifier pos:line="173" pos:column="21">*</type:modifier></type> <name pos:line="173" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="174" pos:column="13">__RPC__in_opt</name> <name pos:line="174" pos:column="27">IUnknown</name> <type:modifier pos:line="174" pos:column="36">*</type:modifier></type><name pos:line="174" pos:column="37">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="176" pos:column="9">HRESULT</name></type> ( <name pos:line="176" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="176" pos:column="37">*</type:modifier><name pos:line="176" pos:column="38">Abort</name> )<parameter_list pos:line="176" pos:column="45">( 
            <param><decl><type><name pos:line="177" pos:column="13">IAction</name> <type:modifier pos:line="177" pos:column="21">*</type:modifier></type> <name pos:line="177" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="178" pos:column="13">__RPC__in_opt</name> <name pos:line="178" pos:column="27">IUnknown</name> <type:modifier pos:line="178" pos:column="36">*</type:modifier></type><name pos:line="178" pos:column="37">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="180" pos:column="9">HRESULT</name></type> ( <name pos:line="180" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="180" pos:column="37">*</type:modifier><name pos:line="180" pos:column="38">AddSibling</name> )<parameter_list pos:line="180" pos:column="50">( 
            <param><decl><type><name pos:line="181" pos:column="13">IAction</name> <type:modifier pos:line="181" pos:column="21">*</type:modifier></type> <name pos:line="181" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="182" pos:column="13">__RPC__in_opt</name> <name pos:line="182" pos:column="27">IAction</name> <type:modifier pos:line="182" pos:column="35">*</type:modifier></type><name pos:line="182" pos:column="36">pAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="184" pos:column="9">HRESULT</name></type> ( <name pos:line="184" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="184" pos:column="37">*</type:modifier><name pos:line="184" pos:column="38">GetNextSibling</name> )<parameter_list pos:line="184" pos:column="54">( 
            <param><decl><type><name pos:line="185" pos:column="13">IAction</name> <type:modifier pos:line="185" pos:column="21">*</type:modifier></type> <name pos:line="185" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="186" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="186" pos:column="33">IAction</name> <type:modifier pos:line="186" pos:column="41">*</type:modifier><type:modifier pos:line="186" pos:column="42">*</type:modifier></type><name pos:line="186" pos:column="43">ppAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="188" pos:column="9">HRESULT</name></type> ( <name pos:line="188" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="188" pos:column="37">*</type:modifier><name pos:line="188" pos:column="38">AddChild</name> )<parameter_list pos:line="188" pos:column="48">( 
            <param><decl><type><name pos:line="189" pos:column="13">IAction</name> <type:modifier pos:line="189" pos:column="21">*</type:modifier></type> <name pos:line="189" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="190" pos:column="13">__RPC__in_opt</name> <name pos:line="190" pos:column="27">IAction</name> <type:modifier pos:line="190" pos:column="35">*</type:modifier></type><name pos:line="190" pos:column="36">pAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="192" pos:column="9">HRESULT</name></type> ( <name pos:line="192" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="192" pos:column="37">*</type:modifier><name pos:line="192" pos:column="38">GetFirstChild</name> )<parameter_list pos:line="192" pos:column="53">( 
            <param><decl><type><name pos:line="193" pos:column="13">IAction</name> <type:modifier pos:line="193" pos:column="21">*</type:modifier></type> <name pos:line="193" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="194" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="194" pos:column="33">IAction</name> <type:modifier pos:line="194" pos:column="41">*</type:modifier><type:modifier pos:line="194" pos:column="42">*</type:modifier></type><name pos:line="194" pos:column="43">ppAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="196" pos:column="9">HRESULT</name></type> ( <name pos:line="196" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="196" pos:column="37">*</type:modifier><name pos:line="196" pos:column="38">CanMerge</name> )<parameter_list pos:line="196" pos:column="48">( 
            <param><decl><type><name pos:line="197" pos:column="13">IAction</name> <type:modifier pos:line="197" pos:column="21">*</type:modifier></type> <name pos:line="197" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="198" pos:column="13">__RPC__in_opt</name> <name pos:line="198" pos:column="27">IAction</name> <type:modifier pos:line="198" pos:column="35">*</type:modifier></type><name pos:line="198" pos:column="36">pAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="200" pos:column="9">HRESULT</name></type> ( <name pos:line="200" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="200" pos:column="37">*</type:modifier><name pos:line="200" pos:column="38">Merge</name> )<parameter_list pos:line="200" pos:column="45">( 
            <param><decl><type><name pos:line="201" pos:column="13">IAction</name> <type:modifier pos:line="201" pos:column="21">*</type:modifier></type> <name pos:line="201" pos:column="23">This</name></decl></param>,
            <param><decl><type><name pos:line="202" pos:column="13">__RPC__in_opt</name> <name pos:line="202" pos:column="27">IAction</name> <type:modifier pos:line="202" pos:column="35">*</type:modifier></type><name pos:line="202" pos:column="36">pAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="204" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="205" pos:column="7">IActionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="207" pos:column="5">interface</name></type> <name pos:line="207" pos:column="15">IAction</name>
    <argument_list pos:line="208" pos:column="5">{
        <argument><expr><name pos:line="209" pos:column="9">CONST_VTBL</name> struct <name pos:line="209" pos:column="27">IActionVtbl</name> <op:operator pos:line="209" pos:column="39">*</op:operator><name pos:line="209" pos:column="40">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">ifdef</cpp:directive> <name pos:line="214" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="217" pos:column="9">IAction_QueryInterface</name><parameter_list pos:line="217" pos:column="31">(<param><type><name pos:line="217" pos:column="32">This</name></type></param>,<param><type><name pos:line="217" pos:column="37">riid</name></type></param>,<param><type><name pos:line="217" pos:column="42">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="218" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="220" pos:column="9">IAction_AddRef</name><parameter_list pos:line="220" pos:column="23">(<param><type><name pos:line="220" pos:column="24">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="221" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="223" pos:column="9">IAction_Release</name><parameter_list pos:line="223" pos:column="24">(<param><type><name pos:line="223" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="224" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="227" pos:column="1">#<cpp:directive pos:line="227" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="227" pos:column="9">IAction_GetName</name><parameter_list pos:line="227" pos:column="24">(<param><type><name pos:line="227" pos:column="25">This</name></type></param>,<param><type><name pos:line="227" pos:column="30">bstrName</name></type></param>,<param><type><name pos:line="227" pos:column="39">fLongName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="228" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,bstrName,fLongName) )</cpp:value></cpp:define> 

<cpp:define pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="230" pos:column="9">IAction_GetSize</name><parameter_list pos:line="230" pos:column="24">(<param><type><name pos:line="230" pos:column="25">This</name></type></param>,<param><type><name pos:line="230" pos:column="30">piSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="231" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,piSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="233" pos:column="9">IAction_Undo</name><parameter_list pos:line="233" pos:column="21">(<param><type><name pos:line="233" pos:column="22">This</name></type></param>,<param><type><name pos:line="233" pos:column="27">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="234" pos:column="5">( (This)-&gt;lpVtbl -&gt; Undo(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="236" pos:column="9">IAction_Redo</name><parameter_list pos:line="236" pos:column="21">(<param><type><name pos:line="236" pos:column="22">This</name></type></param>,<param><type><name pos:line="236" pos:column="27">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="237" pos:column="5">( (This)-&gt;lpVtbl -&gt; Redo(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="239" pos:column="1">#<cpp:directive pos:line="239" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="239" pos:column="9">IAction_Abort</name><parameter_list pos:line="239" pos:column="22">(<param><type><name pos:line="239" pos:column="23">This</name></type></param>,<param><type><name pos:line="239" pos:column="28">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="240" pos:column="5">( (This)-&gt;lpVtbl -&gt; Abort(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="242" pos:column="9">IAction_AddSibling</name><parameter_list pos:line="242" pos:column="27">(<param><type><name pos:line="242" pos:column="28">This</name></type></param>,<param><type><name pos:line="242" pos:column="33">pAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="243" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddSibling(This,pAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="245" pos:column="1">#<cpp:directive pos:line="245" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="245" pos:column="9">IAction_GetNextSibling</name><parameter_list pos:line="245" pos:column="31">(<param><type><name pos:line="245" pos:column="32">This</name></type></param>,<param><type><name pos:line="245" pos:column="37">ppAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="246" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNextSibling(This,ppAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="248" pos:column="9">IAction_AddChild</name><parameter_list pos:line="248" pos:column="25">(<param><type><name pos:line="248" pos:column="26">This</name></type></param>,<param><type><name pos:line="248" pos:column="31">pAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="249" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddChild(This,pAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="251" pos:column="9">IAction_GetFirstChild</name><parameter_list pos:line="251" pos:column="30">(<param><type><name pos:line="251" pos:column="31">This</name></type></param>,<param><type><name pos:line="251" pos:column="36">ppAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="252" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFirstChild(This,ppAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="254" pos:column="1">#<cpp:directive pos:line="254" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="254" pos:column="9">IAction_CanMerge</name><parameter_list pos:line="254" pos:column="25">(<param><type><name pos:line="254" pos:column="26">This</name></type></param>,<param><type><name pos:line="254" pos:column="31">pAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="255" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanMerge(This,pAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="257" pos:column="9">IAction_Merge</name><parameter_list pos:line="257" pos:column="22">(<param><type><name pos:line="257" pos:column="23">This</name></type></param>,<param><type><name pos:line="257" pos:column="28">pAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="258" pos:column="5">( (This)-&gt;lpVtbl -&gt; Merge(This,pAction) )</cpp:value></cpp:define> 

<cpp:endif pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="260" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="263" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="268" pos:column="9">/* __IAction_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">ifndef</cpp:directive> <name pos:line="271" pos:column="9">__IEnumActions_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="272" pos:column="9">__IEnumActions_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="274" pos:column="1">/* interface IEnumActions */</comment>
<comment type="block" pos:line="275" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="278" pos:column="1">EXTERN_C</name> <specifier pos:line="278" pos:column="10">const</specifier> <name pos:line="278" pos:column="16">IID</name></type> <name pos:line="278" pos:column="20">IID_IEnumActions</name></decl>;</decl_stmt>

<cpp:if pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">if</cpp:directive> <expr><call><name pos:line="280" pos:column="5">defined</name><argument_list pos:line="280" pos:column="12">(<argument><expr><name pos:line="280" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="280" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="280" pos:column="29">!</op:operator><call><name pos:line="280" pos:column="30">defined</name><argument_list pos:line="280" pos:column="37">(<argument><expr><name pos:line="280" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="282" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="282" pos:column="19">(<argument pos:line="282" pos:column="20">"7A6335C8-7884-11d0-A8A9-00A0C921A4D2"</argument>)</argument_list></macro>
    <label><name pos:line="283" pos:column="5">IEnumActions</name> :</label> <expr_stmt><expr pos:line="283" pos:column="20">public <name pos:line="283" pos:column="27">IUnknown</name>
    <block pos:line="284" pos:column="5">{
    <expr pos:line="285" pos:column="5">public<op:operator pos:line="285" pos:column="11">:</op:operator>
        virtual <name pos:line="286" pos:column="17">HRESULT</name> <name pos:line="286" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="286" pos:column="43">Next</name><argument_list pos:line="286" pos:column="47">( 
            <argument pos:line="287" pos:column="13">ULONG celt</argument>,
            <argument pos:line="288" pos:column="13">__RPC__deref_in_opt IAction **rgelt</argument>,
            <argument pos:line="289" pos:column="13">__RPC__in ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="289" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="289" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="291" pos:column="9">virtual <name pos:line="291" pos:column="17">HRESULT</name> <name pos:line="291" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="291" pos:column="43">Skip</name><argument_list pos:line="291" pos:column="47">( 
            <argument pos:line="292" pos:column="13">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="292" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="292" pos:column="27">0</lit:literal></expr>;
        
        <expr pos:line="294" pos:column="9">virtual <name pos:line="294" pos:column="17">HRESULT</name> <name pos:line="294" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="294" pos:column="43">Reset</name><argument_list pos:line="294" pos:column="48">( <argument><expr><name pos:line="294" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="294" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="294" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="296" pos:column="9">virtual <name pos:line="296" pos:column="17">HRESULT</name> <name pos:line="296" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="296" pos:column="43">Clone</name><argument_list pos:line="296" pos:column="48">( 
            <argument pos:line="297" pos:column="13">__RPC__deref_in_opt IEnumActions **ppenum</argument>)</argument_list></macro> <op:operator pos:line="297" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="297" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="301" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="303" pos:column="5">typedef <type><struct pos:line="303" pos:column="13">struct <name pos:line="303" pos:column="20">IEnumActionsVtbl</name>
    <block pos:line="304" pos:column="5">{<public type="default" pos:line="304" pos:column="6">
        <function_decl><type><name pos:line="305" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="307" pos:column="9">HRESULT</name></type> ( <name pos:line="307" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="307" pos:column="37">*</type:modifier><name pos:line="307" pos:column="38">QueryInterface</name> )<parameter_list pos:line="307" pos:column="54">( 
            <param><decl><type><name pos:line="308" pos:column="13">IEnumActions</name> <type:modifier pos:line="308" pos:column="26">*</type:modifier></type> <name pos:line="308" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="309" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="309" pos:column="24">__RPC__in</name> <name pos:line="309" pos:column="34">REFIID</name></type> <name pos:line="309" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="310" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="311" pos:column="13">__RPC__deref_out</name>  <name pos:line="311" pos:column="31">void</name> <type:modifier pos:line="311" pos:column="36">*</type:modifier><type:modifier pos:line="311" pos:column="37">*</type:modifier></type><name pos:line="311" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="313" pos:column="9">ULONG</name></type> ( <name pos:line="313" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="313" pos:column="35">*</type:modifier><name pos:line="313" pos:column="36">AddRef</name> )<parameter_list pos:line="313" pos:column="44">( 
            <param><decl><type><name pos:line="314" pos:column="13">IEnumActions</name> <type:modifier pos:line="314" pos:column="26">*</type:modifier></type> <name pos:line="314" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="316" pos:column="9">ULONG</name></type> ( <name pos:line="316" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="316" pos:column="35">*</type:modifier><name pos:line="316" pos:column="36">Release</name> )<parameter_list pos:line="316" pos:column="45">( 
            <param><decl><type><name pos:line="317" pos:column="13">IEnumActions</name> <type:modifier pos:line="317" pos:column="26">*</type:modifier></type> <name pos:line="317" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="319" pos:column="9">HRESULT</name></type> ( <name pos:line="319" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="319" pos:column="37">*</type:modifier><name pos:line="319" pos:column="38">Next</name> )<parameter_list pos:line="319" pos:column="44">( 
            <param><decl><type><name pos:line="320" pos:column="13">IEnumActions</name> <type:modifier pos:line="320" pos:column="26">*</type:modifier></type> <name pos:line="320" pos:column="28">This</name></decl></param>,
            <param><decl><type><name pos:line="321" pos:column="13">ULONG</name></type> <name pos:line="321" pos:column="19">celt</name></decl></param>,
            <param><decl><type><name pos:line="322" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="322" pos:column="33">IAction</name> <type:modifier pos:line="322" pos:column="41">*</type:modifier><type:modifier pos:line="322" pos:column="42">*</type:modifier></type><name pos:line="322" pos:column="43">rgelt</name></decl></param>,
            <param><decl><type><name pos:line="323" pos:column="13">__RPC__in</name> <name pos:line="323" pos:column="23">ULONG</name> <type:modifier pos:line="323" pos:column="29">*</type:modifier></type><name pos:line="323" pos:column="30">pceltFetched</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="325" pos:column="9">HRESULT</name></type> ( <name pos:line="325" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="325" pos:column="37">*</type:modifier><name pos:line="325" pos:column="38">Skip</name> )<parameter_list pos:line="325" pos:column="44">( 
            <param><decl><type><name pos:line="326" pos:column="13">IEnumActions</name> <type:modifier pos:line="326" pos:column="26">*</type:modifier></type> <name pos:line="326" pos:column="28">This</name></decl></param>,
            <param><decl><type><name pos:line="327" pos:column="13">ULONG</name></type> <name pos:line="327" pos:column="19">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="329" pos:column="9">HRESULT</name></type> ( <name pos:line="329" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="329" pos:column="37">*</type:modifier><name pos:line="329" pos:column="38">Reset</name> )<parameter_list pos:line="329" pos:column="45">( 
            <param><decl><type><name pos:line="330" pos:column="13">IEnumActions</name> <type:modifier pos:line="330" pos:column="26">*</type:modifier></type> <name pos:line="330" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="332" pos:column="9">HRESULT</name></type> ( <name pos:line="332" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="332" pos:column="37">*</type:modifier><name pos:line="332" pos:column="38">Clone</name> )<parameter_list pos:line="332" pos:column="45">( 
            <param><decl><type><name pos:line="333" pos:column="13">IEnumActions</name> <type:modifier pos:line="333" pos:column="26">*</type:modifier></type> <name pos:line="333" pos:column="28">This</name></decl></param>,
            <param><decl><type><name pos:line="334" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="334" pos:column="33">IEnumActions</name> <type:modifier pos:line="334" pos:column="46">*</type:modifier><type:modifier pos:line="334" pos:column="47">*</type:modifier></type><name pos:line="334" pos:column="48">ppenum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="336" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="337" pos:column="7">IEnumActionsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="339" pos:column="5">interface</name></type> <name pos:line="339" pos:column="15">IEnumActions</name>
    <argument_list pos:line="340" pos:column="5">{
        <argument><expr><name pos:line="341" pos:column="9">CONST_VTBL</name> struct <name pos:line="341" pos:column="27">IEnumActionsVtbl</name> <op:operator pos:line="341" pos:column="44">*</op:operator><name pos:line="341" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="346" pos:column="1">#<cpp:directive pos:line="346" pos:column="2">ifdef</cpp:directive> <name pos:line="346" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="349" pos:column="1">#<cpp:directive pos:line="349" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="349" pos:column="9">IEnumActions_QueryInterface</name><parameter_list pos:line="349" pos:column="36">(<param><type><name pos:line="349" pos:column="37">This</name></type></param>,<param><type><name pos:line="349" pos:column="42">riid</name></type></param>,<param><type><name pos:line="349" pos:column="47">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="350" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="352" pos:column="9">IEnumActions_AddRef</name><parameter_list pos:line="352" pos:column="28">(<param><type><name pos:line="352" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="353" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="355" pos:column="1">#<cpp:directive pos:line="355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="355" pos:column="9">IEnumActions_Release</name><parameter_list pos:line="355" pos:column="29">(<param><type><name pos:line="355" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="356" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="359" pos:column="1">#<cpp:directive pos:line="359" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="359" pos:column="9">IEnumActions_Next</name><parameter_list pos:line="359" pos:column="26">(<param><type><name pos:line="359" pos:column="27">This</name></type></param>,<param><type><name pos:line="359" pos:column="32">celt</name></type></param>,<param><type><name pos:line="359" pos:column="37">rgelt</name></type></param>,<param><type><name pos:line="359" pos:column="43">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="360" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="362" pos:column="9">IEnumActions_Skip</name><parameter_list pos:line="362" pos:column="26">(<param><type><name pos:line="362" pos:column="27">This</name></type></param>,<param><type><name pos:line="362" pos:column="32">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="363" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="365" pos:column="1">#<cpp:directive pos:line="365" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="365" pos:column="9">IEnumActions_Reset</name><parameter_list pos:line="365" pos:column="27">(<param><type><name pos:line="365" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="366" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="368" pos:column="1">#<cpp:directive pos:line="368" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="368" pos:column="9">IEnumActions_Clone</name><parameter_list pos:line="368" pos:column="27">(<param><type><name pos:line="368" pos:column="28">This</name></type></param>,<param><type><name pos:line="368" pos:column="33">ppenum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="369" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppenum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="371" pos:column="1">#<cpp:directive pos:line="371" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="371" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="374" pos:column="1">#<cpp:directive pos:line="374" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="374" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="379" pos:column="1">#<cpp:directive pos:line="379" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="379" pos:column="9">/* __IEnumActions_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">ifndef</cpp:directive> <name pos:line="382" pos:column="9">__IActionHistory_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="383" pos:column="1">#<cpp:directive pos:line="383" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="383" pos:column="9">__IActionHistory_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="385" pos:column="1">/* interface IActionHistory */</comment>
<comment type="block" pos:line="386" pos:column="1">/* [unique][helpstring][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="389" pos:column="1">EXTERN_C</name> <specifier pos:line="389" pos:column="10">const</specifier> <name pos:line="389" pos:column="16">IID</name></type> <name pos:line="389" pos:column="20">IID_IActionHistory</name></decl>;</decl_stmt>

<cpp:if pos:line="391" pos:column="1">#<cpp:directive pos:line="391" pos:column="2">if</cpp:directive> <expr><call><name pos:line="391" pos:column="5">defined</name><argument_list pos:line="391" pos:column="12">(<argument><expr><name pos:line="391" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="391" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="391" pos:column="29">!</op:operator><call><name pos:line="391" pos:column="30">defined</name><argument_list pos:line="391" pos:column="37">(<argument><expr><name pos:line="391" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="393" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="393" pos:column="19">(<argument pos:line="393" pos:column="20">"8D5DE85B-7D42-11D0-A8AA-00A0C921A4D2"</argument>)</argument_list></macro>
    <label><name pos:line="394" pos:column="5">IActionHistory</name> :</label> <expr_stmt><expr pos:line="394" pos:column="22">public <name pos:line="394" pos:column="29">IUnknown</name>
    <block pos:line="395" pos:column="5">{
    <expr pos:line="396" pos:column="5">public<op:operator pos:line="396" pos:column="11">:</op:operator>
        virtual <name pos:line="397" pos:column="17">HRESULT</name> <name pos:line="397" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="397" pos:column="43">RecordAction</name><argument_list pos:line="397" pos:column="55">( 
            <comment type="block" pos:line="398" pos:column="13">/* [in] */</comment> <argument pos:line="398" pos:column="24">__RPC__in_opt IAction *pAction</argument>)</argument_list></macro> <op:operator pos:line="398" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="398" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="400" pos:column="9">virtual <name pos:line="400" pos:column="17">HRESULT</name> <name pos:line="400" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="400" pos:column="43">OpenAction</name><argument_list pos:line="400" pos:column="53">( 
            <comment type="block" pos:line="401" pos:column="13">/* [in] */</comment> <argument pos:line="401" pos:column="24">__RPC__in_opt IAction *pAction</argument>)</argument_list></macro> <op:operator pos:line="401" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="401" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="403" pos:column="9">virtual <name pos:line="403" pos:column="17">HRESULT</name> <name pos:line="403" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="403" pos:column="43">CloseAction</name><argument_list pos:line="403" pos:column="54">( <argument><expr><name pos:line="403" pos:column="56">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="403" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="403" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="405" pos:column="9">virtual <name pos:line="405" pos:column="17">HRESULT</name> <name pos:line="405" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="405" pos:column="43">AbortAction</name><argument_list pos:line="405" pos:column="54">( <argument><expr><name pos:line="405" pos:column="56">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="405" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="405" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="407" pos:column="9">virtual <name pos:line="407" pos:column="17">HRESULT</name> <name pos:line="407" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="407" pos:column="43">CanUndo</name><argument_list pos:line="407" pos:column="50">( <argument><expr><name pos:line="407" pos:column="52">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="407" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="407" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="409" pos:column="9">virtual <name pos:line="409" pos:column="17">HRESULT</name> <name pos:line="409" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="409" pos:column="43">CanRedo</name><argument_list pos:line="409" pos:column="50">( <argument><expr><name pos:line="409" pos:column="52">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="409" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="409" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="411" pos:column="9">virtual <name pos:line="411" pos:column="17">HRESULT</name> <name pos:line="411" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="411" pos:column="43">Undo</name><argument_list pos:line="411" pos:column="47">( <argument><expr><name pos:line="411" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="411" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="411" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="413" pos:column="9">virtual <name pos:line="413" pos:column="17">HRESULT</name> <name pos:line="413" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="413" pos:column="43">Redo</name><argument_list pos:line="413" pos:column="47">( <argument><expr><name pos:line="413" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="413" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="413" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="415" pos:column="9">virtual <name pos:line="415" pos:column="17">HRESULT</name> <name pos:line="415" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="415" pos:column="43">EnumUndoActions</name><argument_list pos:line="415" pos:column="58">( 
            <argument pos:line="416" pos:column="13">__RPC__deref_in_opt IEnumActions **ppEnumUndoActions</argument>)</argument_list></macro> <op:operator pos:line="416" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="416" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="418" pos:column="9">virtual <name pos:line="418" pos:column="17">HRESULT</name> <name pos:line="418" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="418" pos:column="43">EnumRedoActions</name><argument_list pos:line="418" pos:column="58">( 
            <argument pos:line="419" pos:column="13">__RPC__deref_in_opt IEnumActions **ppEnumRedoActions</argument>)</argument_list></macro> <op:operator pos:line="419" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="419" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="421" pos:column="9">virtual <name pos:line="421" pos:column="17">HRESULT</name> <name pos:line="421" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="421" pos:column="43">Reset</name><argument_list pos:line="421" pos:column="48">( <argument><expr><name pos:line="421" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="421" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="421" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="425" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="427" pos:column="5">typedef <type><struct pos:line="427" pos:column="13">struct <name pos:line="427" pos:column="20">IActionHistoryVtbl</name>
    <block pos:line="428" pos:column="5">{<public type="default" pos:line="428" pos:column="6">
        <function_decl><type><name pos:line="429" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="431" pos:column="9">HRESULT</name></type> ( <name pos:line="431" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="431" pos:column="37">*</type:modifier><name pos:line="431" pos:column="38">QueryInterface</name> )<parameter_list pos:line="431" pos:column="54">( 
            <param><decl><type><name pos:line="432" pos:column="13">IActionHistory</name> <type:modifier pos:line="432" pos:column="28">*</type:modifier></type> <name pos:line="432" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="433" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="433" pos:column="24">__RPC__in</name> <name pos:line="433" pos:column="34">REFIID</name></type> <name pos:line="433" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="434" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="435" pos:column="13">__RPC__deref_out</name>  <name pos:line="435" pos:column="31">void</name> <type:modifier pos:line="435" pos:column="36">*</type:modifier><type:modifier pos:line="435" pos:column="37">*</type:modifier></type><name pos:line="435" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="437" pos:column="9">ULONG</name></type> ( <name pos:line="437" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="437" pos:column="35">*</type:modifier><name pos:line="437" pos:column="36">AddRef</name> )<parameter_list pos:line="437" pos:column="44">( 
            <param><decl><type><name pos:line="438" pos:column="13">IActionHistory</name> <type:modifier pos:line="438" pos:column="28">*</type:modifier></type> <name pos:line="438" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="440" pos:column="9">ULONG</name></type> ( <name pos:line="440" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="440" pos:column="35">*</type:modifier><name pos:line="440" pos:column="36">Release</name> )<parameter_list pos:line="440" pos:column="45">( 
            <param><decl><type><name pos:line="441" pos:column="13">IActionHistory</name> <type:modifier pos:line="441" pos:column="28">*</type:modifier></type> <name pos:line="441" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="443" pos:column="9">HRESULT</name></type> ( <name pos:line="443" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="443" pos:column="37">*</type:modifier><name pos:line="443" pos:column="38">RecordAction</name> )<parameter_list pos:line="443" pos:column="52">( 
            <param><decl><type><name pos:line="444" pos:column="13">IActionHistory</name> <type:modifier pos:line="444" pos:column="28">*</type:modifier></type> <name pos:line="444" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="445" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="445" pos:column="24">__RPC__in_opt</name> <name pos:line="445" pos:column="38">IAction</name> <type:modifier pos:line="445" pos:column="46">*</type:modifier></type><name pos:line="445" pos:column="47">pAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="447" pos:column="9">HRESULT</name></type> ( <name pos:line="447" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="447" pos:column="37">*</type:modifier><name pos:line="447" pos:column="38">OpenAction</name> )<parameter_list pos:line="447" pos:column="50">( 
            <param><decl><type><name pos:line="448" pos:column="13">IActionHistory</name> <type:modifier pos:line="448" pos:column="28">*</type:modifier></type> <name pos:line="448" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="449" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="449" pos:column="24">__RPC__in_opt</name> <name pos:line="449" pos:column="38">IAction</name> <type:modifier pos:line="449" pos:column="46">*</type:modifier></type><name pos:line="449" pos:column="47">pAction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="451" pos:column="9">HRESULT</name></type> ( <name pos:line="451" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="451" pos:column="37">*</type:modifier><name pos:line="451" pos:column="38">CloseAction</name> )<parameter_list pos:line="451" pos:column="51">( 
            <param><decl><type><name pos:line="452" pos:column="13">IActionHistory</name> <type:modifier pos:line="452" pos:column="28">*</type:modifier></type> <name pos:line="452" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="454" pos:column="9">HRESULT</name></type> ( <name pos:line="454" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="454" pos:column="37">*</type:modifier><name pos:line="454" pos:column="38">AbortAction</name> )<parameter_list pos:line="454" pos:column="51">( 
            <param><decl><type><name pos:line="455" pos:column="13">IActionHistory</name> <type:modifier pos:line="455" pos:column="28">*</type:modifier></type> <name pos:line="455" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="457" pos:column="9">HRESULT</name></type> ( <name pos:line="457" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="457" pos:column="37">*</type:modifier><name pos:line="457" pos:column="38">CanUndo</name> )<parameter_list pos:line="457" pos:column="47">( 
            <param><decl><type><name pos:line="458" pos:column="13">IActionHistory</name> <type:modifier pos:line="458" pos:column="28">*</type:modifier></type> <name pos:line="458" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="460" pos:column="9">HRESULT</name></type> ( <name pos:line="460" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="460" pos:column="37">*</type:modifier><name pos:line="460" pos:column="38">CanRedo</name> )<parameter_list pos:line="460" pos:column="47">( 
            <param><decl><type><name pos:line="461" pos:column="13">IActionHistory</name> <type:modifier pos:line="461" pos:column="28">*</type:modifier></type> <name pos:line="461" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="463" pos:column="9">HRESULT</name></type> ( <name pos:line="463" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="463" pos:column="37">*</type:modifier><name pos:line="463" pos:column="38">Undo</name> )<parameter_list pos:line="463" pos:column="44">( 
            <param><decl><type><name pos:line="464" pos:column="13">IActionHistory</name> <type:modifier pos:line="464" pos:column="28">*</type:modifier></type> <name pos:line="464" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="466" pos:column="9">HRESULT</name></type> ( <name pos:line="466" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="466" pos:column="37">*</type:modifier><name pos:line="466" pos:column="38">Redo</name> )<parameter_list pos:line="466" pos:column="44">( 
            <param><decl><type><name pos:line="467" pos:column="13">IActionHistory</name> <type:modifier pos:line="467" pos:column="28">*</type:modifier></type> <name pos:line="467" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="469" pos:column="9">HRESULT</name></type> ( <name pos:line="469" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="469" pos:column="37">*</type:modifier><name pos:line="469" pos:column="38">EnumUndoActions</name> )<parameter_list pos:line="469" pos:column="55">( 
            <param><decl><type><name pos:line="470" pos:column="13">IActionHistory</name> <type:modifier pos:line="470" pos:column="28">*</type:modifier></type> <name pos:line="470" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="471" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="471" pos:column="33">IEnumActions</name> <type:modifier pos:line="471" pos:column="46">*</type:modifier><type:modifier pos:line="471" pos:column="47">*</type:modifier></type><name pos:line="471" pos:column="48">ppEnumUndoActions</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="473" pos:column="9">HRESULT</name></type> ( <name pos:line="473" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="473" pos:column="37">*</type:modifier><name pos:line="473" pos:column="38">EnumRedoActions</name> )<parameter_list pos:line="473" pos:column="55">( 
            <param><decl><type><name pos:line="474" pos:column="13">IActionHistory</name> <type:modifier pos:line="474" pos:column="28">*</type:modifier></type> <name pos:line="474" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="475" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="475" pos:column="33">IEnumActions</name> <type:modifier pos:line="475" pos:column="46">*</type:modifier><type:modifier pos:line="475" pos:column="47">*</type:modifier></type><name pos:line="475" pos:column="48">ppEnumRedoActions</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="477" pos:column="9">HRESULT</name></type> ( <name pos:line="477" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="477" pos:column="37">*</type:modifier><name pos:line="477" pos:column="38">Reset</name> )<parameter_list pos:line="477" pos:column="45">( 
            <param><decl><type><name pos:line="478" pos:column="13">IActionHistory</name> <type:modifier pos:line="478" pos:column="28">*</type:modifier></type> <name pos:line="478" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="480" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="481" pos:column="7">IActionHistoryVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="483" pos:column="5">interface</name></type> <name pos:line="483" pos:column="15">IActionHistory</name>
    <argument_list pos:line="484" pos:column="5">{
        <argument><expr><name pos:line="485" pos:column="9">CONST_VTBL</name> struct <name pos:line="485" pos:column="27">IActionHistoryVtbl</name> <op:operator pos:line="485" pos:column="46">*</op:operator><name pos:line="485" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="490" pos:column="1">#<cpp:directive pos:line="490" pos:column="2">ifdef</cpp:directive> <name pos:line="490" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="493" pos:column="9">IActionHistory_QueryInterface</name><parameter_list pos:line="493" pos:column="38">(<param><type><name pos:line="493" pos:column="39">This</name></type></param>,<param><type><name pos:line="493" pos:column="44">riid</name></type></param>,<param><type><name pos:line="493" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="494" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="496" pos:column="1">#<cpp:directive pos:line="496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="496" pos:column="9">IActionHistory_AddRef</name><parameter_list pos:line="496" pos:column="30">(<param><type><name pos:line="496" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="497" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="499" pos:column="9">IActionHistory_Release</name><parameter_list pos:line="499" pos:column="31">(<param><type><name pos:line="499" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="500" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="503" pos:column="9">IActionHistory_RecordAction</name><parameter_list pos:line="503" pos:column="36">(<param><type><name pos:line="503" pos:column="37">This</name></type></param>,<param><type><name pos:line="503" pos:column="42">pAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="504" pos:column="5">( (This)-&gt;lpVtbl -&gt; RecordAction(This,pAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="506" pos:column="9">IActionHistory_OpenAction</name><parameter_list pos:line="506" pos:column="34">(<param><type><name pos:line="506" pos:column="35">This</name></type></param>,<param><type><name pos:line="506" pos:column="40">pAction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="507" pos:column="5">( (This)-&gt;lpVtbl -&gt; OpenAction(This,pAction) )</cpp:value></cpp:define> 

<cpp:define pos:line="509" pos:column="1">#<cpp:directive pos:line="509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="509" pos:column="9">IActionHistory_CloseAction</name><parameter_list pos:line="509" pos:column="35">(<param><type><name pos:line="509" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="510" pos:column="5">( (This)-&gt;lpVtbl -&gt; CloseAction(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="512" pos:column="9">IActionHistory_AbortAction</name><parameter_list pos:line="512" pos:column="35">(<param><type><name pos:line="512" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="513" pos:column="5">( (This)-&gt;lpVtbl -&gt; AbortAction(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="515" pos:column="1">#<cpp:directive pos:line="515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="515" pos:column="9">IActionHistory_CanUndo</name><parameter_list pos:line="515" pos:column="31">(<param><type><name pos:line="515" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="516" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanUndo(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="518" pos:column="1">#<cpp:directive pos:line="518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="518" pos:column="9">IActionHistory_CanRedo</name><parameter_list pos:line="518" pos:column="31">(<param><type><name pos:line="518" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="519" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanRedo(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="521" pos:column="1">#<cpp:directive pos:line="521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="521" pos:column="9">IActionHistory_Undo</name><parameter_list pos:line="521" pos:column="28">(<param><type><name pos:line="521" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="522" pos:column="5">( (This)-&gt;lpVtbl -&gt; Undo(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="524" pos:column="1">#<cpp:directive pos:line="524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="524" pos:column="9">IActionHistory_Redo</name><parameter_list pos:line="524" pos:column="28">(<param><type><name pos:line="524" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="525" pos:column="5">( (This)-&gt;lpVtbl -&gt; Redo(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="527" pos:column="1">#<cpp:directive pos:line="527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="527" pos:column="9">IActionHistory_EnumUndoActions</name><parameter_list pos:line="527" pos:column="39">(<param><type><name pos:line="527" pos:column="40">This</name></type></param>,<param><type><name pos:line="527" pos:column="45">ppEnumUndoActions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="528" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumUndoActions(This,ppEnumUndoActions) )</cpp:value></cpp:define> 

<cpp:define pos:line="530" pos:column="1">#<cpp:directive pos:line="530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="530" pos:column="9">IActionHistory_EnumRedoActions</name><parameter_list pos:line="530" pos:column="39">(<param><type><name pos:line="530" pos:column="40">This</name></type></param>,<param><type><name pos:line="530" pos:column="45">ppEnumRedoActions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="531" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumRedoActions(This,ppEnumRedoActions) )</cpp:value></cpp:define> 

<cpp:define pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="533" pos:column="9">IActionHistory_Reset</name><parameter_list pos:line="533" pos:column="29">(<param><type><name pos:line="533" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="534" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="536" pos:column="1">#<cpp:directive pos:line="536" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="536" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="539" pos:column="1">#<cpp:directive pos:line="539" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="539" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="544" pos:column="1">#<cpp:directive pos:line="544" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="544" pos:column="9">/* __IActionHistory_INTERFACE_DEFINED__ */</comment>



<cpp:ifndef pos:line="548" pos:column="1">#<cpp:directive pos:line="548" pos:column="2">ifndef</cpp:directive> <name pos:line="548" pos:column="9">__UNDOREDOLib_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="549" pos:column="1">#<cpp:directive pos:line="549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="549" pos:column="9">__UNDOREDOLib_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="551" pos:column="1">/* library UNDOREDOLib */</comment>
<comment type="block" pos:line="552" pos:column="1">/* [helpstring][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="555" pos:column="1">EXTERN_C</name> <specifier pos:line="555" pos:column="10">const</specifier> <name pos:line="555" pos:column="16">IID</name></type> <name pos:line="555" pos:column="20">LIBID_UNDOREDOLib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="557" pos:column="1">EXTERN_C</name> <specifier pos:line="557" pos:column="10">const</specifier> <name pos:line="557" pos:column="16">CLSID</name></type> <name pos:line="557" pos:column="22">CLSID_ActionHistory</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">ifdef</cpp:directive> <name pos:line="559" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="561" pos:column="1">class</type> <name pos:line="561" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="561" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="561" pos:column="21">"F5E7E71F-1401-11d1-883B-0000F87579D2"</lit:literal></expr></argument>)</argument_list>
<name pos:line="562" pos:column="1">ActionHistory</name></decl>;</decl_stmt>
<cpp:endif pos:line="563" pos:column="1">#<cpp:directive pos:line="563" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:endif pos:line="564" pos:column="1">#<cpp:directive pos:line="564" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="564" pos:column="8">/* __UNDOREDOLib_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="566" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<function_decl><type><name pos:line="568" pos:column="1">unsigned</name> <name pos:line="568" pos:column="10">long</name>             <name pos:line="568" pos:column="27">__RPC_USER</name></type>  <name pos:line="568" pos:column="39">BSTR_UserSize</name><parameter_list pos:line="568" pos:column="52">(     <param><decl><type><name pos:line="568" pos:column="58">unsigned</name></type> <name pos:line="568" pos:column="67">long</name> <type:modifier pos:line="568" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="568" pos:column="75">unsigned</name></type> <name pos:line="568" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="568" pos:column="102">BSTR</name> <type:modifier pos:line="568" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="569" pos:column="1">unsigned</name> <name pos:line="569" pos:column="10">char</name> <type:modifier pos:line="569" pos:column="15">*</type:modifier> <name pos:line="569" pos:column="17">__RPC_USER</name></type>  <name pos:line="569" pos:column="29">BSTR_UserMarshal</name><parameter_list pos:line="569" pos:column="45">(  <param><decl><type><name pos:line="569" pos:column="48">unsigned</name></type> <name pos:line="569" pos:column="57">long</name> <type:modifier pos:line="569" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="569" pos:column="65">unsigned</name></type> <name pos:line="569" pos:column="74">char</name> <type:modifier pos:line="569" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="569" pos:column="82">BSTR</name> <type:modifier pos:line="569" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="570" pos:column="1">unsigned</name> <name pos:line="570" pos:column="10">char</name> <type:modifier pos:line="570" pos:column="15">*</type:modifier> <name pos:line="570" pos:column="17">__RPC_USER</name></type>  <name pos:line="570" pos:column="29">BSTR_UserUnmarshal</name><parameter_list pos:line="570" pos:column="47">(<param><decl><type><name pos:line="570" pos:column="48">unsigned</name></type> <name pos:line="570" pos:column="57">long</name> <type:modifier pos:line="570" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="570" pos:column="65">unsigned</name></type> <name pos:line="570" pos:column="74">char</name> <type:modifier pos:line="570" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="570" pos:column="82">BSTR</name> <type:modifier pos:line="570" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="571" pos:column="1">void</name>                      <name pos:line="571" pos:column="27">__RPC_USER</name></type>  <name pos:line="571" pos:column="39">BSTR_UserFree</name><parameter_list pos:line="571" pos:column="52">(     <param><decl><type><name pos:line="571" pos:column="58">unsigned</name></type> <name pos:line="571" pos:column="67">long</name> <type:modifier pos:line="571" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="571" pos:column="75">BSTR</name> <type:modifier pos:line="571" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<comment type="block" pos:line="573" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">ifdef</cpp:directive> <name pos:line="575" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="577" pos:column="1">#<cpp:directive pos:line="577" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="579" pos:column="1">#<cpp:directive pos:line="579" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
