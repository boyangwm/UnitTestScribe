<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\office10\msaddndr.h" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/* This header file machine-generated by mktyplib.exe */</comment>
<comment type="block" pos:line="2" pos:column="1">/* Interface to type library: AddinDesignerObjects */</comment>

<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef</cpp:directive> <name pos:line="4" pos:column="9">_AddinDesignerObjects_H_</name></cpp:ifndef>
<cpp:define pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5" pos:column="9">_AddinDesignerObjects_H_</name></cpp:macro></cpp:define>

<expr_stmt><expr><call><name pos:line="7" pos:column="1">DEFINE_GUID</name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">LIBID_AddinDesignerObjects</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="40">0xAC0714F2L</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="52">0x3D04</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="59">0x11D1</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="66">0xAE</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="71">0x7D</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="76">0x00</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="81">0xA0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="86">0xC9</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="91">0x0F</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="96">0x26</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="7" pos:column="101">0xF4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">BEGIN_INTERFACE</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">BEGIN_INTERFACE</name></cpp:macro></cpp:define>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif</cpp:directive></cpp:endif>

<typedef pos:line="12" pos:column="1">typedef <type><enum pos:line="12" pos:column="9">enum <name pos:line="12" pos:column="14">ext_ConnectMode</name> <block pos:line="12" pos:column="30">{
    <decl><name pos:line="13" pos:column="5">ext_cm_AfterStartup</name> <init pos:line="13" pos:column="25">= <expr><lit:literal type="number" pos:line="13" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="13" pos:column="28">,</op:operator>
    <decl><name pos:line="14" pos:column="5">ext_cm_Startup</name> <init pos:line="14" pos:column="20">= <expr><lit:literal type="number" pos:line="14" pos:column="22">1</lit:literal></expr></init></decl><op:operator pos:line="14" pos:column="23">,</op:operator>
    <decl><name pos:line="15" pos:column="5">ext_cm_External</name> <init pos:line="15" pos:column="21">= <expr><lit:literal type="number" pos:line="15" pos:column="23">2</lit:literal></expr></init></decl><op:operator pos:line="15" pos:column="24">,</op:operator>
    <decl><name pos:line="16" pos:column="5">ext_cm_CommandLine</name> <init pos:line="16" pos:column="24">= <expr><lit:literal type="number" pos:line="16" pos:column="26">3</lit:literal></expr></init></decl>
}</block></enum></type> <name pos:line="17" pos:column="3">ext_ConnectMode</name>;</typedef>

<typedef pos:line="19" pos:column="1">typedef <type><enum pos:line="19" pos:column="9">enum <name pos:line="19" pos:column="14">ext_DisconnectMode</name> <block pos:line="19" pos:column="33">{
    <decl><name pos:line="20" pos:column="5">ext_dm_HostShutdown</name> <init pos:line="20" pos:column="25">= <expr><lit:literal type="number" pos:line="20" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="20" pos:column="28">,</op:operator>
    <decl><name pos:line="21" pos:column="5">ext_dm_UserClosed</name> <init pos:line="21" pos:column="23">= <expr><lit:literal type="number" pos:line="21" pos:column="25">1</lit:literal></expr></init></decl>
}</block></enum></type> <name pos:line="22" pos:column="3">ext_DisconnectMode</name>;</typedef>

<expr_stmt><expr><call><name pos:line="24" pos:column="1">DEFINE_GUID</name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">IID_IAddinDesigner</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="32">0xAC0714F3L</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="44">0x3D04</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="51">0x11D1</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="58">0xAE</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="63">0x7D</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="68">0x00</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="73">0xA0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="78">0xC9</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="83">0x0F</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="88">0x26</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="93">0xF4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="block" pos:line="26" pos:column="1">/* Definition of interface: IAddinDesigner */</comment>
<cpp:undef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">undef</cpp:directive> <name pos:line="27" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="28" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="28" pos:column="19">IAddinDesigner</cpp:value></cpp:define>

<macro><name pos:line="30" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="30" pos:column="19">(<argument pos:line="30" pos:column="20">IAddinDesigner</argument>, <argument pos:line="30" pos:column="36">IDispatch</argument>)</argument_list></macro>
<block pos:line="31" pos:column="1">{
<function_decl><type><name pos:line="32" pos:column="1">BEGIN_INTERFACE</name>
<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">NO_BASEINTERFACE_FUNCS</name></cpp:ifndef>

    <comment type="block" pos:line="35" pos:column="5">/* IUnknown methods */</comment>
    <name pos:line="36" pos:column="5">STDMETHOD</name></type>(<name pos:line="36" pos:column="15">QueryInterface</name>)<parameter_list pos:line="36" pos:column="30">(<param><decl><type><name pos:line="36" pos:column="31">THIS_</name> <name pos:line="36" pos:column="37">REFIID</name></type> <name pos:line="36" pos:column="44">riid</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="50">LPVOID</name> <name pos:line="36" pos:column="57">FAR</name><type:modifier pos:line="36" pos:column="60">*</type:modifier></type> <name pos:line="36" pos:column="62">ppvObj</name></decl></param>)</parameter_list> <name pos:line="36" pos:column="70">PURE</name>;</function_decl>
    <macro><name pos:line="37" pos:column="5">STDMETHOD_</name><argument_list pos:line="37" pos:column="15">(<argument pos:line="37" pos:column="16">ULONG</argument>, <argument pos:line="37" pos:column="23">AddRef</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="37" pos:column="30">(</op:operator><name pos:line="37" pos:column="31">THIS</name><op:operator pos:line="37" pos:column="35">)</op:operator> <name pos:line="37" pos:column="37">PURE</name></expr>;</expr_stmt>
    <macro><name pos:line="38" pos:column="5">STDMETHOD_</name><argument_list pos:line="38" pos:column="15">(<argument pos:line="38" pos:column="16">ULONG</argument>, <argument pos:line="38" pos:column="23">Release</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="38" pos:column="31">(</op:operator><name pos:line="38" pos:column="32">THIS</name><op:operator pos:line="38" pos:column="36">)</op:operator> <name pos:line="38" pos:column="38">PURE</name></expr>;</expr_stmt>

    <comment type="block" pos:line="40" pos:column="5">/* IDispatch methods */</comment>
    <function_decl><type><name pos:line="41" pos:column="5">STDMETHOD</name></type>(<name pos:line="41" pos:column="15">GetTypeInfoCount</name>)<parameter_list pos:line="41" pos:column="32">(<param><decl><type><name pos:line="41" pos:column="33">THIS_</name> <name pos:line="41" pos:column="39">UINT</name> <name pos:line="41" pos:column="44">FAR</name><type:modifier pos:line="41" pos:column="47">*</type:modifier></type> <name pos:line="41" pos:column="49">pctinfo</name></decl></param>)</parameter_list> <name pos:line="41" pos:column="58">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="43" pos:column="5">STDMETHOD</name></type>(<name pos:line="43" pos:column="15">GetTypeInfo</name>)<parameter_list pos:line="43" pos:column="27">(
      <param><decl><type><name pos:line="44" pos:column="7">THIS_</name>
      <name pos:line="45" pos:column="7">UINT</name></type> <name pos:line="45" pos:column="12">itinfo</name></decl></param>,
      <param><decl><type><name pos:line="46" pos:column="7">LCID</name></type> <name pos:line="46" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="47" pos:column="7">ITypeInfo</name> <name pos:line="47" pos:column="17">FAR</name><type:modifier pos:line="47" pos:column="20">*</type:modifier> <name pos:line="47" pos:column="22">FAR</name><type:modifier pos:line="47" pos:column="25">*</type:modifier></type> <name pos:line="47" pos:column="27">pptinfo</name></decl></param>)</parameter_list> <name pos:line="47" pos:column="36">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="49" pos:column="5">STDMETHOD</name></type>(<name pos:line="49" pos:column="15">GetIDsOfNames</name>)<parameter_list pos:line="49" pos:column="29">(
      <param><decl><type><name pos:line="50" pos:column="7">THIS_</name>
      <name pos:line="51" pos:column="7">REFIID</name></type> <name pos:line="51" pos:column="14">riid</name></decl></param>,
      <param><decl><type><name pos:line="52" pos:column="7">OLECHAR</name> <name pos:line="52" pos:column="15">FAR</name><type:modifier pos:line="52" pos:column="18">*</type:modifier> <name pos:line="52" pos:column="20">FAR</name><type:modifier pos:line="52" pos:column="23">*</type:modifier></type> <name pos:line="52" pos:column="25">rgszNames</name></decl></param>,
      <param><decl><type><name pos:line="53" pos:column="7">UINT</name></type> <name pos:line="53" pos:column="12">cNames</name></decl></param>,
      <param><decl><type><name pos:line="54" pos:column="7">LCID</name></type> <name pos:line="54" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="55" pos:column="7">DISPID</name> <name pos:line="55" pos:column="14">FAR</name><type:modifier pos:line="55" pos:column="17">*</type:modifier></type> <name pos:line="55" pos:column="19">rgdispid</name></decl></param>)</parameter_list> <name pos:line="55" pos:column="29">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="57" pos:column="5">STDMETHOD</name></type>(<name pos:line="57" pos:column="15">Invoke</name>)<parameter_list pos:line="57" pos:column="22">(
      <param><decl><type><name pos:line="58" pos:column="7">THIS_</name>
      <name pos:line="59" pos:column="7">DISPID</name></type> <name pos:line="59" pos:column="14">dispidMember</name></decl></param>,
      <param><decl><type><name pos:line="60" pos:column="7">REFIID</name></type> <name pos:line="60" pos:column="14">riid</name></decl></param>,
      <param><decl><type><name pos:line="61" pos:column="7">LCID</name></type> <name pos:line="61" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="62" pos:column="7">WORD</name></type> <name pos:line="62" pos:column="12">wFlags</name></decl></param>,
      <param><decl><type><name pos:line="63" pos:column="7">DISPPARAMS</name> <name pos:line="63" pos:column="18">FAR</name><type:modifier pos:line="63" pos:column="21">*</type:modifier></type> <name pos:line="63" pos:column="23">pdispparams</name></decl></param>,
      <param><decl><type><name pos:line="64" pos:column="7">VARIANT</name> <name pos:line="64" pos:column="15">FAR</name><type:modifier pos:line="64" pos:column="18">*</type:modifier></type> <name pos:line="64" pos:column="20">pvarResult</name></decl></param>,
      <param><decl><type><name pos:line="65" pos:column="7">EXCEPINFO</name> <name pos:line="65" pos:column="17">FAR</name><type:modifier pos:line="65" pos:column="20">*</type:modifier></type> <name pos:line="65" pos:column="22">pexcepinfo</name></decl></param>,
      <param><decl><type><name pos:line="66" pos:column="7">UINT</name> <name pos:line="66" pos:column="12">FAR</name><type:modifier pos:line="66" pos:column="15">*</type:modifier></type> <name pos:line="66" pos:column="17">puArgErr</name></decl></param>)</parameter_list> <name pos:line="66" pos:column="27">PURE</name>;</function_decl>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:line="69" pos:column="5">/* IAddinDesigner methods */</comment>
}</block><empty_stmt pos:line="70" pos:column="2">;</empty_stmt>

<expr_stmt><expr><call><name pos:line="72" pos:column="1">DEFINE_GUID</name><argument_list pos:line="72" pos:column="12">(<argument><expr><name pos:line="72" pos:column="13">IID_IAddinInstance</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="32">0xAC0714F4L</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="44">0x3D04</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="51">0x11D1</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="58">0xAE</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="63">0x7D</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="68">0x00</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="73">0xA0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="78">0xC9</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="83">0x0F</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="88">0x26</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="72" pos:column="93">0xF4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="block" pos:line="74" pos:column="1">/* Definition of interface: IAddinInstance */</comment>
<cpp:undef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">undef</cpp:directive> <name pos:line="75" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="76" pos:column="19">IAddinInstance</cpp:value></cpp:define>

<macro><name pos:line="78" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="78" pos:column="19">(<argument pos:line="78" pos:column="20">IAddinInstance</argument>, <argument pos:line="78" pos:column="36">IDispatch</argument>)</argument_list></macro>
<block pos:line="79" pos:column="1">{
<function_decl><type><name pos:line="80" pos:column="1">BEGIN_INTERFACE</name>
<cpp:ifndef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifndef</cpp:directive> <name pos:line="81" pos:column="9">NO_BASEINTERFACE_FUNCS</name></cpp:ifndef>

    <comment type="block" pos:line="83" pos:column="5">/* IUnknown methods */</comment>
    <name pos:line="84" pos:column="5">STDMETHOD</name></type>(<name pos:line="84" pos:column="15">QueryInterface</name>)<parameter_list pos:line="84" pos:column="30">(<param><decl><type><name pos:line="84" pos:column="31">THIS_</name> <name pos:line="84" pos:column="37">REFIID</name></type> <name pos:line="84" pos:column="44">riid</name></decl></param>, <param><decl><type><name pos:line="84" pos:column="50">LPVOID</name> <name pos:line="84" pos:column="57">FAR</name><type:modifier pos:line="84" pos:column="60">*</type:modifier></type> <name pos:line="84" pos:column="62">ppvObj</name></decl></param>)</parameter_list> <name pos:line="84" pos:column="70">PURE</name>;</function_decl>
    <macro><name pos:line="85" pos:column="5">STDMETHOD_</name><argument_list pos:line="85" pos:column="15">(<argument pos:line="85" pos:column="16">ULONG</argument>, <argument pos:line="85" pos:column="23">AddRef</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="85" pos:column="30">(</op:operator><name pos:line="85" pos:column="31">THIS</name><op:operator pos:line="85" pos:column="35">)</op:operator> <name pos:line="85" pos:column="37">PURE</name></expr>;</expr_stmt>
    <macro><name pos:line="86" pos:column="5">STDMETHOD_</name><argument_list pos:line="86" pos:column="15">(<argument pos:line="86" pos:column="16">ULONG</argument>, <argument pos:line="86" pos:column="23">Release</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="86" pos:column="31">(</op:operator><name pos:line="86" pos:column="32">THIS</name><op:operator pos:line="86" pos:column="36">)</op:operator> <name pos:line="86" pos:column="38">PURE</name></expr>;</expr_stmt>

    <comment type="block" pos:line="88" pos:column="5">/* IDispatch methods */</comment>
    <function_decl><type><name pos:line="89" pos:column="5">STDMETHOD</name></type>(<name pos:line="89" pos:column="15">GetTypeInfoCount</name>)<parameter_list pos:line="89" pos:column="32">(<param><decl><type><name pos:line="89" pos:column="33">THIS_</name> <name pos:line="89" pos:column="39">UINT</name> <name pos:line="89" pos:column="44">FAR</name><type:modifier pos:line="89" pos:column="47">*</type:modifier></type> <name pos:line="89" pos:column="49">pctinfo</name></decl></param>)</parameter_list> <name pos:line="89" pos:column="58">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="91" pos:column="5">STDMETHOD</name></type>(<name pos:line="91" pos:column="15">GetTypeInfo</name>)<parameter_list pos:line="91" pos:column="27">(
      <param><decl><type><name pos:line="92" pos:column="7">THIS_</name>
      <name pos:line="93" pos:column="7">UINT</name></type> <name pos:line="93" pos:column="12">itinfo</name></decl></param>,
      <param><decl><type><name pos:line="94" pos:column="7">LCID</name></type> <name pos:line="94" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="95" pos:column="7">ITypeInfo</name> <name pos:line="95" pos:column="17">FAR</name><type:modifier pos:line="95" pos:column="20">*</type:modifier> <name pos:line="95" pos:column="22">FAR</name><type:modifier pos:line="95" pos:column="25">*</type:modifier></type> <name pos:line="95" pos:column="27">pptinfo</name></decl></param>)</parameter_list> <name pos:line="95" pos:column="36">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="97" pos:column="5">STDMETHOD</name></type>(<name pos:line="97" pos:column="15">GetIDsOfNames</name>)<parameter_list pos:line="97" pos:column="29">(
      <param><decl><type><name pos:line="98" pos:column="7">THIS_</name>
      <name pos:line="99" pos:column="7">REFIID</name></type> <name pos:line="99" pos:column="14">riid</name></decl></param>,
      <param><decl><type><name pos:line="100" pos:column="7">OLECHAR</name> <name pos:line="100" pos:column="15">FAR</name><type:modifier pos:line="100" pos:column="18">*</type:modifier> <name pos:line="100" pos:column="20">FAR</name><type:modifier pos:line="100" pos:column="23">*</type:modifier></type> <name pos:line="100" pos:column="25">rgszNames</name></decl></param>,
      <param><decl><type><name pos:line="101" pos:column="7">UINT</name></type> <name pos:line="101" pos:column="12">cNames</name></decl></param>,
      <param><decl><type><name pos:line="102" pos:column="7">LCID</name></type> <name pos:line="102" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="103" pos:column="7">DISPID</name> <name pos:line="103" pos:column="14">FAR</name><type:modifier pos:line="103" pos:column="17">*</type:modifier></type> <name pos:line="103" pos:column="19">rgdispid</name></decl></param>)</parameter_list> <name pos:line="103" pos:column="29">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="105" pos:column="5">STDMETHOD</name></type>(<name pos:line="105" pos:column="15">Invoke</name>)<parameter_list pos:line="105" pos:column="22">(
      <param><decl><type><name pos:line="106" pos:column="7">THIS_</name>
      <name pos:line="107" pos:column="7">DISPID</name></type> <name pos:line="107" pos:column="14">dispidMember</name></decl></param>,
      <param><decl><type><name pos:line="108" pos:column="7">REFIID</name></type> <name pos:line="108" pos:column="14">riid</name></decl></param>,
      <param><decl><type><name pos:line="109" pos:column="7">LCID</name></type> <name pos:line="109" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="110" pos:column="7">WORD</name></type> <name pos:line="110" pos:column="12">wFlags</name></decl></param>,
      <param><decl><type><name pos:line="111" pos:column="7">DISPPARAMS</name> <name pos:line="111" pos:column="18">FAR</name><type:modifier pos:line="111" pos:column="21">*</type:modifier></type> <name pos:line="111" pos:column="23">pdispparams</name></decl></param>,
      <param><decl><type><name pos:line="112" pos:column="7">VARIANT</name> <name pos:line="112" pos:column="15">FAR</name><type:modifier pos:line="112" pos:column="18">*</type:modifier></type> <name pos:line="112" pos:column="20">pvarResult</name></decl></param>,
      <param><decl><type><name pos:line="113" pos:column="7">EXCEPINFO</name> <name pos:line="113" pos:column="17">FAR</name><type:modifier pos:line="113" pos:column="20">*</type:modifier></type> <name pos:line="113" pos:column="22">pexcepinfo</name></decl></param>,
      <param><decl><type><name pos:line="114" pos:column="7">UINT</name> <name pos:line="114" pos:column="12">FAR</name><type:modifier pos:line="114" pos:column="15">*</type:modifier></type> <name pos:line="114" pos:column="17">puArgErr</name></decl></param>)</parameter_list> <name pos:line="114" pos:column="27">PURE</name>;</function_decl>
<cpp:endif pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:line="117" pos:column="5">/* IAddinInstance methods */</comment>
}</block><empty_stmt pos:line="118" pos:column="2">;</empty_stmt>

<expr_stmt><expr><call><name pos:line="120" pos:column="1">DEFINE_GUID</name><argument_list pos:line="120" pos:column="12">(<argument><expr><name pos:line="120" pos:column="13">IID__IDTExtensibility2</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="36">0xB65AD801L</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="48">0xABAF</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="55">0x11D0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="62">0xBB</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="67">0x8B</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="72">0x00</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="77">0xA0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="82">0xC9</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="87">0x0F</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="92">0x27</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="120" pos:column="97">0x44</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="block" pos:line="122" pos:column="1">/* Definition of interface: _IDTExtensibility2 */</comment>
<cpp:undef pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">undef</cpp:directive> <name pos:line="123" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="124" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="124" pos:column="19">_IDTExtensibility2</cpp:value></cpp:define>

<macro><name pos:line="126" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="126" pos:column="19">(<argument pos:line="126" pos:column="20">_IDTExtensibility2</argument>, <argument pos:line="126" pos:column="40">IDispatch</argument>)</argument_list></macro>
<block pos:line="127" pos:column="1">{
<function_decl><type><name pos:line="128" pos:column="1">BEGIN_INTERFACE</name>
<cpp:ifndef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifndef</cpp:directive> <name pos:line="129" pos:column="9">NO_BASEINTERFACE_FUNCS</name></cpp:ifndef>

    <comment type="block" pos:line="131" pos:column="5">/* IUnknown methods */</comment>
    <name pos:line="132" pos:column="5">STDMETHOD</name></type>(<name pos:line="132" pos:column="15">QueryInterface</name>)<parameter_list pos:line="132" pos:column="30">(<param><decl><type><name pos:line="132" pos:column="31">THIS_</name> <name pos:line="132" pos:column="37">REFIID</name></type> <name pos:line="132" pos:column="44">riid</name></decl></param>, <param><decl><type><name pos:line="132" pos:column="50">LPVOID</name> <name pos:line="132" pos:column="57">FAR</name><type:modifier pos:line="132" pos:column="60">*</type:modifier></type> <name pos:line="132" pos:column="62">ppvObj</name></decl></param>)</parameter_list> <name pos:line="132" pos:column="70">PURE</name>;</function_decl>
    <macro><name pos:line="133" pos:column="5">STDMETHOD_</name><argument_list pos:line="133" pos:column="15">(<argument pos:line="133" pos:column="16">ULONG</argument>, <argument pos:line="133" pos:column="23">AddRef</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="133" pos:column="30">(</op:operator><name pos:line="133" pos:column="31">THIS</name><op:operator pos:line="133" pos:column="35">)</op:operator> <name pos:line="133" pos:column="37">PURE</name></expr>;</expr_stmt>
    <macro><name pos:line="134" pos:column="5">STDMETHOD_</name><argument_list pos:line="134" pos:column="15">(<argument pos:line="134" pos:column="16">ULONG</argument>, <argument pos:line="134" pos:column="23">Release</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="134" pos:column="31">(</op:operator><name pos:line="134" pos:column="32">THIS</name><op:operator pos:line="134" pos:column="36">)</op:operator> <name pos:line="134" pos:column="38">PURE</name></expr>;</expr_stmt>

    <comment type="block" pos:line="136" pos:column="5">/* IDispatch methods */</comment>
    <function_decl><type><name pos:line="137" pos:column="5">STDMETHOD</name></type>(<name pos:line="137" pos:column="15">GetTypeInfoCount</name>)<parameter_list pos:line="137" pos:column="32">(<param><decl><type><name pos:line="137" pos:column="33">THIS_</name> <name pos:line="137" pos:column="39">UINT</name> <name pos:line="137" pos:column="44">FAR</name><type:modifier pos:line="137" pos:column="47">*</type:modifier></type> <name pos:line="137" pos:column="49">pctinfo</name></decl></param>)</parameter_list> <name pos:line="137" pos:column="58">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="139" pos:column="5">STDMETHOD</name></type>(<name pos:line="139" pos:column="15">GetTypeInfo</name>)<parameter_list pos:line="139" pos:column="27">(
      <param><decl><type><name pos:line="140" pos:column="7">THIS_</name>
      <name pos:line="141" pos:column="7">UINT</name></type> <name pos:line="141" pos:column="12">itinfo</name></decl></param>,
      <param><decl><type><name pos:line="142" pos:column="7">LCID</name></type> <name pos:line="142" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="143" pos:column="7">ITypeInfo</name> <name pos:line="143" pos:column="17">FAR</name><type:modifier pos:line="143" pos:column="20">*</type:modifier> <name pos:line="143" pos:column="22">FAR</name><type:modifier pos:line="143" pos:column="25">*</type:modifier></type> <name pos:line="143" pos:column="27">pptinfo</name></decl></param>)</parameter_list> <name pos:line="143" pos:column="36">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="145" pos:column="5">STDMETHOD</name></type>(<name pos:line="145" pos:column="15">GetIDsOfNames</name>)<parameter_list pos:line="145" pos:column="29">(
      <param><decl><type><name pos:line="146" pos:column="7">THIS_</name>
      <name pos:line="147" pos:column="7">REFIID</name></type> <name pos:line="147" pos:column="14">riid</name></decl></param>,
      <param><decl><type><name pos:line="148" pos:column="7">OLECHAR</name> <name pos:line="148" pos:column="15">FAR</name><type:modifier pos:line="148" pos:column="18">*</type:modifier> <name pos:line="148" pos:column="20">FAR</name><type:modifier pos:line="148" pos:column="23">*</type:modifier></type> <name pos:line="148" pos:column="25">rgszNames</name></decl></param>,
      <param><decl><type><name pos:line="149" pos:column="7">UINT</name></type> <name pos:line="149" pos:column="12">cNames</name></decl></param>,
      <param><decl><type><name pos:line="150" pos:column="7">LCID</name></type> <name pos:line="150" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="151" pos:column="7">DISPID</name> <name pos:line="151" pos:column="14">FAR</name><type:modifier pos:line="151" pos:column="17">*</type:modifier></type> <name pos:line="151" pos:column="19">rgdispid</name></decl></param>)</parameter_list> <name pos:line="151" pos:column="29">PURE</name>;</function_decl>

    <function_decl><type><name pos:line="153" pos:column="5">STDMETHOD</name></type>(<name pos:line="153" pos:column="15">Invoke</name>)<parameter_list pos:line="153" pos:column="22">(
      <param><decl><type><name pos:line="154" pos:column="7">THIS_</name>
      <name pos:line="155" pos:column="7">DISPID</name></type> <name pos:line="155" pos:column="14">dispidMember</name></decl></param>,
      <param><decl><type><name pos:line="156" pos:column="7">REFIID</name></type> <name pos:line="156" pos:column="14">riid</name></decl></param>,
      <param><decl><type><name pos:line="157" pos:column="7">LCID</name></type> <name pos:line="157" pos:column="12">lcid</name></decl></param>,
      <param><decl><type><name pos:line="158" pos:column="7">WORD</name></type> <name pos:line="158" pos:column="12">wFlags</name></decl></param>,
      <param><decl><type><name pos:line="159" pos:column="7">DISPPARAMS</name> <name pos:line="159" pos:column="18">FAR</name><type:modifier pos:line="159" pos:column="21">*</type:modifier></type> <name pos:line="159" pos:column="23">pdispparams</name></decl></param>,
      <param><decl><type><name pos:line="160" pos:column="7">VARIANT</name> <name pos:line="160" pos:column="15">FAR</name><type:modifier pos:line="160" pos:column="18">*</type:modifier></type> <name pos:line="160" pos:column="20">pvarResult</name></decl></param>,
      <param><decl><type><name pos:line="161" pos:column="7">EXCEPINFO</name> <name pos:line="161" pos:column="17">FAR</name><type:modifier pos:line="161" pos:column="20">*</type:modifier></type> <name pos:line="161" pos:column="22">pexcepinfo</name></decl></param>,
      <param><decl><type><name pos:line="162" pos:column="7">UINT</name> <name pos:line="162" pos:column="12">FAR</name><type:modifier pos:line="162" pos:column="15">*</type:modifier></type> <name pos:line="162" pos:column="17">puArgErr</name></decl></param>)</parameter_list> <name pos:line="162" pos:column="27">PURE</name>;</function_decl>
<cpp:endif pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:line="165" pos:column="5">/* _IDTExtensibility2 methods */</comment>
    <function_decl><type><name pos:line="166" pos:column="5">STDMETHOD</name></type>(<name pos:line="166" pos:column="15">OnConnection</name>)<parameter_list pos:line="166" pos:column="28">(<param><decl><type><name pos:line="166" pos:column="29">THIS_</name> <name pos:line="166" pos:column="35">IDispatch</name> <type:modifier pos:line="166" pos:column="45">*</type:modifier></type> <name pos:line="166" pos:column="47">Application</name></decl></param>, <param><decl><type><name pos:line="166" pos:column="60">ext_ConnectMode</name></type> <name pos:line="166" pos:column="76">ConnectMode</name></decl></param>, <param><decl><type><name pos:line="166" pos:column="89">IDispatch</name> <type:modifier pos:line="166" pos:column="99">*</type:modifier></type> <name pos:line="166" pos:column="101">AddInInst</name></decl></param>, <param><decl><type><name pos:line="166" pos:column="112">SAFEARRAY</name> <name pos:line="166" pos:column="122">FAR</name><type:modifier pos:line="166" pos:column="125">*</type:modifier> <name pos:line="166" pos:column="127">FAR</name><type:modifier pos:line="166" pos:column="130">*</type:modifier></type> <name pos:line="166" pos:column="132">custom</name></decl></param>)</parameter_list> <name pos:line="166" pos:column="140">PURE</name>;</function_decl>
    <function_decl><type><name pos:line="167" pos:column="5">STDMETHOD</name></type>(<name pos:line="167" pos:column="15">OnDisconnection</name>)<parameter_list pos:line="167" pos:column="31">(<param><decl><type><name pos:line="167" pos:column="32">THIS_</name> <name pos:line="167" pos:column="38">ext_DisconnectMode</name></type> <name pos:line="167" pos:column="57">RemoveMode</name></decl></param>, <param><decl><type><name pos:line="167" pos:column="69">SAFEARRAY</name> <name pos:line="167" pos:column="79">FAR</name><type:modifier pos:line="167" pos:column="82">*</type:modifier> <name pos:line="167" pos:column="84">FAR</name><type:modifier pos:line="167" pos:column="87">*</type:modifier></type> <name pos:line="167" pos:column="89">custom</name></decl></param>)</parameter_list> <name pos:line="167" pos:column="97">PURE</name>;</function_decl>
    <function_decl><type><name pos:line="168" pos:column="5">STDMETHOD</name></type>(<name pos:line="168" pos:column="15">OnAddInsUpdate</name>)<parameter_list pos:line="168" pos:column="30">(<param><decl><type><name pos:line="168" pos:column="31">THIS_</name> <name pos:line="168" pos:column="37">SAFEARRAY</name> <name pos:line="168" pos:column="47">FAR</name><type:modifier pos:line="168" pos:column="50">*</type:modifier> <name pos:line="168" pos:column="52">FAR</name><type:modifier pos:line="168" pos:column="55">*</type:modifier></type> <name pos:line="168" pos:column="57">custom</name></decl></param>)</parameter_list> <name pos:line="168" pos:column="65">PURE</name>;</function_decl>
    <function_decl><type><name pos:line="169" pos:column="5">STDMETHOD</name></type>(<name pos:line="169" pos:column="15">OnStartupComplete</name>)<parameter_list pos:line="169" pos:column="33">(<param><decl><type><name pos:line="169" pos:column="34">THIS_</name> <name pos:line="169" pos:column="40">SAFEARRAY</name> <name pos:line="169" pos:column="50">FAR</name><type:modifier pos:line="169" pos:column="53">*</type:modifier> <name pos:line="169" pos:column="55">FAR</name><type:modifier pos:line="169" pos:column="58">*</type:modifier></type> <name pos:line="169" pos:column="60">custom</name></decl></param>)</parameter_list> <name pos:line="169" pos:column="68">PURE</name>;</function_decl>
    <function_decl><type><name pos:line="170" pos:column="5">STDMETHOD</name></type>(<name pos:line="170" pos:column="15">BeginShutdown</name>)<parameter_list pos:line="170" pos:column="29">(<param><decl><type><name pos:line="170" pos:column="30">THIS_</name> <name pos:line="170" pos:column="36">SAFEARRAY</name> <name pos:line="170" pos:column="46">FAR</name><type:modifier pos:line="170" pos:column="49">*</type:modifier> <name pos:line="170" pos:column="51">FAR</name><type:modifier pos:line="170" pos:column="54">*</type:modifier></type> <name pos:line="170" pos:column="56">custom</name></decl></param>)</parameter_list> <name pos:line="170" pos:column="64">PURE</name>;</function_decl>
}</block><empty_stmt pos:line="171" pos:column="2">;</empty_stmt>

<typedef pos:line="173" pos:column="1">typedef <type><name pos:line="173" pos:column="9">_IDTExtensibility2</name></type> <name pos:line="173" pos:column="28">IDTExtensibility2</name>;</typedef>

<expr_stmt><expr><call><name pos:line="175" pos:column="1">DEFINE_GUID</name><argument_list pos:line="175" pos:column="12">(<argument><expr><name pos:line="175" pos:column="13">CLSID_AddinDesigner</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="33">0xAC0714F6L</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="45">0x3D04</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="52">0x11D1</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="59">0xAE</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="64">0x7D</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="69">0x00</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="74">0xA0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="79">0xC9</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="84">0x0F</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="89">0x26</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="175" pos:column="94">0xF4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifdef</cpp:directive> <name pos:line="177" pos:column="8">__cplusplus</name></cpp:ifdef>
<class_decl pos:line="178" pos:column="1">class <name pos:line="178" pos:column="7">AddinDesigner</name>;</class_decl>
<cpp:endif pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name pos:line="181" pos:column="1">DEFINE_GUID</name><argument_list pos:line="181" pos:column="12">(<argument><expr><name pos:line="181" pos:column="13">CLSID_AddinInstance</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="33">0xAC0714F7L</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="45">0x3D04</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="52">0x11D1</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="59">0xAE</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="64">0x7D</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="69">0x00</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="74">0xA0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="79">0xC9</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="84">0x0F</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="89">0x26</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="181" pos:column="94">0xF4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">ifdef</cpp:directive> <name pos:line="183" pos:column="8">__cplusplus</name></cpp:ifdef>
<class_decl pos:line="184" pos:column="1">class <name pos:line="184" pos:column="7">AddinInstance</name>;</class_decl>
<cpp:endif pos:line="185" pos:column="1">#<cpp:directive pos:line="185" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
