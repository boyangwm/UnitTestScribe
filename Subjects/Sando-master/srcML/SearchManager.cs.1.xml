<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\View\SearchManager.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">IO</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Linq</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Text</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Configuration</name><op:operator pos:line="7" pos:column="20">.</op:operator><name pos:line="7" pos:column="21">OptionsPages</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Core</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">Core</name><op:operator pos:line="9" pos:column="17">.</op:operator><name pos:line="9" pos:column="18">Extensions</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">ExtensionContracts</name><op:operator pos:line="11" pos:column="31">.</op:operator><name pos:line="11" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">ExtensionContracts</name><op:operator pos:line="12" pos:column="31">.</op:operator><name pos:line="12" pos:column="32">SearchContracts</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">ExtensionContracts</name><op:operator pos:line="13" pos:column="31">.</op:operator><name pos:line="13" pos:column="32">SplitterContracts</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">Indexer</name><op:operator pos:line="14" pos:column="20">.</op:operator><name pos:line="14" pos:column="21">Searching</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Sando</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">Recommender</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Sando</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">SearchEngine</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Sando</name><op:operator pos:line="17" pos:column="12">.</op:operator><name pos:line="17" pos:column="13">Indexer</name><op:operator pos:line="17" pos:column="20">.</op:operator><name pos:line="17" pos:column="21">Searching</name><op:operator pos:line="17" pos:column="30">.</op:operator><name pos:line="17" pos:column="31">Criteria</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">Sando</name><op:operator pos:line="18" pos:column="12">.</op:operator><name pos:line="18" pos:column="13">Core</name><op:operator pos:line="18" pos:column="17">.</op:operator><name pos:line="18" pos:column="18">Tools</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">Sando</name><op:operator pos:line="19" pos:column="12">.</op:operator><name pos:line="19" pos:column="13">Core</name><op:operator pos:line="19" pos:column="17">.</op:operator><name pos:line="19" pos:column="18">Logging</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">Sando</name><op:operator pos:line="20" pos:column="12">.</op:operator><name pos:line="20" pos:column="13">UI</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">Monitoring</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">Sando</name><op:operator pos:line="21" pos:column="12">.</op:operator><name pos:line="21" pos:column="13">Indexer</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">Sando</name><op:operator pos:line="22" pos:column="12">.</op:operator><name pos:line="22" pos:column="13">Core</name><op:operator pos:line="22" pos:column="17">.</op:operator><name pos:line="22" pos:column="18">Logging</name><op:operator pos:line="22" pos:column="25">.</op:operator><name pos:line="22" pos:column="26">Events</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">Sando</name><op:operator pos:line="23" pos:column="12">.</op:operator><name pos:line="23" pos:column="13">Indexer</name><op:operator pos:line="23" pos:column="20">.</op:operator><name pos:line="23" pos:column="21">Searching</name><op:operator pos:line="23" pos:column="30">.</op:operator><name pos:line="23" pos:column="31">Metrics</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">Lucene</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">Net</name><op:operator pos:line="24" pos:column="17">.</op:operator><name pos:line="24" pos:column="18">Analysis</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">Sando</name><op:operator pos:line="25" pos:column="12">.</op:operator><name pos:line="25" pos:column="13">Indexer</name><op:operator pos:line="25" pos:column="20">.</op:operator><name pos:line="25" pos:column="21">Metrics</name></name>;</using>

<namespace pos:line="27" pos:column="1">namespace <name><name pos:line="27" pos:column="11">Sando</name><op:operator pos:line="27" pos:column="16">.</op:operator><name pos:line="27" pos:column="17">UI</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">View</name></name>
<block pos:line="28" pos:column="1">{
    
    <class><specifier pos:line="30" pos:column="5">public</specifier> class <name pos:line="30" pos:column="18">SearchManagerFactory</name>
    <block pos:line="31" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">private</specifier> <specifier pos:line="32" pos:column="17">static</specifier> <name pos:line="32" pos:column="24">SearchManager</name></type> <name pos:line="32" pos:column="38">_uiSearchManager</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="34" pos:column="9">public</specifier> <specifier pos:line="34" pos:column="16">static</specifier> <name pos:line="34" pos:column="23">SearchManager</name></type> <name pos:line="34" pos:column="37">GetUserInterfaceSearchManager</name><parameter_list pos:line="34" pos:column="66">()</parameter_list>
        <block pos:line="35" pos:column="9">{
            <return pos:line="36" pos:column="13">return <expr><name pos:line="36" pos:column="20">_uiSearchManager</name> <op:operator pos:line="36" pos:column="37">??</op:operator> <op:operator pos:line="36" pos:column="40">(</op:operator><name pos:line="36" pos:column="41">_uiSearchManager</name> <op:operator pos:line="36" pos:column="58">=</op:operator> <op:operator pos:line="36" pos:column="60">new</op:operator> <call><name pos:line="36" pos:column="64">SearchManager</name><argument_list pos:line="36" pos:column="77">()</argument_list></call><op:operator pos:line="36" pos:column="79">)</op:operator></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="39" pos:column="9">public</specifier> <specifier pos:line="39" pos:column="16">static</specifier> <name pos:line="39" pos:column="23">SearchManager</name></type> <name pos:line="39" pos:column="37">GetNewBackgroundSearchManager</name><parameter_list pos:line="39" pos:column="66">()</parameter_list>
        <block pos:line="40" pos:column="9">{
            <return pos:line="41" pos:column="13">return <expr><op:operator pos:line="41" pos:column="20">new</op:operator> <call><name pos:line="41" pos:column="24">SearchManager</name><argument_list pos:line="41" pos:column="37">()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>


    <class><specifier pos:line="46" pos:column="5">public</specifier> class <name pos:line="46" pos:column="18">SearchManager</name>
    <block pos:line="47" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <specifier pos:line="48" pos:column="17">readonly</specifier> <name pos:line="48" pos:column="26">MultipleListeners</name></type> <name pos:line="48" pos:column="44">_searchResultListener</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="50" pos:column="9">internal</specifier> <name pos:line="50" pos:column="18">SearchManager</name><parameter_list pos:line="50" pos:column="31">()</parameter_list>
        <block pos:line="51" pos:column="9">{
            <expr_stmt><expr><name pos:line="52" pos:column="13">_searchResultListener</name> <op:operator pos:line="52" pos:column="35">=</op:operator> <op:operator pos:line="52" pos:column="37">new</op:operator> <call><name pos:line="52" pos:column="41">MultipleListeners</name><argument_list pos:line="52" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>


        <class><specifier pos:line="56" pos:column="9">private</specifier> class <name pos:line="56" pos:column="23">MultipleListeners</name> <super pos:line="56" pos:column="41">: <name pos:line="56" pos:column="43">ISearchResultListener</name></super>
        <block pos:line="57" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="58" pos:column="13">private</specifier> <specifier pos:line="58" pos:column="21">readonly</specifier> <name><name pos:line="58" pos:column="30">List</name><argument_list pos:line="58" pos:column="34">&lt;<argument><name pos:line="58" pos:column="35">ISearchResultListener</name></argument>&gt;</argument_list></name></type> <name pos:line="58" pos:column="58">listeners</name> <init pos:line="58" pos:column="68">= <expr><op:operator pos:line="58" pos:column="70">new</op:operator> <call><name><name pos:line="58" pos:column="74">List</name><argument_list pos:line="58" pos:column="78">&lt;<argument><name pos:line="58" pos:column="79">ISearchResultListener</name></argument>&gt;</argument_list></name><argument_list pos:line="58" pos:column="101">()</argument_list></call></expr></init></decl>;</decl_stmt>
 
            <function><type><specifier pos:line="60" pos:column="13">internal</specifier> <name pos:line="60" pos:column="22">void</name></type> <name pos:line="60" pos:column="27">AddListener</name><parameter_list pos:line="60" pos:column="38">(<param><decl><type><name pos:line="60" pos:column="39">ISearchResultListener</name></type> <name pos:line="60" pos:column="61">listener</name></decl></param>)</parameter_list>
            <block pos:line="61" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="62" pos:column="17">this</name><op:operator pos:line="62" pos:column="21">.</op:operator><name pos:line="62" pos:column="22">listeners</name><op:operator pos:line="62" pos:column="31">.</op:operator><name pos:line="62" pos:column="32">Add</name></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>
           <function><type><specifier pos:line="64" pos:column="12">public</specifier> <name pos:line="64" pos:column="19">void</name></type> <name pos:line="64" pos:column="24">Update</name><parameter_list pos:line="64" pos:column="30">(<param><decl><type><name pos:line="64" pos:column="31">String</name></type> <name pos:line="64" pos:column="38">searchString</name></decl></param>, <param><decl><type><name><name pos:line="64" pos:column="52">IQueryable</name><argument_list pos:line="64" pos:column="62">&lt;<argument><name pos:line="64" pos:column="63">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="64" pos:column="81">results</name></decl></param>)</parameter_list>
           <block pos:line="65" pos:column="12">{
               <foreach pos:line="66" pos:column="16">foreach (<init><decl><type><name pos:line="66" pos:column="25">var</name></type> <name pos:line="66" pos:column="29">listener</name> <range pos:line="66" pos:column="38">in <expr><name pos:line="66" pos:column="41">listeners</name></expr></range></decl></init>)
               <block pos:line="67" pos:column="16">{
                   <expr_stmt><expr><call><name><name pos:line="68" pos:column="20">listener</name><op:operator pos:line="68" pos:column="28">.</op:operator><name pos:line="68" pos:column="29">Update</name></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name pos:line="68" pos:column="36">searchString</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="50">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               }</block></foreach>
           }</block></function>

           <function><type><specifier pos:line="72" pos:column="12">public</specifier> <name pos:line="72" pos:column="19">void</name></type> <name pos:line="72" pos:column="24">UpdateMessage</name><parameter_list pos:line="72" pos:column="37">(<param><decl><type><name pos:line="72" pos:column="38">string</name></type> <name pos:line="72" pos:column="45">message</name></decl></param>)</parameter_list>
           <block pos:line="73" pos:column="12">{
               <foreach pos:line="74" pos:column="16">foreach (<init><decl><type><name pos:line="74" pos:column="25">var</name></type> <name pos:line="74" pos:column="29">listener</name> <range pos:line="74" pos:column="38">in <expr><name pos:line="74" pos:column="41">listeners</name></expr></range></decl></init>)
               <block pos:line="75" pos:column="16">{
                   <expr_stmt><expr><call><name><name pos:line="76" pos:column="20">listener</name><op:operator pos:line="76" pos:column="28">.</op:operator><name pos:line="76" pos:column="29">UpdateMessage</name></name><argument_list pos:line="76" pos:column="42">(<argument><expr><name pos:line="76" pos:column="43">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               }</block></foreach>
           }</block></function>

           <function><type><specifier pos:line="80" pos:column="12">public</specifier> <name pos:line="80" pos:column="19">void</name></type> <name pos:line="80" pos:column="24">UpdateRecommendedQueries</name><parameter_list pos:line="80" pos:column="48">(<param><decl><type><name><name pos:line="80" pos:column="49">IQueryable</name><argument_list pos:line="80" pos:column="59">&lt;<argument><name pos:line="80" pos:column="60">string</name></argument>&gt;</argument_list></name></type> <name pos:line="80" pos:column="68">queries</name></decl></param>)</parameter_list>
           <block pos:line="81" pos:column="12">{
               <foreach pos:line="82" pos:column="16">foreach (<init><decl><type><name pos:line="82" pos:column="25">var</name></type> <name pos:line="82" pos:column="29">listener</name> <range pos:line="82" pos:column="38">in <expr><name pos:line="82" pos:column="41">listeners</name></expr></range></decl></init>)
               <block pos:line="83" pos:column="16">{
                   <expr_stmt><expr><call><name><name pos:line="84" pos:column="20">listener</name><op:operator pos:line="84" pos:column="28">.</op:operator><name pos:line="84" pos:column="29">UpdateRecommendedQueries</name></name><argument_list pos:line="84" pos:column="53">(<argument><expr><name pos:line="84" pos:column="54">queries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               }</block></foreach>
           }</block></function>
        }</block></class>


        <function><type><specifier pos:line="90" pos:column="9">public</specifier> <name pos:line="90" pos:column="16">void</name></type> <name pos:line="90" pos:column="21">Search</name><parameter_list pos:line="90" pos:column="27">(<param><decl><type><name pos:line="90" pos:column="28">String</name></type> <name pos:line="90" pos:column="35">searchString</name></decl></param>, <param><decl><type><name pos:line="90" pos:column="49">SimpleSearchCriteria</name></type> <name pos:line="90" pos:column="70">searchCriteria</name> <init pos:line="90" pos:column="85">= <expr><name pos:line="90" pos:column="87">null</name></expr></init></decl></param>, <name pos:line="90" pos:column="93">bool</name> <name pos:line="90" pos:column="98">interactive</name> <op:operator pos:line="90" pos:column="110">=</op:operator> <lit:literal type="boolean" pos:line="90" pos:column="112">true</lit:literal>)</parameter_list>
        <block pos:line="91" pos:column="9">{            
            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><op:operator pos:line="92" pos:column="17">!</op:operator><call><name pos:line="92" pos:column="18">EnsureSolutionOpen</name><argument_list pos:line="92" pos:column="36">()</argument_list></call></expr>)</condition><then pos:line="92" pos:column="39">
                <return pos:line="93" pos:column="17">return;</return></then></if>
                        
            <try pos:line="95" pos:column="13">try
            <block pos:line="96" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="97" pos:column="17">var</name></type> <name pos:line="97" pos:column="21">codeSearcher</name> <init pos:line="97" pos:column="34">= <expr><op:operator pos:line="97" pos:column="36">new</op:operator> <call><name pos:line="97" pos:column="40">CodeSearcher</name><argument_list pos:line="97" pos:column="52">(<argument><expr><op:operator pos:line="97" pos:column="53">new</op:operator> <call><name pos:line="97" pos:column="57">IndexerSearcher</name><argument_list pos:line="97" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><call><name><name pos:line="98" pos:column="21">String</name><op:operator pos:line="98" pos:column="27">.</op:operator><name pos:line="98" pos:column="28">IsNullOrEmpty</name></name><argument_list pos:line="98" pos:column="41">(<argument><expr><name pos:line="98" pos:column="42">searchString</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="98" pos:column="56">
                    <return pos:line="99" pos:column="21">return;</return></then></if>
                
                <decl_stmt><decl><type><name pos:line="101" pos:column="17">var</name></type> <name pos:line="101" pos:column="21">solutionKey</name> <init pos:line="101" pos:column="33">= <expr><call><name><name pos:line="101" pos:column="35">ServiceLocator</name><op:operator pos:line="101" pos:column="49">.</op:operator><name><name pos:line="101" pos:column="50">ResolveOptional</name><argument_list pos:line="101" pos:column="65">&lt;<argument><name pos:line="101" pos:column="66">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="101" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="101" pos:column="82">//no opened solution</comment>
                <if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">solutionKey</name> <op:operator pos:line="102" pos:column="33">==</op:operator> <name pos:line="102" pos:column="36">null</name></expr>)</condition><then pos:line="102" pos:column="41">
                <block pos:line="103" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="104" pos:column="21">_searchResultListener</name><op:operator pos:line="104" pos:column="42">.</op:operator><name pos:line="104" pos:column="43">UpdateMessage</name></name><argument_list pos:line="104" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="104" pos:column="57">"Sando searches only the currently open Solution.  Please open a Solution and try again."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="105" pos:column="21">return;</return>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="108" pos:column="17">searchString</name> <op:operator pos:line="108" pos:column="30">=</op:operator> <call><name><name pos:line="108" pos:column="32">ExtensionPointsRepository</name><op:operator pos:line="108" pos:column="57">.</op:operator><name pos:line="108" pos:column="58">Instance</name><op:operator pos:line="108" pos:column="66">.</op:operator><name pos:line="108" pos:column="67">GetQueryRewriterImplementation</name></name><argument_list pos:line="108" pos:column="97">()</argument_list></call><op:operator pos:line="108" pos:column="99">.</op:operator><call><name pos:line="108" pos:column="100">RewriteQuery</name><argument_list pos:line="108" pos:column="112">(<argument><expr><name pos:line="108" pos:column="113">searchString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="110" pos:column="33">PreRetrievalMetrics</name></type> <name pos:line="110" pos:column="53">preMetrics</name> <init pos:line="110" pos:column="64">= <expr><op:operator pos:line="110" pos:column="66">new</op:operator> <call><name pos:line="110" pos:column="70">PreRetrievalMetrics</name><argument_list pos:line="110" pos:column="89">(<argument><expr><call><name><name pos:line="110" pos:column="90">ServiceLocator</name><op:operator pos:line="110" pos:column="104">.</op:operator><name><name pos:line="110" pos:column="105">Resolve</name><argument_list pos:line="110" pos:column="112">&lt;<argument><name pos:line="110" pos:column="113">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="110" pos:column="129">()</argument_list></call><op:operator pos:line="110" pos:column="131">.</op:operator><name pos:line="110" pos:column="132">Reader</name></expr></argument>, <argument><expr><call><name><name pos:line="110" pos:column="140">ServiceLocator</name><op:operator pos:line="110" pos:column="154">.</op:operator><name><name pos:line="110" pos:column="155">Resolve</name><argument_list pos:line="110" pos:column="162">&lt;<argument><name pos:line="110" pos:column="163">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="110" pos:column="172">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="111" pos:column="33">LogEvents</name><op:operator pos:line="111" pos:column="42">.</op:operator><name pos:line="111" pos:column="43">PreSearch</name></name><argument_list pos:line="111" pos:column="52">(<argument><expr><name pos:line="111" pos:column="53">this</name></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="59">preMetrics</name><op:operator pos:line="111" pos:column="69">.</op:operator><name pos:line="111" pos:column="70">MaxIdf</name></name><argument_list pos:line="111" pos:column="76">(<argument><expr><name pos:line="111" pos:column="77">searchString</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="92">preMetrics</name><op:operator pos:line="111" pos:column="102">.</op:operator><name pos:line="111" pos:column="103">AvgIdf</name></name><argument_list pos:line="111" pos:column="109">(<argument><expr><name pos:line="111" pos:column="110">searchString</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="125">preMetrics</name><op:operator pos:line="111" pos:column="135">.</op:operator><name pos:line="111" pos:column="136">AvgSqc</name></name><argument_list pos:line="111" pos:column="142">(<argument><expr><name pos:line="111" pos:column="143">searchString</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="158">preMetrics</name><op:operator pos:line="111" pos:column="168">.</op:operator><name pos:line="111" pos:column="169">AvgVar</name></name><argument_list pos:line="111" pos:column="175">(<argument><expr><name pos:line="111" pos:column="176">searchString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="112" pos:column="17">LogEvents</name><op:operator pos:line="112" pos:column="26">.</op:operator><name pos:line="112" pos:column="27">PreSearchQueryAnalysis</name></name><argument_list pos:line="112" pos:column="49">(<argument><expr><name pos:line="112" pos:column="50">this</name></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="56">QueryMetrics</name><op:operator pos:line="112" pos:column="68">.</op:operator><name pos:line="112" pos:column="69">ExamineQuery</name></name><argument_list pos:line="112" pos:column="81">(<argument><expr><name pos:line="112" pos:column="82">searchString</name></expr></argument>)</argument_list></call><op:operator pos:line="112" pos:column="95">.</op:operator><call><name pos:line="112" pos:column="96">ToString</name><argument_list pos:line="112" pos:column="104">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="108">QueryMetrics</name><op:operator pos:line="112" pos:column="120">.</op:operator><name pos:line="112" pos:column="121">DiceCoefficient</name></name><argument_list pos:line="112" pos:column="136">(<argument><expr><name><name pos:line="112" pos:column="137">QueryMetrics</name><op:operator pos:line="112" pos:column="149">.</op:operator><name pos:line="112" pos:column="150">SavedQuery</name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="162">searchString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="113" pos:column="17">QueryMetrics</name><op:operator pos:line="113" pos:column="29">.</op:operator><name pos:line="113" pos:column="30">SavedQuery</name></name> <op:operator pos:line="113" pos:column="41">=</op:operator> <name pos:line="113" pos:column="43">searchString</name></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="115" pos:column="33">var</name></type> <name pos:line="115" pos:column="37">criteria</name> <init pos:line="115" pos:column="46">= <expr><call><name pos:line="115" pos:column="48">GetCriteria</name><argument_list pos:line="115" pos:column="59">(<argument><expr><name pos:line="115" pos:column="60">searchString</name></expr></argument>, <argument><expr><name pos:line="115" pos:column="74">searchCriteria</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="116" pos:column="17">var</name></type> <name pos:line="116" pos:column="21">results</name> <init pos:line="116" pos:column="29">= <expr><call><name><name pos:line="116" pos:column="31">codeSearcher</name><op:operator pos:line="116" pos:column="43">.</op:operator><name pos:line="116" pos:column="44">Search</name></name><argument_list pos:line="116" pos:column="50">(<argument><expr><name pos:line="116" pos:column="51">criteria</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="116" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="116" pos:column="66">.</op:operator><call><name pos:line="116" pos:column="67">AsQueryable</name><argument_list pos:line="116" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="117" pos:column="17">var</name></type> <name pos:line="117" pos:column="21">resultsReorderer</name> <init pos:line="117" pos:column="38">= <expr><call><name><name pos:line="117" pos:column="40">ExtensionPointsRepository</name><op:operator pos:line="117" pos:column="65">.</op:operator><name pos:line="117" pos:column="66">Instance</name><op:operator pos:line="117" pos:column="74">.</op:operator><name pos:line="117" pos:column="75">GetResultsReordererImplementation</name></name><argument_list pos:line="117" pos:column="108">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="118" pos:column="17">results</name> <op:operator pos:line="118" pos:column="25">=</op:operator> <call><name><name pos:line="118" pos:column="27">resultsReorderer</name><op:operator pos:line="118" pos:column="43">.</op:operator><name pos:line="118" pos:column="44">ReorderSearchResults</name></name><argument_list pos:line="118" pos:column="64">(<argument><expr><name pos:line="118" pos:column="65">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="120" pos:column="17">var</name></type> <name pos:line="120" pos:column="21">returnString</name> <init pos:line="120" pos:column="34">= <expr><op:operator pos:line="120" pos:column="36">new</op:operator> <call><name pos:line="120" pos:column="40">StringBuilder</name><argument_list pos:line="120" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><call><name><name pos:line="122" pos:column="21">criteria</name><op:operator pos:line="122" pos:column="29">.</op:operator><name pos:line="122" pos:column="30">IsQueryReformed</name></name><argument_list pos:line="122" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="122" pos:column="48">
                <block pos:line="123" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="124" pos:column="21">returnString</name><op:operator pos:line="124" pos:column="33">.</op:operator><name pos:line="124" pos:column="34">Append</name></name><argument_list pos:line="124" pos:column="40">(<argument><expr><call><name><name pos:line="124" pos:column="41">criteria</name><op:operator pos:line="124" pos:column="49">.</op:operator><name pos:line="124" pos:column="50">GetQueryReformExplanation</name></name><argument_list pos:line="124" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><op:operator pos:line="127" pos:column="21">!</op:operator><call><name><name pos:line="127" pos:column="22">results</name><op:operator pos:line="127" pos:column="29">.</op:operator><name pos:line="127" pos:column="30">Any</name></name><argument_list pos:line="127" pos:column="33">()</argument_list></call></expr>)</condition><then pos:line="127" pos:column="36">
                <block pos:line="128" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="129" pos:column="21">returnString</name><op:operator pos:line="129" pos:column="33">.</op:operator><name pos:line="129" pos:column="34">Append</name></name><argument_list pos:line="129" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="41">"No results found. "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="131" pos:column="17">else
                <block pos:line="132" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="133" pos:column="21">returnString</name><op:operator pos:line="133" pos:column="33">.</op:operator><name pos:line="133" pos:column="34">Append</name></name><argument_list pos:line="133" pos:column="40">(<argument><expr><call><name><name pos:line="133" pos:column="41">results</name><op:operator pos:line="133" pos:column="48">.</op:operator><name pos:line="133" pos:column="49">Count</name></name><argument_list pos:line="133" pos:column="54">()</argument_list></call> <op:operator pos:line="133" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="133" pos:column="59">" results returned. "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><call><name><name pos:line="135" pos:column="21">ServiceLocator</name><op:operator pos:line="135" pos:column="35">.</op:operator><name><name pos:line="135" pos:column="36">Resolve</name><argument_list pos:line="135" pos:column="43">&lt;<argument><name pos:line="135" pos:column="44">InitialIndexingWatcher</name></argument>&gt;</argument_list></name></name><argument_list pos:line="135" pos:column="67">()</argument_list></call><op:operator pos:line="135" pos:column="69">.</op:operator><call><name pos:line="135" pos:column="70">IsInitialIndexingInProgress</name><argument_list pos:line="135" pos:column="97">()</argument_list></call></expr>)</condition><then pos:line="135" pos:column="100">
                <block pos:line="136" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="137" pos:column="21">returnString</name><op:operator pos:line="137" pos:column="33">.</op:operator><name pos:line="137" pos:column="34">Append</name></name><argument_list pos:line="137" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="41">"Sando is still performing its initial index of this project, results may be incomplete."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="139" pos:column="17">_searchResultListener</name><op:operator pos:line="139" pos:column="38">.</op:operator><name pos:line="139" pos:column="39">Update</name></name><argument_list pos:line="139" pos:column="45">(<argument><expr><name pos:line="139" pos:column="46">searchString</name></expr></argument>, <argument><expr><name pos:line="139" pos:column="60">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="140" pos:column="17">_searchResultListener</name><op:operator pos:line="140" pos:column="38">.</op:operator><name pos:line="140" pos:column="39">UpdateMessage</name></name><argument_list pos:line="140" pos:column="52">(<argument><expr><call><name><name pos:line="140" pos:column="53">returnString</name><op:operator pos:line="140" pos:column="65">.</op:operator><name pos:line="140" pos:column="66">ToString</name></name><argument_list pos:line="140" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="141" pos:column="17">_searchResultListener</name><op:operator pos:line="141" pos:column="38">.</op:operator><name pos:line="141" pos:column="39">UpdateRecommendedQueries</name></name><argument_list pos:line="141" pos:column="63">(<argument><expr><call><name><name pos:line="141" pos:column="64">criteria</name><op:operator pos:line="141" pos:column="72">.</op:operator><name pos:line="141" pos:column="73">GetRecommendedQueries</name></name><argument_list pos:line="141" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="143" pos:column="33">LogEvents</name><op:operator pos:line="143" pos:column="42">.</op:operator><name pos:line="143" pos:column="43">PostSearch</name></name><argument_list pos:line="143" pos:column="53">(<argument><expr><name pos:line="143" pos:column="54">this</name></expr></argument>, <argument><expr><call><name><name pos:line="143" pos:column="60">results</name><op:operator pos:line="143" pos:column="67">.</op:operator><name pos:line="143" pos:column="68">Count</name></name><argument_list pos:line="143" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="77">criteria</name><op:operator pos:line="143" pos:column="85">.</op:operator><name pos:line="143" pos:column="86">NumberOfSearchResultsReturned</name></name></expr></argument>, <argument><expr><call><name><name pos:line="143" pos:column="117">PostRetrievalMetrics</name><op:operator pos:line="143" pos:column="137">.</op:operator><name pos:line="143" pos:column="138">AvgScore</name></name><argument_list pos:line="143" pos:column="146">(<argument><expr><call><name><name pos:line="143" pos:column="147">results</name><op:operator pos:line="143" pos:column="154">.</op:operator><name pos:line="143" pos:column="155">ToList</name></name><argument_list pos:line="143" pos:column="161">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="143" pos:column="166">PostRetrievalMetrics</name><op:operator pos:line="143" pos:column="186">.</op:operator><name pos:line="143" pos:column="187">StdDevScore</name></name><argument_list pos:line="143" pos:column="198">(<argument><expr><call><name><name pos:line="143" pos:column="199">results</name><op:operator pos:line="143" pos:column="206">.</op:operator><name pos:line="143" pos:column="207">ToList</name></name><argument_list pos:line="143" pos:column="213">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="145" pos:column="13">catch <parameter_list pos:line="145" pos:column="19">(<param><decl><type><name pos:line="145" pos:column="20">Exception</name></type> <name pos:line="145" pos:column="30">e</name></decl></param>)</parameter_list>
            <block pos:line="146" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="147" pos:column="17">_searchResultListener</name><op:operator pos:line="147" pos:column="38">.</op:operator><name pos:line="147" pos:column="39">UpdateMessage</name></name><argument_list pos:line="147" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="147" pos:column="53">"Sando is experiencing difficulties. See log file for details."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="148" pos:column="17">LogEvents</name><op:operator pos:line="148" pos:column="26">.</op:operator><name pos:line="148" pos:column="27">UISandoSearchingError</name></name><argument_list pos:line="148" pos:column="48">(<argument><expr><name pos:line="148" pos:column="49">this</name></expr></argument>, <argument><expr><name pos:line="148" pos:column="55">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="152" pos:column="9">private</specifier> <name pos:line="152" pos:column="17">bool</name></type> <name pos:line="152" pos:column="22">EnsureSolutionOpen</name><parameter_list pos:line="152" pos:column="40">()</parameter_list>
        <block pos:line="153" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="154" pos:column="13">DocumentIndexer</name></type> <name pos:line="154" pos:column="29">indexer</name> <init pos:line="154" pos:column="37">= <expr><name pos:line="154" pos:column="39">null</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="155" pos:column="13">var</name></type> <name pos:line="155" pos:column="17">isOpen</name> <init pos:line="155" pos:column="24">= <expr><lit:literal type="boolean" pos:line="155" pos:column="26">true</lit:literal></expr></init></decl>;</decl_stmt>
            <try pos:line="156" pos:column="13">try
            <block pos:line="157" pos:column="13">{
                <expr_stmt><expr><name pos:line="158" pos:column="17">indexer</name> <op:operator pos:line="158" pos:column="25">=</op:operator> <call><name><name pos:line="158" pos:column="27">ServiceLocator</name><op:operator pos:line="158" pos:column="41">.</op:operator><name><name pos:line="158" pos:column="42">Resolve</name><argument_list pos:line="158" pos:column="49">&lt;<argument><name pos:line="158" pos:column="50">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="158" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><name pos:line="159" pos:column="21">indexer</name> <op:operator pos:line="159" pos:column="29">==</op:operator> <name pos:line="159" pos:column="32">null</name> <op:operator pos:line="159" pos:column="37">||</op:operator> <call><name><name pos:line="159" pos:column="40">indexer</name><op:operator pos:line="159" pos:column="47">.</op:operator><name pos:line="159" pos:column="48">IsDisposingOrDisposed</name></name><argument_list pos:line="159" pos:column="69">()</argument_list></call></expr>)</condition><then pos:line="159" pos:column="72">
                <block pos:line="160" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="161" pos:column="21">_searchResultListener</name><op:operator pos:line="161" pos:column="42">.</op:operator><name pos:line="161" pos:column="43">UpdateMessage</name></name><argument_list pos:line="161" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="57">"Sando searches only the currently open Solution.  Please open a Solution and try again."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="162" pos:column="21">isOpen</name> <op:operator pos:line="162" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="162" pos:column="30">false</lit:literal></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="165" pos:column="13">catch <parameter_list pos:line="165" pos:column="19">(<param><decl><type><name pos:line="165" pos:column="20">Exception</name></type> <name pos:line="165" pos:column="30">e</name></decl></param>)</parameter_list>
            <block pos:line="166" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="167" pos:column="17">_searchResultListener</name><op:operator pos:line="167" pos:column="38">.</op:operator><name pos:line="167" pos:column="39">UpdateMessage</name></name><argument_list pos:line="167" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="53">"Sando searches only the currently open Solution.  Please open a Solution and try again."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="168" pos:column="17">if <condition pos:line="168" pos:column="20">(<expr><name pos:line="168" pos:column="21">indexer</name> <op:operator pos:line="168" pos:column="29">!=</op:operator> <name pos:line="168" pos:column="32">null</name></expr>)</condition><then pos:line="168" pos:column="37">
                    <expr_stmt><expr><call><name><name pos:line="169" pos:column="21">LogEvents</name><op:operator pos:line="169" pos:column="30">.</op:operator><name pos:line="169" pos:column="31">UISolutionOpeningError</name></name><argument_list pos:line="169" pos:column="53">(<argument><expr><name pos:line="169" pos:column="54">this</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="60">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                <expr_stmt><expr><name pos:line="170" pos:column="17">isOpen</name> <op:operator pos:line="170" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="170" pos:column="26">false</lit:literal></expr>;</expr_stmt>
            }</block></catch></try>
            <return pos:line="172" pos:column="13">return <expr><name pos:line="172" pos:column="20">isOpen</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="175" pos:column="9">private</specifier> <name pos:line="175" pos:column="17">SearchCriteria</name></type> <name pos:line="175" pos:column="32">GetCriteria</name><parameter_list pos:line="175" pos:column="43">(<param><decl><type><name pos:line="175" pos:column="44">string</name></type> <name pos:line="175" pos:column="51">searchString</name></decl></param>, <param><decl><type><name pos:line="175" pos:column="65">SimpleSearchCriteria</name></type> <name pos:line="175" pos:column="86">searchCriteria</name> <init pos:line="175" pos:column="101">= <expr><name pos:line="175" pos:column="103">null</name></expr></init></decl></param>)</parameter_list>
        <block pos:line="176" pos:column="9">{            
            <decl_stmt><decl><type><name pos:line="177" pos:column="13">var</name></type> <name pos:line="177" pos:column="17">sandoOptions</name> <init pos:line="177" pos:column="30">= <expr><call><name><name pos:line="177" pos:column="32">ServiceLocator</name><op:operator pos:line="177" pos:column="46">.</op:operator><name><name pos:line="177" pos:column="47">Resolve</name><argument_list pos:line="177" pos:column="54">&lt;<argument><name pos:line="177" pos:column="55">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="177" pos:column="77">()</argument_list></call><op:operator pos:line="177" pos:column="79">.</op:operator><call><name pos:line="177" pos:column="80">GetSandoOptions</name><argument_list pos:line="177" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="178" pos:column="13">var</name></type> <name pos:line="178" pos:column="17">description</name> <init pos:line="178" pos:column="29">= <expr><op:operator pos:line="178" pos:column="31">new</op:operator> <call><name pos:line="178" pos:column="35">SandoQueryParser</name><argument_list pos:line="178" pos:column="51">()</argument_list></call><op:operator pos:line="178" pos:column="53">.</op:operator><call><name pos:line="178" pos:column="54">Parse</name><argument_list pos:line="178" pos:column="59">(<argument><expr><name pos:line="178" pos:column="60">searchString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>            
            <decl_stmt><decl><type><name pos:line="179" pos:column="13">var</name></type> <name pos:line="179" pos:column="17">builder</name> <init pos:line="179" pos:column="25">= <expr><call><name><name pos:line="179" pos:column="27">CriteriaBuilder</name><op:operator pos:line="179" pos:column="42">.</op:operator><name pos:line="179" pos:column="43">GetBuilder</name></name><argument_list pos:line="179" pos:column="53">()</argument_list></call><op:operator pos:line="179" pos:column="55">.</op:operator>
                <call><name pos:line="180" pos:column="17">AddCriteria</name><argument_list pos:line="180" pos:column="28">(<argument><expr><name pos:line="180" pos:column="29">searchCriteria</name></expr></argument>)</argument_list></call><op:operator pos:line="180" pos:column="44">.</op:operator>                
                <call><name pos:line="181" pos:column="17">NumResults</name><argument_list pos:line="181" pos:column="27">(<argument><expr><name><name pos:line="181" pos:column="28">sandoOptions</name><op:operator pos:line="181" pos:column="40">.</op:operator><name pos:line="181" pos:column="41">NumberOfSearchResultsReturned</name></name></expr></argument>)</argument_list></call><op:operator pos:line="181" pos:column="71">.</op:operator><call><name pos:line="181" pos:column="72">AddFromDescription</name><argument_list pos:line="181" pos:column="90">(<argument><expr><name pos:line="181" pos:column="91">description</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="182" pos:column="13">var</name></type> <name pos:line="182" pos:column="17">simple</name> <init pos:line="182" pos:column="24">= <expr><call><name><name pos:line="182" pos:column="26">builder</name><op:operator pos:line="182" pos:column="33">.</op:operator><name pos:line="182" pos:column="34">GetCriteria</name></name><argument_list pos:line="182" pos:column="45">()</argument_list></call> <op:operator pos:line="182" pos:column="48">as</op:operator> <name pos:line="182" pos:column="51">SimpleSearchCriteria</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="183" pos:column="13">SearchCriteriaReformer</name><op:operator pos:line="183" pos:column="35">.</op:operator><name pos:line="183" pos:column="36">ReformSearchCriteria</name></name><argument_list pos:line="183" pos:column="56">(<argument><expr><name pos:line="183" pos:column="57">simple</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="184" pos:column="13">return <expr><name pos:line="184" pos:column="20">simple</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="187" pos:column="9">public</specifier> <name pos:line="187" pos:column="16">void</name></type> <name pos:line="187" pos:column="21">AddListener</name><parameter_list pos:line="187" pos:column="32">(<param><decl><type><name pos:line="187" pos:column="33">ISearchResultListener</name></type> <name pos:line="187" pos:column="55">listener</name></decl></param>)</parameter_list>
        <block pos:line="188" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">this</name><op:operator pos:line="189" pos:column="17">.</op:operator><name pos:line="189" pos:column="18">_searchResultListener</name><op:operator pos:line="189" pos:column="39">.</op:operator><name pos:line="189" pos:column="40">AddListener</name></name><argument_list pos:line="189" pos:column="51">(<argument><expr><name pos:line="189" pos:column="52">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
