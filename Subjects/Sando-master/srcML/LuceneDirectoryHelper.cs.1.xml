<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core\Tools\LuceneDirectoryHelper.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Globalization</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Sando</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">Core</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">Tools</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> <specifier pos:line="7" pos:column="12">static</specifier> class <name pos:line="7" pos:column="25">LuceneDirectoryHelper</name>
    <block pos:line="8" pos:column="5">{
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <specifier pos:line="9" pos:column="16">static</specifier> <name pos:line="9" pos:column="23">string</name></type> <name pos:line="9" pos:column="30">GetOrCreateLuceneDirectoryForSolution</name><parameter_list pos:line="9" pos:column="67">(<param><decl><type><name pos:line="9" pos:column="68">string</name></type> <name pos:line="9" pos:column="75">solutionFullName</name></decl></param>, <param><decl><type><name pos:line="9" pos:column="93">string</name></type> <name pos:line="9" pos:column="100">luceneDirectoryParentPath</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <return pos:line="11" pos:column="13">return <expr><call><name pos:line="11" pos:column="20">CreateNewDirectory</name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">solutionFullName</name></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">luceneDirectoryParentPath</name></expr></argument>, <argument><expr><name pos:line="11" pos:column="84">LuceneDirectoryName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="14" pos:column="9">public</specifier> <specifier pos:line="14" pos:column="16">static</specifier> <name pos:line="14" pos:column="23">bool</name></type> <name pos:line="14" pos:column="28">DoesLuceneDirectoryForSolutionExist</name><parameter_list pos:line="14" pos:column="63">(<param><decl><type><name pos:line="14" pos:column="64">string</name></type> <name pos:line="14" pos:column="71">solutionFullName</name></decl></param>, <param><decl><type><name pos:line="14" pos:column="89">string</name></type> <name pos:line="14" pos:column="96">luceneDirectoryParentPath</name></decl></param>)</parameter_list>
        <block pos:line="15" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">string</name></type> <name pos:line="16" pos:column="20">dir</name> <init pos:line="16" pos:column="24">= <expr><call><name pos:line="16" pos:column="26">CreateNewDirectory</name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">solutionFullName</name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">luceneDirectoryParentPath</name></expr></argument>, <argument><expr><name pos:line="16" pos:column="90">LuceneDirectoryName</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="16" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="17" pos:column="13">return <expr><call><name><name pos:line="17" pos:column="20">Directory</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">Exists</name></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">dir</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="20" pos:column="9">private</specifier> <specifier pos:line="20" pos:column="17">static</specifier> <name pos:line="20" pos:column="24">string</name></type> <name pos:line="20" pos:column="31">CreateNewDirectory</name><parameter_list pos:line="20" pos:column="49">(<param><decl><type><name pos:line="20" pos:column="50">string</name></type> <name pos:line="20" pos:column="57">solutionFullName</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="75">string</name></type> <name pos:line="20" pos:column="82">luceneDirectoryParentPath</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="109">string</name></type> <name pos:line="20" pos:column="116">folderName</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="128">bool</name></type> <name pos:line="20" pos:column="133">create</name> <init pos:line="20" pos:column="140">= <expr><lit:literal type="boolean" pos:line="20" pos:column="142">true</lit:literal></expr></init></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><call><name><name pos:line="22" pos:column="17">String</name><op:operator pos:line="22" pos:column="23">.</op:operator><name pos:line="22" pos:column="24">IsNullOrWhiteSpace</name></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">solutionFullName</name></expr></argument>)</argument_list></call> <op:operator pos:line="22" pos:column="61">||</op:operator> <call><name><name pos:line="22" pos:column="64">String</name><op:operator pos:line="22" pos:column="70">.</op:operator><name pos:line="22" pos:column="71">IsNullOrWhiteSpace</name></name><argument_list pos:line="22" pos:column="89">(<argument><expr><name pos:line="22" pos:column="90">luceneDirectoryParentPath</name></expr></argument>)</argument_list></call> <op:operator pos:line="22" pos:column="117">||</op:operator> <op:operator pos:line="22" pos:column="120">!</op:operator><call><name><name pos:line="22" pos:column="121">Directory</name><op:operator pos:line="22" pos:column="130">.</op:operator><name pos:line="22" pos:column="131">Exists</name></name><argument_list pos:line="22" pos:column="137">(<argument><expr><name pos:line="22" pos:column="138">luceneDirectoryParentPath</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="22" pos:column="165">
                <return pos:line="23" pos:column="17">return <expr><name><name pos:line="23" pos:column="24">String</name><op:operator pos:line="23" pos:column="30">.</op:operator><name pos:line="23" pos:column="31">Empty</name></name></expr>;</return></then></if>

            <decl_stmt><decl><type><name pos:line="25" pos:column="13">var</name></type> <name pos:line="25" pos:column="17">solutionName</name> <init pos:line="25" pos:column="30">= <expr><call><name><name pos:line="25" pos:column="32">Path</name><op:operator pos:line="25" pos:column="36">.</op:operator><name pos:line="25" pos:column="37">GetFileNameWithoutExtension</name></name><argument_list pos:line="25" pos:column="64">(<argument><expr><name pos:line="25" pos:column="65">solutionFullName</name></expr></argument>)</argument_list></call> <op:operator pos:line="25" pos:column="83">??</op:operator> <call><name><name pos:line="25" pos:column="86">Guid</name><op:operator pos:line="25" pos:column="90">.</op:operator><name pos:line="25" pos:column="91">NewGuid</name></name><argument_list pos:line="25" pos:column="98">()</argument_list></call><op:operator pos:line="25" pos:column="100">.</op:operator><call><name pos:line="25" pos:column="101">ToString</name><argument_list pos:line="25" pos:column="109">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">solutionNameHash</name> <init pos:line="26" pos:column="34">= <expr><call><name><name pos:line="26" pos:column="36">solutionFullName</name><op:operator pos:line="26" pos:column="52">.</op:operator><name pos:line="26" pos:column="53">GetHashCode</name></name><argument_list pos:line="26" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">var</name></type> <name pos:line="27" pos:column="17">totalName</name> <init pos:line="27" pos:column="27">= <expr><name pos:line="27" pos:column="29">solutionName</name> <op:operator pos:line="27" pos:column="42">+</op:operator> <lit:literal type="string" pos:line="27" pos:column="44">"-"</lit:literal> <op:operator pos:line="27" pos:column="48">+</op:operator> <name pos:line="27" pos:column="50">solutionNameHash</name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="29" pos:column="13">var</name></type> <name pos:line="29" pos:column="17">luceneDirectoryPath</name> <init pos:line="29" pos:column="37">= <expr><call><name><name pos:line="29" pos:column="39">Path</name><op:operator pos:line="29" pos:column="43">.</op:operator><name pos:line="29" pos:column="44">Combine</name></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">luceneDirectoryParentPath</name></expr></argument>, <argument><expr><name pos:line="29" pos:column="79">folderName</name></expr></argument>, <argument><expr><call><name><name pos:line="29" pos:column="91">totalName</name><op:operator pos:line="29" pos:column="100">.</op:operator><name pos:line="29" pos:column="101">ToString</name></name><argument_list pos:line="29" pos:column="109">(<argument><expr><name><name pos:line="29" pos:column="110">CultureInfo</name><op:operator pos:line="29" pos:column="121">.</op:operator><name pos:line="29" pos:column="122">InvariantCulture</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><op:operator pos:line="30" pos:column="17">!</op:operator><call><name><name pos:line="30" pos:column="18">Directory</name><op:operator pos:line="30" pos:column="27">.</op:operator><name pos:line="30" pos:column="28">Exists</name></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">luceneDirectoryPath</name></expr></argument>)</argument_list></call> <op:operator pos:line="30" pos:column="56">&amp;&amp;</op:operator> <name pos:line="30" pos:column="59">create</name></expr>)</condition><then pos:line="30" pos:column="66">
                <expr_stmt><expr><call><name><name pos:line="31" pos:column="17">Directory</name><op:operator pos:line="31" pos:column="26">.</op:operator><name pos:line="31" pos:column="27">CreateDirectory</name></name><argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">luceneDirectoryPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">luceneDirectoryPath</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="35" pos:column="9">public</specifier> <specifier pos:line="35" pos:column="16">static</specifier> <name pos:line="35" pos:column="23">string</name></type> <name pos:line="35" pos:column="30">GetOrCreateSrcMlArchivesDirectoryForSolution</name><parameter_list pos:line="35" pos:column="74">(<param><decl><type><name pos:line="35" pos:column="75">string</name></type> <name pos:line="35" pos:column="82">solutionFullName</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="100">string</name></type> <name pos:line="35" pos:column="107">luceneDirectoryParentPath</name></decl></param>)</parameter_list>
        <block pos:line="36" pos:column="9">{
            <return pos:line="37" pos:column="13">return <expr><call><name pos:line="37" pos:column="20">CreateNewDirectory</name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">solutionFullName</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">luceneDirectoryParentPath</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="84">SrcMlDirectoryName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">private</specifier> <specifier pos:line="40" pos:column="17">const</specifier> <name pos:line="40" pos:column="23">string</name></type> <name pos:line="40" pos:column="30">LuceneDirectoryName</name> <init pos:line="40" pos:column="50">= <expr><lit:literal type="string" pos:line="40" pos:column="52">"lucene"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="41" pos:column="9">private</specifier> <specifier pos:line="41" pos:column="17">const</specifier> <name pos:line="41" pos:column="23">string</name></type> <name pos:line="41" pos:column="30">SrcMlDirectoryName</name> <init pos:line="41" pos:column="49">= <expr><lit:literal type="string" pos:line="41" pos:column="51">"srcMlArchives"</lit:literal></expr></init></decl>;</decl_stmt>
    }</block></class>
}</block></namespace></unit>
