<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\proffserv.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for proffserv.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__proffserv_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__proffserv_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IProfferService_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IProfferService_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IProfferService</name></type> <name pos:line="53" pos:column="35">IProfferService</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IProfferService_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="57" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="58" pos:column="10">"servprov.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifdef</cpp:directive> <name pos:line="60" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="61" pos:column="1">extern <lit:literal type="string" pos:line="61" pos:column="8">"C"</lit:literal><block pos:line="61" pos:column="11">{
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="65" pos:column="1">/* interface __MIDL_itf_proffserv_0000_0000 */</comment>
<comment type="block" pos:line="66" pos:column="1">/* [local] */</comment> 

<comment type="line" pos:line="68" pos:column="1">//+-------------------------------------------------------------------------</comment>
<comment type="line" pos:line="69" pos:column="1">//</comment>
<comment type="line" pos:line="70" pos:column="1">//  Microsoft Windows</comment>
<comment type="line" pos:line="71" pos:column="1">//  Copyright 1995 - 1997 Microsoft Corporation. All Rights Reserved.</comment>
<comment type="line" pos:line="72" pos:column="1">//</comment>
<comment type="line" pos:line="73" pos:column="1">//  File: proffserv.h</comment>
<comment type="line" pos:line="74" pos:column="1">//</comment>
<comment type="line" pos:line="75" pos:column="1">//--------------------------------------------------------------------------</comment>
<cpp:ifndef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifndef</cpp:directive> <name pos:line="76" pos:column="9">_PROFFSERV_H_</name></cpp:ifndef>
<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">_PROFFSERV_H_</name></cpp:macro></cpp:define>


<decl_stmt><decl><type><specifier pos:line="80" pos:column="1">extern</specifier> <name pos:line="80" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="80" pos:column="22">__MIDL_itf_proffserv_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="81" pos:column="1">extern</specifier> <name pos:line="81" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="81" pos:column="22">__MIDL_itf_proffserv_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifndef</cpp:directive> <name pos:line="83" pos:column="9">__IProfferService_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">__IProfferService_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="86" pos:column="1">/* interface IProfferService */</comment>
<comment type="block" pos:line="87" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="90" pos:column="1">EXTERN_C</name> <specifier pos:line="90" pos:column="10">const</specifier> <name pos:line="90" pos:column="16">IID</name></type> <name pos:line="90" pos:column="20">IID_IProfferService</name></decl>;</decl_stmt>

<cpp:if pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">if</cpp:directive> <expr><call><name pos:line="92" pos:column="5">defined</name><argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="92" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="92" pos:column="29">!</op:operator><call><name pos:line="92" pos:column="30">defined</name><argument_list pos:line="92" pos:column="37">(<argument><expr><name pos:line="92" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="94" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="94" pos:column="19">(<argument pos:line="94" pos:column="20">"CB728B20-F786-11ce-92AD-00AA00A74CD0"</argument>)</argument_list></macro>
    <label><name pos:line="95" pos:column="5">IProfferService</name> :</label> <expr_stmt><expr pos:line="95" pos:column="23">public <name pos:line="95" pos:column="30">IUnknown</name>
    <block pos:line="96" pos:column="5">{
    <expr pos:line="97" pos:column="5">public<op:operator pos:line="97" pos:column="11">:</op:operator>
        virtual <name pos:line="98" pos:column="17">HRESULT</name> <name pos:line="98" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="98" pos:column="43">ProfferService</name><argument_list pos:line="98" pos:column="57">( 
            <comment type="block" pos:line="99" pos:column="13">/* [in] */</comment> <argument pos:line="99" pos:column="24">REFGUID rguidService</argument>,
            <comment type="block" pos:line="100" pos:column="13">/* [in] */</comment> <argument pos:line="100" pos:column="24">IServiceProvider *psp</argument>,
            <comment type="block" pos:line="101" pos:column="13">/* [out] */</comment> <argument pos:line="101" pos:column="25">DWORD *pdwCookie</argument>)</argument_list></macro> <op:operator pos:line="101" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="101" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="103" pos:column="9">virtual <name pos:line="103" pos:column="17">HRESULT</name> <name pos:line="103" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="103" pos:column="43">RevokeService</name><argument_list pos:line="103" pos:column="56">( 
            <comment type="block" pos:line="104" pos:column="13">/* [in] */</comment> <argument pos:line="104" pos:column="24">DWORD dwCookie</argument>)</argument_list></macro> <op:operator pos:line="104" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="104" pos:column="42">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="108" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="110" pos:column="5">typedef <type><struct pos:line="110" pos:column="13">struct <name pos:line="110" pos:column="20">IProfferServiceVtbl</name>
    <block pos:line="111" pos:column="5">{<public type="default" pos:line="111" pos:column="6">
        <function_decl><type><name pos:line="112" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="114" pos:column="9">HRESULT</name></type> ( <name pos:line="114" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="114" pos:column="37">*</type:modifier><name pos:line="114" pos:column="38">QueryInterface</name> )<parameter_list pos:line="114" pos:column="54">( 
            <param><decl><type><name pos:line="115" pos:column="13">IProfferService</name> <type:modifier pos:line="115" pos:column="29">*</type:modifier></type> <name pos:line="115" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="116" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="116" pos:column="24">REFIID</name></type> <name pos:line="116" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="117" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="118" pos:column="13">__RPC__deref_out</name>  <name pos:line="118" pos:column="31">void</name> <type:modifier pos:line="118" pos:column="36">*</type:modifier><type:modifier pos:line="118" pos:column="37">*</type:modifier></type><name pos:line="118" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="120" pos:column="9">ULONG</name></type> ( <name pos:line="120" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="120" pos:column="35">*</type:modifier><name pos:line="120" pos:column="36">AddRef</name> )<parameter_list pos:line="120" pos:column="44">( 
            <param><decl><type><name pos:line="121" pos:column="13">IProfferService</name> <type:modifier pos:line="121" pos:column="29">*</type:modifier></type> <name pos:line="121" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="123" pos:column="9">ULONG</name></type> ( <name pos:line="123" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="123" pos:column="35">*</type:modifier><name pos:line="123" pos:column="36">Release</name> )<parameter_list pos:line="123" pos:column="45">( 
            <param><decl><type><name pos:line="124" pos:column="13">IProfferService</name> <type:modifier pos:line="124" pos:column="29">*</type:modifier></type> <name pos:line="124" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="126" pos:column="9">HRESULT</name></type> ( <name pos:line="126" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="126" pos:column="37">*</type:modifier><name pos:line="126" pos:column="38">ProfferService</name> )<parameter_list pos:line="126" pos:column="54">( 
            <param><decl><type><name pos:line="127" pos:column="13">IProfferService</name> <type:modifier pos:line="127" pos:column="29">*</type:modifier></type> <name pos:line="127" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="128" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="128" pos:column="24">REFGUID</name></type> <name pos:line="128" pos:column="32">rguidService</name></decl></param>,
            <comment type="block" pos:line="129" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="129" pos:column="24">IServiceProvider</name> <type:modifier pos:line="129" pos:column="41">*</type:modifier></type><name pos:line="129" pos:column="42">psp</name></decl></param>,
            <comment type="block" pos:line="130" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="130" pos:column="25">DWORD</name> <type:modifier pos:line="130" pos:column="31">*</type:modifier></type><name pos:line="130" pos:column="32">pdwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="132" pos:column="9">HRESULT</name></type> ( <name pos:line="132" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="132" pos:column="37">*</type:modifier><name pos:line="132" pos:column="38">RevokeService</name> )<parameter_list pos:line="132" pos:column="53">( 
            <param><decl><type><name pos:line="133" pos:column="13">IProfferService</name> <type:modifier pos:line="133" pos:column="29">*</type:modifier></type> <name pos:line="133" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="134" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="134" pos:column="24">DWORD</name></type> <name pos:line="134" pos:column="30">dwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="136" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="137" pos:column="7">IProfferServiceVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="139" pos:column="5">interface</name></type> <name pos:line="139" pos:column="15">IProfferService</name>
    <argument_list pos:line="140" pos:column="5">{
        <argument><expr><name pos:line="141" pos:column="9">CONST_VTBL</name> struct <name pos:line="141" pos:column="27">IProfferServiceVtbl</name> <op:operator pos:line="141" pos:column="47">*</op:operator><name pos:line="141" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">ifdef</cpp:directive> <name pos:line="146" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="149" pos:column="9">IProfferService_QueryInterface</name><parameter_list pos:line="149" pos:column="39">(<param><type><name pos:line="149" pos:column="40">This</name></type></param>,<param><type><name pos:line="149" pos:column="45">riid</name></type></param>,<param><type><name pos:line="149" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="150" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="152" pos:column="9">IProfferService_AddRef</name><parameter_list pos:line="152" pos:column="31">(<param><type><name pos:line="152" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="153" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="155" pos:column="9">IProfferService_Release</name><parameter_list pos:line="155" pos:column="32">(<param><type><name pos:line="155" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="156" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="159" pos:column="9">IProfferService_ProfferService</name><parameter_list pos:line="159" pos:column="39">(<param><type><name pos:line="159" pos:column="40">This</name></type></param>,<param><type><name pos:line="159" pos:column="45">rguidService</name></type></param>,<param><type><name pos:line="159" pos:column="58">psp</name></type></param>,<param><type><name pos:line="159" pos:column="62">pdwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="160" pos:column="5">( (This)-&gt;lpVtbl -&gt; ProfferService(This,rguidService,psp,pdwCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="162" pos:column="9">IProfferService_RevokeService</name><parameter_list pos:line="162" pos:column="38">(<param><type><name pos:line="162" pos:column="39">This</name></type></param>,<param><type><name pos:line="162" pos:column="44">dwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="163" pos:column="5">( (This)-&gt;lpVtbl -&gt; RevokeService(This,dwCookie) )</cpp:value></cpp:define> 

<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="165" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="168" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="173" pos:column="9">/* __IProfferService_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="176" pos:column="1">/* interface __MIDL_itf_proffserv_0000_0001 */</comment>
<comment type="block" pos:line="177" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="179" pos:column="9">SID_SProfferService</name></cpp:macro> <cpp:value pos:line="179" pos:column="29">IID_IProfferService</cpp:value></cpp:define>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier pos:line="183" pos:column="1">extern</specifier> <name pos:line="183" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="183" pos:column="22">__MIDL_itf_proffserv_0000_0001_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="184" pos:column="1">extern</specifier> <name pos:line="184" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="184" pos:column="22">__MIDL_itf_proffserv_0000_0001_v0_0_s_ifspec</name></decl>;</decl_stmt>

<comment type="block" pos:line="186" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="188" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">ifdef</cpp:directive> <name pos:line="190" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
