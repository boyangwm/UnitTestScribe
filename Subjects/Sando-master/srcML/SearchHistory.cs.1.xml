<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core\Tools\SearchHistory.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Text</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Core</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">QueryRefomers</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Sando</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">Core</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">Tools</name></name>
<block pos:line="9" pos:column="1">{
    <class type="interface"><specifier pos:line="10" pos:column="5">public</specifier> interface <name pos:line="10" pos:column="22">ISearchHistoryItem</name>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">string</name></type> <name pos:line="12" pos:column="16">SearchString</name> <block pos:line="12" pos:column="29">{ <function_decl><name pos:line="12" pos:column="31">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">long</name></type> <name pos:line="13" pos:column="14">TimeStamp</name> <block pos:line="13" pos:column="24">{ <function_decl><name pos:line="13" pos:column="26">get</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>

    <class><specifier pos:line="16" pos:column="5">public</specifier> <specifier pos:line="16" pos:column="12">sealed</specifier> class <name pos:line="16" pos:column="25">SearchHistory</name> <super pos:line="16" pos:column="39">: <name pos:line="16" pos:column="41">IDisposable</name>, <name pos:line="16" pos:column="54">IInitializable</name></super>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <specifier pos:line="18" pos:column="17">readonly</specifier> <name pos:line="18" pos:column="26">object</name></type> <name pos:line="18" pos:column="33">locker</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">readonly</specifier> <name><name pos:line="19" pos:column="26">List</name><argument_list pos:line="19" pos:column="30">&lt;<argument><name pos:line="19" pos:column="31">InternalSearchHistoryItem</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="58">allItems</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <name pos:line="20" pos:column="17">string</name></type> <name pos:line="20" pos:column="24">directory</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">public</specifier> <specifier pos:line="21" pos:column="16">const</specifier> <name pos:line="21" pos:column="22">string</name></type> <name pos:line="21" pos:column="29">FILE_NAME</name> <init pos:line="21" pos:column="39">= <expr><lit:literal type="string" pos:line="21" pos:column="41">"SandoSearchHistory.txt"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">public</specifier> <specifier pos:line="22" pos:column="16">const</specifier> <name pos:line="22" pos:column="22">int</name></type> <name pos:line="22" pos:column="26">MAXIMUM_COUNT</name> <init pos:line="22" pos:column="40">= <expr><lit:literal type="number" pos:line="22" pos:column="42">1000</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">private</specifier> <specifier pos:line="23" pos:column="17">const</specifier> <name pos:line="23" pos:column="23">int</name></type> <name pos:line="23" pos:column="27">SAVE_EVERY_MINUTES</name> <init pos:line="23" pos:column="46">= <expr><lit:literal type="number" pos:line="23" pos:column="48">17</lit:literal></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">SearchHistory</name><parameter_list pos:line="25" pos:column="29">()</parameter_list>
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">locker</name> <op:operator pos:line="27" pos:column="20">=</op:operator> <op:operator pos:line="27" pos:column="22">new</op:operator> <call><name pos:line="27" pos:column="26">object</name><argument_list pos:line="27" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">allItems</name> <op:operator pos:line="28" pos:column="22">=</op:operator> <op:operator pos:line="28" pos:column="24">new</op:operator> <call><name><name pos:line="28" pos:column="28">List</name><argument_list pos:line="28" pos:column="32">&lt;<argument><name pos:line="28" pos:column="33">InternalSearchHistoryItem</name></argument>&gt;</argument_list></name><argument_list pos:line="28" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">Initialize</name><parameter_list pos:line="31" pos:column="31">(<param><decl><type><name pos:line="31" pos:column="32">string</name></type> <name pos:line="31" pos:column="39">directory</name></decl></param>)</parameter_list>
        <block pos:line="32" pos:column="9">{
            <lock pos:line="33" pos:column="13">lock (<expr><name pos:line="33" pos:column="19">locker</name></expr>)
            <block pos:line="34" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="35" pos:column="17">this</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">directory</name></name> <op:operator pos:line="35" pos:column="32">=</op:operator> <name pos:line="35" pos:column="34">directory</name></expr>;</expr_stmt>
                <if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name><name pos:line="36" pos:column="21">File</name><op:operator pos:line="36" pos:column="25">.</op:operator><name pos:line="36" pos:column="26">Exists</name></name><argument_list pos:line="36" pos:column="32">(<argument><expr><call><name pos:line="36" pos:column="33">GetFilePath</name><argument_list pos:line="36" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="36" pos:column="48">
                <block pos:line="37" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="38" pos:column="21">var</name></type> <name pos:line="38" pos:column="25">lines</name> <init pos:line="38" pos:column="31">= <expr><call><name><name pos:line="38" pos:column="33">File</name><op:operator pos:line="38" pos:column="37">.</op:operator><name pos:line="38" pos:column="38">ReadAllLines</name></name><argument_list pos:line="38" pos:column="50">(<argument><expr><call><name pos:line="38" pos:column="51">GetFilePath</name><argument_list pos:line="38" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="39" pos:column="21">var</name></type> <name pos:line="39" pos:column="25">items</name> <init pos:line="39" pos:column="31">= <expr><call><name><name pos:line="39" pos:column="33">lines</name><op:operator pos:line="39" pos:column="38">.</op:operator><name pos:line="39" pos:column="39">Select</name></name><argument_list pos:line="39" pos:column="45">(<argument><expr><lambda><name pos:line="39" pos:column="46">l</name> <op:operator pos:line="39" pos:column="48">=&gt;</op:operator> <op:operator pos:line="39" pos:column="51">new</op:operator> <call><name pos:line="39" pos:column="55">InternalSearchHistoryItem</name><argument_list pos:line="39" pos:column="80">(<argument><expr><name pos:line="39" pos:column="81">l</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="40" pos:column="21">allItems</name><op:operator pos:line="40" pos:column="29">.</op:operator><name pos:line="40" pos:column="30">Clear</name></name><argument_list pos:line="40" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="41" pos:column="21">allItems</name><op:operator pos:line="41" pos:column="29">.</op:operator><name pos:line="41" pos:column="30">AddRange</name></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">items</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="43" pos:column="17">TimedProcessor</name><op:operator pos:line="43" pos:column="31">.</op:operator><name pos:line="43" pos:column="32">GetInstance</name></name><argument_list pos:line="43" pos:column="43">()</argument_list></call><op:operator pos:line="43" pos:column="45">.</op:operator><call><name pos:line="43" pos:column="46">AddTimedTask</name><argument_list pos:line="43" pos:column="58">(<argument><expr><name pos:line="43" pos:column="59">WriteToFile</name></expr></argument>,
                    <argument><expr><name pos:line="44" pos:column="21">SAVE_EVERY_MINUTES</name> <op:operator pos:line="44" pos:column="40">*</op:operator> <lit:literal type="number" pos:line="44" pos:column="42">60</lit:literal> <op:operator pos:line="44" pos:column="45">*</op:operator> <lit:literal type="number" pos:line="44" pos:column="47">1000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="48" pos:column="9">private</specifier> <name pos:line="48" pos:column="17">string</name></type> <name pos:line="48" pos:column="24">GetFilePath</name><parameter_list pos:line="48" pos:column="35">()</parameter_list>
        <block pos:line="49" pos:column="9">{
            <return pos:line="50" pos:column="13">return <expr><call><name><name pos:line="50" pos:column="20">Path</name><op:operator pos:line="50" pos:column="24">.</op:operator><name pos:line="50" pos:column="25">Combine</name></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">directory</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="44">FILE_NAME</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <class><specifier pos:line="53" pos:column="9">private</specifier> class <name pos:line="53" pos:column="23">InternalSearchHistoryItem</name> <super pos:line="53" pos:column="49">: <name pos:line="53" pos:column="51">ISearchHistoryItem</name>, 
            <name><name pos:line="54" pos:column="13">IEquatable</name><argument_list pos:line="54" pos:column="23">&lt;<argument><name pos:line="54" pos:column="24">InternalSearchHistoryItem</name></argument>&gt;</argument_list></name></super>
        <block pos:line="55" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="56" pos:column="13">public</specifier> <name pos:line="56" pos:column="20">string</name></type> <name pos:line="56" pos:column="27">SearchString</name> <block pos:line="56" pos:column="40">{ <function_decl><name pos:line="56" pos:column="42">get</name>;</function_decl> <function_decl><specifier pos:line="56" pos:column="47">private</specifier> <name pos:line="56" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="57" pos:column="13">public</specifier> <name pos:line="57" pos:column="20">long</name></type> <name pos:line="57" pos:column="25">TimeStamp</name> <block pos:line="57" pos:column="35">{ <function_decl><name pos:line="57" pos:column="37">get</name>;</function_decl> <function_decl><specifier pos:line="57" pos:column="42">private</specifier> <name pos:line="57" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>

            <constructor><specifier pos:line="59" pos:column="13">internal</specifier> <name pos:line="59" pos:column="22">InternalSearchHistoryItem</name><parameter_list pos:line="59" pos:column="47">(<param><decl><type><name pos:line="59" pos:column="48">string</name></type> <name pos:line="59" pos:column="55">SearchString</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="69">long</name></type> <name pos:line="59" pos:column="74">TimeStamp</name></decl></param>)</parameter_list>
            <block pos:line="60" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="61" pos:column="17">this</name><op:operator pos:line="61" pos:column="21">.</op:operator><name pos:line="61" pos:column="22">SearchString</name></name> <op:operator pos:line="61" pos:column="35">=</op:operator> <name pos:line="61" pos:column="37">SearchString</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="62" pos:column="17">this</name><op:operator pos:line="62" pos:column="21">.</op:operator><name pos:line="62" pos:column="22">TimeStamp</name></name> <op:operator pos:line="62" pos:column="32">=</op:operator> <name pos:line="62" pos:column="34">TimeStamp</name></expr>;</expr_stmt>
            }</block></constructor>

            <constructor><specifier pos:line="65" pos:column="13">internal</specifier> <name pos:line="65" pos:column="22">InternalSearchHistoryItem</name><parameter_list pos:line="65" pos:column="47">(<param><decl><type><name pos:line="65" pos:column="48">string</name></type> <name pos:line="65" pos:column="55">text</name></decl></param>)</parameter_list>
            <block pos:line="66" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="67" pos:column="17">var</name></type> <name pos:line="67" pos:column="21">timepart</name> <init pos:line="67" pos:column="30">= <expr><op:operator pos:line="67" pos:column="32">(</op:operator><call><name><name pos:line="67" pos:column="33">text</name><op:operator pos:line="67" pos:column="37">.</op:operator><name pos:line="67" pos:column="38">Split</name></name><argument_list pos:line="67" pos:column="43">()</argument_list></call><op:operator pos:line="67" pos:column="45">.</op:operator><call><name pos:line="67" pos:column="46">Last</name><argument_list pos:line="67" pos:column="50">()</argument_list></call><op:operator pos:line="67" pos:column="52">)</op:operator></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">this</name><op:operator pos:line="68" pos:column="21">.</op:operator><name pos:line="68" pos:column="22">SearchString</name></name> <op:operator pos:line="68" pos:column="35">=</op:operator> <call><name><name pos:line="68" pos:column="37">text</name><op:operator pos:line="68" pos:column="41">.</op:operator><name pos:line="68" pos:column="42">Substring</name></name><argument_list pos:line="68" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="68" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="68" pos:column="55">text</name><op:operator pos:line="68" pos:column="59">.</op:operator><name pos:line="68" pos:column="60">Count</name></name><argument_list pos:line="68" pos:column="65">()</argument_list></call> <op:operator pos:line="68" pos:column="68">-</op:operator> 
                    <call><name><name pos:line="69" pos:column="21">timepart</name><op:operator pos:line="69" pos:column="29">.</op:operator><name pos:line="69" pos:column="30">Count</name></name><argument_list pos:line="69" pos:column="35">()</argument_list></call> <op:operator pos:line="69" pos:column="38">-</op:operator> <lit:literal type="number" pos:line="69" pos:column="40">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="70" pos:column="17">this</name><op:operator pos:line="70" pos:column="21">.</op:operator><name pos:line="70" pos:column="22">TimeStamp</name></name> <op:operator pos:line="70" pos:column="32">=</op:operator> <call><name><name pos:line="70" pos:column="34">long</name><op:operator pos:line="70" pos:column="38">.</op:operator><name pos:line="70" pos:column="39">Parse</name></name><argument_list pos:line="70" pos:column="44">(<argument><expr><name pos:line="70" pos:column="45">timepart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></constructor>

            <function><type><specifier pos:line="73" pos:column="13">public</specifier> <name pos:line="73" pos:column="20">bool</name></type> <name pos:line="73" pos:column="25">Equals</name><parameter_list pos:line="73" pos:column="31">(<param><decl><type><name pos:line="73" pos:column="32">InternalSearchHistoryItem</name></type> <name pos:line="73" pos:column="58">other</name></decl></param>)</parameter_list>
            <block pos:line="74" pos:column="13">{
                <return pos:line="75" pos:column="17">return <expr><call><name><name pos:line="75" pos:column="24">this</name><op:operator pos:line="75" pos:column="28">.</op:operator><name pos:line="75" pos:column="29">SearchString</name><op:operator pos:line="75" pos:column="41">.</op:operator><name pos:line="75" pos:column="42">Equals</name></name><argument_list pos:line="75" pos:column="48">(<argument><expr><name><name pos:line="75" pos:column="49">other</name><op:operator pos:line="75" pos:column="54">.</op:operator><name pos:line="75" pos:column="55">SearchString</name></name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>

            <function><type><specifier pos:line="78" pos:column="13">public</specifier> <specifier pos:line="78" pos:column="20">override</specifier> <name pos:line="78" pos:column="29">String</name></type> <name pos:line="78" pos:column="36">ToString</name><parameter_list pos:line="78" pos:column="44">()</parameter_list>
            <block pos:line="79" pos:column="13">{
                <return pos:line="80" pos:column="17">return <expr><name pos:line="80" pos:column="24">SearchString</name> <op:operator pos:line="80" pos:column="37">+</op:operator> <lit:literal type="string" pos:line="80" pos:column="39">" "</lit:literal> <op:operator pos:line="80" pos:column="43">+</op:operator> <name pos:line="80" pos:column="45">TimeStamp</name></expr>;</return>
            }</block></function>
        }</block></class>


        <function><type><specifier pos:line="85" pos:column="9">public</specifier> <name pos:line="85" pos:column="16">void</name></type> <name pos:line="85" pos:column="21">IssuedSearchString</name><parameter_list pos:line="85" pos:column="39">(<param><decl><type><name pos:line="85" pos:column="40">String</name></type> <name pos:line="85" pos:column="47">query</name></decl></param>)</parameter_list>
        <block pos:line="86" pos:column="9">{
            <lock pos:line="87" pos:column="13">lock (<expr><name pos:line="87" pos:column="19">locker</name></expr>)
            <block pos:line="88" pos:column="13">{
                <if pos:line="89" pos:column="17">if<condition pos:line="89" pos:column="19">(<expr><call><name><name pos:line="89" pos:column="20">String</name><op:operator pos:line="89" pos:column="26">.</op:operator><name pos:line="89" pos:column="27">IsNullOrWhiteSpace</name></name><argument_list pos:line="89" pos:column="45">(<argument><expr><name pos:line="89" pos:column="46">query</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="89" pos:column="53">
                    <return pos:line="90" pos:column="21">return;</return></then></if>
                <decl_stmt><decl><type><name pos:line="91" pos:column="17">var</name></type> <name pos:line="91" pos:column="21">time</name> <init pos:line="91" pos:column="26">= <expr><name><name pos:line="91" pos:column="28">DateTime</name><op:operator pos:line="91" pos:column="36">.</op:operator><name pos:line="91" pos:column="37">Now</name><op:operator pos:line="91" pos:column="40">.</op:operator><name pos:line="91" pos:column="41">Ticks</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="92" pos:column="17">var</name></type> <name pos:line="92" pos:column="21">item</name> <init pos:line="92" pos:column="26">= <expr><op:operator pos:line="92" pos:column="28">new</op:operator> <call><name pos:line="92" pos:column="32">InternalSearchHistoryItem</name><argument_list pos:line="92" pos:column="57">(<argument><expr><name pos:line="92" pos:column="58">query</name></expr></argument>, <argument><expr><name pos:line="92" pos:column="65">time</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
                <expr_stmt><expr><call><name><name pos:line="93" pos:column="17">allItems</name><op:operator pos:line="93" pos:column="25">.</op:operator><name pos:line="93" pos:column="26">Remove</name></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name pos:line="93" pos:column="33">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="94" pos:column="17">allItems</name><op:operator pos:line="94" pos:column="25">.</op:operator><name pos:line="94" pos:column="26">Add</name></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name pos:line="94" pos:column="30">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="95" pos:column="17">if<condition pos:line="95" pos:column="19">(<expr><name><name pos:line="95" pos:column="20">allItems</name><op:operator pos:line="95" pos:column="28">.</op:operator><name pos:line="95" pos:column="29">Count</name></name> <op:operator pos:line="95" pos:column="35">&gt;</op:operator> <name pos:line="95" pos:column="37">MAXIMUM_COUNT</name></expr>)</condition><then pos:line="95" pos:column="51"> 
                    <expr_stmt><expr><call><name><name pos:line="96" pos:column="21">allItems</name><op:operator pos:line="96" pos:column="29">.</op:operator><name pos:line="96" pos:column="30">RemoveAt</name></name><argument_list pos:line="96" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="96" pos:column="39">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="100" pos:column="9">public</specifier> <name pos:line="100" pos:column="16">ISearchHistoryItem</name><index pos:line="100" pos:column="34">[]</index></type> <name pos:line="100" pos:column="37">GetSearchHistoryItems</name><parameter_list pos:line="100" pos:column="58">(<param><decl><type><name><name pos:line="100" pos:column="59">Predicate</name><argument_list pos:line="100" pos:column="68">&lt;<argument><name pos:line="100" pos:column="69">ISearchHistoryItem</name></argument>&gt;</argument_list></name></type> <name pos:line="100" pos:column="89">selector</name></decl></param>)</parameter_list>
        <block pos:line="101" pos:column="9">{
            <lock pos:line="102" pos:column="13">lock (<expr><name pos:line="102" pos:column="19">locker</name></expr>)
            <block pos:line="103" pos:column="13">{
                <return pos:line="104" pos:column="17">return <expr><call><name><name pos:line="104" pos:column="24">allItems</name><op:operator pos:line="104" pos:column="32">.</op:operator><name pos:line="104" pos:column="33">Where</name></name><argument_list pos:line="104" pos:column="38">(<argument><expr><name><name pos:line="104" pos:column="39">selector</name><op:operator pos:line="104" pos:column="47">.</op:operator><name pos:line="104" pos:column="48">Invoke</name></name></expr></argument>)</argument_list></call><op:operator pos:line="104" pos:column="55">.</op:operator><call><name><name pos:line="104" pos:column="56">Cast</name><argument_list pos:line="104" pos:column="60">&lt;<argument><name pos:line="104" pos:column="61">ISearchHistoryItem</name></argument>&gt;</argument_list></name><argument_list pos:line="104" pos:column="80">()</argument_list></call><op:operator pos:line="104" pos:column="82">.</op:operator>
                    <call><name pos:line="105" pos:column="21">OrderByDescending</name><argument_list pos:line="105" pos:column="38">(<argument><expr><lambda><name pos:line="105" pos:column="39">item</name> <op:operator pos:line="105" pos:column="44">=&gt;</op:operator> <name><name pos:line="105" pos:column="47">item</name><op:operator pos:line="105" pos:column="51">.</op:operator><name pos:line="105" pos:column="52">TimeStamp</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="105" pos:column="62">.</op:operator><call><name pos:line="105" pos:column="63">ToArray</name><argument_list pos:line="105" pos:column="70">()</argument_list></call></expr>;</return>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="109" pos:column="9">public</specifier> <name pos:line="109" pos:column="16">void</name></type> <name pos:line="109" pos:column="21">ClearHistory</name><parameter_list pos:line="109" pos:column="33">()</parameter_list>
        <block pos:line="110" pos:column="9">{
            <lock pos:line="111" pos:column="13">lock (<expr><name pos:line="111" pos:column="19">locker</name></expr>)
            <block pos:line="112" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="113" pos:column="17">allItems</name><op:operator pos:line="113" pos:column="25">.</op:operator><name pos:line="113" pos:column="26">Clear</name></name><argument_list pos:line="113" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="117" pos:column="9">public</specifier> <name pos:line="117" pos:column="16">void</name></type> <name pos:line="117" pos:column="21">Dispose</name><parameter_list pos:line="117" pos:column="28">()</parameter_list>
        <block pos:line="118" pos:column="9">{
            <lock pos:line="119" pos:column="13">lock (<expr><name pos:line="119" pos:column="19">locker</name></expr>)
            <block pos:line="120" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="121" pos:column="17">TimedProcessor</name><op:operator pos:line="121" pos:column="31">.</op:operator><name pos:line="121" pos:column="32">GetInstance</name></name><argument_list pos:line="121" pos:column="43">()</argument_list></call><op:operator pos:line="121" pos:column="45">.</op:operator><call><name pos:line="121" pos:column="46">RemoveTimedTask</name><argument_list pos:line="121" pos:column="61">(<argument><expr><name pos:line="121" pos:column="62">WriteToFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="122" pos:column="17">WriteToFile</name><argument_list pos:line="122" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="123" pos:column="17">allItems</name><op:operator pos:line="123" pos:column="25">.</op:operator><name pos:line="123" pos:column="26">Clear</name></name><argument_list pos:line="123" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="124" pos:column="17">this</name><op:operator pos:line="124" pos:column="21">.</op:operator><name pos:line="124" pos:column="22">directory</name></name> <op:operator pos:line="124" pos:column="32">=</op:operator> <name pos:line="124" pos:column="34">null</name></expr>;</expr_stmt>
            }</block></lock>
        }</block></function>

        <function><type><specifier pos:line="128" pos:column="9">private</specifier> <name pos:line="128" pos:column="17">void</name></type> <name pos:line="128" pos:column="22">WriteToFile</name><parameter_list pos:line="128" pos:column="33">()</parameter_list>
        <block pos:line="129" pos:column="9">{
            <lock pos:line="130" pos:column="13">lock (<expr><name pos:line="130" pos:column="19">locker</name></expr>)
            <block pos:line="131" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="132" pos:column="17">String</name><index pos:line="132" pos:column="23">[]</index></type> <name pos:line="132" pos:column="26">lines</name> <init pos:line="132" pos:column="32">= <expr><call><name><name pos:line="132" pos:column="34">allItems</name><op:operator pos:line="132" pos:column="42">.</op:operator><name pos:line="132" pos:column="43">Select</name></name><argument_list pos:line="132" pos:column="49">(<argument><expr><lambda><name pos:line="132" pos:column="50">item</name> <op:operator pos:line="132" pos:column="55">=&gt;</op:operator> <call><name><name pos:line="132" pos:column="58">item</name><op:operator pos:line="132" pos:column="62">.</op:operator><name pos:line="132" pos:column="63">ToString</name></name><argument_list pos:line="132" pos:column="71">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="132" pos:column="74">.</op:operator><call><name pos:line="132" pos:column="75">ToArray</name><argument_list pos:line="132" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="133" pos:column="17">File</name><op:operator pos:line="133" pos:column="21">.</op:operator><name pos:line="133" pos:column="22">WriteAllLines</name></name><argument_list pos:line="133" pos:column="35">(<argument><expr><call><name pos:line="133" pos:column="36">GetFilePath</name><argument_list pos:line="133" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="133" pos:column="51">lines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></lock>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
