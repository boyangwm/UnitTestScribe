<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Indexer\Indexer.UnitTests\Metrics\QueryMetricsTest.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">NUnit</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">Framework</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Sando</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">Indexer</name><op:operator pos:line="2" pos:column="20">.</op:operator><name pos:line="2" pos:column="21">Searching</name><op:operator pos:line="2" pos:column="30">.</op:operator><name pos:line="2" pos:column="31">Metrics</name></name>;</using>
<using pos:line="3" pos:column="1">using <name pos:line="3" pos:column="7">System</name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Collections</name><op:operator pos:line="4" pos:column="25">.</op:operator><name pos:line="4" pos:column="26">Generic</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Linq</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Text</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Sando</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">Indexer</name><op:operator pos:line="8" pos:column="24">.</op:operator><name pos:line="8" pos:column="25">UnitTests</name></name>
<block pos:line="9" pos:column="1">{
    <class><attribute pos:line="10" pos:column="5">[<expr><name pos:line="10" pos:column="6">TestFixture</name></expr>]</attribute>
    <specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">QueryMetricsTest</name>
    <block pos:line="12" pos:column="5">{
        <function><type><attribute pos:line="13" pos:column="9">[<expr><name pos:line="13" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">void</name></type> <name pos:line="14" pos:column="21">QueryMetrics_QueryTypeTest</name><parameter_list pos:line="14" pos:column="47">()</parameter_list>
        <block pos:line="15" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">Assert</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">AreEqual</name></name><argument_list pos:line="16" pos:column="28">(<argument><expr><call><name><name pos:line="16" pos:column="29">QueryMetrics</name><op:operator pos:line="16" pos:column="41">.</op:operator><name pos:line="16" pos:column="42">ExamineQuery</name></name><argument_list pos:line="16" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="16" pos:column="55">"a b"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="16" pos:column="61">.</op:operator><call><name pos:line="16" pos:column="62">ToString</name><argument_list pos:line="16" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="16" pos:column="74">"Plain,Plain"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">Assert</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">AreEqual</name></name><argument_list pos:line="17" pos:column="28">(<argument><expr><call><name><name pos:line="17" pos:column="29">QueryMetrics</name><op:operator pos:line="17" pos:column="41">.</op:operator><name pos:line="17" pos:column="42">ExamineQuery</name></name><argument_list pos:line="17" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="55">"\"a b c\""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="67">.</op:operator><call><name pos:line="17" pos:column="68">ToString</name><argument_list pos:line="17" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="17" pos:column="80">"Quoted,Quoted,Quoted"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">Assert</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">AreEqual</name></name><argument_list pos:line="18" pos:column="28">(<argument><expr><call><name><name pos:line="18" pos:column="29">QueryMetrics</name><op:operator pos:line="18" pos:column="41">.</op:operator><name pos:line="18" pos:column="42">ExamineQuery</name></name><argument_list pos:line="18" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="18" pos:column="55">"a_aAa b"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="65">.</op:operator><call><name pos:line="18" pos:column="66">ToString</name><argument_list pos:line="18" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="18" pos:column="78">"CamelcaseUnderscore,Plain"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">Assert</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">AreEqual</name></name><argument_list pos:line="19" pos:column="28">(<argument><expr><call><name><name pos:line="19" pos:column="29">QueryMetrics</name><op:operator pos:line="19" pos:column="41">.</op:operator><name pos:line="19" pos:column="42">ExamineQuery</name></name><argument_list pos:line="19" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="55">"\" a\" bBb"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="19" pos:column="68">.</op:operator><call><name pos:line="19" pos:column="69">ToString</name><argument_list pos:line="19" pos:column="77">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="19" pos:column="81">"Quoted,Camelcase"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">Assert</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">AreEqual</name></name><argument_list pos:line="20" pos:column="28">(<argument><expr><call><name><name pos:line="20" pos:column="29">QueryMetrics</name><op:operator pos:line="20" pos:column="41">.</op:operator><name pos:line="20" pos:column="42">ExamineQuery</name></name><argument_list pos:line="20" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="55">"a\" \"b"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="65">.</op:operator><call><name pos:line="20" pos:column="66">ToString</name><argument_list pos:line="20" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="20" pos:column="78">"Plain,Plain"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">Assert</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">AreEqual</name></name><argument_list pos:line="21" pos:column="28">(<argument><expr><call><name><name pos:line="21" pos:column="29">QueryMetrics</name><op:operator pos:line="21" pos:column="41">.</op:operator><name pos:line="21" pos:column="42">ExamineQuery</name></name><argument_list pos:line="21" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="55">"a\" B_b_b_B \"c"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="73">.</op:operator><call><name pos:line="21" pos:column="74">ToString</name><argument_list pos:line="21" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="21" pos:column="86">"Plain,QuotedUnderscore,Plain"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="22" pos:column="25">Assert</name><op:operator pos:line="22" pos:column="31">.</op:operator><name pos:line="22" pos:column="32">AreEqual</name></name><argument_list pos:line="22" pos:column="40">(<argument><expr><call><name><name pos:line="22" pos:column="41">QueryMetrics</name><op:operator pos:line="22" pos:column="53">.</op:operator><name pos:line="22" pos:column="54">ExamineQuery</name></name><argument_list pos:line="22" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="67">"\"a\" BBB_b"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="81">.</op:operator><call><name pos:line="22" pos:column="82">ToString</name><argument_list pos:line="22" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="22" pos:column="94">"Quoted,AcronymUnderscore"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="23" pos:column="25">Assert</name><op:operator pos:line="23" pos:column="31">.</op:operator><name pos:line="23" pos:column="32">AreEqual</name></name><argument_list pos:line="23" pos:column="40">(<argument><expr><call><name><name pos:line="23" pos:column="41">QueryMetrics</name><op:operator pos:line="23" pos:column="53">.</op:operator><name pos:line="23" pos:column="54">ExamineQuery</name></name><argument_list pos:line="23" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="67">"-Abb aAAAc"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="80">.</op:operator><call><name pos:line="23" pos:column="81">ToString</name><argument_list pos:line="23" pos:column="89">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="23" pos:column="93">"MinusCamelcase,CamelcaseAcronym"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="26" pos:column="9">[<expr><name pos:line="26" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="27" pos:column="9">public</specifier> <name pos:line="27" pos:column="16">void</name></type> <name pos:line="27" pos:column="21">QueryMetrics_DiceCoefficientTest</name><parameter_list pos:line="27" pos:column="53">()</parameter_list>
        <block pos:line="28" pos:column="9">{           
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">Assert</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">IsTrue</name></name><argument_list pos:line="29" pos:column="26">(<argument><expr><call><name><name pos:line="29" pos:column="27">QueryMetrics</name><op:operator pos:line="29" pos:column="39">.</op:operator><name pos:line="29" pos:column="40">DiceCoefficient</name></name><argument_list pos:line="29" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="56">"a b"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="29" pos:column="62">"b c"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="29" pos:column="69">-</op:operator> <lit:literal type="number" pos:line="29" pos:column="71">0.50</lit:literal> <op:operator pos:line="29" pos:column="76">&lt;</op:operator> <lit:literal type="number" pos:line="29" pos:column="78">0.001</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">IsTrue</name></name><argument_list pos:line="30" pos:column="26">(<argument><expr><call><name><name pos:line="30" pos:column="27">QueryMetrics</name><op:operator pos:line="30" pos:column="39">.</op:operator><name pos:line="30" pos:column="40">DiceCoefficient</name></name><argument_list pos:line="30" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="56">"a b c d e f g h"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="30" pos:column="75">"a b c d e f g"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="30" pos:column="92">-</op:operator> <lit:literal type="number" pos:line="30" pos:column="94">0.933</lit:literal> <op:operator pos:line="30" pos:column="100">&lt;</op:operator> <lit:literal type="number" pos:line="30" pos:column="102">0.001</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">IsTrue</name></name><argument_list pos:line="31" pos:column="26">(<argument><expr><call><name><name pos:line="31" pos:column="27">QueryMetrics</name><op:operator pos:line="31" pos:column="39">.</op:operator><name pos:line="31" pos:column="40">DiceCoefficient</name></name><argument_list pos:line="31" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="56">"\"a\" BBB_b"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="31" pos:column="71">"BB BBB BBB_b"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="31" pos:column="87">-</op:operator> <lit:literal type="number" pos:line="31" pos:column="89">0.40</lit:literal> <op:operator pos:line="31" pos:column="94">&lt;</op:operator> <lit:literal type="number" pos:line="31" pos:column="96">0.001</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">IsTrue</name></name><argument_list pos:line="32" pos:column="26">(<argument><expr><call><name><name pos:line="32" pos:column="27">QueryMetrics</name><op:operator pos:line="32" pos:column="39">.</op:operator><name pos:line="32" pos:column="40">DiceCoefficient</name></name><argument_list pos:line="32" pos:column="55">(<argument><expr><name><name pos:line="32" pos:column="56">String</name><op:operator pos:line="32" pos:column="62">.</op:operator><name pos:line="32" pos:column="63">Empty</name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="70">String</name><op:operator pos:line="32" pos:column="76">.</op:operator><name pos:line="32" pos:column="77">Empty</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="32" pos:column="84">==</op:operator> <lit:literal type="number" pos:line="32" pos:column="87">0.0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
