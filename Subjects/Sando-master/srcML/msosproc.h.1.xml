<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\office10\msosproc.h" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*------------------------------------------------------------------------*
 * msosproc.h (prevously known as sdmproc.h): SDM PUBLIC include file     *
 *  -- SDM function prototypes.                                           *
 *                                                                        *
 * Please do not modify or check in this file without contacting MsoSdmQs.*
 *------------------------------------------------------------------------*/</comment>

<cpp:pragma pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:ifndef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifndef</cpp:directive> <name pos:line="9" pos:column="9">NO_SDM</name></cpp:ifndef>

<comment type="line" pos:line="11" pos:column="1">//============================</comment>
<comment type="line" pos:line="12" pos:column="1">// who's not defined?</comment>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef</cpp:directive> <name pos:line="13" pos:column="8">IME_OLD</name></cpp:ifdef>
<cpp:error pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">error</cpp:directive></cpp:error>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef</cpp:directive> <name pos:line="16" pos:column="8">BACKGROUND_PATTERN</name></cpp:ifdef>
<cpp:error pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">error</cpp:directive></cpp:error>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef</cpp:directive> <name pos:line="19" pos:column="8">IME32</name></cpp:ifdef>
<comment type="line" pos:line="20" pos:column="1">// REVIEW KirkG: This is not defined for Mso.  It is defined for Word</comment>
<comment type="line" pos:line="21" pos:column="1">//  (in word.h), but I don't think anything in Word's build uses it.</comment>
<comment type="line" pos:line="22" pos:column="1">//#error</comment>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef</cpp:directive> <name pos:line="24" pos:column="8">DBCS</name></cpp:ifdef>
<comment type="line" pos:line="25" pos:column="1">// REVIEW KirkG: This is not defined for Mso.  It is defined for Word</comment>
<comment type="line" pos:line="26" pos:column="1">//  (in word.h), but I don't think anything in Word's build uses it.</comment>
<comment type="line" pos:line="27" pos:column="1">//#error</comment>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef</cpp:directive> <name pos:line="29" pos:column="8">EXTCHAR</name></cpp:ifdef>
<comment type="line" pos:line="30" pos:column="1">// REVIEW KirkG: This is not defined for Mso.  It is defined for Word</comment>
<comment type="line" pos:line="31" pos:column="1">//  (in word.h), but I don't think anything in Word's build uses it.</comment>
<comment type="line" pos:line="32" pos:column="1">//#error</comment>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif</cpp:directive></cpp:endif>
<comment type="line" pos:line="34" pos:column="1">//============================</comment>

<typedef pos:line="36" pos:column="1">typedef <function_decl><type><name pos:line="36" pos:column="9">int</name></type> (<type:modifier pos:line="36" pos:column="14">*</type:modifier><name pos:line="36" pos:column="15">MSO_PFN</name>)<parameter_list pos:line="36" pos:column="23">()</parameter_list>;</function_decl></typedef> <comment type="line" pos:line="36" pos:column="27">// Pointer to function</comment>
 
<comment type="line" format="doxygen" pos:line="38" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="39" pos:column="1">// Common calls.</comment>

<comment type="line" pos:line="41" pos:column="1">// Initialization and main control.</comment>

<macro><name pos:line="43" pos:column="1">MSOAPI_</name><argument_list pos:line="43" pos:column="8">(<argument pos:line="43" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="43" pos:column="25">FValidTmc</name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="43" pos:column="41">//new 96: executes for ship and debug versions</comment>

<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef</cpp:directive>	<name pos:line="45" pos:column="9">VSMSODEBUG</name></cpp:ifdef>
<macro><name pos:line="46" pos:column="1">MSOAPIX_</name><argument_list pos:line="46" pos:column="9">(<argument pos:line="46" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="46" pos:column="17">EnableReports</name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">else</cpp:directive></cpp:else>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive>			<cpp:macro><name pos:line="48" pos:column="25">EnableReports</name><parameter_list pos:line="48" pos:column="38">(<param><type><name pos:line="48" pos:column="39">f</name></type></param>)</parameter_list></cpp:macro></cpp:define>	
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif</cpp:directive></cpp:endif>

<macro><name pos:line="51" pos:column="1">MSOAPI_</name><argument_list pos:line="51" pos:column="8">(<argument pos:line="51" pos:column="9">FTME</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="51" pos:column="17">FtmeIsSdmMessage</name><argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">LPMSG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="53" pos:column="1">MSOAPI_</name><argument_list pos:line="53" pos:column="8">(<argument pos:line="53" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="53" pos:column="17">ChangeColors</name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="54" pos:column="1">MSOAPIX_</name><argument_list pos:line="54" pos:column="9">(<argument pos:line="54" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="54" pos:column="17">SetDlgColor</name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">HDLG</name></expr></argument>, <argument><expr><name pos:line="54" pos:column="35">DWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="55" pos:column="1">MSOAPIX_</name><argument_list pos:line="55" pos:column="9">(<argument pos:line="55" pos:column="10">DWORD</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="55" pos:column="17">ClrGetDlgColor</name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="57" pos:column="1">MSOAPI_</name><argument_list pos:line="57" pos:column="8">(<argument pos:line="57" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="57" pos:column="25">FInitSdm</name><argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">SDI</name> <op:operator pos:line="57" pos:column="38">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="58" pos:column="1">MSOAPI_</name><argument_list pos:line="58" pos:column="8">(<argument pos:line="58" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="58" pos:column="17">EndSdm</name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="59" pos:column="1">MSOAPI_</name><argument_list pos:line="59" pos:column="8">(<argument pos:line="59" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="59" pos:column="15">MsoFSetHMsoinstOfSdm</name><argument_list pos:line="59" pos:column="35">(<argument pos:line="59" pos:column="36">HMSOINST hinst</argument>)</argument_list></macro><empty_stmt pos:line="59" pos:column="51">;</empty_stmt>
<macro><name pos:line="60" pos:column="1">MSOAPI_</name><argument_list pos:line="60" pos:column="8">(<argument pos:line="60" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="60" pos:column="15">MsoFSetSdmNoModalComponent</name><argument_list pos:line="60" pos:column="41">(<argument pos:line="60" pos:column="42">BOOL fNoModalComp</argument>)</argument_list></macro><empty_stmt pos:line="60" pos:column="60">;</empty_stmt>
<macro><name pos:line="61" pos:column="1">MSOAPI_</name><argument_list pos:line="61" pos:column="8">(<argument pos:line="61" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="61" pos:column="15">MsoFSetSdmDontShowInvisibleWindow</name><argument_list pos:line="61" pos:column="48">(<argument pos:line="61" pos:column="49">BOOL fDontShow</argument>)</argument_list></macro><empty_stmt pos:line="61" pos:column="64">;</empty_stmt>
<macro><name pos:line="62" pos:column="1">MSOAPI_</name><argument_list pos:line="62" pos:column="8">(<argument pos:line="62" pos:column="9">HMSOINST</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="62" pos:column="19">HMsoinstGetFromSdm</name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="63" pos:column="1">MSOAPI_</name><argument_list pos:line="63" pos:column="8">(<argument pos:line="63" pos:column="9">void</argument>)</argument_list></macro>	<macro><name pos:line="63" pos:column="17">MsoSetBidiRtlSdm</name><argument_list pos:line="63" pos:column="33">(<argument pos:line="63" pos:column="34">BOOL fRTL</argument>)</argument_list></macro><empty_stmt pos:line="63" pos:column="44">;</empty_stmt>	

<comment type="line" pos:line="65" pos:column="1">// Help Support.</comment>
<macro><name pos:line="66" pos:column="1">MSOAPI_</name><argument_list pos:line="66" pos:column="8">(<argument pos:line="66" pos:column="9">DWORD</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="66" pos:column="17">ContextPosOfDlg</name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="67" pos:column="1">MSOAPIXX_</name><argument_list pos:line="67" pos:column="10">(<argument pos:line="67" pos:column="11">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="67" pos:column="25">ContextHidOfDlg</name><argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="68" pos:column="1">MSOAPI_</name><argument_list pos:line="68" pos:column="8">(<argument pos:line="68" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="68" pos:column="25">HidOfDlg</name><argument_list pos:line="68" pos:column="33">(<argument><expr><name pos:line="68" pos:column="34">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="69" pos:column="1">MSOAPIX_</name><argument_list pos:line="69" pos:column="9">(<argument pos:line="69" pos:column="10">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="69" pos:column="25">BaseHidOfDlg</name><argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="70" pos:column="1">MSOAPI_</name><argument_list pos:line="70" pos:column="8">(<argument pos:line="70" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="70" pos:column="25">FSetDlgHid</name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">HDLG</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="71" pos:column="1">MSOAPI_</name><argument_list pos:line="71" pos:column="8">(<argument pos:line="71" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="71" pos:column="25">FIsOfficeDlg</name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="73" pos:column="1">// CAB Control.</comment>
<macro><name pos:line="74" pos:column="1">MSOAPI_</name><argument_list pos:line="74" pos:column="8">(<argument pos:line="74" pos:column="9">HCAB</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="74" pos:column="17">HcabAlloc</name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="37">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="75" pos:column="1">MSOAPI_</name><argument_list pos:line="75" pos:column="8">(<argument pos:line="75" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="75" pos:column="17">InitCab</name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">HCAB</name></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="76" pos:column="1">MSOAPI_</name><argument_list pos:line="76" pos:column="8">(<argument pos:line="76" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="76" pos:column="17">InitCabWords</name><argument_list pos:line="76" pos:column="29">(<argument><expr><name pos:line="76" pos:column="30">HCAB</name></expr></argument>, <argument><expr><name pos:line="76" pos:column="36">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="77" pos:column="1">MSOAPI_</name><argument_list pos:line="77" pos:column="8">(<argument pos:line="77" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="77" pos:column="17">FreeCab</name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">HCAB</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="31">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="78" pos:column="1">MSOAPI_</name><argument_list pos:line="78" pos:column="8">(<argument pos:line="78" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="78" pos:column="17">MsoFreeCabData</name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">HCAB</name></expr></argument>, <argument><expr><name pos:line="78" pos:column="38">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name pos:line="80" pos:column="1">__inline</name> <name pos:line="80" pos:column="10">PCAB</name></type> <name pos:line="80" pos:column="15">PcabLockCab</name><parameter_list pos:line="80" pos:column="26">(<param><decl><type><name pos:line="80" pos:column="27">HCAB</name></type> <name pos:line="80" pos:column="32">hcab</name></decl></param>, <param><decl><type><name pos:line="80" pos:column="38">SB_SDM</name></type> <name pos:line="80" pos:column="45">sb</name></decl></param>)</parameter_list> <block pos:line="80" pos:column="49">{ <return pos:line="80" pos:column="51">return <expr><op:operator pos:line="80" pos:column="58">(</op:operator><op:operator pos:line="80" pos:column="59">*</op:operator><op:operator pos:line="80" pos:column="60">(</op:operator><name pos:line="80" pos:column="61">hcab</name><op:operator pos:line="80" pos:column="65">)</op:operator><op:operator pos:line="80" pos:column="66">)</op:operator></expr>;</return> }</block></function>
<cpp:define pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="81" pos:column="9">UnlockCab</name><parameter_list pos:line="81" pos:column="18">(<param><type><name pos:line="81" pos:column="19">hcab</name></type></param>, <param><type><name pos:line="81" pos:column="25">sb</name></type></param>)</parameter_list></cpp:macro></cpp:define>

<cpp:ifdef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifdef</cpp:directive> <name pos:line="83" pos:column="8">VSMSODEBUG</name></cpp:ifdef>
<comment type="line" pos:line="84" pos:column="1">// Use this one to mark dynamically allocated CAB's (most apps)</comment>
<macro><name pos:line="85" pos:column="1">MSOAPIXX_</name><argument_list pos:line="85" pos:column="10">(<argument pos:line="85" pos:column="11">BOOL_SDM</argument>)</argument_list></macro> <macro><name pos:line="85" pos:column="21">MsoFWriteCabBe</name><argument_list pos:line="85" pos:column="35">(<argument pos:line="85" pos:column="36">HCAB hcab</argument>, <argument pos:line="85" pos:column="47">LPARAM lParam</argument>)</argument_list></macro><empty_stmt pos:line="85" pos:column="61">;</empty_stmt>
<comment type="line" pos:line="86" pos:column="1">// Use this one to mark statically allocated CAB's (special case)</comment>
<macro><name pos:line="87" pos:column="1">MSOAPIXX_</name><argument_list pos:line="87" pos:column="10">(<argument pos:line="87" pos:column="11">BOOL_SDM</argument>)</argument_list></macro> <macro><name pos:line="87" pos:column="21">MsoFWriteCabHandlesBe</name><argument_list pos:line="87" pos:column="42">(<argument pos:line="87" pos:column="43">HCAB hcab</argument>, <argument pos:line="87" pos:column="54">LPARAM lParam</argument>)</argument_list></macro><empty_stmt pos:line="87" pos:column="68">;</empty_stmt>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif</cpp:directive></cpp:endif>
<macro><name pos:line="89" pos:column="1">MSOAPI_</name><argument_list pos:line="89" pos:column="8">(<argument pos:line="89" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="89" pos:column="25">FSetCabWt</name><argument_list pos:line="89" pos:column="34">(<argument><expr><name pos:line="89" pos:column="35">HCAB</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="41">CONST_WTZ_CAB</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="56">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="66">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="90" pos:column="1">MSOAPI_</name><argument_list pos:line="90" pos:column="8">(<argument pos:line="90" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="90" pos:column="17">GetCabWtz</name><argument_list pos:line="90" pos:column="26">(<argument><expr><name pos:line="90" pos:column="27">HCAB</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="33">WTZ_CAB</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="42">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="52">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="91" pos:column="1">MSOAPI_</name><argument_list pos:line="91" pos:column="8">(<argument pos:line="91" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="91" pos:column="25">FSetCabWz</name><argument_list pos:line="91" pos:column="34">(<argument><expr><name pos:line="91" pos:column="35">HCAB</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="41">CONST_WZ_CAB</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="55">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="65">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="92" pos:column="1">MSOAPI_</name><argument_list pos:line="92" pos:column="8">(<argument pos:line="92" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="92" pos:column="25">CchOfCabWz</name><argument_list pos:line="92" pos:column="35">(<argument><expr><name pos:line="92" pos:column="36">HCAB</name></expr></argument>, <argument><expr><name pos:line="92" pos:column="42">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="93" pos:column="1">MSOAPI_</name><argument_list pos:line="93" pos:column="8">(<argument pos:line="93" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="93" pos:column="17">GetCabWz</name><argument_list pos:line="93" pos:column="25">(<argument><expr><name pos:line="93" pos:column="26">HCAB</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="32">WZ_CAB</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="40">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="94" pos:column="1">MSOAPI_</name><argument_list pos:line="94" pos:column="8">(<argument pos:line="94" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="94" pos:column="25">FSetCabRgb</name><argument_list pos:line="94" pos:column="35">(<argument><expr><name pos:line="94" pos:column="36">HCAB</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">CONST_RGB_CAB</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="57">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="67">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="77">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="95" pos:column="1">MSOAPI_</name><argument_list pos:line="95" pos:column="8">(<argument pos:line="95" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="95" pos:column="17">GetCabWt</name><argument_list pos:line="95" pos:column="25">(<argument><expr><name pos:line="95" pos:column="26">HCAB</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="32">WTZ_CAB</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="41">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="51">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="96" pos:column="1">MSOAPI_</name><argument_list pos:line="96" pos:column="8">(<argument pos:line="96" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="96" pos:column="25">GetCabRgb</name><argument_list pos:line="96" pos:column="34">(<argument><expr><name pos:line="96" pos:column="35">HCAB</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="41">RGB_CAB</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="50">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="60">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="70">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:define pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="97" pos:column="9">FGetCabRgb</name></cpp:macro> <cpp:value pos:line="97" pos:column="20">GetCabRgb</cpp:value></cpp:define>

<macro><name pos:line="99" pos:column="1">MSOAPI_</name><argument_list pos:line="99" pos:column="8">(<argument pos:line="99" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="99" pos:column="19">MsoFSetCabHandleWt</name><argument_list pos:line="99" pos:column="37">(<argument><expr><name pos:line="99" pos:column="38">PCABH</name></expr></argument>, <argument><expr><name pos:line="99" pos:column="45">CONST_WTZ_CAB</name></expr></argument>, <argument><expr><name pos:line="99" pos:column="60">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="100" pos:column="1">MSOAPI_</name><argument_list pos:line="100" pos:column="8">(<argument pos:line="100" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="100" pos:column="19">MsoFSetCabHandleWz</name><argument_list pos:line="100" pos:column="37">(<argument><expr><name pos:line="100" pos:column="38">PCABH</name></expr></argument>, <argument><expr><name pos:line="100" pos:column="45">CONST_WZ_CAB</name></expr></argument>, <argument><expr><name pos:line="100" pos:column="59">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="101" pos:column="1">MSOAPI_</name><argument_list pos:line="101" pos:column="8">(<argument pos:line="101" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="101" pos:column="19">MsoFSetCabHandleRgb</name><argument_list pos:line="101" pos:column="38">(<argument><expr><name pos:line="101" pos:column="39">PCABH</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="46">CONST_RGB_CAB</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="61">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="71">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="102" pos:column="1">MSOAPI_</name><argument_list pos:line="102" pos:column="8">(<argument pos:line="102" pos:column="9">VOID</argument>)</argument_list></macro>	  <expr_stmt><expr><call><name pos:line="102" pos:column="19">MsoGetCabHandleWtz</name><argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">PCABH</name></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">WTZ_CAB</name></expr></argument>, <argument><expr><name pos:line="102" pos:column="54">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="103" pos:column="1">MSOAPI_</name><argument_list pos:line="103" pos:column="8">(<argument pos:line="103" pos:column="9">VOID</argument>)</argument_list></macro>	  <expr_stmt><expr><call><name pos:line="103" pos:column="19">MsoGetCabHandleWz</name><argument_list pos:line="103" pos:column="36">(<argument><expr><name pos:line="103" pos:column="37">PCABH</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="44">WZ_CAB</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="52">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="104" pos:column="1">MSOAPI_</name><argument_list pos:line="104" pos:column="8">(<argument pos:line="104" pos:column="9">VOID</argument>)</argument_list></macro>	  <expr_stmt><expr><call><name pos:line="104" pos:column="19">MsoGetCabHandleWt</name><argument_list pos:line="104" pos:column="36">(<argument><expr><name pos:line="104" pos:column="37">PCABH</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="44">WT_CAB</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="52">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="105" pos:column="1">MSOAPI_</name><argument_list pos:line="105" pos:column="8">(<argument pos:line="105" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="105" pos:column="19">MsoFGetCabHandleRgb</name><argument_list pos:line="105" pos:column="38">(<argument><expr><name pos:line="105" pos:column="39">PCABH</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="46">RGB_CAB</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="55">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="65">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="107" pos:column="1">// Generic Dialog Control</comment>
<macro><name pos:line="108" pos:column="1">MSOAPI_</name><argument_list pos:line="108" pos:column="8">(<argument pos:line="108" pos:column="9">void</argument>)</argument_list></macro> 	<expr_stmt><expr><call><name pos:line="108" pos:column="17">MsoInitDli</name><argument_list pos:line="108" pos:column="27">(<argument><expr><name pos:line="108" pos:column="28">DLI</name> <op:operator pos:line="108" pos:column="32">*</op:operator></expr></argument>, <argument><expr><name pos:line="108" pos:column="35">HWND</name></expr></argument>, <argument><expr><name pos:line="108" pos:column="41">FDLG</name></expr></argument>, <argument><expr><name pos:line="108" pos:column="47">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="109" pos:column="1">MSOAPI_</name><argument_list pos:line="109" pos:column="8">(<argument pos:line="109" pos:column="9">short</argument>)</argument_list></macro> 	<expr_stmt><expr><call><name pos:line="109" pos:column="17">MsoCbOfDlt</name><argument_list pos:line="109" pos:column="27">(<argument><expr><name pos:line="109" pos:column="28">long</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="34">HINSTANCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="110" pos:column="1">MSOAPI_</name><argument_list pos:line="110" pos:column="8">(<argument pos:line="110" pos:column="9">BOOL</argument>)</argument_list></macro> 	<expr_stmt><expr><call><name pos:line="110" pos:column="17">MsoFBltDlt</name><argument_list pos:line="110" pos:column="27">(<argument><expr><name pos:line="110" pos:column="28">long</name></expr></argument>, <argument><expr><name pos:line="110" pos:column="34">void</name> <op:operator pos:line="110" pos:column="39">*</op:operator></expr></argument>, <argument><expr><name pos:line="110" pos:column="42">HINSTANCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="111" pos:column="1">MSOAPI_</name><argument_list pos:line="111" pos:column="8">(<argument pos:line="111" pos:column="9">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="111" pos:column="17">MsoTmcStartDlt</name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">long</name></expr></argument>, <argument><expr><name pos:line="111" pos:column="38">HCAB</name></expr></argument>, <argument><expr><name pos:line="111" pos:column="44">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="111" pos:column="54">FDLG</name></expr></argument>, <argument><expr><name pos:line="111" pos:column="60">HWND</name></expr></argument>, <argument><expr><name pos:line="111" pos:column="66">HINSTANCE</name></expr></argument>, <argument><expr pos:line="111" pos:column="77">const <name pos:line="111" pos:column="83">MSO_PFN</name> <op:operator pos:line="111" pos:column="91">*</op:operator></expr></argument>, <argument><expr><name pos:line="111" pos:column="94">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:line="112" pos:column="1">//OAPI_(void) 	MsoStartModelessDlt(long, HCAB, UINT_SDM, FDLG, HWND, MLDComp *, HINSTANCE, PFN*, UINT_SDM);</comment>
<macro><name pos:line="113" pos:column="1">MSOAPI_</name><argument_list pos:line="113" pos:column="8">(<argument pos:line="113" pos:column="9">void</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="113" pos:column="17">MsoFixDltPfns</name><argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">void</name> <op:operator pos:line="113" pos:column="36">*</op:operator></expr></argument>, <argument><expr pos:line="113" pos:column="39">const <name pos:line="113" pos:column="45">MSO_PFN</name> <op:operator pos:line="113" pos:column="53">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="114" pos:column="1">MSOAPI_</name><argument_list pos:line="114" pos:column="8">(<argument pos:line="114" pos:column="9">void</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="114" pos:column="17">MsoConvertRecToRc</name><argument_list pos:line="114" pos:column="34">(<argument><expr><name pos:line="114" pos:column="35">REC</name> <op:operator pos:line="114" pos:column="39">*</op:operator></expr></argument>, <argument><expr><name pos:line="114" pos:column="42">RECT</name> <op:operator pos:line="114" pos:column="47">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="115" pos:column="1">MSOAPIX_</name><argument_list pos:line="115" pos:column="9">(<argument pos:line="115" pos:column="10">BOOL</argument>)</argument_list></macro> 	<macro><name pos:line="115" pos:column="17">MsoFSetupDlgResizing</name><argument_list pos:line="115" pos:column="37">(<argument pos:line="115" pos:column="38">long dlt</argument>, <argument pos:line="115" pos:column="48">XY_SDM dx</argument>, <argument pos:line="115" pos:column="59">XY_SDM dy</argument>, <argument pos:line="115" pos:column="70">PFN_RESIZE pfnResize</argument>, <argument pos:line="115" pos:column="92">HINSTANCE hinst</argument>)</argument_list></macro><empty_stmt pos:line="115" pos:column="108">;</empty_stmt>
<macro><name pos:line="116" pos:column="1">MSOAPI_</name><argument_list pos:line="116" pos:column="8">(<argument pos:line="116" pos:column="9">BOOL</argument>)</argument_list></macro>   <macro><name pos:line="116" pos:column="17">MsoFSetupDalResizing</name><argument_list pos:line="116" pos:column="37">(<argument pos:line="116" pos:column="38">XY_SDM dx</argument>, <argument pos:line="116" pos:column="49">XY_SDM dy</argument>, <argument pos:line="116" pos:column="60">BOOL fResizeBorder</argument>)</argument_list></macro><empty_stmt pos:line="116" pos:column="79">;</empty_stmt>
<macro><name pos:line="117" pos:column="1">MSOAPI_</name><argument_list pos:line="117" pos:column="8">(<argument pos:line="117" pos:column="9">BOOL</argument>)</argument_list></macro>   <expr_stmt><expr><call><name pos:line="117" pos:column="17">MsoFResetDalResizing</name><argument_list pos:line="117" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="118" pos:column="1">MSOAPI_</name><argument_list pos:line="118" pos:column="8">(<argument pos:line="118" pos:column="9">BOOL</argument>)</argument_list></macro>   <macro><name pos:line="118" pos:column="17">MsoFFixResizedRect</name><argument_list pos:line="118" pos:column="35">(<argument pos:line="118" pos:column="36">HWND hwnd</argument>, <argument pos:line="118" pos:column="47">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="118" pos:column="55">;</empty_stmt> <comment type="line" pos:line="118" pos:column="57">// Resizes an SDM picture's</comment>
                                                        <comment type="line" pos:line="119" pos:column="57">// window if necessary.  This</comment>
                                                        <comment type="line" pos:line="120" pos:column="57">// should be called on tmmPaint</comment>
                                                        <comment type="line" pos:line="121" pos:column="57">// messages.</comment>
<macro><name pos:line="122" pos:column="1">MSOAPI_</name><argument_list pos:line="122" pos:column="8">(<argument pos:line="122" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="122" pos:column="15">MsoFFixResizedIndentedRect</name><argument_list pos:line="122" pos:column="41">(<argument pos:line="122" pos:column="42">HWND hwnd</argument>, <argument pos:line="122" pos:column="53">TMC tmc</argument>, <argument pos:line="122" pos:column="62">RECT rectIndents</argument>)</argument_list></macro><empty_stmt pos:line="122" pos:column="79">;</empty_stmt>

<macro><name pos:line="124" pos:column="1">MSOAPI_</name><argument_list pos:line="124" pos:column="8">(<argument pos:line="124" pos:column="9">LPVOID</argument>)</argument_list></macro> <macro><name pos:line="124" pos:column="17">MsoLoadPres</name><argument_list pos:line="124" pos:column="28">(<argument pos:line="124" pos:column="29">HINSTANCE hinst</argument>, <argument pos:line="124" pos:column="46">int resType</argument>, <argument pos:line="124" pos:column="59">int resId</argument>)</argument_list></macro><empty_stmt pos:line="124" pos:column="69">;</empty_stmt>

<macro><name pos:line="126" pos:column="1">MSOAPI_</name><argument_list pos:line="126" pos:column="8">(<argument pos:line="126" pos:column="9">VOID</argument>)</argument_list></macro> <macro><name pos:line="126" pos:column="15">MsoSetDefaultButtonIndication</name><argument_list pos:line="126" pos:column="44">(<argument pos:line="126" pos:column="45">HDLG hdlg</argument>, <argument pos:line="126" pos:column="56">BOOL fUseDefault</argument>)</argument_list></macro><empty_stmt pos:line="126" pos:column="73">;</empty_stmt>

<comment type="line" pos:line="128" pos:column="1">// Resize handles (grippies)</comment>
<macro><name pos:line="129" pos:column="1">MSOAPI_</name><argument_list pos:line="129" pos:column="8">(<argument pos:line="129" pos:column="9">VOID</argument>)</argument_list></macro> <macro><name pos:line="129" pos:column="15">MsoSetGrippiesDlg</name><argument_list pos:line="129" pos:column="32">(<argument pos:line="129" pos:column="33">HDLG hdlg</argument>, <argument pos:line="129" pos:column="44">BOOL fUseGrippies</argument>)</argument_list></macro><empty_stmt pos:line="129" pos:column="62">;</empty_stmt>
<macro><name pos:line="130" pos:column="1">MSOAPI_</name><argument_list pos:line="130" pos:column="8">(<argument pos:line="130" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="130" pos:column="15">MsoFGetGrippiesDlg</name><argument_list pos:line="130" pos:column="33">(<argument pos:line="130" pos:column="34">HDLG hdlg</argument>)</argument_list></macro><empty_stmt pos:line="130" pos:column="44">;</empty_stmt>
<cpp:define pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="131" pos:column="9">msoGrippieSize</name></cpp:macro> <cpp:value pos:line="131" pos:column="24">11</cpp:value></cpp:define>

<comment type="line" pos:line="133" pos:column="1">// Define some macros</comment>
<cpp:define pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="134" pos:column="9">MsoTmcPerformDlg</name><parameter_list pos:line="134" pos:column="25">(<param><type><name pos:line="134" pos:column="26">Dlt</name></type></param>, <param><type><name pos:line="134" pos:column="31">hcab</name></type></param>, <param><type><name pos:line="134" pos:column="37">fdlg</name></type></param>, <param><type><name pos:line="134" pos:column="43">hParent</name></type></param>, <param><type><name pos:line="134" pos:column="52">hinst</name></type></param>, <param><type><name pos:line="134" pos:column="59">rgpfn</name></type></param>, <param><type><name pos:line="134" pos:column="66">wRef</name></type></param>)</parameter_list></cpp:macro> \
	<cpp:value pos:line="135" pos:column="9">MsoTmcStartDlt((long)dlt##Dlt, (HCAB)(hcab), ctmDlt##Dlt, (fdlg), hParent, hinst, rgpfn, wRef)</cpp:value></cpp:define>
<cpp:define pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="136" pos:column="9">MsoPerformModelessDlg</name><parameter_list pos:line="136" pos:column="30">(<param><type><name pos:line="136" pos:column="31">Dlt</name></type></param>, <param><type><name pos:line="136" pos:column="36">hcab</name></type></param>, <param><type><name pos:line="136" pos:column="42">fdlg</name></type></param>, <param><type><name pos:line="136" pos:column="48">hParent</name></type></param>, <param><type><name pos:line="136" pos:column="57">pmdlc</name></type></param>, <param><type><name pos:line="136" pos:column="64">hinst</name></type></param>, <param><type><name pos:line="136" pos:column="71">rgpfn</name></type></param>, <param><type><name pos:line="136" pos:column="78">wRef</name></type></param>)</parameter_list></cpp:macro> \
	<cpp:value pos:line="137" pos:column="9">MsoStartModelessDlt((long)dlt##Dlt, (HCAB)(hcab), ctmDlt##Dlt, (fdlg), hParent, pmdlc, hinst, rgpfn, wRef, fFalse)</cpp:value></cpp:define>

<comment type="line" pos:line="139" pos:column="1">// Dialog Control.</comment>
<macro><name pos:line="140" pos:column="1">MSOAPI_</name><argument_list pos:line="140" pos:column="8">(<argument pos:line="140" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="140" pos:column="25">IdDoMsgBox</name><argument_list pos:line="140" pos:column="35">(<argument><expr pos:line="140" pos:column="36">const <name pos:line="140" pos:column="42">WCHAR</name> <op:operator pos:line="140" pos:column="48">*</op:operator></expr></argument>, <argument><expr pos:line="140" pos:column="51">const <name pos:line="140" pos:column="57">WCHAR</name> <op:operator pos:line="140" pos:column="63">*</op:operator></expr></argument>, <argument><expr><name pos:line="140" pos:column="66">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="141" pos:column="1">MSOAPI_</name><argument_list pos:line="141" pos:column="8">(<argument pos:line="141" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="141" pos:column="25">FSetDlgSab</name><argument_list pos:line="141" pos:column="35">(<argument><expr><name pos:line="141" pos:column="36">SAB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="143" pos:column="1">// Flags for bringing up a dialog.</comment>
<cpp:define pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="144" pos:column="9">msogrfHdlgStartDefault</name></cpp:macro>        <cpp:value pos:line="144" pos:column="39">0x00000000</cpp:value></cpp:define> <comment type="line" pos:line="144" pos:column="50">// Default settings.</comment>
<cpp:define pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="145" pos:column="9">msogrfHdlgStartWorkPane</name></cpp:macro>       <cpp:value pos:line="145" pos:column="39">0x00000001</cpp:value></cpp:define> <comment type="line" pos:line="145" pos:column="50">// Start a WorkPane dialog.</comment>

<cpp:define pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="147" pos:column="9">msogrfHdlgStartRepositionLeft</name></cpp:macro> <cpp:value pos:line="147" pos:column="39">0x00000010</cpp:value></cpp:define> <comment type="line" pos:line="147" pos:column="50">// For AutoLayout dialogs only:  The</comment>
<cpp:define pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="148" pos:column="9">msogrfHdlgStartRepositionTop</name></cpp:macro>  <cpp:value pos:line="148" pos:column="39">0x00000100</cpp:value></cpp:define> <comment type="line" pos:line="148" pos:column="50">// given position of the dialog is</comment>
                                                 <comment type="line" pos:line="149" pos:column="50">// actually the center point of the</comment>
                                                 <comment type="line" pos:line="150" pos:column="50">// dialog, so the dialog will need</comment>
                                                 <comment type="line" pos:line="151" pos:column="50">// to be repositioned around that</comment>
                                                 <comment type="line" pos:line="152" pos:column="50">// point once the size of the dialog</comment>
                                                 <comment type="line" pos:line="153" pos:column="50">// is known.  Not pretty, I know, but</comment>
                                                 <comment type="line" pos:line="154" pos:column="50">// it's the best we could come up</comment>
                                                 <comment type="line" pos:line="155" pos:column="50">// with to allow for sticky points</comment>
                                                 <comment type="line" pos:line="156" pos:column="50">// in DAL dialogs.  NB:  If the</comment>
                                                 <comment type="line" pos:line="157" pos:column="50">// bdrAutoPosX border style is set</comment>
                                                 <comment type="line" pos:line="158" pos:column="50">// for the dialog, it doesn't make</comment>
                                                 <comment type="line" pos:line="159" pos:column="50">// sense to make use of</comment>
                                                 <comment type="line" pos:line="160" pos:column="50">// msogrfHdlgStartRepositionLeft,</comment>
                                                 <comment type="line" pos:line="161" pos:column="50">// and if the bdrAutoPosY</comment>
                                                 <comment type="line" pos:line="162" pos:column="50">// border style is set for the</comment>
                                                 <comment type="line" pos:line="163" pos:column="50">// dialog, it doesn't make sense</comment>
                                                 <comment type="line" pos:line="164" pos:column="50">// to make use of</comment>
                                                 <comment type="line" pos:line="165" pos:column="50">// msogrfHdlgStartRepositionTop.</comment>
                                                 

<macro><name pos:line="168" pos:column="1">MSOAPI_</name><argument_list pos:line="168" pos:column="8">(<argument pos:line="168" pos:column="9">TMC</argument>)</argument_list></macro> <macro><name pos:line="168" pos:column="14">TmcDoDlgDliEx</name><argument_list pos:line="168" pos:column="27">(<argument pos:line="168" pos:column="28">struct _dlt **</argument>, <argument pos:line="168" pos:column="44">HCAB hcab</argument>, <argument pos:line="168" pos:column="55">DLI *pdli</argument>, <argument pos:line="168" pos:column="66">DWORD grfHdlgStart</argument>)</argument_list></macro><empty_stmt pos:line="168" pos:column="85">;</empty_stmt>
<macro><name pos:line="169" pos:column="1">MSOAPIX_</name><argument_list pos:line="169" pos:column="9">(<argument pos:line="169" pos:column="10">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="169" pos:column="17">TmcDoDlg</name><argument_list pos:line="169" pos:column="25">(<argument pos:line="169" pos:column="26">struct <expr><name pos:line="169" pos:column="33">_dlt</name> <op:operator pos:line="169" pos:column="38">*</op:operator> <op:operator pos:line="169" pos:column="40">*</op:operator></expr></argument>, <argument><expr><name pos:line="169" pos:column="43">HCAB</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="49">BYTE</name> <op:operator pos:line="169" pos:column="54">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="170" pos:column="1">MSOAPI_</name><argument_list pos:line="170" pos:column="8">(<argument pos:line="170" pos:column="9">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="170" pos:column="17">TmcDoDlgDli</name><argument_list pos:line="170" pos:column="28">(<argument pos:line="170" pos:column="29">struct <expr><name pos:line="170" pos:column="36">_dlt</name> <op:operator pos:line="170" pos:column="41">*</op:operator> <op:operator pos:line="170" pos:column="43">*</op:operator></expr></argument>, <argument><expr><name pos:line="170" pos:column="46">HCAB</name></expr></argument>, <argument><expr><name pos:line="170" pos:column="52">DLI</name> <op:operator pos:line="170" pos:column="56">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="171" pos:column="1">MSOAPI_</name><argument_list pos:line="171" pos:column="8">(<argument pos:line="171" pos:column="9">HDLG</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="171" pos:column="17">HdlgStartDlg</name><argument_list pos:line="171" pos:column="29">(<argument pos:line="171" pos:column="30">struct <expr><name pos:line="171" pos:column="37">_dlt</name> <op:operator pos:line="171" pos:column="42">*</op:operator> <op:operator pos:line="171" pos:column="44">*</op:operator></expr></argument>, <argument><expr><name pos:line="171" pos:column="47">HCAB</name></expr></argument>, <argument><expr><name pos:line="171" pos:column="53">DLI</name> <op:operator pos:line="171" pos:column="57">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="172" pos:column="1">MSOAPI_</name><argument_list pos:line="172" pos:column="8">(<argument pos:line="172" pos:column="9">HDLG</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="172" pos:column="15">HdlgStartDlgEx</name><argument_list pos:line="172" pos:column="29">(<argument pos:line="172" pos:column="30">struct <expr><name pos:line="172" pos:column="37">_dlt</name> <op:operator pos:line="172" pos:column="42">*</op:operator> <op:operator pos:line="172" pos:column="44">*</op:operator></expr></argument>, <argument><expr><name pos:line="172" pos:column="47">HCAB</name></expr></argument>, <argument><expr><name pos:line="172" pos:column="53">DLI</name> <op:operator pos:line="172" pos:column="57">*</op:operator></expr></argument>, <argument><expr><name pos:line="172" pos:column="60">DWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">ifdef</cpp:directive> <name pos:line="174" pos:column="8">VSMSODEBUG</name></cpp:ifdef>
<macro><name pos:line="175" pos:column="1">MSOAPIXX_</name><argument_list pos:line="175" pos:column="10">(<argument pos:line="175" pos:column="11">BOOL_SDM</argument>)</argument_list></macro> <macro><name pos:line="175" pos:column="21">MsoFWriteDlgBe</name><argument_list pos:line="175" pos:column="35">(<argument pos:line="175" pos:column="36">HDLG hdlg</argument>, <argument pos:line="175" pos:column="47">LPARAM lParam</argument>)</argument_list></macro><empty_stmt pos:line="175" pos:column="61">;</empty_stmt>
<cpp:endif pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">endif</cpp:directive></cpp:endif>
<macro><name pos:line="177" pos:column="1">MSOAPI_</name><argument_list pos:line="177" pos:column="8">(<argument pos:line="177" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="177" pos:column="17">EndDlg</name><argument_list pos:line="177" pos:column="23">(<argument><expr><name pos:line="177" pos:column="24">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="178" pos:column="1">MSOAPIX_</name><argument_list pos:line="178" pos:column="9">(<argument pos:line="178" pos:column="10">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="178" pos:column="17">TmcEndedDlg</name><argument_list pos:line="178" pos:column="28">(<argument><expr><name pos:line="178" pos:column="29">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="179" pos:column="1">MSOAPI_</name><argument_list pos:line="179" pos:column="8">(<argument pos:line="179" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="179" pos:column="25">FFreeDlg</name><argument_list pos:line="179" pos:column="33">(<argument><expr><name pos:line="179" pos:column="34">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="180" pos:column="1">MSOAPI_</name><argument_list pos:line="180" pos:column="8">(<argument pos:line="180" pos:column="9">SAB_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="180" pos:column="25">SabGetDlg</name><argument_list pos:line="180" pos:column="34">(<argument><expr><name pos:line="180" pos:column="35">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="181" pos:column="1">MSOAPI_</name><argument_list pos:line="181" pos:column="8">(<argument pos:line="181" pos:column="9">SAB_SDM</argument>)</argument_list></macro>	<macro><name pos:line="181" pos:column="25">MsoSabGetDlgEx</name><argument_list pos:line="181" pos:column="39">(<argument pos:line="181" pos:column="40">HDLG hdlg</argument>)</argument_list></macro><empty_stmt pos:line="181" pos:column="50">;</empty_stmt>
<macro><name pos:line="182" pos:column="1">MSOAPI_</name><argument_list pos:line="182" pos:column="8">(<argument pos:line="182" pos:column="9">UINT_SDM</argument>)</argument_list></macro> <macro><name pos:line="182" pos:column="19">MsoItmBaseGetDlgTmc</name><argument_list pos:line="182" pos:column="38">(<argument pos:line="182" pos:column="39">HDLG hdlg</argument>, <argument pos:line="182" pos:column="50">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="182" pos:column="58">;</empty_stmt>

<macro><name pos:line="184" pos:column="1">MSOAPI_</name><argument_list pos:line="184" pos:column="8">(<argument pos:line="184" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="184" pos:column="17">SetTmcVal</name><argument_list pos:line="184" pos:column="26">(<argument><expr><name pos:line="184" pos:column="27">TMC</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="32">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="185" pos:column="1">MSOAPI_</name><argument_list pos:line="185" pos:column="8">(<argument pos:line="185" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="185" pos:column="25">ValGetTmc</name><argument_list pos:line="185" pos:column="34">(<argument><expr><name pos:line="185" pos:column="35">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="186" pos:column="1">MSOAPI_</name><argument_list pos:line="186" pos:column="8">(<argument pos:line="186" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="186" pos:column="17">GetTmcLargeVal</name><argument_list pos:line="186" pos:column="31">(<argument><expr><name pos:line="186" pos:column="32">TMC</name></expr></argument>, <argument><expr><name pos:line="186" pos:column="37">VOID</name> <op:operator pos:line="186" pos:column="42">*</op:operator></expr></argument>, <argument><expr><name pos:line="186" pos:column="45">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="187" pos:column="1">MSOAPI_</name><argument_list pos:line="187" pos:column="8">(<argument pos:line="187" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="187" pos:column="25">FSetTmcLargeVal</name><argument_list pos:line="187" pos:column="40">(<argument><expr><name pos:line="187" pos:column="41">TMC</name></expr></argument>, <argument><expr><name pos:line="187" pos:column="46">VOID</name> <op:operator pos:line="187" pos:column="51">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="188" pos:column="1">MSOAPI_</name><argument_list pos:line="188" pos:column="8">(<argument pos:line="188" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="188" pos:column="17">SetTmcText</name><argument_list pos:line="188" pos:column="27">(<argument><expr><name pos:line="188" pos:column="28">TMC</name></expr></argument>, <argument><expr pos:line="188" pos:column="33">const <name pos:line="188" pos:column="39">WCHAR</name> <op:operator pos:line="188" pos:column="45">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="189" pos:column="1">MSOAPI_</name><argument_list pos:line="189" pos:column="8">(<argument pos:line="189" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="189" pos:column="17">SetTmcTextNoRedraw</name><argument_list pos:line="189" pos:column="35">(<argument><expr><name pos:line="189" pos:column="36">TMC</name></expr></argument>, <argument><expr pos:line="189" pos:column="41">const <name pos:line="189" pos:column="47">WCHAR</name> <op:operator pos:line="189" pos:column="53">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="190" pos:column="1">MSOAPI_</name><argument_list pos:line="190" pos:column="8">(<argument pos:line="190" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="190" pos:column="17">GetTmcText</name><argument_list pos:line="190" pos:column="27">(<argument><expr><name pos:line="190" pos:column="28">TMC</name></expr></argument>, <argument><expr><name pos:line="190" pos:column="33">WCHAR</name> <op:operator pos:line="190" pos:column="39">*</op:operator></expr></argument>, <argument><expr><name pos:line="190" pos:column="42">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="191" pos:column="1">MSOAPI_</name><argument_list pos:line="191" pos:column="8">(<argument pos:line="191" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="191" pos:column="25">CchGetTmcText</name><argument_list pos:line="191" pos:column="38">(<argument><expr><name pos:line="191" pos:column="39">TMC</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="44">WCHAR</name> <op:operator pos:line="191" pos:column="50">*</op:operator></expr></argument>, <argument><expr><name pos:line="191" pos:column="53">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="192" pos:column="1">MSOAPI_</name><argument_list pos:line="192" pos:column="8">(<argument pos:line="192" pos:column="9">VOID</argument>)</argument_list></macro> <macro><name pos:line="192" pos:column="15">SetTmcTextFromDw</name><argument_list pos:line="192" pos:column="31">(<argument pos:line="192" pos:column="32">TMC tmc</argument>, <argument pos:line="192" pos:column="41">DWORD dw</argument>)</argument_list></macro><empty_stmt pos:line="192" pos:column="50">;</empty_stmt>
<macro><name pos:line="193" pos:column="1">MSOAPI_</name><argument_list pos:line="193" pos:column="8">(<argument pos:line="193" pos:column="9">DWORD</argument>)</argument_list></macro> <macro><name pos:line="193" pos:column="16">DwFromTmcText</name><argument_list pos:line="193" pos:column="29">(<argument pos:line="193" pos:column="30">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="193" pos:column="38">;</empty_stmt>

<macro><name pos:line="195" pos:column="1">MSOAPI_</name><argument_list pos:line="195" pos:column="8">(<argument pos:line="195" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="195" pos:column="25">SetFocusTmc</name><argument_list pos:line="195" pos:column="36">(<argument><expr><name pos:line="195" pos:column="37">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:define pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="196" pos:column="9">FSetFocusTmc</name><parameter_list pos:line="196" pos:column="21">(<param><type><name pos:line="196" pos:column="22">tmc</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="196" pos:column="27">SetFocusTmc(tmc)</cpp:value></cpp:define>

<macro><name pos:line="198" pos:column="1">MSOAPI_</name><argument_list pos:line="198" pos:column="8">(<argument pos:line="198" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<macro><name pos:line="198" pos:column="25">SetFocusTmcEx</name><argument_list pos:line="198" pos:column="38">(<argument pos:line="198" pos:column="39">TMC tmc</argument>, <argument pos:line="198" pos:column="48">DWORD msogrfSFT</argument>)</argument_list></macro><empty_stmt pos:line="198" pos:column="64">;</empty_stmt>

<comment type="line" pos:line="200" pos:column="1">// Nothing</comment>
<cpp:define pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="201" pos:column="9">msogrfSFTNone</name></cpp:macro> 		<cpp:value pos:line="201" pos:column="33">0</cpp:value></cpp:define>

<comment type="line" pos:line="203" pos:column="1">// Use when you want to move focus because of a mouse click. Will stop scrolling</comment>
<comment type="line" pos:line="204" pos:column="1">// the control into view if in the workpane.</comment>
<cpp:define pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="205" pos:column="9">msogrfSFTClick</name></cpp:macro>		<cpp:value pos:line="205" pos:column="33">1</cpp:value></cpp:define>
<cpp:define pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="206" pos:column="9">msogrfSFTNoScroll</name></cpp:macro>	<cpp:value pos:line="206" pos:column="33">msogrfSFTClick</cpp:value></cpp:define> 
<cpp:define pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="207" pos:column="9">msogrfSFTAll</name></cpp:macro>		<cpp:value pos:line="207" pos:column="33">msogrfSFTNone | msogrfSFTClick | msogrfSFTNoScroll</cpp:value></cpp:define>

<macro><name pos:line="209" pos:column="1">MSOAPI_</name><argument_list pos:line="209" pos:column="8">(<argument pos:line="209" pos:column="9">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="209" pos:column="17">TmcGetFocus</name><argument_list pos:line="209" pos:column="28">(<argument><expr><name pos:line="209" pos:column="29">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="210" pos:column="1">MSOAPI_</name><argument_list pos:line="210" pos:column="8">(<argument pos:line="210" pos:column="9">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="210" pos:column="17">TmcGetAccelerator</name><argument_list pos:line="210" pos:column="34">(<argument><expr><name pos:line="210" pos:column="35">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="212" pos:column="1">MSOAPIX_</name><argument_list pos:line="212" pos:column="9">(<argument pos:line="212" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="212" pos:column="17">SpinTmc</name><argument_list pos:line="212" pos:column="24">(<argument><expr><name pos:line="212" pos:column="25">TMC</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="30">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="40">INT_SDM</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="49">INT_SDM</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="58">INT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="213" pos:column="1">MSOAPI_</name><argument_list pos:line="213" pos:column="8">(<argument pos:line="213" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="213" pos:column="17">SetReadOnlyTmc</name><argument_list pos:line="213" pos:column="31">(<argument><expr><name pos:line="213" pos:column="32">TMC</name></expr></argument>, <argument><expr><name pos:line="213" pos:column="37">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="215" pos:column="1">MSOAPIMX_</name><argument_list pos:line="215" pos:column="10">(<argument pos:line="215" pos:column="11">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="215" pos:column="25">FIsMultiLineEditTmc</name><argument_list pos:line="215" pos:column="44">(<argument><expr><name pos:line="215" pos:column="45">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="216" pos:column="1">MSOAPI_</name><argument_list pos:line="216" pos:column="8">(<argument pos:line="216" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="216" pos:column="17">SetTmcTxs</name><argument_list pos:line="216" pos:column="26">(<argument><expr><name pos:line="216" pos:column="27">TMC</name></expr></argument>, <argument><expr><name pos:line="216" pos:column="32">TXS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="217" pos:column="1">MSOAPIMX_</name><argument_list pos:line="217" pos:column="10">(<argument pos:line="217" pos:column="11">VOID</argument>)</argument_list></macro> <macro><name pos:line="217" pos:column="17">SetTmcTxsNoFocus</name><argument_list pos:line="217" pos:column="33">(<argument pos:line="217" pos:column="34">TMC tmc</argument>, <argument pos:line="217" pos:column="43">TXS txs</argument>)</argument_list></macro><empty_stmt pos:line="217" pos:column="51">;</empty_stmt>
<macro><name pos:line="218" pos:column="1">MSOAPI_</name><argument_list pos:line="218" pos:column="8">(<argument pos:line="218" pos:column="9">TXS</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="218" pos:column="17">TxsGetTmc</name><argument_list pos:line="218" pos:column="26">(<argument><expr><name pos:line="218" pos:column="27">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="219" pos:column="1">MSOAPI_</name><argument_list pos:line="219" pos:column="8">(<argument pos:line="219" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="219" pos:column="17">RedisplayTmc</name><argument_list pos:line="219" pos:column="29">(<argument><expr><name pos:line="219" pos:column="30">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="220" pos:column="1">MSOAPIMX_</name><argument_list pos:line="220" pos:column="10">(<argument pos:line="220" pos:column="11">VOID</argument>)</argument_list></macro> <macro><name pos:line="220" pos:column="17">MsoInvalidateTmc</name><argument_list pos:line="220" pos:column="33">(<argument pos:line="220" pos:column="34">TMC tmc</argument>, <argument pos:line="220" pos:column="43">BOOL fErase</argument>)</argument_list></macro><empty_stmt pos:line="220" pos:column="55">;</empty_stmt>

<macro><name pos:line="222" pos:column="1">MSOAPI_</name><argument_list pos:line="222" pos:column="8">(<argument pos:line="222" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="222" pos:column="25">FEnabledTmc</name><argument_list pos:line="222" pos:column="36">(<argument><expr><name pos:line="222" pos:column="37">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="223" pos:column="1">MSOAPI_</name><argument_list pos:line="223" pos:column="8">(<argument pos:line="223" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="223" pos:column="17">EnableTmc</name><argument_list pos:line="223" pos:column="26">(<argument><expr><name pos:line="223" pos:column="27">TMC</name></expr></argument>, <argument><expr><name pos:line="223" pos:column="32">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="224" pos:column="1">MSOAPIX_</name><argument_list pos:line="224" pos:column="9">(<argument pos:line="224" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="224" pos:column="17">AdminEnableTmc</name><argument_list pos:line="224" pos:column="31">(<argument><expr><name pos:line="224" pos:column="32">TMC</name></expr></argument>, <argument><expr><name pos:line="224" pos:column="37">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="225" pos:column="1">MSOAPIX_</name><argument_list pos:line="225" pos:column="9">(<argument pos:line="225" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="225" pos:column="17">EnableNoninteractiveTmc</name><argument_list pos:line="225" pos:column="40">(<argument><expr><name pos:line="225" pos:column="41">TMC</name></expr></argument>, <argument><expr><name pos:line="225" pos:column="46">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="227" pos:column="1">MSOAPI_</name><argument_list pos:line="227" pos:column="8">(<argument pos:line="227" pos:column="9">U32_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="227" pos:column="25">LUserFromTmc</name><argument_list pos:line="227" pos:column="37">(<argument><expr><name pos:line="227" pos:column="38">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="228" pos:column="1">MSOAPI_</name><argument_list pos:line="228" pos:column="8">(<argument pos:line="228" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="228" pos:column="17">SetTmcLUser</name><argument_list pos:line="228" pos:column="28">(<argument><expr><name pos:line="228" pos:column="29">TMC</name></expr></argument>, <argument><expr><name pos:line="228" pos:column="34">U32_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="230" pos:column="9">SetScrollRangeTmc</name><parameter_list pos:line="230" pos:column="26">(<param><type><name pos:line="230" pos:column="27">tmc</name></type></param>, <param><type><name pos:line="230" pos:column="32">iMin</name></type></param>, <param><type><name pos:line="230" pos:column="38">iMax</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="231" pos:column="17">SetScrollRange(WindowOfTmc(tmc), SB_CTL, iMin, iMax, fTrue)</cpp:value></cpp:define>
<cpp:define pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="232" pos:column="9">GetScrollRangeTmc</name><parameter_list pos:line="232" pos:column="26">(<param><type><name pos:line="232" pos:column="27">tmc</name></type></param>, <param><type><name pos:line="232" pos:column="32">piMin</name></type></param>, <param><type><name pos:line="232" pos:column="39">piMax</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="233" pos:column="17">GetScrollRange(WindowOfTmc(tmc), SB_CTL, piMin, piMax)</cpp:value></cpp:define>
<cpp:define pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="234" pos:column="9">SetScrollPosTmc</name><parameter_list pos:line="234" pos:column="24">(<param><type><name pos:line="234" pos:column="25">tmc</name></type></param>, <param><type><name pos:line="234" pos:column="30">iPos</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="235" pos:column="17">SetScrollPos(WindowOfTmc(tmc), SB_CTL, iPos)</cpp:value></cpp:define>
<macro><name pos:line="236" pos:column="1">MSOAPI_</name><argument_list pos:line="236" pos:column="8">(<argument pos:line="236" pos:column="9">VOID</argument>)</argument_list></macro>	<macro><name pos:line="236" pos:column="17">SetScrollPageTmc</name><argument_list pos:line="236" pos:column="33">(<argument pos:line="236" pos:column="34">INT_SDM nPage</argument>, <argument pos:line="236" pos:column="49">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="236" pos:column="57">;</empty_stmt>
<macro><name pos:line="237" pos:column="1">MSOAPI_</name><argument_list pos:line="237" pos:column="8">(<argument pos:line="237" pos:column="9">HWND</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="237" pos:column="15">WindowOfDlgCur</name><argument_list pos:line="237" pos:column="29">(<argument><expr><name pos:line="237" pos:column="30">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="239" pos:column="1">MSOAPI_</name><argument_list pos:line="239" pos:column="8">(<argument pos:line="239" pos:column="9">VOID</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="239" pos:column="15">CaptureMouseTmc</name><argument_list pos:line="239" pos:column="30">(<argument><expr><name pos:line="239" pos:column="31">TMC</name></expr></argument>, <argument><expr><name pos:line="239" pos:column="36">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="241" pos:column="1">MSOAPIMX_</name><argument_list pos:line="241" pos:column="10">(<argument pos:line="241" pos:column="11">VOID</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="241" pos:column="17">SetLightFontTmc</name><argument_list pos:line="241" pos:column="32">(<argument><expr><name pos:line="241" pos:column="33">TMC</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="38">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="243" pos:column="1">MSOAPIX_</name><argument_list pos:line="243" pos:column="9">(<argument pos:line="243" pos:column="10">PFN_FILTERMSG</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="243" pos:column="25">PfnSetPfnFilterMsg</name><argument_list pos:line="243" pos:column="43">(<argument><expr><name pos:line="243" pos:column="44">PFN_FILTERMSG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="244" pos:column="1">MSOAPI_</name><argument_list pos:line="244" pos:column="8">(<argument pos:line="244" pos:column="9">PFN_DLGCREATED</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="244" pos:column="25">MsoPfnSetDlgCreated</name><argument_list pos:line="244" pos:column="44">(<argument><expr><name pos:line="244" pos:column="45">PFN_DLGCREATED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="246" pos:column="1">MSOAPIX_</name><argument_list pos:line="246" pos:column="9">(<argument pos:line="246" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="246" pos:column="17">SetModeBiasTmc</name><argument_list pos:line="246" pos:column="31">(<argument><expr><name pos:line="246" pos:column="32">TMC</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="37">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="247" pos:column="1">MSOAPIX_</name><argument_list pos:line="247" pos:column="9">(<argument pos:line="247" pos:column="10">VOID</argument>)</argument_list></macro>	<macro><name pos:line="247" pos:column="17">SetTmcSpecialTab</name><argument_list pos:line="247" pos:column="33">(<argument pos:line="247" pos:column="34">TMC tmc</argument>, <argument pos:line="247" pos:column="43">BOOL fFlag</argument>)</argument_list></macro><empty_stmt pos:line="247" pos:column="54">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="249" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="250" pos:column="1">// Rare Calls.</comment>

<comment type="line" pos:line="252" pos:column="1">// CAB Control.</comment>
<macro><name pos:line="253" pos:column="1">MSOAPI_</name><argument_list pos:line="253" pos:column="8">(<argument pos:line="253" pos:column="9">HCAB</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="253" pos:column="17">HcabFromDlg</name><argument_list pos:line="253" pos:column="28">(<argument><expr><name pos:line="253" pos:column="29">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="254" pos:column="1">MSOAPI_</name><argument_list pos:line="254" pos:column="8">(<argument pos:line="254" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="254" pos:column="17">NinchCab</name><argument_list pos:line="254" pos:column="25">(<argument><expr><name pos:line="254" pos:column="26">HCAB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="255" pos:column="1">MSOAPI_</name><argument_list pos:line="255" pos:column="8">(<argument pos:line="255" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="255" pos:column="17">MsoZeroCab</name><argument_list pos:line="255" pos:column="27">(<argument><expr><name pos:line="255" pos:column="28">HCAB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="257" pos:column="1">// Dialog Control.</comment>
<macro><name pos:line="258" pos:column="1">MSOAPI_</name><argument_list pos:line="258" pos:column="8">(<argument pos:line="258" pos:column="9">HDLG</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="258" pos:column="17">HdlgSetCurDlg</name><argument_list pos:line="258" pos:column="30">(<argument><expr><name pos:line="258" pos:column="31">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="259" pos:column="1">MSOAPI_</name><argument_list pos:line="259" pos:column="8">(<argument pos:line="259" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="259" pos:column="17">ShowDlg</name><argument_list pos:line="259" pos:column="24">(<argument><expr><name pos:line="259" pos:column="25">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="260" pos:column="1">MSOAPI_</name><argument_list pos:line="260" pos:column="8">(<argument pos:line="260" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="260" pos:column="25">FVisibleDlg</name><argument_list pos:line="260" pos:column="36">(<argument><expr><name pos:line="260" pos:column="37">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="261" pos:column="1">MSOAPI_</name><argument_list pos:line="261" pos:column="8">(<argument pos:line="261" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="261" pos:column="17">ResizeDlg</name><argument_list pos:line="261" pos:column="26">(<argument><expr><name pos:line="261" pos:column="27">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="261" pos:column="35">XY_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="262" pos:column="1">MSOAPI_</name><argument_list pos:line="262" pos:column="8">(<argument pos:line="262" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="262" pos:column="17">ResizeDlgEx</name><argument_list pos:line="262" pos:column="28">(<argument><expr><name pos:line="262" pos:column="29">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="37">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="45">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="264" pos:column="1">MSOAPI_</name><argument_list pos:line="264" pos:column="8">(<argument pos:line="264" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="264" pos:column="17">MoveDlg</name><argument_list pos:line="264" pos:column="24">(<argument><expr><name pos:line="264" pos:column="25">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="264" pos:column="33">XY_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="265" pos:column="1">MSOAPI_</name><argument_list pos:line="265" pos:column="8">(<argument pos:line="265" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="265" pos:column="17">SdmScaleRec</name><argument_list pos:line="265" pos:column="28">(<argument><expr><name pos:line="265" pos:column="29">REC</name> <op:operator pos:line="265" pos:column="33">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="266" pos:column="1">MSOAPI_</name><argument_list pos:line="266" pos:column="8">(<argument pos:line="266" pos:column="9">HDLG</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="266" pos:column="17">HdlgSetFocusDlg</name><argument_list pos:line="266" pos:column="32">(<argument><expr><name pos:line="266" pos:column="33">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="267" pos:column="1">MSOAPI_</name><argument_list pos:line="267" pos:column="8">(<argument pos:line="267" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="267" pos:column="17">SetTabOrder</name><argument_list pos:line="267" pos:column="28">(<argument><expr><name pos:line="267" pos:column="29">TMC</name> <op:operator pos:line="267" pos:column="33">*</op:operator></expr></argument>, <argument><expr><name pos:line="267" pos:column="36">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="268" pos:column="1">MSOAPI_</name><argument_list pos:line="268" pos:column="8">(<argument pos:line="268" pos:column="9">int</argument>)</argument_list></macro> 	<macro><name pos:line="268" pos:column="17">SwapTabOrder</name><argument_list pos:line="268" pos:column="29">(<argument pos:line="268" pos:column="30">TMC tmc1</argument>, <argument pos:line="268" pos:column="40">TMC tmc2</argument>)</argument_list></macro><empty_stmt pos:line="268" pos:column="49">;</empty_stmt>
<macro><name pos:line="269" pos:column="1">MSOAPI_</name><argument_list pos:line="269" pos:column="8">(<argument pos:line="269" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="269" pos:column="17">UpdateWindowDlg</name><argument_list pos:line="269" pos:column="32">(<argument><expr><name pos:line="269" pos:column="33">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="271" pos:column="1">MSOAPI_</name><argument_list pos:line="271" pos:column="8">(<argument pos:line="271" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="271" pos:column="17">GetListBoxEntry</name><argument_list pos:line="271" pos:column="32">(<argument><expr><name pos:line="271" pos:column="33">TMC</name></expr></argument>, <argument><expr><name pos:line="271" pos:column="38">ILBE_SDM</name></expr></argument>, <argument><expr><name pos:line="271" pos:column="48">WCHAR</name> <op:operator pos:line="271" pos:column="54">*</op:operator></expr></argument>, <argument><expr><name pos:line="271" pos:column="57">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="272" pos:column="1">MSOAPI_</name><argument_list pos:line="272" pos:column="8">(<argument pos:line="272" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="272" pos:column="25">CchGetListBoxEntry</name><argument_list pos:line="272" pos:column="43">(<argument><expr><name pos:line="272" pos:column="44">TMC</name></expr></argument>, <argument><expr><name pos:line="272" pos:column="49">ILBE_SDM</name></expr></argument>, <argument><expr><name pos:line="272" pos:column="59">WCHAR</name> <op:operator pos:line="272" pos:column="65">*</op:operator></expr></argument>, <argument><expr><name pos:line="272" pos:column="68">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="274" pos:column="1">MSOAPI_</name><argument_list pos:line="274" pos:column="8">(<argument pos:line="274" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="274" pos:column="17">AddListBoxEntry</name><argument_list pos:line="274" pos:column="32">(<argument><expr><name pos:line="274" pos:column="33">TMC</name></expr></argument>, <argument><expr pos:line="274" pos:column="38">const <name pos:line="274" pos:column="44">WCHAR</name> <op:operator pos:line="274" pos:column="50">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="275" pos:column="1">MSOAPI_</name><argument_list pos:line="275" pos:column="8">(<argument pos:line="275" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="275" pos:column="17">InsertListBoxEntry</name><argument_list pos:line="275" pos:column="35">(<argument><expr><name pos:line="275" pos:column="36">TMC</name></expr></argument>, <argument><expr pos:line="275" pos:column="41">const <name pos:line="275" pos:column="47">WCHAR</name> <op:operator pos:line="275" pos:column="53">*</op:operator></expr></argument>, <argument><expr><name pos:line="275" pos:column="56">ILBE_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="276" pos:column="1">MSOAPI_</name><argument_list pos:line="276" pos:column="8">(<argument pos:line="276" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="276" pos:column="17">DeleteListBoxEntry</name><argument_list pos:line="276" pos:column="35">(<argument><expr><name pos:line="276" pos:column="36">TMC</name></expr></argument>, <argument><expr><name pos:line="276" pos:column="41">ILBE_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="277" pos:column="1">MSOAPI_</name><argument_list pos:line="277" pos:column="8">(<argument pos:line="277" pos:column="9">ILBE_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="277" pos:column="25">CentryListBoxTmc</name><argument_list pos:line="277" pos:column="41">(<argument><expr><name pos:line="277" pos:column="42">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="278" pos:column="1">MSOAPI_</name><argument_list pos:line="278" pos:column="8">(<argument pos:line="278" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="278" pos:column="17">StartListBoxUpdate</name><argument_list pos:line="278" pos:column="35">(<argument><expr><name pos:line="278" pos:column="36">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="279" pos:column="1">MSOAPI_</name><argument_list pos:line="279" pos:column="8">(<argument pos:line="279" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="279" pos:column="17">BeginListBoxUpdate</name><argument_list pos:line="279" pos:column="35">(<argument><expr><name pos:line="279" pos:column="36">TMC</name></expr></argument>, <argument><expr><name pos:line="279" pos:column="41">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="280" pos:column="1">MSOAPI_</name><argument_list pos:line="280" pos:column="8">(<argument pos:line="280" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="280" pos:column="17">EndListBoxUpdate</name><argument_list pos:line="280" pos:column="33">(<argument><expr><name pos:line="280" pos:column="34">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="281" pos:column="1">MSOAPI_</name><argument_list pos:line="281" pos:column="8">(<argument pos:line="281" pos:column="9">ILBE_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="281" pos:column="25">IEntryFindListBox</name><argument_list pos:line="281" pos:column="42">(<argument><expr><name pos:line="281" pos:column="43">TMC</name></expr></argument>, <argument><expr pos:line="281" pos:column="48">const <name pos:line="281" pos:column="54">WCHAR</name> <op:operator pos:line="281" pos:column="60">*</op:operator></expr></argument>, <argument><expr><name pos:line="281" pos:column="63">UINT_SDM</name> <op:operator pos:line="281" pos:column="72">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="282" pos:column="1">MSOAPI_</name><argument_list pos:line="282" pos:column="8">(<argument pos:line="282" pos:column="9">ILBE_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="282" pos:column="25">IEntryListBoxCursorTmc</name><argument_list pos:line="282" pos:column="47">(<argument><expr><name pos:line="282" pos:column="48">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="283" pos:column="1">MSOAPI_</name><argument_list pos:line="283" pos:column="8">(<argument pos:line="283" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="283" pos:column="15">MsoFSetGalleryColumnWidth</name><argument_list pos:line="283" pos:column="40">(<argument pos:line="283" pos:column="41">HLBX hlbx</argument>, <argument pos:line="283" pos:column="52">XY_SDM dxPreferred</argument>)</argument_list></macro><empty_stmt pos:line="283" pos:column="71">;</empty_stmt>
<macro><name pos:line="284" pos:column="1">MSOAPI_</name><argument_list pos:line="284" pos:column="8">(<argument pos:line="284" pos:column="9">ILBE_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="284" pos:column="25">IselListBoxTmc</name><argument_list pos:line="284" pos:column="39">(<argument><expr><name pos:line="284" pos:column="40">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="285" pos:column="1">MSOAPI_</name><argument_list pos:line="285" pos:column="8">(<argument pos:line="285" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="285" pos:column="15">MsoFSetLastMruEntry</name><argument_list pos:line="285" pos:column="34">(<argument pos:line="285" pos:column="35">HLBX hlbx</argument>, <argument pos:line="285" pos:column="46">ILBE_SDM ilbeMRU</argument>)</argument_list></macro><empty_stmt pos:line="285" pos:column="63">;</empty_stmt>
<macro><name pos:line="286" pos:column="1">MSOAPIX_</name><argument_list pos:line="286" pos:column="9">(<argument pos:line="286" pos:column="10">BOOL</argument>)</argument_list></macro> <macro><name pos:line="286" pos:column="16">MsoFRemoveMruLine</name><argument_list pos:line="286" pos:column="33">(<argument pos:line="286" pos:column="34">HLBX hlbx</argument>, <argument pos:line="286" pos:column="45">ILBE_SDM ilbeMRU</argument>)</argument_list></macro><empty_stmt pos:line="286" pos:column="62">;</empty_stmt>

<comment type="line" pos:line="288" pos:column="1">// Set the height of a combo or droplist control's dropdown.</comment>
<macro><name pos:line="289" pos:column="1">MSOAPI_</name><argument_list pos:line="289" pos:column="8">(<argument pos:line="289" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="289" pos:column="15">MsoSDMSetDropdownHeightLines</name><argument_list pos:line="289" pos:column="43">(<argument pos:line="289" pos:column="44">TMC tmc</argument>, <argument pos:line="289" pos:column="53">int nLines</argument>)</argument_list></macro><empty_stmt pos:line="289" pos:column="64">;</empty_stmt>

<macro><name pos:line="291" pos:column="1">MSOAPIMX_</name><argument_list pos:line="291" pos:column="10">(<argument pos:line="291" pos:column="11">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="291" pos:column="21">FExtendedTmmSet</name><argument_list pos:line="291" pos:column="36">(<argument><expr><name pos:line="291" pos:column="37">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="292" pos:column="1">MSOAPI_</name><argument_list pos:line="292" pos:column="8">(<argument pos:line="292" pos:column="9">HDLG</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="292" pos:column="15">HdlgQueryCur</name><argument_list pos:line="292" pos:column="27">(<argument><expr><name pos:line="292" pos:column="28">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="293" pos:column="1">MSOAPI_</name><argument_list pos:line="293" pos:column="8">(<argument pos:line="293" pos:column="9">HCAB</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="293" pos:column="15">HcabQueryCur</name><argument_list pos:line="293" pos:column="27">(<argument><expr><name pos:line="293" pos:column="28">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="294" pos:column="1">MSOAPI_</name><argument_list pos:line="294" pos:column="8">(<argument pos:line="294" pos:column="9">UINT_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="294" pos:column="19">WRefQueryCur</name><argument_list pos:line="294" pos:column="31">(<argument><expr><name pos:line="294" pos:column="32">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="295" pos:column="1">MSOAPI_</name><argument_list pos:line="295" pos:column="8">(<argument pos:line="295" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="295" pos:column="17">EnsureVisibleDlgRec</name><argument_list pos:line="295" pos:column="36">(<argument><expr><name pos:line="295" pos:column="37">REC</name> <op:operator pos:line="295" pos:column="41">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="296" pos:column="1">MSOAPIX_</name><argument_list pos:line="296" pos:column="9">(<argument pos:line="296" pos:column="10">TMC</argument>)</argument_list></macro> <macro><name pos:line="296" pos:column="15">TmcSetTmcContext</name><argument_list pos:line="296" pos:column="31">(<argument pos:line="296" pos:column="32">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="296" pos:column="40">;</empty_stmt>
<macro><name pos:line="297" pos:column="1">MSOAPI_</name><argument_list pos:line="297" pos:column="8">(<argument pos:line="297" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="297" pos:column="15">MsoSdmNotifyWinEvent</name><argument_list pos:line="297" pos:column="35">(<argument pos:line="297" pos:column="36">DWORD dwEvent</argument>, <argument pos:line="297" pos:column="51">TMC tmc</argument>, <argument pos:line="297" pos:column="60">BOOL fChildOnly</argument>)</argument_list></macro><empty_stmt pos:line="297" pos:column="76">;</empty_stmt>

<comment type="line" pos:line="299" pos:column="1">// Command Bar Visuals ('new look')</comment>
<macro><name pos:line="300" pos:column="1">MSOAPI_</name><argument_list pos:line="300" pos:column="8">(<argument pos:line="300" pos:column="9">int</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="300" pos:column="14">MsoIHyperlinkIconMarginGet</name><argument_list pos:line="300" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="301" pos:column="1">MSOAPIX_</name><argument_list pos:line="301" pos:column="9">(<argument pos:line="301" pos:column="10">VOID</argument>)</argument_list></macro> <macro><name pos:line="301" pos:column="16">MsoSdmCtrlCrGet</name><argument_list pos:line="301" pos:column="31">(<argument pos:line="301" pos:column="32">FTMS ftms</argument>, <argument pos:line="301" pos:column="43">COLORREF *pcrBackground</argument>, <argument pos:line="301" pos:column="68">COLORREF *pcrBorder</argument>, <argument pos:line="301" pos:column="89">COLORREF *pcrText</argument>)</argument_list></macro><empty_stmt pos:line="301" pos:column="107">;</empty_stmt>
<macro><name pos:line="302" pos:column="1">MSOAPIX_</name><argument_list pos:line="302" pos:column="9">(<argument pos:line="302" pos:column="10">VOID</argument>)</argument_list></macro> <macro><name pos:line="302" pos:column="16">MsoSdmCtrlCbvCrGet</name><argument_list pos:line="302" pos:column="34">(<argument pos:line="302" pos:column="35">FTMS ftms</argument>, <argument pos:line="302" pos:column="46">int *pmsocbvcrBackground</argument>, <argument pos:line="302" pos:column="72">int *pmsocbvcrBorder</argument>, <argument pos:line="302" pos:column="94">int *pmsocbvcrText</argument>)</argument_list></macro><empty_stmt pos:line="302" pos:column="113">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="304" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="305" pos:column="1">// Very Rare.</comment>

<macro><name pos:line="307" pos:column="1">MSOAPI_</name><argument_list pos:line="307" pos:column="8">(<argument pos:line="307" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="307" pos:column="15">BidiDropsToLeft</name><argument_list pos:line="307" pos:column="30">(<argument pos:line="307" pos:column="31">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="307" pos:column="39">;</empty_stmt>	<comment type="line" pos:line="307" pos:column="41">// Test Wizard called helper API</comment>
<macro><name pos:line="308" pos:column="1">MSOAPIX_</name><argument_list pos:line="308" pos:column="9">(<argument pos:line="308" pos:column="10">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="308" pos:column="20">MsoFExecuteTmc</name><argument_list pos:line="308" pos:column="34">(<argument><expr><name pos:line="308" pos:column="35">TMC</name></expr></argument>, <argument><expr><name pos:line="308" pos:column="40">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="309" pos:column="1">MSOAPI_</name><argument_list pos:line="309" pos:column="8">(<argument pos:line="309" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="309" pos:column="25">FSendDlm</name><argument_list pos:line="309" pos:column="33">(<argument><expr><name pos:line="309" pos:column="34">DLM</name></expr></argument>, <argument><expr><name pos:line="309" pos:column="39">TMC</name></expr></argument>, <argument><expr><name pos:line="309" pos:column="44">UCBK_SDM</name></expr></argument>, <argument><expr><name pos:line="309" pos:column="54">UCBK_SDM</name></expr></argument>, <argument><expr><name pos:line="309" pos:column="64">UCBK_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="311" pos:column="1">MSOAPI_</name><argument_list pos:line="311" pos:column="8">(<argument pos:line="311" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="311" pos:column="25">FIsDialogWindow</name><argument_list pos:line="311" pos:column="40">(<argument><expr><name pos:line="311" pos:column="41">HWND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="313" pos:column="1">// CAB Control.</comment>
<macro><name pos:line="314" pos:column="1">MSOAPI_</name><argument_list pos:line="314" pos:column="8">(<argument pos:line="314" pos:column="9">HCAB</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="314" pos:column="17">HcabDupeCab</name><argument_list pos:line="314" pos:column="28">(<argument><expr><name pos:line="314" pos:column="29">HCAB</name></expr></argument>, <argument><expr><name pos:line="314" pos:column="35">SB_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="316" pos:column="1">// Dialog Control.</comment>
<macro><name pos:line="317" pos:column="1">MSOAPI_</name><argument_list pos:line="317" pos:column="8">(<argument pos:line="317" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="317" pos:column="25">FKillDlgFocus</name><argument_list pos:line="317" pos:column="38">(<argument><expr><name pos:line="317" pos:column="39">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="318" pos:column="1">MSOAPI_</name><argument_list pos:line="318" pos:column="8">(<argument pos:line="318" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="318" pos:column="25">FModalDlg</name><argument_list pos:line="318" pos:column="34">(<argument><expr><name pos:line="318" pos:column="35">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="319" pos:column="1">MSOAPI_</name><argument_list pos:line="319" pos:column="8">(<argument pos:line="319" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="319" pos:column="25">FIsDlgDying</name><argument_list pos:line="319" pos:column="36">(<argument><expr><name pos:line="319" pos:column="37">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="320" pos:column="1">MSOAPIX_</name><argument_list pos:line="320" pos:column="9">(<argument pos:line="320" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="320" pos:column="17">ClearListError</name><argument_list pos:line="320" pos:column="31">(<argument><expr><name pos:line="320" pos:column="32">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="322" pos:column="1">MSOAPI_</name><argument_list pos:line="322" pos:column="8">(<argument pos:line="322" pos:column="9">ILBE_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="322" pos:column="25">CselListBoxTmc</name><argument_list pos:line="322" pos:column="39">(<argument><expr><name pos:line="322" pos:column="40">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="323" pos:column="1">MSOAPIX_</name><argument_list pos:line="323" pos:column="9">(<argument pos:line="323" pos:column="10">TMV</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="323" pos:column="17">TmvGetTmc</name><argument_list pos:line="323" pos:column="26">(<argument><expr><name pos:line="323" pos:column="27">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="324" pos:column="1">MSOAPI_</name><argument_list pos:line="324" pos:column="8">(<argument pos:line="324" pos:column="9">TMT</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="324" pos:column="17">TmtGetTmc</name><argument_list pos:line="324" pos:column="26">(<argument><expr><name pos:line="324" pos:column="27">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="325" pos:column="1">MSOAPI_</name><argument_list pos:line="325" pos:column="8">(<argument pos:line="325" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="325" pos:column="25">FReturnDlgControl</name><argument_list pos:line="325" pos:column="42">(<argument><expr><name pos:line="325" pos:column="43">TMC</name></expr></argument>, <argument><expr><name pos:line="325" pos:column="48">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="326" pos:column="1">MSOAPI_</name><argument_list pos:line="326" pos:column="8">(<argument pos:line="326" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="326" pos:column="17">SetDefaultTmc</name><argument_list pos:line="326" pos:column="30">(<argument><expr><name pos:line="326" pos:column="31">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="327" pos:column="1">MSOAPI_</name><argument_list pos:line="327" pos:column="8">(<argument pos:line="327" pos:column="9">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="327" pos:column="17">TmcGetDefault</name><argument_list pos:line="327" pos:column="30">(<argument><expr><name pos:line="327" pos:column="31">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="329" pos:column="1">MSOAPI_</name><argument_list pos:line="329" pos:column="8">(<argument pos:line="329" pos:column="9">TMC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="329" pos:column="17">TmcGetDropped</name><argument_list pos:line="329" pos:column="30">(<argument><expr><name pos:line="329" pos:column="31">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="330" pos:column="1">MSOAPI_</name><argument_list pos:line="330" pos:column="8">(<argument pos:line="330" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="330" pos:column="17">GrowDropTmc</name><argument_list pos:line="330" pos:column="28">(<argument><expr><name pos:line="330" pos:column="29">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="331" pos:column="1">#<cpp:directive pos:line="331" pos:column="2">if</cpp:directive> <expr><name pos:line="331" pos:column="5">SDMMSAA_TROBWIS_UPDATE</name></expr></cpp:if>
<macro><name pos:line="332" pos:column="1">MSOAPIX_</name><argument_list pos:line="332" pos:column="9">(<argument pos:line="332" pos:column="10">VOID</argument>)</argument_list></macro> <macro><name pos:line="332" pos:column="16">ShrinkDropTmc</name><argument_list pos:line="332" pos:column="29">(<argument pos:line="332" pos:column="30">TMC tmc</argument>, <argument pos:line="332" pos:column="39">BARG_SDM fSel</argument>)</argument_list></macro><empty_stmt pos:line="332" pos:column="53">;</empty_stmt>
<cpp:else pos:line="333" pos:column="1">#<cpp:directive pos:line="333" pos:column="2">else</cpp:directive></cpp:else>
<macro><name pos:line="334" pos:column="1">MSOAPIX_</name><argument_list pos:line="334" pos:column="9">(<argument pos:line="334" pos:column="10">VOID</argument>)</argument_list></macro> <macro><name pos:line="334" pos:column="16">ShrinkDropTmc</name><argument_list pos:line="334" pos:column="29">(<argument pos:line="334" pos:column="30">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="334" pos:column="38">;</empty_stmt>
<cpp:endif pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">endif</cpp:directive></cpp:endif>

<macro><name pos:line="337" pos:column="1">MSOAPI_</name><argument_list pos:line="337" pos:column="8">(<argument pos:line="337" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="337" pos:column="17">SetSecretEditTmc</name><argument_list pos:line="337" pos:column="33">(<argument><expr><name pos:line="337" pos:column="34">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="339" pos:column="1">MSOAPI_</name><argument_list pos:line="339" pos:column="8">(<argument pos:line="339" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="339" pos:column="17">CompleteComboTmc</name><argument_list pos:line="339" pos:column="33">(<argument><expr><name pos:line="339" pos:column="34">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="340" pos:column="1">MSOAPI_</name><argument_list pos:line="340" pos:column="8">(<argument pos:line="340" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="340" pos:column="17">LimitTextTmc</name><argument_list pos:line="340" pos:column="29">(<argument><expr><name pos:line="340" pos:column="30">TMC</name></expr></argument>, <argument><expr><name pos:line="340" pos:column="35">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="341" pos:column="1">MSOAPI_</name><argument_list pos:line="341" pos:column="8">(<argument pos:line="341" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="341" pos:column="17">SetVisibleTmc</name><argument_list pos:line="341" pos:column="30">(<argument><expr><name pos:line="341" pos:column="31">TMC</name></expr></argument>, <argument><expr><name pos:line="341" pos:column="36">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="342" pos:column="1">MSOAPI_</name><argument_list pos:line="342" pos:column="8">(<argument pos:line="342" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="342" pos:column="25">FIsVisibleTmc</name><argument_list pos:line="342" pos:column="38">(<argument><expr><name pos:line="342" pos:column="39">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="343" pos:column="1">MSOAPI_</name><argument_list pos:line="343" pos:column="8">(<argument pos:line="343" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="343" pos:column="17">GetTmcRec</name><argument_list pos:line="343" pos:column="26">(<argument><expr><name pos:line="343" pos:column="27">TMC</name></expr></argument>, <argument><expr><name pos:line="343" pos:column="32">REC</name> <op:operator pos:line="343" pos:column="36">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="344" pos:column="1">MSOAPI_</name><argument_list pos:line="344" pos:column="8">(<argument pos:line="344" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="344" pos:column="17">SetTmcRec</name><argument_list pos:line="344" pos:column="26">(<argument><expr><name pos:line="344" pos:column="27">TMC</name></expr></argument>, <argument><expr><name pos:line="344" pos:column="32">REC</name> <op:operator pos:line="344" pos:column="36">*</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="345" pos:column="1">MSOAPI_</name><argument_list pos:line="345" pos:column="8">(<argument pos:line="345" pos:column="9">int</argument>)</argument_list></macro>    <macro><name pos:line="345" pos:column="17">MsoSDMGetListboxBorder</name><argument_list pos:line="345" pos:column="39">(<argument pos:line="345" pos:column="40">TMC tmc</argument>)</argument_list></macro><empty_stmt pos:line="345" pos:column="48">;</empty_stmt>


<macro><name pos:line="348" pos:column="1">MSOAPI_</name><argument_list pos:line="348" pos:column="8">(<argument pos:line="348" pos:column="9">HWND</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="348" pos:column="17">WindowOfTmc</name><argument_list pos:line="348" pos:column="28">(<argument><expr><name pos:line="348" pos:column="29">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="350" pos:column="1">MSOAPIX_</name><argument_list pos:line="350" pos:column="9">(<argument pos:line="350" pos:column="10">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="350" pos:column="25">FIsDlgInteractive</name><argument_list pos:line="350" pos:column="42">(<argument><expr><name pos:line="350" pos:column="43">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="351" pos:column="1">MSOAPI_</name><argument_list pos:line="351" pos:column="8">(<argument pos:line="351" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="351" pos:column="17">SetDlgCaption</name><argument_list pos:line="351" pos:column="30">(<argument><expr><name pos:line="351" pos:column="31">CONST_WZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="353" pos:column="1">MSOAPI_</name><argument_list pos:line="353" pos:column="8">(<argument pos:line="353" pos:column="9">HLBX</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="353" pos:column="17">HlbxFromTmc</name><argument_list pos:line="353" pos:column="28">(<argument><expr><name pos:line="353" pos:column="29">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="354" pos:column="1">MSOAPIX_</name><argument_list pos:line="354" pos:column="9">(<argument pos:line="354" pos:column="10">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="354" pos:column="25">SetTmcFlbx</name><argument_list pos:line="354" pos:column="35">(<argument><expr><name pos:line="354" pos:column="36">TMC</name></expr></argument>, <argument><expr><name pos:line="354" pos:column="41">UINT_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="355" pos:column="1">MSOAPIX_</name><argument_list pos:line="355" pos:column="9">(<argument pos:line="355" pos:column="10">BOOL_SDM</argument>)</argument_list></macro> <macro><name pos:line="355" pos:column="20">GetTmcFlbx</name><argument_list pos:line="355" pos:column="30">(<argument pos:line="355" pos:column="31">TMC tmc</argument>, <argument pos:line="355" pos:column="40">UINT_SDM  *pflbx</argument>)</argument_list></macro><empty_stmt pos:line="355" pos:column="57">;</empty_stmt>

<macro><name pos:line="357" pos:column="1">MSOAPI_</name><argument_list pos:line="357" pos:column="8">(<argument pos:line="357" pos:column="9">HDLG</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="357" pos:column="17">HdlgFromWindow</name><argument_list pos:line="357" pos:column="31">(<argument><expr><name pos:line="357" pos:column="32">HWND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="358" pos:column="1">MSOAPI_</name><argument_list pos:line="358" pos:column="8">(<argument pos:line="358" pos:column="9">HWND</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="358" pos:column="17">WindowSwapSdmParent</name><argument_list pos:line="358" pos:column="36">(<argument><expr><name pos:line="358" pos:column="37">HWND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="359" pos:column="1">MSOAPI_</name><argument_list pos:line="359" pos:column="8">(<argument pos:line="359" pos:column="9">HWND</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="359" pos:column="17">WindowFromDlg</name><argument_list pos:line="359" pos:column="30">(<argument><expr><name pos:line="359" pos:column="31">HDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="361" pos:column="1">MSOAPI_</name><argument_list pos:line="361" pos:column="8">(<argument pos:line="361" pos:column="9">UINT_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="361" pos:column="25">CchGetTmc</name><argument_list pos:line="361" pos:column="34">(<argument><expr><name pos:line="361" pos:column="35">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="362" pos:column="1">MSOAPIX_</name><argument_list pos:line="362" pos:column="9">(<argument pos:line="362" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="362" pos:column="17">SetFdlgOfHdlgCur</name><argument_list pos:line="362" pos:column="33">(<argument><expr><name pos:line="362" pos:column="34">FDLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="364" pos:column="1">MSOAPIX_</name><argument_list pos:line="364" pos:column="9">(<argument pos:line="364" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="364" pos:column="17">SetEditTmcHandle</name><argument_list pos:line="364" pos:column="33">(<argument><expr><name pos:line="364" pos:column="34">TMC</name></expr></argument>, <argument><expr><name pos:line="364" pos:column="39">HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="365" pos:column="1">MSOAPIX_</name><argument_list pos:line="365" pos:column="9">(<argument pos:line="365" pos:column="10">HANDLE</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="365" pos:column="25">HGetEditTmc</name><argument_list pos:line="365" pos:column="36">(<argument><expr><name pos:line="365" pos:column="37">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="366" pos:column="1">MSOAPIX_</name><argument_list pos:line="366" pos:column="9">(<argument pos:line="366" pos:column="10">FARPROC</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="366" pos:column="25">LpfnSetEditFilter</name><argument_list pos:line="366" pos:column="42">(<argument><expr><name pos:line="366" pos:column="43">FARPROC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="368" pos:column="1">MSOAPI_</name><argument_list pos:line="368" pos:column="8">(<argument pos:line="368" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="368" pos:column="19">FShrinkRefEdit</name><argument_list pos:line="368" pos:column="33">(<argument><expr><name pos:line="368" pos:column="34">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="369" pos:column="1">MSOAPI_</name><argument_list pos:line="369" pos:column="8">(<argument pos:line="369" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="369" pos:column="19">FDlgShrunk</name><argument_list pos:line="369" pos:column="29">(<argument><expr><name pos:line="369" pos:column="30">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="370" pos:column="1">MSOAPI_</name><argument_list pos:line="370" pos:column="8">(<argument pos:line="370" pos:column="9">BOOL_SDM</argument>)</argument_list></macro> <macro><name pos:line="370" pos:column="19">MsoFSetSdmNotifyOnActivation</name><argument_list pos:line="370" pos:column="47">(<argument pos:line="370" pos:column="48">BOOL fNotifyOnActivation</argument>)</argument_list></macro><empty_stmt pos:line="370" pos:column="73">;</empty_stmt>

<macro><name pos:line="372" pos:column="1">MSOAPI_</name><argument_list pos:line="372" pos:column="8">(<argument pos:line="372" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="372" pos:column="15">MsoSetDialogPositionViaFrame</name><argument_list pos:line="372" pos:column="43">(<argument pos:line="372" pos:column="44">BOOL fDialogPositionViaFrame</argument>)</argument_list></macro><empty_stmt pos:line="372" pos:column="73">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="374" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="375" pos:column="1">// Restore state.</comment>

<macro><name pos:line="377" pos:column="1">MSOAPI_</name><argument_list pos:line="377" pos:column="8">(<argument pos:line="377" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="377" pos:column="25">FRestoreDlg</name><argument_list pos:line="377" pos:column="36">(<argument><expr><name pos:line="377" pos:column="37">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="378" pos:column="1">MSOAPI_</name><argument_list pos:line="378" pos:column="8">(<argument pos:line="378" pos:column="9">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="378" pos:column="25">FRestoreTmc</name><argument_list pos:line="378" pos:column="36">(<argument><expr><name pos:line="378" pos:column="37">TMC</name></expr></argument>, <argument><expr><name pos:line="378" pos:column="42">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="381" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="382" pos:column="1">// EB/EL Support.</comment>

<macro><name pos:line="384" pos:column="1">MSOAPIX_</name><argument_list pos:line="384" pos:column="9">(<argument pos:line="384" pos:column="10">BOOL_SDM</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="384" pos:column="25">FSetNoninteractive</name><argument_list pos:line="384" pos:column="43">(<argument><expr><name pos:line="384" pos:column="44">UINT_SDM</name></expr></argument>, <argument><expr><name pos:line="384" pos:column="54">TMC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:line="386" pos:column="1">#<cpp:directive pos:line="386" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" format="doxygen" pos:line="386" pos:column="8">//!NO_SDM</comment>


<comment type="line" format="doxygen" pos:line="389" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="390" pos:column="1">// Common interface to button drawing code.</comment>

<macro><name pos:line="392" pos:column="1">MSOAPIX_</name><argument_list pos:line="392" pos:column="9">(<argument pos:line="392" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="392" pos:column="17">SdmBeginPaint</name><argument_list pos:line="392" pos:column="30">(<argument><expr><name pos:line="392" pos:column="31">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="393" pos:column="1">MSOAPIX_</name><argument_list pos:line="393" pos:column="9">(<argument pos:line="393" pos:column="10">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="393" pos:column="17">SdmEndPaint</name><argument_list pos:line="393" pos:column="28">(<argument><expr><name pos:line="393" pos:column="29">VOID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="395" pos:column="1">// Draw a control's focus rect in SDM's own special way.</comment>
<macro><name pos:line="396" pos:column="1">MSOAPI_</name><argument_list pos:line="396" pos:column="8">(<argument pos:line="396" pos:column="9">VOID</argument>)</argument_list></macro> <macro><name pos:line="396" pos:column="15">DrawSDMFocusRect</name><argument_list pos:line="396" pos:column="31">(<argument pos:line="396" pos:column="32">HDC hdc</argument>, <argument pos:line="396" pos:column="41">RECT *pRect</argument>, <argument pos:line="396" pos:column="54">COLORREF crFore</argument>, <argument pos:line="396" pos:column="71">COLORREF crBkg</argument>)</argument_list></macro><empty_stmt pos:line="396" pos:column="86">;</empty_stmt>
<macro><name pos:line="397" pos:column="1">MSOAPI_</name><argument_list pos:line="397" pos:column="8">(<argument pos:line="397" pos:column="9">VOID</argument>)</argument_list></macro>	<expr_stmt><expr><call><name pos:line="397" pos:column="17">InvertCaret</name><argument_list pos:line="397" pos:column="28">(<argument><expr><name pos:line="397" pos:column="29">HWND</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="35">HDC</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="40">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="48">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="56">XY_SDM</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="64">XY_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="398" pos:column="1">MSOAPI_</name><argument_list pos:line="398" pos:column="8">(<argument pos:line="398" pos:column="9">HANDLE</argument>)</argument_list></macro> <macro><name pos:line="398" pos:column="17">MsoHdibFromHbitmap</name><argument_list pos:line="398" pos:column="35">(<argument pos:line="398" pos:column="36">HBITMAP hbmp</argument>, <argument pos:line="398" pos:column="50">HDC hdc</argument>, <argument pos:line="398" pos:column="59">HPALETTE hpal</argument>)</argument_list></macro><empty_stmt pos:line="398" pos:column="73">;</empty_stmt>

<comment type="line" pos:line="400" pos:column="1">// Draw the assistant button face</comment>
<function_decl><type><name pos:line="401" pos:column="1">UCBK_SDM</name> <name pos:line="401" pos:column="10">SDM_CALLBACK</name></type> <name pos:line="401" pos:column="23">MsoDrawAsstBtn</name><parameter_list pos:line="401" pos:column="37">(<param><decl><type><name pos:line="401" pos:column="38">TMM</name></type> <name pos:line="401" pos:column="42">tmm</name></decl></param>, <param><decl><type><name pos:line="401" pos:column="47">RDS</name> <type:modifier pos:line="401" pos:column="51">*</type:modifier></type><name pos:line="401" pos:column="52">prds</name></decl></param>, <param><decl><type><name pos:line="401" pos:column="58">FTMS</name></type> <name pos:line="401" pos:column="63">ftmsNew</name></decl></param>,
									 <param><decl><type><name pos:line="402" pos:column="74">FTMS</name></type> <name pos:line="402" pos:column="79">ftmsOld</name></decl></param>, <param><decl><type><name pos:line="402" pos:column="88">TMC</name></type> <name pos:line="402" pos:column="92">tmc</name></decl></param>, <param><decl><type><name pos:line="402" pos:column="97">UCBK_SDM</name></type> <name pos:line="402" pos:column="106">wParam</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name pos:line="404" pos:column="1">UCBK_SDM</name> <name pos:line="404" pos:column="10">SDM_CALLBACK</name></type>	<name pos:line="404" pos:column="25">WRenderPush</name><parameter_list pos:line="404" pos:column="36">(<param><decl><type><name pos:line="404" pos:column="37">TMM</name></type></decl></param>, <param><decl><type><name pos:line="404" pos:column="42">RDS</name> <type:modifier pos:line="404" pos:column="46">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="404" pos:column="49">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="404" pos:column="55">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="404" pos:column="61">TMC</name></type></decl></param>, <param><decl><type><name pos:line="404" pos:column="66">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="405" pos:column="1">UCBK_SDM</name> <name pos:line="405" pos:column="10">SDM_CALLBACK</name></type>	<name pos:line="405" pos:column="25">WRenderWorkPanePush</name><parameter_list pos:line="405" pos:column="44">(<param><decl><type><name pos:line="405" pos:column="45">TMM</name></type> <name pos:line="405" pos:column="49">tmm</name></decl></param>, <param><decl><type><name pos:line="405" pos:column="54">RDS</name> <type:modifier pos:line="405" pos:column="58">*</type:modifier></type><name pos:line="405" pos:column="59">prds</name></decl></param>, <param><decl><type><name pos:line="405" pos:column="65">FTMS</name></type> <name pos:line="405" pos:column="70">ftmsNew</name></decl></param>, <param><decl><type><name pos:line="405" pos:column="79">FTMS</name></type> <name pos:line="405" pos:column="84">ftmsOld</name></decl></param>, <param><decl><type><name pos:line="405" pos:column="93">TMC</name></type> <name pos:line="405" pos:column="97">tmc</name></decl></param>, <param><decl><type><name pos:line="405" pos:column="102">UCBK_SDM</name></type> <name pos:line="405" pos:column="111">wParam</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="406" pos:column="1">UCBK_SDM</name> <name pos:line="406" pos:column="10">SDM_CALLBACK</name></type>	<name pos:line="406" pos:column="25">WRenderStaticText</name><parameter_list pos:line="406" pos:column="42">(<param><decl><type><name pos:line="406" pos:column="43">TMM</name></type></decl></param>, <param><decl><type><name pos:line="406" pos:column="48">RDS</name> <type:modifier pos:line="406" pos:column="52">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="406" pos:column="55">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="406" pos:column="61">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="406" pos:column="67">TMC</name></type></decl></param>, <param><decl><type><name pos:line="406" pos:column="72">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>

<macro><name pos:line="408" pos:column="1">MSOAPI_</name><argument_list pos:line="408" pos:column="8">(<argument pos:line="408" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="408" pos:column="15">MsoMeasureSDMWorkPanePush</name><argument_list pos:line="408" pos:column="40">(<argument pos:line="408" pos:column="41">TMC tmc</argument>, <argument pos:line="408" pos:column="50">int *pWidth</argument>, <argument pos:line="408" pos:column="63">int *pHeight</argument>)</argument_list></macro><empty_stmt pos:line="408" pos:column="76">;</empty_stmt>

<comment type="line" pos:line="410" pos:column="1">// t-tomker: these functions are necessary for the Dialog Editor, but evidently</comment>
<comment type="line" pos:line="411" pos:column="1">// nothing else, so they should only be exported in the internal (debug) library</comment>
<cpp:ifdef pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">ifdef</cpp:directive> <name pos:line="412" pos:column="8">VSMSODEBUG</name></cpp:ifdef>
	<macro><name pos:line="413" pos:column="9">MSOAPI_</name><argument_list pos:line="413" pos:column="16">(<argument pos:line="413" pos:column="17">UCBK_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="413" pos:column="27">SDM_CALLBACK</name></type>	<name pos:line="413" pos:column="41">WRenderRadio</name><parameter_list pos:line="413" pos:column="53">(<param><decl><type><name pos:line="413" pos:column="54">TMM</name></type></decl></param>, <param><decl><type><name pos:line="413" pos:column="59">RDS</name> <type:modifier pos:line="413" pos:column="63">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="413" pos:column="66">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="413" pos:column="72">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="413" pos:column="78">TMC</name></type></decl></param>, <param><decl><type><name pos:line="413" pos:column="83">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<macro><name pos:line="414" pos:column="9">MSOAPI_</name><argument_list pos:line="414" pos:column="16">(<argument pos:line="414" pos:column="17">UCBK_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="414" pos:column="27">SDM_CALLBACK</name></type>	<name pos:line="414" pos:column="41">WRenderCheck</name><parameter_list pos:line="414" pos:column="53">(<param><decl><type><name pos:line="414" pos:column="54">TMM</name></type></decl></param>, <param><decl><type><name pos:line="414" pos:column="59">RDS</name> <type:modifier pos:line="414" pos:column="63">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="414" pos:column="66">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="414" pos:column="72">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="414" pos:column="78">TMC</name></type></decl></param>, <param><decl><type><name pos:line="414" pos:column="83">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<macro><name pos:line="415" pos:column="9">MSOAPI_</name><argument_list pos:line="415" pos:column="16">(<argument pos:line="415" pos:column="17">UCBK_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="415" pos:column="27">SDM_CALLBACK</name></type>	<name pos:line="415" pos:column="41">WRenderGroup</name><parameter_list pos:line="415" pos:column="53">(<param><decl><type><name pos:line="415" pos:column="54">TMM</name></type></decl></param>, <param><decl><type><name pos:line="415" pos:column="59">RDS</name> <type:modifier pos:line="415" pos:column="63">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="415" pos:column="66">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="415" pos:column="72">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="415" pos:column="78">TMC</name></type></decl></param>, <param><decl><type><name pos:line="415" pos:column="83">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:else pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">else</cpp:directive></cpp:else>
	<function_decl><type><name pos:line="417" pos:column="9">UCBK_SDM</name> <name pos:line="417" pos:column="18">SDM_CALLBACK</name></type>	<name pos:line="417" pos:column="33">WRenderRadio</name><parameter_list pos:line="417" pos:column="45">(<param><decl><type><name pos:line="417" pos:column="46">TMM</name></type></decl></param>, <param><decl><type><name pos:line="417" pos:column="51">RDS</name> <type:modifier pos:line="417" pos:column="55">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="417" pos:column="58">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="417" pos:column="64">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="417" pos:column="70">TMC</name></type></decl></param>, <param><decl><type><name pos:line="417" pos:column="75">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="418" pos:column="9">UCBK_SDM</name> <name pos:line="418" pos:column="18">SDM_CALLBACK</name></type>	<name pos:line="418" pos:column="33">WRenderCheck</name><parameter_list pos:line="418" pos:column="45">(<param><decl><type><name pos:line="418" pos:column="46">TMM</name></type></decl></param>, <param><decl><type><name pos:line="418" pos:column="51">RDS</name> <type:modifier pos:line="418" pos:column="55">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="418" pos:column="58">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="418" pos:column="64">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="418" pos:column="70">TMC</name></type></decl></param>, <param><decl><type><name pos:line="418" pos:column="75">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="419" pos:column="9">UCBK_SDM</name> <name pos:line="419" pos:column="18">SDM_CALLBACK</name></type>	<name pos:line="419" pos:column="33">WRenderGroup</name><parameter_list pos:line="419" pos:column="45">(<param><decl><type><name pos:line="419" pos:column="46">TMM</name></type></decl></param>, <param><decl><type><name pos:line="419" pos:column="51">RDS</name> <type:modifier pos:line="419" pos:column="55">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="419" pos:column="58">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="419" pos:column="64">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="419" pos:column="70">TMC</name></type></decl></param>, <param><decl><type><name pos:line="419" pos:column="75">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">endif</cpp:directive></cpp:endif>

<macro><name pos:line="422" pos:column="1">MSOAPIDBG_</name><argument_list pos:line="422" pos:column="11">(<argument pos:line="422" pos:column="12">UCBK_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="422" pos:column="22">SDM_CALLBACK</name></type>	<name pos:line="422" pos:column="41">WRenderDropIcon</name><parameter_list pos:line="422" pos:column="56">(<param><decl><type><name pos:line="422" pos:column="57">TMM</name></type></decl></param>, <param><decl><type><name pos:line="422" pos:column="62">RDS</name> <type:modifier pos:line="422" pos:column="66">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="422" pos:column="69">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="422" pos:column="75">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="422" pos:column="81">TMC</name></type></decl></param>, <param><decl><type><name pos:line="422" pos:column="86">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<macro><name pos:line="423" pos:column="1">MSOAPIMX_</name><argument_list pos:line="423" pos:column="10">(<argument pos:line="423" pos:column="11">VOID</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="423" pos:column="17">CalcDropIconRecGccRec</name><argument_list pos:line="423" pos:column="38">( <argument><expr><name pos:line="423" pos:column="40">REC</name> <op:operator pos:line="423" pos:column="44">*</op:operator><name pos:line="423" pos:column="45">oprecIcon</name></expr></argument>, <argument><expr><name pos:line="423" pos:column="56">REC</name> <op:operator pos:line="423" pos:column="60">*</op:operator><name pos:line="423" pos:column="61">oprecGcc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="424" pos:column="1">MSOAPIXX_</name><argument_list pos:line="424" pos:column="10">(<argument pos:line="424" pos:column="11">VOID</argument>)</argument_list></macro> <macro><name pos:line="424" pos:column="17">SetPictureDropped</name><argument_list pos:line="424" pos:column="34">(<argument pos:line="424" pos:column="35">BOOL fDropped</argument>)</argument_list></macro><empty_stmt pos:line="424" pos:column="49">;</empty_stmt>

<macro><name pos:line="426" pos:column="1">MSOAPI_</name><argument_list pos:line="426" pos:column="8">(<argument pos:line="426" pos:column="9">HFONT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="426" pos:column="16">HSdmDlgFontNormal</name><argument_list pos:line="426" pos:column="33">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="426" pos:column="37">//in dmfont.cpp</comment>
<macro><name pos:line="427" pos:column="1">MSOAPI_</name><argument_list pos:line="427" pos:column="8">(<argument pos:line="427" pos:column="9">HFONT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="427" pos:column="16">GetHFontSdm</name><argument_list pos:line="427" pos:column="27">( <argument><expr><name pos:line="427" pos:column="29">void</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="428" pos:column="1">MSOAPI_</name><argument_list pos:line="428" pos:column="8">(<argument pos:line="428" pos:column="9">HFONT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="428" pos:column="16">GetHFontLightSdm</name><argument_list pos:line="428" pos:column="32">( <argument><expr><name pos:line="428" pos:column="34">void</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="429" pos:column="1">MSOAPI_</name><argument_list pos:line="429" pos:column="8">(<argument pos:line="429" pos:column="9">HFONT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="429" pos:column="16">GetHFontBoldSdm</name><argument_list pos:line="429" pos:column="31">( <argument><expr><name pos:line="429" pos:column="33">void</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<comment type="line" pos:line="432" pos:column="1">// Sdm Toolbar-like Button flags - see MsoWRenderAsTbButton()</comment>
<cpp:define pos:line="433" pos:column="1">#<cpp:directive pos:line="433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="433" pos:column="9">msogrfstbNil</name></cpp:macro>				<cpp:value pos:line="433" pos:column="49">0x00000000</cpp:value></cpp:define>
<cpp:define pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="434" pos:column="9">msofstbDrawDropdown</name></cpp:macro>	<cpp:value pos:line="434" pos:column="33">0x00000001</cpp:value></cpp:define> <comment type="line" pos:line="434" pos:column="44">// Should we draw a dropdown arrow?</comment>
<cpp:define pos:line="435" pos:column="1">#<cpp:directive pos:line="435" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="435" pos:column="9">msofstbSplitDepressed</name></cpp:macro>	<cpp:value pos:line="435" pos:column="33">0x00000002</cpp:value></cpp:define> <comment type="line" pos:line="435" pos:column="44">// Is the dropdown dropped?</comment>
<cpp:define pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="436" pos:column="9">msofstbNoBorder</name></cpp:macro>			<cpp:value pos:line="436" pos:column="41">0x00000004</cpp:value></cpp:define> <comment type="line" pos:line="436" pos:column="52">// Draw no border (hyperlinks)</comment>
<cpp:define pos:line="437" pos:column="1">#<cpp:directive pos:line="437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="437" pos:column="9">msofstbHyperlink</name></cpp:macro>		<cpp:value pos:line="437" pos:column="41">0x00000008</cpp:value></cpp:define> <comment type="line" pos:line="437" pos:column="52">// Draw as hyperlink - underlined blue</comment>
<cpp:define pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="438" pos:column="9">msofstbNoCenter</name></cpp:macro>			<cpp:value pos:line="438" pos:column="41">0x00000010</cpp:value></cpp:define> <comment type="line" pos:line="438" pos:column="52">// Left justify instead of centering</comment>
<cpp:define pos:line="439" pos:column="1">#<cpp:directive pos:line="439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="439" pos:column="9">msofstbWPIconTextGap</name></cpp:macro>	<cpp:value pos:line="439" pos:column="33">0x00000020</cpp:value></cpp:define> <comment type="line" pos:line="439" pos:column="44">// Uses ICON_TEXT_GAP spacing in drawing icons with text</comment>

<macro><name pos:line="441" pos:column="1">MSOAPI_</name><argument_list pos:line="441" pos:column="8">(<argument pos:line="441" pos:column="9">UCBK_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="441" pos:column="19">SDM_CALLBACK</name></type> <name pos:line="441" pos:column="32">MsoWRenderAsTbButton</name><parameter_list pos:line="441" pos:column="52">(
	<param><decl><type><name pos:line="442" pos:column="9">TMM</name></type>			<name pos:line="442" pos:column="33">tmm</name></decl></param>,				<comment type="line" pos:line="442" pos:column="65">// Passed by SDM</comment>
	<param><decl><type><name pos:line="443" pos:column="9">RDS</name>			<type:modifier pos:line="443" pos:column="33">*</type:modifier></type><name pos:line="443" pos:column="34">prds</name></decl></param>,				<comment type="line" pos:line="443" pos:column="65">// Passed by SDM</comment>
	<param><decl><type><name pos:line="444" pos:column="9">FTMS</name></type>		<name pos:line="444" pos:column="25">ftmsNew</name></decl></param>,			<comment type="line" pos:line="444" pos:column="57">// Passed by SDM</comment>
	<param><decl><type><name pos:line="445" pos:column="9">FTMS</name></type>		<name pos:line="445" pos:column="25">ftmsOld</name></decl></param>,			<comment type="line" pos:line="445" pos:column="57">// Passed by SDM</comment>
	<param><decl><type><name pos:line="446" pos:column="9">TMC</name></type>			<name pos:line="446" pos:column="33">tmc</name></decl></param>,				<comment type="line" pos:line="446" pos:column="65">// Passed by SDM</comment>
	<param><decl><type><name pos:line="447" pos:column="9">UCBK_SDM</name></type>	<name pos:line="447" pos:column="25">jc</name></decl></param>,					<comment type="line" pos:line="447" pos:column="65">// Passed by SDM</comment>
	<param><decl><type><name pos:line="448" pos:column="9">int</name></type>			<name pos:line="448" pos:column="33">tcid</name></decl></param>,				<comment type="line" pos:line="448" pos:column="65">// TCID of icon: msotcidNil for none</comment>
	<param><decl><type><name pos:line="449" pos:column="9">HANDLE</name></type>  	<name pos:line="449" pos:column="25">hdibCustom</name></decl></param>,			<comment type="line" pos:line="449" pos:column="57">// handle to bitmap icon (HICON, BITMAPINFO, etc)</comment>
	<param><decl><type><name pos:line="450" pos:column="9">HANDLE</name></type>  	<name pos:line="450" pos:column="25">hmaskCustom</name></decl></param>,		<comment type="line" pos:line="450" pos:column="49">// handle to bitmap icon mask (HICON, BITMAPINFO, etc)</comment>
	<param><decl><type><name pos:line="451" pos:column="9">WCHAR</name>		<type:modifier pos:line="451" pos:column="25">*</type:modifier></type><name pos:line="451" pos:column="26">wtzLabel</name></decl></param>,			<comment type="line" pos:line="451" pos:column="57">// Button text</comment>
	<param><decl><type><name pos:line="452" pos:column="9">DWORD</name></type>		<name pos:line="452" pos:column="25">grfstb</name></decl></param>)</parameter_list>;</function_decl>			<comment type="line" pos:line="452" pos:column="57">// see msofstb flags</comment>

<comment type="line" pos:line="454" pos:column="1">// Sets the icon for the given pushbutton control</comment>
<macro><name pos:line="455" pos:column="1">MSOAPI_</name><argument_list pos:line="455" pos:column="8">(<argument pos:line="455" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="455" pos:column="15">MsoFSetTmcIcon</name><argument_list pos:line="455" pos:column="29">(<argument pos:line="455" pos:column="30">TMC tmc</argument>, <argument pos:line="455" pos:column="39">int msotcid</argument>, <argument pos:line="455" pos:column="52">BOOL fNoTooltipSet</argument>)</argument_list></macro><empty_stmt pos:line="455" pos:column="71">;</empty_stmt>

<cpp:ifdef pos:line="457" pos:column="1">#<cpp:directive pos:line="457" pos:column="2">ifdef</cpp:directive> <name pos:line="457" pos:column="8">IME32</name></cpp:ifdef>
<macro><name pos:line="458" pos:column="1">MSOAPIX_</name><argument_list pos:line="458" pos:column="9">(<argument pos:line="458" pos:column="10">VOID</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="458" pos:column="16">SdmRichEditCtrlIME</name><argument_list pos:line="458" pos:column="34">(<argument><expr><name pos:line="458" pos:column="35">TMC</name></expr></argument>, <argument><expr><name pos:line="458" pos:column="40">HWND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="459" pos:column="1">MSOAPIX_</name><argument_list pos:line="459" pos:column="9">(<argument pos:line="459" pos:column="10">VOID</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="459" pos:column="16">SdmSetImeHwnd</name><argument_list pos:line="459" pos:column="29">(<argument><expr><name pos:line="459" pos:column="30">HWND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="460" pos:column="1">MSOAPIX_</name><argument_list pos:line="460" pos:column="9">(<argument pos:line="460" pos:column="10">VOID</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="460" pos:column="16">SetImeOption</name><argument_list pos:line="460" pos:column="28">(<argument><expr><name pos:line="460" pos:column="29">BOOL_SDM</name></expr></argument>, <argument><expr><name pos:line="460" pos:column="39">BOOL_SDM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="461" pos:column="1">#<cpp:directive pos:line="461" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="461" pos:column="8">//IME32</comment>
</unit>
