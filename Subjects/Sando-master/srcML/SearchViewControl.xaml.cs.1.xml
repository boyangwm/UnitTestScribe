<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\View\SearchViewControl.xaml.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Collections</name><op:operator pos:line="4" pos:column="25">.</op:operator><name pos:line="4" pos:column="26">Specialized</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Linq</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Threading</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Windows</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Windows</name><op:operator pos:line="10" pos:column="21">.</op:operator><name pos:line="10" pos:column="22">Controls</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">System</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">Windows</name><op:operator pos:line="11" pos:column="21">.</op:operator><name pos:line="11" pos:column="22">Input</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">ExtensionContracts</name><op:operator pos:line="12" pos:column="31">.</op:operator><name pos:line="12" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">ExtensionContracts</name><op:operator pos:line="13" pos:column="31">.</op:operator><name pos:line="13" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">ExtensionContracts</name><op:operator pos:line="14" pos:column="31">.</op:operator><name pos:line="14" pos:column="32">SearchContracts</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Sando</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">Indexer</name><op:operator pos:line="15" pos:column="20">.</op:operator><name pos:line="15" pos:column="21">Searching</name><op:operator pos:line="15" pos:column="30">.</op:operator><name pos:line="15" pos:column="31">Criteria</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Sando</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">Translation</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Sando</name><op:operator pos:line="17" pos:column="12">.</op:operator><name pos:line="17" pos:column="13">Recommender</name></name>;</using>
<using pos:line="18" pos:column="1">using <name pos:line="18" pos:column="7">FocusTestVC</name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">Sando</name><op:operator pos:line="19" pos:column="12">.</op:operator><name pos:line="19" pos:column="13">UI</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">View</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Search</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">Sando</name><op:operator pos:line="20" pos:column="12">.</op:operator><name pos:line="20" pos:column="13">UI</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">Actions</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">Sando</name><op:operator pos:line="21" pos:column="12">.</op:operator><name pos:line="21" pos:column="13">Core</name><op:operator pos:line="21" pos:column="17">.</op:operator><name pos:line="21" pos:column="18">Logging</name><op:operator pos:line="21" pos:column="25">.</op:operator><name pos:line="21" pos:column="26">Events</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">Sando</name><op:operator pos:line="22" pos:column="12">.</op:operator><name pos:line="22" pos:column="13">Indexer</name><op:operator pos:line="22" pos:column="20">.</op:operator><name pos:line="22" pos:column="21">Searching</name><op:operator pos:line="22" pos:column="30">.</op:operator><name pos:line="22" pos:column="31">Metrics</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">System</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">Text</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">System</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">Threading</name><op:operator pos:line="24" pos:column="23">.</op:operator><name pos:line="24" pos:column="24">Tasks</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">System</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">Collections</name><op:operator pos:line="25" pos:column="25">.</op:operator><name pos:line="25" pos:column="26">Concurrent</name></name>;</using>
<using pos:line="26" pos:column="1">using <name><name pos:line="26" pos:column="7">Sando</name><op:operator pos:line="26" pos:column="12">.</op:operator><name pos:line="26" pos:column="13">Core</name><op:operator pos:line="26" pos:column="17">.</op:operator><name pos:line="26" pos:column="18">Tools</name></name>;</using>
<using pos:line="27" pos:column="1">using <name><name pos:line="27" pos:column="7">Sando</name><op:operator pos:line="27" pos:column="12">.</op:operator><name pos:line="27" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="28" pos:column="1">using <name><name pos:line="28" pos:column="7">ABB</name><op:operator pos:line="28" pos:column="10">.</op:operator><name pos:line="28" pos:column="11">SrcML</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">VisualStudio</name><op:operator pos:line="28" pos:column="29">.</op:operator><name pos:line="28" pos:column="30">SrcMLService</name></name>;</using>
<using pos:line="29" pos:column="1">using <name><name pos:line="29" pos:column="7">System</name><op:operator pos:line="29" pos:column="13">.</op:operator><name pos:line="29" pos:column="14">IO</name></name>;</using>
<using pos:line="30" pos:column="1">using <name><name pos:line="30" pos:column="7">Microsoft</name><op:operator pos:line="30" pos:column="16">.</op:operator><name pos:line="30" pos:column="17">Practices</name><op:operator pos:line="30" pos:column="26">.</op:operator><name pos:line="30" pos:column="27">Unity</name></name>;</using>
<using pos:line="31" pos:column="1">using <name><name pos:line="31" pos:column="7">System</name><op:operator pos:line="31" pos:column="13">.</op:operator><name pos:line="31" pos:column="14">Windows</name><op:operator pos:line="31" pos:column="21">.</op:operator><name pos:line="31" pos:column="22">Controls</name><op:operator pos:line="31" pos:column="30">.</op:operator><name pos:line="31" pos:column="31">Primitives</name></name>;</using>
<using pos:line="32" pos:column="1">using <name><name pos:line="32" pos:column="7">System</name><op:operator pos:line="32" pos:column="13">.</op:operator><name pos:line="32" pos:column="14">Collections</name></name>;</using>
<using pos:line="33" pos:column="1">using <name><name pos:line="33" pos:column="7">System</name><op:operator pos:line="33" pos:column="13">.</op:operator><name pos:line="33" pos:column="14">Windows</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">Media</name></name>;</using>
<using pos:line="34" pos:column="1">using <name><name pos:line="34" pos:column="7">ABB</name><op:operator pos:line="34" pos:column="10">.</op:operator><name pos:line="34" pos:column="11">SrcML</name></name>;</using>

<namespace pos:line="36" pos:column="1">namespace <name><name pos:line="36" pos:column="11">Sando</name><op:operator pos:line="36" pos:column="16">.</op:operator><name pos:line="36" pos:column="17">UI</name><op:operator pos:line="36" pos:column="19">.</op:operator><name pos:line="36" pos:column="20">View</name></name>
<block pos:line="37" pos:column="1">{
    <class><specifier pos:line="38" pos:column="5">public</specifier> <specifier pos:line="38" pos:column="12">partial</specifier> class <name pos:line="38" pos:column="26">SearchViewControl</name> <super pos:line="38" pos:column="44">: <name pos:line="38" pos:column="46">ISearchResultListener</name></super>
    <block pos:line="39" pos:column="5">{
        <constructor><specifier pos:line="40" pos:column="9">public</specifier> <name pos:line="40" pos:column="16">SearchViewControl</name><parameter_list pos:line="40" pos:column="33">()</parameter_list>
        <block pos:line="41" pos:column="9">{
            <expr_stmt><expr><name pos:line="42" pos:column="13">DataContext</name> <op:operator pos:line="42" pos:column="25">=</op:operator> <name pos:line="42" pos:column="27">this</name></expr>;</expr_stmt> <comment type="line" pos:line="42" pos:column="33">//so we can show results</comment>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">InitializeComponent</name><argument_list pos:line="43" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="45" pos:column="13">_searchManager</name> <op:operator pos:line="45" pos:column="28">=</op:operator> <call><name><name pos:line="45" pos:column="30">SearchManagerFactory</name><op:operator pos:line="45" pos:column="50">.</op:operator><name pos:line="45" pos:column="51">GetUserInterfaceSearchManager</name></name><argument_list pos:line="45" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">_searchManager</name><op:operator pos:line="46" pos:column="27">.</op:operator><name pos:line="46" pos:column="28">AddListener</name></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">SearchResults</name> <op:operator pos:line="47" pos:column="27">=</op:operator> <op:operator pos:line="47" pos:column="29">new</op:operator> <call><name><name pos:line="47" pos:column="33">ObservableCollection</name><argument_list pos:line="47" pos:column="53">&lt;<argument><name pos:line="47" pos:column="54">CodeSearchResult</name></argument>&gt;</argument_list></name><argument_list pos:line="47" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="48" pos:column="13">MonitoredFiles</name> <op:operator pos:line="48" pos:column="28">=</op:operator> <op:operator pos:line="48" pos:column="30">new</op:operator> <call><name><name pos:line="48" pos:column="34">ObservableCollection</name><argument_list pos:line="48" pos:column="54">&lt;<argument><name pos:line="48" pos:column="55">CheckedListItem</name></argument>&gt;</argument_list></name><argument_list pos:line="48" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="49" pos:column="13">//SearchCriteria = new SimpleSearchCriteria();</comment>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">InitAccessLevels</name><argument_list pos:line="50" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">InitProgramElements</name><argument_list pos:line="51" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><op:operator pos:line="53" pos:column="13">(</op:operator><op:operator pos:line="53" pos:column="14">(</op:operator><name pos:line="53" pos:column="15">INotifyCollectionChanged</name><op:operator pos:line="53" pos:column="39">)</op:operator><name><name pos:line="53" pos:column="40">searchResultListbox</name><op:operator pos:line="53" pos:column="59">.</op:operator><name pos:line="53" pos:column="60">Items</name></name><op:operator pos:line="53" pos:column="65">)</op:operator><op:operator pos:line="53" pos:column="66">.</op:operator><name pos:line="53" pos:column="67">CollectionChanged</name> <op:operator pos:line="53" pos:column="85">+=</op:operator> <name pos:line="53" pos:column="88">SelectFirstResult</name></expr>;</expr_stmt>
            <expr_stmt><expr><op:operator pos:line="54" pos:column="13">(</op:operator><op:operator pos:line="54" pos:column="14">(</op:operator><name pos:line="54" pos:column="15">INotifyCollectionChanged</name><op:operator pos:line="54" pos:column="39">)</op:operator><name><name pos:line="54" pos:column="40">searchResultListbox</name><op:operator pos:line="54" pos:column="59">.</op:operator><name pos:line="54" pos:column="60">Items</name></name><op:operator pos:line="54" pos:column="65">)</op:operator><op:operator pos:line="54" pos:column="66">.</op:operator><name pos:line="54" pos:column="67">CollectionChanged</name> <op:operator pos:line="54" pos:column="85">+=</op:operator> <name pos:line="54" pos:column="88">ScrollToTop</name></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="56" pos:column="13">SearchStatus</name> <op:operator pos:line="56" pos:column="26">=</op:operator> <lit:literal type="string" pos:line="56" pos:column="28">"Enter search terms."</lit:literal></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="58" pos:column="13">_recommender</name> <op:operator pos:line="58" pos:column="26">=</op:operator> <op:operator pos:line="58" pos:column="28">new</op:operator> <call><name pos:line="58" pos:column="32">QueryRecommender</name><argument_list pos:line="58" pos:column="48">()</argument_list></call></expr>;</expr_stmt>            
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">ServiceLocator</name><op:operator pos:line="59" pos:column="27">.</op:operator><name><name pos:line="59" pos:column="28">RegisterInstance</name><argument_list pos:line="59" pos:column="44">&lt;<argument><name pos:line="59" pos:column="45">QueryRecommender</name></argument>&gt;</argument_list></name></name><argument_list pos:line="59" pos:column="62">(<argument><expr><name pos:line="59" pos:column="63">_recommender</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">ServiceLocator</name><op:operator pos:line="60" pos:column="27">.</op:operator><name><name pos:line="60" pos:column="28">RegisterInstance</name><argument_list pos:line="60" pos:column="44">&lt;<argument><name pos:line="60" pos:column="45">SearchViewControl</name></argument>&gt;</argument_list></name></name><argument_list pos:line="60" pos:column="63">(<argument><expr><name pos:line="60" pos:column="64">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">OpenSolutionPaths</name> <op:operator pos:line="61" pos:column="31">=</op:operator> <name pos:line="61" pos:column="33">DefaultOpenSolutionMessage</name></expr>;</expr_stmt>
        }</block></constructor>

     
        <decl_stmt><decl><type><specifier pos:line="65" pos:column="9">public</specifier> <specifier pos:line="65" pos:column="16">static</specifier> <name pos:line="65" pos:column="23">string</name></type> <name pos:line="65" pos:column="30">DefaultOpenSolutionMessage</name> <init pos:line="65" pos:column="57">=  <expr><lit:literal type="string" pos:line="65" pos:column="60">"&lt;open solution to begin searching&gt;"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="66" pos:column="9">public</specifier> <specifier pos:line="66" pos:column="16">static</specifier> <name pos:line="66" pos:column="23">string</name></type> <name pos:line="66" pos:column="30">PleaseAddDirectoriesMessage</name> <init pos:line="66" pos:column="58">= <expr><lit:literal type="string" pos:line="66" pos:column="60">"&lt;add folders to begin indexing!&gt;"</lit:literal></expr></init></decl>;</decl_stmt>
        

        <decl_stmt><decl><type><specifier pos:line="69" pos:column="9">public</specifier> <name><name pos:line="69" pos:column="16">ObservableCollection</name><argument_list pos:line="69" pos:column="36">&lt;<argument><name pos:line="69" pos:column="37">AccessWrapper</name></argument>&gt;</argument_list></name></type> <name pos:line="69" pos:column="52">AccessLevels</name>
        <block pos:line="70" pos:column="9">{
            <function><name pos:line="71" pos:column="13">get</name> <block pos:line="71" pos:column="17">{ <return pos:line="71" pos:column="19">return <expr><op:operator pos:line="71" pos:column="26">(</op:operator><name><name pos:line="71" pos:column="27">ObservableCollection</name><argument_list pos:line="71" pos:column="47">&lt;<argument><name pos:line="71" pos:column="48">AccessWrapper</name></argument>&gt;</argument_list></name><op:operator pos:line="71" pos:column="62">)</op:operator> <call><name pos:line="71" pos:column="64">GetValue</name><argument_list pos:line="71" pos:column="72">(<argument><expr><name pos:line="71" pos:column="73">AccessLevelsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="72" pos:column="13">set</name> <block pos:line="72" pos:column="17">{ <expr_stmt><expr><call><name pos:line="72" pos:column="19">SetValue</name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">AccessLevelsProperty</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="50">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="76" pos:column="9">public</specifier> <name><name pos:line="76" pos:column="16">ObservableCollection</name><argument_list pos:line="76" pos:column="36">&lt;<argument><name pos:line="76" pos:column="37">ProgramElementWrapper</name></argument>&gt;</argument_list></name></type> <name pos:line="76" pos:column="60">ProgramElements</name>
        <block pos:line="77" pos:column="9">{
            <function><name pos:line="78" pos:column="13">get</name> <block pos:line="78" pos:column="17">{ <return pos:line="78" pos:column="19">return <expr><op:operator pos:line="78" pos:column="26">(</op:operator><name><name pos:line="78" pos:column="27">ObservableCollection</name><argument_list pos:line="78" pos:column="47">&lt;<argument><name pos:line="78" pos:column="48">ProgramElementWrapper</name></argument>&gt;</argument_list></name><op:operator pos:line="78" pos:column="70">)</op:operator> <call><name pos:line="78" pos:column="72">GetValue</name><argument_list pos:line="78" pos:column="80">(<argument><expr><name pos:line="78" pos:column="81">ProgramElementsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="79" pos:column="13">set</name> <block pos:line="79" pos:column="17">{ <expr_stmt><expr><call><name pos:line="79" pos:column="19">SetValue</name><argument_list pos:line="79" pos:column="27">(<argument><expr><name pos:line="79" pos:column="28">ProgramElementsProperty</name></expr></argument>, <argument><expr><name pos:line="79" pos:column="53">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="82" pos:column="9">public</specifier> <name><name pos:line="82" pos:column="16">ObservableCollection</name><argument_list pos:line="82" pos:column="36">&lt;<argument><name pos:line="82" pos:column="37">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="82" pos:column="55">SearchResults</name>
        <block pos:line="83" pos:column="9">{
            <function><name pos:line="84" pos:column="13">get</name> <block pos:line="84" pos:column="17">{ <return pos:line="84" pos:column="19">return <expr><op:operator pos:line="84" pos:column="26">(</op:operator><name><name pos:line="84" pos:column="27">ObservableCollection</name><argument_list pos:line="84" pos:column="47">&lt;<argument><name pos:line="84" pos:column="48">CodeSearchResult</name></argument>&gt;</argument_list></name><op:operator pos:line="84" pos:column="65">)</op:operator> <call><name pos:line="84" pos:column="67">GetValue</name><argument_list pos:line="84" pos:column="75">(<argument><expr><name pos:line="84" pos:column="76">SearchResultsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="85" pos:column="13">set</name> <block pos:line="85" pos:column="17">{ <expr_stmt><expr><call><name pos:line="85" pos:column="19">SetValue</name><argument_list pos:line="85" pos:column="27">(<argument><expr><name pos:line="85" pos:column="28">SearchResultsProperty</name></expr></argument>, <argument><expr><name pos:line="85" pos:column="51">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="88" pos:column="9">public</specifier> <name><name pos:line="88" pos:column="16">ObservableCollection</name><argument_list pos:line="88" pos:column="36">&lt;<argument><name pos:line="88" pos:column="37">CheckedListItem</name></argument>&gt;</argument_list></name></type> <name pos:line="88" pos:column="54">MonitoredFiles</name>
        <block pos:line="89" pos:column="9">{
            <function><name pos:line="90" pos:column="13">get</name> <block pos:line="90" pos:column="17">{ <return pos:line="90" pos:column="19">return <expr><op:operator pos:line="90" pos:column="26">(</op:operator><name><name pos:line="90" pos:column="27">ObservableCollection</name><argument_list pos:line="90" pos:column="47">&lt;<argument><name pos:line="90" pos:column="48">CheckedListItem</name></argument>&gt;</argument_list></name><op:operator pos:line="90" pos:column="64">)</op:operator><call><name pos:line="90" pos:column="65">GetValue</name><argument_list pos:line="90" pos:column="73">(<argument><expr><name pos:line="90" pos:column="74">MonitoredFilesProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="91" pos:column="13">set</name> <block pos:line="91" pos:column="17">{ <expr_stmt><expr><call><name pos:line="91" pos:column="19">SetValue</name><argument_list pos:line="91" pos:column="27">(<argument><expr><name pos:line="91" pos:column="28">MonitoredFilesProperty</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="52">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="94" pos:column="9">public</specifier> <name pos:line="94" pos:column="16">string</name></type> <name pos:line="94" pos:column="23">SearchStatus</name>
        <block pos:line="95" pos:column="9">{
            <function><name pos:line="96" pos:column="13">get</name> <block pos:line="96" pos:column="17">{ <return pos:line="96" pos:column="19">return <expr><op:operator pos:line="96" pos:column="26">(</op:operator><name pos:line="96" pos:column="27">string</name><op:operator pos:line="96" pos:column="33">)</op:operator> <call><name pos:line="96" pos:column="35">GetValue</name><argument_list pos:line="96" pos:column="43">(<argument><expr><name pos:line="96" pos:column="44">SearchStatusProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><specifier pos:line="97" pos:column="13">private</specifier> <name pos:line="97" pos:column="21">set</name> <block pos:line="97" pos:column="25">{ <expr_stmt><expr><call><name pos:line="97" pos:column="27">SetValue</name><argument_list pos:line="97" pos:column="35">(<argument><expr><name pos:line="97" pos:column="36">SearchStatusProperty</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="58">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="100" pos:column="9">public</specifier> <name pos:line="100" pos:column="16">string</name></type> <name pos:line="100" pos:column="23">OpenSolutionPaths</name>
        <block pos:line="101" pos:column="9">{
            <function><name pos:line="102" pos:column="13">get</name> <block pos:line="102" pos:column="17">{ <return pos:line="102" pos:column="19">return <expr><op:operator pos:line="102" pos:column="26">(</op:operator><name pos:line="102" pos:column="27">string</name><op:operator pos:line="102" pos:column="33">)</op:operator><call><name pos:line="102" pos:column="34">GetValue</name><argument_list pos:line="102" pos:column="42">(<argument><expr><name pos:line="102" pos:column="43">OpenSolutionPathsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="103" pos:column="13">set</name> <block pos:line="103" pos:column="17">{ <expr_stmt><expr><call><name pos:line="103" pos:column="19">SetValue</name><argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">OpenSolutionPathsProperty</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="55">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

 
        <decl_stmt><decl><type><specifier pos:line="107" pos:column="9">public</specifier> <name pos:line="107" pos:column="16">string</name></type> <name pos:line="107" pos:column="23">SearchLabel</name>
        <block pos:line="108" pos:column="9">{
            <function><name pos:line="109" pos:column="13">get</name> <block pos:line="109" pos:column="17">{ <return pos:line="109" pos:column="19">return <expr><call><name><name pos:line="109" pos:column="26">Translator</name><op:operator pos:line="109" pos:column="36">.</op:operator><name pos:line="109" pos:column="37">GetTranslation</name></name><argument_list pos:line="109" pos:column="51">(<argument><expr><name><name pos:line="109" pos:column="52">TranslationCode</name><op:operator pos:line="109" pos:column="67">.</op:operator><name pos:line="109" pos:column="68">SearchLabel</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="112" pos:column="9">public</specifier> <name pos:line="112" pos:column="16">string</name></type> <name pos:line="112" pos:column="23">ExpandCollapseResultsLabel</name>
        <block pos:line="113" pos:column="9">{
            <function><name pos:line="114" pos:column="13">get</name> <block pos:line="114" pos:column="17">{ <return pos:line="114" pos:column="19">return <expr><call><name><name pos:line="114" pos:column="26">Translator</name><op:operator pos:line="114" pos:column="36">.</op:operator><name pos:line="114" pos:column="37">GetTranslation</name></name><argument_list pos:line="114" pos:column="51">(<argument><expr><name><name pos:line="114" pos:column="52">TranslationCode</name><op:operator pos:line="114" pos:column="67">.</op:operator><name pos:line="114" pos:column="68">ExpandResultsLabel</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="117" pos:column="9">public</specifier> <name pos:line="117" pos:column="16">string</name></type> <name pos:line="117" pos:column="23">ComboBoxItemCurrentDocument</name>
        <block pos:line="118" pos:column="9">{
            <function><name pos:line="119" pos:column="13">get</name> <block pos:line="119" pos:column="17">{ <return pos:line="119" pos:column="19">return <expr><call><name><name pos:line="119" pos:column="26">Translator</name><op:operator pos:line="119" pos:column="36">.</op:operator><name pos:line="119" pos:column="37">GetTranslation</name></name><argument_list pos:line="119" pos:column="51">(<argument><expr><name><name pos:line="119" pos:column="52">TranslationCode</name><op:operator pos:line="119" pos:column="67">.</op:operator><name pos:line="119" pos:column="68">ComboBoxItemCurrentDocument</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="122" pos:column="9">public</specifier> <name pos:line="122" pos:column="16">string</name></type> <name pos:line="122" pos:column="23">ComboBoxItemEntireSolution</name>
        <block pos:line="123" pos:column="9">{
            <function><name pos:line="124" pos:column="13">get</name> <block pos:line="124" pos:column="17">{ <return pos:line="124" pos:column="19">return <expr><call><name><name pos:line="124" pos:column="26">Translator</name><op:operator pos:line="124" pos:column="36">.</op:operator><name pos:line="124" pos:column="37">GetTranslation</name></name><argument_list pos:line="124" pos:column="51">(<argument><expr><name><name pos:line="124" pos:column="52">TranslationCode</name><op:operator pos:line="124" pos:column="67">.</op:operator><name pos:line="124" pos:column="68">ComboBoxItemEntireSolution</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="127" pos:column="9">private</specifier> <name pos:line="127" pos:column="17">void</name></type> <name pos:line="127" pos:column="22">searchBox_Loaded</name><parameter_list pos:line="127" pos:column="38">(<param><decl><type><name pos:line="127" pos:column="39">object</name></type> <name pos:line="127" pos:column="46">sender</name></decl></param>, <param><decl><type><name pos:line="127" pos:column="54">RoutedEventArgs</name></type> <name pos:line="127" pos:column="70">e</name></decl></param>)</parameter_list>
        <block pos:line="128" pos:column="9">{
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name pos:line="129" pos:column="17">searchBox</name> <op:operator pos:line="129" pos:column="27">!=</op:operator> <name pos:line="129" pos:column="30">null</name></expr>)</condition><then pos:line="129" pos:column="35">
            <block pos:line="130" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="131" pos:column="17">var</name></type> <name pos:line="131" pos:column="21">textBox</name> <init pos:line="131" pos:column="29">= <expr><call><name><name pos:line="131" pos:column="31">searchBox</name><op:operator pos:line="131" pos:column="40">.</op:operator><name pos:line="131" pos:column="41">Template</name><op:operator pos:line="131" pos:column="49">.</op:operator><name pos:line="131" pos:column="50">FindName</name></name><argument_list pos:line="131" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="59">"Text"</lit:literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="67">searchBox</name></expr></argument>)</argument_list></call> <op:operator pos:line="131" pos:column="78">as</op:operator> <name pos:line="131" pos:column="81">TextBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><name pos:line="132" pos:column="21">textBox</name> <op:operator pos:line="132" pos:column="29">!=</op:operator> <name pos:line="132" pos:column="32">null</name></expr>)</condition><then pos:line="132" pos:column="37">
                <block pos:line="133" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="134" pos:column="21">TextBoxFocusHelper</name><op:operator pos:line="134" pos:column="39">.</op:operator><name pos:line="134" pos:column="40">RegisterFocus</name></name><argument_list pos:line="134" pos:column="53">(<argument><expr><name pos:line="134" pos:column="54">textBox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="135" pos:column="21">textBox</name><op:operator pos:line="135" pos:column="28">.</op:operator><name pos:line="135" pos:column="29">KeyDown</name></name> <op:operator pos:line="135" pos:column="37">+=</op:operator> <name pos:line="135" pos:column="40">HandleTextBoxKeyDown</name></expr>;</expr_stmt>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="138" pos:column="17">var</name></type> <name pos:line="138" pos:column="21">listBox</name> <init pos:line="138" pos:column="29">= <expr><call><name><name pos:line="138" pos:column="31">searchBox</name><op:operator pos:line="138" pos:column="40">.</op:operator><name pos:line="138" pos:column="41">Template</name><op:operator pos:line="138" pos:column="49">.</op:operator><name pos:line="138" pos:column="50">FindName</name></name><argument_list pos:line="138" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="59">"Selector"</lit:literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="71">searchBox</name></expr></argument>)</argument_list></call> <op:operator pos:line="138" pos:column="82">as</op:operator> <name pos:line="138" pos:column="85">ListBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="139" pos:column="17">if <condition pos:line="139" pos:column="20">(<expr><name pos:line="139" pos:column="21">listBox</name> <op:operator pos:line="139" pos:column="29">!=</op:operator> <name pos:line="139" pos:column="32">null</name></expr>)</condition><then pos:line="139" pos:column="37">
                <block pos:line="140" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="141" pos:column="21">listBox</name><op:operator pos:line="141" pos:column="28">.</op:operator><name pos:line="141" pos:column="29">SelectionChanged</name></name> <op:operator pos:line="141" pos:column="46">+=</op:operator> <name pos:line="141" pos:column="49">searchBoxListBox_SelectionChanged</name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="146" pos:column="9">private</specifier> <name pos:line="146" pos:column="17">void</name></type> <name pos:line="146" pos:column="22">HandleTextBoxKeyDown</name><parameter_list pos:line="146" pos:column="42">(<param><decl><type><name pos:line="146" pos:column="43">object</name></type> <name pos:line="146" pos:column="50">sender</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="58">KeyEventArgs</name></type> <name pos:line="146" pos:column="71">e</name></decl></param>)</parameter_list>
        <block pos:line="147" pos:column="9">{
            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><name><name pos:line="148" pos:column="17">e</name><op:operator pos:line="148" pos:column="18">.</op:operator><name pos:line="148" pos:column="19">Key</name></name> <op:operator pos:line="148" pos:column="23">==</op:operator> <call><name><name pos:line="148" pos:column="26">Key</name><op:operator pos:line="148" pos:column="29">.</op:operator><name pos:line="148" pos:column="30">Tab</name> <type:modifier pos:line="148" pos:column="34">&amp;&amp;</type:modifier></name> <argument_list pos:line="148" pos:column="37">(<argument><expr><call><name><name pos:line="148" pos:column="38">Keyboard</name><op:operator pos:line="148" pos:column="46">.</op:operator><name pos:line="148" pos:column="47">IsKeyDown</name></name><argument_list pos:line="148" pos:column="56">(<argument><expr><name><name pos:line="148" pos:column="57">Key</name><op:operator pos:line="148" pos:column="60">.</op:operator><name pos:line="148" pos:column="61">LeftShift</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="148" pos:column="72">||</op:operator> <call><name><name pos:line="148" pos:column="75">Keyboard</name><op:operator pos:line="148" pos:column="83">.</op:operator><name pos:line="148" pos:column="84">IsKeyDown</name></name><argument_list pos:line="148" pos:column="93">(<argument><expr><name><name pos:line="148" pos:column="94">Key</name><op:operator pos:line="148" pos:column="97">.</op:operator><name pos:line="148" pos:column="98">RightShift</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="148" pos:column="111">
            <block pos:line="149" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="150" pos:column="17">searchResultListbox</name><op:operator pos:line="150" pos:column="36">.</op:operator><name pos:line="150" pos:column="37">Focus</name></name><argument_list pos:line="150" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="151" pos:column="17">e</name><op:operator pos:line="151" pos:column="18">.</op:operator><name pos:line="151" pos:column="19">Handled</name></name> <op:operator pos:line="151" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="151" pos:column="29">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="155" pos:column="9">private</specifier> <name pos:line="155" pos:column="17">void</name></type> <name pos:line="155" pos:column="22">InitProgramElements</name><parameter_list pos:line="155" pos:column="41">()</parameter_list>
        <block pos:line="156" pos:column="9">{
            <expr_stmt><expr><name pos:line="157" pos:column="13">ProgramElements</name> <op:operator pos:line="157" pos:column="29">=</op:operator> <op:operator pos:line="157" pos:column="31">new</op:operator> <name><name pos:line="157" pos:column="35">ObservableCollection</name><argument_list pos:line="157" pos:column="55">&lt;<argument><name pos:line="157" pos:column="56">ProgramElementWrapper</name></argument>&gt;</argument_list></name>
                <block pos:line="158" pos:column="17">{
                    <expr><op:operator pos:line="159" pos:column="21">new</op:operator> <call><name pos:line="159" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="159" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="159" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="53">ProgramElementType</name><op:operator pos:line="159" pos:column="71">.</op:operator><name pos:line="159" pos:column="72">Class</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="159" pos:column="78">,</op:operator>
                    <expr><op:operator pos:line="160" pos:column="21">new</op:operator> <call><name pos:line="160" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="160" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="160" pos:column="47">false</lit:literal></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="54">ProgramElementType</name><op:operator pos:line="160" pos:column="72">.</op:operator><name pos:line="160" pos:column="73">Comment</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="160" pos:column="81">,</op:operator>
                    <expr><op:operator pos:line="161" pos:column="21">new</op:operator> <call><name pos:line="161" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="161" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="161" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="53">ProgramElementType</name><op:operator pos:line="161" pos:column="71">.</op:operator><name pos:line="161" pos:column="72">Custom</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="161" pos:column="79">,</op:operator>
                    <expr><op:operator pos:line="162" pos:column="21">new</op:operator> <call><name pos:line="162" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="162" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="162" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="53">ProgramElementType</name><op:operator pos:line="162" pos:column="71">.</op:operator><name pos:line="162" pos:column="72">Enum</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="162" pos:column="77">,</op:operator>
                    <expr><op:operator pos:line="163" pos:column="21">new</op:operator> <call><name pos:line="163" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="163" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="163" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="53">ProgramElementType</name><op:operator pos:line="163" pos:column="71">.</op:operator><name pos:line="163" pos:column="72">Field</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="163" pos:column="78">,</op:operator>
                    <expr><op:operator pos:line="164" pos:column="21">new</op:operator> <call><name pos:line="164" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="164" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="164" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="53">ProgramElementType</name><op:operator pos:line="164" pos:column="71">.</op:operator><name pos:line="164" pos:column="72">Method</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="164" pos:column="79">,</op:operator>
                    <expr><op:operator pos:line="165" pos:column="21">new</op:operator> <call><name pos:line="165" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="165" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="165" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="53">ProgramElementType</name><op:operator pos:line="165" pos:column="71">.</op:operator><name pos:line="165" pos:column="72">MethodPrototype</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="165" pos:column="88">,</op:operator>
                    <expr><op:operator pos:line="166" pos:column="21">new</op:operator> <call><name pos:line="166" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="166" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="166" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="53">ProgramElementType</name><op:operator pos:line="166" pos:column="71">.</op:operator><name pos:line="166" pos:column="72">Property</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="166" pos:column="81">,</op:operator>
                    <expr><op:operator pos:line="167" pos:column="21">new</op:operator> <call><name pos:line="167" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="167" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="167" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="167" pos:column="53">ProgramElementType</name><op:operator pos:line="167" pos:column="71">.</op:operator><name pos:line="167" pos:column="72">Struct</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="167" pos:column="79">,</op:operator>
                    <expr><op:operator pos:line="168" pos:column="21">new</op:operator> <call><name pos:line="168" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="168" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="168" pos:column="47">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="53">ProgramElementType</name><op:operator pos:line="168" pos:column="71">.</op:operator><name pos:line="168" pos:column="72">XmlElement</name></name></expr></argument>)</argument_list></call></expr>
                    <comment type="line" pos:line="169" pos:column="21">//new ProgramElementWrapper(true, ProgramElementType.TextLine)</comment>
                }</block></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="173" pos:column="9">private</specifier> <name pos:line="173" pos:column="17">void</name></type> <name pos:line="173" pos:column="22">InitAccessLevels</name><parameter_list pos:line="173" pos:column="38">()</parameter_list>
        <block pos:line="174" pos:column="9">{
            <expr_stmt><expr><name pos:line="175" pos:column="13">AccessLevels</name> <op:operator pos:line="175" pos:column="26">=</op:operator> <op:operator pos:line="175" pos:column="28">new</op:operator> <name><name pos:line="175" pos:column="32">ObservableCollection</name><argument_list pos:line="175" pos:column="52">&lt;<argument><name pos:line="175" pos:column="53">AccessWrapper</name></argument>&gt;</argument_list></name>
                <block pos:line="176" pos:column="17">{
                    <expr><op:operator pos:line="177" pos:column="21">new</op:operator> <call><name pos:line="177" pos:column="25">AccessWrapper</name><argument_list pos:line="177" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="177" pos:column="39">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="45">AccessLevel</name><op:operator pos:line="177" pos:column="56">.</op:operator><name pos:line="177" pos:column="57">Private</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="177" pos:column="65">,</op:operator>
                    <expr><op:operator pos:line="178" pos:column="21">new</op:operator> <call><name pos:line="178" pos:column="25">AccessWrapper</name><argument_list pos:line="178" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="178" pos:column="39">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="45">AccessLevel</name><op:operator pos:line="178" pos:column="56">.</op:operator><name pos:line="178" pos:column="57">Protected</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="178" pos:column="67">,</op:operator>
                    <expr><op:operator pos:line="179" pos:column="21">new</op:operator> <call><name pos:line="179" pos:column="25">AccessWrapper</name><argument_list pos:line="179" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="179" pos:column="39">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="179" pos:column="45">AccessLevel</name><op:operator pos:line="179" pos:column="56">.</op:operator><name pos:line="179" pos:column="57">Internal</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="179" pos:column="66">,</op:operator>
                    <expr><op:operator pos:line="180" pos:column="21">new</op:operator> <call><name pos:line="180" pos:column="25">AccessWrapper</name><argument_list pos:line="180" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="180" pos:column="39">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="45">AccessLevel</name><op:operator pos:line="180" pos:column="56">.</op:operator><name pos:line="180" pos:column="57">Public</name></name></expr></argument>)</argument_list></call></expr>
                }</block></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="184" pos:column="9">private</specifier> <name pos:line="184" pos:column="17">void</name></type> <name pos:line="184" pos:column="22">SelectFirstResult</name><parameter_list pos:line="184" pos:column="39">(<param><decl><type><name pos:line="184" pos:column="40">object</name></type> <name pos:line="184" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="184" pos:column="55">NotifyCollectionChangedEventArgs</name></type> <name pos:line="184" pos:column="88">e</name></decl></param>)</parameter_list>
        <block pos:line="185" pos:column="9">{
            <comment type="line" pos:line="186" pos:column="13">//searchResultListbox.SelectedIndex = 0;</comment>
            <comment type="line" pos:line="187" pos:column="13">//searchResultListbox_SelectionChanged(searchResultListbox,null);</comment>
            <expr_stmt><expr><name><name pos:line="188" pos:column="13">searchResultListbox</name><op:operator pos:line="188" pos:column="32">.</op:operator><name pos:line="188" pos:column="33">SelectedIndex</name></name> <op:operator pos:line="188" pos:column="47">=</op:operator> <op:operator pos:line="188" pos:column="49">-</op:operator><lit:literal type="number" pos:line="188" pos:column="50">1</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">searchResultListbox</name><op:operator pos:line="189" pos:column="32">.</op:operator><name pos:line="189" pos:column="33">Focus</name></name><argument_list pos:line="189" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="192" pos:column="9">private</specifier> <name pos:line="192" pos:column="17">void</name></type> <name pos:line="192" pos:column="22">ScrollToTop</name><parameter_list pos:line="192" pos:column="33">(<param><decl><type><name pos:line="192" pos:column="34">object</name></type> <name pos:line="192" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="192" pos:column="49">NotifyCollectionChangedEventArgs</name></type> <name pos:line="192" pos:column="82">e</name></decl></param>)</parameter_list>
        <block pos:line="193" pos:column="9">{
            <if pos:line="194" pos:column="13">if<condition pos:line="194" pos:column="15">(<expr><name><name pos:line="194" pos:column="16">searchResultListbox</name><op:operator pos:line="194" pos:column="35">.</op:operator><name pos:line="194" pos:column="36">Items</name><op:operator pos:line="194" pos:column="41">.</op:operator><name pos:line="194" pos:column="42">Count</name></name> <op:operator pos:line="194" pos:column="48">&gt;</op:operator> <lit:literal type="number" pos:line="194" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="194" pos:column="52">
                <expr_stmt><expr><call><name><name pos:line="195" pos:column="17">searchResultListbox</name><op:operator pos:line="195" pos:column="36">.</op:operator><name pos:line="195" pos:column="37">ScrollIntoView</name></name><argument_list pos:line="195" pos:column="51">(<argument><expr><name><name pos:line="195" pos:column="52">searchResultListbox</name><op:operator pos:line="195" pos:column="71">.</op:operator><name pos:line="195" pos:column="72">Items</name><index pos:line="195" pos:column="77">[<expr><lit:literal type="number" pos:line="195" pos:column="78">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>


        <function><type><attribute pos:line="199" pos:column="9">[<expr><call><name><name pos:line="199" pos:column="10">System</name><op:operator pos:line="199" pos:column="16">.</op:operator><name pos:line="199" pos:column="17">Diagnostics</name><op:operator pos:line="199" pos:column="28">.</op:operator><name pos:line="199" pos:column="29">CodeAnalysis</name><op:operator pos:line="199" pos:column="41">.</op:operator><name pos:line="199" pos:column="42">SuppressMessage</name></name><argument_list pos:line="199" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="58">"Microsoft.Globalization"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="199" pos:column="85">"CA1300:SpecifyMessageBoxOptions"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="200" pos:column="9">private</specifier> <name pos:line="200" pos:column="17">void</name></type> <name pos:line="200" pos:column="22">SearchButtonClick</name><parameter_list pos:line="200" pos:column="39">(<param><decl><type><name pos:line="200" pos:column="40">object</name></type> <name pos:line="200" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="200" pos:column="55">RoutedEventArgs</name></type> <name pos:line="200" pos:column="71">e</name></decl></param>)</parameter_list>
        <block pos:line="201" pos:column="9">{

            <expr_stmt><expr><call><name pos:line="203" pos:column="13">BeginSearch</name><argument_list pos:line="203" pos:column="24">(<argument><expr><name><name pos:line="203" pos:column="25">searchBox</name><op:operator pos:line="203" pos:column="34">.</op:operator><name pos:line="203" pos:column="35">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="206" pos:column="9">private</specifier> <name pos:line="206" pos:column="17">void</name></type> <name pos:line="206" pos:column="22">OnKeyUpHandler</name><parameter_list pos:line="206" pos:column="36">(<param><decl><type><name pos:line="206" pos:column="37">object</name></type> <name pos:line="206" pos:column="44">sender</name></decl></param>, <param><decl><type><name pos:line="206" pos:column="52">KeyEventArgs</name></type> <name pos:line="206" pos:column="65">e</name></decl></param>)</parameter_list>
        <block pos:line="207" pos:column="9">{
            <if pos:line="208" pos:column="13">if <condition pos:line="208" pos:column="16">(<expr><name><name pos:line="208" pos:column="17">e</name><op:operator pos:line="208" pos:column="18">.</op:operator><name pos:line="208" pos:column="19">Key</name></name> <op:operator pos:line="208" pos:column="23">==</op:operator> <name><name pos:line="208" pos:column="26">Key</name><op:operator pos:line="208" pos:column="29">.</op:operator><name pos:line="208" pos:column="30">Return</name></name></expr>)</condition><then pos:line="208" pos:column="37">
            <block pos:line="209" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="210" pos:column="17">var</name></type> <name pos:line="210" pos:column="21">text</name> <init pos:line="210" pos:column="26">= <expr><name pos:line="210" pos:column="28">sender</name> <op:operator pos:line="210" pos:column="35">as</op:operator> <name pos:line="210" pos:column="38">AutoCompleteBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="211" pos:column="17">if <condition pos:line="211" pos:column="20">(<expr><name pos:line="211" pos:column="21">text</name> <op:operator pos:line="211" pos:column="26">!=</op:operator> <name pos:line="211" pos:column="29">null</name></expr>)</condition><then pos:line="211" pos:column="34">
                <block pos:line="212" pos:column="17">{
                    <expr_stmt><expr><call><name pos:line="213" pos:column="21">BeginSearch</name><argument_list pos:line="213" pos:column="32">(<argument><expr><name><name pos:line="213" pos:column="33">text</name><op:operator pos:line="213" pos:column="37">.</op:operator><name pos:line="213" pos:column="38">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="218" pos:column="9">private</specifier> <name pos:line="218" pos:column="17">void</name></type> <name pos:line="218" pos:column="22">BeginSearch</name><parameter_list pos:line="218" pos:column="33">(<param><decl><type><name pos:line="218" pos:column="34">string</name></type> <name pos:line="218" pos:column="41">searchString</name></decl></param>)</parameter_list>
        <block pos:line="219" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="220" pos:column="13">RemoveOldResults</name><argument_list pos:line="220" pos:column="29">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="222" pos:column="13">AddSearchHistory</name><argument_list pos:line="222" pos:column="29">(<argument><expr><name pos:line="222" pos:column="30">searchString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="224" pos:column="13">SimpleSearchCriteria</name></type> <name pos:line="224" pos:column="34">Criteria</name> <init pos:line="224" pos:column="43">= <expr><op:operator pos:line="224" pos:column="45">new</op:operator> <call><name pos:line="224" pos:column="49">SimpleSearchCriteria</name><argument_list pos:line="224" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="226" pos:column="13">//Store the search key</comment>
            <expr_stmt><expr><name><name pos:line="227" pos:column="13">this</name><op:operator pos:line="227" pos:column="17">.</op:operator><name pos:line="227" pos:column="18">searchKey</name></name> <op:operator pos:line="227" pos:column="28">=</op:operator> <name><name pos:line="227" pos:column="30">searchBox</name><op:operator pos:line="227" pos:column="39">.</op:operator><name pos:line="227" pos:column="40">Text</name></name></expr>;</expr_stmt>
            
            <comment type="line" pos:line="229" pos:column="13">//Clear the old recommendation.</comment>
            <expr_stmt><expr><call><name pos:line="230" pos:column="13">UpdateRecommendedQueries</name><argument_list pos:line="230" pos:column="37">(<argument><expr><call><name><name pos:line="230" pos:column="38">Enumerable</name><op:operator pos:line="230" pos:column="48">.</op:operator><name><name pos:line="230" pos:column="49">Empty</name><argument_list pos:line="230" pos:column="54">&lt;<argument><name pos:line="230" pos:column="55">String</name></argument>&gt;</argument_list></name></name><argument_list pos:line="230" pos:column="62">()</argument_list></call><op:operator pos:line="230" pos:column="64">.</op:operator><call><name pos:line="230" pos:column="65">AsQueryable</name><argument_list pos:line="230" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="232" pos:column="13">var</name></type> <name pos:line="232" pos:column="17">selectedAccessLevels</name> <init pos:line="232" pos:column="38">= <expr><call><name><name pos:line="232" pos:column="40">AccessLevels</name><op:operator pos:line="232" pos:column="52">.</op:operator><name pos:line="232" pos:column="53">Where</name></name><argument_list pos:line="232" pos:column="58">(<argument><expr><lambda><name pos:line="232" pos:column="59">a</name> <op:operator pos:line="232" pos:column="61">=&gt;</op:operator> <name><name pos:line="232" pos:column="64">a</name><op:operator pos:line="232" pos:column="65">.</op:operator><name pos:line="232" pos:column="66">Checked</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="232" pos:column="74">.</op:operator><call><name pos:line="232" pos:column="75">Select</name><argument_list pos:line="232" pos:column="81">(<argument><expr><lambda><name pos:line="232" pos:column="82">a</name> <op:operator pos:line="232" pos:column="84">=&gt;</op:operator> <name><name pos:line="232" pos:column="87">a</name><op:operator pos:line="232" pos:column="88">.</op:operator><name pos:line="232" pos:column="89">Access</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="232" pos:column="96">.</op:operator><call><name pos:line="232" pos:column="97">ToList</name><argument_list pos:line="232" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="233" pos:column="13">if <condition pos:line="233" pos:column="16">(<expr><call><name><name pos:line="233" pos:column="17">selectedAccessLevels</name><op:operator pos:line="233" pos:column="37">.</op:operator><name pos:line="233" pos:column="38">Any</name></name><argument_list pos:line="233" pos:column="41">()</argument_list></call></expr>)</condition><then pos:line="233" pos:column="44">
            <block pos:line="234" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="235" pos:column="17">Criteria</name><op:operator pos:line="235" pos:column="25">.</op:operator><name pos:line="235" pos:column="26">SearchByAccessLevel</name></name> <op:operator pos:line="235" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="235" pos:column="48">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="236" pos:column="17">Criteria</name><op:operator pos:line="236" pos:column="25">.</op:operator><name pos:line="236" pos:column="26">AccessLevels</name></name> <op:operator pos:line="236" pos:column="39">=</op:operator> <op:operator pos:line="236" pos:column="41">new</op:operator> <call><name><name pos:line="236" pos:column="45">SortedSet</name><argument_list pos:line="236" pos:column="54">&lt;<argument><name pos:line="236" pos:column="55">AccessLevel</name></argument>&gt;</argument_list></name><argument_list pos:line="236" pos:column="67">(<argument><expr><name pos:line="236" pos:column="68">selectedAccessLevels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="238" pos:column="13">else
            <block pos:line="239" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="240" pos:column="17">Criteria</name><op:operator pos:line="240" pos:column="25">.</op:operator><name pos:line="240" pos:column="26">SearchByAccessLevel</name></name> <op:operator pos:line="240" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="240" pos:column="48">false</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="241" pos:column="17">Criteria</name><op:operator pos:line="241" pos:column="25">.</op:operator><name pos:line="241" pos:column="26">AccessLevels</name><op:operator pos:line="241" pos:column="38">.</op:operator><name pos:line="241" pos:column="39">Clear</name></name><argument_list pos:line="241" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <decl_stmt><decl><type><name pos:line="244" pos:column="13">var</name></type> <name pos:line="244" pos:column="17">selectedProgramElementTypes</name> <init pos:line="244" pos:column="45">=
                <expr><call><name><name pos:line="245" pos:column="17">ProgramElements</name><op:operator pos:line="245" pos:column="32">.</op:operator><name pos:line="245" pos:column="33">Where</name></name><argument_list pos:line="245" pos:column="38">(<argument><expr><lambda><name pos:line="245" pos:column="39">e</name> <op:operator pos:line="245" pos:column="41">=&gt;</op:operator> <name><name pos:line="245" pos:column="44">e</name><op:operator pos:line="245" pos:column="45">.</op:operator><name pos:line="245" pos:column="46">Checked</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="245" pos:column="54">.</op:operator><call><name pos:line="245" pos:column="55">Select</name><argument_list pos:line="245" pos:column="61">(<argument><expr><lambda><name pos:line="245" pos:column="62">e</name> <op:operator pos:line="245" pos:column="64">=&gt;</op:operator> <name><name pos:line="245" pos:column="67">e</name><op:operator pos:line="245" pos:column="68">.</op:operator><name pos:line="245" pos:column="69">ProgramElement</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="245" pos:column="84">.</op:operator><call><name pos:line="245" pos:column="85">ToList</name><argument_list pos:line="245" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="246" pos:column="13">if <condition pos:line="246" pos:column="16">(<expr><call><name><name pos:line="246" pos:column="17">selectedProgramElementTypes</name><op:operator pos:line="246" pos:column="44">.</op:operator><name pos:line="246" pos:column="45">Any</name></name><argument_list pos:line="246" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="246" pos:column="51">
            <block pos:line="247" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="248" pos:column="17">Criteria</name><op:operator pos:line="248" pos:column="25">.</op:operator><name pos:line="248" pos:column="26">SearchByProgramElementType</name></name> <op:operator pos:line="248" pos:column="53">=</op:operator> <lit:literal type="boolean" pos:line="248" pos:column="55">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="249" pos:column="17">Criteria</name><op:operator pos:line="249" pos:column="25">.</op:operator><name pos:line="249" pos:column="26">ProgramElementTypes</name></name> <op:operator pos:line="249" pos:column="46">=</op:operator> <op:operator pos:line="249" pos:column="48">new</op:operator> <call><name><name pos:line="249" pos:column="52">SortedSet</name><argument_list pos:line="249" pos:column="61">&lt;<argument><name pos:line="249" pos:column="62">ProgramElementType</name></argument>&gt;</argument_list></name><argument_list pos:line="249" pos:column="81">(<argument><expr><name pos:line="249" pos:column="82">selectedProgramElementTypes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="251" pos:column="13">else
            <block pos:line="252" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="253" pos:column="17">Criteria</name><op:operator pos:line="253" pos:column="25">.</op:operator><name pos:line="253" pos:column="26">SearchByProgramElementType</name></name> <op:operator pos:line="253" pos:column="53">=</op:operator> <lit:literal type="boolean" pos:line="253" pos:column="55">false</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="254" pos:column="17">Criteria</name><op:operator pos:line="254" pos:column="25">.</op:operator><name pos:line="254" pos:column="26">ProgramElementTypes</name><op:operator pos:line="254" pos:column="45">.</op:operator><name pos:line="254" pos:column="46">Clear</name></name><argument_list pos:line="254" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <expr_stmt><expr><call><name pos:line="257" pos:column="13">SearchAsync</name><argument_list pos:line="257" pos:column="24">(<argument><expr><name pos:line="257" pos:column="25">searchString</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="39">Criteria</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="260" pos:column="9">private</specifier> <name pos:line="260" pos:column="17">void</name></type> <name pos:line="260" pos:column="22">RemoveOldResults</name><parameter_list pos:line="260" pos:column="38">()</parameter_list>
        <block pos:line="261" pos:column="9">{
            <try pos:line="262" pos:column="13">try
            <block pos:line="263" pos:column="13">{
                <while pos:line="264" pos:column="17">while <condition pos:line="264" pos:column="23">(<expr><name><name pos:line="264" pos:column="24">SearchResults</name><op:operator pos:line="264" pos:column="37">.</op:operator><name pos:line="264" pos:column="38">Count</name></name> <op:operator pos:line="264" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="264" pos:column="46">0</lit:literal></expr>)</condition>
                    <expr_stmt><expr><call><name><name pos:line="265" pos:column="21">SearchResults</name><op:operator pos:line="265" pos:column="34">.</op:operator><name pos:line="265" pos:column="35">RemoveAt</name></name><argument_list pos:line="265" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="265" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></while>
            }</block>
            <catch pos:line="267" pos:column="13">catch <parameter_list pos:line="267" pos:column="19">(<param><decl><type><name pos:line="267" pos:column="20">Exception</name></type> <name pos:line="267" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="268" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="269" pos:column="17">LogEvents</name><op:operator pos:line="269" pos:column="26">.</op:operator><name pos:line="269" pos:column="27">UIGenericError</name></name><argument_list pos:line="269" pos:column="41">(<argument><expr><name pos:line="269" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="269" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="273" pos:column="9">private</specifier> <name pos:line="273" pos:column="17">void</name></type> <name pos:line="273" pos:column="22">SearchAsync</name><parameter_list pos:line="273" pos:column="33">(<param><decl><type><name pos:line="273" pos:column="34">String</name></type> <name pos:line="273" pos:column="41">text</name></decl></param>, <param><decl><type><name pos:line="273" pos:column="47">SimpleSearchCriteria</name></type> <name pos:line="273" pos:column="68">searchCriteria</name></decl></param>)</parameter_list>
        <block pos:line="274" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="275" pos:column="13">var</name></type> <name pos:line="275" pos:column="17">sandoWorker</name> <init pos:line="275" pos:column="29">= <expr><op:operator pos:line="275" pos:column="31">new</op:operator> <call><name pos:line="275" pos:column="35">BackgroundWorker</name><argument_list pos:line="275" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="276" pos:column="13">sandoWorker</name><op:operator pos:line="276" pos:column="24">.</op:operator><name pos:line="276" pos:column="25">DoWork</name></name> <op:operator pos:line="276" pos:column="32">+=</op:operator> <name pos:line="276" pos:column="35">sandoWorker_DoWork</name></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="277" pos:column="13">var</name></type> <name pos:line="277" pos:column="17">workerSearchParams</name> <init pos:line="277" pos:column="36">= <expr><op:operator pos:line="277" pos:column="38">new</op:operator> <name pos:line="277" pos:column="42">WorkerSearchParameters</name> <block pos:line="277" pos:column="65">{ <expr><name pos:line="277" pos:column="67">Query</name> <op:operator pos:line="277" pos:column="73">=</op:operator> <name pos:line="277" pos:column="75">text</name></expr>, <expr><name pos:line="277" pos:column="81">Criteria</name> <op:operator pos:line="277" pos:column="90">=</op:operator> <name pos:line="277" pos:column="92">searchCriteria</name></expr> }</block></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="278" pos:column="13">sandoWorker</name><op:operator pos:line="278" pos:column="24">.</op:operator><name pos:line="278" pos:column="25">RunWorkerAsync</name></name><argument_list pos:line="278" pos:column="39">(<argument><expr><name pos:line="278" pos:column="40">workerSearchParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="281" pos:column="9">private</specifier> class <name pos:line="281" pos:column="23">WorkerSearchParameters</name>
        <block pos:line="282" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="283" pos:column="13">public</specifier> <name pos:line="283" pos:column="20">SimpleSearchCriteria</name></type> <name pos:line="283" pos:column="41">Criteria</name> <block pos:line="283" pos:column="50">{ <function_decl><name pos:line="283" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="283" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="284" pos:column="13">public</specifier> <name pos:line="284" pos:column="20">String</name></type> <name pos:line="284" pos:column="27">Query</name> <block pos:line="284" pos:column="33">{ <function_decl><name pos:line="284" pos:column="35">get</name>;</function_decl> <function_decl><name pos:line="284" pos:column="40">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>
      
        <function><type><name pos:line="287" pos:column="9">void</name></type> <name pos:line="287" pos:column="14">sandoWorker_DoWork</name><parameter_list pos:line="287" pos:column="32">(<param><decl><type><name pos:line="287" pos:column="33">object</name></type> <name pos:line="287" pos:column="40">sender</name></decl></param>, <param><decl><type><name pos:line="287" pos:column="48">DoWorkEventArgs</name></type> <name pos:line="287" pos:column="64">e</name></decl></param>)</parameter_list>
        <block pos:line="288" pos:column="9">{            
            <decl_stmt><decl><type><name pos:line="289" pos:column="13">var</name></type> <name pos:line="289" pos:column="17">searchParams</name> <init pos:line="289" pos:column="30">= <expr><op:operator pos:line="289" pos:column="32">(</op:operator><name pos:line="289" pos:column="33">WorkerSearchParameters</name><op:operator pos:line="289" pos:column="55">)</op:operator> <name><name pos:line="289" pos:column="57">e</name><op:operator pos:line="289" pos:column="58">.</op:operator><name pos:line="289" pos:column="59">Argument</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="290" pos:column="13">_searchManager</name><op:operator pos:line="290" pos:column="27">.</op:operator><name pos:line="290" pos:column="28">Search</name></name><argument_list pos:line="290" pos:column="34">(<argument><expr><name><name pos:line="290" pos:column="35">searchParams</name><op:operator pos:line="290" pos:column="47">.</op:operator><name pos:line="290" pos:column="48">Query</name></name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="55">searchParams</name><op:operator pos:line="290" pos:column="67">.</op:operator><name pos:line="290" pos:column="68">Criteria</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="293" pos:column="9">private</specifier> <name pos:line="293" pos:column="17">void</name></type> <name pos:line="293" pos:column="22">UIElement_OnMouseDown</name><parameter_list pos:line="293" pos:column="43">(<param><decl><type><name pos:line="293" pos:column="44">object</name></type> <name pos:line="293" pos:column="51">sender</name></decl></param>, <param><decl><type><name pos:line="293" pos:column="59">MouseButtonEventArgs</name></type> <name pos:line="293" pos:column="80">e</name></decl></param>)</parameter_list>
        <block pos:line="294" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="295" pos:column="13">OpenFileWithSelectedResult</name><argument_list pos:line="295" pos:column="39">(<argument><expr><name pos:line="295" pos:column="40">sender</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="298" pos:column="9">private</specifier> <name pos:line="298" pos:column="17">void</name></type> <name pos:line="298" pos:column="22">UIElement_OnKeyDown</name><parameter_list pos:line="298" pos:column="41">(<param><decl><type><name pos:line="298" pos:column="42">object</name></type> <name pos:line="298" pos:column="49">sender</name></decl></param>, <param><decl><type><name pos:line="298" pos:column="57">KeyEventArgs</name></type> <name pos:line="298" pos:column="70">e</name></decl></param>)</parameter_list>
        <block pos:line="299" pos:column="9">{
            <if pos:line="300" pos:column="13">if <condition pos:line="300" pos:column="16">(<expr><name><name pos:line="300" pos:column="17">e</name><op:operator pos:line="300" pos:column="18">.</op:operator><name pos:line="300" pos:column="19">Key</name></name> <op:operator pos:line="300" pos:column="23">==</op:operator> <name><name pos:line="300" pos:column="26">Key</name><op:operator pos:line="300" pos:column="29">.</op:operator><name pos:line="300" pos:column="30">Return</name></name></expr>)</condition><then pos:line="300" pos:column="37">
            <block pos:line="301" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="302" pos:column="17">OpenFileWithSelectedResult</name><argument_list pos:line="302" pos:column="43">(<argument><expr><name pos:line="302" pos:column="44">sender</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function_decl><type><specifier pos:line="306" pos:column="9">private</specifier> <specifier pos:line="306" pos:column="17">delegate</specifier> <name pos:line="306" pos:column="26">void</name></type> <name pos:line="306" pos:column="31">HighlightStuffDelegate</name><parameter_list pos:line="306" pos:column="53">(<param><decl><type><name pos:line="306" pos:column="54">string</name></type> <name pos:line="306" pos:column="61">path</name></decl></param>,<param><decl><type><name pos:line="306" pos:column="66">int</name></type> <name pos:line="306" pos:column="70">linenumber</name></decl></param>,<param><decl><type><name pos:line="306" pos:column="81">string</name></type> <name pos:line="306" pos:column="88">source</name></decl></param>,<param><decl><type><name><name pos:line="306" pos:column="95">string</name><index pos:line="306" pos:column="101">[]</index></name></type> <name pos:line="306" pos:column="104">searchkeys</name></decl></param>)</parameter_list>;</function_decl>
        <decl_stmt><decl><type><specifier pos:line="307" pos:column="9">private</specifier> <specifier pos:line="307" pos:column="17">static</specifier> <name pos:line="307" pos:column="24">HighlightStuffDelegate</name></type> <name pos:line="307" pos:column="47">HighlightStuffInvoker</name> <init pos:line="307" pos:column="69">= <expr><op:operator pos:line="307" pos:column="71">new</op:operator> <call><name pos:line="307" pos:column="75">HighlightStuffDelegate</name><argument_list pos:line="307" pos:column="97">(<argument><expr><name pos:line="307" pos:column="98">HighlightStuff</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="309" pos:column="9">private</specifier> <specifier pos:line="309" pos:column="17">static</specifier> <name pos:line="309" pos:column="24">void</name></type> <name pos:line="309" pos:column="29">HighlightStuff</name><parameter_list pos:line="309" pos:column="43">(<param><decl><type><name pos:line="309" pos:column="44">string</name></type> <name pos:line="309" pos:column="51">path</name></decl></param>, <param><decl><type><name pos:line="309" pos:column="57">int</name></type> <name pos:line="309" pos:column="61">linenumber</name></decl></param>, <param><decl><type><name pos:line="309" pos:column="73">string</name></type> <name pos:line="309" pos:column="80">source</name></decl></param>, <param><decl><type><name><name pos:line="309" pos:column="88">string</name><index pos:line="309" pos:column="94">[]</index></name></type> <name pos:line="309" pos:column="97">searchkeys</name></decl></param>)</parameter_list>
        <block pos:line="310" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="311" pos:column="13">HighlightedEntitySet</name><op:operator pos:line="311" pos:column="33">.</op:operator><name pos:line="311" pos:column="34">GetInstance</name></name><argument_list pos:line="311" pos:column="45">()</argument_list></call><op:operator pos:line="311" pos:column="47">.</op:operator><call><name pos:line="311" pos:column="48">Clear</name><argument_list pos:line="311" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="312" pos:column="13">HighlightedEntitySet</name><op:operator pos:line="312" pos:column="33">.</op:operator><name pos:line="312" pos:column="34">GetInstance</name></name><argument_list pos:line="312" pos:column="45">()</argument_list></call><op:operator pos:line="312" pos:column="47">.</op:operator><call><name pos:line="312" pos:column="48">AddEntity</name><argument_list pos:line="312" pos:column="57">(<argument><expr><name pos:line="312" pos:column="58">path</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="64">linenumber</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="76">source</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="84">searchkeys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="315" pos:column="9">private</specifier> <name pos:line="315" pos:column="17">void</name></type> <name pos:line="315" pos:column="22">OpenFileWithSelectedResult</name><parameter_list pos:line="315" pos:column="48">(<param><decl><type><name pos:line="315" pos:column="49">object</name></type> <name pos:line="315" pos:column="56">sender</name></decl></param>)</parameter_list>
        <block pos:line="316" pos:column="9">{
            <try pos:line="317" pos:column="13">try
            <block pos:line="318" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="319" pos:column="17">var</name></type> <name pos:line="319" pos:column="21">result</name> <init pos:line="319" pos:column="28">= <expr><name pos:line="319" pos:column="30">sender</name> <op:operator pos:line="319" pos:column="37">as</op:operator> <name pos:line="319" pos:column="40">ListBoxItem</name></expr></init></decl>;</decl_stmt>
                <if pos:line="320" pos:column="17">if <condition pos:line="320" pos:column="20">(<expr><name pos:line="320" pos:column="21">result</name> <op:operator pos:line="320" pos:column="28">!=</op:operator> <name pos:line="320" pos:column="31">null</name></expr>)</condition><then pos:line="320" pos:column="36">
                <block pos:line="321" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="322" pos:column="21">string</name><index pos:line="322" pos:column="27">[]</index></type> <name pos:line="322" pos:column="30">searchKeys</name> <init pos:line="322" pos:column="41">= <expr><call><name pos:line="322" pos:column="43">GetKeys</name><argument_list pos:line="322" pos:column="50">(<argument><expr><name><name pos:line="322" pos:column="51">this</name><op:operator pos:line="322" pos:column="55">.</op:operator><name pos:line="322" pos:column="56">searchKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="323" pos:column="21">var</name></type> <name pos:line="323" pos:column="25">searchResult</name> <init pos:line="323" pos:column="38">= <expr><name><name pos:line="323" pos:column="40">result</name><op:operator pos:line="323" pos:column="46">.</op:operator><name pos:line="323" pos:column="47">Content</name></name> <op:operator pos:line="323" pos:column="55">as</op:operator> <name pos:line="323" pos:column="58">CodeSearchResult</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="324" pos:column="21">FileOpener</name><op:operator pos:line="324" pos:column="31">.</op:operator><name pos:line="324" pos:column="32">OpenItem</name></name><argument_list pos:line="324" pos:column="40">(<argument><expr><name pos:line="324" pos:column="41">searchResult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="325" pos:column="21">Task</name><op:operator pos:line="325" pos:column="25">.</op:operator><name pos:line="325" pos:column="26">Factory</name><op:operator pos:line="325" pos:column="33">.</op:operator><name pos:line="325" pos:column="34">StartNew</name></name><argument_list pos:line="325" pos:column="42">(<argument><expr><lambda><parameter_list pos:line="325" pos:column="43">()</parameter_list> <op:operator pos:line="325" pos:column="46">=&gt;</op:operator>
                    <block pos:line="326" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="327" pos:column="25">Thread</name><op:operator pos:line="327" pos:column="31">.</op:operator><name pos:line="327" pos:column="32">Sleep</name></name><argument_list pos:line="327" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="327" pos:column="38">500</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="328" pos:column="25">this</name><op:operator pos:line="328" pos:column="29">.</op:operator><name pos:line="328" pos:column="30">Dispatcher</name><op:operator pos:line="328" pos:column="40">.</op:operator><name pos:line="328" pos:column="41">BeginInvoke</name></name><argument_list pos:line="328" pos:column="52">(<argument><expr><name pos:line="328" pos:column="53">HighlightStuffInvoker</name></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="76">searchResult</name><op:operator pos:line="328" pos:column="88">.</op:operator><name pos:line="328" pos:column="89">ProgramElement</name><op:operator pos:line="328" pos:column="103">.</op:operator><name pos:line="328" pos:column="104">FullFilePath</name></name></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="118">searchResult</name><op:operator pos:line="328" pos:column="130">.</op:operator>
                            <name pos:line="329" pos:column="29">ProgramElement</name><op:operator pos:line="329" pos:column="43">.</op:operator><name pos:line="329" pos:column="44">DefinitionLineNumber</name></name></expr></argument>, <argument><expr><name><name pos:line="329" pos:column="66">searchResult</name><op:operator pos:line="329" pos:column="78">.</op:operator><name pos:line="329" pos:column="79">ProgramElement</name><op:operator pos:line="329" pos:column="93">.</op:operator><name pos:line="329" pos:column="94">RawSource</name></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="105">searchKeys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <decl_stmt><decl><type><name pos:line="332" pos:column="21">var</name></type> <name pos:line="332" pos:column="25">matchDescription</name> <init pos:line="332" pos:column="42">= <expr><call><name><name pos:line="332" pos:column="44">QueryMetrics</name><op:operator pos:line="332" pos:column="56">.</op:operator><name pos:line="332" pos:column="57">DescribeQueryProgramElementMatch</name></name><argument_list pos:line="332" pos:column="89">(<argument><expr><name><name pos:line="332" pos:column="90">searchResult</name><op:operator pos:line="332" pos:column="102">.</op:operator><name pos:line="332" pos:column="103">ProgramElement</name></name></expr></argument>, <argument><expr><name><name pos:line="332" pos:column="119">searchBox</name><op:operator pos:line="332" pos:column="128">.</op:operator><name pos:line="332" pos:column="129">Text</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="333" pos:column="21">LogEvents</name><op:operator pos:line="333" pos:column="30">.</op:operator><name pos:line="333" pos:column="31">OpeningCodeSearchResult</name></name><argument_list pos:line="333" pos:column="54">(<argument><expr><name pos:line="333" pos:column="55">searchResult</name></expr></argument>, <argument><expr><call><name><name pos:line="333" pos:column="69">SearchResults</name><op:operator pos:line="333" pos:column="82">.</op:operator><name pos:line="333" pos:column="83">IndexOf</name></name><argument_list pos:line="333" pos:column="90">(<argument><expr><name pos:line="333" pos:column="91">searchResult</name></expr></argument>)</argument_list></call> <op:operator pos:line="333" pos:column="105">+</op:operator> <lit:literal type="number" pos:line="333" pos:column="107">1</lit:literal></expr></argument>, <argument><expr><name pos:line="333" pos:column="110">matchDescription</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="336" pos:column="13">catch <parameter_list pos:line="336" pos:column="19">(<param><decl><type><name pos:line="336" pos:column="20">ArgumentException</name></type> <name pos:line="336" pos:column="38">aex</name></decl></param>)</parameter_list>
            <block pos:line="337" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="338" pos:column="17">LogEvents</name><op:operator pos:line="338" pos:column="26">.</op:operator><name pos:line="338" pos:column="27">UIGenericError</name></name><argument_list pos:line="338" pos:column="41">(<argument><expr><name pos:line="338" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="338" pos:column="48">aex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="339" pos:column="17">MessageBox</name><op:operator pos:line="339" pos:column="27">.</op:operator><name pos:line="339" pos:column="28">Show</name></name><argument_list pos:line="339" pos:column="32">(<argument><expr><name pos:line="339" pos:column="33">FileNotFoundPopupMessage</name></expr></argument>, <argument><expr><name pos:line="339" pos:column="59">FileNotFoundPopupTitle</name></expr></argument>, <argument><expr><name><name pos:line="339" pos:column="83">MessageBoxButton</name><op:operator pos:line="339" pos:column="99">.</op:operator><name pos:line="339" pos:column="100">OK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch>
            <catch pos:line="341" pos:column="13">catch <parameter_list pos:line="341" pos:column="19">(<param><decl><type><name pos:line="341" pos:column="20">Exception</name></type> <name pos:line="341" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="342" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="343" pos:column="17">LogEvents</name><op:operator pos:line="343" pos:column="26">.</op:operator><name pos:line="343" pos:column="27">UIGenericError</name></name><argument_list pos:line="343" pos:column="41">(<argument><expr><name pos:line="343" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="343" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="344" pos:column="17">MessageBox</name><op:operator pos:line="344" pos:column="27">.</op:operator><name pos:line="344" pos:column="28">Show</name></name><argument_list pos:line="344" pos:column="32">(<argument><expr><name pos:line="344" pos:column="33">FileNotFoundPopupMessage</name></expr></argument>, <argument><expr><name pos:line="344" pos:column="59">FileNotFoundPopupTitle</name></expr></argument>, <argument><expr><name><name pos:line="344" pos:column="83">MessageBoxButton</name><op:operator pos:line="344" pos:column="99">.</op:operator><name pos:line="344" pos:column="100">OK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>
               
        <function><type><specifier pos:line="348" pos:column="9">public</specifier> <name pos:line="348" pos:column="16">void</name></type> <name pos:line="348" pos:column="21">Update</name><parameter_list pos:line="348" pos:column="27">(<param><decl><type><name pos:line="348" pos:column="28">string</name></type> <name pos:line="348" pos:column="35">searchString</name></decl></param>, <param><decl><type><name><name pos:line="348" pos:column="49">IQueryable</name><argument_list pos:line="348" pos:column="59">&lt;<argument><name pos:line="348" pos:column="60">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="348" pos:column="78">results</name></decl></param>)</parameter_list>
        <block pos:line="349" pos:column="9">{         
            <comment type="line" pos:line="350" pos:column="13">//prepare results for highlighting in the background, in parallel of course :)</comment>
            <decl_stmt><decl><type><name pos:line="351" pos:column="13">object</name><index pos:line="351" pos:column="19">[]</index></type> <name pos:line="351" pos:column="22">parameter</name> <init pos:line="351" pos:column="32">= <expr><block pos:line="351" pos:column="34">{ <expr><name pos:line="351" pos:column="36">results</name></expr> }</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="352" pos:column="13">var</name></type> <name pos:line="352" pos:column="17">exceptions</name> <init pos:line="352" pos:column="28">= <expr><op:operator pos:line="352" pos:column="30">new</op:operator> <call><name><name pos:line="352" pos:column="34">ConcurrentQueue</name><argument_list pos:line="352" pos:column="49">&lt;<argument><name pos:line="352" pos:column="50">Exception</name></argument>&gt;</argument_list></name><argument_list pos:line="352" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="353" pos:column="13">System</name><op:operator pos:line="353" pos:column="19">.</op:operator><name pos:line="353" pos:column="20">Threading</name><op:operator pos:line="353" pos:column="29">.</op:operator><name pos:line="353" pos:column="30">Tasks</name><op:operator pos:line="353" pos:column="35">.</op:operator><name pos:line="353" pos:column="36">Task</name><op:operator pos:line="353" pos:column="40">.</op:operator><name pos:line="353" pos:column="41">Factory</name><op:operator pos:line="353" pos:column="48">.</op:operator><name pos:line="353" pos:column="49">StartNew</name></name><argument_list pos:line="353" pos:column="57">(<argument><expr><lambda><parameter_list pos:line="353" pos:column="58">()</parameter_list> <op:operator pos:line="353" pos:column="61">=&gt;</op:operator>
            <block pos:line="354" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="355" pos:column="17">Parallel</name><op:operator pos:line="355" pos:column="25">.</op:operator><name pos:line="355" pos:column="26">ForEach</name></name><argument_list pos:line="355" pos:column="33">(<argument><expr><name pos:line="355" pos:column="34">results</name></expr></argument>, <argument><expr><lambda><name pos:line="355" pos:column="43">item</name> <op:operator pos:line="355" pos:column="48">=&gt;</op:operator>
                <block pos:line="356" pos:column="17">{
                    <try pos:line="357" pos:column="21">try
                    <block pos:line="358" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="359" pos:column="25">string</name></type> <name pos:line="359" pos:column="32">highlight</name></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="360" pos:column="25">string</name></type> <name pos:line="360" pos:column="32">highlightRaw</name></decl>;</decl_stmt>
                        <expr_stmt><expr><name><name pos:line="361" pos:column="25">item</name><op:operator pos:line="361" pos:column="29">.</op:operator><name pos:line="361" pos:column="30">HighlightOffsets</name></name> <op:operator pos:line="361" pos:column="47">=</op:operator> <call><name pos:line="361" pos:column="49">GenerateHighlight</name><argument_list pos:line="361" pos:column="66">(<argument><expr><name><name pos:line="361" pos:column="67">item</name><op:operator pos:line="361" pos:column="71">.</op:operator><name pos:line="361" pos:column="72">Raw</name></name></expr></argument>, <argument><expr><name><name pos:line="361" pos:column="77">this</name><op:operator pos:line="361" pos:column="81">.</op:operator><name pos:line="361" pos:column="82">searchKey</name></name></expr></argument>,
                            <argument><expr pos:line="362" pos:column="29">out <name pos:line="362" pos:column="33">highlight</name></expr></argument>, <argument><expr pos:line="362" pos:column="44">out <name pos:line="362" pos:column="48">highlightRaw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name pos:line="363" pos:column="25">item</name><op:operator pos:line="363" pos:column="29">.</op:operator><name pos:line="363" pos:column="30">Highlight</name></name> <op:operator pos:line="363" pos:column="40">=</op:operator> <name pos:line="363" pos:column="42">highlight</name></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name pos:line="364" pos:column="25">item</name><op:operator pos:line="364" pos:column="29">.</op:operator><name pos:line="364" pos:column="30">HighlightRaw</name></name> <op:operator pos:line="364" pos:column="43">=</op:operator> <name pos:line="364" pos:column="45">highlightRaw</name></expr>;</expr_stmt>
                    }</block>
                    <catch pos:line="366" pos:column="21">catch <parameter_list pos:line="366" pos:column="27">(<param><decl><type><name pos:line="366" pos:column="28">Exception</name></type> <name pos:line="366" pos:column="38">exc</name></decl></param>)</parameter_list>
                    <block pos:line="367" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="368" pos:column="25">exceptions</name><op:operator pos:line="368" pos:column="35">.</op:operator><name pos:line="368" pos:column="36">Enqueue</name></name><argument_list pos:line="368" pos:column="43">(<argument><expr><name pos:line="368" pos:column="44">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></catch></try>
                }</block></lambda></expr></argument>
               )</argument_list></call></expr>;</expr_stmt>
            }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="372" pos:column="15">.</op:operator>
            <comment type="line" pos:line="373" pos:column="13">//then update the UI in the UI thread</comment>
            <call><name pos:line="374" pos:column="13">ContinueWith</name><argument_list pos:line="374" pos:column="25">(<argument><expr><lambda><name pos:line="374" pos:column="26">updateUi</name> <op:operator pos:line="374" pos:column="35">=&gt;</op:operator> <call><name><name pos:line="374" pos:column="38">this</name><op:operator pos:line="374" pos:column="42">.</op:operator><name pos:line="374" pos:column="43">Dispatcher</name><op:operator pos:line="374" pos:column="53">.</op:operator><name pos:line="374" pos:column="54">BeginInvoke</name></name><argument_list pos:line="374" pos:column="65">(<argument><expr><op:operator pos:line="374" pos:column="66">new</op:operator> <call><name pos:line="374" pos:column="70">UiUpdateDelagate</name><argument_list pos:line="374" pos:column="86">(<argument><expr><name pos:line="374" pos:column="87">UpdateUiResults</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="374" pos:column="105">parameter</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        }</block></function>

        <function_decl><type><specifier pos:line="378" pos:column="9">public</specifier> <specifier pos:line="378" pos:column="16">delegate</specifier> <name pos:line="378" pos:column="25">void</name></type> <name pos:line="378" pos:column="30">UiUpdateDelagate</name><parameter_list pos:line="378" pos:column="46">(<param><decl><type><name><name pos:line="378" pos:column="47">IEnumerable</name><argument_list pos:line="378" pos:column="58">&lt;<argument><name pos:line="378" pos:column="59">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="378" pos:column="77">results</name></decl></param>)</parameter_list>;</function_decl>

        <function><type><specifier pos:line="380" pos:column="9">private</specifier> <name pos:line="380" pos:column="17">void</name></type> <name pos:line="380" pos:column="22">UpdateUiResults</name><parameter_list pos:line="380" pos:column="37">(<param><decl><type><name><name pos:line="380" pos:column="38">IEnumerable</name><argument_list pos:line="380" pos:column="49">&lt;<argument><name pos:line="380" pos:column="50">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="380" pos:column="68">results</name></decl></param>)</parameter_list>
        <block pos:line="381" pos:column="9">{
            <try pos:line="382" pos:column="13">try
            <block pos:line="383" pos:column="13">{                
                <foreach pos:line="384" pos:column="17">foreach (<init><decl><type><name pos:line="384" pos:column="26">var</name></type> <name pos:line="384" pos:column="30">codeSearchResult</name> <range pos:line="384" pos:column="47">in <expr><name pos:line="384" pos:column="50">results</name></expr></range></decl></init>)
                <block pos:line="385" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="386" pos:column="21">SearchResults</name><op:operator pos:line="386" pos:column="34">.</op:operator><name pos:line="386" pos:column="35">Add</name></name><argument_list pos:line="386" pos:column="38">(<argument><expr><name pos:line="386" pos:column="39">codeSearchResult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>
            }</block>
            <catch pos:line="389" pos:column="13">catch <parameter_list pos:line="389" pos:column="19">(<param><decl><type><name pos:line="389" pos:column="20">Exception</name></type> <name pos:line="389" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="390" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="391" pos:column="17">LogEvents</name><op:operator pos:line="391" pos:column="26">.</op:operator><name pos:line="391" pos:column="27">UIGenericError</name></name><argument_list pos:line="391" pos:column="41">(<argument><expr><name pos:line="391" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="391" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="395" pos:column="9">public</specifier> <name pos:line="395" pos:column="16">int</name><index pos:line="395" pos:column="19">[]</index></type> <name pos:line="395" pos:column="22">GenerateHighlight</name><parameter_list pos:line="395" pos:column="39">(<param><decl><type><name pos:line="395" pos:column="40">string</name></type> <name pos:line="395" pos:column="47">raw</name></decl></param>, <param><decl><type><name pos:line="395" pos:column="52">string</name></type> <name pos:line="395" pos:column="59">searchKey</name></decl></param>, <param><decl><type><specifier pos:line="395" pos:column="70">out</specifier> <name pos:line="395" pos:column="74">string</name></type> <name pos:line="395" pos:column="81">highlight_out</name></decl></param>, 
            <param><decl><type><specifier pos:line="396" pos:column="13">out</specifier> <name pos:line="396" pos:column="17">string</name></type> <name pos:line="396" pos:column="24">highlightRaw_out</name></decl></param>)</parameter_list> <block pos:line="396" pos:column="42">{
            <try pos:line="397" pos:column="13">try
            <block pos:line="398" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="399" pos:column="17">StringBuilder</name></type> <name pos:line="399" pos:column="31">highlight</name> <init pos:line="399" pos:column="41">= <expr><op:operator pos:line="399" pos:column="43">new</op:operator> <call><name pos:line="399" pos:column="47">StringBuilder</name><argument_list pos:line="399" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="400" pos:column="17">StringBuilder</name></type> <name pos:line="400" pos:column="31">highlight_Raw</name> <init pos:line="400" pos:column="45">= <expr><op:operator pos:line="400" pos:column="47">new</op:operator> <call><name pos:line="400" pos:column="51">StringBuilder</name><argument_list pos:line="400" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="402" pos:column="17">string</name><index pos:line="402" pos:column="23">[]</index></type> <name pos:line="402" pos:column="26">lines</name> <init pos:line="402" pos:column="32">= <expr><call><name><name pos:line="402" pos:column="34">raw</name><op:operator pos:line="402" pos:column="37">.</op:operator><name pos:line="402" pos:column="38">Split</name></name><argument_list pos:line="402" pos:column="43">(<argument><expr><lit:literal type="char" pos:line="402" pos:column="44">'\n'</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="403" pos:column="17">StringBuilder</name></type> <name pos:line="403" pos:column="31">newLine</name> <init pos:line="403" pos:column="39">= <expr><op:operator pos:line="403" pos:column="41">new</op:operator> <call><name pos:line="403" pos:column="45">StringBuilder</name><argument_list pos:line="403" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="405" pos:column="17">string</name><index pos:line="405" pos:column="23">[]</index></type> <name pos:line="405" pos:column="26">searchKeys</name> <init pos:line="405" pos:column="37">= <expr><call><name pos:line="405" pos:column="39">GetKeys</name><argument_list pos:line="405" pos:column="46">(<argument><expr><name pos:line="405" pos:column="47">searchKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="406" pos:column="17">string</name><index pos:line="406" pos:column="23">[]</index></type> <name pos:line="406" pos:column="26">containedKeys</name></decl>;</decl_stmt>


                <decl_stmt><decl><type><name pos:line="409" pos:column="17">var</name></type> <name pos:line="409" pos:column="21">highlightOffsets</name> <init pos:line="409" pos:column="38">= <expr><op:operator pos:line="409" pos:column="40">new</op:operator> <call><name><name pos:line="409" pos:column="44">List</name><argument_list pos:line="409" pos:column="48">&lt;<argument><name pos:line="409" pos:column="49">int</name></argument>&gt;</argument_list></name><argument_list pos:line="409" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="410" pos:column="17">int</name></type> <name pos:line="410" pos:column="21">offest</name> <init pos:line="410" pos:column="28">= <expr><lit:literal type="number" pos:line="410" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
                <foreach pos:line="411" pos:column="17">foreach (<init><decl><type><name pos:line="411" pos:column="26">string</name></type> <name pos:line="411" pos:column="33">line</name> <range pos:line="411" pos:column="38">in <expr><name pos:line="411" pos:column="41">lines</name></expr></range></decl></init>)
                <block pos:line="412" pos:column="17">{

                    <expr_stmt><expr><name pos:line="414" pos:column="21">containedKeys</name> <op:operator pos:line="414" pos:column="35">=</op:operator> <call><name pos:line="414" pos:column="37">GetContainedSearchKeys</name><argument_list pos:line="414" pos:column="59">(<argument><expr><name pos:line="414" pos:column="60">searchKeys</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="72">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if pos:line="416" pos:column="21">if <condition pos:line="416" pos:column="24">(<expr><name><name pos:line="416" pos:column="25">containedKeys</name><op:operator pos:line="416" pos:column="38">.</op:operator><name pos:line="416" pos:column="39">Length</name></name> <op:operator pos:line="416" pos:column="46">!=</op:operator> <lit:literal type="number" pos:line="416" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="416" pos:column="51">
                    <block pos:line="417" pos:column="21">{

                        <decl_stmt><decl><type><name pos:line="419" pos:column="25">string</name></type> <name pos:line="419" pos:column="32">temp_line</name> <init pos:line="419" pos:column="42">= <expr><call><name><name pos:line="419" pos:column="44">string</name><op:operator pos:line="419" pos:column="50">.</op:operator><name pos:line="419" pos:column="51">Copy</name></name><argument_list pos:line="419" pos:column="55">(<argument><expr><name pos:line="419" pos:column="56">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="420" pos:column="25">int</name></type> <name pos:line="420" pos:column="29">loc</name></decl>;</decl_stmt>
                        <comment type="line" pos:line="421" pos:column="25">//One line contain multiple words</comment>
                        <foreach pos:line="422" pos:column="25">foreach (<init><decl><type><name pos:line="422" pos:column="34">string</name></type> <name pos:line="422" pos:column="41">key</name> <range pos:line="422" pos:column="45">in <expr><name pos:line="422" pos:column="48">containedKeys</name></expr></range></decl></init>)
                        <block pos:line="423" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="424" pos:column="29">newLine</name><op:operator pos:line="424" pos:column="36">.</op:operator><name pos:line="424" pos:column="37">Clear</name></name><argument_list pos:line="424" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                            <while pos:line="425" pos:column="29">while <condition pos:line="425" pos:column="35">(<expr><op:operator pos:line="425" pos:column="36">(</op:operator><name pos:line="425" pos:column="37">loc</name> <op:operator pos:line="425" pos:column="41">=</op:operator> <call><name><name pos:line="425" pos:column="43">temp_line</name><op:operator pos:line="425" pos:column="52">.</op:operator><name pos:line="425" pos:column="53">IndexOf</name></name><argument_list pos:line="425" pos:column="60">(<argument><expr><name pos:line="425" pos:column="61">key</name></expr></argument>, <argument><expr><name><name pos:line="425" pos:column="66">StringComparison</name><op:operator pos:line="425" pos:column="82">.</op:operator><name pos:line="425" pos:column="83">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call><op:operator pos:line="425" pos:column="110">)</op:operator> <op:operator pos:line="425" pos:column="112">&gt;=</op:operator> <lit:literal type="number" pos:line="425" pos:column="115">0</lit:literal></expr>)</condition>
                            <block pos:line="426" pos:column="29">{

                                <decl_stmt><decl><type><name pos:line="428" pos:column="33">string</name></type> <name pos:line="428" pos:column="40">replaceKey</name> <init pos:line="428" pos:column="51">= <expr><lit:literal type="string" pos:line="428" pos:column="53">"|~S~|"</lit:literal> <op:operator pos:line="428" pos:column="61">+</op:operator> <call><name><name pos:line="428" pos:column="63">temp_line</name><op:operator pos:line="428" pos:column="72">.</op:operator><name pos:line="428" pos:column="73">Substring</name></name><argument_list pos:line="428" pos:column="82">(<argument><expr><name pos:line="428" pos:column="83">loc</name></expr></argument>, <argument><expr><name><name pos:line="428" pos:column="88">key</name><op:operator pos:line="428" pos:column="91">.</op:operator><name pos:line="428" pos:column="92">Length</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="428" pos:column="100">+</op:operator> <lit:literal type="string" pos:line="428" pos:column="102">"|~E~|"</lit:literal></expr></init></decl>;</decl_stmt>
                                <expr_stmt><expr><call><name><name pos:line="429" pos:column="33">newLine</name><op:operator pos:line="429" pos:column="40">.</op:operator><name pos:line="429" pos:column="41">Append</name></name><argument_list pos:line="429" pos:column="47">(<argument><expr><call><name><name pos:line="429" pos:column="48">temp_line</name><op:operator pos:line="429" pos:column="57">.</op:operator><name pos:line="429" pos:column="58">Substring</name></name><argument_list pos:line="429" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="429" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><name pos:line="429" pos:column="71">loc</name></expr></argument>)</argument_list></call> <op:operator pos:line="429" pos:column="76">+</op:operator> <name pos:line="429" pos:column="78">replaceKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><name pos:line="430" pos:column="33">temp_line</name> <op:operator pos:line="430" pos:column="43">=</op:operator> <call><name><name pos:line="430" pos:column="45">temp_line</name><op:operator pos:line="430" pos:column="54">.</op:operator><name pos:line="430" pos:column="55">Remove</name></name><argument_list pos:line="430" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="430" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><name pos:line="430" pos:column="65">loc</name> <op:operator pos:line="430" pos:column="69">+</op:operator> <name><name pos:line="430" pos:column="71">key</name><op:operator pos:line="430" pos:column="74">.</op:operator><name pos:line="430" pos:column="75">Length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            }</block></while>

                            <expr_stmt><expr><call><name><name pos:line="434" pos:column="29">newLine</name><op:operator pos:line="434" pos:column="36">.</op:operator><name pos:line="434" pos:column="37">Append</name></name><argument_list pos:line="434" pos:column="43">(<argument><expr><name pos:line="434" pos:column="44">temp_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><name pos:line="435" pos:column="29">temp_line</name> <op:operator pos:line="435" pos:column="39">=</op:operator> <call><name><name pos:line="435" pos:column="41">newLine</name><op:operator pos:line="435" pos:column="48">.</op:operator><name pos:line="435" pos:column="49">ToString</name></name><argument_list pos:line="435" pos:column="57">()</argument_list></call></expr>;</expr_stmt>

                        }</block></foreach>
                        <expr_stmt><expr><call><name><name pos:line="438" pos:column="25">highlightOffsets</name><op:operator pos:line="438" pos:column="41">.</op:operator><name pos:line="438" pos:column="42">Add</name></name><argument_list pos:line="438" pos:column="45">(<argument><expr><name pos:line="438" pos:column="46">offest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="439" pos:column="25">highlight</name><op:operator pos:line="439" pos:column="34">.</op:operator><name pos:line="439" pos:column="35">Append</name></name><argument_list pos:line="439" pos:column="41">(<argument><expr><name pos:line="439" pos:column="42">newLine</name> <op:operator pos:line="439" pos:column="50">+</op:operator> <name><name pos:line="439" pos:column="52">Environment</name><op:operator pos:line="439" pos:column="63">.</op:operator><name pos:line="439" pos:column="64">NewLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="440" pos:column="25">highlight_Raw</name><op:operator pos:line="440" pos:column="38">.</op:operator><name pos:line="440" pos:column="39">Append</name></name><argument_list pos:line="440" pos:column="45">(<argument><expr><name pos:line="440" pos:column="46">newLine</name> <op:operator pos:line="440" pos:column="54">+</op:operator> <name><name pos:line="440" pos:column="56">Environment</name><op:operator pos:line="440" pos:column="67">.</op:operator><name pos:line="440" pos:column="68">NewLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="442" pos:column="21">else
                    <block pos:line="443" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="444" pos:column="25">highlight_Raw</name><op:operator pos:line="444" pos:column="38">.</op:operator><name pos:line="444" pos:column="39">Append</name></name><argument_list pos:line="444" pos:column="45">(<argument><expr><name pos:line="444" pos:column="46">line</name> <op:operator pos:line="444" pos:column="51">+</op:operator> <name><name pos:line="444" pos:column="53">Environment</name><op:operator pos:line="444" pos:column="64">.</op:operator><name pos:line="444" pos:column="65">NewLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                    <expr_stmt><expr><name pos:line="446" pos:column="21">offest</name><op:operator pos:line="446" pos:column="27">++</op:operator></expr>;</expr_stmt>
                }</block></foreach>

                <expr_stmt><expr><name pos:line="449" pos:column="17">highlight_out</name> <op:operator pos:line="449" pos:column="31">=</op:operator> <call><name><name pos:line="449" pos:column="33">highlight</name><op:operator pos:line="449" pos:column="42">.</op:operator><name pos:line="449" pos:column="43">ToString</name></name><argument_list pos:line="449" pos:column="51">()</argument_list></call><op:operator pos:line="449" pos:column="53">.</op:operator><call><name pos:line="449" pos:column="54">Replace</name><argument_list pos:line="449" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="449" pos:column="62">"\t"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="449" pos:column="68">"    "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="450" pos:column="17">highlightRaw_out</name> <op:operator pos:line="450" pos:column="34">=</op:operator> <call><name><name pos:line="450" pos:column="36">highlight_Raw</name><op:operator pos:line="450" pos:column="49">.</op:operator><name pos:line="450" pos:column="50">ToString</name></name><argument_list pos:line="450" pos:column="58">()</argument_list></call><op:operator pos:line="450" pos:column="60">.</op:operator><call><name pos:line="450" pos:column="61">Replace</name><argument_list pos:line="450" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="450" pos:column="69">"\t"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="450" pos:column="75">"    "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="451" pos:column="17">return <expr><call><name><name pos:line="451" pos:column="24">highlightOffsets</name><op:operator pos:line="451" pos:column="40">.</op:operator><name pos:line="451" pos:column="41">ToArray</name></name><argument_list pos:line="451" pos:column="48">()</argument_list></call></expr>;</return>
            }</block>
            <catch pos:line="453" pos:column="13">catch <parameter_list pos:line="453" pos:column="19">(<param><decl><type><name pos:line="453" pos:column="20">Exception</name></type> <name pos:line="453" pos:column="30">e</name></decl></param>)</parameter_list>
            <block pos:line="454" pos:column="13">{
                <expr_stmt><expr><name pos:line="455" pos:column="17">highlightRaw_out</name> <op:operator pos:line="455" pos:column="34">=</op:operator> <name pos:line="455" pos:column="36">raw</name></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="456" pos:column="17">var</name></type> <name pos:line="456" pos:column="21">lines</name> <init pos:line="456" pos:column="27">= <expr><call><name><name pos:line="456" pos:column="29">raw</name><op:operator pos:line="456" pos:column="32">.</op:operator><name pos:line="456" pos:column="33">Split</name></name><argument_list pos:line="456" pos:column="38">(<argument><expr><lit:literal type="char" pos:line="456" pos:column="39">'\n'</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="457" pos:column="17">var</name></type> <name pos:line="457" pos:column="21">keys</name> <init pos:line="457" pos:column="26">= <expr><call><name pos:line="457" pos:column="28">GetKeys</name><argument_list pos:line="457" pos:column="35">(<argument><expr><name pos:line="457" pos:column="36">searchKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="458" pos:column="17">var</name></type> <name pos:line="458" pos:column="21">sb</name> <init pos:line="458" pos:column="24">= <expr><op:operator pos:line="458" pos:column="26">new</op:operator> <call><name pos:line="458" pos:column="30">StringBuilder</name><argument_list pos:line="458" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="459" pos:column="17">var</name></type> <name pos:line="459" pos:column="21">offesets</name> <init pos:line="459" pos:column="30">= <expr><op:operator pos:line="459" pos:column="32">new</op:operator> <call><name><name pos:line="459" pos:column="36">List</name><argument_list pos:line="459" pos:column="40">&lt;<argument><name pos:line="459" pos:column="41">int</name></argument>&gt;</argument_list></name><argument_list pos:line="459" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <for pos:line="460" pos:column="17">for (<init><decl><type><name pos:line="460" pos:column="22">int</name></type> <name pos:line="460" pos:column="26">i</name> <init pos:line="460" pos:column="28">= <expr><lit:literal type="number" pos:line="460" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="460" pos:column="33">i</name> <op:operator pos:line="460" pos:column="35">&lt;</op:operator> <call><name><name pos:line="460" pos:column="37">lines</name><op:operator pos:line="460" pos:column="42">.</op:operator><name pos:line="460" pos:column="43">Count</name></name><argument_list pos:line="460" pos:column="48">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="460" pos:column="52">i</name> <op:operator pos:line="460" pos:column="54">++</op:operator></expr></incr>)
                <block pos:line="461" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="462" pos:column="21">var</name></type> <name pos:line="462" pos:column="25">containedKeys</name> <init pos:line="462" pos:column="39">= <expr><call><name pos:line="462" pos:column="41">GetContainedSearchKeys</name><argument_list pos:line="462" pos:column="63">(<argument><expr><name pos:line="462" pos:column="64">keys</name></expr></argument>, <argument><expr><call><name><name pos:line="462" pos:column="70">lines</name><op:operator pos:line="462" pos:column="75">.</op:operator><name pos:line="462" pos:column="76">ElementAt</name></name><argument_list pos:line="462" pos:column="85">(<argument><expr><name pos:line="462" pos:column="86">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="463" pos:column="21">if <condition pos:line="463" pos:column="24">(<expr><call><name><name pos:line="463" pos:column="25">containedKeys</name><op:operator pos:line="463" pos:column="38">.</op:operator><name pos:line="463" pos:column="39">Any</name></name><argument_list pos:line="463" pos:column="42">()</argument_list></call></expr>)</condition><then pos:line="463" pos:column="45">
                    <block pos:line="464" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="465" pos:column="25">sb</name><op:operator pos:line="465" pos:column="27">.</op:operator><name pos:line="465" pos:column="28">AppendLine</name></name><argument_list pos:line="465" pos:column="38">(<argument><expr><call><name><name pos:line="465" pos:column="39">lines</name><op:operator pos:line="465" pos:column="44">.</op:operator><name pos:line="465" pos:column="45">ElementAt</name></name><argument_list pos:line="465" pos:column="54">(<argument><expr><name pos:line="465" pos:column="55">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="466" pos:column="25">offesets</name><op:operator pos:line="466" pos:column="33">.</op:operator><name pos:line="466" pos:column="34">Add</name></name><argument_list pos:line="466" pos:column="37">(<argument><expr><name pos:line="466" pos:column="38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></for>
                <expr_stmt><expr><name pos:line="469" pos:column="17">highlight_out</name> <op:operator pos:line="469" pos:column="31">=</op:operator> <call><name><name pos:line="469" pos:column="33">sb</name><op:operator pos:line="469" pos:column="35">.</op:operator><name pos:line="469" pos:column="36">ToString</name></name><argument_list pos:line="469" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
               <return pos:line="470" pos:column="16">return <expr><call><name><name pos:line="470" pos:column="23">offesets</name><op:operator pos:line="470" pos:column="31">.</op:operator><name pos:line="470" pos:column="32">ToArray</name></name><argument_list pos:line="470" pos:column="39">()</argument_list></call></expr>;</return>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="474" pos:column="9">public</specifier> <specifier pos:line="474" pos:column="16">static</specifier> <name pos:line="474" pos:column="23">string</name><index pos:line="474" pos:column="29">[]</index></type> <name pos:line="474" pos:column="32">GetKeys</name><parameter_list pos:line="474" pos:column="39">(<param><decl><type><name pos:line="474" pos:column="40">string</name></type> <name pos:line="474" pos:column="47">searchKey</name></decl></param>)</parameter_list> <block pos:line="474" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="475" pos:column="13">SandoQueryParser</name></type> <name pos:line="475" pos:column="30">parser</name> <init pos:line="475" pos:column="37">= <expr><op:operator pos:line="475" pos:column="39">new</op:operator> <call><name pos:line="475" pos:column="43">SandoQueryParser</name><argument_list pos:line="475" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="476" pos:column="13">var</name></type> <name pos:line="476" pos:column="17">description</name> <init pos:line="476" pos:column="29">= <expr><call><name><name pos:line="476" pos:column="31">parser</name><op:operator pos:line="476" pos:column="37">.</op:operator><name pos:line="476" pos:column="38">Parse</name></name><argument_list pos:line="476" pos:column="43">(<argument><expr><name pos:line="476" pos:column="44">searchKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="477" pos:column="13">var</name></type> <name pos:line="477" pos:column="17">terms</name> <init pos:line="477" pos:column="23">= <expr><name><name pos:line="477" pos:column="25">description</name><op:operator pos:line="477" pos:column="36">.</op:operator><name pos:line="477" pos:column="37">SearchTerms</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="478" pos:column="13">HashSet</name><argument_list pos:line="478" pos:column="20">&lt;<argument><name pos:line="478" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="478" pos:column="29">keys</name> <init pos:line="478" pos:column="34">= <expr><op:operator pos:line="478" pos:column="36">new</op:operator> <call><name><name pos:line="478" pos:column="40">HashSet</name><argument_list pos:line="478" pos:column="47">&lt;<argument><name pos:line="478" pos:column="48">string</name></argument>&gt;</argument_list></name><argument_list pos:line="478" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="479" pos:column="13">foreach(<init><decl><type><name pos:line="479" pos:column="21">var</name></type> <name pos:line="479" pos:column="25">term</name> <range pos:line="479" pos:column="30">in <expr><name pos:line="479" pos:column="33">terms</name></expr></range></decl></init>) <block pos:line="479" pos:column="40">{
                <expr_stmt><expr><call><name><name pos:line="480" pos:column="17">keys</name><op:operator pos:line="480" pos:column="21">.</op:operator><name pos:line="480" pos:column="22">Add</name></name><argument_list pos:line="480" pos:column="25">(<argument><expr><call><name><name pos:line="480" pos:column="26">DictionaryHelper</name><op:operator pos:line="480" pos:column="42">.</op:operator><name pos:line="480" pos:column="43">GetStemmedQuery</name></name><argument_list pos:line="480" pos:column="58">(<argument><expr><name pos:line="480" pos:column="59">term</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="481" pos:column="17">keys</name><op:operator pos:line="481" pos:column="21">.</op:operator><name pos:line="481" pos:column="22">Add</name></name><argument_list pos:line="481" pos:column="25">(<argument><expr><name pos:line="481" pos:column="26">term</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
            <foreach pos:line="483" pos:column="13">foreach (<init><decl><type><name pos:line="483" pos:column="22">var</name></type> <name pos:line="483" pos:column="26">quote</name> <range pos:line="483" pos:column="32">in <expr><name><name pos:line="483" pos:column="35">description</name><op:operator pos:line="483" pos:column="46">.</op:operator><name pos:line="483" pos:column="47">LiteralSearchTerms</name></name></expr></range></decl></init>)
            <block pos:line="484" pos:column="13">{

                <decl_stmt><decl><type><name pos:line="486" pos:column="17">var</name></type> <name pos:line="486" pos:column="21">toAdd</name> <init pos:line="486" pos:column="27">= <expr><call><name><name pos:line="486" pos:column="29">quote</name><op:operator pos:line="486" pos:column="34">.</op:operator><name pos:line="486" pos:column="35">Substring</name></name><argument_list pos:line="486" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="486" pos:column="45">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="487" pos:column="17">toAdd</name> <op:operator pos:line="487" pos:column="23">=</op:operator> <call><name><name pos:line="487" pos:column="25">toAdd</name><op:operator pos:line="487" pos:column="30">.</op:operator><name pos:line="487" pos:column="31">Substring</name></name><argument_list pos:line="487" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="487" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="487" pos:column="44">toAdd</name><op:operator pos:line="487" pos:column="49">.</op:operator><name pos:line="487" pos:column="50">Length</name></name> <op:operator pos:line="487" pos:column="57">-</op:operator> <lit:literal type="number" pos:line="487" pos:column="59">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="488" pos:column="17">//unescape '\' and '"'s</comment>
                <expr_stmt><expr><name pos:line="489" pos:column="17">toAdd</name> <op:operator pos:line="489" pos:column="23">=</op:operator> <call><name><name pos:line="489" pos:column="25">toAdd</name><op:operator pos:line="489" pos:column="30">.</op:operator><name pos:line="489" pos:column="31">Replace</name></name><argument_list pos:line="489" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="489" pos:column="39">"\\\""</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="489" pos:column="46">"\""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="490" pos:column="17">toAdd</name> <op:operator pos:line="490" pos:column="23">=</op:operator> <call><name><name pos:line="490" pos:column="25">toAdd</name><op:operator pos:line="490" pos:column="30">.</op:operator><name pos:line="490" pos:column="31">Replace</name></name><argument_list pos:line="490" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="490" pos:column="39">"\\\\"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="490" pos:column="47">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="491" pos:column="17">keys</name><op:operator pos:line="491" pos:column="21">.</op:operator><name pos:line="491" pos:column="22">Add</name></name><argument_list pos:line="491" pos:column="25">(<argument><expr><name pos:line="491" pos:column="26">toAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
            <return pos:line="493" pos:column="13">return <expr><call><name><name pos:line="493" pos:column="20">keys</name><op:operator pos:line="493" pos:column="24">.</op:operator><name pos:line="493" pos:column="25">ToArray</name></name><argument_list pos:line="493" pos:column="32">()</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="496" pos:column="9">//Return the contained search key</comment>
        <function><type><specifier pos:line="497" pos:column="9">private</specifier> <name pos:line="497" pos:column="17">string</name><index pos:line="497" pos:column="23">[]</index></type> <name pos:line="497" pos:column="26">GetContainedSearchKeys</name><parameter_list pos:line="497" pos:column="48">(<param><decl><type><name><name pos:line="497" pos:column="49">string</name><index pos:line="497" pos:column="55">[]</index></name></type> <name pos:line="497" pos:column="58">searchKeys</name></decl></param>, <param><decl><type><name pos:line="497" pos:column="70">string</name></type> <name pos:line="497" pos:column="77">line</name></decl></param>)</parameter_list>
        <block pos:line="498" pos:column="9">{
            <expr_stmt><expr><name pos:line="499" pos:column="13">searchKeys</name> <op:operator pos:line="499" pos:column="24">=</op:operator> <call><name pos:line="499" pos:column="26">RemovePartialWords</name><argument_list pos:line="499" pos:column="44">(<argument><expr><call><name><name pos:line="499" pos:column="45">searchKeys</name><op:operator pos:line="499" pos:column="55">.</op:operator><name pos:line="499" pos:column="56">Where</name></name><argument_list pos:line="499" pos:column="61">(<argument><expr><lambda><name pos:line="499" pos:column="62">k</name> <op:operator pos:line="499" pos:column="64">=&gt;</op:operator> <call><name><name pos:line="499" pos:column="67">line</name><op:operator pos:line="499" pos:column="71">.</op:operator><name pos:line="499" pos:column="72">IndexOf</name></name><argument_list pos:line="499" pos:column="79">(<argument><expr><name pos:line="499" pos:column="80">k</name></expr></argument>, 
                <argument><expr><name><name pos:line="500" pos:column="17">StringComparison</name><op:operator pos:line="500" pos:column="33">.</op:operator><name pos:line="500" pos:column="34">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="500" pos:column="62">&gt;=</op:operator> <lit:literal type="number" pos:line="500" pos:column="65">0</lit:literal></lambda></expr></argument>)</argument_list></call><op:operator pos:line="500" pos:column="67">.</op:operator><call><name pos:line="500" pos:column="68">ToArray</name><argument_list pos:line="500" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>       
            <decl_stmt><decl><type><name pos:line="501" pos:column="13">var</name></type> <name pos:line="501" pos:column="17">containedKeys</name> <init pos:line="501" pos:column="31">= <expr><op:operator pos:line="501" pos:column="33">new</op:operator> <call><name><name pos:line="501" pos:column="37">Dictionary</name><argument_list pos:line="501" pos:column="47">&lt;<argument><name pos:line="501" pos:column="48">String</name></argument>, <argument><name pos:line="501" pos:column="56">int</name></argument>&gt;</argument_list></name><argument_list pos:line="501" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="502" pos:column="13">foreach (<init><decl><type><name pos:line="502" pos:column="22">string</name></type> <name pos:line="502" pos:column="29">key</name> <range pos:line="502" pos:column="33">in <expr><name pos:line="502" pos:column="36">searchKeys</name></expr></range></decl></init>)<block pos:line="502" pos:column="47">{
                <decl_stmt><decl><type><name pos:line="503" pos:column="17">var</name></type> <name pos:line="503" pos:column="21">index</name> <init pos:line="503" pos:column="27">= <expr><call><name><name pos:line="503" pos:column="29">line</name><op:operator pos:line="503" pos:column="33">.</op:operator><name pos:line="503" pos:column="34">IndexOf</name></name><argument_list pos:line="503" pos:column="41">(<argument><expr><name pos:line="503" pos:column="42">key</name></expr></argument>, <argument><expr><name><name pos:line="503" pos:column="47">StringComparison</name><op:operator pos:line="503" pos:column="63">.</op:operator><name pos:line="503" pos:column="64">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="504" pos:column="17">if <condition pos:line="504" pos:column="20">(<expr><name pos:line="504" pos:column="21">index</name> <op:operator pos:line="504" pos:column="27">&gt;=</op:operator> <lit:literal type="number" pos:line="504" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="504" pos:column="32">
                <block pos:line="505" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="506" pos:column="21">containedKeys</name><op:operator pos:line="506" pos:column="34">.</op:operator><name pos:line="506" pos:column="35">Add</name></name><argument_list pos:line="506" pos:column="38">(<argument><expr><name pos:line="506" pos:column="39">key</name></expr></argument>, <argument><expr><name pos:line="506" pos:column="44">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></foreach>
            <return pos:line="509" pos:column="13">return <expr><call><name><name pos:line="509" pos:column="20">containedKeys</name><op:operator pos:line="509" pos:column="33">.</op:operator><name pos:line="509" pos:column="34">OrderBy</name></name><argument_list pos:line="509" pos:column="41">(<argument><expr><lambda><name pos:line="509" pos:column="42">p</name> <op:operator pos:line="509" pos:column="44">=&gt;</op:operator> <name><name pos:line="509" pos:column="47">p</name><op:operator pos:line="509" pos:column="48">.</op:operator><name pos:line="509" pos:column="49">Value</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="509" pos:column="55">.</op:operator><call><name pos:line="509" pos:column="56">Select</name><argument_list pos:line="509" pos:column="62">(<argument><expr><lambda><name pos:line="509" pos:column="63">p</name> <op:operator pos:line="509" pos:column="65">=&gt;</op:operator> <name><name pos:line="509" pos:column="68">p</name><op:operator pos:line="509" pos:column="69">.</op:operator><name pos:line="509" pos:column="70">Key</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="509" pos:column="74">.</op:operator><call><name pos:line="509" pos:column="75">ToArray</name><argument_list pos:line="509" pos:column="82">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="512" pos:column="9">private</specifier> <name pos:line="512" pos:column="17">string</name><index pos:line="512" pos:column="23">[]</index></type> <name pos:line="512" pos:column="26">RemovePartialWords</name><parameter_list pos:line="512" pos:column="44">(<param><decl><type><name><name pos:line="512" pos:column="45">string</name><index pos:line="512" pos:column="51">[]</index></name></type> <name pos:line="512" pos:column="54">words</name></decl></param>)</parameter_list>
        <block pos:line="513" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="514" pos:column="13">var</name></type> <name pos:line="514" pos:column="17">removedIndex</name> <init pos:line="514" pos:column="30">= <expr><op:operator pos:line="514" pos:column="32">new</op:operator> <call><name><name pos:line="514" pos:column="36">List</name><argument_list pos:line="514" pos:column="40">&lt;<argument><name pos:line="514" pos:column="41">int</name></argument>&gt;</argument_list></name><argument_list pos:line="514" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="515" pos:column="13">var</name></type> <name pos:line="515" pos:column="17">sortedWords</name> <init pos:line="515" pos:column="29">= <expr><call><name><name pos:line="515" pos:column="31">words</name><op:operator pos:line="515" pos:column="36">.</op:operator><name pos:line="515" pos:column="37">OrderByDescending</name></name><argument_list pos:line="515" pos:column="54">(<argument><expr><lambda><name pos:line="515" pos:column="55">w</name> <op:operator pos:line="515" pos:column="57">=&gt;</op:operator> <name><name pos:line="515" pos:column="60">w</name><op:operator pos:line="515" pos:column="61">.</op:operator><name pos:line="515" pos:column="62">Length</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="515" pos:column="69">.</op:operator><call><name pos:line="515" pos:column="70">ToList</name><argument_list pos:line="515" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for pos:line="516" pos:column="13">for (<init><decl><type><name pos:line="516" pos:column="18">int</name></type> <name pos:line="516" pos:column="22">i</name> <init pos:line="516" pos:column="24">= <expr><call><name><name pos:line="516" pos:column="26">sortedWords</name><op:operator pos:line="516" pos:column="37">.</op:operator><name pos:line="516" pos:column="38">Count</name></name><argument_list pos:line="516" pos:column="43">()</argument_list></call> <op:operator pos:line="516" pos:column="46">-</op:operator> <lit:literal type="number" pos:line="516" pos:column="48">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="516" pos:column="51">i</name> <op:operator pos:line="516" pos:column="53">&gt;</op:operator> <lit:literal type="number" pos:line="516" pos:column="55">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="516" pos:column="58">i</name><op:operator pos:line="516" pos:column="59">--</op:operator></expr></incr>)
            <block pos:line="517" pos:column="13">{
                <for pos:line="518" pos:column="17">for (<init><decl><type><name pos:line="518" pos:column="22">int</name></type> <name pos:line="518" pos:column="26">j</name> <init pos:line="518" pos:column="28">= <expr><name pos:line="518" pos:column="30">i</name> <op:operator pos:line="518" pos:column="32">-</op:operator> <lit:literal type="number" pos:line="518" pos:column="34">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="518" pos:column="37">j</name> <op:operator pos:line="518" pos:column="39">&gt;=</op:operator> <lit:literal type="number" pos:line="518" pos:column="42">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="518" pos:column="45">j</name><op:operator pos:line="518" pos:column="46">--</op:operator></expr></incr>)
                <block pos:line="519" pos:column="17">{
                    <if pos:line="520" pos:column="21">if <condition pos:line="520" pos:column="24">(<expr><name><name pos:line="520" pos:column="25">sortedWords</name><index pos:line="520" pos:column="36">[<expr><name pos:line="520" pos:column="37">j</name></expr>]</index></name><op:operator pos:line="520" pos:column="39">.</op:operator><call><name pos:line="520" pos:column="40">IndexOf</name><argument_list pos:line="520" pos:column="47">(<argument><expr><name><name pos:line="520" pos:column="48">sortedWords</name><index pos:line="520" pos:column="59">[<expr><name pos:line="520" pos:column="60">i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="520" pos:column="64">StringComparison</name><op:operator pos:line="520" pos:column="80">.</op:operator>
                        <name pos:line="521" pos:column="25">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="521" pos:column="53">&gt;=</op:operator> <lit:literal type="number" pos:line="521" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="521" pos:column="58">
                    <block pos:line="522" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="523" pos:column="25">removedIndex</name><op:operator pos:line="523" pos:column="37">.</op:operator><name pos:line="523" pos:column="38">Add</name></name><argument_list pos:line="523" pos:column="41">(<argument><expr><name pos:line="523" pos:column="42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <break pos:line="524" pos:column="25">break;</break>
                    }</block></then></if>
                }</block></for>
            }</block></for>
            <foreach pos:line="528" pos:column="13">foreach (<init><decl><type><name pos:line="528" pos:column="22">var</name></type> <name pos:line="528" pos:column="26">index</name> <range pos:line="528" pos:column="32">in <expr><call><name><name pos:line="528" pos:column="35">removedIndex</name><op:operator pos:line="528" pos:column="47">.</op:operator><name pos:line="528" pos:column="48">Distinct</name></name><argument_list pos:line="528" pos:column="56">()</argument_list></call><op:operator pos:line="528" pos:column="58">.</op:operator><call><name pos:line="528" pos:column="59">OrderByDescending</name><argument_list pos:line="528" pos:column="76">(<argument><expr><lambda><name pos:line="528" pos:column="77">i</name> <op:operator pos:line="528" pos:column="79">=&gt;</op:operator> <name pos:line="528" pos:column="82">i</name></lambda></expr></argument>)</argument_list></call></expr></range></decl></init>)
            <block pos:line="529" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="530" pos:column="17">sortedWords</name><op:operator pos:line="530" pos:column="28">.</op:operator><name pos:line="530" pos:column="29">RemoveAt</name></name><argument_list pos:line="530" pos:column="37">(<argument><expr><name pos:line="530" pos:column="38">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
            <return pos:line="532" pos:column="13">return <expr><call><name><name pos:line="532" pos:column="20">sortedWords</name><op:operator pos:line="532" pos:column="31">.</op:operator><name pos:line="532" pos:column="32">ToArray</name></name><argument_list pos:line="532" pos:column="39">()</argument_list></call></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="536" pos:column="9">public</specifier> <name pos:line="536" pos:column="16">void</name></type> <name pos:line="536" pos:column="21">UpdateMessage</name><parameter_list pos:line="536" pos:column="34">(<param><decl><type><name pos:line="536" pos:column="35">string</name></type> <name pos:line="536" pos:column="42">message</name></decl></param>)</parameter_list>
        <block pos:line="537" pos:column="9">{
            <if pos:line="538" pos:column="13">if <condition pos:line="538" pos:column="16">(<expr><name><name pos:line="538" pos:column="17">Thread</name><op:operator pos:line="538" pos:column="23">.</op:operator><name pos:line="538" pos:column="24">CurrentThread</name></name> <op:operator pos:line="538" pos:column="38">==</op:operator> <name><name pos:line="538" pos:column="41">Dispatcher</name><op:operator pos:line="538" pos:column="51">.</op:operator><name pos:line="538" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="538" pos:column="59">
            <block pos:line="539" pos:column="13">{
                <expr_stmt><expr><name pos:line="540" pos:column="17">SearchStatus</name> <op:operator pos:line="540" pos:column="30">=</op:operator> <name pos:line="540" pos:column="32">message</name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="542" pos:column="13">else
            <block pos:line="543" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="544" pos:column="17">Dispatcher</name><op:operator pos:line="544" pos:column="27">.</op:operator><name pos:line="544" pos:column="28">Invoke</name></name><argument_list pos:line="544" pos:column="34">(<argument><expr><call pos:line="544" pos:column="35">(<name pos:line="544" pos:column="36">Action</name>)<argument_list pos:line="544" pos:column="43">(<argument><expr><lambda><parameter_list pos:line="544" pos:column="44">()</parameter_list> <op:operator pos:line="544" pos:column="47">=&gt;</op:operator> <name pos:line="544" pos:column="50">SearchStatus</name> <op:operator pos:line="544" pos:column="63">=</op:operator> <name pos:line="544" pos:column="65">message</name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="548" pos:column="9">private</specifier> <name pos:line="548" pos:column="17">void</name></type> <name pos:line="548" pos:column="22">UpdateExpansionState</name><parameter_list pos:line="548" pos:column="42">(<param><decl><type><name pos:line="548" pos:column="43">ListView</name></type> <name pos:line="548" pos:column="52">view</name></decl></param>)</parameter_list>
        <block pos:line="549" pos:column="9">{
            <return pos:line="550" pos:column="13">return;</return>

            <if pos:line="552" pos:column="13">if <condition pos:line="552" pos:column="16">(<expr><name pos:line="552" pos:column="17">view</name> <op:operator pos:line="552" pos:column="22">!=</op:operator> <name pos:line="552" pos:column="25">null</name></expr>)</condition><then pos:line="552" pos:column="30">
            <block pos:line="553" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="554" pos:column="17">var</name></type> <name pos:line="554" pos:column="21">selectedIndex</name> <init pos:line="554" pos:column="35">= <expr><name><name pos:line="554" pos:column="37">view</name><op:operator pos:line="554" pos:column="41">.</op:operator><name pos:line="554" pos:column="42">SelectedIndex</name></name></expr></init></decl>;</decl_stmt>

                <if pos:line="556" pos:column="17">if <condition pos:line="556" pos:column="20">(<expr><call><name pos:line="556" pos:column="21">IsExpandAllChecked</name><argument_list pos:line="556" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="556" pos:column="42">
                <block pos:line="557" pos:column="17">{
                    <for pos:line="558" pos:column="21">for (<init><decl><type><name pos:line="558" pos:column="26">var</name></type> <name pos:line="558" pos:column="30">currentIndex</name> <init pos:line="558" pos:column="43">= <expr><lit:literal type="number" pos:line="558" pos:column="45">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="558" pos:column="48">currentIndex</name> <op:operator pos:line="558" pos:column="61">&lt;</op:operator> <name><name pos:line="558" pos:column="63">view</name><op:operator pos:line="558" pos:column="67">.</op:operator><name pos:line="558" pos:column="68">Items</name><op:operator pos:line="558" pos:column="73">.</op:operator><name pos:line="558" pos:column="74">Count</name></name></expr>;</condition> <incr><expr><op:operator pos:line="558" pos:column="81">++</op:operator><name pos:line="558" pos:column="83">currentIndex</name></expr></incr>)
                    <block pos:line="559" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="560" pos:column="25">var</name></type> <name pos:line="560" pos:column="29">currentItem</name> <init pos:line="560" pos:column="41">= <expr><call><name><name pos:line="560" pos:column="43">view</name><op:operator pos:line="560" pos:column="47">.</op:operator><name pos:line="560" pos:column="48">ItemContainerGenerator</name><op:operator pos:line="560" pos:column="70">.</op:operator><name pos:line="560" pos:column="71">ContainerFromIndex</name></name><argument_list pos:line="560" pos:column="89">(<argument><expr><name pos:line="560" pos:column="90">currentIndex</name></expr></argument>)</argument_list></call> <op:operator pos:line="560" pos:column="104">as</op:operator> <name pos:line="560" pos:column="107">ListViewItem</name></expr></init></decl>;</decl_stmt>
                        <if pos:line="561" pos:column="25">if <condition pos:line="561" pos:column="28">(<expr><name pos:line="561" pos:column="29">currentItem</name> <op:operator pos:line="561" pos:column="41">!=</op:operator> <name pos:line="561" pos:column="44">null</name></expr>)</condition><then pos:line="561" pos:column="49">
                            <expr_stmt><expr><name><name pos:line="562" pos:column="29">currentItem</name><op:operator pos:line="562" pos:column="40">.</op:operator><name pos:line="562" pos:column="41">Height</name></name> <op:operator pos:line="562" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="562" pos:column="50">89</lit:literal></expr>;</expr_stmt></then></if>
                    }</block></for>
                }</block></then>
                <else pos:line="565" pos:column="17">else
                <block pos:line="566" pos:column="17">{
                    <for pos:line="567" pos:column="21">for (<init><decl><type><name pos:line="567" pos:column="26">var</name></type> <name pos:line="567" pos:column="30">currentIndex</name> <init pos:line="567" pos:column="43">= <expr><lit:literal type="number" pos:line="567" pos:column="45">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="567" pos:column="48">currentIndex</name> <op:operator pos:line="567" pos:column="61">&lt;</op:operator> <name><name pos:line="567" pos:column="63">view</name><op:operator pos:line="567" pos:column="67">.</op:operator><name pos:line="567" pos:column="68">Items</name><op:operator pos:line="567" pos:column="73">.</op:operator><name pos:line="567" pos:column="74">Count</name></name></expr>;</condition> <incr><expr><op:operator pos:line="567" pos:column="81">++</op:operator><name pos:line="567" pos:column="83">currentIndex</name></expr></incr>)
                    <block pos:line="568" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="569" pos:column="25">var</name></type> <name pos:line="569" pos:column="29">currentItem</name> <init pos:line="569" pos:column="41">= <expr><call><name><name pos:line="569" pos:column="43">view</name><op:operator pos:line="569" pos:column="47">.</op:operator><name pos:line="569" pos:column="48">ItemContainerGenerator</name><op:operator pos:line="569" pos:column="70">.</op:operator><name pos:line="569" pos:column="71">ContainerFromIndex</name></name><argument_list pos:line="569" pos:column="89">(<argument><expr><name pos:line="569" pos:column="90">currentIndex</name></expr></argument>)</argument_list></call> <op:operator pos:line="569" pos:column="104">as</op:operator> <name pos:line="569" pos:column="107">ListViewItem</name></expr></init></decl>;</decl_stmt>                        
                        <if pos:line="570" pos:column="25">if <condition pos:line="570" pos:column="28">(<expr><name pos:line="570" pos:column="29">currentItem</name> <op:operator pos:line="570" pos:column="41">!=</op:operator> <name pos:line="570" pos:column="44">null</name></expr>)</condition><then pos:line="570" pos:column="49">
                            <expr_stmt><expr><name><name pos:line="571" pos:column="29">currentItem</name><op:operator pos:line="571" pos:column="40">.</op:operator><name pos:line="571" pos:column="41">Height</name></name> <op:operator pos:line="571" pos:column="48">=</op:operator> <name pos:line="571" pos:column="50">currentIndex</name> <op:operator pos:line="571" pos:column="63">==</op:operator> <name pos:line="571" pos:column="66">selectedIndex</name> <op:operator pos:line="571" pos:column="80">?</op:operator> <lit:literal type="number" pos:line="571" pos:column="82">89</lit:literal> <op:operator pos:line="571" pos:column="85">:</op:operator> <lit:literal type="number" pos:line="571" pos:column="87">24</lit:literal></expr>;</expr_stmt></then></if>
                    }</block></for>
                }</block></else></if>
            }</block></then></if>
        }</block></function> 

        <function><type><specifier pos:line="577" pos:column="9">private</specifier> <name pos:line="577" pos:column="17">bool</name></type> <name pos:line="577" pos:column="22">IsExpandAllChecked</name><parameter_list pos:line="577" pos:column="40">()</parameter_list>
        <block pos:line="578" pos:column="9">{
            <if pos:line="579" pos:column="13">if <condition pos:line="579" pos:column="16">(<expr><name pos:line="579" pos:column="17">expandButton</name> <op:operator pos:line="579" pos:column="30">==</op:operator> <name pos:line="579" pos:column="33">null</name></expr>)</condition><then pos:line="579" pos:column="38">
                <return pos:line="580" pos:column="17">return <expr><lit:literal type="boolean" pos:line="580" pos:column="24">false</lit:literal></expr>;</return></then></if>
            <decl_stmt><decl><type><name pos:line="581" pos:column="13">var</name></type> <name pos:line="581" pos:column="17">check</name> <init pos:line="581" pos:column="23">= <expr><name><name pos:line="581" pos:column="25">expandButton</name><op:operator pos:line="581" pos:column="37">.</op:operator><name pos:line="581" pos:column="38">IsChecked</name></name></expr></init></decl>;</decl_stmt>
            <return pos:line="582" pos:column="13">return <expr><name><name pos:line="582" pos:column="20">check</name><op:operator pos:line="582" pos:column="25">.</op:operator><name pos:line="582" pos:column="26">HasValue</name> <type:modifier pos:line="582" pos:column="35">&amp;&amp;</type:modifier></name> <name pos:line="582" pos:column="38">check</name> <op:operator pos:line="582" pos:column="44">==</op:operator> <lit:literal type="boolean" pos:line="582" pos:column="47">true</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="585" pos:column="9">private</specifier> <name pos:line="585" pos:column="17">void</name></type> <name pos:line="585" pos:column="22">searchBox_Populating</name><parameter_list pos:line="585" pos:column="42">(<param><decl><type><name pos:line="585" pos:column="43">object</name></type> <name pos:line="585" pos:column="50">sender</name></decl></param>, <param><decl><type><name pos:line="585" pos:column="58">PopulatingEventArgs</name></type> <name pos:line="585" pos:column="78">e</name></decl></param>)</parameter_list>
        <block pos:line="586" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="587" pos:column="13">var</name></type> <name pos:line="587" pos:column="17">recommendationWorker</name> <init pos:line="587" pos:column="38">= <expr><op:operator pos:line="587" pos:column="40">new</op:operator> <call><name pos:line="587" pos:column="44">BackgroundWorker</name><argument_list pos:line="587" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="588" pos:column="13">recommendationWorker</name><op:operator pos:line="588" pos:column="33">.</op:operator><name pos:line="588" pos:column="34">DoWork</name></name> <op:operator pos:line="588" pos:column="41">+=</op:operator> <name pos:line="588" pos:column="44">recommendationWorker_DoWork</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="589" pos:column="13">e</name><op:operator pos:line="589" pos:column="14">.</op:operator><name pos:line="589" pos:column="15">Cancel</name></name> <op:operator pos:line="589" pos:column="22">=</op:operator> <lit:literal type="boolean" pos:line="589" pos:column="24">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="590" pos:column="13">recommendationWorker</name><op:operator pos:line="590" pos:column="33">.</op:operator><name pos:line="590" pos:column="34">RunWorkerAsync</name></name><argument_list pos:line="590" pos:column="48">(<argument><expr><name><name pos:line="590" pos:column="49">searchBox</name><op:operator pos:line="590" pos:column="58">.</op:operator><name pos:line="590" pos:column="59">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="593" pos:column="9">private</specifier> <name pos:line="593" pos:column="17">void</name></type> <name pos:line="593" pos:column="22">recommendationWorker_DoWork</name><parameter_list pos:line="593" pos:column="49">(<param><decl><type><name pos:line="593" pos:column="50">object</name></type> <name pos:line="593" pos:column="57">sender</name></decl></param>, <param><decl><type><name pos:line="593" pos:column="65">DoWorkEventArgs</name></type> <name pos:line="593" pos:column="81">e</name></decl></param>)</parameter_list>
        <block pos:line="594" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="595" pos:column="13">var</name></type> <name pos:line="595" pos:column="17">queryString</name> <init pos:line="595" pos:column="29">= <expr><op:operator pos:line="595" pos:column="31">(</op:operator><name pos:line="595" pos:column="32">string</name><op:operator pos:line="595" pos:column="38">)</op:operator> <name><name pos:line="595" pos:column="40">e</name><op:operator pos:line="595" pos:column="41">.</op:operator><name pos:line="595" pos:column="42">Argument</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="597" pos:column="13">var</name></type> <name pos:line="597" pos:column="17">result</name> <init pos:line="597" pos:column="24">= <expr><call><name><name pos:line="597" pos:column="26">_recommender</name><op:operator pos:line="597" pos:column="38">.</op:operator><name pos:line="597" pos:column="39">GenerateRecommendations</name></name><argument_list pos:line="597" pos:column="62">(<argument><expr><name pos:line="597" pos:column="63">queryString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="598" pos:column="13">if <condition pos:line="598" pos:column="16">(<expr><name><name pos:line="598" pos:column="17">Thread</name><op:operator pos:line="598" pos:column="23">.</op:operator><name pos:line="598" pos:column="24">CurrentThread</name></name> <op:operator pos:line="598" pos:column="38">==</op:operator> <name><name pos:line="598" pos:column="41">Dispatcher</name><op:operator pos:line="598" pos:column="51">.</op:operator><name pos:line="598" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="598" pos:column="59">
            <block pos:line="599" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="600" pos:column="17">UpdateRecommendations</name><argument_list pos:line="600" pos:column="38">(<argument><expr><name pos:line="600" pos:column="39">result</name></expr></argument>, <argument><expr><name pos:line="600" pos:column="47">queryString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="602" pos:column="13">else
            <block pos:line="603" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="604" pos:column="17">Dispatcher</name><op:operator pos:line="604" pos:column="27">.</op:operator><name pos:line="604" pos:column="28">Invoke</name></name><argument_list pos:line="604" pos:column="34">(<argument><expr><call pos:line="604" pos:column="35">(<name pos:line="604" pos:column="36">Action</name>) <argument_list pos:line="604" pos:column="44">(<argument><expr><lambda><parameter_list pos:line="604" pos:column="45">()</parameter_list> <op:operator pos:line="604" pos:column="48">=&gt;</op:operator> <call><name pos:line="604" pos:column="51">UpdateRecommendations</name><argument_list pos:line="604" pos:column="72">(<argument><expr><name pos:line="604" pos:column="73">result</name></expr></argument>, <argument><expr><name pos:line="604" pos:column="81">queryString</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="608" pos:column="9">private</specifier> <name pos:line="608" pos:column="17">void</name></type> <name pos:line="608" pos:column="22">searchResultListbox_SelectionChanged</name><parameter_list pos:line="608" pos:column="58">(<param><decl><type><name pos:line="608" pos:column="59">object</name></type> <name pos:line="608" pos:column="66">sender</name></decl></param>, <param><decl><type><name pos:line="608" pos:column="74">SelectionChangedEventArgs</name></type> <name pos:line="608" pos:column="100">e</name></decl></param>)</parameter_list>
        <block pos:line="609" pos:column="9">{
            <try pos:line="610" pos:column="13">try
            <block pos:line="611" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="612" pos:column="17">var</name></type> <name pos:line="612" pos:column="21">listview</name> <init pos:line="612" pos:column="30">= <expr><name pos:line="612" pos:column="32">sender</name> <op:operator pos:line="612" pos:column="39">as</op:operator> <name pos:line="612" pos:column="42">ListView</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="613" pos:column="17">ShowPopup</name><argument_list pos:line="613" pos:column="26">(<argument><expr><name pos:line="613" pos:column="27">listview</name></expr></argument>, <argument><expr><name><name pos:line="613" pos:column="37">e</name><op:operator pos:line="613" pos:column="38">.</op:operator><name pos:line="613" pos:column="39">AddedItems</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="613" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="614" pos:column="17">ShowPopup</name><argument_list pos:line="614" pos:column="26">(<argument><expr><name pos:line="614" pos:column="27">listview</name></expr></argument>, <argument><expr><name><name pos:line="614" pos:column="37">e</name><op:operator pos:line="614" pos:column="38">.</op:operator><name pos:line="614" pos:column="39">RemovedItems</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="614" pos:column="53">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="615" pos:column="17">LogEvents</name><op:operator pos:line="615" pos:column="26">.</op:operator><name pos:line="615" pos:column="27">SelectingCodeSearchResult</name></name><argument_list pos:line="615" pos:column="52">(<argument><expr><name pos:line="615" pos:column="53">this</name></expr></argument>, <argument><expr><name><name pos:line="615" pos:column="59">listview</name><op:operator pos:line="615" pos:column="67">.</op:operator><name pos:line="615" pos:column="68">SelectedIndex</name></name> <op:operator pos:line="615" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="615" pos:column="84">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="617" pos:column="13">catch <parameter_list pos:line="617" pos:column="19">(<param><decl><type><name pos:line="617" pos:column="20">Exception</name></type> <name pos:line="617" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="618" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="619" pos:column="17">LogEvents</name><op:operator pos:line="619" pos:column="26">.</op:operator><name pos:line="619" pos:column="27">UIGenericError</name></name><argument_list pos:line="619" pos:column="41">(<argument><expr><name pos:line="619" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="619" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="623" pos:column="9">private</specifier> <name pos:line="623" pos:column="17">void</name></type> <name pos:line="623" pos:column="22">MyToolWindow_LostFocus</name><parameter_list pos:line="623" pos:column="44">(<param><decl><type><name pos:line="623" pos:column="45">object</name></type> <name pos:line="623" pos:column="52">sender</name></decl></param>, <param><decl><type><name pos:line="623" pos:column="60">RoutedEventArgs</name></type> <name pos:line="623" pos:column="76">e</name></decl></param>)</parameter_list>
        <block pos:line="624" pos:column="9">{
            <try pos:line="625" pos:column="13">try
            <block pos:line="626" pos:column="13">{
                <if pos:line="627" pos:column="17">if <condition pos:line="627" pos:column="20">(<expr><name><name pos:line="627" pos:column="21">this</name><op:operator pos:line="627" pos:column="25">.</op:operator><name pos:line="627" pos:column="26">searchResultListbox</name><op:operator pos:line="627" pos:column="45">.</op:operator><name pos:line="627" pos:column="46">Items</name><op:operator pos:line="627" pos:column="51">.</op:operator><name pos:line="627" pos:column="52">Count</name></name> <op:operator pos:line="627" pos:column="58">&gt;</op:operator> <lit:literal type="number" pos:line="627" pos:column="60">0</lit:literal></expr>)</condition><then pos:line="627" pos:column="62">
                <block pos:line="628" pos:column="17">{
                    <foreach pos:line="629" pos:column="21">foreach (<init><decl><type><name pos:line="629" pos:column="30">var</name></type> <name pos:line="629" pos:column="34">item</name> <range pos:line="629" pos:column="39">in <expr><name><name pos:line="629" pos:column="42">this</name><op:operator pos:line="629" pos:column="46">.</op:operator><name pos:line="629" pos:column="47">searchResultListbox</name><op:operator pos:line="629" pos:column="66">.</op:operator><name pos:line="629" pos:column="67">Items</name></name></expr></range></decl></init>)
                        <expr_stmt><expr><call><name pos:line="630" pos:column="25">ShowPopupOneItem</name><argument_list pos:line="630" pos:column="41">(<argument><expr><name><name pos:line="630" pos:column="42">this</name><op:operator pos:line="630" pos:column="46">.</op:operator><name pos:line="630" pos:column="47">searchResultListbox</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="630" pos:column="68">false</lit:literal></expr></argument>, <argument><expr><name pos:line="630" pos:column="75">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
                }</block></then></if>
            }</block>
            <catch pos:line="633" pos:column="13">catch <parameter_list pos:line="633" pos:column="19">(<param><decl><type><name pos:line="633" pos:column="20">Exception</name></type> <name pos:line="633" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="634" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="635" pos:column="17">LogEvents</name><op:operator pos:line="635" pos:column="26">.</op:operator><name pos:line="635" pos:column="27">UIGenericError</name></name><argument_list pos:line="635" pos:column="41">(<argument><expr><name pos:line="635" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="635" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="639" pos:column="9">private</specifier> <specifier pos:line="639" pos:column="17">static</specifier> <name pos:line="639" pos:column="24">void</name></type> <name pos:line="639" pos:column="29">ShowPopup</name><parameter_list pos:line="639" pos:column="38">( <param><decl><type><name pos:line="639" pos:column="40">ListView</name></type> <name pos:line="639" pos:column="49">listview</name></decl></param>, <param><decl><type><name pos:line="639" pos:column="59">IList</name></type> <name pos:line="639" pos:column="65">list</name></decl></param>, <param><decl><type><name pos:line="639" pos:column="71">bool</name></type> <name pos:line="639" pos:column="76">showOrRemove</name></decl></param>)</parameter_list>
        <block pos:line="640" pos:column="9">{
            <if pos:line="641" pos:column="13">if <condition pos:line="641" pos:column="16">(<expr><name><name pos:line="641" pos:column="17">list</name><op:operator pos:line="641" pos:column="21">.</op:operator><name pos:line="641" pos:column="22">Count</name></name> <op:operator pos:line="641" pos:column="28">&gt;</op:operator> <lit:literal type="number" pos:line="641" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="641" pos:column="32">
            <block pos:line="642" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="643" pos:column="17">var</name></type> <name pos:line="643" pos:column="21">item</name> <init pos:line="643" pos:column="26">= <expr><name><name pos:line="643" pos:column="28">list</name><index pos:line="643" pos:column="32">[<expr><lit:literal type="number" pos:line="643" pos:column="33">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="644" pos:column="17">ShowPopupOneItem</name><argument_list pos:line="644" pos:column="33">(<argument><expr><name pos:line="644" pos:column="34">listview</name></expr></argument>, <argument><expr><name pos:line="644" pos:column="44">showOrRemove</name></expr></argument>, <argument><expr><name pos:line="644" pos:column="58">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="648" pos:column="9">private</specifier> <specifier pos:line="648" pos:column="17">static</specifier> <name pos:line="648" pos:column="24">void</name></type> <name pos:line="648" pos:column="29">ShowPopupOneItem</name><parameter_list pos:line="648" pos:column="45">(<param><decl><type><name pos:line="648" pos:column="46">ListView</name></type> <name pos:line="648" pos:column="55">listview</name></decl></param>, <param><decl><type><name pos:line="648" pos:column="65">bool</name></type> <name pos:line="648" pos:column="70">showOrRemove</name></decl></param>, <param><decl><type><name pos:line="648" pos:column="84">object</name></type> <name pos:line="648" pos:column="91">item</name></decl></param>)</parameter_list>
        <block pos:line="649" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="650" pos:column="13">ListViewItem</name></type> <name pos:line="650" pos:column="26">lvi</name> <init pos:line="650" pos:column="30">= <expr><op:operator pos:line="650" pos:column="32">(</op:operator><name pos:line="650" pos:column="33">ListViewItem</name><op:operator pos:line="650" pos:column="45">)</op:operator><call><name><name pos:line="650" pos:column="46">listview</name><op:operator pos:line="650" pos:column="54">.</op:operator><name pos:line="650" pos:column="55">ItemContainerGenerator</name><op:operator pos:line="650" pos:column="77">.</op:operator><name pos:line="650" pos:column="78">ContainerFromItem</name></name><argument_list pos:line="650" pos:column="95">(<argument><expr><name pos:line="650" pos:column="96">item</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="651" pos:column="13">foreach (<init><decl><type><name pos:line="651" pos:column="22">Popup</name></type> <name pos:line="651" pos:column="28">popup</name> <range pos:line="651" pos:column="34">in <expr><call><name><name pos:line="651" pos:column="37">FindVisualChildren</name><argument_list pos:line="651" pos:column="55">&lt;<argument><name pos:line="651" pos:column="56">Popup</name></argument>&gt;</argument_list></name><argument_list pos:line="651" pos:column="62">(<argument><expr><name pos:line="651" pos:column="63">lvi</name></expr></argument>)</argument_list></call></expr></range></decl></init>)
            <block pos:line="652" pos:column="13">{
                <expr_stmt><expr><op:operator pos:line="653" pos:column="17">(</op:operator><name pos:line="653" pos:column="18">popup</name> <op:operator pos:line="653" pos:column="24">as</op:operator> <name pos:line="653" pos:column="27">Popup</name><op:operator pos:line="653" pos:column="32">)</op:operator><op:operator pos:line="653" pos:column="33">.</op:operator><name pos:line="653" pos:column="34">IsOpen</name> <op:operator pos:line="653" pos:column="41">=</op:operator> <name pos:line="653" pos:column="43">showOrRemove</name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="657" pos:column="9">public</specifier> <specifier pos:line="657" pos:column="16">static</specifier> <name><name pos:line="657" pos:column="23">IEnumerable</name><argument_list pos:line="657" pos:column="34">&lt;<argument><name pos:line="657" pos:column="35">T</name></argument>&gt;</argument_list></name></type> <name><name pos:line="657" pos:column="38">FindVisualChildren</name><argument_list pos:line="657" pos:column="56">&lt;<argument><name pos:line="657" pos:column="57">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="657" pos:column="59">(<param><decl><type><name pos:line="657" pos:column="60">DependencyObject</name></type> <name pos:line="657" pos:column="77">depObj</name></decl></param>)</parameter_list> <where pos:line="657" pos:column="85">where <name pos:line="657" pos:column="91">T</name> : <name pos:line="657" pos:column="95">DependencyObject</name></where>
        <block pos:line="658" pos:column="9">{
            <if pos:line="659" pos:column="13">if <condition pos:line="659" pos:column="16">(<expr><name pos:line="659" pos:column="17">depObj</name> <op:operator pos:line="659" pos:column="24">!=</op:operator> <name pos:line="659" pos:column="27">null</name></expr>)</condition><then pos:line="659" pos:column="32">
            <block pos:line="660" pos:column="13">{
                <for pos:line="661" pos:column="17">for (<init><decl><type><name pos:line="661" pos:column="22">int</name></type> <name pos:line="661" pos:column="26">i</name> <init pos:line="661" pos:column="28">= <expr><lit:literal type="number" pos:line="661" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="661" pos:column="33">i</name> <op:operator pos:line="661" pos:column="35">&lt;</op:operator> <call><name><name pos:line="661" pos:column="37">VisualTreeHelper</name><op:operator pos:line="661" pos:column="53">.</op:operator><name pos:line="661" pos:column="54">GetChildrenCount</name></name><argument_list pos:line="661" pos:column="70">(<argument><expr><name pos:line="661" pos:column="71">depObj</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name pos:line="661" pos:column="80">i</name><op:operator pos:line="661" pos:column="81">++</op:operator></expr></incr>)
                <block pos:line="662" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="663" pos:column="21">DependencyObject</name></type> <name pos:line="663" pos:column="38">child</name> <init pos:line="663" pos:column="44">= <expr><call><name><name pos:line="663" pos:column="46">VisualTreeHelper</name><op:operator pos:line="663" pos:column="62">.</op:operator><name pos:line="663" pos:column="63">GetChild</name></name><argument_list pos:line="663" pos:column="71">(<argument><expr><name pos:line="663" pos:column="72">depObj</name></expr></argument>, <argument><expr><name pos:line="663" pos:column="80">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="664" pos:column="21">if <condition pos:line="664" pos:column="24">(<expr><name pos:line="664" pos:column="25">child</name> <op:operator pos:line="664" pos:column="31">!=</op:operator> <name pos:line="664" pos:column="34">null</name> <op:operator pos:line="664" pos:column="39">&amp;&amp;</op:operator> <name pos:line="664" pos:column="42">child</name> <op:operator pos:line="664" pos:column="48">is</op:operator> <name pos:line="664" pos:column="51">T</name></expr>)</condition><then pos:line="664" pos:column="53">
                    <block pos:line="665" pos:column="21">{
                        <return><specifier pos:line="666" pos:column="25">yield</specifier> return <expr><op:operator pos:line="666" pos:column="38">(</op:operator><name pos:line="666" pos:column="39">T</name><op:operator pos:line="666" pos:column="40">)</op:operator><name pos:line="666" pos:column="41">child</name></expr>;</return>
                    }</block></then></if>

                    <foreach pos:line="669" pos:column="21">foreach (<init><decl><type><name pos:line="669" pos:column="30">T</name></type> <name pos:line="669" pos:column="32">childOfChild</name> <range pos:line="669" pos:column="45">in <expr><call><name><name pos:line="669" pos:column="48">FindVisualChildren</name><argument_list pos:line="669" pos:column="66">&lt;<argument><name pos:line="669" pos:column="67">T</name></argument>&gt;</argument_list></name><argument_list pos:line="669" pos:column="69">(<argument><expr><name pos:line="669" pos:column="70">child</name></expr></argument>)</argument_list></call></expr></range></decl></init>)
                    <block pos:line="670" pos:column="21">{
                        <return><specifier pos:line="671" pos:column="25">yield</specifier> return <expr><name pos:line="671" pos:column="38">childOfChild</name></expr>;</return>
                    }</block></foreach>
                }</block></for>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="677" pos:column="9">private</specifier> <name pos:line="677" pos:column="17">void</name></type> <name pos:line="677" pos:column="22">UpdateRecommendations</name><parameter_list pos:line="677" pos:column="43">(<param><decl><type><name><name pos:line="677" pos:column="44">IEnumerable</name><argument_list pos:line="677" pos:column="55">&lt;<argument><name pos:line="677" pos:column="56">ISwumRecommendedQuery</name></argument>&gt;</argument_list></name></type> <name pos:line="677" pos:column="79">recommendations</name></decl></param>, <param><decl><type><name pos:line="677" pos:column="96">string</name></type> <name pos:line="677" pos:column="103">query</name></decl></param>)</parameter_list>
        <block pos:line="678" pos:column="9">{
            <if pos:line="679" pos:column="13">if <condition pos:line="679" pos:column="16">(<expr><name pos:line="679" pos:column="17">query</name> <op:operator pos:line="679" pos:column="23">==</op:operator> <name><name pos:line="679" pos:column="26">searchBox</name><op:operator pos:line="679" pos:column="35">.</op:operator><name pos:line="679" pos:column="36">Text</name></name></expr>)</condition><then pos:line="679" pos:column="41">
            <block pos:line="680" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="681" pos:column="17">searchBox</name><op:operator pos:line="681" pos:column="26">.</op:operator><name pos:line="681" pos:column="27">ItemsSource</name></name> <op:operator pos:line="681" pos:column="39">=</op:operator> <name pos:line="681" pos:column="41">recommendations</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="682" pos:column="17">searchBox</name><op:operator pos:line="682" pos:column="26">.</op:operator><name pos:line="682" pos:column="27">PopulateComplete</name></name><argument_list pos:line="682" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="684" pos:column="13">else
            <block pos:line="685" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="686" pos:column="17">Debug</name><op:operator pos:line="686" pos:column="22">.</op:operator><name pos:line="686" pos:column="23">WriteLine</name></name><argument_list pos:line="686" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="686" pos:column="33">"Query \"{0}\" doesn't match current text \"{1}\"; no update."</lit:literal></expr></argument>, <argument><expr><name pos:line="686" pos:column="97">query</name></expr></argument>, <argument><expr><name><name pos:line="686" pos:column="104">searchBox</name><op:operator pos:line="686" pos:column="113">.</op:operator><name pos:line="686" pos:column="114">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="690" pos:column="9">public</specifier> <name pos:line="690" pos:column="16">void</name></type> <name pos:line="690" pos:column="21">FocusOnText</name><parameter_list pos:line="690" pos:column="32">()</parameter_list>
        <block pos:line="691" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="692" pos:column="13">var</name></type> <name pos:line="692" pos:column="17">textBox</name> <init pos:line="692" pos:column="25">= <expr><call><name><name pos:line="692" pos:column="27">searchBox</name><op:operator pos:line="692" pos:column="36">.</op:operator><name pos:line="692" pos:column="37">Template</name><op:operator pos:line="692" pos:column="45">.</op:operator><name pos:line="692" pos:column="46">FindName</name></name><argument_list pos:line="692" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="692" pos:column="55">"Text"</lit:literal></expr></argument>, <argument><expr><name pos:line="692" pos:column="63">searchBox</name></expr></argument>)</argument_list></call> <op:operator pos:line="692" pos:column="74">as</op:operator> <name pos:line="692" pos:column="77">TextBox</name></expr></init></decl>;</decl_stmt>
            <if pos:line="693" pos:column="13">if <condition pos:line="693" pos:column="16">(<expr><name pos:line="693" pos:column="17">textBox</name> <op:operator pos:line="693" pos:column="25">!=</op:operator> <name pos:line="693" pos:column="28">null</name></expr>)</condition><then pos:line="693" pos:column="33">
                <expr_stmt><expr><call><name><name pos:line="694" pos:column="17">textBox</name><op:operator pos:line="694" pos:column="24">.</op:operator><name pos:line="694" pos:column="25">Focus</name></name><argument_list pos:line="694" pos:column="30">()</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>

        <function><type><specifier pos:line="697" pos:column="9">public</specifier> <name pos:line="697" pos:column="16">void</name></type> <name pos:line="697" pos:column="21">ShowProgressBar</name><parameter_list pos:line="697" pos:column="36">(<param><decl><type><name pos:line="697" pos:column="37">bool</name></type> <name pos:line="697" pos:column="42">visible</name></decl></param>)</parameter_list>
        <block pos:line="698" pos:column="9">{
            <if pos:line="699" pos:column="13">if <condition pos:line="699" pos:column="16">(<expr><name><name pos:line="699" pos:column="17">Thread</name><op:operator pos:line="699" pos:column="23">.</op:operator><name pos:line="699" pos:column="24">CurrentThread</name></name> <op:operator pos:line="699" pos:column="38">==</op:operator> <name><name pos:line="699" pos:column="41">Dispatcher</name><op:operator pos:line="699" pos:column="51">.</op:operator><name pos:line="699" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="699" pos:column="59">
            <block pos:line="700" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="701" pos:column="17">ProgBar</name><op:operator pos:line="701" pos:column="24">.</op:operator><name pos:line="701" pos:column="25">Visibility</name></name> <op:operator pos:line="701" pos:column="36">=</op:operator> <op:operator pos:line="701" pos:column="38">(</op:operator><name pos:line="701" pos:column="39">visible</name><op:operator pos:line="701" pos:column="46">)</op:operator> <op:operator pos:line="701" pos:column="48">?</op:operator> <name><name pos:line="701" pos:column="50">System</name><op:operator pos:line="701" pos:column="56">.</op:operator><name pos:line="701" pos:column="57">Windows</name><op:operator pos:line="701" pos:column="64">.</op:operator><name pos:line="701" pos:column="65">Visibility</name><op:operator pos:line="701" pos:column="75">.</op:operator><name pos:line="701" pos:column="76">Visible</name></name> <op:operator pos:line="701" pos:column="84">:</op:operator> <name><name pos:line="701" pos:column="86">System</name><op:operator pos:line="701" pos:column="92">.</op:operator><name pos:line="701" pos:column="93">Windows</name><op:operator pos:line="701" pos:column="100">.</op:operator><name pos:line="701" pos:column="101">Visibility</name><op:operator pos:line="701" pos:column="111">.</op:operator><name pos:line="701" pos:column="112">Collapsed</name></name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="703" pos:column="13">else
            <block pos:line="704" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="705" pos:column="17">Dispatcher</name><op:operator pos:line="705" pos:column="27">.</op:operator><name pos:line="705" pos:column="28">Invoke</name></name><argument_list pos:line="705" pos:column="34">(<argument><expr><call pos:line="705" pos:column="35">(<name pos:line="705" pos:column="36">Action</name>)<argument_list pos:line="705" pos:column="43">(<argument><expr><lambda><parameter_list pos:line="705" pos:column="44">()</parameter_list> <op:operator pos:line="705" pos:column="47">=&gt;</op:operator> <name><name pos:line="705" pos:column="50">ProgBar</name><op:operator pos:line="705" pos:column="57">.</op:operator><name pos:line="705" pos:column="58">Visibility</name></name> <op:operator pos:line="705" pos:column="69">=</op:operator> <op:operator pos:line="705" pos:column="71">(</op:operator><name pos:line="705" pos:column="72">visible</name><op:operator pos:line="705" pos:column="79">)</op:operator> <op:operator pos:line="705" pos:column="81">?</op:operator> <name><name pos:line="705" pos:column="83">System</name><op:operator pos:line="705" pos:column="89">.</op:operator><name pos:line="705" pos:column="90">Windows</name><op:operator pos:line="705" pos:column="97">.</op:operator><name pos:line="705" pos:column="98">Visibility</name><op:operator pos:line="705" pos:column="108">.</op:operator><name pos:line="705" pos:column="109">Visible</name></name> <op:operator pos:line="705" pos:column="117">:</op:operator> <name><name pos:line="705" pos:column="119">System</name><op:operator pos:line="705" pos:column="125">.</op:operator><name pos:line="705" pos:column="126">Windows</name><op:operator pos:line="705" pos:column="133">.</op:operator><name pos:line="705" pos:column="134">Visibility</name><op:operator pos:line="705" pos:column="144">.</op:operator><name pos:line="705" pos:column="145">Collapsed</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="709" pos:column="9">private</specifier> <name pos:line="709" pos:column="17">void</name></type> <name pos:line="709" pos:column="22">searchBoxListBox_SelectionChanged</name><parameter_list pos:line="709" pos:column="55">(<param><decl><type><name pos:line="709" pos:column="56">object</name></type> <name pos:line="709" pos:column="63">sender</name></decl></param>, <param><decl><type><name pos:line="709" pos:column="71">SelectionChangedEventArgs</name></type> <name pos:line="709" pos:column="97">e</name></decl></param>)</parameter_list>
        <block pos:line="710" pos:column="9">{
            <try pos:line="711" pos:column="13">try
            <block pos:line="712" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="713" pos:column="17">var</name></type> <name pos:line="713" pos:column="21">listBox</name> <init pos:line="713" pos:column="29">= <expr><name pos:line="713" pos:column="31">sender</name> <op:operator pos:line="713" pos:column="38">as</op:operator> <name pos:line="713" pos:column="41">ListBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="714" pos:column="17">if <condition pos:line="714" pos:column="20">(<expr><name pos:line="714" pos:column="21">listBox</name> <op:operator pos:line="714" pos:column="29">!=</op:operator> <name pos:line="714" pos:column="32">null</name></expr>)</condition><then pos:line="714" pos:column="37">
                <block pos:line="715" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="716" pos:column="21">listBox</name><op:operator pos:line="716" pos:column="28">.</op:operator><name pos:line="716" pos:column="29">ScrollIntoView</name></name><argument_list pos:line="716" pos:column="43">(<argument><expr><name><name pos:line="716" pos:column="44">listBox</name><op:operator pos:line="716" pos:column="51">.</op:operator><name pos:line="716" pos:column="52">SelectedItem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="717" pos:column="21">LogEvents</name><op:operator pos:line="717" pos:column="30">.</op:operator><name pos:line="717" pos:column="31">SelectingRecommendationItem</name></name><argument_list pos:line="717" pos:column="58">(<argument><expr><name pos:line="717" pos:column="59">this</name></expr></argument>, <argument><expr><name><name pos:line="717" pos:column="65">listBox</name><op:operator pos:line="717" pos:column="72">.</op:operator><name pos:line="717" pos:column="73">SelectedIndex</name></name> <op:operator pos:line="717" pos:column="87">+</op:operator> <lit:literal type="number" pos:line="717" pos:column="89">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="720" pos:column="13">catch <parameter_list pos:line="720" pos:column="19">(<param><decl><type><name pos:line="720" pos:column="20">Exception</name></type> <name pos:line="720" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="721" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="722" pos:column="17">LogEvents</name><op:operator pos:line="722" pos:column="26">.</op:operator><name pos:line="722" pos:column="27">UIGenericError</name></name><argument_list pos:line="722" pos:column="41">(<argument><expr><name pos:line="722" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="722" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="726" pos:column="9">private</specifier> <name pos:line="726" pos:column="17">void</name></type> <name pos:line="726" pos:column="22">Toggled_Popup</name><parameter_list pos:line="726" pos:column="35">(<param><decl><type><name pos:line="726" pos:column="36">object</name></type> <name pos:line="726" pos:column="43">sender</name></decl></param>, <param><decl><type><name pos:line="726" pos:column="51">RoutedEventArgs</name></type> <name pos:line="726" pos:column="67">e</name></decl></param>)</parameter_list>
        <block pos:line="727" pos:column="9">{
            <if pos:line="728" pos:column="13">if<condition pos:line="728" pos:column="15">(<expr><name pos:line="728" pos:column="16">SelectionPopup</name><op:operator pos:line="728" pos:column="30">!=</op:operator><name pos:line="728" pos:column="32">null</name> <op:operator pos:line="728" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="728" pos:column="40">!</op:operator><name><name pos:line="728" pos:column="41">SelectionPopup</name><op:operator pos:line="728" pos:column="55">.</op:operator><name pos:line="728" pos:column="56">IsOpen</name></name></expr>)</condition><then pos:line="728" pos:column="63">
                <expr_stmt><expr><name><name pos:line="729" pos:column="17">SelectionPopup</name><op:operator pos:line="729" pos:column="31">.</op:operator><name pos:line="729" pos:column="32">IsOpen</name></name> <op:operator pos:line="729" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="729" pos:column="41">true</lit:literal></expr>;</expr_stmt></then></if>
        }</block></function>


        <decl_stmt><decl><type><specifier pos:line="733" pos:column="9">public</specifier> <specifier pos:line="733" pos:column="16">static</specifier> <specifier pos:line="733" pos:column="23">readonly</specifier> <name pos:line="733" pos:column="32">DependencyProperty</name></type> <name pos:line="733" pos:column="51">AccessLevelsProperty</name> <init pos:line="733" pos:column="72">=
            <expr><call><name><name pos:line="734" pos:column="13">DependencyProperty</name><op:operator pos:line="734" pos:column="31">.</op:operator><name pos:line="734" pos:column="32">Register</name></name><argument_list pos:line="734" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="734" pos:column="41">"AccessLevels"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="734" pos:column="57">typeof</name> <argument_list pos:line="734" pos:column="64">(<argument><expr><name><name pos:line="734" pos:column="65">ObservableCollection</name><argument_list pos:line="734" pos:column="85">&lt;<argument><name pos:line="734" pos:column="86">AccessWrapper</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="734" pos:column="103">typeof</name> <argument_list pos:line="734" pos:column="110">(<argument><expr><name pos:line="734" pos:column="111">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="734" pos:column="131">new</op:operator> <call><name pos:line="734" pos:column="135">UIPropertyMetadata</name><argument_list pos:line="734" pos:column="153">(<argument><expr><name pos:line="734" pos:column="154">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="736" pos:column="9">public</specifier> <specifier pos:line="736" pos:column="16">static</specifier> <specifier pos:line="736" pos:column="23">readonly</specifier> <name pos:line="736" pos:column="32">DependencyProperty</name></type> <name pos:line="736" pos:column="51">ProgramElementsProperty</name> <init pos:line="736" pos:column="75">=
            <expr><call><name><name pos:line="737" pos:column="13">DependencyProperty</name><op:operator pos:line="737" pos:column="31">.</op:operator><name pos:line="737" pos:column="32">Register</name></name><argument_list pos:line="737" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="737" pos:column="41">"ProgramElements"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="737" pos:column="60">typeof</name><argument_list pos:line="737" pos:column="66">(<argument><expr><name><name pos:line="737" pos:column="67">ObservableCollection</name><argument_list pos:line="737" pos:column="87">&lt;<argument><name pos:line="737" pos:column="88">ProgramElementWrapper</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="737" pos:column="113">typeof</name><argument_list pos:line="737" pos:column="119">(<argument><expr><name pos:line="737" pos:column="120">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="737" pos:column="140">new</op:operator> <call><name pos:line="737" pos:column="144">UIPropertyMetadata</name><argument_list pos:line="737" pos:column="162">(<argument><expr><name pos:line="737" pos:column="163">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="739" pos:column="9">public</specifier> <specifier pos:line="739" pos:column="16">static</specifier> <specifier pos:line="739" pos:column="23">readonly</specifier> <name pos:line="739" pos:column="32">DependencyProperty</name></type> <name pos:line="739" pos:column="51">MonitoredFilesProperty</name> <init pos:line="739" pos:column="74">=
           <expr><call><name><name pos:line="740" pos:column="12">DependencyProperty</name><op:operator pos:line="740" pos:column="30">.</op:operator><name pos:line="740" pos:column="31">Register</name></name><argument_list pos:line="740" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="740" pos:column="40">"MonitoredFiles"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="740" pos:column="58">typeof</name><argument_list pos:line="740" pos:column="64">(<argument><expr><name><name pos:line="740" pos:column="65">ObservableCollection</name><argument_list pos:line="740" pos:column="85">&lt;<argument><name pos:line="740" pos:column="86">CheckedListItem</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="740" pos:column="105">typeof</name><argument_list pos:line="740" pos:column="111">(<argument><expr><name pos:line="740" pos:column="112">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="740" pos:column="132">new</op:operator> <call><name pos:line="740" pos:column="136">UIPropertyMetadata</name><argument_list pos:line="740" pos:column="154">(<argument><expr><name pos:line="740" pos:column="155">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="743" pos:column="9">public</specifier> <specifier pos:line="743" pos:column="16">static</specifier> <specifier pos:line="743" pos:column="23">readonly</specifier> <name pos:line="743" pos:column="32">DependencyProperty</name></type> <name pos:line="743" pos:column="51">SearchResultsProperty</name> <init pos:line="743" pos:column="73">=
            <expr><call><name><name pos:line="744" pos:column="13">DependencyProperty</name><op:operator pos:line="744" pos:column="31">.</op:operator><name pos:line="744" pos:column="32">Register</name></name><argument_list pos:line="744" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="744" pos:column="41">"SearchResults"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="744" pos:column="58">typeof</name><argument_list pos:line="744" pos:column="64">(<argument><expr><name><name pos:line="744" pos:column="65">ObservableCollection</name><argument_list pos:line="744" pos:column="85">&lt;<argument><name pos:line="744" pos:column="86">CodeSearchResult</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="744" pos:column="106">typeof</name><argument_list pos:line="744" pos:column="112">(<argument><expr><name pos:line="744" pos:column="113">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="744" pos:column="133">new</op:operator> <call><name pos:line="744" pos:column="137">UIPropertyMetadata</name><argument_list pos:line="744" pos:column="155">(<argument><expr><name pos:line="744" pos:column="156">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="746" pos:column="9">public</specifier> <specifier pos:line="746" pos:column="16">static</specifier> <specifier pos:line="746" pos:column="23">readonly</specifier> <name pos:line="746" pos:column="32">DependencyProperty</name></type> <name pos:line="746" pos:column="51">SearchStringProperty</name> <init pos:line="746" pos:column="72">=
            <expr><call><name><name pos:line="747" pos:column="13">DependencyProperty</name><op:operator pos:line="747" pos:column="31">.</op:operator><name pos:line="747" pos:column="32">Register</name></name><argument_list pos:line="747" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="747" pos:column="41">"SearchString"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="747" pos:column="57">typeof</name><argument_list pos:line="747" pos:column="63">(<argument><expr><name pos:line="747" pos:column="64">string</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="747" pos:column="73">typeof</name><argument_list pos:line="747" pos:column="79">(<argument><expr><name pos:line="747" pos:column="80">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="747" pos:column="100">new</op:operator> <call><name pos:line="747" pos:column="104">UIPropertyMetadata</name><argument_list pos:line="747" pos:column="122">(<argument><expr><name pos:line="747" pos:column="123">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="749" pos:column="9">public</specifier> <specifier pos:line="749" pos:column="16">static</specifier> <specifier pos:line="749" pos:column="23">readonly</specifier> <name pos:line="749" pos:column="32">DependencyProperty</name></type> <name pos:line="749" pos:column="51">SearchStatusProperty</name> <init pos:line="749" pos:column="72">=
            <expr><call><name><name pos:line="750" pos:column="13">DependencyProperty</name><op:operator pos:line="750" pos:column="31">.</op:operator><name pos:line="750" pos:column="32">Register</name></name><argument_list pos:line="750" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="750" pos:column="41">"SearchStatus"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="750" pos:column="57">typeof</name><argument_list pos:line="750" pos:column="63">(<argument><expr><name pos:line="750" pos:column="64">string</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="750" pos:column="73">typeof</name><argument_list pos:line="750" pos:column="79">(<argument><expr><name pos:line="750" pos:column="80">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="750" pos:column="100">new</op:operator> <call><name pos:line="750" pos:column="104">UIPropertyMetadata</name><argument_list pos:line="750" pos:column="122">(<argument><expr><name pos:line="750" pos:column="123">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="752" pos:column="9">public</specifier> <specifier pos:line="752" pos:column="16">static</specifier> <specifier pos:line="752" pos:column="23">readonly</specifier> <name pos:line="752" pos:column="32">DependencyProperty</name></type> <name pos:line="752" pos:column="51">OpenSolutionPathsProperty</name> <init pos:line="752" pos:column="77">=
            <expr><call><name><name pos:line="753" pos:column="13">DependencyProperty</name><op:operator pos:line="753" pos:column="31">.</op:operator><name pos:line="753" pos:column="32">Register</name></name><argument_list pos:line="753" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="753" pos:column="41">"OpenSolutionPaths"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="753" pos:column="62">typeof</name><argument_list pos:line="753" pos:column="68">(<argument><expr><name pos:line="753" pos:column="69">string</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="753" pos:column="78">typeof</name><argument_list pos:line="753" pos:column="84">(<argument><expr><name pos:line="753" pos:column="85">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="753" pos:column="105">new</op:operator> <call><name pos:line="753" pos:column="109">UIPropertyMetadata</name><argument_list pos:line="753" pos:column="127">(<argument><expr><name pos:line="753" pos:column="128">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>        

        <decl_stmt><decl><type><specifier pos:line="755" pos:column="9">public</specifier> <specifier pos:line="755" pos:column="16">static</specifier> <specifier pos:line="755" pos:column="23">readonly</specifier> <name pos:line="755" pos:column="32">DependencyProperty</name></type> <name pos:line="755" pos:column="51">SearchCriteriaProperty</name> <init pos:line="755" pos:column="74">=
            <expr><call><name><name pos:line="756" pos:column="13">DependencyProperty</name><op:operator pos:line="756" pos:column="31">.</op:operator><name pos:line="756" pos:column="32">Register</name></name><argument_list pos:line="756" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="756" pos:column="41">"SearchCriteria"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="756" pos:column="59">typeof</name><argument_list pos:line="756" pos:column="65">(<argument><expr><name pos:line="756" pos:column="66">SimpleSearchCriteria</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="756" pos:column="89">typeof</name><argument_list pos:line="756" pos:column="95">(<argument><expr><name pos:line="756" pos:column="96">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="756" pos:column="116">new</op:operator> <call><name pos:line="756" pos:column="120">UIPropertyMetadata</name><argument_list pos:line="756" pos:column="138">(<argument><expr><name pos:line="756" pos:column="139">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="758" pos:column="9">private</specifier> <specifier pos:line="758" pos:column="17">const</specifier> <name pos:line="758" pos:column="23">string</name></type> <name pos:line="758" pos:column="30">FileNotFoundPopupMessage</name> <init pos:line="758" pos:column="55">= <expr><lit:literal type="string" pos:line="758" pos:column="57">"This file cannot be opened. It may have been deleted, moved, or renamed since your last search."</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="759" pos:column="9">private</specifier> <specifier pos:line="759" pos:column="17">const</specifier> <name pos:line="759" pos:column="23">string</name></type> <name pos:line="759" pos:column="30">FileNotFoundPopupTitle</name> <init pos:line="759" pos:column="53">= <expr><lit:literal type="string" pos:line="759" pos:column="55">"File opening error"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="761" pos:column="9">private</specifier> <specifier pos:line="761" pos:column="17">readonly</specifier> <name pos:line="761" pos:column="26">SearchManager</name></type> <name pos:line="761" pos:column="40">_searchManager</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="762" pos:column="9">private</specifier> <specifier pos:line="762" pos:column="17">readonly</specifier> <name pos:line="762" pos:column="26">QueryRecommender</name></type> <name pos:line="762" pos:column="43">_recommender</name></decl>;</decl_stmt>
        
        <comment type="line" pos:line="764" pos:column="9">//Search Key </comment>
        <decl_stmt><decl><type><specifier pos:line="765" pos:column="9">private</specifier> <name pos:line="765" pos:column="17">string</name></type> <name pos:line="765" pos:column="24">searchKey</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="767" pos:column="9">private</specifier> <name pos:line="767" pos:column="17">void</name></type> <name pos:line="767" pos:column="22">Remove_Click_1</name><parameter_list pos:line="767" pos:column="36">(<param><decl><type><name pos:line="767" pos:column="37">object</name></type> <name pos:line="767" pos:column="44">sender</name></decl></param>, <param><decl><type><name pos:line="767" pos:column="52">RoutedEventArgs</name></type> <name pos:line="767" pos:column="68">e</name></decl></param>)</parameter_list>
        <block pos:line="768" pos:column="9">{
            <try pos:line="769" pos:column="13">try
            <block pos:line="770" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="771" pos:column="17">var</name></type> <name pos:line="771" pos:column="21">result</name> <init pos:line="771" pos:column="28">= <expr><name><name pos:line="771" pos:column="30">searchResultListbox</name><op:operator pos:line="771" pos:column="49">.</op:operator><name pos:line="771" pos:column="50">SelectedItems</name><index pos:line="771" pos:column="63">[<expr><lit:literal type="number" pos:line="771" pos:column="64">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if pos:line="772" pos:column="17">if <condition pos:line="772" pos:column="20">(<expr><name pos:line="772" pos:column="21">result</name> <op:operator pos:line="772" pos:column="28">!=</op:operator> <name pos:line="772" pos:column="31">null</name></expr>)</condition><then pos:line="772" pos:column="36">
                <block pos:line="773" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="774" pos:column="21">FileRemover</name><op:operator pos:line="774" pos:column="32">.</op:operator><name pos:line="774" pos:column="33">Remove</name></name><argument_list pos:line="774" pos:column="39">(<argument><expr><op:operator pos:line="774" pos:column="40">(</op:operator><name pos:line="774" pos:column="41">result</name> <op:operator pos:line="774" pos:column="48">as</op:operator> <name pos:line="774" pos:column="51">CodeSearchResult</name><op:operator pos:line="774" pos:column="67">)</op:operator><op:operator pos:line="774" pos:column="68">.</op:operator><name><name pos:line="774" pos:column="69">ProgramElement</name><op:operator pos:line="774" pos:column="83">.</op:operator><name pos:line="774" pos:column="84">FullFilePath</name></name></expr></argument>, <argument><expr><name pos:line="774" pos:column="98">RemoverCompleted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="777" pos:column="13">catch <parameter_list pos:line="777" pos:column="19">(<param><decl><type><name pos:line="777" pos:column="20">ArgumentException</name></type> <name pos:line="777" pos:column="38">aex</name></decl></param>)</parameter_list>
            <block pos:line="778" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="779" pos:column="17">LogEvents</name><op:operator pos:line="779" pos:column="26">.</op:operator><name pos:line="779" pos:column="27">UIGenericError</name></name><argument_list pos:line="779" pos:column="41">(<argument><expr><name pos:line="779" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="779" pos:column="48">aex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="783" pos:column="9">private</specifier> <name pos:line="783" pos:column="17">void</name></type> <name pos:line="783" pos:column="22">RemoverCompleted</name><parameter_list pos:line="783" pos:column="38">(<param><decl><type><name pos:line="783" pos:column="39">object</name></type> <name pos:line="783" pos:column="46">sender</name></decl></param>, <param><decl><type><name pos:line="783" pos:column="54">RunWorkerCompletedEventArgs</name></type> <name pos:line="783" pos:column="82">e</name></decl></param>)</parameter_list>
        <block pos:line="784" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="785" pos:column="13">SearchButtonClick</name><argument_list pos:line="785" pos:column="30">(<argument><expr><name pos:line="785" pos:column="31">null</name></expr></argument>, <argument><expr><name pos:line="785" pos:column="37">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>


        <comment type="line" pos:line="789" pos:column="9">//private Color Good;//(Color)ColorConverter.ConvertFromString("#E9FFDE");</comment>
        <comment type="line" pos:line="790" pos:column="9">//private Color OK; //(Color)ColorConverter.ConvertFromString("#FFFFE6");</comment>
        <comment type="line" pos:line="791" pos:column="9">//private Color Bad; //(Color)ColorConverter.ConvertFromString("#FFF0F0");</comment>

        <comment type="line" pos:line="793" pos:column="9">//internal Color GetGood()</comment>
        <comment type="line" pos:line="794" pos:column="9">//{</comment>
        <comment type="line" pos:line="795" pos:column="9">//    var key = Microsoft.VisualStudio.Shell.VsBrushes.ScrollBarBackgroundKey;</comment>
        <comment type="line" pos:line="796" pos:column="9">//    return (Application.Current.Resources[key] as SolidColorBrush).Color; ;</comment>
        <comment type="line" pos:line="797" pos:column="9">//}</comment>
        
        <comment type="line" pos:line="799" pos:column="9">//internal Color GetOK()</comment>
        <comment type="line" pos:line="800" pos:column="9">//{</comment>
        <comment type="line" pos:line="801" pos:column="9">//    var key = Microsoft.VisualStudio.Shell.VsBrushes.AccentLightKey;</comment>
        <comment type="line" pos:line="802" pos:column="9">//    return (Application.Current.Resources[key] as SolidColorBrush).Color; ;</comment>
        <comment type="line" pos:line="803" pos:column="9">//}</comment>
        
        <comment type="line" pos:line="805" pos:column="9">//internal Color GetBad()</comment>
        <comment type="line" pos:line="806" pos:column="9">//{</comment>
        <comment type="line" pos:line="807" pos:column="9">//    var key = Microsoft.VisualStudio.Shell.VsBrushes.AccentMediumKey;</comment>
        <comment type="line" pos:line="808" pos:column="9">//    return (Application.Current.Resources[key] as SolidColorBrush).Color; ;</comment>
        <comment type="line" pos:line="809" pos:column="9">//}</comment>

        <comment type="line" pos:line="811" pos:column="9">//bool initedColors = false;</comment>

        <comment type="line" pos:line="813" pos:column="9">//private void RespondToLoad(object sender, RoutedEventArgs e)</comment>
        <comment type="line" pos:line="814" pos:column="9">//{</comment>
        <comment type="line" pos:line="815" pos:column="9">//    if (!initedColors)</comment>
        <comment type="line" pos:line="816" pos:column="9">//    {</comment>
        <comment type="line" pos:line="817" pos:column="9">//        Good = GetGood();</comment>
        <comment type="line" pos:line="818" pos:column="9">//        OK = GetOK();</comment>
        <comment type="line" pos:line="819" pos:column="9">//        Bad = GetBad();</comment>
        <comment type="line" pos:line="820" pos:column="9">//        initedColors = true;</comment>
        <comment type="line" pos:line="821" pos:column="9">//    }</comment>
        <comment type="line" pos:line="822" pos:column="9">//    try</comment>
        <comment type="line" pos:line="823" pos:column="9">//    {</comment>
        <comment type="line" pos:line="824" pos:column="9">//        var item = sender as Border;</comment>
        <comment type="line" pos:line="825" pos:column="9">//        var gradientBrush = item.Background as System.Windows.Media.LinearGradientBrush;</comment>
        <comment type="line" pos:line="826" pos:column="9">//        Color myColor = Colors.White;</comment>
        <comment type="line" pos:line="827" pos:column="9">//        var result = item.DataContext as CodeSearchResult;</comment>
        <comment type="line" pos:line="828" pos:column="9">//        if (result != null)</comment>
        <comment type="line" pos:line="829" pos:column="9">//        {</comment>
        <comment type="line" pos:line="830" pos:column="9">//            double score = result.Score;</comment>
        <comment type="line" pos:line="831" pos:column="9">//            if (score &gt;= 0.6)</comment>
        <comment type="line" pos:line="832" pos:column="9">//                myColor = Good;</comment>
        <comment type="line" pos:line="833" pos:column="9">//            else if (score &gt;= 0.4)</comment>
        <comment type="line" pos:line="834" pos:column="9">//                myColor = OK;</comment>
        <comment type="line" pos:line="835" pos:column="9">//            else if (score &lt; 0.4)</comment>
        <comment type="line" pos:line="836" pos:column="9">//                myColor = Bad;</comment>
        <comment type="line" pos:line="837" pos:column="9">//            if (score &gt; .99)</comment>
        <comment type="line" pos:line="838" pos:column="9">//            {</comment>
        <comment type="line" pos:line="839" pos:column="9">//                foreach (var stop in gradientBrush.GradientStops)</comment>
        <comment type="line" pos:line="840" pos:column="9">//                    stop.Color = myColor;</comment>
        <comment type="line" pos:line="841" pos:column="9">//            }</comment>
        <comment type="line" pos:line="842" pos:column="9">//            else</comment>
        <comment type="line" pos:line="843" pos:column="9">//            {</comment>
        <comment type="line" pos:line="844" pos:column="9">//                gradientBrush.GradientStops.First().Color = myColor;</comment>
        <comment type="line" pos:line="845" pos:column="9">//                gradientBrush.GradientStops.ElementAt(1).Color = myColor;</comment>
        <comment type="line" pos:line="846" pos:column="9">//            }</comment>
        <comment type="line" pos:line="847" pos:column="9">//        }</comment>

        <comment type="line" pos:line="849" pos:column="9">//    }</comment>
        <comment type="line" pos:line="850" pos:column="9">//    catch (Exception problem)</comment>
        <comment type="line" pos:line="851" pos:column="9">//    {</comment>
        <comment type="line" pos:line="852" pos:column="9">//        //ignore for now, as this is not a crucial feature</comment>
        <comment type="line" pos:line="853" pos:column="9">//    }</comment>
        <comment type="line" pos:line="854" pos:column="9">//}</comment>


        <function><type><specifier pos:line="857" pos:column="9">private</specifier> <name pos:line="857" pos:column="17">void</name></type> <name pos:line="857" pos:column="22">ListViewItem_LostFocus</name><parameter_list pos:line="857" pos:column="44">(<param><decl><type><name pos:line="857" pos:column="45">object</name></type> <name pos:line="857" pos:column="52">sender</name></decl></param>, <param><decl><type><name pos:line="857" pos:column="60">RoutedEventArgs</name></type> <name pos:line="857" pos:column="76">e</name></decl></param>)</parameter_list> <block pos:line="857" pos:column="79">{
            <comment type="line" pos:line="858" pos:column="13">//searchResultListbox.SelectedItem = null;</comment>
            <comment type="line" pos:line="859" pos:column="13">//// Mark as handled to prevent this event from bubbling up the element tree.</comment>
            <comment type="line" pos:line="860" pos:column="13">//e.Handled = true;</comment>
        }</block></function>

        <function><type><specifier pos:line="863" pos:column="9">private</specifier> <name pos:line="863" pos:column="17">void</name></type> <name pos:line="863" pos:column="22">MouseLeaveEvent</name><parameter_list pos:line="863" pos:column="37">(<param><decl><type><name pos:line="863" pos:column="38">object</name></type> <name pos:line="863" pos:column="45">sender</name></decl></param>, <param><decl><type><name pos:line="863" pos:column="53">MouseEventArgs</name></type> <name pos:line="863" pos:column="68">e</name></decl></param>)</parameter_list> <block pos:line="863" pos:column="71">{
            <try pos:line="864" pos:column="13">try
            <block pos:line="865" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="866" pos:column="17">searchResultListbox</name><op:operator pos:line="866" pos:column="36">.</op:operator><name pos:line="866" pos:column="37">SelectedItem</name></name> <op:operator pos:line="866" pos:column="50">=</op:operator> <name pos:line="866" pos:column="52">null</name></expr>;</expr_stmt>
                <comment type="line" pos:line="867" pos:column="17">// Mark as handled to prevent this event from bubbling up the element tree.</comment>
                <expr_stmt><expr><name><name pos:line="868" pos:column="17">e</name><op:operator pos:line="868" pos:column="18">.</op:operator><name pos:line="868" pos:column="19">Handled</name></name> <op:operator pos:line="868" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="868" pos:column="29">true</lit:literal></expr>;</expr_stmt>
            }</block>
            <catch pos:line="870" pos:column="13">catch <parameter_list pos:line="870" pos:column="19">(<param><decl><type><name pos:line="870" pos:column="20">Exception</name></type> <name pos:line="870" pos:column="30">ee</name></decl></param>)</parameter_list>
            <block pos:line="871" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="872" pos:column="17">LogEvents</name><op:operator pos:line="872" pos:column="26">.</op:operator><name pos:line="872" pos:column="27">UIGenericError</name></name><argument_list pos:line="872" pos:column="41">(<argument><expr><name pos:line="872" pos:column="42">this</name></expr></argument>, <argument><expr><name pos:line="872" pos:column="48">ee</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="876" pos:column="9">private</specifier> <name pos:line="876" pos:column="17">void</name></type> <name pos:line="876" pos:column="22">Options_Click</name><parameter_list pos:line="876" pos:column="35">(<param><decl><type><name pos:line="876" pos:column="36">object</name></type> <name pos:line="876" pos:column="43">sender</name></decl></param>, <param><decl><type><name pos:line="876" pos:column="51">RoutedEventArgs</name></type> <name pos:line="876" pos:column="67">e</name></decl></param>)</parameter_list>
        <block pos:line="877" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="878" pos:column="13">var</name></type> <name pos:line="878" pos:column="17">uiPackage</name> <init pos:line="878" pos:column="27">= <expr><call><name><name pos:line="878" pos:column="29">ServiceLocator</name><op:operator pos:line="878" pos:column="43">.</op:operator><name><name pos:line="878" pos:column="44">Resolve</name><argument_list pos:line="878" pos:column="51">&lt;<argument><name pos:line="878" pos:column="52">UIPackage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="878" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="879" pos:column="13">if <condition pos:line="879" pos:column="16">(<expr><name pos:line="879" pos:column="17">uiPackage</name> <op:operator pos:line="879" pos:column="27">!=</op:operator> <name pos:line="879" pos:column="30">null</name></expr>)</condition><then pos:line="879" pos:column="35">
                <expr_stmt><expr><call><name><name pos:line="880" pos:column="17">uiPackage</name><op:operator pos:line="880" pos:column="26">.</op:operator><name pos:line="880" pos:column="27">OpenSandoOptions</name></name><argument_list pos:line="880" pos:column="43">()</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>





        <function><type><specifier pos:line="887" pos:column="9">private</specifier> <name pos:line="887" pos:column="17">void</name></type> <name pos:line="887" pos:column="22">TextBox_TextChanged</name><parameter_list pos:line="887" pos:column="41">(<param><decl><type><name pos:line="887" pos:column="42">object</name></type> <name pos:line="887" pos:column="49">sender</name></decl></param>, <param><decl><type><name pos:line="887" pos:column="57">TextChangedEventArgs</name></type> <name pos:line="887" pos:column="78">e</name></decl></param>)</parameter_list>
        <block pos:line="888" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="889" pos:column="13">OpenFolderSelection</name><argument_list pos:line="889" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="892" pos:column="9">private</specifier> <name pos:line="892" pos:column="17">void</name></type> <name pos:line="892" pos:column="22">OpenFolderSelection</name><parameter_list pos:line="892" pos:column="41">()</parameter_list>
        <block pos:line="893" pos:column="9">{
            <try pos:line="894" pos:column="13">try
            <block pos:line="895" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="896" pos:column="17">var</name></type> <name pos:line="896" pos:column="21">srcMlService</name> <init pos:line="896" pos:column="34">= <expr><call><name><name pos:line="896" pos:column="36">ServiceLocator</name><op:operator pos:line="896" pos:column="50">.</op:operator><name><name pos:line="896" pos:column="51">Resolve</name><argument_list pos:line="896" pos:column="58">&lt;<argument><name pos:line="896" pos:column="59">ISrcMLGlobalService</name></argument>&gt;</argument_list></name></name><argument_list pos:line="896" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="897" pos:column="17">if <condition pos:line="897" pos:column="20">(<expr><name pos:line="897" pos:column="21">srcMlService</name> <op:operator pos:line="897" pos:column="34">!=</op:operator> <name pos:line="897" pos:column="37">null</name></expr>)</condition><then pos:line="897" pos:column="42">
                <block pos:line="898" pos:column="17">{
                    <if pos:line="899" pos:column="21">if <condition pos:line="899" pos:column="24">(<expr><name><name pos:line="899" pos:column="25">srcMlService</name><op:operator pos:line="899" pos:column="37">.</op:operator><name pos:line="899" pos:column="38">MonitoredDirectories</name></name> <op:operator pos:line="899" pos:column="59">!=</op:operator> <name pos:line="899" pos:column="62">null</name></expr>)</condition><then pos:line="899" pos:column="67">
                    <block pos:line="900" pos:column="21">{
                        <while pos:line="901" pos:column="25">while <condition pos:line="901" pos:column="31">(<expr><name><name pos:line="901" pos:column="32">MonitoredFiles</name><op:operator pos:line="901" pos:column="46">.</op:operator><name pos:line="901" pos:column="47">Count</name></name> <op:operator pos:line="901" pos:column="53">&gt;</op:operator> <lit:literal type="number" pos:line="901" pos:column="55">0</lit:literal></expr>)</condition>
                            <expr_stmt><expr><call><name><name pos:line="902" pos:column="29">MonitoredFiles</name><op:operator pos:line="902" pos:column="43">.</op:operator><name pos:line="902" pos:column="44">RemoveAt</name></name><argument_list pos:line="902" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="902" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></while>
                        <foreach pos:line="903" pos:column="25">foreach (<init><decl><type><name pos:line="903" pos:column="34">var</name></type> <name pos:line="903" pos:column="38">dir</name> <range pos:line="903" pos:column="42">in <expr><name><name pos:line="903" pos:column="45">srcMlService</name><op:operator pos:line="903" pos:column="57">.</op:operator><name pos:line="903" pos:column="58">MonitoredDirectories</name></name></expr></range></decl></init>)
                            <expr_stmt><expr><call><name><name pos:line="904" pos:column="29">MonitoredFiles</name><op:operator pos:line="904" pos:column="43">.</op:operator><name pos:line="904" pos:column="44">Add</name></name><argument_list pos:line="904" pos:column="47">(<argument><expr><op:operator pos:line="904" pos:column="48">new</op:operator> <call><name pos:line="904" pos:column="52">CheckedListItem</name><argument_list pos:line="904" pos:column="67">(<argument><expr><name pos:line="904" pos:column="68">dir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
                        <expr_stmt><expr><name><name pos:line="905" pos:column="25">CurrentlyIndexingFoldersPopup</name><op:operator pos:line="905" pos:column="54">.</op:operator><name pos:line="905" pos:column="55">IsOpen</name></name> <op:operator pos:line="905" pos:column="62">=</op:operator> <lit:literal type="boolean" pos:line="905" pos:column="64">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
            }</block>
            <catch pos:line="909" pos:column="13">catch <parameter_list pos:line="909" pos:column="19">(<param><decl><type><name pos:line="909" pos:column="20">ResolutionFailedException</name></type> <name pos:line="909" pos:column="46">resFailed</name></decl></param>)</parameter_list>
            <block pos:line="910" pos:column="13">{
                <comment type="line" pos:line="911" pos:column="17">//ignore</comment>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="915" pos:column="9">private</specifier> <name pos:line="915" pos:column="17">void</name></type> <name pos:line="915" pos:column="22">TextBox_MouseLeftButtonDown</name><parameter_list pos:line="915" pos:column="49">(<param><decl><type><name pos:line="915" pos:column="50">object</name></type> <name pos:line="915" pos:column="57">sender</name></decl></param>, <param><decl><type><name pos:line="915" pos:column="65">MouseButtonEventArgs</name></type> <name pos:line="915" pos:column="86">e</name></decl></param>)</parameter_list>
        <block pos:line="916" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="917" pos:column="13">OpenFolderSelection</name><argument_list pos:line="917" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="920" pos:column="9">public</specifier> class <name pos:line="920" pos:column="22">CheckedListItem</name>
        <block pos:line="921" pos:column="9">{

            <constructor><specifier pos:line="923" pos:column="13">public</specifier> <name pos:line="923" pos:column="20">CheckedListItem</name><parameter_list pos:line="923" pos:column="35">(<param><decl><type><name pos:line="923" pos:column="36">string</name></type> <name pos:line="923" pos:column="43">path</name></decl></param>)</parameter_list>
            <block pos:line="924" pos:column="13">{
                <expr_stmt><expr><name pos:line="925" pos:column="17">Name</name> <op:operator pos:line="925" pos:column="22">=</op:operator> <call><name><name pos:line="925" pos:column="24">Path</name><op:operator pos:line="925" pos:column="28">.</op:operator><name pos:line="925" pos:column="29">GetFileName</name></name><argument_list pos:line="925" pos:column="40">(<argument><expr><name pos:line="925" pos:column="41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="926" pos:column="17">if <condition pos:line="926" pos:column="20">(<expr><call><name><name pos:line="926" pos:column="21">string</name><op:operator pos:line="926" pos:column="27">.</op:operator><name pos:line="926" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="926" pos:column="46">(<argument><expr><name pos:line="926" pos:column="47">Name</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="926" pos:column="53">
                    <expr_stmt><expr><name pos:line="927" pos:column="21">Name</name> <op:operator pos:line="927" pos:column="26">=</op:operator> <call><name><name pos:line="927" pos:column="28">Path</name><op:operator pos:line="927" pos:column="32">.</op:operator><name pos:line="927" pos:column="33">GetDirectoryName</name></name><argument_list pos:line="927" pos:column="49">(<argument><expr><name pos:line="927" pos:column="50">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                <if pos:line="928" pos:column="17">if <condition pos:line="928" pos:column="20">(<expr><call><name><name pos:line="928" pos:column="21">string</name><op:operator pos:line="928" pos:column="27">.</op:operator><name pos:line="928" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="928" pos:column="46">(<argument><expr><name pos:line="928" pos:column="47">Name</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="928" pos:column="53">
                    <expr_stmt><expr><name pos:line="929" pos:column="21">Name</name> <op:operator pos:line="929" pos:column="26">=</op:operator> <name pos:line="929" pos:column="28">path</name></expr>;</expr_stmt></then></if>
                <expr_stmt><expr><name pos:line="930" pos:column="17">Id</name> <op:operator pos:line="930" pos:column="20">=</op:operator> <name pos:line="930" pos:column="22">path</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="931" pos:column="17">IsChecked</name> <op:operator pos:line="931" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="931" pos:column="29">true</lit:literal></expr>;</expr_stmt>
            }</block></constructor>

            <decl_stmt><decl><type><specifier pos:line="934" pos:column="13">public</specifier> <name pos:line="934" pos:column="20">string</name></type> <name pos:line="934" pos:column="27">Id</name> <block pos:line="934" pos:column="30">{ <function_decl><name pos:line="934" pos:column="32">get</name>;</function_decl> <function_decl><name pos:line="934" pos:column="37">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="935" pos:column="13">public</specifier> <name pos:line="935" pos:column="20">string</name></type> <name pos:line="935" pos:column="27">Name</name> <block pos:line="935" pos:column="32">{ <function_decl><name pos:line="935" pos:column="34">get</name>;</function_decl> <function_decl><name pos:line="935" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="936" pos:column="13">public</specifier> <name pos:line="936" pos:column="20">bool</name></type> <name pos:line="936" pos:column="25">IsChecked</name> <block pos:line="936" pos:column="35">{ <function_decl><name pos:line="936" pos:column="37">get</name>;</function_decl> <function_decl><name pos:line="936" pos:column="42">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>


        <function><type><specifier pos:line="940" pos:column="9">private</specifier> <name pos:line="940" pos:column="17">void</name></type> <name pos:line="940" pos:column="22">AddFolder_Click</name><parameter_list pos:line="940" pos:column="37">(<param><decl><type><name pos:line="940" pos:column="38">object</name></type> <name pos:line="940" pos:column="45">sender</name></decl></param>, <param><decl><type><name pos:line="940" pos:column="53">RoutedEventArgs</name></type> <name pos:line="940" pos:column="69">e</name></decl></param>)</parameter_list>
        <block pos:line="941" pos:column="9">{            
            <decl_stmt><decl><type><name pos:line="942" pos:column="13">var</name></type> <name pos:line="942" pos:column="17">dialog</name> <init pos:line="942" pos:column="24">= <expr><op:operator pos:line="942" pos:column="26">new</op:operator> <call><name><name pos:line="942" pos:column="30">System</name><op:operator pos:line="942" pos:column="36">.</op:operator><name pos:line="942" pos:column="37">Windows</name><op:operator pos:line="942" pos:column="44">.</op:operator><name pos:line="942" pos:column="45">Forms</name><op:operator pos:line="942" pos:column="50">.</op:operator><name pos:line="942" pos:column="51">FolderBrowserDialog</name></name><argument_list pos:line="942" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="943" pos:column="13">if <condition pos:line="943" pos:column="16">(<expr><name><name pos:line="943" pos:column="17">MonitoredFiles</name><op:operator pos:line="943" pos:column="31">.</op:operator><name pos:line="943" pos:column="32">Count</name></name> <op:operator pos:line="943" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="943" pos:column="40">0</lit:literal></expr>)</condition><then pos:line="943" pos:column="42">
                <expr_stmt><expr><name><name pos:line="944" pos:column="17">dialog</name><op:operator pos:line="944" pos:column="23">.</op:operator><name pos:line="944" pos:column="24">SelectedPath</name></name> <op:operator pos:line="944" pos:column="37">=</op:operator> <call><name><name pos:line="944" pos:column="39">MonitoredFiles</name><op:operator pos:line="944" pos:column="53">.</op:operator><name pos:line="944" pos:column="54">First</name></name><argument_list pos:line="944" pos:column="59">()</argument_list></call><op:operator pos:line="944" pos:column="61">.</op:operator><name pos:line="944" pos:column="62">Id</name></expr>;</expr_stmt></then></if>
            <decl_stmt><decl><type><name><name pos:line="945" pos:column="13">System</name><op:operator pos:line="945" pos:column="19">.</op:operator><name pos:line="945" pos:column="20">Windows</name><op:operator pos:line="945" pos:column="27">.</op:operator><name pos:line="945" pos:column="28">Forms</name><op:operator pos:line="945" pos:column="33">.</op:operator><name pos:line="945" pos:column="34">DialogResult</name></name></type> <name pos:line="945" pos:column="47">result</name> <init pos:line="945" pos:column="54">= <expr><call><name><name pos:line="945" pos:column="56">dialog</name><op:operator pos:line="945" pos:column="62">.</op:operator><name pos:line="945" pos:column="63">ShowDialog</name></name><argument_list pos:line="945" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="946" pos:column="13">if <condition pos:line="946" pos:column="16">(<expr><call><name><name pos:line="946" pos:column="17">System</name><op:operator pos:line="946" pos:column="23">.</op:operator><name pos:line="946" pos:column="24">Windows</name><op:operator pos:line="946" pos:column="31">.</op:operator><name pos:line="946" pos:column="32">Forms</name><op:operator pos:line="946" pos:column="37">.</op:operator><name pos:line="946" pos:column="38">DialogResult</name><op:operator pos:line="946" pos:column="50">.</op:operator><name pos:line="946" pos:column="51">OK</name><op:operator pos:line="946" pos:column="53">.</op:operator><name pos:line="946" pos:column="54">Equals</name></name><argument_list pos:line="946" pos:column="60">(<argument><expr><name pos:line="946" pos:column="61">result</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="946" pos:column="69">
            <block pos:line="947" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="948" pos:column="17">MonitoredFiles</name><op:operator pos:line="948" pos:column="31">.</op:operator><name pos:line="948" pos:column="32">Add</name></name><argument_list pos:line="948" pos:column="35">(<argument><expr><op:operator pos:line="948" pos:column="36">new</op:operator> <call><name pos:line="948" pos:column="40">CheckedListItem</name><argument_list pos:line="948" pos:column="55">(<argument><expr><name><name pos:line="948" pos:column="56">dialog</name><op:operator pos:line="948" pos:column="62">.</op:operator><name pos:line="948" pos:column="63">SelectedPath</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="952" pos:column="9">private</specifier> <name pos:line="952" pos:column="17">void</name></type> <name pos:line="952" pos:column="22">UpdateFolders_Click</name><parameter_list pos:line="952" pos:column="41">(<param><decl><type><name pos:line="952" pos:column="42">object</name></type> <name pos:line="952" pos:column="49">sender</name></decl></param>, <param><decl><type><name pos:line="952" pos:column="57">RoutedEventArgs</name></type> <name pos:line="952" pos:column="73">e</name></decl></param>)</parameter_list>
        <block pos:line="953" pos:column="9">{
            <try pos:line="954" pos:column="13">try<block pos:line="954" pos:column="16">{
                    <decl_stmt><decl><type><name pos:line="955" pos:column="21">var</name></type> <name pos:line="955" pos:column="25">srcMlService</name> <init pos:line="955" pos:column="38">= <expr><call><name><name pos:line="955" pos:column="40">ServiceLocator</name><op:operator pos:line="955" pos:column="54">.</op:operator><name><name pos:line="955" pos:column="55">Resolve</name><argument_list pos:line="955" pos:column="62">&lt;<argument><name pos:line="955" pos:column="63">ISrcMLGlobalService</name></argument>&gt;</argument_list></name></name><argument_list pos:line="955" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="956" pos:column="21">if <condition pos:line="956" pos:column="24">(<expr><name pos:line="956" pos:column="25">srcMlService</name> <op:operator pos:line="956" pos:column="38">!=</op:operator> <name pos:line="956" pos:column="41">null</name></expr>)</condition><then pos:line="956" pos:column="46">
                    <block pos:line="957" pos:column="21">{
                        <foreach pos:line="958" pos:column="25">foreach (<init><decl><type><name pos:line="958" pos:column="34">var</name></type> <name pos:line="958" pos:column="38">folder</name> <range pos:line="958" pos:column="45">in <expr><name pos:line="958" pos:column="48">MonitoredFiles</name></expr></range></decl></init>)
                        <block pos:line="959" pos:column="25">{
                            <if pos:line="960" pos:column="29">if <condition pos:line="960" pos:column="32">(<expr><op:operator pos:line="960" pos:column="33">!</op:operator><name><name pos:line="960" pos:column="34">folder</name><op:operator pos:line="960" pos:column="40">.</op:operator><name pos:line="960" pos:column="41">IsChecked</name></name></expr>)</condition><then pos:line="960" pos:column="51">
                                <expr_stmt><expr><call><name><name pos:line="961" pos:column="33">srcMlService</name><op:operator pos:line="961" pos:column="45">.</op:operator><name pos:line="961" pos:column="46">RemoveDirectoryFromMonitor</name></name><argument_list pos:line="961" pos:column="72">(<argument><expr><name><name pos:line="961" pos:column="73">folder</name><op:operator pos:line="961" pos:column="79">.</op:operator><name pos:line="961" pos:column="80">Id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
                            <else pos:line="962" pos:column="29">else
                            <block pos:line="963" pos:column="29">{
                                <try pos:line="964" pos:column="33">try
                                <block pos:line="965" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="966" pos:column="37">srcMlService</name><op:operator pos:line="966" pos:column="49">.</op:operator><name pos:line="966" pos:column="50">AddDirectoryToMonitor</name></name><argument_list pos:line="966" pos:column="71">(<argument><expr><name><name pos:line="966" pos:column="72">folder</name><op:operator pos:line="966" pos:column="78">.</op:operator><name pos:line="966" pos:column="79">Id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block>
                                <catch pos:line="968" pos:column="33">catch <parameter_list pos:line="968" pos:column="39">(<param><decl><type><name pos:line="968" pos:column="40">DirectoryScanningMonitorSubDirectoryException</name></type> <name pos:line="968" pos:column="86">cantAdd</name></decl></param>)</parameter_list>
                                <block pos:line="969" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="970" pos:column="37">MessageBox</name><op:operator pos:line="970" pos:column="47">.</op:operator><name pos:line="970" pos:column="48">Show</name></name><argument_list pos:line="970" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="970" pos:column="53">"Sub-directories of existing directories cannot be added - "</lit:literal> <op:operator pos:line="970" pos:column="114">+</op:operator> <name><name pos:line="970" pos:column="116">cantAdd</name><op:operator pos:line="970" pos:column="123">.</op:operator><name pos:line="970" pos:column="124">Message</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="970" pos:column="133">"Invalid Directory"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="970" pos:column="154">MessageBoxButton</name><op:operator pos:line="970" pos:column="170">.</op:operator><name pos:line="970" pos:column="171">OK</name></name></expr></argument>, <argument><expr><name><name pos:line="970" pos:column="175">MessageBoxImage</name><op:operator pos:line="970" pos:column="190">.</op:operator><name pos:line="970" pos:column="191">Warning</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                                    
                                }</block></catch>
                                <catch pos:line="972" pos:column="33">catch <parameter_list pos:line="972" pos:column="39">(<param><decl><type><name pos:line="972" pos:column="40">ForbiddenDirectoryException</name></type> <name pos:line="972" pos:column="68">cantAdd</name></decl></param>)</parameter_list>
                                <block pos:line="973" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="974" pos:column="37">MessageBox</name><op:operator pos:line="974" pos:column="47">.</op:operator><name pos:line="974" pos:column="48">Show</name></name><argument_list pos:line="974" pos:column="52">( <argument><expr><name><name pos:line="974" pos:column="54">cantAdd</name><op:operator pos:line="974" pos:column="61">.</op:operator><name pos:line="974" pos:column="62">Message</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="974" pos:column="71">"Invalid Directory"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="974" pos:column="92">MessageBoxButton</name><op:operator pos:line="974" pos:column="108">.</op:operator><name pos:line="974" pos:column="109">OK</name></name></expr></argument>, <argument><expr><name><name pos:line="974" pos:column="113">MessageBoxImage</name><op:operator pos:line="974" pos:column="128">.</op:operator><name pos:line="974" pos:column="129">Warning</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></catch></try>
                            }</block></else></if>
                        }</block></foreach>
                    }</block></then></if>
                    <expr_stmt><expr><call><name pos:line="979" pos:column="21">CloseFolderPopup</name><argument_list pos:line="979" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="981" pos:column="13">catch <parameter_list pos:line="981" pos:column="19">(<param><decl><type><name pos:line="981" pos:column="20">ResolutionFailedException</name></type> <name pos:line="981" pos:column="46">resFailed</name></decl></param>)</parameter_list>
            <block pos:line="982" pos:column="13">{
                <comment type="line" pos:line="983" pos:column="17">//ignore</comment>
            }</block></catch></try>
            
        }</block></function>

        <function><type><specifier pos:line="988" pos:column="9">private</specifier> <name pos:line="988" pos:column="17">void</name></type> <name pos:line="988" pos:column="22">Cancel_Click</name><parameter_list pos:line="988" pos:column="34">(<param><decl><type><name pos:line="988" pos:column="35">object</name></type> <name pos:line="988" pos:column="42">sender</name></decl></param>, <param><decl><type><name pos:line="988" pos:column="50">RoutedEventArgs</name></type> <name pos:line="988" pos:column="66">e</name></decl></param>)</parameter_list>
        <block pos:line="989" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="990" pos:column="13">CloseFolderPopup</name><argument_list pos:line="990" pos:column="29">()</argument_list></call></expr>;</expr_stmt>            
        }</block></function>

        <function><type><specifier pos:line="993" pos:column="9">private</specifier> <name pos:line="993" pos:column="17">void</name></type> <name pos:line="993" pos:column="22">CloseFolderPopup</name><parameter_list pos:line="993" pos:column="38">()</parameter_list>
        <block pos:line="994" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="995" pos:column="13">CurrentlyIndexingFoldersPopup</name><op:operator pos:line="995" pos:column="42">.</op:operator><name pos:line="995" pos:column="43">IsOpen</name></name> <op:operator pos:line="995" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="995" pos:column="52">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="996" pos:column="13">UpdateMethodIndexingList</name><argument_list pos:line="996" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="999" pos:column="9">private</specifier> <name pos:line="999" pos:column="17">void</name></type> <name pos:line="999" pos:column="22">UpdateMethodIndexingList</name><parameter_list pos:line="999" pos:column="46">()</parameter_list>
        <block pos:line="1000" pos:column="9">{
            <try pos:line="1001" pos:column="13">try
            <block pos:line="1002" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="1003" pos:column="17">var</name></type> <name pos:line="1003" pos:column="21">srcMlService</name> <init pos:line="1003" pos:column="34">= <expr><call><name><name pos:line="1003" pos:column="36">ServiceLocator</name><op:operator pos:line="1003" pos:column="50">.</op:operator><name><name pos:line="1003" pos:column="51">Resolve</name><argument_list pos:line="1003" pos:column="58">&lt;<argument><name pos:line="1003" pos:column="59">ISrcMLGlobalService</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1003" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="1004" pos:column="17">if <condition pos:line="1004" pos:column="20">(<expr><name pos:line="1004" pos:column="21">srcMlService</name> <op:operator pos:line="1004" pos:column="34">!=</op:operator> <name pos:line="1004" pos:column="37">null</name></expr>)</condition><then pos:line="1004" pos:column="42">
                <block pos:line="1005" pos:column="17">{
                    <if pos:line="1006" pos:column="21">if <condition pos:line="1006" pos:column="24">(<expr><name><name pos:line="1006" pos:column="25">srcMlService</name><op:operator pos:line="1006" pos:column="37">.</op:operator><name pos:line="1006" pos:column="38">MonitoredDirectories</name></name> <op:operator pos:line="1006" pos:column="59">!=</op:operator> <name pos:line="1006" pos:column="62">null</name> <op:operator pos:line="1006" pos:column="67">&amp;&amp;</op:operator> <name><name pos:line="1006" pos:column="70">srcMlService</name><op:operator pos:line="1006" pos:column="82">.</op:operator><name pos:line="1006" pos:column="83">MonitoredDirectories</name><op:operator pos:line="1006" pos:column="103">.</op:operator><name pos:line="1006" pos:column="104">Count</name></name> <op:operator pos:line="1006" pos:column="110">&gt;</op:operator> <lit:literal type="number" pos:line="1006" pos:column="112">0</lit:literal></expr>)</condition><then pos:line="1006" pos:column="114">
                        <expr_stmt><expr><name pos:line="1007" pos:column="25">OpenSolutionPaths</name> <op:operator pos:line="1007" pos:column="43">=</op:operator> <call><name><name pos:line="1007" pos:column="45">UIPackage</name><op:operator pos:line="1007" pos:column="54">.</op:operator><name pos:line="1007" pos:column="55">GetDisplayPathMonitoredFiles</name></name><argument_list pos:line="1007" pos:column="83">(<argument><expr><name pos:line="1007" pos:column="84">srcMlService</name></expr></argument>, <argument><expr><name pos:line="1007" pos:column="98">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
                    <else pos:line="1008" pos:column="21">else <if pos:line="1008" pos:column="26">if <condition pos:line="1008" pos:column="29">(<expr><name><name pos:line="1008" pos:column="30">srcMlService</name><op:operator pos:line="1008" pos:column="42">.</op:operator><name pos:line="1008" pos:column="43">MonitoredDirectories</name></name> <op:operator pos:line="1008" pos:column="64">!=</op:operator> <name pos:line="1008" pos:column="67">null</name> <op:operator pos:line="1008" pos:column="72">&amp;&amp;</op:operator> <name><name pos:line="1008" pos:column="75">srcMlService</name><op:operator pos:line="1008" pos:column="87">.</op:operator><name pos:line="1008" pos:column="88">MonitoredDirectories</name><op:operator pos:line="1008" pos:column="108">.</op:operator><name pos:line="1008" pos:column="109">Count</name></name> <op:operator pos:line="1008" pos:column="115">==</op:operator> <lit:literal type="number" pos:line="1008" pos:column="118">0</lit:literal></expr>)</condition><then pos:line="1008" pos:column="120">
                        <expr_stmt><expr><name pos:line="1009" pos:column="25">OpenSolutionPaths</name> <op:operator pos:line="1009" pos:column="43">=</op:operator> <name pos:line="1009" pos:column="45">PleaseAddDirectoriesMessage</name></expr>;</expr_stmt></then></if></else></if>
                }</block></then></if>
            }</block>
            <catch pos:line="1012" pos:column="13">catch <parameter_list pos:line="1012" pos:column="19">(<param><decl><type><name pos:line="1012" pos:column="20">ResolutionFailedException</name></type> <name pos:line="1012" pos:column="46">resFailed</name></decl></param>)</parameter_list>
            <block pos:line="1013" pos:column="13">{
                <comment type="line" pos:line="1014" pos:column="17">//ignore</comment>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="1018" pos:column="9">private</specifier> <name pos:line="1018" pos:column="17">void</name></type> <name pos:line="1018" pos:column="22">IndexingList_KeyDown</name><parameter_list pos:line="1018" pos:column="42">(<param><decl><type><name pos:line="1018" pos:column="43">object</name></type> <name pos:line="1018" pos:column="50">sender</name></decl></param>, <param><decl><type><name pos:line="1018" pos:column="58">KeyEventArgs</name></type> <name pos:line="1018" pos:column="71">e</name></decl></param>)</parameter_list>
        <block pos:line="1019" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="1020" pos:column="13">OpenFolderSelection</name><argument_list pos:line="1020" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="1021" pos:column="13">e</name><op:operator pos:line="1021" pos:column="14">.</op:operator><name pos:line="1021" pos:column="15">Handled</name></name> <op:operator pos:line="1021" pos:column="23">=</op:operator> <lit:literal type="boolean" pos:line="1021" pos:column="25">true</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="1024" pos:column="9">private</specifier> <name pos:line="1024" pos:column="17">void</name></type> <name pos:line="1024" pos:column="22">Reset_Click</name><parameter_list pos:line="1024" pos:column="33">(<param><decl><type><name pos:line="1024" pos:column="34">object</name></type> <name pos:line="1024" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="1024" pos:column="49">RoutedEventArgs</name></type> <name pos:line="1024" pos:column="65">e</name></decl></param>)</parameter_list>
        <block pos:line="1025" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="1026" pos:column="13">var</name></type> <name pos:line="1026" pos:column="17">srcMlService</name> <init pos:line="1026" pos:column="30">= <expr><call><name><name pos:line="1026" pos:column="32">ServiceLocator</name><op:operator pos:line="1026" pos:column="46">.</op:operator><name><name pos:line="1026" pos:column="47">Resolve</name><argument_list pos:line="1026" pos:column="54">&lt;<argument><name pos:line="1026" pos:column="55">ISrcMLGlobalService</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1026" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="1027" pos:column="13">if <condition pos:line="1027" pos:column="16">(<expr><name pos:line="1027" pos:column="17">srcMlService</name> <op:operator pos:line="1027" pos:column="30">==</op:operator> <name pos:line="1027" pos:column="33">null</name></expr>)</condition><then pos:line="1027" pos:column="38">
            <block pos:line="1028" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="1029" pos:column="17">MessageBox</name><op:operator pos:line="1029" pos:column="27">.</op:operator><name pos:line="1029" pos:column="28">Show</name></name><argument_list pos:line="1029" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="1029" pos:column="33">"Could not reset the index."</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1029" pos:column="63">"Failed to Reset"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1029" pos:column="82">MessageBoxButton</name><op:operator pos:line="1029" pos:column="98">.</op:operator><name pos:line="1029" pos:column="99">OK</name></name></expr></argument>, <argument><expr><name><name pos:line="1029" pos:column="103">MessageBoxImage</name><op:operator pos:line="1029" pos:column="118">.</op:operator><name pos:line="1029" pos:column="119">Exclamation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="1031" pos:column="13">else
            <block pos:line="1032" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="1033" pos:column="17">srcMlService</name><op:operator pos:line="1033" pos:column="29">.</op:operator><name pos:line="1033" pos:column="30">Reset</name></name><argument_list pos:line="1033" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="1034" pos:column="17">MessageBox</name><op:operator pos:line="1034" pos:column="27">.</op:operator><name pos:line="1034" pos:column="28">Show</name></name><argument_list pos:line="1034" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="1034" pos:column="33">"Restart this Visual Studio Instance to complete the index reset."</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1034" pos:column="101">"Restart to Complete"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1034" pos:column="124">MessageBoxButton</name><op:operator pos:line="1034" pos:column="140">.</op:operator><name pos:line="1034" pos:column="141">OK</name></name></expr></argument>, <argument><expr><name><name pos:line="1034" pos:column="145">MessageBoxImage</name><op:operator pos:line="1034" pos:column="160">.</op:operator><name pos:line="1034" pos:column="161">Information</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

  

    

    }</block></class>
}</block></namespace></unit>
