<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\DTE90.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for dte90.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>


<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef</cpp:directive> <name pos:line="38" pos:column="9">__dte90_h__</name></cpp:ifndef>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">__dte90_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if</cpp:directive> <expr><call><name pos:line="41" pos:column="5">defined</name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="41" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="41" pos:column="26">(</op:operator><name pos:line="41" pos:column="27">_MSC_VER</name> <op:operator pos:line="41" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="41" pos:column="39">1020</lit:literal><op:operator pos:line="41" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="45" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef</cpp:directive> <name pos:line="47" pos:column="9">__ToolBoxTab3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">__ToolBoxTab3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="49" pos:column="1">typedef <type><name pos:line="49" pos:column="9">interface</name> <name pos:line="49" pos:column="19">ToolBoxTab3</name></type> <name pos:line="49" pos:column="31">ToolBoxTab3</name>;</typedef>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="50" pos:column="9">/* __ToolBoxTab3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifndef</cpp:directive> <name pos:line="53" pos:column="9">__HTMLWindow3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">__HTMLWindow3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="55" pos:column="1">typedef <type><name pos:line="55" pos:column="9">interface</name> <name pos:line="55" pos:column="19">HTMLWindow3</name></type> <name pos:line="55" pos:column="31">HTMLWindow3</name>;</typedef>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="56" pos:column="9">/* __HTMLWindow3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifndef</cpp:directive> <name pos:line="59" pos:column="9">__Debugger3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">__Debugger3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="61" pos:column="1">typedef <type><name pos:line="61" pos:column="9">interface</name> <name pos:line="61" pos:column="19">Debugger3</name></type> <name pos:line="61" pos:column="29">Debugger3</name>;</typedef>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="62" pos:column="9">/* __Debugger3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifndef</cpp:directive> <name pos:line="65" pos:column="9">__Thread2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="66" pos:column="9">__Thread2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="67" pos:column="1">typedef <type><name pos:line="67" pos:column="9">interface</name> <name pos:line="67" pos:column="19">Thread2</name></type> <name pos:line="67" pos:column="27">Thread2</name>;</typedef>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="68" pos:column="9">/* __Thread2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifndef</cpp:directive> <name pos:line="71" pos:column="9">__Process3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="72" pos:column="9">__Process3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="73" pos:column="1">typedef <type><name pos:line="73" pos:column="9">interface</name> <name pos:line="73" pos:column="19">Process3</name></type> <name pos:line="73" pos:column="28">Process3</name>;</typedef>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="74" pos:column="9">/* __Process3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">ifndef</cpp:directive> <name pos:line="77" pos:column="9">__Modules_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="78" pos:column="9">__Modules_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="79" pos:column="1">typedef <type><name pos:line="79" pos:column="9">interface</name> <name pos:line="79" pos:column="19">Modules</name></type> <name pos:line="79" pos:column="27">Modules</name>;</typedef>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="80" pos:column="9">/* __Modules_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifndef</cpp:directive> <name pos:line="83" pos:column="9">__Module_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">__Module_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="85" pos:column="1">typedef <type><name pos:line="85" pos:column="9">interface</name> <name pos:line="85" pos:column="19">Module</name></type> <name pos:line="85" pos:column="26">Module</name>;</typedef>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="86" pos:column="9">/* __Module_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifndef</cpp:directive> <name pos:line="89" pos:column="9">__ExceptionGroups_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="90" pos:column="9">__ExceptionGroups_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="91" pos:column="1">typedef <type><name pos:line="91" pos:column="9">interface</name> <name pos:line="91" pos:column="19">ExceptionGroups</name></type> <name pos:line="91" pos:column="35">ExceptionGroups</name>;</typedef>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="92" pos:column="9">/* __ExceptionGroups_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifndef</cpp:directive> <name pos:line="95" pos:column="9">__ExceptionSettings_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="96" pos:column="9">__ExceptionSettings_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="97" pos:column="1">typedef <type><name pos:line="97" pos:column="9">interface</name> <name pos:line="97" pos:column="19">ExceptionSettings</name></type> <name pos:line="97" pos:column="37">ExceptionSettings</name>;</typedef>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="98" pos:column="9">/* __ExceptionSettings_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">ifndef</cpp:directive> <name pos:line="101" pos:column="9">__ExceptionSetting_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="102" pos:column="9">__ExceptionSetting_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="103" pos:column="1">typedef <type><name pos:line="103" pos:column="9">interface</name> <name pos:line="103" pos:column="19">ExceptionSetting</name></type> <name pos:line="103" pos:column="36">ExceptionSetting</name>;</typedef>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="104" pos:column="9">/* __ExceptionSetting_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifndef</cpp:directive> <name pos:line="107" pos:column="9">__Template_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">__Template_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="109" pos:column="1">typedef <type><name pos:line="109" pos:column="9">interface</name> <name pos:line="109" pos:column="19">Template</name></type> <name pos:line="109" pos:column="28">Template</name>;</typedef>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="110" pos:column="9">/* __Template_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">ifndef</cpp:directive> <name pos:line="113" pos:column="9">__Templates_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="114" pos:column="9">__Templates_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="115" pos:column="1">typedef <type><name pos:line="115" pos:column="9">interface</name> <name pos:line="115" pos:column="19">Templates</name></type> <name pos:line="115" pos:column="29">Templates</name>;</typedef>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="116" pos:column="9">/* __Templates_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">ifndef</cpp:directive> <name pos:line="119" pos:column="9">__Solution3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="120" pos:column="9">__Solution3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="121" pos:column="1">typedef <type><name pos:line="121" pos:column="9">interface</name> <name pos:line="121" pos:column="19">Solution3</name></type> <name pos:line="121" pos:column="29">Solution3</name>;</typedef>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="122" pos:column="9">/* __Solution3_FWD_DEFINED__ */</comment>


<cpp:ifdef pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">ifdef</cpp:directive> <name pos:line="125" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="126" pos:column="1">extern <lit:literal type="string" pos:line="126" pos:column="8">"C"</lit:literal><block pos:line="126" pos:column="11">{
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="130" pos:column="1">/* interface __MIDL_itf_dte90_0000_0000 */</comment>
<comment type="block" pos:line="131" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:ifndef pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">ifndef</cpp:directive> <name pos:line="134" pos:column="9">__INDENTSTYLE__</name></cpp:ifndef>
<cpp:define pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="135" pos:column="9">__INDENTSTYLE__</name></cpp:macro></cpp:define>
<typedef pos:line="136" pos:column="1">typedef <comment type="block" pos:line="136" pos:column="9">/* [uuid] */</comment>  <expr_stmt><expr><call><name pos:line="136" pos:column="23">DECLSPEC_UUID</name><argument_list pos:line="136" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="136" pos:column="37">"BCCEBE05-D29C-11D2-AABD-00C04F688DDE"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="137" pos:column="6">_vsIndentStyle</name>
    <block pos:line="138" pos:column="5">{	<expr><name pos:line="138" pos:column="9">vsIndentStyleNone</name>	<op:operator pos:line="138" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="138" pos:column="35">0</lit:literal></expr><op:operator pos:line="138" pos:column="36">,</op:operator>
	<expr><name pos:line="139" pos:column="9">vsIndentStyleDefault</name>	<op:operator pos:line="139" pos:column="33">=</op:operator> <op:operator pos:line="139" pos:column="35">(</op:operator> <name pos:line="139" pos:column="37">vsIndentStyleNone</name> <op:operator pos:line="139" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="139" pos:column="57">1</lit:literal> <op:operator pos:line="139" pos:column="59">)</op:operator></expr> <op:operator pos:line="139" pos:column="61">,</op:operator>
	<expr><name pos:line="140" pos:column="9">vsIndentStyleSmart</name>	<op:operator pos:line="140" pos:column="33">=</op:operator> <op:operator pos:line="140" pos:column="35">(</op:operator> <name pos:line="140" pos:column="37">vsIndentStyleDefault</name> <op:operator pos:line="140" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="140" pos:column="60">1</lit:literal> <op:operator pos:line="140" pos:column="62">)</op:operator></expr> 
    }</block> 	<name pos:line="141" pos:column="9">vsIndentStyle</name></expr>;</expr_stmt></typedef>

<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="143" pos:column="8">// __INDENTSTYLE__</comment>


<decl_stmt><decl><type><specifier pos:line="146" pos:column="1">extern</specifier> <name pos:line="146" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="146" pos:column="22">__MIDL_itf_dte90_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="147" pos:column="1">extern</specifier> <name pos:line="147" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="147" pos:column="22">__MIDL_itf_dte90_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">ifndef</cpp:directive> <name pos:line="150" pos:column="9">__EnvDTE90_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="151" pos:column="9">__EnvDTE90_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="153" pos:column="1">/* library EnvDTE90 */</comment>
<comment type="block" pos:line="154" pos:column="1">/* [version][helpstring][uuid] */</comment> 

<typedef pos:line="156" pos:column="1">typedef <comment type="block" pos:line="156" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="156" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="156" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="81">"FCDF1B34-0781-43c6-BD46-062CAEA1FB05"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="157" pos:column="6">vsHTMLViews</name>
    <block pos:line="158" pos:column="5">{	<expr><name pos:line="158" pos:column="9">vsHTMLViewSource</name>	<op:operator pos:line="158" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="158" pos:column="35">0</lit:literal></expr><op:operator pos:line="158" pos:column="36">,</op:operator>
	<expr><name pos:line="159" pos:column="9">vsHTMLViewDesign</name>	<op:operator pos:line="159" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="159" pos:column="35">1</lit:literal></expr>
    }</block> 	<name pos:line="160" pos:column="9">vsHTMLViews</name></expr>;</expr_stmt></typedef>

<typedef pos:line="162" pos:column="1">typedef <comment type="block" pos:line="162" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="162" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="162" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="162" pos:column="81">"7F27C244-AFD2-4bba-8193-DAA837CC03DA"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="163" pos:column="6">vsHTMLPanes</name>
    <block pos:line="164" pos:column="5">{	<expr><name pos:line="164" pos:column="9">vsHTMLPaneSource</name>	<op:operator pos:line="164" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="164" pos:column="35">0</lit:literal></expr><op:operator pos:line="164" pos:column="36">,</op:operator>
	<expr><name pos:line="165" pos:column="9">vsHTMLPaneDesign</name>	<op:operator pos:line="165" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="165" pos:column="35">1</lit:literal></expr><op:operator pos:line="165" pos:column="36">,</op:operator>
	<expr><name pos:line="166" pos:column="9">vsHTMLPaneSplit</name>	<op:operator pos:line="166" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="166" pos:column="27">2</lit:literal></expr>
    }</block> 	<name pos:line="167" pos:column="9">vsHTMLPanes</name></expr>;</expr_stmt></typedef>

<typedef pos:line="169" pos:column="1">typedef 
<type><enum pos:line="170" pos:column="1">enum <name pos:line="170" pos:column="6">vsHTMLBackgroundTasks</name>
    <block pos:line="171" pos:column="5">{	<decl><name pos:line="171" pos:column="9">vsHTMLBackgroundCompilation</name>	<init pos:line="171" pos:column="41">= <expr><lit:literal type="number" pos:line="171" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="171" pos:column="44">,</op:operator>
	<decl><name pos:line="172" pos:column="9">vsHTMLBackgroundToolboxPopulation</name>	<init pos:line="172" pos:column="49">= <expr><op:operator pos:line="172" pos:column="51">(</op:operator> <name pos:line="172" pos:column="53">vsHTMLBackgroundCompilation</name> <op:operator pos:line="172" pos:column="81">+</op:operator> <lit:literal type="number" pos:line="172" pos:column="83">1</lit:literal> <op:operator pos:line="172" pos:column="85">)</op:operator></expr></init></decl> 
    }</block></enum></type> 	<name pos:line="173" pos:column="9">vsHTMLBackgroundTasks</name>;</typedef>









<typedef pos:line="183" pos:column="1">typedef 
<type><enum pos:line="184" pos:column="1">enum <name pos:line="184" pos:column="6">enum_THREADCATEGORY</name>
    <block pos:line="185" pos:column="5">{	<decl><name pos:line="185" pos:column="9">THREADCATEGORY_Worker</name>	<init pos:line="185" pos:column="33">= <expr><lit:literal type="number" pos:line="185" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="185" pos:column="36">,</op:operator>
	<decl><name pos:line="186" pos:column="9">THREADCATEGORY_UI</name>	<init pos:line="186" pos:column="33">= <expr><op:operator pos:line="186" pos:column="35">(</op:operator> <name pos:line="186" pos:column="37">THREADCATEGORY_Worker</name> <op:operator pos:line="186" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="186" pos:column="61">1</lit:literal> <op:operator pos:line="186" pos:column="63">)</op:operator></expr></init></decl> <op:operator pos:line="186" pos:column="65">,</op:operator>
	<decl><name pos:line="187" pos:column="9">THREADCATEGORY_Main</name>	<init pos:line="187" pos:column="33">= <expr><op:operator pos:line="187" pos:column="35">(</op:operator> <name pos:line="187" pos:column="37">THREADCATEGORY_UI</name> <op:operator pos:line="187" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="187" pos:column="57">1</lit:literal> <op:operator pos:line="187" pos:column="59">)</op:operator></expr></init></decl> <op:operator pos:line="187" pos:column="61">,</op:operator>
	<decl><name pos:line="188" pos:column="9">THREADCATEGORY_RPC</name>	<init pos:line="188" pos:column="33">= <expr><op:operator pos:line="188" pos:column="35">(</op:operator> <name pos:line="188" pos:column="37">THREADCATEGORY_Main</name> <op:operator pos:line="188" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="188" pos:column="59">1</lit:literal> <op:operator pos:line="188" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="188" pos:column="63">,</op:operator>
	<decl><name pos:line="189" pos:column="9">THREADCATEGORY_Unknown</name>	<init pos:line="189" pos:column="33">= <expr><op:operator pos:line="189" pos:column="35">(</op:operator> <name pos:line="189" pos:column="37">THREADCATEGORY_RPC</name> <op:operator pos:line="189" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="189" pos:column="58">1</lit:literal> <op:operator pos:line="189" pos:column="60">)</op:operator></expr></init></decl> 
    }</block></enum></type> 	<name pos:line="190" pos:column="9">THREADCATEGORY</name>;</typedef>


<decl_stmt><decl><type><name pos:line="193" pos:column="1">EXTERN_C</name> <specifier pos:line="193" pos:column="10">const</specifier> <name pos:line="193" pos:column="16">IID</name></type> <name pos:line="193" pos:column="20">LIBID_EnvDTE90</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">ifndef</cpp:directive> <name pos:line="195" pos:column="9">__ToolBoxTab3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="196" pos:column="9">__ToolBoxTab3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="198" pos:column="1">/* interface ToolBoxTab3 */</comment>
<comment type="block" pos:line="199" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="202" pos:column="1">EXTERN_C</name> <specifier pos:line="202" pos:column="10">const</specifier> <name pos:line="202" pos:column="16">IID</name></type> <name pos:line="202" pos:column="20">IID_ToolBoxTab3</name></decl>;</decl_stmt>

<cpp:if pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">if</cpp:directive> <expr><call><name pos:line="204" pos:column="5">defined</name><argument_list pos:line="204" pos:column="12">(<argument><expr><name pos:line="204" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="204" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="204" pos:column="29">!</op:operator><call><name pos:line="204" pos:column="30">defined</name><argument_list pos:line="204" pos:column="37">(<argument><expr><name pos:line="204" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="206" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="206" pos:column="19">(<argument pos:line="206" pos:column="20">"09D8476F-E6BF-46fb-A0A9-61C331B90F06"</argument>)</argument_list></macro>
    <label><name pos:line="207" pos:column="5">ToolBoxTab3</name> :</label> <expr_stmt><expr pos:line="207" pos:column="19">public <name pos:line="207" pos:column="26">ToolBoxTab2</name>
    <block pos:line="208" pos:column="5">{
    <expr pos:line="209" pos:column="5">public<op:operator pos:line="209" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="210" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="210" pos:column="81">HRESULT</name> <name pos:line="210" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="210" pos:column="107">get_Expanded</name><argument_list pos:line="210" pos:column="119">( 
            <comment type="block" pos:line="211" pos:column="13">/* [retval][out] */</comment> <argument pos:line="211" pos:column="33">__RPC__out VARIANT_BOOL *pfExpanded</argument>)</argument_list></macro> <op:operator pos:line="211" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="211" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="213" pos:column="9">virtual <comment type="block" pos:line="213" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="213" pos:column="81">HRESULT</name> <name pos:line="213" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="213" pos:column="107">put_Expanded</name><argument_list pos:line="213" pos:column="119">( 
            <comment type="block" pos:line="214" pos:column="13">/* [in] */</comment> <argument pos:line="214" pos:column="24">VARIANT_BOOL fExpanded</argument>)</argument_list></macro> <op:operator pos:line="214" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="214" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="218" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="220" pos:column="5">typedef <type><struct pos:line="220" pos:column="13">struct <name pos:line="220" pos:column="20">ToolBoxTab3Vtbl</name>
    <block pos:line="221" pos:column="5">{<public type="default" pos:line="221" pos:column="6">
        <decl_stmt><decl><type><name pos:line="222" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="224" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="224" pos:column="46">HRESULT</name></type> ( <name pos:line="224" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="224" pos:column="74">*</type:modifier><name pos:line="224" pos:column="75">QueryInterface</name> )<parameter_list pos:line="224" pos:column="91">( 
            <param><decl><type><name pos:line="225" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="225" pos:column="25">*</type:modifier></type> <name pos:line="225" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="226" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="226" pos:column="47">struct <name pos:line="226" pos:column="54">GUID</name> <type:modifier pos:line="226" pos:column="59">*</type:modifier></type><name pos:line="226" pos:column="60">riid</name></decl><op:operator pos:line="226" pos:column="64">,</op:operator>
            <comment type="block" pos:line="227" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="227" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="227" pos:column="59">void</name> <type:modifier pos:line="227" pos:column="64">*</type:modifier><type:modifier pos:line="227" pos:column="65">*</type:modifier><name pos:line="227" pos:column="66">ppvObj</name><op:operator pos:line="227" pos:column="72">,</op:operator>
            <comment type="block" pos:line="228" pos:column="13">/* [retval][out] */</comment> <name pos:line="228" pos:column="33">__RPC__out</name> <name pos:line="228" pos:column="44">void</name> <type:modifier pos:line="228" pos:column="49">*</type:modifier><name pos:line="228" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="230" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="230" pos:column="46">HRESULT</name></type> ( <name pos:line="230" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="230" pos:column="74">*</type:modifier><name pos:line="230" pos:column="75">AddRef</name> )<parameter_list pos:line="230" pos:column="83">( 
            <param><decl><type><name pos:line="231" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="231" pos:column="25">*</type:modifier></type> <name pos:line="231" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="232" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="232" pos:column="33">__RPC__out</name> <name pos:line="232" pos:column="44">unsigned</name> <name pos:line="232" pos:column="53">long</name> <type:modifier pos:line="232" pos:column="58">*</type:modifier></type><name pos:line="232" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="234" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="234" pos:column="46">HRESULT</name></type> ( <name pos:line="234" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="234" pos:column="74">*</type:modifier><name pos:line="234" pos:column="75">Release</name> )<parameter_list pos:line="234" pos:column="84">( 
            <param><decl><type><name pos:line="235" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="235" pos:column="25">*</type:modifier></type> <name pos:line="235" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="236" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="236" pos:column="33">__RPC__out</name> <name pos:line="236" pos:column="44">unsigned</name> <name pos:line="236" pos:column="53">long</name> <type:modifier pos:line="236" pos:column="58">*</type:modifier></type><name pos:line="236" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="238" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="238" pos:column="46">HRESULT</name></type> ( <name pos:line="238" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="238" pos:column="74">*</type:modifier><name pos:line="238" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="238" pos:column="93">( 
            <param><decl><type><name pos:line="239" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="239" pos:column="25">*</type:modifier></type> <name pos:line="239" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="240" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="240" pos:column="38">__RPC__out</name> <name pos:line="240" pos:column="49">unsigned</name> <name pos:line="240" pos:column="58">UINT</name> <type:modifier pos:line="240" pos:column="63">*</type:modifier></type><name pos:line="240" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="241" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="241" pos:column="33">__RPC__out</name> <name pos:line="241" pos:column="44">void</name> <type:modifier pos:line="241" pos:column="49">*</type:modifier></type><name pos:line="241" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="243" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="243" pos:column="46">HRESULT</name></type> ( <name pos:line="243" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="243" pos:column="74">*</type:modifier><name pos:line="243" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="243" pos:column="88">( 
            <param><decl><type><name pos:line="244" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="244" pos:column="25">*</type:modifier></type> <name pos:line="244" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="245" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="245" pos:column="37">unsigned</name> <name pos:line="245" pos:column="46">UINT</name></type> <name pos:line="245" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="246" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="246" pos:column="37">unsigned</name> <name pos:line="246" pos:column="46">long</name></type> <name pos:line="246" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="247" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="247" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="247" pos:column="59">void</name> <type:modifier pos:line="247" pos:column="64">*</type:modifier><type:modifier pos:line="247" pos:column="65">*</type:modifier></type><name pos:line="247" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="248" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="248" pos:column="33">__RPC__out</name> <name pos:line="248" pos:column="44">void</name> <type:modifier pos:line="248" pos:column="49">*</type:modifier></type><name pos:line="248" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="250" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="250" pos:column="46">HRESULT</name> <argument_list pos:line="250" pos:column="54">( <argument pos:line="250" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="250" pos:column="90">(</op:operator> 
            <name pos:line="251" pos:column="13">ToolBoxTab3</name> <op:operator pos:line="251" pos:column="25">*</op:operator> <name pos:line="251" pos:column="27">This</name><op:operator pos:line="251" pos:column="31">,</op:operator>
            <comment type="block" pos:line="252" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="252" pos:column="37">__RPC__in</name> struct <name pos:line="252" pos:column="54">GUID</name> <op:operator pos:line="252" pos:column="59">*</op:operator><name pos:line="252" pos:column="60">riid</name><op:operator pos:line="252" pos:column="64">,</op:operator>
            <comment type="block" pos:line="253" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="253" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="253" pos:column="57">signed</name> <name pos:line="253" pos:column="64">char</name> <op:operator pos:line="253" pos:column="69">*</op:operator><op:operator pos:line="253" pos:column="70">*</op:operator><name pos:line="253" pos:column="71">rgszNames</name><op:operator pos:line="253" pos:column="80">,</op:operator>
            <comment type="block" pos:line="254" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="254" pos:column="37">unsigned</name> <name pos:line="254" pos:column="46">UINT</name> <name pos:line="254" pos:column="51">cNames</name><op:operator pos:line="254" pos:column="57">,</op:operator>
            <comment type="block" pos:line="255" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="255" pos:column="37">unsigned</name> <name pos:line="255" pos:column="46">long</name> <name pos:line="255" pos:column="51">lcid</name><op:operator pos:line="255" pos:column="55">,</op:operator>
            <comment type="block" pos:line="256" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="256" pos:column="38">__RPC__out</name> <name pos:line="256" pos:column="49">signed</name> <name pos:line="256" pos:column="56">long</name> <op:operator pos:line="256" pos:column="61">*</op:operator><name pos:line="256" pos:column="62">rgdispid</name><op:operator pos:line="256" pos:column="70">,</op:operator>
            <comment type="block" pos:line="257" pos:column="13">/* [retval][out] */</comment> <name pos:line="257" pos:column="33">__RPC__out</name> <name pos:line="257" pos:column="44">void</name> <op:operator pos:line="257" pos:column="49">*</op:operator><name pos:line="257" pos:column="50">retval</name><op:operator pos:line="257" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="259" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="259" pos:column="46">HRESULT</name> <argument_list pos:line="259" pos:column="54">( <argument pos:line="259" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="259" pos:column="83">(</op:operator> 
            <name pos:line="260" pos:column="13">ToolBoxTab3</name> <op:operator pos:line="260" pos:column="25">*</op:operator> <name pos:line="260" pos:column="27">This</name><op:operator pos:line="260" pos:column="31">,</op:operator>
            <comment type="block" pos:line="261" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="261" pos:column="37">signed</name> <name pos:line="261" pos:column="44">long</name> <name pos:line="261" pos:column="49">dispidMember</name><op:operator pos:line="261" pos:column="61">,</op:operator>
            <comment type="block" pos:line="262" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="262" pos:column="37">__RPC__in</name> struct <name pos:line="262" pos:column="54">GUID</name> <op:operator pos:line="262" pos:column="59">*</op:operator><name pos:line="262" pos:column="60">riid</name><op:operator pos:line="262" pos:column="64">,</op:operator>
            <comment type="block" pos:line="263" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="263" pos:column="37">unsigned</name> <name pos:line="263" pos:column="46">long</name> <name pos:line="263" pos:column="51">lcid</name><op:operator pos:line="263" pos:column="55">,</op:operator>
            <comment type="block" pos:line="264" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="264" pos:column="37">unsigned</name> <name pos:line="264" pos:column="46">short</name> <name pos:line="264" pos:column="52">wFlags</name><op:operator pos:line="264" pos:column="58">,</op:operator>
            <comment type="block" pos:line="265" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="265" pos:column="37">__RPC__in</name> struct <name pos:line="265" pos:column="54">DISPPARAMS</name> <op:operator pos:line="265" pos:column="65">*</op:operator><name pos:line="265" pos:column="66">pdispparams</name><op:operator pos:line="265" pos:column="77">,</op:operator>
            <comment type="block" pos:line="266" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="266" pos:column="38">__RPC__out</name> <name pos:line="266" pos:column="49">VARIANT</name> <op:operator pos:line="266" pos:column="57">*</op:operator><name pos:line="266" pos:column="58">pvarResult</name><op:operator pos:line="266" pos:column="68">,</op:operator>
            <comment type="block" pos:line="267" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="267" pos:column="38">__RPC__out</name> struct <name pos:line="267" pos:column="56">EXCEPINFO</name> <op:operator pos:line="267" pos:column="66">*</op:operator><name pos:line="267" pos:column="67">pexcepinfo</name><op:operator pos:line="267" pos:column="77">,</op:operator>
            <comment type="block" pos:line="268" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="268" pos:column="38">__RPC__out</name> <name pos:line="268" pos:column="49">unsigned</name> <name pos:line="268" pos:column="58">UINT</name> <op:operator pos:line="268" pos:column="63">*</op:operator><name pos:line="268" pos:column="64">puArgErr</name><op:operator pos:line="268" pos:column="72">,</op:operator>
            <comment type="block" pos:line="269" pos:column="13">/* [retval][out] */</comment> <name pos:line="269" pos:column="33">__RPC__out</name> <name pos:line="269" pos:column="44">void</name> <op:operator pos:line="269" pos:column="49">*</op:operator><name pos:line="269" pos:column="50">retval</name><op:operator pos:line="269" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="271" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="271" pos:column="43">HRESULT</name></type> ( <name pos:line="271" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="271" pos:column="71">*</type:modifier><name pos:line="271" pos:column="72">get_Name</name> )<parameter_list pos:line="271" pos:column="82">( 
            <param><decl><type><name pos:line="272" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="272" pos:column="25">*</type:modifier></type> <name pos:line="272" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="273" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="273" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="273" pos:column="54">BSTR</name> <type:modifier pos:line="273" pos:column="59">*</type:modifier></type><name pos:line="273" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="275" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="275" pos:column="43">HRESULT</name></type> ( <name pos:line="275" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="275" pos:column="71">*</type:modifier><name pos:line="275" pos:column="72">put_Name</name> )<parameter_list pos:line="275" pos:column="82">( 
            <param><decl><type><name pos:line="276" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="276" pos:column="25">*</type:modifier></type> <name pos:line="276" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="277" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="277" pos:column="37">__RPC__in</name> <name pos:line="277" pos:column="47">BSTR</name></type> <name pos:line="277" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="278" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="278" pos:column="33">__RPC__out</name> <name pos:line="278" pos:column="44">void</name> <type:modifier pos:line="278" pos:column="49">*</type:modifier></type><name pos:line="278" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="280" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="280" pos:column="43">HRESULT</name></type> ( <name pos:line="280" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="280" pos:column="71">*</type:modifier><name pos:line="280" pos:column="72">get_Collection</name> )<parameter_list pos:line="280" pos:column="88">( 
            <param><decl><type><name pos:line="281" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="281" pos:column="25">*</type:modifier></type> <name pos:line="281" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="282" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="282" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="282" pos:column="54">ToolBoxTabs</name> <type:modifier pos:line="282" pos:column="66">*</type:modifier><type:modifier pos:line="282" pos:column="67">*</type:modifier></type><name pos:line="282" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="284" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="284" pos:column="43">HRESULT</name></type> ( <name pos:line="284" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="284" pos:column="71">*</type:modifier><name pos:line="284" pos:column="72">get_DTE</name> )<parameter_list pos:line="284" pos:column="81">( 
            <param><decl><type><name pos:line="285" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="285" pos:column="25">*</type:modifier></type> <name pos:line="285" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="286" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="286" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="286" pos:column="54">*</type:modifier><type:modifier pos:line="286" pos:column="55">*</type:modifier></type><name pos:line="286" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="288" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="288" pos:column="34">HRESULT</name></type> ( <name pos:line="288" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="288" pos:column="62">*</type:modifier><name pos:line="288" pos:column="63">Activate</name> )<parameter_list pos:line="288" pos:column="73">( 
            <param><decl><type><name pos:line="289" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="289" pos:column="25">*</type:modifier></type> <name pos:line="289" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="290" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="290" pos:column="33">__RPC__out</name> <name pos:line="290" pos:column="44">void</name> <type:modifier pos:line="290" pos:column="49">*</type:modifier></type><name pos:line="290" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="292" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="292" pos:column="34">HRESULT</name></type> ( <name pos:line="292" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="292" pos:column="62">*</type:modifier><name pos:line="292" pos:column="63">Delete</name> )<parameter_list pos:line="292" pos:column="71">( 
            <param><decl><type><name pos:line="293" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="293" pos:column="25">*</type:modifier></type> <name pos:line="293" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="294" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="294" pos:column="33">__RPC__out</name> <name pos:line="294" pos:column="44">void</name> <type:modifier pos:line="294" pos:column="49">*</type:modifier></type><name pos:line="294" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="296" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="296" pos:column="43">HRESULT</name></type> ( <name pos:line="296" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="296" pos:column="71">*</type:modifier><name pos:line="296" pos:column="72">get_ToolBoxItems</name> )<parameter_list pos:line="296" pos:column="90">( 
            <param><decl><type><name pos:line="297" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="297" pos:column="25">*</type:modifier></type> <name pos:line="297" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="298" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="298" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="298" pos:column="54">ToolBoxItems</name> <type:modifier pos:line="298" pos:column="67">*</type:modifier><type:modifier pos:line="298" pos:column="68">*</type:modifier></type><name pos:line="298" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="300" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="300" pos:column="43">HRESULT</name></type> ( <name pos:line="300" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="300" pos:column="71">*</type:modifier><name pos:line="300" pos:column="72">get_ListView</name> )<parameter_list pos:line="300" pos:column="86">( 
            <param><decl><type><name pos:line="301" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="301" pos:column="25">*</type:modifier></type> <name pos:line="301" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="302" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="302" pos:column="33">__RPC__out</name> <name pos:line="302" pos:column="44">BOOLEAN</name> <type:modifier pos:line="302" pos:column="52">*</type:modifier></type><name pos:line="302" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="304" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="304" pos:column="43">HRESULT</name></type> ( <name pos:line="304" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="304" pos:column="71">*</type:modifier><name pos:line="304" pos:column="72">put_ListView</name> )<parameter_list pos:line="304" pos:column="86">( 
            <param><decl><type><name pos:line="305" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="305" pos:column="25">*</type:modifier></type> <name pos:line="305" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="306" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="306" pos:column="37">BOOLEAN</name></type> <name pos:line="306" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="307" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="307" pos:column="33">__RPC__out</name> <name pos:line="307" pos:column="44">void</name> <type:modifier pos:line="307" pos:column="49">*</type:modifier></type><name pos:line="307" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="309" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="309" pos:column="43">HRESULT</name></type> ( <name pos:line="309" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="309" pos:column="71">*</type:modifier><name pos:line="309" pos:column="72">get_UniqueID</name> )<parameter_list pos:line="309" pos:column="86">( 
            <param><decl><type><name pos:line="310" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="310" pos:column="25">*</type:modifier></type> <name pos:line="310" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="311" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="311" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="311" pos:column="54">BSTR</name> <type:modifier pos:line="311" pos:column="59">*</type:modifier></type><name pos:line="311" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="313" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="313" pos:column="43">HRESULT</name></type> ( <name pos:line="313" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="313" pos:column="71">*</type:modifier><name pos:line="313" pos:column="72">put_UniqueID</name> )<parameter_list pos:line="313" pos:column="86">( 
            <param><decl><type><name pos:line="314" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="314" pos:column="25">*</type:modifier></type> <name pos:line="314" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="315" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="315" pos:column="37">__RPC__in</name> <name pos:line="315" pos:column="47">BSTR</name></type> <name pos:line="315" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="316" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="316" pos:column="33">__RPC__out</name> <name pos:line="316" pos:column="44">void</name> <type:modifier pos:line="316" pos:column="49">*</type:modifier></type><name pos:line="316" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="318" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="318" pos:column="73">HRESULT</name></type> ( <name pos:line="318" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="318" pos:column="101">*</type:modifier><name pos:line="318" pos:column="102">get_Expanded</name> )<parameter_list pos:line="318" pos:column="116">( 
            <param><decl><type><name pos:line="319" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="319" pos:column="25">*</type:modifier></type> <name pos:line="319" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="320" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="320" pos:column="33">__RPC__out</name> <name pos:line="320" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="320" pos:column="57">*</type:modifier></type><name pos:line="320" pos:column="58">pfExpanded</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="322" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="322" pos:column="73">HRESULT</name></type> ( <name pos:line="322" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="322" pos:column="101">*</type:modifier><name pos:line="322" pos:column="102">put_Expanded</name> )<parameter_list pos:line="322" pos:column="116">( 
            <param><decl><type><name pos:line="323" pos:column="13">ToolBoxTab3</name> <type:modifier pos:line="323" pos:column="25">*</type:modifier></type> <name pos:line="323" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="324" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="324" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="324" pos:column="37">fExpanded</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="326" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="327" pos:column="7">ToolBoxTab3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="329" pos:column="5">interface</name></type> <name pos:line="329" pos:column="15">ToolBoxTab3</name>
    <argument_list pos:line="330" pos:column="5">{
        <argument><expr><name pos:line="331" pos:column="9">CONST_VTBL</name> struct <name pos:line="331" pos:column="27">ToolBoxTab3Vtbl</name> <op:operator pos:line="331" pos:column="43">*</op:operator><name pos:line="331" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">ifdef</cpp:directive> <name pos:line="336" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="339" pos:column="1">#<cpp:directive pos:line="339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="339" pos:column="9">ToolBoxTab3_QueryInterface</name><parameter_list pos:line="339" pos:column="35">(<param><type><name pos:line="339" pos:column="36">This</name></type></param>,<param><type><name pos:line="339" pos:column="41">riid</name></type></param>,<param><type><name pos:line="339" pos:column="46">ppvObj</name></type></param>,<param><type><name pos:line="339" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="340" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="342" pos:column="9">ToolBoxTab3_AddRef</name><parameter_list pos:line="342" pos:column="27">(<param><type><name pos:line="342" pos:column="28">This</name></type></param>,<param><type><name pos:line="342" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="343" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="345" pos:column="1">#<cpp:directive pos:line="345" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="345" pos:column="9">ToolBoxTab3_Release</name><parameter_list pos:line="345" pos:column="28">(<param><type><name pos:line="345" pos:column="29">This</name></type></param>,<param><type><name pos:line="345" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="346" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="348" pos:column="9">ToolBoxTab3_GetTypeInfoCount</name><parameter_list pos:line="348" pos:column="37">(<param><type><name pos:line="348" pos:column="38">This</name></type></param>,<param><type><name pos:line="348" pos:column="43">pctinfo</name></type></param>,<param><type><name pos:line="348" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="349" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="351" pos:column="1">#<cpp:directive pos:line="351" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="351" pos:column="9">ToolBoxTab3_GetTypeInfo</name><parameter_list pos:line="351" pos:column="32">(<param><type><name pos:line="351" pos:column="33">This</name></type></param>,<param><type><name pos:line="351" pos:column="38">itinfo</name></type></param>,<param><type><name pos:line="351" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="351" pos:column="50">pptinfo</name></type></param>,<param><type><name pos:line="351" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="352" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="354" pos:column="1">#<cpp:directive pos:line="354" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="354" pos:column="9">ToolBoxTab3_GetIDsOfNames</name><parameter_list pos:line="354" pos:column="34">(<param><type><name pos:line="354" pos:column="35">This</name></type></param>,<param><type><name pos:line="354" pos:column="40">riid</name></type></param>,<param><type><name pos:line="354" pos:column="45">rgszNames</name></type></param>,<param><type><name pos:line="354" pos:column="55">cNames</name></type></param>,<param><type><name pos:line="354" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="354" pos:column="67">rgdispid</name></type></param>,<param><type><name pos:line="354" pos:column="76">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="355" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="357" pos:column="1">#<cpp:directive pos:line="357" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="357" pos:column="9">ToolBoxTab3_Invoke</name><parameter_list pos:line="357" pos:column="27">(<param><type><name pos:line="357" pos:column="28">This</name></type></param>,<param><type><name pos:line="357" pos:column="33">dispidMember</name></type></param>,<param><type><name pos:line="357" pos:column="46">riid</name></type></param>,<param><type><name pos:line="357" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="357" pos:column="56">wFlags</name></type></param>,<param><type><name pos:line="357" pos:column="63">pdispparams</name></type></param>,<param><type><name pos:line="357" pos:column="75">pvarResult</name></type></param>,<param><type><name pos:line="357" pos:column="86">pexcepinfo</name></type></param>,<param><type><name pos:line="357" pos:column="97">puArgErr</name></type></param>,<param><type><name pos:line="357" pos:column="106">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="358" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="360" pos:column="9">ToolBoxTab3_get_Name</name><parameter_list pos:line="360" pos:column="29">(<param><type><name pos:line="360" pos:column="30">This</name></type></param>,<param><type><name pos:line="360" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="361" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="363" pos:column="9">ToolBoxTab3_put_Name</name><parameter_list pos:line="363" pos:column="29">(<param><type><name pos:line="363" pos:column="30">This</name></type></param>,<param><type><name pos:line="363" pos:column="35">noname</name></type></param>,<param><type><name pos:line="363" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="364" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="366" pos:column="1">#<cpp:directive pos:line="366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="366" pos:column="9">ToolBoxTab3_get_Collection</name><parameter_list pos:line="366" pos:column="35">(<param><type><name pos:line="366" pos:column="36">This</name></type></param>,<param><type><name pos:line="366" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="367" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="369" pos:column="1">#<cpp:directive pos:line="369" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="369" pos:column="9">ToolBoxTab3_get_DTE</name><parameter_list pos:line="369" pos:column="28">(<param><type><name pos:line="369" pos:column="29">This</name></type></param>,<param><type><name pos:line="369" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="370" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="372" pos:column="1">#<cpp:directive pos:line="372" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="372" pos:column="9">ToolBoxTab3_Activate</name><parameter_list pos:line="372" pos:column="29">(<param><type><name pos:line="372" pos:column="30">This</name></type></param>,<param><type><name pos:line="372" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="373" pos:column="5">( (This)-&gt;lpVtbl -&gt; Activate(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="375" pos:column="1">#<cpp:directive pos:line="375" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="375" pos:column="9">ToolBoxTab3_Delete</name><parameter_list pos:line="375" pos:column="27">(<param><type><name pos:line="375" pos:column="28">This</name></type></param>,<param><type><name pos:line="375" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="376" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="378" pos:column="9">ToolBoxTab3_get_ToolBoxItems</name><parameter_list pos:line="378" pos:column="37">(<param><type><name pos:line="378" pos:column="38">This</name></type></param>,<param><type><name pos:line="378" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="379" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ToolBoxItems(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="381" pos:column="1">#<cpp:directive pos:line="381" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="381" pos:column="9">ToolBoxTab3_get_ListView</name><parameter_list pos:line="381" pos:column="33">(<param><type><name pos:line="381" pos:column="34">This</name></type></param>,<param><type><name pos:line="381" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="382" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ListView(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="384" pos:column="9">ToolBoxTab3_put_ListView</name><parameter_list pos:line="384" pos:column="33">(<param><type><name pos:line="384" pos:column="34">This</name></type></param>,<param><type><name pos:line="384" pos:column="39">noname</name></type></param>,<param><type><name pos:line="384" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="385" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ListView(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="387" pos:column="1">#<cpp:directive pos:line="387" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="387" pos:column="9">ToolBoxTab3_get_UniqueID</name><parameter_list pos:line="387" pos:column="33">(<param><type><name pos:line="387" pos:column="34">This</name></type></param>,<param><type><name pos:line="387" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="388" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UniqueID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="390" pos:column="1">#<cpp:directive pos:line="390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="390" pos:column="9">ToolBoxTab3_put_UniqueID</name><parameter_list pos:line="390" pos:column="33">(<param><type><name pos:line="390" pos:column="34">This</name></type></param>,<param><type><name pos:line="390" pos:column="39">noname</name></type></param>,<param><type><name pos:line="390" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="391" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_UniqueID(This,noname,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="394" pos:column="1">#<cpp:directive pos:line="394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="394" pos:column="9">ToolBoxTab3_get_Expanded</name><parameter_list pos:line="394" pos:column="33">(<param><type><name pos:line="394" pos:column="34">This</name></type></param>,<param><type><name pos:line="394" pos:column="39">pfExpanded</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="395" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Expanded(This,pfExpanded) )</cpp:value></cpp:define> 

<cpp:define pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="397" pos:column="9">ToolBoxTab3_put_Expanded</name><parameter_list pos:line="397" pos:column="33">(<param><type><name pos:line="397" pos:column="34">This</name></type></param>,<param><type><name pos:line="397" pos:column="39">fExpanded</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="398" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Expanded(This,fExpanded) )</cpp:value></cpp:define> 

<cpp:endif pos:line="400" pos:column="1">#<cpp:directive pos:line="400" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="400" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="403" pos:column="1">#<cpp:directive pos:line="403" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="403" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="408" pos:column="9">/* __ToolBoxTab3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">ifndef</cpp:directive> <name pos:line="411" pos:column="9">__HTMLWindow3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="412" pos:column="9">__HTMLWindow3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="414" pos:column="1">/* interface HTMLWindow3 */</comment>
<comment type="block" pos:line="415" pos:column="1">/* [uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="418" pos:column="1">EXTERN_C</name> <specifier pos:line="418" pos:column="10">const</specifier> <name pos:line="418" pos:column="16">IID</name></type> <name pos:line="418" pos:column="20">IID_HTMLWindow3</name></decl>;</decl_stmt>

<cpp:if pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">if</cpp:directive> <expr><call><name pos:line="420" pos:column="5">defined</name><argument_list pos:line="420" pos:column="12">(<argument><expr><name pos:line="420" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="420" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="420" pos:column="29">!</op:operator><call><name pos:line="420" pos:column="30">defined</name><argument_list pos:line="420" pos:column="37">(<argument><expr><name pos:line="420" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="422" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="422" pos:column="19">(<argument pos:line="422" pos:column="20">"BAD0A3DD-8109-4684-B806-A5282267BFE4"</argument>)</argument_list></macro>
    <label><name pos:line="423" pos:column="5">HTMLWindow3</name> :</label> <expr_stmt><expr pos:line="423" pos:column="19">public <name pos:line="423" pos:column="26">IDispatch</name>
    <block pos:line="424" pos:column="5">{
    <expr pos:line="425" pos:column="5">public<op:operator pos:line="425" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="426" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="426" pos:column="81">HRESULT</name> <name pos:line="426" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="426" pos:column="107">get_CurrentView</name><argument_list pos:line="426" pos:column="122">( 
            <comment type="block" pos:line="427" pos:column="13">/* [retval][out] */</comment> <argument pos:line="427" pos:column="33">__RPC__out vsHTMLViews *pView</argument>)</argument_list></macro> <op:operator pos:line="427" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="427" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="429" pos:column="9">virtual <comment type="block" pos:line="429" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="429" pos:column="81">HRESULT</name> <name pos:line="429" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="429" pos:column="107">put_CurrentView</name><argument_list pos:line="429" pos:column="122">( 
            <comment type="block" pos:line="430" pos:column="13">/* [in] */</comment> <argument pos:line="430" pos:column="24">vsHTMLViews View</argument>)</argument_list></macro> <op:operator pos:line="430" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="430" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="432" pos:column="9">virtual <comment type="block" pos:line="432" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="432" pos:column="81">HRESULT</name> <name pos:line="432" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="432" pos:column="107">get_CurrentPane</name><argument_list pos:line="432" pos:column="122">( 
            <comment type="block" pos:line="433" pos:column="13">/* [retval][out] */</comment> <argument pos:line="433" pos:column="33">__RPC__out vsHTMLPanes *pPane</argument>)</argument_list></macro> <op:operator pos:line="433" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="433" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="435" pos:column="9">virtual <comment type="block" pos:line="435" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="435" pos:column="81">HRESULT</name> <name pos:line="435" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="435" pos:column="107">put_CurrentPane</name><argument_list pos:line="435" pos:column="122">( 
            <comment type="block" pos:line="436" pos:column="13">/* [in] */</comment> <argument pos:line="436" pos:column="24">vsHTMLPanes Pane</argument>)</argument_list></macro> <op:operator pos:line="436" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="436" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="438" pos:column="9">virtual <comment type="block" pos:line="438" pos:column="17">/* [id] */</comment> <name pos:line="438" pos:column="28">HRESULT</name> <name pos:line="438" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="438" pos:column="54">WaitForBackgroundProcessingComplete</name><argument_list pos:line="438" pos:column="89">( 
            <comment type="block" pos:line="439" pos:column="13">/* [in] */</comment> <argument pos:line="439" pos:column="24">vsHTMLBackgroundTasks Task</argument>)</argument_list></macro> <op:operator pos:line="439" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="439" pos:column="54">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="443" pos:column="1">#<cpp:directive pos:line="443" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="443" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="445" pos:column="5">typedef <type><struct pos:line="445" pos:column="13">struct <name pos:line="445" pos:column="20">HTMLWindow3Vtbl</name>
    <block pos:line="446" pos:column="5">{<public type="default" pos:line="446" pos:column="6">
        <function_decl><type><name pos:line="447" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="449" pos:column="9">HRESULT</name></type> ( <name pos:line="449" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="449" pos:column="37">*</type:modifier><name pos:line="449" pos:column="38">QueryInterface</name> )<parameter_list pos:line="449" pos:column="54">( 
            <param><decl><type><name pos:line="450" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="450" pos:column="25">*</type:modifier></type> <name pos:line="450" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="451" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="451" pos:column="24">__RPC__in</name> <name pos:line="451" pos:column="34">REFIID</name></type> <name pos:line="451" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="452" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="453" pos:column="13">__RPC__deref_out</name>  <name pos:line="453" pos:column="31">void</name> <type:modifier pos:line="453" pos:column="36">*</type:modifier><type:modifier pos:line="453" pos:column="37">*</type:modifier></type><name pos:line="453" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="455" pos:column="9">ULONG</name></type> ( <name pos:line="455" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="455" pos:column="35">*</type:modifier><name pos:line="455" pos:column="36">AddRef</name> )<parameter_list pos:line="455" pos:column="44">( 
            <param><decl><type><name pos:line="456" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="456" pos:column="25">*</type:modifier></type> <name pos:line="456" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="458" pos:column="9">ULONG</name></type> ( <name pos:line="458" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="458" pos:column="35">*</type:modifier><name pos:line="458" pos:column="36">Release</name> )<parameter_list pos:line="458" pos:column="45">( 
            <param><decl><type><name pos:line="459" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="459" pos:column="25">*</type:modifier></type> <name pos:line="459" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="461" pos:column="9">HRESULT</name></type> ( <name pos:line="461" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="461" pos:column="37">*</type:modifier><name pos:line="461" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="461" pos:column="56">( 
            <param><decl><type><name pos:line="462" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="462" pos:column="25">*</type:modifier></type> <name pos:line="462" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="463" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="463" pos:column="25">__RPC__out</name> <name pos:line="463" pos:column="36">UINT</name> <type:modifier pos:line="463" pos:column="41">*</type:modifier></type><name pos:line="463" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="465" pos:column="9">HRESULT</name></type> ( <name pos:line="465" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="465" pos:column="37">*</type:modifier><name pos:line="465" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="465" pos:column="51">( 
            <param><decl><type><name pos:line="466" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="466" pos:column="25">*</type:modifier></type> <name pos:line="466" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="467" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="467" pos:column="24">UINT</name></type> <name pos:line="467" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="468" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="468" pos:column="24">LCID</name></type> <name pos:line="468" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="469" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="469" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="469" pos:column="46">ITypeInfo</name> <type:modifier pos:line="469" pos:column="56">*</type:modifier><type:modifier pos:line="469" pos:column="57">*</type:modifier></type><name pos:line="469" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="471" pos:column="9">HRESULT</name> <argument_list pos:line="471" pos:column="17">( <argument pos:line="471" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="471" pos:column="53">(</op:operator> 
            <name pos:line="472" pos:column="13">HTMLWindow3</name> <op:operator pos:line="472" pos:column="25">*</op:operator> <name pos:line="472" pos:column="27">This</name><op:operator pos:line="472" pos:column="31">,</op:operator>
            <comment type="block" pos:line="473" pos:column="13">/* [in] */</comment> <name pos:line="473" pos:column="24">__RPC__in</name> <name pos:line="473" pos:column="34">REFIID</name> <name pos:line="473" pos:column="41">riid</name><op:operator pos:line="473" pos:column="45">,</op:operator>
            <comment type="block" pos:line="474" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="474" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="474" pos:column="54">(<argument pos:line="474" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="474" pos:column="63">LPOLESTR</name> <op:operator pos:line="474" pos:column="72">*</op:operator><name pos:line="474" pos:column="73">rgszNames</name><op:operator pos:line="474" pos:column="82">,</op:operator>
            <comment type="block" pos:line="475" pos:column="13">/* [range][in] */</comment> <name pos:line="475" pos:column="31">UINT</name> <name pos:line="475" pos:column="36">cNames</name><op:operator pos:line="475" pos:column="42">,</op:operator>
            <comment type="block" pos:line="476" pos:column="13">/* [in] */</comment> <name pos:line="476" pos:column="24">LCID</name> <name pos:line="476" pos:column="29">lcid</name><op:operator pos:line="476" pos:column="33">,</op:operator>
            <comment type="block" pos:line="477" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="477" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="477" pos:column="56">(<argument pos:line="477" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="477" pos:column="65">DISPID</name> <op:operator pos:line="477" pos:column="72">*</op:operator><name pos:line="477" pos:column="73">rgDispId</name><op:operator pos:line="477" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="479" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="479" pos:column="23">HRESULT</name></type> ( <name pos:line="479" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="479" pos:column="51">*</type:modifier><name pos:line="479" pos:column="52">Invoke</name> )<parameter_list pos:line="479" pos:column="60">( 
            <param><decl><type><name pos:line="480" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="480" pos:column="25">*</type:modifier></type> <name pos:line="480" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="481" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="481" pos:column="24">DISPID</name></type> <name pos:line="481" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="482" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="482" pos:column="24">REFIID</name></type> <name pos:line="482" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="483" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="483" pos:column="24">LCID</name></type> <name pos:line="483" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="484" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="484" pos:column="24">WORD</name></type> <name pos:line="484" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="485" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="485" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="485" pos:column="40">*</type:modifier></type><name pos:line="485" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="486" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="486" pos:column="25">VARIANT</name> <type:modifier pos:line="486" pos:column="33">*</type:modifier></type><name pos:line="486" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="487" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="487" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="487" pos:column="35">*</type:modifier></type><name pos:line="487" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="488" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="488" pos:column="25">UINT</name> <type:modifier pos:line="488" pos:column="30">*</type:modifier></type><name pos:line="488" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="490" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="490" pos:column="73">HRESULT</name></type> ( <name pos:line="490" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="490" pos:column="101">*</type:modifier><name pos:line="490" pos:column="102">get_CurrentView</name> )<parameter_list pos:line="490" pos:column="119">( 
            <param><decl><type><name pos:line="491" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="491" pos:column="25">*</type:modifier></type> <name pos:line="491" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="492" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="492" pos:column="33">__RPC__out</name> <name pos:line="492" pos:column="44">vsHTMLViews</name> <type:modifier pos:line="492" pos:column="56">*</type:modifier></type><name pos:line="492" pos:column="57">pView</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="494" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="494" pos:column="73">HRESULT</name></type> ( <name pos:line="494" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="494" pos:column="101">*</type:modifier><name pos:line="494" pos:column="102">put_CurrentView</name> )<parameter_list pos:line="494" pos:column="119">( 
            <param><decl><type><name pos:line="495" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="495" pos:column="25">*</type:modifier></type> <name pos:line="495" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="496" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="496" pos:column="24">vsHTMLViews</name></type> <name pos:line="496" pos:column="36">View</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="498" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="498" pos:column="73">HRESULT</name></type> ( <name pos:line="498" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="498" pos:column="101">*</type:modifier><name pos:line="498" pos:column="102">get_CurrentPane</name> )<parameter_list pos:line="498" pos:column="119">( 
            <param><decl><type><name pos:line="499" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="499" pos:column="25">*</type:modifier></type> <name pos:line="499" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="500" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="500" pos:column="33">__RPC__out</name> <name pos:line="500" pos:column="44">vsHTMLPanes</name> <type:modifier pos:line="500" pos:column="56">*</type:modifier></type><name pos:line="500" pos:column="57">pPane</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="502" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="502" pos:column="73">HRESULT</name></type> ( <name pos:line="502" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="502" pos:column="101">*</type:modifier><name pos:line="502" pos:column="102">put_CurrentPane</name> )<parameter_list pos:line="502" pos:column="119">( 
            <param><decl><type><name pos:line="503" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="503" pos:column="25">*</type:modifier></type> <name pos:line="503" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="504" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="504" pos:column="24">vsHTMLPanes</name></type> <name pos:line="504" pos:column="36">Pane</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="506" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="506" pos:column="20">HRESULT</name></type> ( <name pos:line="506" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="506" pos:column="48">*</type:modifier><name pos:line="506" pos:column="49">WaitForBackgroundProcessingComplete</name> )<parameter_list pos:line="506" pos:column="86">( 
            <param><decl><type><name pos:line="507" pos:column="13">HTMLWindow3</name> <type:modifier pos:line="507" pos:column="25">*</type:modifier></type> <name pos:line="507" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="508" pos:column="24">vsHTMLBackgroundTasks</name></type> <name pos:line="508" pos:column="46">Task</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="510" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="511" pos:column="7">HTMLWindow3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="513" pos:column="5">interface</name></type> <name pos:line="513" pos:column="15">HTMLWindow3</name>
    <argument_list pos:line="514" pos:column="5">{
        <argument><expr><name pos:line="515" pos:column="9">CONST_VTBL</name> struct <name pos:line="515" pos:column="27">HTMLWindow3Vtbl</name> <op:operator pos:line="515" pos:column="43">*</op:operator><name pos:line="515" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="520" pos:column="1">#<cpp:directive pos:line="520" pos:column="2">ifdef</cpp:directive> <name pos:line="520" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="523" pos:column="1">#<cpp:directive pos:line="523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="523" pos:column="9">HTMLWindow3_QueryInterface</name><parameter_list pos:line="523" pos:column="35">(<param><type><name pos:line="523" pos:column="36">This</name></type></param>,<param><type><name pos:line="523" pos:column="41">riid</name></type></param>,<param><type><name pos:line="523" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="524" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="526" pos:column="1">#<cpp:directive pos:line="526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="526" pos:column="9">HTMLWindow3_AddRef</name><parameter_list pos:line="526" pos:column="27">(<param><type><name pos:line="526" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="527" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="529" pos:column="1">#<cpp:directive pos:line="529" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="529" pos:column="9">HTMLWindow3_Release</name><parameter_list pos:line="529" pos:column="28">(<param><type><name pos:line="529" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="530" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="533" pos:column="9">HTMLWindow3_GetTypeInfoCount</name><parameter_list pos:line="533" pos:column="37">(<param><type><name pos:line="533" pos:column="38">This</name></type></param>,<param><type><name pos:line="533" pos:column="43">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="534" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="536" pos:column="1">#<cpp:directive pos:line="536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="536" pos:column="9">HTMLWindow3_GetTypeInfo</name><parameter_list pos:line="536" pos:column="32">(<param><type><name pos:line="536" pos:column="33">This</name></type></param>,<param><type><name pos:line="536" pos:column="38">iTInfo</name></type></param>,<param><type><name pos:line="536" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="536" pos:column="50">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="537" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="539" pos:column="1">#<cpp:directive pos:line="539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="539" pos:column="9">HTMLWindow3_GetIDsOfNames</name><parameter_list pos:line="539" pos:column="34">(<param><type><name pos:line="539" pos:column="35">This</name></type></param>,<param><type><name pos:line="539" pos:column="40">riid</name></type></param>,<param><type><name pos:line="539" pos:column="45">rgszNames</name></type></param>,<param><type><name pos:line="539" pos:column="55">cNames</name></type></param>,<param><type><name pos:line="539" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="539" pos:column="67">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="540" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="542" pos:column="1">#<cpp:directive pos:line="542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="542" pos:column="9">HTMLWindow3_Invoke</name><parameter_list pos:line="542" pos:column="27">(<param><type><name pos:line="542" pos:column="28">This</name></type></param>,<param><type><name pos:line="542" pos:column="33">dispIdMember</name></type></param>,<param><type><name pos:line="542" pos:column="46">riid</name></type></param>,<param><type><name pos:line="542" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="542" pos:column="56">wFlags</name></type></param>,<param><type><name pos:line="542" pos:column="63">pDispParams</name></type></param>,<param><type><name pos:line="542" pos:column="75">pVarResult</name></type></param>,<param><type><name pos:line="542" pos:column="86">pExcepInfo</name></type></param>,<param><type><name pos:line="542" pos:column="97">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="543" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="546" pos:column="1">#<cpp:directive pos:line="546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="546" pos:column="9">HTMLWindow3_get_CurrentView</name><parameter_list pos:line="546" pos:column="36">(<param><type><name pos:line="546" pos:column="37">This</name></type></param>,<param><type><name pos:line="546" pos:column="42">pView</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="547" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentView(This,pView) )</cpp:value></cpp:define> 

<cpp:define pos:line="549" pos:column="1">#<cpp:directive pos:line="549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="549" pos:column="9">HTMLWindow3_put_CurrentView</name><parameter_list pos:line="549" pos:column="36">(<param><type><name pos:line="549" pos:column="37">This</name></type></param>,<param><type><name pos:line="549" pos:column="42">View</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="550" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentView(This,View) )</cpp:value></cpp:define> 

<cpp:define pos:line="552" pos:column="1">#<cpp:directive pos:line="552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="552" pos:column="9">HTMLWindow3_get_CurrentPane</name><parameter_list pos:line="552" pos:column="36">(<param><type><name pos:line="552" pos:column="37">This</name></type></param>,<param><type><name pos:line="552" pos:column="42">pPane</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="553" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentPane(This,pPane) )</cpp:value></cpp:define> 

<cpp:define pos:line="555" pos:column="1">#<cpp:directive pos:line="555" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="555" pos:column="9">HTMLWindow3_put_CurrentPane</name><parameter_list pos:line="555" pos:column="36">(<param><type><name pos:line="555" pos:column="37">This</name></type></param>,<param><type><name pos:line="555" pos:column="42">Pane</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="556" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentPane(This,Pane) )</cpp:value></cpp:define> 

<cpp:define pos:line="558" pos:column="1">#<cpp:directive pos:line="558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="558" pos:column="9">HTMLWindow3_WaitForBackgroundProcessingComplete</name><parameter_list pos:line="558" pos:column="56">(<param><type><name pos:line="558" pos:column="57">This</name></type></param>,<param><type><name pos:line="558" pos:column="62">Task</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="559" pos:column="5">( (This)-&gt;lpVtbl -&gt; WaitForBackgroundProcessingComplete(This,Task) )</cpp:value></cpp:define> 

<cpp:endif pos:line="561" pos:column="1">#<cpp:directive pos:line="561" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="561" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="564" pos:column="1">#<cpp:directive pos:line="564" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="564" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="569" pos:column="1">#<cpp:directive pos:line="569" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="569" pos:column="9">/* __HTMLWindow3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="572" pos:column="1">#<cpp:directive pos:line="572" pos:column="2">ifndef</cpp:directive> <name pos:line="572" pos:column="9">__Debugger3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="573" pos:column="1">#<cpp:directive pos:line="573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="573" pos:column="9">__Debugger3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="575" pos:column="1">/* interface Debugger3 */</comment>
<comment type="block" pos:line="576" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="579" pos:column="1">EXTERN_C</name> <specifier pos:line="579" pos:column="10">const</specifier> <name pos:line="579" pos:column="16">IID</name></type> <name pos:line="579" pos:column="20">IID_Debugger3</name></decl>;</decl_stmt>

<cpp:if pos:line="581" pos:column="1">#<cpp:directive pos:line="581" pos:column="2">if</cpp:directive> <expr><call><name pos:line="581" pos:column="5">defined</name><argument_list pos:line="581" pos:column="12">(<argument><expr><name pos:line="581" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="581" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="581" pos:column="29">!</op:operator><call><name pos:line="581" pos:column="30">defined</name><argument_list pos:line="581" pos:column="37">(<argument><expr><name pos:line="581" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="583" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="583" pos:column="19">(<argument pos:line="583" pos:column="20">"87DFC8DA-67B4-4954-BB89-6A277A50BAFC"</argument>)</argument_list></macro>
    <label><name pos:line="584" pos:column="5">Debugger3</name> :</label> <expr_stmt><expr pos:line="584" pos:column="17">public <name pos:line="584" pos:column="24">Debugger2</name>
    <block pos:line="585" pos:column="5">{
    <expr pos:line="586" pos:column="5">public<op:operator pos:line="586" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="587" pos:column="17">/* [propget][id] */</comment> <name pos:line="587" pos:column="37">HRESULT</name> <name pos:line="587" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="587" pos:column="63">get_ForceContinue</name><argument_list pos:line="587" pos:column="80">( 
            <comment type="block" pos:line="588" pos:column="13">/* [retval][out] */</comment> <argument pos:line="588" pos:column="33">__RPC__out VARIANT_BOOL *ForceContinue</argument>)</argument_list></macro> <op:operator pos:line="588" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="588" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="590" pos:column="9">virtual <comment type="block" pos:line="590" pos:column="17">/* [propput][id] */</comment> <name pos:line="590" pos:column="37">HRESULT</name> <name pos:line="590" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="590" pos:column="63">put_ForceContinue</name><argument_list pos:line="590" pos:column="80">( 
            <comment type="block" pos:line="591" pos:column="13">/* [in] */</comment> <argument pos:line="591" pos:column="24">VARIANT_BOOL ForceContinue</argument>)</argument_list></macro> <op:operator pos:line="591" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="591" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="593" pos:column="9">virtual <comment type="block" pos:line="593" pos:column="17">/* [propget][id] */</comment> <name pos:line="593" pos:column="37">HRESULT</name> <name pos:line="593" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="593" pos:column="63">get_ExceptionGroups</name><argument_list pos:line="593" pos:column="82">( 
            <comment type="block" pos:line="594" pos:column="13">/* [retval][out] */</comment> <argument pos:line="594" pos:column="33">__RPC__deref_out_opt ExceptionGroups **ExceptionGroups</argument>)</argument_list></macro> <op:operator pos:line="594" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="594" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="596" pos:column="9">virtual <comment type="block" pos:line="596" pos:column="17">/* [propget][id] */</comment> <name pos:line="596" pos:column="37">HRESULT</name> <name pos:line="596" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="596" pos:column="63">get_SymbolPath</name><argument_list pos:line="596" pos:column="77">( 
            <comment type="block" pos:line="597" pos:column="13">/* [retval][out] */</comment> <argument pos:line="597" pos:column="33">__RPC__deref_out_opt BSTR *SymbolPath</argument>)</argument_list></macro> <op:operator pos:line="597" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="597" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="599" pos:column="9">virtual <comment type="block" pos:line="599" pos:column="17">/* [propget][id] */</comment> <name pos:line="599" pos:column="37">HRESULT</name> <name pos:line="599" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="599" pos:column="63">get_SymbolPathState</name><argument_list pos:line="599" pos:column="82">( 
            <comment type="block" pos:line="600" pos:column="13">/* [retval][out] */</comment> <argument pos:line="600" pos:column="33">__RPC__deref_out_opt BSTR *SymbolPathState</argument>)</argument_list></macro> <op:operator pos:line="600" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="600" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="602" pos:column="9">virtual <comment type="block" pos:line="602" pos:column="17">/* [propget][id] */</comment> <name pos:line="602" pos:column="37">HRESULT</name> <name pos:line="602" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="602" pos:column="63">get_SymbolCachePath</name><argument_list pos:line="602" pos:column="82">( 
            <comment type="block" pos:line="603" pos:column="13">/* [retval][out] */</comment> <argument pos:line="603" pos:column="33">__RPC__deref_out_opt BSTR *SymbolCachePath</argument>)</argument_list></macro> <op:operator pos:line="603" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="603" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="605" pos:column="9">virtual <comment type="block" pos:line="605" pos:column="17">/* [propget][id] */</comment> <name pos:line="605" pos:column="37">HRESULT</name> <name pos:line="605" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="605" pos:column="63">get_OnlyLoadSymbolsManually</name><argument_list pos:line="605" pos:column="90">( 
            <comment type="block" pos:line="606" pos:column="13">/* [retval][out] */</comment> <argument pos:line="606" pos:column="33">__RPC__out VARIANT_BOOL *OnlyLoadSymbolsManually</argument>)</argument_list></macro> <op:operator pos:line="606" pos:column="83">=</op:operator> <lit:literal type="number" pos:line="606" pos:column="85">0</lit:literal></expr>;
        
        <expr pos:line="608" pos:column="9">virtual <comment type="block" pos:line="608" pos:column="17">/* [id] */</comment> <name pos:line="608" pos:column="28">HRESULT</name> <name pos:line="608" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="608" pos:column="54">SetSymbolSettings</name><argument_list pos:line="608" pos:column="71">( 
            <comment type="block" pos:line="609" pos:column="13">/* [in] */</comment> <argument pos:line="609" pos:column="24">__RPC__in BSTR SymbolPath</argument>,
            <comment type="block" pos:line="610" pos:column="13">/* [in] */</comment> <argument pos:line="610" pos:column="24">__RPC__in BSTR SymbolPathState</argument>,
            <comment type="block" pos:line="611" pos:column="13">/* [in] */</comment> <argument pos:line="611" pos:column="24">__RPC__in BSTR SymbolCachePath</argument>,
            <comment type="block" pos:line="612" pos:column="13">/* [in] */</comment> <argument pos:line="612" pos:column="24">VARIANT_BOOL OnlyLoadSymbolsManually</argument>,
            <comment type="block" pos:line="613" pos:column="13">/* [in] */</comment> <argument pos:line="613" pos:column="24">VARIANT_BOOL LoadSymbolsNow</argument>)</argument_list></macro> <op:operator pos:line="613" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="613" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="617" pos:column="1">#<cpp:directive pos:line="617" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="617" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="619" pos:column="5">typedef <type><struct pos:line="619" pos:column="13">struct <name pos:line="619" pos:column="20">Debugger3Vtbl</name>
    <block pos:line="620" pos:column="5">{<public type="default" pos:line="620" pos:column="6">
        <decl_stmt><decl><type><name pos:line="621" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="623" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="623" pos:column="46">HRESULT</name></type> ( <name pos:line="623" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="623" pos:column="74">*</type:modifier><name pos:line="623" pos:column="75">QueryInterface</name> )<parameter_list pos:line="623" pos:column="91">( 
            <param><decl><type><name pos:line="624" pos:column="13">Debugger3</name> <type:modifier pos:line="624" pos:column="23">*</type:modifier></type> <name pos:line="624" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="625" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="625" pos:column="47">struct <name pos:line="625" pos:column="54">GUID</name> <type:modifier pos:line="625" pos:column="59">*</type:modifier></type><name pos:line="625" pos:column="60">riid</name></decl><op:operator pos:line="625" pos:column="64">,</op:operator>
            <comment type="block" pos:line="626" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="626" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="626" pos:column="59">void</name> <type:modifier pos:line="626" pos:column="64">*</type:modifier><type:modifier pos:line="626" pos:column="65">*</type:modifier><name pos:line="626" pos:column="66">ppvObj</name><op:operator pos:line="626" pos:column="72">,</op:operator>
            <comment type="block" pos:line="627" pos:column="13">/* [retval][out] */</comment> <name pos:line="627" pos:column="33">__RPC__out</name> <name pos:line="627" pos:column="44">void</name> <type:modifier pos:line="627" pos:column="49">*</type:modifier><name pos:line="627" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="629" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="629" pos:column="46">HRESULT</name></type> ( <name pos:line="629" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="629" pos:column="74">*</type:modifier><name pos:line="629" pos:column="75">AddRef</name> )<parameter_list pos:line="629" pos:column="83">( 
            <param><decl><type><name pos:line="630" pos:column="13">Debugger3</name> <type:modifier pos:line="630" pos:column="23">*</type:modifier></type> <name pos:line="630" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="631" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="631" pos:column="33">__RPC__out</name> <name pos:line="631" pos:column="44">unsigned</name> <name pos:line="631" pos:column="53">long</name> <type:modifier pos:line="631" pos:column="58">*</type:modifier></type><name pos:line="631" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="633" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="633" pos:column="46">HRESULT</name></type> ( <name pos:line="633" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="633" pos:column="74">*</type:modifier><name pos:line="633" pos:column="75">Release</name> )<parameter_list pos:line="633" pos:column="84">( 
            <param><decl><type><name pos:line="634" pos:column="13">Debugger3</name> <type:modifier pos:line="634" pos:column="23">*</type:modifier></type> <name pos:line="634" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="635" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="635" pos:column="33">__RPC__out</name> <name pos:line="635" pos:column="44">unsigned</name> <name pos:line="635" pos:column="53">long</name> <type:modifier pos:line="635" pos:column="58">*</type:modifier></type><name pos:line="635" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="637" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="637" pos:column="46">HRESULT</name></type> ( <name pos:line="637" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="637" pos:column="74">*</type:modifier><name pos:line="637" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="637" pos:column="93">( 
            <param><decl><type><name pos:line="638" pos:column="13">Debugger3</name> <type:modifier pos:line="638" pos:column="23">*</type:modifier></type> <name pos:line="638" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="639" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="639" pos:column="38">__RPC__out</name> <name pos:line="639" pos:column="49">unsigned</name> <name pos:line="639" pos:column="58">UINT</name> <type:modifier pos:line="639" pos:column="63">*</type:modifier></type><name pos:line="639" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="640" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="640" pos:column="33">__RPC__out</name> <name pos:line="640" pos:column="44">void</name> <type:modifier pos:line="640" pos:column="49">*</type:modifier></type><name pos:line="640" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="642" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="642" pos:column="46">HRESULT</name></type> ( <name pos:line="642" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="642" pos:column="74">*</type:modifier><name pos:line="642" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="642" pos:column="88">( 
            <param><decl><type><name pos:line="643" pos:column="13">Debugger3</name> <type:modifier pos:line="643" pos:column="23">*</type:modifier></type> <name pos:line="643" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="644" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="644" pos:column="37">unsigned</name> <name pos:line="644" pos:column="46">UINT</name></type> <name pos:line="644" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="645" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="645" pos:column="37">unsigned</name> <name pos:line="645" pos:column="46">long</name></type> <name pos:line="645" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="646" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="646" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="646" pos:column="59">void</name> <type:modifier pos:line="646" pos:column="64">*</type:modifier><type:modifier pos:line="646" pos:column="65">*</type:modifier></type><name pos:line="646" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="647" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="647" pos:column="33">__RPC__out</name> <name pos:line="647" pos:column="44">void</name> <type:modifier pos:line="647" pos:column="49">*</type:modifier></type><name pos:line="647" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="649" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="649" pos:column="46">HRESULT</name> <argument_list pos:line="649" pos:column="54">( <argument pos:line="649" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="649" pos:column="90">(</op:operator> 
            <name pos:line="650" pos:column="13">Debugger3</name> <op:operator pos:line="650" pos:column="23">*</op:operator> <name pos:line="650" pos:column="25">This</name><op:operator pos:line="650" pos:column="29">,</op:operator>
            <comment type="block" pos:line="651" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="651" pos:column="37">__RPC__in</name> struct <name pos:line="651" pos:column="54">GUID</name> <op:operator pos:line="651" pos:column="59">*</op:operator><name pos:line="651" pos:column="60">riid</name><op:operator pos:line="651" pos:column="64">,</op:operator>
            <comment type="block" pos:line="652" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="652" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="652" pos:column="57">signed</name> <name pos:line="652" pos:column="64">char</name> <op:operator pos:line="652" pos:column="69">*</op:operator><op:operator pos:line="652" pos:column="70">*</op:operator><name pos:line="652" pos:column="71">rgszNames</name><op:operator pos:line="652" pos:column="80">,</op:operator>
            <comment type="block" pos:line="653" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="653" pos:column="37">unsigned</name> <name pos:line="653" pos:column="46">UINT</name> <name pos:line="653" pos:column="51">cNames</name><op:operator pos:line="653" pos:column="57">,</op:operator>
            <comment type="block" pos:line="654" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="654" pos:column="37">unsigned</name> <name pos:line="654" pos:column="46">long</name> <name pos:line="654" pos:column="51">lcid</name><op:operator pos:line="654" pos:column="55">,</op:operator>
            <comment type="block" pos:line="655" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="655" pos:column="38">__RPC__out</name> <name pos:line="655" pos:column="49">signed</name> <name pos:line="655" pos:column="56">long</name> <op:operator pos:line="655" pos:column="61">*</op:operator><name pos:line="655" pos:column="62">rgdispid</name><op:operator pos:line="655" pos:column="70">,</op:operator>
            <comment type="block" pos:line="656" pos:column="13">/* [retval][out] */</comment> <name pos:line="656" pos:column="33">__RPC__out</name> <name pos:line="656" pos:column="44">void</name> <op:operator pos:line="656" pos:column="49">*</op:operator><name pos:line="656" pos:column="50">retval</name><op:operator pos:line="656" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="658" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="658" pos:column="46">HRESULT</name> <argument_list pos:line="658" pos:column="54">( <argument pos:line="658" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="658" pos:column="83">(</op:operator> 
            <name pos:line="659" pos:column="13">Debugger3</name> <op:operator pos:line="659" pos:column="23">*</op:operator> <name pos:line="659" pos:column="25">This</name><op:operator pos:line="659" pos:column="29">,</op:operator>
            <comment type="block" pos:line="660" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="660" pos:column="37">signed</name> <name pos:line="660" pos:column="44">long</name> <name pos:line="660" pos:column="49">dispidMember</name><op:operator pos:line="660" pos:column="61">,</op:operator>
            <comment type="block" pos:line="661" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="661" pos:column="37">__RPC__in</name> struct <name pos:line="661" pos:column="54">GUID</name> <op:operator pos:line="661" pos:column="59">*</op:operator><name pos:line="661" pos:column="60">riid</name><op:operator pos:line="661" pos:column="64">,</op:operator>
            <comment type="block" pos:line="662" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="662" pos:column="37">unsigned</name> <name pos:line="662" pos:column="46">long</name> <name pos:line="662" pos:column="51">lcid</name><op:operator pos:line="662" pos:column="55">,</op:operator>
            <comment type="block" pos:line="663" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="663" pos:column="37">unsigned</name> <name pos:line="663" pos:column="46">short</name> <name pos:line="663" pos:column="52">wFlags</name><op:operator pos:line="663" pos:column="58">,</op:operator>
            <comment type="block" pos:line="664" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="664" pos:column="37">__RPC__in</name> struct <name pos:line="664" pos:column="54">DISPPARAMS</name> <op:operator pos:line="664" pos:column="65">*</op:operator><name pos:line="664" pos:column="66">pdispparams</name><op:operator pos:line="664" pos:column="77">,</op:operator>
            <comment type="block" pos:line="665" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="665" pos:column="38">__RPC__out</name> <name pos:line="665" pos:column="49">VARIANT</name> <op:operator pos:line="665" pos:column="57">*</op:operator><name pos:line="665" pos:column="58">pvarResult</name><op:operator pos:line="665" pos:column="68">,</op:operator>
            <comment type="block" pos:line="666" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="666" pos:column="38">__RPC__out</name> struct <name pos:line="666" pos:column="56">EXCEPINFO</name> <op:operator pos:line="666" pos:column="66">*</op:operator><name pos:line="666" pos:column="67">pexcepinfo</name><op:operator pos:line="666" pos:column="77">,</op:operator>
            <comment type="block" pos:line="667" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="667" pos:column="38">__RPC__out</name> <name pos:line="667" pos:column="49">unsigned</name> <name pos:line="667" pos:column="58">UINT</name> <op:operator pos:line="667" pos:column="63">*</op:operator><name pos:line="667" pos:column="64">puArgErr</name><op:operator pos:line="667" pos:column="72">,</op:operator>
            <comment type="block" pos:line="668" pos:column="13">/* [retval][out] */</comment> <name pos:line="668" pos:column="33">__RPC__out</name> <name pos:line="668" pos:column="44">void</name> <op:operator pos:line="668" pos:column="49">*</op:operator><name pos:line="668" pos:column="50">retval</name><op:operator pos:line="668" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="670" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="670" pos:column="34">HRESULT</name></type> ( <name pos:line="670" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="670" pos:column="62">*</type:modifier><name pos:line="670" pos:column="63">GetExpression</name> )<parameter_list pos:line="670" pos:column="78">( 
            <param><decl><type><name pos:line="671" pos:column="13">Debugger3</name> <type:modifier pos:line="671" pos:column="23">*</type:modifier></type> <name pos:line="671" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="672" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="672" pos:column="37">__RPC__in</name> <name pos:line="672" pos:column="47">BSTR</name></type> <name pos:line="672" pos:column="52">ExpressionText</name></decl></param>,
            <comment type="block" pos:line="673" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="673" pos:column="37">BOOLEAN</name></type> <name pos:line="673" pos:column="45">UseAutoExpandRules</name></decl></param>,
            <comment type="block" pos:line="674" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="674" pos:column="37">signed</name> <name pos:line="674" pos:column="44">long</name></type> <name pos:line="674" pos:column="49">Timeout</name></decl></param>,
            <comment type="block" pos:line="675" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="675" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="675" pos:column="54">Expression</name> <type:modifier pos:line="675" pos:column="65">*</type:modifier><type:modifier pos:line="675" pos:column="66">*</type:modifier></type><name pos:line="675" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="677" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="677" pos:column="34">HRESULT</name></type> ( <name pos:line="677" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="677" pos:column="62">*</type:modifier><name pos:line="677" pos:column="63">DetachAll</name> )<parameter_list pos:line="677" pos:column="74">( 
            <param><decl><type><name pos:line="678" pos:column="13">Debugger3</name> <type:modifier pos:line="678" pos:column="23">*</type:modifier></type> <name pos:line="678" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="679" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="679" pos:column="33">__RPC__out</name> <name pos:line="679" pos:column="44">void</name> <type:modifier pos:line="679" pos:column="49">*</type:modifier></type><name pos:line="679" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="681" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="681" pos:column="34">HRESULT</name></type> ( <name pos:line="681" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="681" pos:column="62">*</type:modifier><name pos:line="681" pos:column="63">StepInto</name> )<parameter_list pos:line="681" pos:column="73">( 
            <param><decl><type><name pos:line="682" pos:column="13">Debugger3</name> <type:modifier pos:line="682" pos:column="23">*</type:modifier></type> <name pos:line="682" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="683" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="683" pos:column="37">BOOLEAN</name></type> <name pos:line="683" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="684" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="684" pos:column="33">__RPC__out</name> <name pos:line="684" pos:column="44">void</name> <type:modifier pos:line="684" pos:column="49">*</type:modifier></type><name pos:line="684" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="686" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="686" pos:column="34">HRESULT</name></type> ( <name pos:line="686" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="686" pos:column="62">*</type:modifier><name pos:line="686" pos:column="63">StepOver</name> )<parameter_list pos:line="686" pos:column="73">( 
            <param><decl><type><name pos:line="687" pos:column="13">Debugger3</name> <type:modifier pos:line="687" pos:column="23">*</type:modifier></type> <name pos:line="687" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="688" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="688" pos:column="37">BOOLEAN</name></type> <name pos:line="688" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="689" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="689" pos:column="33">__RPC__out</name> <name pos:line="689" pos:column="44">void</name> <type:modifier pos:line="689" pos:column="49">*</type:modifier></type><name pos:line="689" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="691" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="691" pos:column="34">HRESULT</name></type> ( <name pos:line="691" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="691" pos:column="62">*</type:modifier><name pos:line="691" pos:column="63">StepOut</name> )<parameter_list pos:line="691" pos:column="72">( 
            <param><decl><type><name pos:line="692" pos:column="13">Debugger3</name> <type:modifier pos:line="692" pos:column="23">*</type:modifier></type> <name pos:line="692" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="693" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="693" pos:column="37">BOOLEAN</name></type> <name pos:line="693" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="694" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="694" pos:column="33">__RPC__out</name> <name pos:line="694" pos:column="44">void</name> <type:modifier pos:line="694" pos:column="49">*</type:modifier></type><name pos:line="694" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="696" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="696" pos:column="34">HRESULT</name></type> ( <name pos:line="696" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="696" pos:column="62">*</type:modifier><name pos:line="696" pos:column="63">Go</name> )<parameter_list pos:line="696" pos:column="67">( 
            <param><decl><type><name pos:line="697" pos:column="13">Debugger3</name> <type:modifier pos:line="697" pos:column="23">*</type:modifier></type> <name pos:line="697" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="698" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="698" pos:column="37">BOOLEAN</name></type> <name pos:line="698" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="699" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="699" pos:column="33">__RPC__out</name> <name pos:line="699" pos:column="44">void</name> <type:modifier pos:line="699" pos:column="49">*</type:modifier></type><name pos:line="699" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="701" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="701" pos:column="34">HRESULT</name></type> ( <name pos:line="701" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="701" pos:column="62">*</type:modifier><name pos:line="701" pos:column="63">Break</name> )<parameter_list pos:line="701" pos:column="70">( 
            <param><decl><type><name pos:line="702" pos:column="13">Debugger3</name> <type:modifier pos:line="702" pos:column="23">*</type:modifier></type> <name pos:line="702" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="703" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="703" pos:column="37">BOOLEAN</name></type> <name pos:line="703" pos:column="45">WaitForBreakMode</name></decl></param>,
            <comment type="block" pos:line="704" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="704" pos:column="33">__RPC__out</name> <name pos:line="704" pos:column="44">void</name> <type:modifier pos:line="704" pos:column="49">*</type:modifier></type><name pos:line="704" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="706" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="706" pos:column="34">HRESULT</name></type> ( <name pos:line="706" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="706" pos:column="62">*</type:modifier><name pos:line="706" pos:column="63">Stop</name> )<parameter_list pos:line="706" pos:column="69">( 
            <param><decl><type><name pos:line="707" pos:column="13">Debugger3</name> <type:modifier pos:line="707" pos:column="23">*</type:modifier></type> <name pos:line="707" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="708" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="708" pos:column="37">BOOLEAN</name></type> <name pos:line="708" pos:column="45">WaitForDesignMode</name></decl></param>,
            <comment type="block" pos:line="709" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="709" pos:column="33">__RPC__out</name> <name pos:line="709" pos:column="44">void</name> <type:modifier pos:line="709" pos:column="49">*</type:modifier></type><name pos:line="709" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="711" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="711" pos:column="34">HRESULT</name></type> ( <name pos:line="711" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="711" pos:column="62">*</type:modifier><name pos:line="711" pos:column="63">SetNextStatement</name> )<parameter_list pos:line="711" pos:column="81">( 
            <param><decl><type><name pos:line="712" pos:column="13">Debugger3</name> <type:modifier pos:line="712" pos:column="23">*</type:modifier></type> <name pos:line="712" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="713" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="713" pos:column="33">__RPC__out</name> <name pos:line="713" pos:column="44">void</name> <type:modifier pos:line="713" pos:column="49">*</type:modifier></type><name pos:line="713" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="715" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="715" pos:column="34">HRESULT</name></type> ( <name pos:line="715" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="715" pos:column="62">*</type:modifier><name pos:line="715" pos:column="63">RunToCursor</name> )<parameter_list pos:line="715" pos:column="76">( 
            <param><decl><type><name pos:line="716" pos:column="13">Debugger3</name> <type:modifier pos:line="716" pos:column="23">*</type:modifier></type> <name pos:line="716" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="717" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="717" pos:column="37">BOOLEAN</name></type> <name pos:line="717" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="718" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="718" pos:column="33">__RPC__out</name> <name pos:line="718" pos:column="44">void</name> <type:modifier pos:line="718" pos:column="49">*</type:modifier></type><name pos:line="718" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="720" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="720" pos:column="34">HRESULT</name></type> ( <name pos:line="720" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="720" pos:column="62">*</type:modifier><name pos:line="720" pos:column="63">ExecuteStatement</name> )<parameter_list pos:line="720" pos:column="81">( 
            <param><decl><type><name pos:line="721" pos:column="13">Debugger3</name> <type:modifier pos:line="721" pos:column="23">*</type:modifier></type> <name pos:line="721" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="722" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="722" pos:column="37">__RPC__in</name> <name pos:line="722" pos:column="47">BSTR</name></type> <name pos:line="722" pos:column="52">Statement</name></decl></param>,
            <comment type="block" pos:line="723" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="723" pos:column="37">signed</name> <name pos:line="723" pos:column="44">long</name></type> <name pos:line="723" pos:column="49">Timeout</name></decl></param>,
            <comment type="block" pos:line="724" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="724" pos:column="37">BOOLEAN</name></type> <name pos:line="724" pos:column="45">TreatAsExpression</name></decl></param>,
            <comment type="block" pos:line="725" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="725" pos:column="33">__RPC__out</name> <name pos:line="725" pos:column="44">void</name> <type:modifier pos:line="725" pos:column="49">*</type:modifier></type><name pos:line="725" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="727" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="727" pos:column="43">HRESULT</name></type> ( <name pos:line="727" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="727" pos:column="71">*</type:modifier><name pos:line="727" pos:column="72">get_Breakpoints</name> )<parameter_list pos:line="727" pos:column="89">( 
            <param><decl><type><name pos:line="728" pos:column="13">Debugger3</name> <type:modifier pos:line="728" pos:column="23">*</type:modifier></type> <name pos:line="728" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="729" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="729" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="729" pos:column="54">Breakpoints</name> <type:modifier pos:line="729" pos:column="66">*</type:modifier><type:modifier pos:line="729" pos:column="67">*</type:modifier></type><name pos:line="729" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="731" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="731" pos:column="43">HRESULT</name></type> ( <name pos:line="731" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="731" pos:column="71">*</type:modifier><name pos:line="731" pos:column="72">get_Languages</name> )<parameter_list pos:line="731" pos:column="87">( 
            <param><decl><type><name pos:line="732" pos:column="13">Debugger3</name> <type:modifier pos:line="732" pos:column="23">*</type:modifier></type> <name pos:line="732" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="733" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="733" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="733" pos:column="54">Languages</name> <type:modifier pos:line="733" pos:column="64">*</type:modifier><type:modifier pos:line="733" pos:column="65">*</type:modifier></type><name pos:line="733" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="735" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="735" pos:column="43">HRESULT</name> <argument_list pos:line="735" pos:column="51">( <argument pos:line="735" pos:column="53">STDMETHODCALLTYPE *get_CurrentMode</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="735" pos:column="89">(</op:operator> 
            <name pos:line="736" pos:column="13">Debugger3</name> <op:operator pos:line="736" pos:column="23">*</op:operator> <name pos:line="736" pos:column="25">This</name><op:operator pos:line="736" pos:column="29">,</op:operator>
            <comment type="block" pos:line="737" pos:column="13">/* [retval][out] */</comment> <name pos:line="737" pos:column="33">__RPC__out</name> enum <name pos:line="737" pos:column="49">dbgDebugMode</name> <op:operator pos:line="737" pos:column="62">*</op:operator><name pos:line="737" pos:column="63">retval</name><op:operator pos:line="737" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="739" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="739" pos:column="43">HRESULT</name></type> ( <name pos:line="739" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="739" pos:column="71">*</type:modifier><name pos:line="739" pos:column="72">get_CurrentProcess</name> )<parameter_list pos:line="739" pos:column="92">( 
            <param><decl><type><name pos:line="740" pos:column="13">Debugger3</name> <type:modifier pos:line="740" pos:column="23">*</type:modifier></type> <name pos:line="740" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="741" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="741" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="741" pos:column="54">Process</name> <type:modifier pos:line="741" pos:column="62">*</type:modifier><type:modifier pos:line="741" pos:column="63">*</type:modifier></type><name pos:line="741" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="743" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="743" pos:column="43">HRESULT</name></type> ( <name pos:line="743" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="743" pos:column="71">*</type:modifier><name pos:line="743" pos:column="72">put_CurrentProcess</name> )<parameter_list pos:line="743" pos:column="92">( 
            <param><decl><type><name pos:line="744" pos:column="13">Debugger3</name> <type:modifier pos:line="744" pos:column="23">*</type:modifier></type> <name pos:line="744" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="745" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="745" pos:column="37">__RPC__in_opt</name> <name pos:line="745" pos:column="51">Process</name> <type:modifier pos:line="745" pos:column="59">*</type:modifier></type><name pos:line="745" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="746" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="746" pos:column="33">__RPC__out</name> <name pos:line="746" pos:column="44">void</name> <type:modifier pos:line="746" pos:column="49">*</type:modifier></type><name pos:line="746" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="748" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="748" pos:column="43">HRESULT</name></type> ( <name pos:line="748" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="748" pos:column="71">*</type:modifier><name pos:line="748" pos:column="72">get_CurrentProgram</name> )<parameter_list pos:line="748" pos:column="92">( 
            <param><decl><type><name pos:line="749" pos:column="13">Debugger3</name> <type:modifier pos:line="749" pos:column="23">*</type:modifier></type> <name pos:line="749" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="750" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="750" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="750" pos:column="54">Program</name> <type:modifier pos:line="750" pos:column="62">*</type:modifier><type:modifier pos:line="750" pos:column="63">*</type:modifier></type><name pos:line="750" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="752" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="752" pos:column="43">HRESULT</name></type> ( <name pos:line="752" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="752" pos:column="71">*</type:modifier><name pos:line="752" pos:column="72">put_CurrentProgram</name> )<parameter_list pos:line="752" pos:column="92">( 
            <param><decl><type><name pos:line="753" pos:column="13">Debugger3</name> <type:modifier pos:line="753" pos:column="23">*</type:modifier></type> <name pos:line="753" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="754" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="754" pos:column="37">__RPC__in_opt</name> <name pos:line="754" pos:column="51">Program</name> <type:modifier pos:line="754" pos:column="59">*</type:modifier></type><name pos:line="754" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="755" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="755" pos:column="33">__RPC__out</name> <name pos:line="755" pos:column="44">void</name> <type:modifier pos:line="755" pos:column="49">*</type:modifier></type><name pos:line="755" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="757" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="757" pos:column="43">HRESULT</name></type> ( <name pos:line="757" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="757" pos:column="71">*</type:modifier><name pos:line="757" pos:column="72">get_CurrentThread</name> )<parameter_list pos:line="757" pos:column="91">( 
            <param><decl><type><name pos:line="758" pos:column="13">Debugger3</name> <type:modifier pos:line="758" pos:column="23">*</type:modifier></type> <name pos:line="758" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="759" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="759" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="759" pos:column="54">Thread</name> <type:modifier pos:line="759" pos:column="61">*</type:modifier><type:modifier pos:line="759" pos:column="62">*</type:modifier></type><name pos:line="759" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="761" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="761" pos:column="43">HRESULT</name></type> ( <name pos:line="761" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="761" pos:column="71">*</type:modifier><name pos:line="761" pos:column="72">put_CurrentThread</name> )<parameter_list pos:line="761" pos:column="91">( 
            <param><decl><type><name pos:line="762" pos:column="13">Debugger3</name> <type:modifier pos:line="762" pos:column="23">*</type:modifier></type> <name pos:line="762" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="763" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="763" pos:column="37">__RPC__in_opt</name> <name pos:line="763" pos:column="51">Thread</name> <type:modifier pos:line="763" pos:column="58">*</type:modifier></type><name pos:line="763" pos:column="59">noname</name></decl></param>,
            <comment type="block" pos:line="764" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="764" pos:column="33">__RPC__out</name> <name pos:line="764" pos:column="44">void</name> <type:modifier pos:line="764" pos:column="49">*</type:modifier></type><name pos:line="764" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="766" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="766" pos:column="43">HRESULT</name></type> ( <name pos:line="766" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="766" pos:column="71">*</type:modifier><name pos:line="766" pos:column="72">get_CurrentStackFrame</name> )<parameter_list pos:line="766" pos:column="95">( 
            <param><decl><type><name pos:line="767" pos:column="13">Debugger3</name> <type:modifier pos:line="767" pos:column="23">*</type:modifier></type> <name pos:line="767" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="768" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="768" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="768" pos:column="54">StackFrame</name> <type:modifier pos:line="768" pos:column="65">*</type:modifier><type:modifier pos:line="768" pos:column="66">*</type:modifier></type><name pos:line="768" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="770" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="770" pos:column="43">HRESULT</name></type> ( <name pos:line="770" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="770" pos:column="71">*</type:modifier><name pos:line="770" pos:column="72">put_CurrentStackFrame</name> )<parameter_list pos:line="770" pos:column="95">( 
            <param><decl><type><name pos:line="771" pos:column="13">Debugger3</name> <type:modifier pos:line="771" pos:column="23">*</type:modifier></type> <name pos:line="771" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="772" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="772" pos:column="37">__RPC__in_opt</name> <name pos:line="772" pos:column="51">StackFrame</name> <type:modifier pos:line="772" pos:column="62">*</type:modifier></type><name pos:line="772" pos:column="63">noname</name></decl></param>,
            <comment type="block" pos:line="773" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="773" pos:column="33">__RPC__out</name> <name pos:line="773" pos:column="44">void</name> <type:modifier pos:line="773" pos:column="49">*</type:modifier></type><name pos:line="773" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="775" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="775" pos:column="43">HRESULT</name></type> ( <name pos:line="775" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="775" pos:column="71">*</type:modifier><name pos:line="775" pos:column="72">get_HexDisplayMode</name> )<parameter_list pos:line="775" pos:column="92">( 
            <param><decl><type><name pos:line="776" pos:column="13">Debugger3</name> <type:modifier pos:line="776" pos:column="23">*</type:modifier></type> <name pos:line="776" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="777" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="777" pos:column="33">__RPC__out</name> <name pos:line="777" pos:column="44">BOOLEAN</name> <type:modifier pos:line="777" pos:column="52">*</type:modifier></type><name pos:line="777" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="779" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="779" pos:column="43">HRESULT</name></type> ( <name pos:line="779" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="779" pos:column="71">*</type:modifier><name pos:line="779" pos:column="72">put_HexDisplayMode</name> )<parameter_list pos:line="779" pos:column="92">( 
            <param><decl><type><name pos:line="780" pos:column="13">Debugger3</name> <type:modifier pos:line="780" pos:column="23">*</type:modifier></type> <name pos:line="780" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="781" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="781" pos:column="37">BOOLEAN</name></type> <name pos:line="781" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="782" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="782" pos:column="33">__RPC__out</name> <name pos:line="782" pos:column="44">void</name> <type:modifier pos:line="782" pos:column="49">*</type:modifier></type><name pos:line="782" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="784" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="784" pos:column="43">HRESULT</name></type> ( <name pos:line="784" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="784" pos:column="71">*</type:modifier><name pos:line="784" pos:column="72">get_HexInputMode</name> )<parameter_list pos:line="784" pos:column="90">( 
            <param><decl><type><name pos:line="785" pos:column="13">Debugger3</name> <type:modifier pos:line="785" pos:column="23">*</type:modifier></type> <name pos:line="785" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="786" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="786" pos:column="33">__RPC__out</name> <name pos:line="786" pos:column="44">BOOLEAN</name> <type:modifier pos:line="786" pos:column="52">*</type:modifier></type><name pos:line="786" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="788" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="788" pos:column="43">HRESULT</name></type> ( <name pos:line="788" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="788" pos:column="71">*</type:modifier><name pos:line="788" pos:column="72">put_HexInputMode</name> )<parameter_list pos:line="788" pos:column="90">( 
            <param><decl><type><name pos:line="789" pos:column="13">Debugger3</name> <type:modifier pos:line="789" pos:column="23">*</type:modifier></type> <name pos:line="789" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="790" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="790" pos:column="37">BOOLEAN</name></type> <name pos:line="790" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="791" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="791" pos:column="33">__RPC__out</name> <name pos:line="791" pos:column="44">void</name> <type:modifier pos:line="791" pos:column="49">*</type:modifier></type><name pos:line="791" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="793" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="793" pos:column="43">HRESULT</name> <argument_list pos:line="793" pos:column="51">( <argument pos:line="793" pos:column="53">STDMETHODCALLTYPE *get_LastBreakReason</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="793" pos:column="93">(</op:operator> 
            <name pos:line="794" pos:column="13">Debugger3</name> <op:operator pos:line="794" pos:column="23">*</op:operator> <name pos:line="794" pos:column="25">This</name><op:operator pos:line="794" pos:column="29">,</op:operator>
            <comment type="block" pos:line="795" pos:column="13">/* [retval][out] */</comment> <name pos:line="795" pos:column="33">__RPC__out</name> enum <name pos:line="795" pos:column="49">dbgEventReason</name> <op:operator pos:line="795" pos:column="64">*</op:operator><name pos:line="795" pos:column="65">retval</name><op:operator pos:line="795" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="797" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="797" pos:column="43">HRESULT</name></type> ( <name pos:line="797" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="797" pos:column="71">*</type:modifier><name pos:line="797" pos:column="72">get_BreakpointLastHit</name> )<parameter_list pos:line="797" pos:column="95">( 
            <param><decl><type><name pos:line="798" pos:column="13">Debugger3</name> <type:modifier pos:line="798" pos:column="23">*</type:modifier></type> <name pos:line="798" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="799" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="799" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="799" pos:column="54">Breakpoint</name> <type:modifier pos:line="799" pos:column="65">*</type:modifier><type:modifier pos:line="799" pos:column="66">*</type:modifier></type><name pos:line="799" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="801" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="801" pos:column="43">HRESULT</name></type> ( <name pos:line="801" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="801" pos:column="71">*</type:modifier><name pos:line="801" pos:column="72">get_AllBreakpointsLastHit</name> )<parameter_list pos:line="801" pos:column="99">( 
            <param><decl><type><name pos:line="802" pos:column="13">Debugger3</name> <type:modifier pos:line="802" pos:column="23">*</type:modifier></type> <name pos:line="802" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="803" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="803" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="803" pos:column="54">Breakpoints</name> <type:modifier pos:line="803" pos:column="66">*</type:modifier><type:modifier pos:line="803" pos:column="67">*</type:modifier></type><name pos:line="803" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="805" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="805" pos:column="43">HRESULT</name></type> ( <name pos:line="805" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="805" pos:column="71">*</type:modifier><name pos:line="805" pos:column="72">get_DebuggedProcesses</name> )<parameter_list pos:line="805" pos:column="95">( 
            <param><decl><type><name pos:line="806" pos:column="13">Debugger3</name> <type:modifier pos:line="806" pos:column="23">*</type:modifier></type> <name pos:line="806" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="807" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="807" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="807" pos:column="54">Processes</name> <type:modifier pos:line="807" pos:column="64">*</type:modifier><type:modifier pos:line="807" pos:column="65">*</type:modifier></type><name pos:line="807" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="809" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="809" pos:column="43">HRESULT</name></type> ( <name pos:line="809" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="809" pos:column="71">*</type:modifier><name pos:line="809" pos:column="72">get_LocalProcesses</name> )<parameter_list pos:line="809" pos:column="92">( 
            <param><decl><type><name pos:line="810" pos:column="13">Debugger3</name> <type:modifier pos:line="810" pos:column="23">*</type:modifier></type> <name pos:line="810" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="811" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="811" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="811" pos:column="54">Processes</name> <type:modifier pos:line="811" pos:column="64">*</type:modifier><type:modifier pos:line="811" pos:column="65">*</type:modifier></type><name pos:line="811" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="813" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="813" pos:column="43">HRESULT</name></type> ( <name pos:line="813" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="813" pos:column="71">*</type:modifier><name pos:line="813" pos:column="72">get_DTE</name> )<parameter_list pos:line="813" pos:column="81">( 
            <param><decl><type><name pos:line="814" pos:column="13">Debugger3</name> <type:modifier pos:line="814" pos:column="23">*</type:modifier></type> <name pos:line="814" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="815" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="815" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="815" pos:column="54">*</type:modifier><type:modifier pos:line="815" pos:column="55">*</type:modifier></type><name pos:line="815" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="817" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="817" pos:column="43">HRESULT</name></type> ( <name pos:line="817" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="817" pos:column="71">*</type:modifier><name pos:line="817" pos:column="72">get_Parent</name> )<parameter_list pos:line="817" pos:column="84">( 
            <param><decl><type><name pos:line="818" pos:column="13">Debugger3</name> <type:modifier pos:line="818" pos:column="23">*</type:modifier></type> <name pos:line="818" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="819" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="819" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="819" pos:column="54">*</type:modifier><type:modifier pos:line="819" pos:column="55">*</type:modifier></type><name pos:line="819" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="821" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="821" pos:column="34">HRESULT</name></type> ( <name pos:line="821" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="821" pos:column="62">*</type:modifier><name pos:line="821" pos:column="63">TerminateAll</name> )<parameter_list pos:line="821" pos:column="77">( 
            <param><decl><type><name pos:line="822" pos:column="13">Debugger3</name> <type:modifier pos:line="822" pos:column="23">*</type:modifier></type> <name pos:line="822" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="823" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="823" pos:column="33">__RPC__out</name> <name pos:line="823" pos:column="44">void</name> <type:modifier pos:line="823" pos:column="49">*</type:modifier></type><name pos:line="823" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="825" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="825" pos:column="34">HRESULT</name> <argument_list pos:line="825" pos:column="42">( <argument pos:line="825" pos:column="44">STDMETHODCALLTYPE *WriteMinidump</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="825" pos:column="78">(</op:operator> 
            <name pos:line="826" pos:column="13">Debugger3</name> <op:operator pos:line="826" pos:column="23">*</op:operator> <name pos:line="826" pos:column="25">This</name><op:operator pos:line="826" pos:column="29">,</op:operator>
            <comment type="block" pos:line="827" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="827" pos:column="37">__RPC__in</name> <name pos:line="827" pos:column="47">BSTR</name> <name pos:line="827" pos:column="52">FileName</name><op:operator pos:line="827" pos:column="60">,</op:operator>
            <comment type="block" pos:line="828" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="828" pos:column="42">dbgMinidumpOption</name> <name pos:line="828" pos:column="60">Option</name><op:operator pos:line="828" pos:column="66">,</op:operator>
            <comment type="block" pos:line="829" pos:column="13">/* [retval][out] */</comment> <name pos:line="829" pos:column="33">__RPC__out</name> <name pos:line="829" pos:column="44">void</name> <op:operator pos:line="829" pos:column="49">*</op:operator><name pos:line="829" pos:column="50">retval</name><op:operator pos:line="829" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="831" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="831" pos:column="34">HRESULT</name></type> ( <name pos:line="831" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="831" pos:column="62">*</type:modifier><name pos:line="831" pos:column="63">GetProcesses</name> )<parameter_list pos:line="831" pos:column="77">( 
            <param><decl><type><name pos:line="832" pos:column="13">Debugger3</name> <type:modifier pos:line="832" pos:column="23">*</type:modifier></type> <name pos:line="832" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="833" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="833" pos:column="37">__RPC__in_opt</name> <name pos:line="833" pos:column="51">Transport</name> <type:modifier pos:line="833" pos:column="61">*</type:modifier></type><name pos:line="833" pos:column="62">pTransport</name></decl></param>,
            <comment type="block" pos:line="834" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="834" pos:column="37">__RPC__in</name> <name pos:line="834" pos:column="47">BSTR</name></type> <name pos:line="834" pos:column="52">TransportQualifier</name></decl></param>,
            <comment type="block" pos:line="835" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="835" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="835" pos:column="54">Processes</name> <type:modifier pos:line="835" pos:column="64">*</type:modifier><type:modifier pos:line="835" pos:column="65">*</type:modifier></type><name pos:line="835" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="837" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="837" pos:column="34">HRESULT</name></type> ( <name pos:line="837" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="837" pos:column="62">*</type:modifier><name pos:line="837" pos:column="63">GetExpression2</name> )<parameter_list pos:line="837" pos:column="79">( 
            <param><decl><type><name pos:line="838" pos:column="13">Debugger3</name> <type:modifier pos:line="838" pos:column="23">*</type:modifier></type> <name pos:line="838" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="839" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="839" pos:column="37">__RPC__in</name> <name pos:line="839" pos:column="47">BSTR</name></type> <name pos:line="839" pos:column="52">ExpressionText</name></decl></param>,
            <comment type="block" pos:line="840" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="840" pos:column="37">BOOLEAN</name></type> <name pos:line="840" pos:column="45">UseAutoExpandRules</name></decl></param>,
            <comment type="block" pos:line="841" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="841" pos:column="37">BOOLEAN</name></type> <name pos:line="841" pos:column="45">TreatAsStatement</name></decl></param>,
            <comment type="block" pos:line="842" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="842" pos:column="37">signed</name> <name pos:line="842" pos:column="44">long</name></type> <name pos:line="842" pos:column="49">Timeout</name></decl></param>,
            <comment type="block" pos:line="843" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="843" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="843" pos:column="54">Expression</name> <type:modifier pos:line="843" pos:column="65">*</type:modifier><type:modifier pos:line="843" pos:column="66">*</type:modifier></type><name pos:line="843" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="845" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="845" pos:column="43">HRESULT</name></type> ( <name pos:line="845" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="845" pos:column="71">*</type:modifier><name pos:line="845" pos:column="72">get_Transports</name> )<parameter_list pos:line="845" pos:column="88">( 
            <param><decl><type><name pos:line="846" pos:column="13">Debugger3</name> <type:modifier pos:line="846" pos:column="23">*</type:modifier></type> <name pos:line="846" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="847" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="847" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="847" pos:column="54">Transports</name> <type:modifier pos:line="847" pos:column="65">*</type:modifier><type:modifier pos:line="847" pos:column="66">*</type:modifier></type><name pos:line="847" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="849" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="849" pos:column="29">HRESULT</name></type> ( <name pos:line="849" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="849" pos:column="57">*</type:modifier><name pos:line="849" pos:column="58">get_ForceContinue</name> )<parameter_list pos:line="849" pos:column="77">( 
            <param><decl><type><name pos:line="850" pos:column="13">Debugger3</name> <type:modifier pos:line="850" pos:column="23">*</type:modifier></type> <name pos:line="850" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="851" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="851" pos:column="33">__RPC__out</name> <name pos:line="851" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="851" pos:column="57">*</type:modifier></type><name pos:line="851" pos:column="58">ForceContinue</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="853" pos:column="9">/* [propput][id] */</comment> <function_decl><type><name pos:line="853" pos:column="29">HRESULT</name></type> ( <name pos:line="853" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="853" pos:column="57">*</type:modifier><name pos:line="853" pos:column="58">put_ForceContinue</name> )<parameter_list pos:line="853" pos:column="77">( 
            <param><decl><type><name pos:line="854" pos:column="13">Debugger3</name> <type:modifier pos:line="854" pos:column="23">*</type:modifier></type> <name pos:line="854" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="855" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="855" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="855" pos:column="37">ForceContinue</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="857" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="857" pos:column="29">HRESULT</name></type> ( <name pos:line="857" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="857" pos:column="57">*</type:modifier><name pos:line="857" pos:column="58">get_ExceptionGroups</name> )<parameter_list pos:line="857" pos:column="79">( 
            <param><decl><type><name pos:line="858" pos:column="13">Debugger3</name> <type:modifier pos:line="858" pos:column="23">*</type:modifier></type> <name pos:line="858" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="859" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="859" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="859" pos:column="54">ExceptionGroups</name> <type:modifier pos:line="859" pos:column="70">*</type:modifier><type:modifier pos:line="859" pos:column="71">*</type:modifier></type><name pos:line="859" pos:column="72">ExceptionGroups</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="861" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="861" pos:column="29">HRESULT</name></type> ( <name pos:line="861" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="861" pos:column="57">*</type:modifier><name pos:line="861" pos:column="58">get_SymbolPath</name> )<parameter_list pos:line="861" pos:column="74">( 
            <param><decl><type><name pos:line="862" pos:column="13">Debugger3</name> <type:modifier pos:line="862" pos:column="23">*</type:modifier></type> <name pos:line="862" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="863" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="863" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="863" pos:column="54">BSTR</name> <type:modifier pos:line="863" pos:column="59">*</type:modifier></type><name pos:line="863" pos:column="60">SymbolPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="865" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="865" pos:column="29">HRESULT</name></type> ( <name pos:line="865" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="865" pos:column="57">*</type:modifier><name pos:line="865" pos:column="58">get_SymbolPathState</name> )<parameter_list pos:line="865" pos:column="79">( 
            <param><decl><type><name pos:line="866" pos:column="13">Debugger3</name> <type:modifier pos:line="866" pos:column="23">*</type:modifier></type> <name pos:line="866" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="867" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="867" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="867" pos:column="54">BSTR</name> <type:modifier pos:line="867" pos:column="59">*</type:modifier></type><name pos:line="867" pos:column="60">SymbolPathState</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="869" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="869" pos:column="29">HRESULT</name></type> ( <name pos:line="869" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="869" pos:column="57">*</type:modifier><name pos:line="869" pos:column="58">get_SymbolCachePath</name> )<parameter_list pos:line="869" pos:column="79">( 
            <param><decl><type><name pos:line="870" pos:column="13">Debugger3</name> <type:modifier pos:line="870" pos:column="23">*</type:modifier></type> <name pos:line="870" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="871" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="871" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="871" pos:column="54">BSTR</name> <type:modifier pos:line="871" pos:column="59">*</type:modifier></type><name pos:line="871" pos:column="60">SymbolCachePath</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="873" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="873" pos:column="29">HRESULT</name></type> ( <name pos:line="873" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="873" pos:column="57">*</type:modifier><name pos:line="873" pos:column="58">get_OnlyLoadSymbolsManually</name> )<parameter_list pos:line="873" pos:column="87">( 
            <param><decl><type><name pos:line="874" pos:column="13">Debugger3</name> <type:modifier pos:line="874" pos:column="23">*</type:modifier></type> <name pos:line="874" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="875" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="875" pos:column="33">__RPC__out</name> <name pos:line="875" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="875" pos:column="57">*</type:modifier></type><name pos:line="875" pos:column="58">OnlyLoadSymbolsManually</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="877" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="877" pos:column="20">HRESULT</name></type> ( <name pos:line="877" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="877" pos:column="48">*</type:modifier><name pos:line="877" pos:column="49">SetSymbolSettings</name> )<parameter_list pos:line="877" pos:column="68">( 
            <param><decl><type><name pos:line="878" pos:column="13">Debugger3</name> <type:modifier pos:line="878" pos:column="23">*</type:modifier></type> <name pos:line="878" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="879" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="879" pos:column="24">__RPC__in</name> <name pos:line="879" pos:column="34">BSTR</name></type> <name pos:line="879" pos:column="39">SymbolPath</name></decl></param>,
            <comment type="block" pos:line="880" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="880" pos:column="24">__RPC__in</name> <name pos:line="880" pos:column="34">BSTR</name></type> <name pos:line="880" pos:column="39">SymbolPathState</name></decl></param>,
            <comment type="block" pos:line="881" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="881" pos:column="24">__RPC__in</name> <name pos:line="881" pos:column="34">BSTR</name></type> <name pos:line="881" pos:column="39">SymbolCachePath</name></decl></param>,
            <comment type="block" pos:line="882" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="882" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="882" pos:column="37">OnlyLoadSymbolsManually</name></decl></param>,
            <comment type="block" pos:line="883" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="883" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="883" pos:column="37">LoadSymbolsNow</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="885" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="886" pos:column="7">Debugger3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="888" pos:column="5">interface</name></type> <name pos:line="888" pos:column="15">Debugger3</name>
    <argument_list pos:line="889" pos:column="5">{
        <argument><expr><name pos:line="890" pos:column="9">CONST_VTBL</name> struct <name pos:line="890" pos:column="27">Debugger3Vtbl</name> <op:operator pos:line="890" pos:column="41">*</op:operator><name pos:line="890" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="895" pos:column="1">#<cpp:directive pos:line="895" pos:column="2">ifdef</cpp:directive> <name pos:line="895" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="898" pos:column="1">#<cpp:directive pos:line="898" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="898" pos:column="9">Debugger3_QueryInterface</name><parameter_list pos:line="898" pos:column="33">(<param><type><name pos:line="898" pos:column="34">This</name></type></param>,<param><type><name pos:line="898" pos:column="39">riid</name></type></param>,<param><type><name pos:line="898" pos:column="44">ppvObj</name></type></param>,<param><type><name pos:line="898" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="899" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="901" pos:column="1">#<cpp:directive pos:line="901" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="901" pos:column="9">Debugger3_AddRef</name><parameter_list pos:line="901" pos:column="25">(<param><type><name pos:line="901" pos:column="26">This</name></type></param>,<param><type><name pos:line="901" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="902" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="904" pos:column="1">#<cpp:directive pos:line="904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="904" pos:column="9">Debugger3_Release</name><parameter_list pos:line="904" pos:column="26">(<param><type><name pos:line="904" pos:column="27">This</name></type></param>,<param><type><name pos:line="904" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="905" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="907" pos:column="1">#<cpp:directive pos:line="907" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="907" pos:column="9">Debugger3_GetTypeInfoCount</name><parameter_list pos:line="907" pos:column="35">(<param><type><name pos:line="907" pos:column="36">This</name></type></param>,<param><type><name pos:line="907" pos:column="41">pctinfo</name></type></param>,<param><type><name pos:line="907" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="908" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="910" pos:column="1">#<cpp:directive pos:line="910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="910" pos:column="9">Debugger3_GetTypeInfo</name><parameter_list pos:line="910" pos:column="30">(<param><type><name pos:line="910" pos:column="31">This</name></type></param>,<param><type><name pos:line="910" pos:column="36">itinfo</name></type></param>,<param><type><name pos:line="910" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="910" pos:column="48">pptinfo</name></type></param>,<param><type><name pos:line="910" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="911" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="913" pos:column="1">#<cpp:directive pos:line="913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="913" pos:column="9">Debugger3_GetIDsOfNames</name><parameter_list pos:line="913" pos:column="32">(<param><type><name pos:line="913" pos:column="33">This</name></type></param>,<param><type><name pos:line="913" pos:column="38">riid</name></type></param>,<param><type><name pos:line="913" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="913" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="913" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="913" pos:column="65">rgdispid</name></type></param>,<param><type><name pos:line="913" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="914" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="916" pos:column="1">#<cpp:directive pos:line="916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="916" pos:column="9">Debugger3_Invoke</name><parameter_list pos:line="916" pos:column="25">(<param><type><name pos:line="916" pos:column="26">This</name></type></param>,<param><type><name pos:line="916" pos:column="31">dispidMember</name></type></param>,<param><type><name pos:line="916" pos:column="44">riid</name></type></param>,<param><type><name pos:line="916" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="916" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="916" pos:column="61">pdispparams</name></type></param>,<param><type><name pos:line="916" pos:column="73">pvarResult</name></type></param>,<param><type><name pos:line="916" pos:column="84">pexcepinfo</name></type></param>,<param><type><name pos:line="916" pos:column="95">puArgErr</name></type></param>,<param><type><name pos:line="916" pos:column="104">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="917" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="919" pos:column="1">#<cpp:directive pos:line="919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="919" pos:column="9">Debugger3_GetExpression</name><parameter_list pos:line="919" pos:column="32">(<param><type><name pos:line="919" pos:column="33">This</name></type></param>,<param><type><name pos:line="919" pos:column="38">ExpressionText</name></type></param>,<param><type><name pos:line="919" pos:column="53">UseAutoExpandRules</name></type></param>,<param><type><name pos:line="919" pos:column="72">Timeout</name></type></param>,<param><type><name pos:line="919" pos:column="80">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="920" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpression(This,ExpressionText,UseAutoExpandRules,Timeout,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="922" pos:column="9">Debugger3_DetachAll</name><parameter_list pos:line="922" pos:column="28">(<param><type><name pos:line="922" pos:column="29">This</name></type></param>,<param><type><name pos:line="922" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="923" pos:column="5">( (This)-&gt;lpVtbl -&gt; DetachAll(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="925" pos:column="1">#<cpp:directive pos:line="925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="925" pos:column="9">Debugger3_StepInto</name><parameter_list pos:line="925" pos:column="27">(<param><type><name pos:line="925" pos:column="28">This</name></type></param>,<param><type><name pos:line="925" pos:column="33">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="925" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="926" pos:column="5">( (This)-&gt;lpVtbl -&gt; StepInto(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="928" pos:column="1">#<cpp:directive pos:line="928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="928" pos:column="9">Debugger3_StepOver</name><parameter_list pos:line="928" pos:column="27">(<param><type><name pos:line="928" pos:column="28">This</name></type></param>,<param><type><name pos:line="928" pos:column="33">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="928" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="929" pos:column="5">( (This)-&gt;lpVtbl -&gt; StepOver(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="931" pos:column="1">#<cpp:directive pos:line="931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="931" pos:column="9">Debugger3_StepOut</name><parameter_list pos:line="931" pos:column="26">(<param><type><name pos:line="931" pos:column="27">This</name></type></param>,<param><type><name pos:line="931" pos:column="32">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="931" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="932" pos:column="5">( (This)-&gt;lpVtbl -&gt; StepOut(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="934" pos:column="1">#<cpp:directive pos:line="934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="934" pos:column="9">Debugger3_Go</name><parameter_list pos:line="934" pos:column="21">(<param><type><name pos:line="934" pos:column="22">This</name></type></param>,<param><type><name pos:line="934" pos:column="27">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="934" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="935" pos:column="5">( (This)-&gt;lpVtbl -&gt; Go(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="937" pos:column="1">#<cpp:directive pos:line="937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="937" pos:column="9">Debugger3_Break</name><parameter_list pos:line="937" pos:column="24">(<param><type><name pos:line="937" pos:column="25">This</name></type></param>,<param><type><name pos:line="937" pos:column="30">WaitForBreakMode</name></type></param>,<param><type><name pos:line="937" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="938" pos:column="5">( (This)-&gt;lpVtbl -&gt; Break(This,WaitForBreakMode,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="940" pos:column="1">#<cpp:directive pos:line="940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="940" pos:column="9">Debugger3_Stop</name><parameter_list pos:line="940" pos:column="23">(<param><type><name pos:line="940" pos:column="24">This</name></type></param>,<param><type><name pos:line="940" pos:column="29">WaitForDesignMode</name></type></param>,<param><type><name pos:line="940" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="941" pos:column="5">( (This)-&gt;lpVtbl -&gt; Stop(This,WaitForDesignMode,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="943" pos:column="1">#<cpp:directive pos:line="943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="943" pos:column="9">Debugger3_SetNextStatement</name><parameter_list pos:line="943" pos:column="35">(<param><type><name pos:line="943" pos:column="36">This</name></type></param>,<param><type><name pos:line="943" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="944" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetNextStatement(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="946" pos:column="1">#<cpp:directive pos:line="946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="946" pos:column="9">Debugger3_RunToCursor</name><parameter_list pos:line="946" pos:column="30">(<param><type><name pos:line="946" pos:column="31">This</name></type></param>,<param><type><name pos:line="946" pos:column="36">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="946" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="947" pos:column="5">( (This)-&gt;lpVtbl -&gt; RunToCursor(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="949" pos:column="1">#<cpp:directive pos:line="949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="949" pos:column="9">Debugger3_ExecuteStatement</name><parameter_list pos:line="949" pos:column="35">(<param><type><name pos:line="949" pos:column="36">This</name></type></param>,<param><type><name pos:line="949" pos:column="41">Statement</name></type></param>,<param><type><name pos:line="949" pos:column="51">Timeout</name></type></param>,<param><type><name pos:line="949" pos:column="59">TreatAsExpression</name></type></param>,<param><type><name pos:line="949" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="950" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExecuteStatement(This,Statement,Timeout,TreatAsExpression,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="952" pos:column="1">#<cpp:directive pos:line="952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="952" pos:column="9">Debugger3_get_Breakpoints</name><parameter_list pos:line="952" pos:column="34">(<param><type><name pos:line="952" pos:column="35">This</name></type></param>,<param><type><name pos:line="952" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="953" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Breakpoints(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="955" pos:column="1">#<cpp:directive pos:line="955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="955" pos:column="9">Debugger3_get_Languages</name><parameter_list pos:line="955" pos:column="32">(<param><type><name pos:line="955" pos:column="33">This</name></type></param>,<param><type><name pos:line="955" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="956" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Languages(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="958" pos:column="1">#<cpp:directive pos:line="958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="958" pos:column="9">Debugger3_get_CurrentMode</name><parameter_list pos:line="958" pos:column="34">(<param><type><name pos:line="958" pos:column="35">This</name></type></param>,<param><type><name pos:line="958" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="959" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="961" pos:column="1">#<cpp:directive pos:line="961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="961" pos:column="9">Debugger3_get_CurrentProcess</name><parameter_list pos:line="961" pos:column="37">(<param><type><name pos:line="961" pos:column="38">This</name></type></param>,<param><type><name pos:line="961" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="962" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentProcess(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="964" pos:column="1">#<cpp:directive pos:line="964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="964" pos:column="9">Debugger3_put_CurrentProcess</name><parameter_list pos:line="964" pos:column="37">(<param><type><name pos:line="964" pos:column="38">This</name></type></param>,<param><type><name pos:line="964" pos:column="43">noname</name></type></param>,<param><type><name pos:line="964" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="965" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentProcess(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="967" pos:column="1">#<cpp:directive pos:line="967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="967" pos:column="9">Debugger3_get_CurrentProgram</name><parameter_list pos:line="967" pos:column="37">(<param><type><name pos:line="967" pos:column="38">This</name></type></param>,<param><type><name pos:line="967" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="968" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentProgram(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="970" pos:column="1">#<cpp:directive pos:line="970" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="970" pos:column="9">Debugger3_put_CurrentProgram</name><parameter_list pos:line="970" pos:column="37">(<param><type><name pos:line="970" pos:column="38">This</name></type></param>,<param><type><name pos:line="970" pos:column="43">noname</name></type></param>,<param><type><name pos:line="970" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="971" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentProgram(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="973" pos:column="1">#<cpp:directive pos:line="973" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="973" pos:column="9">Debugger3_get_CurrentThread</name><parameter_list pos:line="973" pos:column="36">(<param><type><name pos:line="973" pos:column="37">This</name></type></param>,<param><type><name pos:line="973" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="974" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentThread(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="976" pos:column="1">#<cpp:directive pos:line="976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="976" pos:column="9">Debugger3_put_CurrentThread</name><parameter_list pos:line="976" pos:column="36">(<param><type><name pos:line="976" pos:column="37">This</name></type></param>,<param><type><name pos:line="976" pos:column="42">noname</name></type></param>,<param><type><name pos:line="976" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="977" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentThread(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="979" pos:column="1">#<cpp:directive pos:line="979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="979" pos:column="9">Debugger3_get_CurrentStackFrame</name><parameter_list pos:line="979" pos:column="40">(<param><type><name pos:line="979" pos:column="41">This</name></type></param>,<param><type><name pos:line="979" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="980" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentStackFrame(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="982" pos:column="1">#<cpp:directive pos:line="982" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="982" pos:column="9">Debugger3_put_CurrentStackFrame</name><parameter_list pos:line="982" pos:column="40">(<param><type><name pos:line="982" pos:column="41">This</name></type></param>,<param><type><name pos:line="982" pos:column="46">noname</name></type></param>,<param><type><name pos:line="982" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="983" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentStackFrame(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="985" pos:column="1">#<cpp:directive pos:line="985" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="985" pos:column="9">Debugger3_get_HexDisplayMode</name><parameter_list pos:line="985" pos:column="37">(<param><type><name pos:line="985" pos:column="38">This</name></type></param>,<param><type><name pos:line="985" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="986" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HexDisplayMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="988" pos:column="1">#<cpp:directive pos:line="988" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="988" pos:column="9">Debugger3_put_HexDisplayMode</name><parameter_list pos:line="988" pos:column="37">(<param><type><name pos:line="988" pos:column="38">This</name></type></param>,<param><type><name pos:line="988" pos:column="43">noname</name></type></param>,<param><type><name pos:line="988" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="989" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_HexDisplayMode(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="991" pos:column="1">#<cpp:directive pos:line="991" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="991" pos:column="9">Debugger3_get_HexInputMode</name><parameter_list pos:line="991" pos:column="35">(<param><type><name pos:line="991" pos:column="36">This</name></type></param>,<param><type><name pos:line="991" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="992" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HexInputMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="994" pos:column="1">#<cpp:directive pos:line="994" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="994" pos:column="9">Debugger3_put_HexInputMode</name><parameter_list pos:line="994" pos:column="35">(<param><type><name pos:line="994" pos:column="36">This</name></type></param>,<param><type><name pos:line="994" pos:column="41">noname</name></type></param>,<param><type><name pos:line="994" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="995" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_HexInputMode(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="997" pos:column="1">#<cpp:directive pos:line="997" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="997" pos:column="9">Debugger3_get_LastBreakReason</name><parameter_list pos:line="997" pos:column="38">(<param><type><name pos:line="997" pos:column="39">This</name></type></param>,<param><type><name pos:line="997" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="998" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LastBreakReason(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1000" pos:column="1">#<cpp:directive pos:line="1000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1000" pos:column="9">Debugger3_get_BreakpointLastHit</name><parameter_list pos:line="1000" pos:column="40">(<param><type><name pos:line="1000" pos:column="41">This</name></type></param>,<param><type><name pos:line="1000" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1001" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BreakpointLastHit(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1003" pos:column="1">#<cpp:directive pos:line="1003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1003" pos:column="9">Debugger3_get_AllBreakpointsLastHit</name><parameter_list pos:line="1003" pos:column="44">(<param><type><name pos:line="1003" pos:column="45">This</name></type></param>,<param><type><name pos:line="1003" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1004" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AllBreakpointsLastHit(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1006" pos:column="1">#<cpp:directive pos:line="1006" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1006" pos:column="9">Debugger3_get_DebuggedProcesses</name><parameter_list pos:line="1006" pos:column="40">(<param><type><name pos:line="1006" pos:column="41">This</name></type></param>,<param><type><name pos:line="1006" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1007" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggedProcesses(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1009" pos:column="1">#<cpp:directive pos:line="1009" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1009" pos:column="9">Debugger3_get_LocalProcesses</name><parameter_list pos:line="1009" pos:column="37">(<param><type><name pos:line="1009" pos:column="38">This</name></type></param>,<param><type><name pos:line="1009" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1010" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LocalProcesses(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1012" pos:column="1">#<cpp:directive pos:line="1012" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1012" pos:column="9">Debugger3_get_DTE</name><parameter_list pos:line="1012" pos:column="26">(<param><type><name pos:line="1012" pos:column="27">This</name></type></param>,<param><type><name pos:line="1012" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1013" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1015" pos:column="1">#<cpp:directive pos:line="1015" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1015" pos:column="9">Debugger3_get_Parent</name><parameter_list pos:line="1015" pos:column="29">(<param><type><name pos:line="1015" pos:column="30">This</name></type></param>,<param><type><name pos:line="1015" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1016" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1018" pos:column="1">#<cpp:directive pos:line="1018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1018" pos:column="9">Debugger3_TerminateAll</name><parameter_list pos:line="1018" pos:column="31">(<param><type><name pos:line="1018" pos:column="32">This</name></type></param>,<param><type><name pos:line="1018" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1019" pos:column="5">( (This)-&gt;lpVtbl -&gt; TerminateAll(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1021" pos:column="1">#<cpp:directive pos:line="1021" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1021" pos:column="9">Debugger3_WriteMinidump</name><parameter_list pos:line="1021" pos:column="32">(<param><type><name pos:line="1021" pos:column="33">This</name></type></param>,<param><type><name pos:line="1021" pos:column="38">FileName</name></type></param>,<param><type><name pos:line="1021" pos:column="47">Option</name></type></param>,<param><type><name pos:line="1021" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1022" pos:column="5">( (This)-&gt;lpVtbl -&gt; WriteMinidump(This,FileName,Option,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1024" pos:column="1">#<cpp:directive pos:line="1024" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1024" pos:column="9">Debugger3_GetProcesses</name><parameter_list pos:line="1024" pos:column="31">(<param><type><name pos:line="1024" pos:column="32">This</name></type></param>,<param><type><name pos:line="1024" pos:column="37">pTransport</name></type></param>,<param><type><name pos:line="1024" pos:column="48">TransportQualifier</name></type></param>,<param><type><name pos:line="1024" pos:column="67">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1025" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcesses(This,pTransport,TransportQualifier,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1027" pos:column="1">#<cpp:directive pos:line="1027" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1027" pos:column="9">Debugger3_GetExpression2</name><parameter_list pos:line="1027" pos:column="33">(<param><type><name pos:line="1027" pos:column="34">This</name></type></param>,<param><type><name pos:line="1027" pos:column="39">ExpressionText</name></type></param>,<param><type><name pos:line="1027" pos:column="54">UseAutoExpandRules</name></type></param>,<param><type><name pos:line="1027" pos:column="73">TreatAsStatement</name></type></param>,<param><type><name pos:line="1027" pos:column="90">Timeout</name></type></param>,<param><type><name pos:line="1027" pos:column="98">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1028" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpression2(This,ExpressionText,UseAutoExpandRules,TreatAsStatement,Timeout,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1030" pos:column="1">#<cpp:directive pos:line="1030" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1030" pos:column="9">Debugger3_get_Transports</name><parameter_list pos:line="1030" pos:column="33">(<param><type><name pos:line="1030" pos:column="34">This</name></type></param>,<param><type><name pos:line="1030" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1031" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Transports(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="1034" pos:column="1">#<cpp:directive pos:line="1034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1034" pos:column="9">Debugger3_get_ForceContinue</name><parameter_list pos:line="1034" pos:column="36">(<param><type><name pos:line="1034" pos:column="37">This</name></type></param>,<param><type><name pos:line="1034" pos:column="42">ForceContinue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1035" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ForceContinue(This,ForceContinue) )</cpp:value></cpp:define> 

<cpp:define pos:line="1037" pos:column="1">#<cpp:directive pos:line="1037" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1037" pos:column="9">Debugger3_put_ForceContinue</name><parameter_list pos:line="1037" pos:column="36">(<param><type><name pos:line="1037" pos:column="37">This</name></type></param>,<param><type><name pos:line="1037" pos:column="42">ForceContinue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1038" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ForceContinue(This,ForceContinue) )</cpp:value></cpp:define> 

<cpp:define pos:line="1040" pos:column="1">#<cpp:directive pos:line="1040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1040" pos:column="9">Debugger3_get_ExceptionGroups</name><parameter_list pos:line="1040" pos:column="38">(<param><type><name pos:line="1040" pos:column="39">This</name></type></param>,<param><type><name pos:line="1040" pos:column="44">ExceptionGroups</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1041" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExceptionGroups(This,ExceptionGroups) )</cpp:value></cpp:define> 

<cpp:define pos:line="1043" pos:column="1">#<cpp:directive pos:line="1043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1043" pos:column="9">Debugger3_get_SymbolPath</name><parameter_list pos:line="1043" pos:column="33">(<param><type><name pos:line="1043" pos:column="34">This</name></type></param>,<param><type><name pos:line="1043" pos:column="39">SymbolPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1044" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SymbolPath(This,SymbolPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="1046" pos:column="1">#<cpp:directive pos:line="1046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1046" pos:column="9">Debugger3_get_SymbolPathState</name><parameter_list pos:line="1046" pos:column="38">(<param><type><name pos:line="1046" pos:column="39">This</name></type></param>,<param><type><name pos:line="1046" pos:column="44">SymbolPathState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1047" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SymbolPathState(This,SymbolPathState) )</cpp:value></cpp:define> 

<cpp:define pos:line="1049" pos:column="1">#<cpp:directive pos:line="1049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1049" pos:column="9">Debugger3_get_SymbolCachePath</name><parameter_list pos:line="1049" pos:column="38">(<param><type><name pos:line="1049" pos:column="39">This</name></type></param>,<param><type><name pos:line="1049" pos:column="44">SymbolCachePath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1050" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SymbolCachePath(This,SymbolCachePath) )</cpp:value></cpp:define> 

<cpp:define pos:line="1052" pos:column="1">#<cpp:directive pos:line="1052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1052" pos:column="9">Debugger3_get_OnlyLoadSymbolsManually</name><parameter_list pos:line="1052" pos:column="46">(<param><type><name pos:line="1052" pos:column="47">This</name></type></param>,<param><type><name pos:line="1052" pos:column="52">OnlyLoadSymbolsManually</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1053" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_OnlyLoadSymbolsManually(This,OnlyLoadSymbolsManually) )</cpp:value></cpp:define> 

<cpp:define pos:line="1055" pos:column="1">#<cpp:directive pos:line="1055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1055" pos:column="9">Debugger3_SetSymbolSettings</name><parameter_list pos:line="1055" pos:column="36">(<param><type><name pos:line="1055" pos:column="37">This</name></type></param>,<param><type><name pos:line="1055" pos:column="42">SymbolPath</name></type></param>,<param><type><name pos:line="1055" pos:column="53">SymbolPathState</name></type></param>,<param><type><name pos:line="1055" pos:column="69">SymbolCachePath</name></type></param>,<param><type><name pos:line="1055" pos:column="85">OnlyLoadSymbolsManually</name></type></param>,<param><type><name pos:line="1055" pos:column="109">LoadSymbolsNow</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1056" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSymbolSettings(This,SymbolPath,SymbolPathState,SymbolCachePath,OnlyLoadSymbolsManually,LoadSymbolsNow) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1058" pos:column="1">#<cpp:directive pos:line="1058" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1058" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1061" pos:column="1">#<cpp:directive pos:line="1061" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1061" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1066" pos:column="1">#<cpp:directive pos:line="1066" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1066" pos:column="9">/* __Debugger3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1069" pos:column="1">#<cpp:directive pos:line="1069" pos:column="2">ifndef</cpp:directive> <name pos:line="1069" pos:column="9">__Thread2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1070" pos:column="1">#<cpp:directive pos:line="1070" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1070" pos:column="9">__Thread2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1072" pos:column="1">/* interface Thread2 */</comment>
<comment type="block" pos:line="1073" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1076" pos:column="1">EXTERN_C</name> <specifier pos:line="1076" pos:column="10">const</specifier> <name pos:line="1076" pos:column="16">IID</name></type> <name pos:line="1076" pos:column="20">IID_Thread2</name></decl>;</decl_stmt>

<cpp:if pos:line="1078" pos:column="1">#<cpp:directive pos:line="1078" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1078" pos:column="5">defined</name><argument_list pos:line="1078" pos:column="12">(<argument><expr><name pos:line="1078" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1078" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1078" pos:column="29">!</op:operator><call><name pos:line="1078" pos:column="30">defined</name><argument_list pos:line="1078" pos:column="37">(<argument><expr><name pos:line="1078" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1080" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1080" pos:column="19">(<argument pos:line="1080" pos:column="20">"86FD0779-FBBE-41cc-B444-6EE8676F4F2C"</argument>)</argument_list></macro>
    <label><name pos:line="1081" pos:column="5">Thread2</name> :</label> <expr_stmt><expr pos:line="1081" pos:column="15">public <name pos:line="1081" pos:column="22">Thread</name>
    <block pos:line="1082" pos:column="5">{
    <expr pos:line="1083" pos:column="5">public<op:operator pos:line="1083" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1084" pos:column="17">/* [propget][id] */</comment> <name pos:line="1084" pos:column="37">HRESULT</name> <name pos:line="1084" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1084" pos:column="63">get_Flag</name><argument_list pos:line="1084" pos:column="71">( 
            <comment type="block" pos:line="1085" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1085" pos:column="33">__RPC__out VARIANT_BOOL *Flag</argument>)</argument_list></macro> <op:operator pos:line="1085" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="1085" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="1087" pos:column="9">virtual <comment type="block" pos:line="1087" pos:column="17">/* [propput][id] */</comment> <name pos:line="1087" pos:column="37">HRESULT</name> <name pos:line="1087" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1087" pos:column="63">put_Flag</name><argument_list pos:line="1087" pos:column="71">( 
            <comment type="block" pos:line="1088" pos:column="13">/* [in] */</comment> <argument pos:line="1088" pos:column="24">VARIANT_BOOL Flag</argument>)</argument_list></macro> <op:operator pos:line="1088" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="1088" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="1090" pos:column="9">virtual <comment type="block" pos:line="1090" pos:column="17">/* [propput][id] */</comment> <name pos:line="1090" pos:column="37">HRESULT</name> <name pos:line="1090" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1090" pos:column="63">put_DisplayName</name><argument_list pos:line="1090" pos:column="78">( 
            <comment type="block" pos:line="1091" pos:column="13">/* [in] */</comment> <argument pos:line="1091" pos:column="24">__RPC__in BSTR bstrName</argument>)</argument_list></macro> <op:operator pos:line="1091" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="1091" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="1093" pos:column="9">virtual <comment type="block" pos:line="1093" pos:column="17">/* [propget][id] */</comment> <name pos:line="1093" pos:column="37">HRESULT</name> <name pos:line="1093" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1093" pos:column="63">get_DisplayName</name><argument_list pos:line="1093" pos:column="78">( 
            <comment type="block" pos:line="1094" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1094" pos:column="33">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="1094" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1094" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1096" pos:column="9">virtual <comment type="block" pos:line="1096" pos:column="17">/* [propget][id] */</comment> <name pos:line="1096" pos:column="37">HRESULT</name> <name pos:line="1096" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1096" pos:column="63">get_Category</name><argument_list pos:line="1096" pos:column="75">( 
            <comment type="block" pos:line="1097" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1097" pos:column="33">__RPC__out THREADCATEGORY *pCategory</argument>)</argument_list></macro> <op:operator pos:line="1097" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1097" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1101" pos:column="1">#<cpp:directive pos:line="1101" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1101" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1103" pos:column="5">typedef <type><struct pos:line="1103" pos:column="13">struct <name pos:line="1103" pos:column="20">Thread2Vtbl</name>
    <block pos:line="1104" pos:column="5">{<public type="default" pos:line="1104" pos:column="6">
        <decl_stmt><decl><type><name pos:line="1105" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="1107" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="1107" pos:column="46">HRESULT</name></type> ( <name pos:line="1107" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1107" pos:column="74">*</type:modifier><name pos:line="1107" pos:column="75">QueryInterface</name> )<parameter_list pos:line="1107" pos:column="91">( 
            <param><decl><type><name pos:line="1108" pos:column="13">Thread2</name> <type:modifier pos:line="1108" pos:column="21">*</type:modifier></type> <name pos:line="1108" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1109" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="1109" pos:column="47">struct <name pos:line="1109" pos:column="54">GUID</name> <type:modifier pos:line="1109" pos:column="59">*</type:modifier></type><name pos:line="1109" pos:column="60">riid</name></decl><op:operator pos:line="1109" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1110" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1110" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1110" pos:column="59">void</name> <type:modifier pos:line="1110" pos:column="64">*</type:modifier><type:modifier pos:line="1110" pos:column="65">*</type:modifier><name pos:line="1110" pos:column="66">ppvObj</name><op:operator pos:line="1110" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1111" pos:column="13">/* [retval][out] */</comment> <name pos:line="1111" pos:column="33">__RPC__out</name> <name pos:line="1111" pos:column="44">void</name> <type:modifier pos:line="1111" pos:column="49">*</type:modifier><name pos:line="1111" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="1113" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1113" pos:column="46">HRESULT</name></type> ( <name pos:line="1113" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1113" pos:column="74">*</type:modifier><name pos:line="1113" pos:column="75">AddRef</name> )<parameter_list pos:line="1113" pos:column="83">( 
            <param><decl><type><name pos:line="1114" pos:column="13">Thread2</name> <type:modifier pos:line="1114" pos:column="21">*</type:modifier></type> <name pos:line="1114" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1115" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1115" pos:column="33">__RPC__out</name> <name pos:line="1115" pos:column="44">unsigned</name> <name pos:line="1115" pos:column="53">long</name> <type:modifier pos:line="1115" pos:column="58">*</type:modifier></type><name pos:line="1115" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1117" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1117" pos:column="46">HRESULT</name></type> ( <name pos:line="1117" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1117" pos:column="74">*</type:modifier><name pos:line="1117" pos:column="75">Release</name> )<parameter_list pos:line="1117" pos:column="84">( 
            <param><decl><type><name pos:line="1118" pos:column="13">Thread2</name> <type:modifier pos:line="1118" pos:column="21">*</type:modifier></type> <name pos:line="1118" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1119" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1119" pos:column="33">__RPC__out</name> <name pos:line="1119" pos:column="44">unsigned</name> <name pos:line="1119" pos:column="53">long</name> <type:modifier pos:line="1119" pos:column="58">*</type:modifier></type><name pos:line="1119" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1121" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1121" pos:column="46">HRESULT</name></type> ( <name pos:line="1121" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1121" pos:column="74">*</type:modifier><name pos:line="1121" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="1121" pos:column="93">( 
            <param><decl><type><name pos:line="1122" pos:column="13">Thread2</name> <type:modifier pos:line="1122" pos:column="21">*</type:modifier></type> <name pos:line="1122" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1123" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1123" pos:column="38">__RPC__out</name> <name pos:line="1123" pos:column="49">unsigned</name> <name pos:line="1123" pos:column="58">UINT</name> <type:modifier pos:line="1123" pos:column="63">*</type:modifier></type><name pos:line="1123" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="1124" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1124" pos:column="33">__RPC__out</name> <name pos:line="1124" pos:column="44">void</name> <type:modifier pos:line="1124" pos:column="49">*</type:modifier></type><name pos:line="1124" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1126" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1126" pos:column="46">HRESULT</name></type> ( <name pos:line="1126" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1126" pos:column="74">*</type:modifier><name pos:line="1126" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="1126" pos:column="88">( 
            <param><decl><type><name pos:line="1127" pos:column="13">Thread2</name> <type:modifier pos:line="1127" pos:column="21">*</type:modifier></type> <name pos:line="1127" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1128" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1128" pos:column="37">unsigned</name> <name pos:line="1128" pos:column="46">UINT</name></type> <name pos:line="1128" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="1129" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1129" pos:column="37">unsigned</name> <name pos:line="1129" pos:column="46">long</name></type> <name pos:line="1129" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="1130" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1130" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1130" pos:column="59">void</name> <type:modifier pos:line="1130" pos:column="64">*</type:modifier><type:modifier pos:line="1130" pos:column="65">*</type:modifier></type><name pos:line="1130" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="1131" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1131" pos:column="33">__RPC__out</name> <name pos:line="1131" pos:column="44">void</name> <type:modifier pos:line="1131" pos:column="49">*</type:modifier></type><name pos:line="1131" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1133" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="1133" pos:column="46">HRESULT</name> <argument_list pos:line="1133" pos:column="54">( <argument pos:line="1133" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1133" pos:column="90">(</op:operator> 
            <name pos:line="1134" pos:column="13">Thread2</name> <op:operator pos:line="1134" pos:column="21">*</op:operator> <name pos:line="1134" pos:column="23">This</name><op:operator pos:line="1134" pos:column="27">,</op:operator>
            <comment type="block" pos:line="1135" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1135" pos:column="37">__RPC__in</name> struct <name pos:line="1135" pos:column="54">GUID</name> <op:operator pos:line="1135" pos:column="59">*</op:operator><name pos:line="1135" pos:column="60">riid</name><op:operator pos:line="1135" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1136" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1136" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="1136" pos:column="57">signed</name> <name pos:line="1136" pos:column="64">char</name> <op:operator pos:line="1136" pos:column="69">*</op:operator><op:operator pos:line="1136" pos:column="70">*</op:operator><name pos:line="1136" pos:column="71">rgszNames</name><op:operator pos:line="1136" pos:column="80">,</op:operator>
            <comment type="block" pos:line="1137" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1137" pos:column="37">unsigned</name> <name pos:line="1137" pos:column="46">UINT</name> <name pos:line="1137" pos:column="51">cNames</name><op:operator pos:line="1137" pos:column="57">,</op:operator>
            <comment type="block" pos:line="1138" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1138" pos:column="37">unsigned</name> <name pos:line="1138" pos:column="46">long</name> <name pos:line="1138" pos:column="51">lcid</name><op:operator pos:line="1138" pos:column="55">,</op:operator>
            <comment type="block" pos:line="1139" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1139" pos:column="38">__RPC__out</name> <name pos:line="1139" pos:column="49">signed</name> <name pos:line="1139" pos:column="56">long</name> <op:operator pos:line="1139" pos:column="61">*</op:operator><name pos:line="1139" pos:column="62">rgdispid</name><op:operator pos:line="1139" pos:column="70">,</op:operator>
            <comment type="block" pos:line="1140" pos:column="13">/* [retval][out] */</comment> <name pos:line="1140" pos:column="33">__RPC__out</name> <name pos:line="1140" pos:column="44">void</name> <op:operator pos:line="1140" pos:column="49">*</op:operator><name pos:line="1140" pos:column="50">retval</name><op:operator pos:line="1140" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1142" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="1142" pos:column="46">HRESULT</name> <argument_list pos:line="1142" pos:column="54">( <argument pos:line="1142" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1142" pos:column="83">(</op:operator> 
            <name pos:line="1143" pos:column="13">Thread2</name> <op:operator pos:line="1143" pos:column="21">*</op:operator> <name pos:line="1143" pos:column="23">This</name><op:operator pos:line="1143" pos:column="27">,</op:operator>
            <comment type="block" pos:line="1144" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1144" pos:column="37">signed</name> <name pos:line="1144" pos:column="44">long</name> <name pos:line="1144" pos:column="49">dispidMember</name><op:operator pos:line="1144" pos:column="61">,</op:operator>
            <comment type="block" pos:line="1145" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1145" pos:column="37">__RPC__in</name> struct <name pos:line="1145" pos:column="54">GUID</name> <op:operator pos:line="1145" pos:column="59">*</op:operator><name pos:line="1145" pos:column="60">riid</name><op:operator pos:line="1145" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1146" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1146" pos:column="37">unsigned</name> <name pos:line="1146" pos:column="46">long</name> <name pos:line="1146" pos:column="51">lcid</name><op:operator pos:line="1146" pos:column="55">,</op:operator>
            <comment type="block" pos:line="1147" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1147" pos:column="37">unsigned</name> <name pos:line="1147" pos:column="46">short</name> <name pos:line="1147" pos:column="52">wFlags</name><op:operator pos:line="1147" pos:column="58">,</op:operator>
            <comment type="block" pos:line="1148" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1148" pos:column="37">__RPC__in</name> struct <name pos:line="1148" pos:column="54">DISPPARAMS</name> <op:operator pos:line="1148" pos:column="65">*</op:operator><name pos:line="1148" pos:column="66">pdispparams</name><op:operator pos:line="1148" pos:column="77">,</op:operator>
            <comment type="block" pos:line="1149" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1149" pos:column="38">__RPC__out</name> <name pos:line="1149" pos:column="49">VARIANT</name> <op:operator pos:line="1149" pos:column="57">*</op:operator><name pos:line="1149" pos:column="58">pvarResult</name><op:operator pos:line="1149" pos:column="68">,</op:operator>
            <comment type="block" pos:line="1150" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1150" pos:column="38">__RPC__out</name> struct <name pos:line="1150" pos:column="56">EXCEPINFO</name> <op:operator pos:line="1150" pos:column="66">*</op:operator><name pos:line="1150" pos:column="67">pexcepinfo</name><op:operator pos:line="1150" pos:column="77">,</op:operator>
            <comment type="block" pos:line="1151" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1151" pos:column="38">__RPC__out</name> <name pos:line="1151" pos:column="49">unsigned</name> <name pos:line="1151" pos:column="58">UINT</name> <op:operator pos:line="1151" pos:column="63">*</op:operator><name pos:line="1151" pos:column="64">puArgErr</name><op:operator pos:line="1151" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1152" pos:column="13">/* [retval][out] */</comment> <name pos:line="1152" pos:column="33">__RPC__out</name> <name pos:line="1152" pos:column="44">void</name> <op:operator pos:line="1152" pos:column="49">*</op:operator><name pos:line="1152" pos:column="50">retval</name><op:operator pos:line="1152" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1154" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1154" pos:column="34">HRESULT</name></type> ( <name pos:line="1154" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1154" pos:column="62">*</type:modifier><name pos:line="1154" pos:column="63">Freeze</name> )<parameter_list pos:line="1154" pos:column="71">( 
            <param><decl><type><name pos:line="1155" pos:column="13">Thread2</name> <type:modifier pos:line="1155" pos:column="21">*</type:modifier></type> <name pos:line="1155" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1156" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1156" pos:column="33">__RPC__out</name> <name pos:line="1156" pos:column="44">void</name> <type:modifier pos:line="1156" pos:column="49">*</type:modifier></type><name pos:line="1156" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1158" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1158" pos:column="34">HRESULT</name></type> ( <name pos:line="1158" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1158" pos:column="62">*</type:modifier><name pos:line="1158" pos:column="63">Thaw</name> )<parameter_list pos:line="1158" pos:column="69">( 
            <param><decl><type><name pos:line="1159" pos:column="13">Thread2</name> <type:modifier pos:line="1159" pos:column="21">*</type:modifier></type> <name pos:line="1159" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1160" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1160" pos:column="33">__RPC__out</name> <name pos:line="1160" pos:column="44">void</name> <type:modifier pos:line="1160" pos:column="49">*</type:modifier></type><name pos:line="1160" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1162" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1162" pos:column="43">HRESULT</name></type> ( <name pos:line="1162" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1162" pos:column="71">*</type:modifier><name pos:line="1162" pos:column="72">get_Name</name> )<parameter_list pos:line="1162" pos:column="82">( 
            <param><decl><type><name pos:line="1163" pos:column="13">Thread2</name> <type:modifier pos:line="1163" pos:column="21">*</type:modifier></type> <name pos:line="1163" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1164" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1164" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1164" pos:column="54">BSTR</name> <type:modifier pos:line="1164" pos:column="59">*</type:modifier></type><name pos:line="1164" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1166" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1166" pos:column="43">HRESULT</name></type> ( <name pos:line="1166" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1166" pos:column="71">*</type:modifier><name pos:line="1166" pos:column="72">get_SuspendCount</name> )<parameter_list pos:line="1166" pos:column="90">( 
            <param><decl><type><name pos:line="1167" pos:column="13">Thread2</name> <type:modifier pos:line="1167" pos:column="21">*</type:modifier></type> <name pos:line="1167" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1168" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1168" pos:column="33">__RPC__out</name> <name pos:line="1168" pos:column="44">signed</name> <name pos:line="1168" pos:column="51">long</name> <type:modifier pos:line="1168" pos:column="56">*</type:modifier></type><name pos:line="1168" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1170" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1170" pos:column="43">HRESULT</name></type> ( <name pos:line="1170" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1170" pos:column="71">*</type:modifier><name pos:line="1170" pos:column="72">get_ID</name> )<parameter_list pos:line="1170" pos:column="80">( 
            <param><decl><type><name pos:line="1171" pos:column="13">Thread2</name> <type:modifier pos:line="1171" pos:column="21">*</type:modifier></type> <name pos:line="1171" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1172" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1172" pos:column="33">__RPC__out</name> <name pos:line="1172" pos:column="44">signed</name> <name pos:line="1172" pos:column="51">long</name> <type:modifier pos:line="1172" pos:column="56">*</type:modifier></type><name pos:line="1172" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1174" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1174" pos:column="43">HRESULT</name></type> ( <name pos:line="1174" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1174" pos:column="71">*</type:modifier><name pos:line="1174" pos:column="72">get_StackFrames</name> )<parameter_list pos:line="1174" pos:column="89">( 
            <param><decl><type><name pos:line="1175" pos:column="13">Thread2</name> <type:modifier pos:line="1175" pos:column="21">*</type:modifier></type> <name pos:line="1175" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1176" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1176" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1176" pos:column="54">StackFrames</name> <type:modifier pos:line="1176" pos:column="66">*</type:modifier><type:modifier pos:line="1176" pos:column="67">*</type:modifier></type><name pos:line="1176" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1178" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1178" pos:column="43">HRESULT</name></type> ( <name pos:line="1178" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1178" pos:column="71">*</type:modifier><name pos:line="1178" pos:column="72">get_Program</name> )<parameter_list pos:line="1178" pos:column="85">( 
            <param><decl><type><name pos:line="1179" pos:column="13">Thread2</name> <type:modifier pos:line="1179" pos:column="21">*</type:modifier></type> <name pos:line="1179" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1180" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1180" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1180" pos:column="54">Program</name> <type:modifier pos:line="1180" pos:column="62">*</type:modifier><type:modifier pos:line="1180" pos:column="63">*</type:modifier></type><name pos:line="1180" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1182" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1182" pos:column="43">HRESULT</name></type> ( <name pos:line="1182" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1182" pos:column="71">*</type:modifier><name pos:line="1182" pos:column="72">get_IsAlive</name> )<parameter_list pos:line="1182" pos:column="85">( 
            <param><decl><type><name pos:line="1183" pos:column="13">Thread2</name> <type:modifier pos:line="1183" pos:column="21">*</type:modifier></type> <name pos:line="1183" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1184" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1184" pos:column="33">__RPC__out</name> <name pos:line="1184" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1184" pos:column="52">*</type:modifier></type><name pos:line="1184" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1186" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1186" pos:column="43">HRESULT</name></type> ( <name pos:line="1186" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1186" pos:column="71">*</type:modifier><name pos:line="1186" pos:column="72">get_Priority</name> )<parameter_list pos:line="1186" pos:column="86">( 
            <param><decl><type><name pos:line="1187" pos:column="13">Thread2</name> <type:modifier pos:line="1187" pos:column="21">*</type:modifier></type> <name pos:line="1187" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1188" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1188" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1188" pos:column="54">BSTR</name> <type:modifier pos:line="1188" pos:column="59">*</type:modifier></type><name pos:line="1188" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1190" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1190" pos:column="43">HRESULT</name></type> ( <name pos:line="1190" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1190" pos:column="71">*</type:modifier><name pos:line="1190" pos:column="72">get_Location</name> )<parameter_list pos:line="1190" pos:column="86">( 
            <param><decl><type><name pos:line="1191" pos:column="13">Thread2</name> <type:modifier pos:line="1191" pos:column="21">*</type:modifier></type> <name pos:line="1191" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1192" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1192" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1192" pos:column="54">BSTR</name> <type:modifier pos:line="1192" pos:column="59">*</type:modifier></type><name pos:line="1192" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1194" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1194" pos:column="43">HRESULT</name></type> ( <name pos:line="1194" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1194" pos:column="71">*</type:modifier><name pos:line="1194" pos:column="72">get_IsFrozen</name> )<parameter_list pos:line="1194" pos:column="86">( 
            <param><decl><type><name pos:line="1195" pos:column="13">Thread2</name> <type:modifier pos:line="1195" pos:column="21">*</type:modifier></type> <name pos:line="1195" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1196" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1196" pos:column="33">__RPC__out</name> <name pos:line="1196" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1196" pos:column="52">*</type:modifier></type><name pos:line="1196" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1198" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1198" pos:column="43">HRESULT</name></type> ( <name pos:line="1198" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1198" pos:column="71">*</type:modifier><name pos:line="1198" pos:column="72">get_DTE</name> )<parameter_list pos:line="1198" pos:column="81">( 
            <param><decl><type><name pos:line="1199" pos:column="13">Thread2</name> <type:modifier pos:line="1199" pos:column="21">*</type:modifier></type> <name pos:line="1199" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1200" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1200" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="1200" pos:column="54">*</type:modifier><type:modifier pos:line="1200" pos:column="55">*</type:modifier></type><name pos:line="1200" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1202" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1202" pos:column="43">HRESULT</name></type> ( <name pos:line="1202" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1202" pos:column="71">*</type:modifier><name pos:line="1202" pos:column="72">get_Parent</name> )<parameter_list pos:line="1202" pos:column="84">( 
            <param><decl><type><name pos:line="1203" pos:column="13">Thread2</name> <type:modifier pos:line="1203" pos:column="21">*</type:modifier></type> <name pos:line="1203" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1204" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1204" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1204" pos:column="54">Debugger</name> <type:modifier pos:line="1204" pos:column="63">*</type:modifier><type:modifier pos:line="1204" pos:column="64">*</type:modifier></type><name pos:line="1204" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1206" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1206" pos:column="43">HRESULT</name></type> ( <name pos:line="1206" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1206" pos:column="71">*</type:modifier><name pos:line="1206" pos:column="72">get_Collection</name> )<parameter_list pos:line="1206" pos:column="88">( 
            <param><decl><type><name pos:line="1207" pos:column="13">Thread2</name> <type:modifier pos:line="1207" pos:column="21">*</type:modifier></type> <name pos:line="1207" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1208" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1208" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1208" pos:column="54">Threads</name> <type:modifier pos:line="1208" pos:column="62">*</type:modifier><type:modifier pos:line="1208" pos:column="63">*</type:modifier></type><name pos:line="1208" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1210" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1210" pos:column="29">HRESULT</name></type> ( <name pos:line="1210" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1210" pos:column="57">*</type:modifier><name pos:line="1210" pos:column="58">get_Flag</name> )<parameter_list pos:line="1210" pos:column="68">( 
            <param><decl><type><name pos:line="1211" pos:column="13">Thread2</name> <type:modifier pos:line="1211" pos:column="21">*</type:modifier></type> <name pos:line="1211" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1212" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1212" pos:column="33">__RPC__out</name> <name pos:line="1212" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1212" pos:column="57">*</type:modifier></type><name pos:line="1212" pos:column="58">Flag</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1214" pos:column="9">/* [propput][id] */</comment> <function_decl><type><name pos:line="1214" pos:column="29">HRESULT</name></type> ( <name pos:line="1214" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1214" pos:column="57">*</type:modifier><name pos:line="1214" pos:column="58">put_Flag</name> )<parameter_list pos:line="1214" pos:column="68">( 
            <param><decl><type><name pos:line="1215" pos:column="13">Thread2</name> <type:modifier pos:line="1215" pos:column="21">*</type:modifier></type> <name pos:line="1215" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1216" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1216" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="1216" pos:column="37">Flag</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1218" pos:column="9">/* [propput][id] */</comment> <function_decl><type><name pos:line="1218" pos:column="29">HRESULT</name></type> ( <name pos:line="1218" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1218" pos:column="57">*</type:modifier><name pos:line="1218" pos:column="58">put_DisplayName</name> )<parameter_list pos:line="1218" pos:column="75">( 
            <param><decl><type><name pos:line="1219" pos:column="13">Thread2</name> <type:modifier pos:line="1219" pos:column="21">*</type:modifier></type> <name pos:line="1219" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1220" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1220" pos:column="24">__RPC__in</name> <name pos:line="1220" pos:column="34">BSTR</name></type> <name pos:line="1220" pos:column="39">bstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1222" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1222" pos:column="29">HRESULT</name></type> ( <name pos:line="1222" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1222" pos:column="57">*</type:modifier><name pos:line="1222" pos:column="58">get_DisplayName</name> )<parameter_list pos:line="1222" pos:column="75">( 
            <param><decl><type><name pos:line="1223" pos:column="13">Thread2</name> <type:modifier pos:line="1223" pos:column="21">*</type:modifier></type> <name pos:line="1223" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1224" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1224" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1224" pos:column="54">BSTR</name> <type:modifier pos:line="1224" pos:column="59">*</type:modifier></type><name pos:line="1224" pos:column="60">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1226" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1226" pos:column="29">HRESULT</name></type> ( <name pos:line="1226" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1226" pos:column="57">*</type:modifier><name pos:line="1226" pos:column="58">get_Category</name> )<parameter_list pos:line="1226" pos:column="72">( 
            <param><decl><type><name pos:line="1227" pos:column="13">Thread2</name> <type:modifier pos:line="1227" pos:column="21">*</type:modifier></type> <name pos:line="1227" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1228" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1228" pos:column="33">__RPC__out</name> <name pos:line="1228" pos:column="44">THREADCATEGORY</name> <type:modifier pos:line="1228" pos:column="59">*</type:modifier></type><name pos:line="1228" pos:column="60">pCategory</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1230" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1231" pos:column="7">Thread2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1233" pos:column="5">interface</name></type> <name pos:line="1233" pos:column="15">Thread2</name>
    <argument_list pos:line="1234" pos:column="5">{
        <argument><expr><name pos:line="1235" pos:column="9">CONST_VTBL</name> struct <name pos:line="1235" pos:column="27">Thread2Vtbl</name> <op:operator pos:line="1235" pos:column="39">*</op:operator><name pos:line="1235" pos:column="40">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1240" pos:column="1">#<cpp:directive pos:line="1240" pos:column="2">ifdef</cpp:directive> <name pos:line="1240" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1243" pos:column="1">#<cpp:directive pos:line="1243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1243" pos:column="9">Thread2_QueryInterface</name><parameter_list pos:line="1243" pos:column="31">(<param><type><name pos:line="1243" pos:column="32">This</name></type></param>,<param><type><name pos:line="1243" pos:column="37">riid</name></type></param>,<param><type><name pos:line="1243" pos:column="42">ppvObj</name></type></param>,<param><type><name pos:line="1243" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1244" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1246" pos:column="1">#<cpp:directive pos:line="1246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1246" pos:column="9">Thread2_AddRef</name><parameter_list pos:line="1246" pos:column="23">(<param><type><name pos:line="1246" pos:column="24">This</name></type></param>,<param><type><name pos:line="1246" pos:column="29">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1247" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1249" pos:column="1">#<cpp:directive pos:line="1249" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1249" pos:column="9">Thread2_Release</name><parameter_list pos:line="1249" pos:column="24">(<param><type><name pos:line="1249" pos:column="25">This</name></type></param>,<param><type><name pos:line="1249" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1250" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1252" pos:column="1">#<cpp:directive pos:line="1252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1252" pos:column="9">Thread2_GetTypeInfoCount</name><parameter_list pos:line="1252" pos:column="33">(<param><type><name pos:line="1252" pos:column="34">This</name></type></param>,<param><type><name pos:line="1252" pos:column="39">pctinfo</name></type></param>,<param><type><name pos:line="1252" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1253" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1255" pos:column="1">#<cpp:directive pos:line="1255" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1255" pos:column="9">Thread2_GetTypeInfo</name><parameter_list pos:line="1255" pos:column="28">(<param><type><name pos:line="1255" pos:column="29">This</name></type></param>,<param><type><name pos:line="1255" pos:column="34">itinfo</name></type></param>,<param><type><name pos:line="1255" pos:column="41">lcid</name></type></param>,<param><type><name pos:line="1255" pos:column="46">pptinfo</name></type></param>,<param><type><name pos:line="1255" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1256" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1258" pos:column="1">#<cpp:directive pos:line="1258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1258" pos:column="9">Thread2_GetIDsOfNames</name><parameter_list pos:line="1258" pos:column="30">(<param><type><name pos:line="1258" pos:column="31">This</name></type></param>,<param><type><name pos:line="1258" pos:column="36">riid</name></type></param>,<param><type><name pos:line="1258" pos:column="41">rgszNames</name></type></param>,<param><type><name pos:line="1258" pos:column="51">cNames</name></type></param>,<param><type><name pos:line="1258" pos:column="58">lcid</name></type></param>,<param><type><name pos:line="1258" pos:column="63">rgdispid</name></type></param>,<param><type><name pos:line="1258" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1259" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1261" pos:column="1">#<cpp:directive pos:line="1261" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1261" pos:column="9">Thread2_Invoke</name><parameter_list pos:line="1261" pos:column="23">(<param><type><name pos:line="1261" pos:column="24">This</name></type></param>,<param><type><name pos:line="1261" pos:column="29">dispidMember</name></type></param>,<param><type><name pos:line="1261" pos:column="42">riid</name></type></param>,<param><type><name pos:line="1261" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="1261" pos:column="52">wFlags</name></type></param>,<param><type><name pos:line="1261" pos:column="59">pdispparams</name></type></param>,<param><type><name pos:line="1261" pos:column="71">pvarResult</name></type></param>,<param><type><name pos:line="1261" pos:column="82">pexcepinfo</name></type></param>,<param><type><name pos:line="1261" pos:column="93">puArgErr</name></type></param>,<param><type><name pos:line="1261" pos:column="102">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1262" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1264" pos:column="1">#<cpp:directive pos:line="1264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1264" pos:column="9">Thread2_Freeze</name><parameter_list pos:line="1264" pos:column="23">(<param><type><name pos:line="1264" pos:column="24">This</name></type></param>,<param><type><name pos:line="1264" pos:column="29">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1265" pos:column="5">( (This)-&gt;lpVtbl -&gt; Freeze(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1267" pos:column="1">#<cpp:directive pos:line="1267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1267" pos:column="9">Thread2_Thaw</name><parameter_list pos:line="1267" pos:column="21">(<param><type><name pos:line="1267" pos:column="22">This</name></type></param>,<param><type><name pos:line="1267" pos:column="27">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1268" pos:column="5">( (This)-&gt;lpVtbl -&gt; Thaw(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1270" pos:column="1">#<cpp:directive pos:line="1270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1270" pos:column="9">Thread2_get_Name</name><parameter_list pos:line="1270" pos:column="25">(<param><type><name pos:line="1270" pos:column="26">This</name></type></param>,<param><type><name pos:line="1270" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1271" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1273" pos:column="1">#<cpp:directive pos:line="1273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1273" pos:column="9">Thread2_get_SuspendCount</name><parameter_list pos:line="1273" pos:column="33">(<param><type><name pos:line="1273" pos:column="34">This</name></type></param>,<param><type><name pos:line="1273" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1274" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SuspendCount(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1276" pos:column="1">#<cpp:directive pos:line="1276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1276" pos:column="9">Thread2_get_ID</name><parameter_list pos:line="1276" pos:column="23">(<param><type><name pos:line="1276" pos:column="24">This</name></type></param>,<param><type><name pos:line="1276" pos:column="29">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1277" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1279" pos:column="1">#<cpp:directive pos:line="1279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1279" pos:column="9">Thread2_get_StackFrames</name><parameter_list pos:line="1279" pos:column="32">(<param><type><name pos:line="1279" pos:column="33">This</name></type></param>,<param><type><name pos:line="1279" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1280" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StackFrames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1282" pos:column="1">#<cpp:directive pos:line="1282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1282" pos:column="9">Thread2_get_Program</name><parameter_list pos:line="1282" pos:column="28">(<param><type><name pos:line="1282" pos:column="29">This</name></type></param>,<param><type><name pos:line="1282" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1283" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Program(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1285" pos:column="1">#<cpp:directive pos:line="1285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1285" pos:column="9">Thread2_get_IsAlive</name><parameter_list pos:line="1285" pos:column="28">(<param><type><name pos:line="1285" pos:column="29">This</name></type></param>,<param><type><name pos:line="1285" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1286" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsAlive(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1288" pos:column="1">#<cpp:directive pos:line="1288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1288" pos:column="9">Thread2_get_Priority</name><parameter_list pos:line="1288" pos:column="29">(<param><type><name pos:line="1288" pos:column="30">This</name></type></param>,<param><type><name pos:line="1288" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1289" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Priority(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1291" pos:column="1">#<cpp:directive pos:line="1291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1291" pos:column="9">Thread2_get_Location</name><parameter_list pos:line="1291" pos:column="29">(<param><type><name pos:line="1291" pos:column="30">This</name></type></param>,<param><type><name pos:line="1291" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1292" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Location(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1294" pos:column="1">#<cpp:directive pos:line="1294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1294" pos:column="9">Thread2_get_IsFrozen</name><parameter_list pos:line="1294" pos:column="29">(<param><type><name pos:line="1294" pos:column="30">This</name></type></param>,<param><type><name pos:line="1294" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1295" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsFrozen(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1297" pos:column="1">#<cpp:directive pos:line="1297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1297" pos:column="9">Thread2_get_DTE</name><parameter_list pos:line="1297" pos:column="24">(<param><type><name pos:line="1297" pos:column="25">This</name></type></param>,<param><type><name pos:line="1297" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1298" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1300" pos:column="1">#<cpp:directive pos:line="1300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1300" pos:column="9">Thread2_get_Parent</name><parameter_list pos:line="1300" pos:column="27">(<param><type><name pos:line="1300" pos:column="28">This</name></type></param>,<param><type><name pos:line="1300" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1301" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1303" pos:column="1">#<cpp:directive pos:line="1303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1303" pos:column="9">Thread2_get_Collection</name><parameter_list pos:line="1303" pos:column="31">(<param><type><name pos:line="1303" pos:column="32">This</name></type></param>,<param><type><name pos:line="1303" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1304" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="1307" pos:column="1">#<cpp:directive pos:line="1307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1307" pos:column="9">Thread2_get_Flag</name><parameter_list pos:line="1307" pos:column="25">(<param><type><name pos:line="1307" pos:column="26">This</name></type></param>,<param><type><name pos:line="1307" pos:column="31">Flag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1308" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Flag(This,Flag) )</cpp:value></cpp:define> 

<cpp:define pos:line="1310" pos:column="1">#<cpp:directive pos:line="1310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1310" pos:column="9">Thread2_put_Flag</name><parameter_list pos:line="1310" pos:column="25">(<param><type><name pos:line="1310" pos:column="26">This</name></type></param>,<param><type><name pos:line="1310" pos:column="31">Flag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1311" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Flag(This,Flag) )</cpp:value></cpp:define> 

<cpp:define pos:line="1313" pos:column="1">#<cpp:directive pos:line="1313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1313" pos:column="9">Thread2_put_DisplayName</name><parameter_list pos:line="1313" pos:column="32">(<param><type><name pos:line="1313" pos:column="33">This</name></type></param>,<param><type><name pos:line="1313" pos:column="38">bstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1314" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DisplayName(This,bstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="1316" pos:column="1">#<cpp:directive pos:line="1316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1316" pos:column="9">Thread2_get_DisplayName</name><parameter_list pos:line="1316" pos:column="32">(<param><type><name pos:line="1316" pos:column="33">This</name></type></param>,<param><type><name pos:line="1316" pos:column="38">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1317" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DisplayName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="1319" pos:column="1">#<cpp:directive pos:line="1319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1319" pos:column="9">Thread2_get_Category</name><parameter_list pos:line="1319" pos:column="29">(<param><type><name pos:line="1319" pos:column="30">This</name></type></param>,<param><type><name pos:line="1319" pos:column="35">pCategory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1320" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Category(This,pCategory) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1322" pos:column="1">#<cpp:directive pos:line="1322" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1322" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1325" pos:column="1">#<cpp:directive pos:line="1325" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1325" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1330" pos:column="1">#<cpp:directive pos:line="1330" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1330" pos:column="9">/* __Thread2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1333" pos:column="1">#<cpp:directive pos:line="1333" pos:column="2">ifndef</cpp:directive> <name pos:line="1333" pos:column="9">__Process3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1334" pos:column="1">#<cpp:directive pos:line="1334" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1334" pos:column="9">__Process3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1336" pos:column="1">/* interface Process3 */</comment>
<comment type="block" pos:line="1337" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1340" pos:column="1">EXTERN_C</name> <specifier pos:line="1340" pos:column="10">const</specifier> <name pos:line="1340" pos:column="16">IID</name></type> <name pos:line="1340" pos:column="20">IID_Process3</name></decl>;</decl_stmt>

<cpp:if pos:line="1342" pos:column="1">#<cpp:directive pos:line="1342" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1342" pos:column="5">defined</name><argument_list pos:line="1342" pos:column="12">(<argument><expr><name pos:line="1342" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1342" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1342" pos:column="29">!</op:operator><call><name pos:line="1342" pos:column="30">defined</name><argument_list pos:line="1342" pos:column="37">(<argument><expr><name pos:line="1342" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1344" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1344" pos:column="19">(<argument pos:line="1344" pos:column="20">"D401C665-4EC7-452b-AA91-985D16772D84"</argument>)</argument_list></macro>
    <label><name pos:line="1345" pos:column="5">Process3</name> :</label> <expr_stmt><expr pos:line="1345" pos:column="16">public <name pos:line="1345" pos:column="23">Process2</name>
    <block pos:line="1346" pos:column="5">{
    <expr pos:line="1347" pos:column="5">public<op:operator pos:line="1347" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1348" pos:column="17">/* [propget][id] */</comment> <name pos:line="1348" pos:column="37">HRESULT</name> <name pos:line="1348" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1348" pos:column="63">get_Modules</name><argument_list pos:line="1348" pos:column="74">( 
            <comment type="block" pos:line="1349" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1349" pos:column="33">__RPC__deref_out_opt Modules **Modules</argument>)</argument_list></macro> <op:operator pos:line="1349" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1349" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1353" pos:column="1">#<cpp:directive pos:line="1353" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1353" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1355" pos:column="5">typedef <type><struct pos:line="1355" pos:column="13">struct <name pos:line="1355" pos:column="20">Process3Vtbl</name>
    <block pos:line="1356" pos:column="5">{<public type="default" pos:line="1356" pos:column="6">
        <decl_stmt><decl><type><name pos:line="1357" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="1359" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="1359" pos:column="46">HRESULT</name></type> ( <name pos:line="1359" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1359" pos:column="74">*</type:modifier><name pos:line="1359" pos:column="75">QueryInterface</name> )<parameter_list pos:line="1359" pos:column="91">( 
            <param><decl><type><name pos:line="1360" pos:column="13">Process3</name> <type:modifier pos:line="1360" pos:column="22">*</type:modifier></type> <name pos:line="1360" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1361" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="1361" pos:column="47">struct <name pos:line="1361" pos:column="54">GUID</name> <type:modifier pos:line="1361" pos:column="59">*</type:modifier></type><name pos:line="1361" pos:column="60">riid</name></decl><op:operator pos:line="1361" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1362" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1362" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1362" pos:column="59">void</name> <type:modifier pos:line="1362" pos:column="64">*</type:modifier><type:modifier pos:line="1362" pos:column="65">*</type:modifier><name pos:line="1362" pos:column="66">ppvObj</name><op:operator pos:line="1362" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1363" pos:column="13">/* [retval][out] */</comment> <name pos:line="1363" pos:column="33">__RPC__out</name> <name pos:line="1363" pos:column="44">void</name> <type:modifier pos:line="1363" pos:column="49">*</type:modifier><name pos:line="1363" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="1365" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1365" pos:column="46">HRESULT</name></type> ( <name pos:line="1365" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1365" pos:column="74">*</type:modifier><name pos:line="1365" pos:column="75">AddRef</name> )<parameter_list pos:line="1365" pos:column="83">( 
            <param><decl><type><name pos:line="1366" pos:column="13">Process3</name> <type:modifier pos:line="1366" pos:column="22">*</type:modifier></type> <name pos:line="1366" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1367" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1367" pos:column="33">__RPC__out</name> <name pos:line="1367" pos:column="44">unsigned</name> <name pos:line="1367" pos:column="53">long</name> <type:modifier pos:line="1367" pos:column="58">*</type:modifier></type><name pos:line="1367" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1369" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1369" pos:column="46">HRESULT</name></type> ( <name pos:line="1369" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1369" pos:column="74">*</type:modifier><name pos:line="1369" pos:column="75">Release</name> )<parameter_list pos:line="1369" pos:column="84">( 
            <param><decl><type><name pos:line="1370" pos:column="13">Process3</name> <type:modifier pos:line="1370" pos:column="22">*</type:modifier></type> <name pos:line="1370" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1371" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1371" pos:column="33">__RPC__out</name> <name pos:line="1371" pos:column="44">unsigned</name> <name pos:line="1371" pos:column="53">long</name> <type:modifier pos:line="1371" pos:column="58">*</type:modifier></type><name pos:line="1371" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1373" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1373" pos:column="46">HRESULT</name></type> ( <name pos:line="1373" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1373" pos:column="74">*</type:modifier><name pos:line="1373" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="1373" pos:column="93">( 
            <param><decl><type><name pos:line="1374" pos:column="13">Process3</name> <type:modifier pos:line="1374" pos:column="22">*</type:modifier></type> <name pos:line="1374" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1375" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1375" pos:column="38">__RPC__out</name> <name pos:line="1375" pos:column="49">unsigned</name> <name pos:line="1375" pos:column="58">UINT</name> <type:modifier pos:line="1375" pos:column="63">*</type:modifier></type><name pos:line="1375" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="1376" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1376" pos:column="33">__RPC__out</name> <name pos:line="1376" pos:column="44">void</name> <type:modifier pos:line="1376" pos:column="49">*</type:modifier></type><name pos:line="1376" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1378" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1378" pos:column="46">HRESULT</name></type> ( <name pos:line="1378" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1378" pos:column="74">*</type:modifier><name pos:line="1378" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="1378" pos:column="88">( 
            <param><decl><type><name pos:line="1379" pos:column="13">Process3</name> <type:modifier pos:line="1379" pos:column="22">*</type:modifier></type> <name pos:line="1379" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1380" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1380" pos:column="37">unsigned</name> <name pos:line="1380" pos:column="46">UINT</name></type> <name pos:line="1380" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="1381" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1381" pos:column="37">unsigned</name> <name pos:line="1381" pos:column="46">long</name></type> <name pos:line="1381" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="1382" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1382" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1382" pos:column="59">void</name> <type:modifier pos:line="1382" pos:column="64">*</type:modifier><type:modifier pos:line="1382" pos:column="65">*</type:modifier></type><name pos:line="1382" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="1383" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1383" pos:column="33">__RPC__out</name> <name pos:line="1383" pos:column="44">void</name> <type:modifier pos:line="1383" pos:column="49">*</type:modifier></type><name pos:line="1383" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1385" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="1385" pos:column="46">HRESULT</name> <argument_list pos:line="1385" pos:column="54">( <argument pos:line="1385" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1385" pos:column="90">(</op:operator> 
            <name pos:line="1386" pos:column="13">Process3</name> <op:operator pos:line="1386" pos:column="22">*</op:operator> <name pos:line="1386" pos:column="24">This</name><op:operator pos:line="1386" pos:column="28">,</op:operator>
            <comment type="block" pos:line="1387" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1387" pos:column="37">__RPC__in</name> struct <name pos:line="1387" pos:column="54">GUID</name> <op:operator pos:line="1387" pos:column="59">*</op:operator><name pos:line="1387" pos:column="60">riid</name><op:operator pos:line="1387" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1388" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1388" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="1388" pos:column="57">signed</name> <name pos:line="1388" pos:column="64">char</name> <op:operator pos:line="1388" pos:column="69">*</op:operator><op:operator pos:line="1388" pos:column="70">*</op:operator><name pos:line="1388" pos:column="71">rgszNames</name><op:operator pos:line="1388" pos:column="80">,</op:operator>
            <comment type="block" pos:line="1389" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1389" pos:column="37">unsigned</name> <name pos:line="1389" pos:column="46">UINT</name> <name pos:line="1389" pos:column="51">cNames</name><op:operator pos:line="1389" pos:column="57">,</op:operator>
            <comment type="block" pos:line="1390" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1390" pos:column="37">unsigned</name> <name pos:line="1390" pos:column="46">long</name> <name pos:line="1390" pos:column="51">lcid</name><op:operator pos:line="1390" pos:column="55">,</op:operator>
            <comment type="block" pos:line="1391" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1391" pos:column="38">__RPC__out</name> <name pos:line="1391" pos:column="49">signed</name> <name pos:line="1391" pos:column="56">long</name> <op:operator pos:line="1391" pos:column="61">*</op:operator><name pos:line="1391" pos:column="62">rgdispid</name><op:operator pos:line="1391" pos:column="70">,</op:operator>
            <comment type="block" pos:line="1392" pos:column="13">/* [retval][out] */</comment> <name pos:line="1392" pos:column="33">__RPC__out</name> <name pos:line="1392" pos:column="44">void</name> <op:operator pos:line="1392" pos:column="49">*</op:operator><name pos:line="1392" pos:column="50">retval</name><op:operator pos:line="1392" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1394" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="1394" pos:column="46">HRESULT</name> <argument_list pos:line="1394" pos:column="54">( <argument pos:line="1394" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1394" pos:column="83">(</op:operator> 
            <name pos:line="1395" pos:column="13">Process3</name> <op:operator pos:line="1395" pos:column="22">*</op:operator> <name pos:line="1395" pos:column="24">This</name><op:operator pos:line="1395" pos:column="28">,</op:operator>
            <comment type="block" pos:line="1396" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1396" pos:column="37">signed</name> <name pos:line="1396" pos:column="44">long</name> <name pos:line="1396" pos:column="49">dispidMember</name><op:operator pos:line="1396" pos:column="61">,</op:operator>
            <comment type="block" pos:line="1397" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1397" pos:column="37">__RPC__in</name> struct <name pos:line="1397" pos:column="54">GUID</name> <op:operator pos:line="1397" pos:column="59">*</op:operator><name pos:line="1397" pos:column="60">riid</name><op:operator pos:line="1397" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1398" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1398" pos:column="37">unsigned</name> <name pos:line="1398" pos:column="46">long</name> <name pos:line="1398" pos:column="51">lcid</name><op:operator pos:line="1398" pos:column="55">,</op:operator>
            <comment type="block" pos:line="1399" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1399" pos:column="37">unsigned</name> <name pos:line="1399" pos:column="46">short</name> <name pos:line="1399" pos:column="52">wFlags</name><op:operator pos:line="1399" pos:column="58">,</op:operator>
            <comment type="block" pos:line="1400" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1400" pos:column="37">__RPC__in</name> struct <name pos:line="1400" pos:column="54">DISPPARAMS</name> <op:operator pos:line="1400" pos:column="65">*</op:operator><name pos:line="1400" pos:column="66">pdispparams</name><op:operator pos:line="1400" pos:column="77">,</op:operator>
            <comment type="block" pos:line="1401" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1401" pos:column="38">__RPC__out</name> <name pos:line="1401" pos:column="49">VARIANT</name> <op:operator pos:line="1401" pos:column="57">*</op:operator><name pos:line="1401" pos:column="58">pvarResult</name><op:operator pos:line="1401" pos:column="68">,</op:operator>
            <comment type="block" pos:line="1402" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1402" pos:column="38">__RPC__out</name> struct <name pos:line="1402" pos:column="56">EXCEPINFO</name> <op:operator pos:line="1402" pos:column="66">*</op:operator><name pos:line="1402" pos:column="67">pexcepinfo</name><op:operator pos:line="1402" pos:column="77">,</op:operator>
            <comment type="block" pos:line="1403" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1403" pos:column="38">__RPC__out</name> <name pos:line="1403" pos:column="49">unsigned</name> <name pos:line="1403" pos:column="58">UINT</name> <op:operator pos:line="1403" pos:column="63">*</op:operator><name pos:line="1403" pos:column="64">puArgErr</name><op:operator pos:line="1403" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1404" pos:column="13">/* [retval][out] */</comment> <name pos:line="1404" pos:column="33">__RPC__out</name> <name pos:line="1404" pos:column="44">void</name> <op:operator pos:line="1404" pos:column="49">*</op:operator><name pos:line="1404" pos:column="50">retval</name><op:operator pos:line="1404" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1406" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1406" pos:column="34">HRESULT</name></type> ( <name pos:line="1406" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1406" pos:column="62">*</type:modifier><name pos:line="1406" pos:column="63">Attach</name> )<parameter_list pos:line="1406" pos:column="71">( 
            <param><decl><type><name pos:line="1407" pos:column="13">Process3</name> <type:modifier pos:line="1407" pos:column="22">*</type:modifier></type> <name pos:line="1407" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1408" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1408" pos:column="33">__RPC__out</name> <name pos:line="1408" pos:column="44">void</name> <type:modifier pos:line="1408" pos:column="49">*</type:modifier></type><name pos:line="1408" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1410" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1410" pos:column="34">HRESULT</name></type> ( <name pos:line="1410" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1410" pos:column="62">*</type:modifier><name pos:line="1410" pos:column="63">Detach</name> )<parameter_list pos:line="1410" pos:column="71">( 
            <param><decl><type><name pos:line="1411" pos:column="13">Process3</name> <type:modifier pos:line="1411" pos:column="22">*</type:modifier></type> <name pos:line="1411" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1412" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1412" pos:column="37">BOOLEAN</name></type> <name pos:line="1412" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="1413" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1413" pos:column="33">__RPC__out</name> <name pos:line="1413" pos:column="44">void</name> <type:modifier pos:line="1413" pos:column="49">*</type:modifier></type><name pos:line="1413" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1415" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1415" pos:column="34">HRESULT</name></type> ( <name pos:line="1415" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1415" pos:column="62">*</type:modifier><name pos:line="1415" pos:column="63">Break</name> )<parameter_list pos:line="1415" pos:column="70">( 
            <param><decl><type><name pos:line="1416" pos:column="13">Process3</name> <type:modifier pos:line="1416" pos:column="22">*</type:modifier></type> <name pos:line="1416" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1417" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1417" pos:column="37">BOOLEAN</name></type> <name pos:line="1417" pos:column="45">WaitForBreakMode</name></decl></param>,
            <comment type="block" pos:line="1418" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1418" pos:column="33">__RPC__out</name> <name pos:line="1418" pos:column="44">void</name> <type:modifier pos:line="1418" pos:column="49">*</type:modifier></type><name pos:line="1418" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1420" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1420" pos:column="34">HRESULT</name></type> ( <name pos:line="1420" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1420" pos:column="62">*</type:modifier><name pos:line="1420" pos:column="63">Terminate</name> )<parameter_list pos:line="1420" pos:column="74">( 
            <param><decl><type><name pos:line="1421" pos:column="13">Process3</name> <type:modifier pos:line="1421" pos:column="22">*</type:modifier></type> <name pos:line="1421" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1422" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1422" pos:column="37">BOOLEAN</name></type> <name pos:line="1422" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="1423" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1423" pos:column="33">__RPC__out</name> <name pos:line="1423" pos:column="44">void</name> <type:modifier pos:line="1423" pos:column="49">*</type:modifier></type><name pos:line="1423" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1425" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1425" pos:column="43">HRESULT</name></type> ( <name pos:line="1425" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1425" pos:column="71">*</type:modifier><name pos:line="1425" pos:column="72">get_Name</name> )<parameter_list pos:line="1425" pos:column="82">( 
            <param><decl><type><name pos:line="1426" pos:column="13">Process3</name> <type:modifier pos:line="1426" pos:column="22">*</type:modifier></type> <name pos:line="1426" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1427" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1427" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1427" pos:column="54">BSTR</name> <type:modifier pos:line="1427" pos:column="59">*</type:modifier></type><name pos:line="1427" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1429" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1429" pos:column="43">HRESULT</name></type> ( <name pos:line="1429" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1429" pos:column="71">*</type:modifier><name pos:line="1429" pos:column="72">get_ProcessID</name> )<parameter_list pos:line="1429" pos:column="87">( 
            <param><decl><type><name pos:line="1430" pos:column="13">Process3</name> <type:modifier pos:line="1430" pos:column="22">*</type:modifier></type> <name pos:line="1430" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1431" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1431" pos:column="33">__RPC__out</name> <name pos:line="1431" pos:column="44">signed</name> <name pos:line="1431" pos:column="51">long</name> <type:modifier pos:line="1431" pos:column="56">*</type:modifier></type><name pos:line="1431" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1433" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1433" pos:column="43">HRESULT</name></type> ( <name pos:line="1433" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1433" pos:column="71">*</type:modifier><name pos:line="1433" pos:column="72">get_Programs</name> )<parameter_list pos:line="1433" pos:column="86">( 
            <param><decl><type><name pos:line="1434" pos:column="13">Process3</name> <type:modifier pos:line="1434" pos:column="22">*</type:modifier></type> <name pos:line="1434" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1435" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1435" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1435" pos:column="54">Programs</name> <type:modifier pos:line="1435" pos:column="63">*</type:modifier><type:modifier pos:line="1435" pos:column="64">*</type:modifier></type><name pos:line="1435" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1437" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1437" pos:column="43">HRESULT</name></type> ( <name pos:line="1437" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1437" pos:column="71">*</type:modifier><name pos:line="1437" pos:column="72">get_DTE</name> )<parameter_list pos:line="1437" pos:column="81">( 
            <param><decl><type><name pos:line="1438" pos:column="13">Process3</name> <type:modifier pos:line="1438" pos:column="22">*</type:modifier></type> <name pos:line="1438" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1439" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1439" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="1439" pos:column="54">*</type:modifier><type:modifier pos:line="1439" pos:column="55">*</type:modifier></type><name pos:line="1439" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1441" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1441" pos:column="43">HRESULT</name></type> ( <name pos:line="1441" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1441" pos:column="71">*</type:modifier><name pos:line="1441" pos:column="72">get_Parent</name> )<parameter_list pos:line="1441" pos:column="84">( 
            <param><decl><type><name pos:line="1442" pos:column="13">Process3</name> <type:modifier pos:line="1442" pos:column="22">*</type:modifier></type> <name pos:line="1442" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1443" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1443" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1443" pos:column="54">Debugger</name> <type:modifier pos:line="1443" pos:column="63">*</type:modifier><type:modifier pos:line="1443" pos:column="64">*</type:modifier></type><name pos:line="1443" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1445" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1445" pos:column="43">HRESULT</name></type> ( <name pos:line="1445" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1445" pos:column="71">*</type:modifier><name pos:line="1445" pos:column="72">get_Collection</name> )<parameter_list pos:line="1445" pos:column="88">( 
            <param><decl><type><name pos:line="1446" pos:column="13">Process3</name> <type:modifier pos:line="1446" pos:column="22">*</type:modifier></type> <name pos:line="1446" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1447" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1447" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1447" pos:column="54">Processes</name> <type:modifier pos:line="1447" pos:column="64">*</type:modifier><type:modifier pos:line="1447" pos:column="65">*</type:modifier></type><name pos:line="1447" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1449" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1449" pos:column="34">HRESULT</name></type> ( <name pos:line="1449" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1449" pos:column="62">*</type:modifier><name pos:line="1449" pos:column="63">Attach2</name> )<parameter_list pos:line="1449" pos:column="72">( 
            <param><decl><type><name pos:line="1450" pos:column="13">Process3</name> <type:modifier pos:line="1450" pos:column="22">*</type:modifier></type> <name pos:line="1450" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1451" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1451" pos:column="37">VARIANT</name></type> <name pos:line="1451" pos:column="45">Engines</name></decl></param>,
            <comment type="block" pos:line="1452" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1452" pos:column="33">__RPC__out</name> <name pos:line="1452" pos:column="44">void</name> <type:modifier pos:line="1452" pos:column="49">*</type:modifier></type><name pos:line="1452" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1454" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1454" pos:column="43">HRESULT</name></type> ( <name pos:line="1454" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1454" pos:column="71">*</type:modifier><name pos:line="1454" pos:column="72">get_Transport</name> )<parameter_list pos:line="1454" pos:column="87">( 
            <param><decl><type><name pos:line="1455" pos:column="13">Process3</name> <type:modifier pos:line="1455" pos:column="22">*</type:modifier></type> <name pos:line="1455" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1456" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1456" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1456" pos:column="54">Transport</name> <type:modifier pos:line="1456" pos:column="64">*</type:modifier><type:modifier pos:line="1456" pos:column="65">*</type:modifier></type><name pos:line="1456" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1458" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1458" pos:column="43">HRESULT</name></type> ( <name pos:line="1458" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1458" pos:column="71">*</type:modifier><name pos:line="1458" pos:column="72">get_TransportQualifier</name> )<parameter_list pos:line="1458" pos:column="96">( 
            <param><decl><type><name pos:line="1459" pos:column="13">Process3</name> <type:modifier pos:line="1459" pos:column="22">*</type:modifier></type> <name pos:line="1459" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1460" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1460" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1460" pos:column="54">BSTR</name> <type:modifier pos:line="1460" pos:column="59">*</type:modifier></type><name pos:line="1460" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1462" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1462" pos:column="43">HRESULT</name></type> ( <name pos:line="1462" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1462" pos:column="71">*</type:modifier><name pos:line="1462" pos:column="72">get_Threads</name> )<parameter_list pos:line="1462" pos:column="85">( 
            <param><decl><type><name pos:line="1463" pos:column="13">Process3</name> <type:modifier pos:line="1463" pos:column="22">*</type:modifier></type> <name pos:line="1463" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1464" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1464" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1464" pos:column="54">Threads</name> <type:modifier pos:line="1464" pos:column="62">*</type:modifier><type:modifier pos:line="1464" pos:column="63">*</type:modifier></type><name pos:line="1464" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1466" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1466" pos:column="43">HRESULT</name></type> ( <name pos:line="1466" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1466" pos:column="71">*</type:modifier><name pos:line="1466" pos:column="72">get_IsBeingDebugged</name> )<parameter_list pos:line="1466" pos:column="93">( 
            <param><decl><type><name pos:line="1467" pos:column="13">Process3</name> <type:modifier pos:line="1467" pos:column="22">*</type:modifier></type> <name pos:line="1467" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1468" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1468" pos:column="33">__RPC__out</name> <name pos:line="1468" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1468" pos:column="52">*</type:modifier></type><name pos:line="1468" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1470" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1470" pos:column="43">HRESULT</name></type> ( <name pos:line="1470" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1470" pos:column="71">*</type:modifier><name pos:line="1470" pos:column="72">get_UserName</name> )<parameter_list pos:line="1470" pos:column="86">( 
            <param><decl><type><name pos:line="1471" pos:column="13">Process3</name> <type:modifier pos:line="1471" pos:column="22">*</type:modifier></type> <name pos:line="1471" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1472" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1472" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1472" pos:column="54">BSTR</name> <type:modifier pos:line="1472" pos:column="59">*</type:modifier></type><name pos:line="1472" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1474" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1474" pos:column="29">HRESULT</name></type> ( <name pos:line="1474" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1474" pos:column="57">*</type:modifier><name pos:line="1474" pos:column="58">get_Modules</name> )<parameter_list pos:line="1474" pos:column="71">( 
            <param><decl><type><name pos:line="1475" pos:column="13">Process3</name> <type:modifier pos:line="1475" pos:column="22">*</type:modifier></type> <name pos:line="1475" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="1476" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1476" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1476" pos:column="54">Modules</name> <type:modifier pos:line="1476" pos:column="62">*</type:modifier><type:modifier pos:line="1476" pos:column="63">*</type:modifier></type><name pos:line="1476" pos:column="64">Modules</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1478" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1479" pos:column="7">Process3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1481" pos:column="5">interface</name></type> <name pos:line="1481" pos:column="15">Process3</name>
    <argument_list pos:line="1482" pos:column="5">{
        <argument><expr><name pos:line="1483" pos:column="9">CONST_VTBL</name> struct <name pos:line="1483" pos:column="27">Process3Vtbl</name> <op:operator pos:line="1483" pos:column="40">*</op:operator><name pos:line="1483" pos:column="41">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1488" pos:column="1">#<cpp:directive pos:line="1488" pos:column="2">ifdef</cpp:directive> <name pos:line="1488" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1491" pos:column="1">#<cpp:directive pos:line="1491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1491" pos:column="9">Process3_QueryInterface</name><parameter_list pos:line="1491" pos:column="32">(<param><type><name pos:line="1491" pos:column="33">This</name></type></param>,<param><type><name pos:line="1491" pos:column="38">riid</name></type></param>,<param><type><name pos:line="1491" pos:column="43">ppvObj</name></type></param>,<param><type><name pos:line="1491" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1492" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1494" pos:column="1">#<cpp:directive pos:line="1494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1494" pos:column="9">Process3_AddRef</name><parameter_list pos:line="1494" pos:column="24">(<param><type><name pos:line="1494" pos:column="25">This</name></type></param>,<param><type><name pos:line="1494" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1495" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1497" pos:column="1">#<cpp:directive pos:line="1497" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1497" pos:column="9">Process3_Release</name><parameter_list pos:line="1497" pos:column="25">(<param><type><name pos:line="1497" pos:column="26">This</name></type></param>,<param><type><name pos:line="1497" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1498" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1500" pos:column="1">#<cpp:directive pos:line="1500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1500" pos:column="9">Process3_GetTypeInfoCount</name><parameter_list pos:line="1500" pos:column="34">(<param><type><name pos:line="1500" pos:column="35">This</name></type></param>,<param><type><name pos:line="1500" pos:column="40">pctinfo</name></type></param>,<param><type><name pos:line="1500" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1501" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1503" pos:column="1">#<cpp:directive pos:line="1503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1503" pos:column="9">Process3_GetTypeInfo</name><parameter_list pos:line="1503" pos:column="29">(<param><type><name pos:line="1503" pos:column="30">This</name></type></param>,<param><type><name pos:line="1503" pos:column="35">itinfo</name></type></param>,<param><type><name pos:line="1503" pos:column="42">lcid</name></type></param>,<param><type><name pos:line="1503" pos:column="47">pptinfo</name></type></param>,<param><type><name pos:line="1503" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1504" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1506" pos:column="1">#<cpp:directive pos:line="1506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1506" pos:column="9">Process3_GetIDsOfNames</name><parameter_list pos:line="1506" pos:column="31">(<param><type><name pos:line="1506" pos:column="32">This</name></type></param>,<param><type><name pos:line="1506" pos:column="37">riid</name></type></param>,<param><type><name pos:line="1506" pos:column="42">rgszNames</name></type></param>,<param><type><name pos:line="1506" pos:column="52">cNames</name></type></param>,<param><type><name pos:line="1506" pos:column="59">lcid</name></type></param>,<param><type><name pos:line="1506" pos:column="64">rgdispid</name></type></param>,<param><type><name pos:line="1506" pos:column="73">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1507" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1509" pos:column="1">#<cpp:directive pos:line="1509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1509" pos:column="9">Process3_Invoke</name><parameter_list pos:line="1509" pos:column="24">(<param><type><name pos:line="1509" pos:column="25">This</name></type></param>,<param><type><name pos:line="1509" pos:column="30">dispidMember</name></type></param>,<param><type><name pos:line="1509" pos:column="43">riid</name></type></param>,<param><type><name pos:line="1509" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="1509" pos:column="53">wFlags</name></type></param>,<param><type><name pos:line="1509" pos:column="60">pdispparams</name></type></param>,<param><type><name pos:line="1509" pos:column="72">pvarResult</name></type></param>,<param><type><name pos:line="1509" pos:column="83">pexcepinfo</name></type></param>,<param><type><name pos:line="1509" pos:column="94">puArgErr</name></type></param>,<param><type><name pos:line="1509" pos:column="103">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1510" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1512" pos:column="1">#<cpp:directive pos:line="1512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1512" pos:column="9">Process3_Attach</name><parameter_list pos:line="1512" pos:column="24">(<param><type><name pos:line="1512" pos:column="25">This</name></type></param>,<param><type><name pos:line="1512" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1513" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1515" pos:column="1">#<cpp:directive pos:line="1515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1515" pos:column="9">Process3_Detach</name><parameter_list pos:line="1515" pos:column="24">(<param><type><name pos:line="1515" pos:column="25">This</name></type></param>,<param><type><name pos:line="1515" pos:column="30">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="1515" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1516" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1518" pos:column="1">#<cpp:directive pos:line="1518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1518" pos:column="9">Process3_Break</name><parameter_list pos:line="1518" pos:column="23">(<param><type><name pos:line="1518" pos:column="24">This</name></type></param>,<param><type><name pos:line="1518" pos:column="29">WaitForBreakMode</name></type></param>,<param><type><name pos:line="1518" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1519" pos:column="5">( (This)-&gt;lpVtbl -&gt; Break(This,WaitForBreakMode,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1521" pos:column="1">#<cpp:directive pos:line="1521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1521" pos:column="9">Process3_Terminate</name><parameter_list pos:line="1521" pos:column="27">(<param><type><name pos:line="1521" pos:column="28">This</name></type></param>,<param><type><name pos:line="1521" pos:column="33">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="1521" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1522" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1524" pos:column="1">#<cpp:directive pos:line="1524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1524" pos:column="9">Process3_get_Name</name><parameter_list pos:line="1524" pos:column="26">(<param><type><name pos:line="1524" pos:column="27">This</name></type></param>,<param><type><name pos:line="1524" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1525" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1527" pos:column="1">#<cpp:directive pos:line="1527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1527" pos:column="9">Process3_get_ProcessID</name><parameter_list pos:line="1527" pos:column="31">(<param><type><name pos:line="1527" pos:column="32">This</name></type></param>,<param><type><name pos:line="1527" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1528" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProcessID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1530" pos:column="1">#<cpp:directive pos:line="1530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1530" pos:column="9">Process3_get_Programs</name><parameter_list pos:line="1530" pos:column="30">(<param><type><name pos:line="1530" pos:column="31">This</name></type></param>,<param><type><name pos:line="1530" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1531" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Programs(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1533" pos:column="1">#<cpp:directive pos:line="1533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1533" pos:column="9">Process3_get_DTE</name><parameter_list pos:line="1533" pos:column="25">(<param><type><name pos:line="1533" pos:column="26">This</name></type></param>,<param><type><name pos:line="1533" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1534" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1536" pos:column="1">#<cpp:directive pos:line="1536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1536" pos:column="9">Process3_get_Parent</name><parameter_list pos:line="1536" pos:column="28">(<param><type><name pos:line="1536" pos:column="29">This</name></type></param>,<param><type><name pos:line="1536" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1537" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1539" pos:column="1">#<cpp:directive pos:line="1539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1539" pos:column="9">Process3_get_Collection</name><parameter_list pos:line="1539" pos:column="32">(<param><type><name pos:line="1539" pos:column="33">This</name></type></param>,<param><type><name pos:line="1539" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1540" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1542" pos:column="1">#<cpp:directive pos:line="1542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1542" pos:column="9">Process3_Attach2</name><parameter_list pos:line="1542" pos:column="25">(<param><type><name pos:line="1542" pos:column="26">This</name></type></param>,<param><type><name pos:line="1542" pos:column="31">Engines</name></type></param>,<param><type><name pos:line="1542" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1543" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach2(This,Engines,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1545" pos:column="1">#<cpp:directive pos:line="1545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1545" pos:column="9">Process3_get_Transport</name><parameter_list pos:line="1545" pos:column="31">(<param><type><name pos:line="1545" pos:column="32">This</name></type></param>,<param><type><name pos:line="1545" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1546" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Transport(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1548" pos:column="1">#<cpp:directive pos:line="1548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1548" pos:column="9">Process3_get_TransportQualifier</name><parameter_list pos:line="1548" pos:column="40">(<param><type><name pos:line="1548" pos:column="41">This</name></type></param>,<param><type><name pos:line="1548" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1549" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TransportQualifier(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1551" pos:column="1">#<cpp:directive pos:line="1551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1551" pos:column="9">Process3_get_Threads</name><parameter_list pos:line="1551" pos:column="29">(<param><type><name pos:line="1551" pos:column="30">This</name></type></param>,<param><type><name pos:line="1551" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1552" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Threads(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1554" pos:column="1">#<cpp:directive pos:line="1554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1554" pos:column="9">Process3_get_IsBeingDebugged</name><parameter_list pos:line="1554" pos:column="37">(<param><type><name pos:line="1554" pos:column="38">This</name></type></param>,<param><type><name pos:line="1554" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1555" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsBeingDebugged(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1557" pos:column="1">#<cpp:directive pos:line="1557" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1557" pos:column="9">Process3_get_UserName</name><parameter_list pos:line="1557" pos:column="30">(<param><type><name pos:line="1557" pos:column="31">This</name></type></param>,<param><type><name pos:line="1557" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1558" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UserName(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="1561" pos:column="1">#<cpp:directive pos:line="1561" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1561" pos:column="9">Process3_get_Modules</name><parameter_list pos:line="1561" pos:column="29">(<param><type><name pos:line="1561" pos:column="30">This</name></type></param>,<param><type><name pos:line="1561" pos:column="35">Modules</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1562" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Modules(This,Modules) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1564" pos:column="1">#<cpp:directive pos:line="1564" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1564" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1567" pos:column="1">#<cpp:directive pos:line="1567" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1567" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1572" pos:column="1">#<cpp:directive pos:line="1572" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1572" pos:column="9">/* __Process3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1575" pos:column="1">#<cpp:directive pos:line="1575" pos:column="2">ifndef</cpp:directive> <name pos:line="1575" pos:column="9">__Modules_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1576" pos:column="1">#<cpp:directive pos:line="1576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1576" pos:column="9">__Modules_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1578" pos:column="1">/* interface Modules */</comment>
<comment type="block" pos:line="1579" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1582" pos:column="1">EXTERN_C</name> <specifier pos:line="1582" pos:column="10">const</specifier> <name pos:line="1582" pos:column="16">IID</name></type> <name pos:line="1582" pos:column="20">IID_Modules</name></decl>;</decl_stmt>

<cpp:if pos:line="1584" pos:column="1">#<cpp:directive pos:line="1584" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1584" pos:column="5">defined</name><argument_list pos:line="1584" pos:column="12">(<argument><expr><name pos:line="1584" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1584" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1584" pos:column="29">!</op:operator><call><name pos:line="1584" pos:column="30">defined</name><argument_list pos:line="1584" pos:column="37">(<argument><expr><name pos:line="1584" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1586" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1586" pos:column="19">(<argument pos:line="1586" pos:column="20">"B0F3B256-D962-4319-B7C0-A52486C16CB9"</argument>)</argument_list></macro>
    <label><name pos:line="1587" pos:column="5">Modules</name> :</label> <expr_stmt><expr pos:line="1587" pos:column="15">public <name pos:line="1587" pos:column="22">IDispatch</name>
    <block pos:line="1588" pos:column="5">{
    <expr pos:line="1589" pos:column="5">public<op:operator pos:line="1589" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1590" pos:column="17">/* [id] */</comment> <name pos:line="1590" pos:column="28">HRESULT</name> <name pos:line="1590" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="1590" pos:column="54">Item</name><argument_list pos:line="1590" pos:column="58">( 
            <comment type="block" pos:line="1591" pos:column="13">/* [in] */</comment> <argument pos:line="1591" pos:column="24">VARIANT Index</argument>,
            <comment type="block" pos:line="1592" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1592" pos:column="33">__RPC__deref_out_opt Module **Module</argument>)</argument_list></macro> <op:operator pos:line="1592" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1592" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1594" pos:column="9">virtual <comment type="block" pos:line="1594" pos:column="17">/* [restricted][id] */</comment> <name pos:line="1594" pos:column="40">HRESULT</name> <name pos:line="1594" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="1594" pos:column="66">_NewEnum</name><argument_list pos:line="1594" pos:column="74">( 
            <comment type="block" pos:line="1595" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1595" pos:column="33">__RPC__deref_out_opt IUnknown **Enumerator</argument>)</argument_list></macro> <op:operator pos:line="1595" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="1595" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="1597" pos:column="9">virtual <comment type="block" pos:line="1597" pos:column="17">/* [propget][id] */</comment> <name pos:line="1597" pos:column="37">HRESULT</name> <name pos:line="1597" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1597" pos:column="63">get_DTE</name><argument_list pos:line="1597" pos:column="70">( 
            <comment type="block" pos:line="1598" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1598" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1598" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="1598" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="1598" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="1600" pos:column="9">virtual <comment type="block" pos:line="1600" pos:column="17">/* [propget][id] */</comment> <name pos:line="1600" pos:column="37">HRESULT</name> <name pos:line="1600" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1600" pos:column="63">get_Parent</name><argument_list pos:line="1600" pos:column="73">( 
            <comment type="block" pos:line="1601" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1601" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1601" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="1601" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="1601" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="1603" pos:column="9">virtual <comment type="block" pos:line="1603" pos:column="17">/* [propget][id] */</comment> <name pos:line="1603" pos:column="37">HRESULT</name> <name pos:line="1603" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1603" pos:column="63">get_Count</name><argument_list pos:line="1603" pos:column="72">( 
            <comment type="block" pos:line="1604" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1604" pos:column="33">__RPC__out long *Count</argument>)</argument_list></macro> <op:operator pos:line="1604" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="1604" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1608" pos:column="1">#<cpp:directive pos:line="1608" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1608" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1610" pos:column="5">typedef <type><struct pos:line="1610" pos:column="13">struct <name pos:line="1610" pos:column="20">ModulesVtbl</name>
    <block pos:line="1611" pos:column="5">{<public type="default" pos:line="1611" pos:column="6">
        <function_decl><type><name pos:line="1612" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1614" pos:column="9">HRESULT</name></type> ( <name pos:line="1614" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1614" pos:column="37">*</type:modifier><name pos:line="1614" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1614" pos:column="54">( 
            <param><decl><type><name pos:line="1615" pos:column="13">Modules</name> <type:modifier pos:line="1615" pos:column="21">*</type:modifier></type> <name pos:line="1615" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1616" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1616" pos:column="24">__RPC__in</name> <name pos:line="1616" pos:column="34">REFIID</name></type> <name pos:line="1616" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1617" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1618" pos:column="13">__RPC__deref_out</name>  <name pos:line="1618" pos:column="31">void</name> <type:modifier pos:line="1618" pos:column="36">*</type:modifier><type:modifier pos:line="1618" pos:column="37">*</type:modifier></type><name pos:line="1618" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1620" pos:column="9">ULONG</name></type> ( <name pos:line="1620" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1620" pos:column="35">*</type:modifier><name pos:line="1620" pos:column="36">AddRef</name> )<parameter_list pos:line="1620" pos:column="44">( 
            <param><decl><type><name pos:line="1621" pos:column="13">Modules</name> <type:modifier pos:line="1621" pos:column="21">*</type:modifier></type> <name pos:line="1621" pos:column="23">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1623" pos:column="9">ULONG</name></type> ( <name pos:line="1623" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1623" pos:column="35">*</type:modifier><name pos:line="1623" pos:column="36">Release</name> )<parameter_list pos:line="1623" pos:column="45">( 
            <param><decl><type><name pos:line="1624" pos:column="13">Modules</name> <type:modifier pos:line="1624" pos:column="21">*</type:modifier></type> <name pos:line="1624" pos:column="23">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1626" pos:column="9">HRESULT</name></type> ( <name pos:line="1626" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1626" pos:column="37">*</type:modifier><name pos:line="1626" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="1626" pos:column="56">( 
            <param><decl><type><name pos:line="1627" pos:column="13">Modules</name> <type:modifier pos:line="1627" pos:column="21">*</type:modifier></type> <name pos:line="1627" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1628" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1628" pos:column="25">__RPC__out</name> <name pos:line="1628" pos:column="36">UINT</name> <type:modifier pos:line="1628" pos:column="41">*</type:modifier></type><name pos:line="1628" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1630" pos:column="9">HRESULT</name></type> ( <name pos:line="1630" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1630" pos:column="37">*</type:modifier><name pos:line="1630" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="1630" pos:column="51">( 
            <param><decl><type><name pos:line="1631" pos:column="13">Modules</name> <type:modifier pos:line="1631" pos:column="21">*</type:modifier></type> <name pos:line="1631" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1632" pos:column="24">UINT</name></type> <name pos:line="1632" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="1633" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1633" pos:column="24">LCID</name></type> <name pos:line="1633" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1634" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1634" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1634" pos:column="46">ITypeInfo</name> <type:modifier pos:line="1634" pos:column="56">*</type:modifier><type:modifier pos:line="1634" pos:column="57">*</type:modifier></type><name pos:line="1634" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1636" pos:column="9">HRESULT</name> <argument_list pos:line="1636" pos:column="17">( <argument pos:line="1636" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1636" pos:column="53">(</op:operator> 
            <name pos:line="1637" pos:column="13">Modules</name> <op:operator pos:line="1637" pos:column="21">*</op:operator> <name pos:line="1637" pos:column="23">This</name><op:operator pos:line="1637" pos:column="27">,</op:operator>
            <comment type="block" pos:line="1638" pos:column="13">/* [in] */</comment> <name pos:line="1638" pos:column="24">__RPC__in</name> <name pos:line="1638" pos:column="34">REFIID</name> <name pos:line="1638" pos:column="41">riid</name><op:operator pos:line="1638" pos:column="45">,</op:operator>
            <comment type="block" pos:line="1639" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1639" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1639" pos:column="54">(<argument pos:line="1639" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="1639" pos:column="63">LPOLESTR</name> <op:operator pos:line="1639" pos:column="72">*</op:operator><name pos:line="1639" pos:column="73">rgszNames</name><op:operator pos:line="1639" pos:column="82">,</op:operator>
            <comment type="block" pos:line="1640" pos:column="13">/* [range][in] */</comment> <name pos:line="1640" pos:column="31">UINT</name> <name pos:line="1640" pos:column="36">cNames</name><op:operator pos:line="1640" pos:column="42">,</op:operator>
            <comment type="block" pos:line="1641" pos:column="13">/* [in] */</comment> <name pos:line="1641" pos:column="24">LCID</name> <name pos:line="1641" pos:column="29">lcid</name><op:operator pos:line="1641" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1642" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="1642" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="1642" pos:column="56">(<argument pos:line="1642" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="1642" pos:column="65">DISPID</name> <op:operator pos:line="1642" pos:column="72">*</op:operator><name pos:line="1642" pos:column="73">rgDispId</name><op:operator pos:line="1642" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1644" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="1644" pos:column="23">HRESULT</name></type> ( <name pos:line="1644" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="1644" pos:column="51">*</type:modifier><name pos:line="1644" pos:column="52">Invoke</name> )<parameter_list pos:line="1644" pos:column="60">( 
            <param><decl><type><name pos:line="1645" pos:column="13">Modules</name> <type:modifier pos:line="1645" pos:column="21">*</type:modifier></type> <name pos:line="1645" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1646" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1646" pos:column="24">DISPID</name></type> <name pos:line="1646" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="1647" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1647" pos:column="24">REFIID</name></type> <name pos:line="1647" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1648" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1648" pos:column="24">LCID</name></type> <name pos:line="1648" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1649" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1649" pos:column="24">WORD</name></type> <name pos:line="1649" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="1650" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="1650" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="1650" pos:column="40">*</type:modifier></type><name pos:line="1650" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="1651" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1651" pos:column="25">VARIANT</name> <type:modifier pos:line="1651" pos:column="33">*</type:modifier></type><name pos:line="1651" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="1652" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1652" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="1652" pos:column="35">*</type:modifier></type><name pos:line="1652" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="1653" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1653" pos:column="25">UINT</name> <type:modifier pos:line="1653" pos:column="30">*</type:modifier></type><name pos:line="1653" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1655" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="1655" pos:column="20">HRESULT</name></type> ( <name pos:line="1655" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="1655" pos:column="48">*</type:modifier><name pos:line="1655" pos:column="49">Item</name> )<parameter_list pos:line="1655" pos:column="55">( 
            <param><decl><type><name pos:line="1656" pos:column="13">Modules</name> <type:modifier pos:line="1656" pos:column="21">*</type:modifier></type> <name pos:line="1656" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1657" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1657" pos:column="24">VARIANT</name></type> <name pos:line="1657" pos:column="32">Index</name></decl></param>,
            <comment type="block" pos:line="1658" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1658" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1658" pos:column="54">Module</name> <type:modifier pos:line="1658" pos:column="61">*</type:modifier><type:modifier pos:line="1658" pos:column="62">*</type:modifier></type><name pos:line="1658" pos:column="63">Module</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1660" pos:column="9">/* [restricted][id] */</comment> <function_decl><type><name pos:line="1660" pos:column="32">HRESULT</name></type> ( <name pos:line="1660" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="1660" pos:column="60">*</type:modifier><name pos:line="1660" pos:column="61">_NewEnum</name> )<parameter_list pos:line="1660" pos:column="71">( 
            <param><decl><type><name pos:line="1661" pos:column="13">Modules</name> <type:modifier pos:line="1661" pos:column="21">*</type:modifier></type> <name pos:line="1661" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1662" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1662" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1662" pos:column="54">IUnknown</name> <type:modifier pos:line="1662" pos:column="63">*</type:modifier><type:modifier pos:line="1662" pos:column="64">*</type:modifier></type><name pos:line="1662" pos:column="65">Enumerator</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1664" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1664" pos:column="29">HRESULT</name></type> ( <name pos:line="1664" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1664" pos:column="57">*</type:modifier><name pos:line="1664" pos:column="58">get_DTE</name> )<parameter_list pos:line="1664" pos:column="67">( 
            <param><decl><type><name pos:line="1665" pos:column="13">Modules</name> <type:modifier pos:line="1665" pos:column="21">*</type:modifier></type> <name pos:line="1665" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1666" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1666" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1666" pos:column="54">/* external definition not present */</comment> <name pos:line="1666" pos:column="92">DTE</name> <type:modifier pos:line="1666" pos:column="96">*</type:modifier><type:modifier pos:line="1666" pos:column="97">*</type:modifier></type><name pos:line="1666" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1668" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1668" pos:column="29">HRESULT</name></type> ( <name pos:line="1668" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1668" pos:column="57">*</type:modifier><name pos:line="1668" pos:column="58">get_Parent</name> )<parameter_list pos:line="1668" pos:column="70">( 
            <param><decl><type><name pos:line="1669" pos:column="13">Modules</name> <type:modifier pos:line="1669" pos:column="21">*</type:modifier></type> <name pos:line="1669" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1670" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1670" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1670" pos:column="54">/* external definition not present */</comment> <name pos:line="1670" pos:column="92">Debugger</name> <type:modifier pos:line="1670" pos:column="101">*</type:modifier><type:modifier pos:line="1670" pos:column="102">*</type:modifier></type><name pos:line="1670" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1672" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1672" pos:column="29">HRESULT</name></type> ( <name pos:line="1672" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1672" pos:column="57">*</type:modifier><name pos:line="1672" pos:column="58">get_Count</name> )<parameter_list pos:line="1672" pos:column="69">( 
            <param><decl><type><name pos:line="1673" pos:column="13">Modules</name> <type:modifier pos:line="1673" pos:column="21">*</type:modifier></type> <name pos:line="1673" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="1674" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1674" pos:column="33">__RPC__out</name> <name pos:line="1674" pos:column="44">long</name> <type:modifier pos:line="1674" pos:column="49">*</type:modifier></type><name pos:line="1674" pos:column="50">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1676" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1677" pos:column="7">ModulesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1679" pos:column="5">interface</name></type> <name pos:line="1679" pos:column="15">Modules</name>
    <argument_list pos:line="1680" pos:column="5">{
        <argument><expr><name pos:line="1681" pos:column="9">CONST_VTBL</name> struct <name pos:line="1681" pos:column="27">ModulesVtbl</name> <op:operator pos:line="1681" pos:column="39">*</op:operator><name pos:line="1681" pos:column="40">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1686" pos:column="1">#<cpp:directive pos:line="1686" pos:column="2">ifdef</cpp:directive> <name pos:line="1686" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1689" pos:column="1">#<cpp:directive pos:line="1689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1689" pos:column="9">Modules_QueryInterface</name><parameter_list pos:line="1689" pos:column="31">(<param><type><name pos:line="1689" pos:column="32">This</name></type></param>,<param><type><name pos:line="1689" pos:column="37">riid</name></type></param>,<param><type><name pos:line="1689" pos:column="42">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1690" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1692" pos:column="1">#<cpp:directive pos:line="1692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1692" pos:column="9">Modules_AddRef</name><parameter_list pos:line="1692" pos:column="23">(<param><type><name pos:line="1692" pos:column="24">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1693" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1695" pos:column="1">#<cpp:directive pos:line="1695" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1695" pos:column="9">Modules_Release</name><parameter_list pos:line="1695" pos:column="24">(<param><type><name pos:line="1695" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1696" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1699" pos:column="1">#<cpp:directive pos:line="1699" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1699" pos:column="9">Modules_GetTypeInfoCount</name><parameter_list pos:line="1699" pos:column="33">(<param><type><name pos:line="1699" pos:column="34">This</name></type></param>,<param><type><name pos:line="1699" pos:column="39">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1700" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1702" pos:column="1">#<cpp:directive pos:line="1702" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1702" pos:column="9">Modules_GetTypeInfo</name><parameter_list pos:line="1702" pos:column="28">(<param><type><name pos:line="1702" pos:column="29">This</name></type></param>,<param><type><name pos:line="1702" pos:column="34">iTInfo</name></type></param>,<param><type><name pos:line="1702" pos:column="41">lcid</name></type></param>,<param><type><name pos:line="1702" pos:column="46">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1703" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1705" pos:column="1">#<cpp:directive pos:line="1705" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1705" pos:column="9">Modules_GetIDsOfNames</name><parameter_list pos:line="1705" pos:column="30">(<param><type><name pos:line="1705" pos:column="31">This</name></type></param>,<param><type><name pos:line="1705" pos:column="36">riid</name></type></param>,<param><type><name pos:line="1705" pos:column="41">rgszNames</name></type></param>,<param><type><name pos:line="1705" pos:column="51">cNames</name></type></param>,<param><type><name pos:line="1705" pos:column="58">lcid</name></type></param>,<param><type><name pos:line="1705" pos:column="63">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1706" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="1708" pos:column="1">#<cpp:directive pos:line="1708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1708" pos:column="9">Modules_Invoke</name><parameter_list pos:line="1708" pos:column="23">(<param><type><name pos:line="1708" pos:column="24">This</name></type></param>,<param><type><name pos:line="1708" pos:column="29">dispIdMember</name></type></param>,<param><type><name pos:line="1708" pos:column="42">riid</name></type></param>,<param><type><name pos:line="1708" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="1708" pos:column="52">wFlags</name></type></param>,<param><type><name pos:line="1708" pos:column="59">pDispParams</name></type></param>,<param><type><name pos:line="1708" pos:column="71">pVarResult</name></type></param>,<param><type><name pos:line="1708" pos:column="82">pExcepInfo</name></type></param>,<param><type><name pos:line="1708" pos:column="93">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1709" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="1712" pos:column="1">#<cpp:directive pos:line="1712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1712" pos:column="9">Modules_Item</name><parameter_list pos:line="1712" pos:column="21">(<param><type><name pos:line="1712" pos:column="22">This</name></type></param>,<param><type><name pos:line="1712" pos:column="27">Index</name></type></param>,<param><type><name pos:line="1712" pos:column="33">Module</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1713" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,Index,Module) )</cpp:value></cpp:define> 

<cpp:define pos:line="1715" pos:column="1">#<cpp:directive pos:line="1715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1715" pos:column="9">Modules__NewEnum</name><parameter_list pos:line="1715" pos:column="25">(<param><type><name pos:line="1715" pos:column="26">This</name></type></param>,<param><type><name pos:line="1715" pos:column="31">Enumerator</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1716" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,Enumerator) )</cpp:value></cpp:define> 

<cpp:define pos:line="1718" pos:column="1">#<cpp:directive pos:line="1718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1718" pos:column="9">Modules_get_DTE</name><parameter_list pos:line="1718" pos:column="24">(<param><type><name pos:line="1718" pos:column="25">This</name></type></param>,<param><type><name pos:line="1718" pos:column="30">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1719" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1721" pos:column="1">#<cpp:directive pos:line="1721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1721" pos:column="9">Modules_get_Parent</name><parameter_list pos:line="1721" pos:column="27">(<param><type><name pos:line="1721" pos:column="28">This</name></type></param>,<param><type><name pos:line="1721" pos:column="33">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1722" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="1724" pos:column="1">#<cpp:directive pos:line="1724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1724" pos:column="9">Modules_get_Count</name><parameter_list pos:line="1724" pos:column="26">(<param><type><name pos:line="1724" pos:column="27">This</name></type></param>,<param><type><name pos:line="1724" pos:column="32">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1725" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,Count) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1727" pos:column="1">#<cpp:directive pos:line="1727" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1727" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1730" pos:column="1">#<cpp:directive pos:line="1730" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1730" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1735" pos:column="1">#<cpp:directive pos:line="1735" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1735" pos:column="9">/* __Modules_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1738" pos:column="1">#<cpp:directive pos:line="1738" pos:column="2">ifndef</cpp:directive> <name pos:line="1738" pos:column="9">__Module_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1739" pos:column="1">#<cpp:directive pos:line="1739" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1739" pos:column="9">__Module_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1741" pos:column="1">/* interface Module */</comment>
<comment type="block" pos:line="1742" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1745" pos:column="1">EXTERN_C</name> <specifier pos:line="1745" pos:column="10">const</specifier> <name pos:line="1745" pos:column="16">IID</name></type> <name pos:line="1745" pos:column="20">IID_Module</name></decl>;</decl_stmt>

<cpp:if pos:line="1747" pos:column="1">#<cpp:directive pos:line="1747" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1747" pos:column="5">defined</name><argument_list pos:line="1747" pos:column="12">(<argument><expr><name pos:line="1747" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1747" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1747" pos:column="29">!</op:operator><call><name pos:line="1747" pos:column="30">defined</name><argument_list pos:line="1747" pos:column="37">(<argument><expr><name pos:line="1747" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1749" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1749" pos:column="19">(<argument pos:line="1749" pos:column="20">"72832EE4-5808-433d-83A7-B8F149A79DB4"</argument>)</argument_list></macro>
    <label><name pos:line="1750" pos:column="5">Module</name> :</label> <expr_stmt><expr pos:line="1750" pos:column="14">public <name pos:line="1750" pos:column="21">IDispatch</name>
    <block pos:line="1751" pos:column="5">{
    <expr pos:line="1752" pos:column="5">public<op:operator pos:line="1752" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1753" pos:column="17">/* [propget][id] */</comment> <name pos:line="1753" pos:column="37">HRESULT</name> <name pos:line="1753" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1753" pos:column="63">get_Name</name><argument_list pos:line="1753" pos:column="71">( 
            <comment type="block" pos:line="1754" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1754" pos:column="33">__RPC__deref_out_opt BSTR *Name</argument>)</argument_list></macro> <op:operator pos:line="1754" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="1754" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="1756" pos:column="9">virtual <comment type="block" pos:line="1756" pos:column="17">/* [propget][id] */</comment> <name pos:line="1756" pos:column="37">HRESULT</name> <name pos:line="1756" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1756" pos:column="63">get_Path</name><argument_list pos:line="1756" pos:column="71">( 
            <comment type="block" pos:line="1757" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1757" pos:column="33">__RPC__deref_out_opt BSTR *Path</argument>)</argument_list></macro> <op:operator pos:line="1757" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="1757" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="1759" pos:column="9">virtual <comment type="block" pos:line="1759" pos:column="17">/* [propget][id] */</comment> <name pos:line="1759" pos:column="37">HRESULT</name> <name pos:line="1759" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1759" pos:column="63">get_Optimized</name><argument_list pos:line="1759" pos:column="76">( 
            <comment type="block" pos:line="1760" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1760" pos:column="33">__RPC__out VARIANT_BOOL *Optimized</argument>)</argument_list></macro> <op:operator pos:line="1760" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1760" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1762" pos:column="9">virtual <comment type="block" pos:line="1762" pos:column="17">/* [propget][id] */</comment> <name pos:line="1762" pos:column="37">HRESULT</name> <name pos:line="1762" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1762" pos:column="63">get_UserCode</name><argument_list pos:line="1762" pos:column="75">( 
            <comment type="block" pos:line="1763" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1763" pos:column="33">__RPC__out VARIANT_BOOL *UserCode</argument>)</argument_list></macro> <op:operator pos:line="1763" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="1763" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="1765" pos:column="9">virtual <comment type="block" pos:line="1765" pos:column="17">/* [propget][id] */</comment> <name pos:line="1765" pos:column="37">HRESULT</name> <name pos:line="1765" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1765" pos:column="63">get_SymbolFile</name><argument_list pos:line="1765" pos:column="77">( 
            <comment type="block" pos:line="1766" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1766" pos:column="33">__RPC__deref_out_opt BSTR *SymbolFile</argument>)</argument_list></macro> <op:operator pos:line="1766" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="1766" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="1768" pos:column="9">virtual <comment type="block" pos:line="1768" pos:column="17">/* [propget][id] */</comment> <name pos:line="1768" pos:column="37">HRESULT</name> <name pos:line="1768" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1768" pos:column="63">get_Order</name><argument_list pos:line="1768" pos:column="72">( 
            <comment type="block" pos:line="1769" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1769" pos:column="33">__RPC__out DWORD *Order</argument>)</argument_list></macro> <op:operator pos:line="1769" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="1769" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="1771" pos:column="9">virtual <comment type="block" pos:line="1771" pos:column="17">/* [propget][id] */</comment> <name pos:line="1771" pos:column="37">HRESULT</name> <name pos:line="1771" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1771" pos:column="63">get_Version</name><argument_list pos:line="1771" pos:column="74">( 
            <comment type="block" pos:line="1772" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1772" pos:column="33">__RPC__deref_out_opt BSTR *Version</argument>)</argument_list></macro> <op:operator pos:line="1772" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1772" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1774" pos:column="9">virtual <comment type="block" pos:line="1774" pos:column="17">/* [propget][id] */</comment> <name pos:line="1774" pos:column="37">HRESULT</name> <name pos:line="1774" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1774" pos:column="63">get_LoadAddress</name><argument_list pos:line="1774" pos:column="78">( 
            <comment type="block" pos:line="1775" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1775" pos:column="33">__RPC__out UINT64 *LoadAddress</argument>)</argument_list></macro> <op:operator pos:line="1775" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="1775" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="1777" pos:column="9">virtual <comment type="block" pos:line="1777" pos:column="17">/* [propget][id] */</comment> <name pos:line="1777" pos:column="37">HRESULT</name> <name pos:line="1777" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1777" pos:column="63">get_EndAddress</name><argument_list pos:line="1777" pos:column="77">( 
            <comment type="block" pos:line="1778" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1778" pos:column="33">__RPC__out UINT64 *EndAddress</argument>)</argument_list></macro> <op:operator pos:line="1778" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="1778" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="1780" pos:column="9">virtual <comment type="block" pos:line="1780" pos:column="17">/* [propget][id] */</comment> <name pos:line="1780" pos:column="37">HRESULT</name> <name pos:line="1780" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1780" pos:column="63">get_Rebased</name><argument_list pos:line="1780" pos:column="74">( 
            <comment type="block" pos:line="1781" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1781" pos:column="33">__RPC__out VARIANT_BOOL *Rebased</argument>)</argument_list></macro> <op:operator pos:line="1781" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="1781" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="1783" pos:column="9">virtual <comment type="block" pos:line="1783" pos:column="17">/* [propget][id] */</comment> <name pos:line="1783" pos:column="37">HRESULT</name> <name pos:line="1783" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1783" pos:column="63">get_DTE</name><argument_list pos:line="1783" pos:column="70">( 
            <comment type="block" pos:line="1784" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1784" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1784" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="1784" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="1784" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="1786" pos:column="9">virtual <comment type="block" pos:line="1786" pos:column="17">/* [propget][id] */</comment> <name pos:line="1786" pos:column="37">HRESULT</name> <name pos:line="1786" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1786" pos:column="63">get_Parent</name><argument_list pos:line="1786" pos:column="73">( 
            <comment type="block" pos:line="1787" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1787" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1787" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="1787" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="1787" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="1789" pos:column="9">virtual <comment type="block" pos:line="1789" pos:column="17">/* [propget][id] */</comment> <name pos:line="1789" pos:column="37">HRESULT</name> <name pos:line="1789" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1789" pos:column="63">get_Collection</name><argument_list pos:line="1789" pos:column="77">( 
            <comment type="block" pos:line="1790" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1790" pos:column="33">__RPC__deref_out_opt Modules **Modules</argument>)</argument_list></macro> <op:operator pos:line="1790" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1790" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="1792" pos:column="9">virtual <comment type="block" pos:line="1792" pos:column="17">/* [propget][id] */</comment> <name pos:line="1792" pos:column="37">HRESULT</name> <name pos:line="1792" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1792" pos:column="63">get_Process</name><argument_list pos:line="1792" pos:column="74">( 
            <comment type="block" pos:line="1793" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1793" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1793" pos:column="54">/* external definition not present */</comment> Process **Process</argument>)</argument_list></macro> <op:operator pos:line="1793" pos:column="111">=</op:operator> <lit:literal type="number" pos:line="1793" pos:column="113">0</lit:literal></expr>;
        
        <expr pos:line="1795" pos:column="9">virtual <comment type="block" pos:line="1795" pos:column="17">/* [propget][id] */</comment> <name pos:line="1795" pos:column="37">HRESULT</name> <name pos:line="1795" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="1795" pos:column="63">get_Is64bit</name><argument_list pos:line="1795" pos:column="74">( 
            <comment type="block" pos:line="1796" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1796" pos:column="33">__RPC__out VARIANT_BOOL *Is64bit</argument>)</argument_list></macro> <op:operator pos:line="1796" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="1796" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="1798" pos:column="9">virtual <comment type="block" pos:line="1798" pos:column="17">/* [id] */</comment> <name pos:line="1798" pos:column="28">HRESULT</name> <name pos:line="1798" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="1798" pos:column="54">LoadSymbols</name><argument_list pos:line="1798" pos:column="65">( 
            <comment type="block" pos:line="1799" pos:column="13">/* [in] */</comment> <argument pos:line="1799" pos:column="24">__RPC__in BSTR SymbolPath</argument>)</argument_list></macro> <op:operator pos:line="1799" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="1799" pos:column="53">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1803" pos:column="1">#<cpp:directive pos:line="1803" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1803" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1805" pos:column="5">typedef <type><struct pos:line="1805" pos:column="13">struct <name pos:line="1805" pos:column="20">ModuleVtbl</name>
    <block pos:line="1806" pos:column="5">{<public type="default" pos:line="1806" pos:column="6">
        <function_decl><type><name pos:line="1807" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1809" pos:column="9">HRESULT</name></type> ( <name pos:line="1809" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1809" pos:column="37">*</type:modifier><name pos:line="1809" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1809" pos:column="54">( 
            <param><decl><type><name pos:line="1810" pos:column="13">Module</name> <type:modifier pos:line="1810" pos:column="20">*</type:modifier></type> <name pos:line="1810" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1811" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1811" pos:column="24">__RPC__in</name> <name pos:line="1811" pos:column="34">REFIID</name></type> <name pos:line="1811" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1812" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1813" pos:column="13">__RPC__deref_out</name>  <name pos:line="1813" pos:column="31">void</name> <type:modifier pos:line="1813" pos:column="36">*</type:modifier><type:modifier pos:line="1813" pos:column="37">*</type:modifier></type><name pos:line="1813" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1815" pos:column="9">ULONG</name></type> ( <name pos:line="1815" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1815" pos:column="35">*</type:modifier><name pos:line="1815" pos:column="36">AddRef</name> )<parameter_list pos:line="1815" pos:column="44">( 
            <param><decl><type><name pos:line="1816" pos:column="13">Module</name> <type:modifier pos:line="1816" pos:column="20">*</type:modifier></type> <name pos:line="1816" pos:column="22">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1818" pos:column="9">ULONG</name></type> ( <name pos:line="1818" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1818" pos:column="35">*</type:modifier><name pos:line="1818" pos:column="36">Release</name> )<parameter_list pos:line="1818" pos:column="45">( 
            <param><decl><type><name pos:line="1819" pos:column="13">Module</name> <type:modifier pos:line="1819" pos:column="20">*</type:modifier></type> <name pos:line="1819" pos:column="22">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1821" pos:column="9">HRESULT</name></type> ( <name pos:line="1821" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1821" pos:column="37">*</type:modifier><name pos:line="1821" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="1821" pos:column="56">( 
            <param><decl><type><name pos:line="1822" pos:column="13">Module</name> <type:modifier pos:line="1822" pos:column="20">*</type:modifier></type> <name pos:line="1822" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1823" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1823" pos:column="25">__RPC__out</name> <name pos:line="1823" pos:column="36">UINT</name> <type:modifier pos:line="1823" pos:column="41">*</type:modifier></type><name pos:line="1823" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1825" pos:column="9">HRESULT</name></type> ( <name pos:line="1825" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1825" pos:column="37">*</type:modifier><name pos:line="1825" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="1825" pos:column="51">( 
            <param><decl><type><name pos:line="1826" pos:column="13">Module</name> <type:modifier pos:line="1826" pos:column="20">*</type:modifier></type> <name pos:line="1826" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1827" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1827" pos:column="24">UINT</name></type> <name pos:line="1827" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="1828" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1828" pos:column="24">LCID</name></type> <name pos:line="1828" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1829" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1829" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1829" pos:column="46">ITypeInfo</name> <type:modifier pos:line="1829" pos:column="56">*</type:modifier><type:modifier pos:line="1829" pos:column="57">*</type:modifier></type><name pos:line="1829" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1831" pos:column="9">HRESULT</name> <argument_list pos:line="1831" pos:column="17">( <argument pos:line="1831" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1831" pos:column="53">(</op:operator> 
            <name pos:line="1832" pos:column="13">Module</name> <op:operator pos:line="1832" pos:column="20">*</op:operator> <name pos:line="1832" pos:column="22">This</name><op:operator pos:line="1832" pos:column="26">,</op:operator>
            <comment type="block" pos:line="1833" pos:column="13">/* [in] */</comment> <name pos:line="1833" pos:column="24">__RPC__in</name> <name pos:line="1833" pos:column="34">REFIID</name> <name pos:line="1833" pos:column="41">riid</name><op:operator pos:line="1833" pos:column="45">,</op:operator>
            <comment type="block" pos:line="1834" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1834" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1834" pos:column="54">(<argument pos:line="1834" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="1834" pos:column="63">LPOLESTR</name> <op:operator pos:line="1834" pos:column="72">*</op:operator><name pos:line="1834" pos:column="73">rgszNames</name><op:operator pos:line="1834" pos:column="82">,</op:operator>
            <comment type="block" pos:line="1835" pos:column="13">/* [range][in] */</comment> <name pos:line="1835" pos:column="31">UINT</name> <name pos:line="1835" pos:column="36">cNames</name><op:operator pos:line="1835" pos:column="42">,</op:operator>
            <comment type="block" pos:line="1836" pos:column="13">/* [in] */</comment> <name pos:line="1836" pos:column="24">LCID</name> <name pos:line="1836" pos:column="29">lcid</name><op:operator pos:line="1836" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1837" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="1837" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="1837" pos:column="56">(<argument pos:line="1837" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="1837" pos:column="65">DISPID</name> <op:operator pos:line="1837" pos:column="72">*</op:operator><name pos:line="1837" pos:column="73">rgDispId</name><op:operator pos:line="1837" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1839" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="1839" pos:column="23">HRESULT</name></type> ( <name pos:line="1839" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="1839" pos:column="51">*</type:modifier><name pos:line="1839" pos:column="52">Invoke</name> )<parameter_list pos:line="1839" pos:column="60">( 
            <param><decl><type><name pos:line="1840" pos:column="13">Module</name> <type:modifier pos:line="1840" pos:column="20">*</type:modifier></type> <name pos:line="1840" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1841" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1841" pos:column="24">DISPID</name></type> <name pos:line="1841" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="1842" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1842" pos:column="24">REFIID</name></type> <name pos:line="1842" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1843" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1843" pos:column="24">LCID</name></type> <name pos:line="1843" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1844" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1844" pos:column="24">WORD</name></type> <name pos:line="1844" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="1845" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="1845" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="1845" pos:column="40">*</type:modifier></type><name pos:line="1845" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="1846" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1846" pos:column="25">VARIANT</name> <type:modifier pos:line="1846" pos:column="33">*</type:modifier></type><name pos:line="1846" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="1847" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1847" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="1847" pos:column="35">*</type:modifier></type><name pos:line="1847" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="1848" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1848" pos:column="25">UINT</name> <type:modifier pos:line="1848" pos:column="30">*</type:modifier></type><name pos:line="1848" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1850" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1850" pos:column="29">HRESULT</name></type> ( <name pos:line="1850" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1850" pos:column="57">*</type:modifier><name pos:line="1850" pos:column="58">get_Name</name> )<parameter_list pos:line="1850" pos:column="68">( 
            <param><decl><type><name pos:line="1851" pos:column="13">Module</name> <type:modifier pos:line="1851" pos:column="20">*</type:modifier></type> <name pos:line="1851" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1852" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1852" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1852" pos:column="54">BSTR</name> <type:modifier pos:line="1852" pos:column="59">*</type:modifier></type><name pos:line="1852" pos:column="60">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1854" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1854" pos:column="29">HRESULT</name></type> ( <name pos:line="1854" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1854" pos:column="57">*</type:modifier><name pos:line="1854" pos:column="58">get_Path</name> )<parameter_list pos:line="1854" pos:column="68">( 
            <param><decl><type><name pos:line="1855" pos:column="13">Module</name> <type:modifier pos:line="1855" pos:column="20">*</type:modifier></type> <name pos:line="1855" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1856" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1856" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1856" pos:column="54">BSTR</name> <type:modifier pos:line="1856" pos:column="59">*</type:modifier></type><name pos:line="1856" pos:column="60">Path</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1858" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1858" pos:column="29">HRESULT</name></type> ( <name pos:line="1858" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1858" pos:column="57">*</type:modifier><name pos:line="1858" pos:column="58">get_Optimized</name> )<parameter_list pos:line="1858" pos:column="73">( 
            <param><decl><type><name pos:line="1859" pos:column="13">Module</name> <type:modifier pos:line="1859" pos:column="20">*</type:modifier></type> <name pos:line="1859" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1860" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1860" pos:column="33">__RPC__out</name> <name pos:line="1860" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1860" pos:column="57">*</type:modifier></type><name pos:line="1860" pos:column="58">Optimized</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1862" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1862" pos:column="29">HRESULT</name></type> ( <name pos:line="1862" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1862" pos:column="57">*</type:modifier><name pos:line="1862" pos:column="58">get_UserCode</name> )<parameter_list pos:line="1862" pos:column="72">( 
            <param><decl><type><name pos:line="1863" pos:column="13">Module</name> <type:modifier pos:line="1863" pos:column="20">*</type:modifier></type> <name pos:line="1863" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1864" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1864" pos:column="33">__RPC__out</name> <name pos:line="1864" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1864" pos:column="57">*</type:modifier></type><name pos:line="1864" pos:column="58">UserCode</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1866" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1866" pos:column="29">HRESULT</name></type> ( <name pos:line="1866" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1866" pos:column="57">*</type:modifier><name pos:line="1866" pos:column="58">get_SymbolFile</name> )<parameter_list pos:line="1866" pos:column="74">( 
            <param><decl><type><name pos:line="1867" pos:column="13">Module</name> <type:modifier pos:line="1867" pos:column="20">*</type:modifier></type> <name pos:line="1867" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1868" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1868" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1868" pos:column="54">BSTR</name> <type:modifier pos:line="1868" pos:column="59">*</type:modifier></type><name pos:line="1868" pos:column="60">SymbolFile</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1870" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1870" pos:column="29">HRESULT</name></type> ( <name pos:line="1870" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1870" pos:column="57">*</type:modifier><name pos:line="1870" pos:column="58">get_Order</name> )<parameter_list pos:line="1870" pos:column="69">( 
            <param><decl><type><name pos:line="1871" pos:column="13">Module</name> <type:modifier pos:line="1871" pos:column="20">*</type:modifier></type> <name pos:line="1871" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1872" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1872" pos:column="33">__RPC__out</name> <name pos:line="1872" pos:column="44">DWORD</name> <type:modifier pos:line="1872" pos:column="50">*</type:modifier></type><name pos:line="1872" pos:column="51">Order</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1874" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1874" pos:column="29">HRESULT</name></type> ( <name pos:line="1874" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1874" pos:column="57">*</type:modifier><name pos:line="1874" pos:column="58">get_Version</name> )<parameter_list pos:line="1874" pos:column="71">( 
            <param><decl><type><name pos:line="1875" pos:column="13">Module</name> <type:modifier pos:line="1875" pos:column="20">*</type:modifier></type> <name pos:line="1875" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1876" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1876" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1876" pos:column="54">BSTR</name> <type:modifier pos:line="1876" pos:column="59">*</type:modifier></type><name pos:line="1876" pos:column="60">Version</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1878" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1878" pos:column="29">HRESULT</name></type> ( <name pos:line="1878" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1878" pos:column="57">*</type:modifier><name pos:line="1878" pos:column="58">get_LoadAddress</name> )<parameter_list pos:line="1878" pos:column="75">( 
            <param><decl><type><name pos:line="1879" pos:column="13">Module</name> <type:modifier pos:line="1879" pos:column="20">*</type:modifier></type> <name pos:line="1879" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1880" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1880" pos:column="33">__RPC__out</name> <name pos:line="1880" pos:column="44">UINT64</name> <type:modifier pos:line="1880" pos:column="51">*</type:modifier></type><name pos:line="1880" pos:column="52">LoadAddress</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1882" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1882" pos:column="29">HRESULT</name></type> ( <name pos:line="1882" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1882" pos:column="57">*</type:modifier><name pos:line="1882" pos:column="58">get_EndAddress</name> )<parameter_list pos:line="1882" pos:column="74">( 
            <param><decl><type><name pos:line="1883" pos:column="13">Module</name> <type:modifier pos:line="1883" pos:column="20">*</type:modifier></type> <name pos:line="1883" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1884" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1884" pos:column="33">__RPC__out</name> <name pos:line="1884" pos:column="44">UINT64</name> <type:modifier pos:line="1884" pos:column="51">*</type:modifier></type><name pos:line="1884" pos:column="52">EndAddress</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1886" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1886" pos:column="29">HRESULT</name></type> ( <name pos:line="1886" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1886" pos:column="57">*</type:modifier><name pos:line="1886" pos:column="58">get_Rebased</name> )<parameter_list pos:line="1886" pos:column="71">( 
            <param><decl><type><name pos:line="1887" pos:column="13">Module</name> <type:modifier pos:line="1887" pos:column="20">*</type:modifier></type> <name pos:line="1887" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1888" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1888" pos:column="33">__RPC__out</name> <name pos:line="1888" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1888" pos:column="57">*</type:modifier></type><name pos:line="1888" pos:column="58">Rebased</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1890" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1890" pos:column="29">HRESULT</name></type> ( <name pos:line="1890" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1890" pos:column="57">*</type:modifier><name pos:line="1890" pos:column="58">get_DTE</name> )<parameter_list pos:line="1890" pos:column="67">( 
            <param><decl><type><name pos:line="1891" pos:column="13">Module</name> <type:modifier pos:line="1891" pos:column="20">*</type:modifier></type> <name pos:line="1891" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1892" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1892" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1892" pos:column="54">/* external definition not present */</comment> <name pos:line="1892" pos:column="92">DTE</name> <type:modifier pos:line="1892" pos:column="96">*</type:modifier><type:modifier pos:line="1892" pos:column="97">*</type:modifier></type><name pos:line="1892" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1894" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1894" pos:column="29">HRESULT</name></type> ( <name pos:line="1894" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1894" pos:column="57">*</type:modifier><name pos:line="1894" pos:column="58">get_Parent</name> )<parameter_list pos:line="1894" pos:column="70">( 
            <param><decl><type><name pos:line="1895" pos:column="13">Module</name> <type:modifier pos:line="1895" pos:column="20">*</type:modifier></type> <name pos:line="1895" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1896" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1896" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1896" pos:column="54">/* external definition not present */</comment> <name pos:line="1896" pos:column="92">Debugger</name> <type:modifier pos:line="1896" pos:column="101">*</type:modifier><type:modifier pos:line="1896" pos:column="102">*</type:modifier></type><name pos:line="1896" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1898" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1898" pos:column="29">HRESULT</name></type> ( <name pos:line="1898" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1898" pos:column="57">*</type:modifier><name pos:line="1898" pos:column="58">get_Collection</name> )<parameter_list pos:line="1898" pos:column="74">( 
            <param><decl><type><name pos:line="1899" pos:column="13">Module</name> <type:modifier pos:line="1899" pos:column="20">*</type:modifier></type> <name pos:line="1899" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1900" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1900" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1900" pos:column="54">Modules</name> <type:modifier pos:line="1900" pos:column="62">*</type:modifier><type:modifier pos:line="1900" pos:column="63">*</type:modifier></type><name pos:line="1900" pos:column="64">Modules</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1902" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1902" pos:column="29">HRESULT</name></type> ( <name pos:line="1902" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1902" pos:column="57">*</type:modifier><name pos:line="1902" pos:column="58">get_Process</name> )<parameter_list pos:line="1902" pos:column="71">( 
            <param><decl><type><name pos:line="1903" pos:column="13">Module</name> <type:modifier pos:line="1903" pos:column="20">*</type:modifier></type> <name pos:line="1903" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1904" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1904" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1904" pos:column="54">/* external definition not present */</comment> <name pos:line="1904" pos:column="92">Process</name> <type:modifier pos:line="1904" pos:column="100">*</type:modifier><type:modifier pos:line="1904" pos:column="101">*</type:modifier></type><name pos:line="1904" pos:column="102">Process</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1906" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="1906" pos:column="29">HRESULT</name></type> ( <name pos:line="1906" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="1906" pos:column="57">*</type:modifier><name pos:line="1906" pos:column="58">get_Is64bit</name> )<parameter_list pos:line="1906" pos:column="71">( 
            <param><decl><type><name pos:line="1907" pos:column="13">Module</name> <type:modifier pos:line="1907" pos:column="20">*</type:modifier></type> <name pos:line="1907" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1908" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1908" pos:column="33">__RPC__out</name> <name pos:line="1908" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1908" pos:column="57">*</type:modifier></type><name pos:line="1908" pos:column="58">Is64bit</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1910" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="1910" pos:column="20">HRESULT</name></type> ( <name pos:line="1910" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="1910" pos:column="48">*</type:modifier><name pos:line="1910" pos:column="49">LoadSymbols</name> )<parameter_list pos:line="1910" pos:column="62">( 
            <param><decl><type><name pos:line="1911" pos:column="13">Module</name> <type:modifier pos:line="1911" pos:column="20">*</type:modifier></type> <name pos:line="1911" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="1912" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1912" pos:column="24">__RPC__in</name> <name pos:line="1912" pos:column="34">BSTR</name></type> <name pos:line="1912" pos:column="39">SymbolPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1914" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1915" pos:column="7">ModuleVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1917" pos:column="5">interface</name></type> <name pos:line="1917" pos:column="15">Module</name>
    <argument_list pos:line="1918" pos:column="5">{
        <argument><expr><name pos:line="1919" pos:column="9">CONST_VTBL</name> struct <name pos:line="1919" pos:column="27">ModuleVtbl</name> <op:operator pos:line="1919" pos:column="38">*</op:operator><name pos:line="1919" pos:column="39">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1924" pos:column="1">#<cpp:directive pos:line="1924" pos:column="2">ifdef</cpp:directive> <name pos:line="1924" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1927" pos:column="1">#<cpp:directive pos:line="1927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1927" pos:column="9">Module_QueryInterface</name><parameter_list pos:line="1927" pos:column="30">(<param><type><name pos:line="1927" pos:column="31">This</name></type></param>,<param><type><name pos:line="1927" pos:column="36">riid</name></type></param>,<param><type><name pos:line="1927" pos:column="41">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1928" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1930" pos:column="1">#<cpp:directive pos:line="1930" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1930" pos:column="9">Module_AddRef</name><parameter_list pos:line="1930" pos:column="22">(<param><type><name pos:line="1930" pos:column="23">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1931" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1933" pos:column="1">#<cpp:directive pos:line="1933" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1933" pos:column="9">Module_Release</name><parameter_list pos:line="1933" pos:column="23">(<param><type><name pos:line="1933" pos:column="24">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1934" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1937" pos:column="1">#<cpp:directive pos:line="1937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1937" pos:column="9">Module_GetTypeInfoCount</name><parameter_list pos:line="1937" pos:column="32">(<param><type><name pos:line="1937" pos:column="33">This</name></type></param>,<param><type><name pos:line="1937" pos:column="38">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1938" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1940" pos:column="1">#<cpp:directive pos:line="1940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1940" pos:column="9">Module_GetTypeInfo</name><parameter_list pos:line="1940" pos:column="27">(<param><type><name pos:line="1940" pos:column="28">This</name></type></param>,<param><type><name pos:line="1940" pos:column="33">iTInfo</name></type></param>,<param><type><name pos:line="1940" pos:column="40">lcid</name></type></param>,<param><type><name pos:line="1940" pos:column="45">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1941" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1943" pos:column="1">#<cpp:directive pos:line="1943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1943" pos:column="9">Module_GetIDsOfNames</name><parameter_list pos:line="1943" pos:column="29">(<param><type><name pos:line="1943" pos:column="30">This</name></type></param>,<param><type><name pos:line="1943" pos:column="35">riid</name></type></param>,<param><type><name pos:line="1943" pos:column="40">rgszNames</name></type></param>,<param><type><name pos:line="1943" pos:column="50">cNames</name></type></param>,<param><type><name pos:line="1943" pos:column="57">lcid</name></type></param>,<param><type><name pos:line="1943" pos:column="62">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1944" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="1946" pos:column="1">#<cpp:directive pos:line="1946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1946" pos:column="9">Module_Invoke</name><parameter_list pos:line="1946" pos:column="22">(<param><type><name pos:line="1946" pos:column="23">This</name></type></param>,<param><type><name pos:line="1946" pos:column="28">dispIdMember</name></type></param>,<param><type><name pos:line="1946" pos:column="41">riid</name></type></param>,<param><type><name pos:line="1946" pos:column="46">lcid</name></type></param>,<param><type><name pos:line="1946" pos:column="51">wFlags</name></type></param>,<param><type><name pos:line="1946" pos:column="58">pDispParams</name></type></param>,<param><type><name pos:line="1946" pos:column="70">pVarResult</name></type></param>,<param><type><name pos:line="1946" pos:column="81">pExcepInfo</name></type></param>,<param><type><name pos:line="1946" pos:column="92">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1947" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="1950" pos:column="1">#<cpp:directive pos:line="1950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1950" pos:column="9">Module_get_Name</name><parameter_list pos:line="1950" pos:column="24">(<param><type><name pos:line="1950" pos:column="25">This</name></type></param>,<param><type><name pos:line="1950" pos:column="30">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1951" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="1953" pos:column="1">#<cpp:directive pos:line="1953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1953" pos:column="9">Module_get_Path</name><parameter_list pos:line="1953" pos:column="24">(<param><type><name pos:line="1953" pos:column="25">This</name></type></param>,<param><type><name pos:line="1953" pos:column="30">Path</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1954" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Path(This,Path) )</cpp:value></cpp:define> 

<cpp:define pos:line="1956" pos:column="1">#<cpp:directive pos:line="1956" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1956" pos:column="9">Module_get_Optimized</name><parameter_list pos:line="1956" pos:column="29">(<param><type><name pos:line="1956" pos:column="30">This</name></type></param>,<param><type><name pos:line="1956" pos:column="35">Optimized</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1957" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Optimized(This,Optimized) )</cpp:value></cpp:define> 

<cpp:define pos:line="1959" pos:column="1">#<cpp:directive pos:line="1959" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1959" pos:column="9">Module_get_UserCode</name><parameter_list pos:line="1959" pos:column="28">(<param><type><name pos:line="1959" pos:column="29">This</name></type></param>,<param><type><name pos:line="1959" pos:column="34">UserCode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1960" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UserCode(This,UserCode) )</cpp:value></cpp:define> 

<cpp:define pos:line="1962" pos:column="1">#<cpp:directive pos:line="1962" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1962" pos:column="9">Module_get_SymbolFile</name><parameter_list pos:line="1962" pos:column="30">(<param><type><name pos:line="1962" pos:column="31">This</name></type></param>,<param><type><name pos:line="1962" pos:column="36">SymbolFile</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1963" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SymbolFile(This,SymbolFile) )</cpp:value></cpp:define> 

<cpp:define pos:line="1965" pos:column="1">#<cpp:directive pos:line="1965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1965" pos:column="9">Module_get_Order</name><parameter_list pos:line="1965" pos:column="25">(<param><type><name pos:line="1965" pos:column="26">This</name></type></param>,<param><type><name pos:line="1965" pos:column="31">Order</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1966" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Order(This,Order) )</cpp:value></cpp:define> 

<cpp:define pos:line="1968" pos:column="1">#<cpp:directive pos:line="1968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1968" pos:column="9">Module_get_Version</name><parameter_list pos:line="1968" pos:column="27">(<param><type><name pos:line="1968" pos:column="28">This</name></type></param>,<param><type><name pos:line="1968" pos:column="33">Version</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1969" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Version(This,Version) )</cpp:value></cpp:define> 

<cpp:define pos:line="1971" pos:column="1">#<cpp:directive pos:line="1971" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1971" pos:column="9">Module_get_LoadAddress</name><parameter_list pos:line="1971" pos:column="31">(<param><type><name pos:line="1971" pos:column="32">This</name></type></param>,<param><type><name pos:line="1971" pos:column="37">LoadAddress</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1972" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LoadAddress(This,LoadAddress) )</cpp:value></cpp:define> 

<cpp:define pos:line="1974" pos:column="1">#<cpp:directive pos:line="1974" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1974" pos:column="9">Module_get_EndAddress</name><parameter_list pos:line="1974" pos:column="30">(<param><type><name pos:line="1974" pos:column="31">This</name></type></param>,<param><type><name pos:line="1974" pos:column="36">EndAddress</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1975" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndAddress(This,EndAddress) )</cpp:value></cpp:define> 

<cpp:define pos:line="1977" pos:column="1">#<cpp:directive pos:line="1977" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1977" pos:column="9">Module_get_Rebased</name><parameter_list pos:line="1977" pos:column="27">(<param><type><name pos:line="1977" pos:column="28">This</name></type></param>,<param><type><name pos:line="1977" pos:column="33">Rebased</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1978" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Rebased(This,Rebased) )</cpp:value></cpp:define> 

<cpp:define pos:line="1980" pos:column="1">#<cpp:directive pos:line="1980" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1980" pos:column="9">Module_get_DTE</name><parameter_list pos:line="1980" pos:column="23">(<param><type><name pos:line="1980" pos:column="24">This</name></type></param>,<param><type><name pos:line="1980" pos:column="29">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1981" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1983" pos:column="1">#<cpp:directive pos:line="1983" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1983" pos:column="9">Module_get_Parent</name><parameter_list pos:line="1983" pos:column="26">(<param><type><name pos:line="1983" pos:column="27">This</name></type></param>,<param><type><name pos:line="1983" pos:column="32">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1984" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="1986" pos:column="1">#<cpp:directive pos:line="1986" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1986" pos:column="9">Module_get_Collection</name><parameter_list pos:line="1986" pos:column="30">(<param><type><name pos:line="1986" pos:column="31">This</name></type></param>,<param><type><name pos:line="1986" pos:column="36">Modules</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1987" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,Modules) )</cpp:value></cpp:define> 

<cpp:define pos:line="1989" pos:column="1">#<cpp:directive pos:line="1989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1989" pos:column="9">Module_get_Process</name><parameter_list pos:line="1989" pos:column="27">(<param><type><name pos:line="1989" pos:column="28">This</name></type></param>,<param><type><name pos:line="1989" pos:column="33">Process</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1990" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Process(This,Process) )</cpp:value></cpp:define> 

<cpp:define pos:line="1992" pos:column="1">#<cpp:directive pos:line="1992" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1992" pos:column="9">Module_get_Is64bit</name><parameter_list pos:line="1992" pos:column="27">(<param><type><name pos:line="1992" pos:column="28">This</name></type></param>,<param><type><name pos:line="1992" pos:column="33">Is64bit</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1993" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Is64bit(This,Is64bit) )</cpp:value></cpp:define> 

<cpp:define pos:line="1995" pos:column="1">#<cpp:directive pos:line="1995" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1995" pos:column="9">Module_LoadSymbols</name><parameter_list pos:line="1995" pos:column="27">(<param><type><name pos:line="1995" pos:column="28">This</name></type></param>,<param><type><name pos:line="1995" pos:column="33">SymbolPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1996" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadSymbols(This,SymbolPath) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1998" pos:column="1">#<cpp:directive pos:line="1998" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1998" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2001" pos:column="1">#<cpp:directive pos:line="2001" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2001" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2006" pos:column="1">#<cpp:directive pos:line="2006" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2006" pos:column="9">/* __Module_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2009" pos:column="1">#<cpp:directive pos:line="2009" pos:column="2">ifndef</cpp:directive> <name pos:line="2009" pos:column="9">__ExceptionGroups_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2010" pos:column="1">#<cpp:directive pos:line="2010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2010" pos:column="9">__ExceptionGroups_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2012" pos:column="1">/* interface ExceptionGroups */</comment>
<comment type="block" pos:line="2013" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2016" pos:column="1">EXTERN_C</name> <specifier pos:line="2016" pos:column="10">const</specifier> <name pos:line="2016" pos:column="16">IID</name></type> <name pos:line="2016" pos:column="20">IID_ExceptionGroups</name></decl>;</decl_stmt>

<cpp:if pos:line="2018" pos:column="1">#<cpp:directive pos:line="2018" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2018" pos:column="5">defined</name><argument_list pos:line="2018" pos:column="12">(<argument><expr><name pos:line="2018" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2018" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2018" pos:column="29">!</op:operator><call><name pos:line="2018" pos:column="30">defined</name><argument_list pos:line="2018" pos:column="37">(<argument><expr><name pos:line="2018" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2020" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2020" pos:column="19">(<argument pos:line="2020" pos:column="20">"21BDC491-F828-4846-9FD8-75C9148AEA24"</argument>)</argument_list></macro>
    <label><name pos:line="2021" pos:column="5">ExceptionGroups</name> :</label> <expr_stmt><expr pos:line="2021" pos:column="23">public <name pos:line="2021" pos:column="30">IDispatch</name>
    <block pos:line="2022" pos:column="5">{
    <expr pos:line="2023" pos:column="5">public<op:operator pos:line="2023" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2024" pos:column="17">/* [id] */</comment> <name pos:line="2024" pos:column="28">HRESULT</name> <name pos:line="2024" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2024" pos:column="54">Item</name><argument_list pos:line="2024" pos:column="58">( 
            <comment type="block" pos:line="2025" pos:column="13">/* [in] */</comment> <argument pos:line="2025" pos:column="24">VARIANT Index</argument>,
            <comment type="block" pos:line="2026" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2026" pos:column="33">__RPC__deref_out_opt ExceptionSettings **ExceptionSettings</argument>)</argument_list></macro> <op:operator pos:line="2026" pos:column="93">=</op:operator> <lit:literal type="number" pos:line="2026" pos:column="95">0</lit:literal></expr>;
        
        <expr pos:line="2028" pos:column="9">virtual <comment type="block" pos:line="2028" pos:column="17">/* [restricted][id] */</comment> <name pos:line="2028" pos:column="40">HRESULT</name> <name pos:line="2028" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="2028" pos:column="66">_NewEnum</name><argument_list pos:line="2028" pos:column="74">( 
            <comment type="block" pos:line="2029" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2029" pos:column="33">__RPC__deref_out_opt IUnknown **Enumerator</argument>)</argument_list></macro> <op:operator pos:line="2029" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="2029" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="2031" pos:column="9">virtual <comment type="block" pos:line="2031" pos:column="17">/* [propget][id] */</comment> <name pos:line="2031" pos:column="37">HRESULT</name> <name pos:line="2031" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2031" pos:column="63">get_DTE</name><argument_list pos:line="2031" pos:column="70">( 
            <comment type="block" pos:line="2032" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2032" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2032" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="2032" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="2032" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="2034" pos:column="9">virtual <comment type="block" pos:line="2034" pos:column="17">/* [propget][id] */</comment> <name pos:line="2034" pos:column="37">HRESULT</name> <name pos:line="2034" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2034" pos:column="63">get_Parent</name><argument_list pos:line="2034" pos:column="73">( 
            <comment type="block" pos:line="2035" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2035" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2035" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="2035" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="2035" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="2037" pos:column="9">virtual <comment type="block" pos:line="2037" pos:column="17">/* [propget][id] */</comment> <name pos:line="2037" pos:column="37">HRESULT</name> <name pos:line="2037" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2037" pos:column="63">get_Count</name><argument_list pos:line="2037" pos:column="72">( 
            <comment type="block" pos:line="2038" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2038" pos:column="33">__RPC__out long *Count</argument>)</argument_list></macro> <op:operator pos:line="2038" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="2038" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="2040" pos:column="9">virtual <comment type="block" pos:line="2040" pos:column="17">/* [id] */</comment> <name pos:line="2040" pos:column="28">HRESULT</name> <name pos:line="2040" pos:column="36">STDMETHODCALLTYPE</name> <call><name pos:line="2040" pos:column="54">ResetAll</name><argument_list pos:line="2040" pos:column="62">( <argument><expr><name pos:line="2040" pos:column="64">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2040" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2040" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2044" pos:column="1">#<cpp:directive pos:line="2044" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2044" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2046" pos:column="5">typedef <type><struct pos:line="2046" pos:column="13">struct <name pos:line="2046" pos:column="20">ExceptionGroupsVtbl</name>
    <block pos:line="2047" pos:column="5">{<public type="default" pos:line="2047" pos:column="6">
        <function_decl><type><name pos:line="2048" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2050" pos:column="9">HRESULT</name></type> ( <name pos:line="2050" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2050" pos:column="37">*</type:modifier><name pos:line="2050" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2050" pos:column="54">( 
            <param><decl><type><name pos:line="2051" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2051" pos:column="29">*</type:modifier></type> <name pos:line="2051" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2052" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2052" pos:column="24">__RPC__in</name> <name pos:line="2052" pos:column="34">REFIID</name></type> <name pos:line="2052" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2053" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2054" pos:column="13">__RPC__deref_out</name>  <name pos:line="2054" pos:column="31">void</name> <type:modifier pos:line="2054" pos:column="36">*</type:modifier><type:modifier pos:line="2054" pos:column="37">*</type:modifier></type><name pos:line="2054" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2056" pos:column="9">ULONG</name></type> ( <name pos:line="2056" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2056" pos:column="35">*</type:modifier><name pos:line="2056" pos:column="36">AddRef</name> )<parameter_list pos:line="2056" pos:column="44">( 
            <param><decl><type><name pos:line="2057" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2057" pos:column="29">*</type:modifier></type> <name pos:line="2057" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2059" pos:column="9">ULONG</name></type> ( <name pos:line="2059" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2059" pos:column="35">*</type:modifier><name pos:line="2059" pos:column="36">Release</name> )<parameter_list pos:line="2059" pos:column="45">( 
            <param><decl><type><name pos:line="2060" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2060" pos:column="29">*</type:modifier></type> <name pos:line="2060" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2062" pos:column="9">HRESULT</name></type> ( <name pos:line="2062" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2062" pos:column="37">*</type:modifier><name pos:line="2062" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="2062" pos:column="56">( 
            <param><decl><type><name pos:line="2063" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2063" pos:column="29">*</type:modifier></type> <name pos:line="2063" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2064" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2064" pos:column="25">__RPC__out</name> <name pos:line="2064" pos:column="36">UINT</name> <type:modifier pos:line="2064" pos:column="41">*</type:modifier></type><name pos:line="2064" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2066" pos:column="9">HRESULT</name></type> ( <name pos:line="2066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2066" pos:column="37">*</type:modifier><name pos:line="2066" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="2066" pos:column="51">( 
            <param><decl><type><name pos:line="2067" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2067" pos:column="29">*</type:modifier></type> <name pos:line="2067" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2068" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2068" pos:column="24">UINT</name></type> <name pos:line="2068" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="2069" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2069" pos:column="24">LCID</name></type> <name pos:line="2069" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2070" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2070" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2070" pos:column="46">ITypeInfo</name> <type:modifier pos:line="2070" pos:column="56">*</type:modifier><type:modifier pos:line="2070" pos:column="57">*</type:modifier></type><name pos:line="2070" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2072" pos:column="9">HRESULT</name> <argument_list pos:line="2072" pos:column="17">( <argument pos:line="2072" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2072" pos:column="53">(</op:operator> 
            <name pos:line="2073" pos:column="13">ExceptionGroups</name> <op:operator pos:line="2073" pos:column="29">*</op:operator> <name pos:line="2073" pos:column="31">This</name><op:operator pos:line="2073" pos:column="35">,</op:operator>
            <comment type="block" pos:line="2074" pos:column="13">/* [in] */</comment> <name pos:line="2074" pos:column="24">__RPC__in</name> <name pos:line="2074" pos:column="34">REFIID</name> <name pos:line="2074" pos:column="41">riid</name><op:operator pos:line="2074" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2075" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2075" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2075" pos:column="54">(<argument pos:line="2075" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="2075" pos:column="63">LPOLESTR</name> <op:operator pos:line="2075" pos:column="72">*</op:operator><name pos:line="2075" pos:column="73">rgszNames</name><op:operator pos:line="2075" pos:column="82">,</op:operator>
            <comment type="block" pos:line="2076" pos:column="13">/* [range][in] */</comment> <name pos:line="2076" pos:column="31">UINT</name> <name pos:line="2076" pos:column="36">cNames</name><op:operator pos:line="2076" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2077" pos:column="13">/* [in] */</comment> <name pos:line="2077" pos:column="24">LCID</name> <name pos:line="2077" pos:column="29">lcid</name><op:operator pos:line="2077" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2078" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="2078" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="2078" pos:column="56">(<argument pos:line="2078" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="2078" pos:column="65">DISPID</name> <op:operator pos:line="2078" pos:column="72">*</op:operator><name pos:line="2078" pos:column="73">rgDispId</name><op:operator pos:line="2078" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2080" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="2080" pos:column="23">HRESULT</name></type> ( <name pos:line="2080" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="2080" pos:column="51">*</type:modifier><name pos:line="2080" pos:column="52">Invoke</name> )<parameter_list pos:line="2080" pos:column="60">( 
            <param><decl><type><name pos:line="2081" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2081" pos:column="29">*</type:modifier></type> <name pos:line="2081" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2082" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2082" pos:column="24">DISPID</name></type> <name pos:line="2082" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="2083" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2083" pos:column="24">REFIID</name></type> <name pos:line="2083" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2084" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2084" pos:column="24">LCID</name></type> <name pos:line="2084" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2085" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2085" pos:column="24">WORD</name></type> <name pos:line="2085" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="2086" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2086" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="2086" pos:column="40">*</type:modifier></type><name pos:line="2086" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="2087" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2087" pos:column="25">VARIANT</name> <type:modifier pos:line="2087" pos:column="33">*</type:modifier></type><name pos:line="2087" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="2088" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2088" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="2088" pos:column="35">*</type:modifier></type><name pos:line="2088" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="2089" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2089" pos:column="25">UINT</name> <type:modifier pos:line="2089" pos:column="30">*</type:modifier></type><name pos:line="2089" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2091" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2091" pos:column="20">HRESULT</name></type> ( <name pos:line="2091" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2091" pos:column="48">*</type:modifier><name pos:line="2091" pos:column="49">Item</name> )<parameter_list pos:line="2091" pos:column="55">( 
            <param><decl><type><name pos:line="2092" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2092" pos:column="29">*</type:modifier></type> <name pos:line="2092" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2093" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2093" pos:column="24">VARIANT</name></type> <name pos:line="2093" pos:column="32">Index</name></decl></param>,
            <comment type="block" pos:line="2094" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2094" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2094" pos:column="54">ExceptionSettings</name> <type:modifier pos:line="2094" pos:column="72">*</type:modifier><type:modifier pos:line="2094" pos:column="73">*</type:modifier></type><name pos:line="2094" pos:column="74">ExceptionSettings</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2096" pos:column="9">/* [restricted][id] */</comment> <function_decl><type><name pos:line="2096" pos:column="32">HRESULT</name></type> ( <name pos:line="2096" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="2096" pos:column="60">*</type:modifier><name pos:line="2096" pos:column="61">_NewEnum</name> )<parameter_list pos:line="2096" pos:column="71">( 
            <param><decl><type><name pos:line="2097" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2097" pos:column="29">*</type:modifier></type> <name pos:line="2097" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2098" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2098" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2098" pos:column="54">IUnknown</name> <type:modifier pos:line="2098" pos:column="63">*</type:modifier><type:modifier pos:line="2098" pos:column="64">*</type:modifier></type><name pos:line="2098" pos:column="65">Enumerator</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2100" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2100" pos:column="29">HRESULT</name></type> ( <name pos:line="2100" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2100" pos:column="57">*</type:modifier><name pos:line="2100" pos:column="58">get_DTE</name> )<parameter_list pos:line="2100" pos:column="67">( 
            <param><decl><type><name pos:line="2101" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2101" pos:column="29">*</type:modifier></type> <name pos:line="2101" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2102" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2102" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2102" pos:column="54">/* external definition not present */</comment> <name pos:line="2102" pos:column="92">DTE</name> <type:modifier pos:line="2102" pos:column="96">*</type:modifier><type:modifier pos:line="2102" pos:column="97">*</type:modifier></type><name pos:line="2102" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2104" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2104" pos:column="29">HRESULT</name></type> ( <name pos:line="2104" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2104" pos:column="57">*</type:modifier><name pos:line="2104" pos:column="58">get_Parent</name> )<parameter_list pos:line="2104" pos:column="70">( 
            <param><decl><type><name pos:line="2105" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2105" pos:column="29">*</type:modifier></type> <name pos:line="2105" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2106" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2106" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2106" pos:column="54">/* external definition not present */</comment> <name pos:line="2106" pos:column="92">Debugger</name> <type:modifier pos:line="2106" pos:column="101">*</type:modifier><type:modifier pos:line="2106" pos:column="102">*</type:modifier></type><name pos:line="2106" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2108" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2108" pos:column="29">HRESULT</name></type> ( <name pos:line="2108" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2108" pos:column="57">*</type:modifier><name pos:line="2108" pos:column="58">get_Count</name> )<parameter_list pos:line="2108" pos:column="69">( 
            <param><decl><type><name pos:line="2109" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2109" pos:column="29">*</type:modifier></type> <name pos:line="2109" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2110" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2110" pos:column="33">__RPC__out</name> <name pos:line="2110" pos:column="44">long</name> <type:modifier pos:line="2110" pos:column="49">*</type:modifier></type><name pos:line="2110" pos:column="50">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2112" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2112" pos:column="20">HRESULT</name></type> ( <name pos:line="2112" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2112" pos:column="48">*</type:modifier><name pos:line="2112" pos:column="49">ResetAll</name> )<parameter_list pos:line="2112" pos:column="59">( 
            <param><decl><type><name pos:line="2113" pos:column="13">ExceptionGroups</name> <type:modifier pos:line="2113" pos:column="29">*</type:modifier></type> <name pos:line="2113" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2115" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2116" pos:column="7">ExceptionGroupsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2118" pos:column="5">interface</name></type> <name pos:line="2118" pos:column="15">ExceptionGroups</name>
    <argument_list pos:line="2119" pos:column="5">{
        <argument><expr><name pos:line="2120" pos:column="9">CONST_VTBL</name> struct <name pos:line="2120" pos:column="27">ExceptionGroupsVtbl</name> <op:operator pos:line="2120" pos:column="47">*</op:operator><name pos:line="2120" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2125" pos:column="1">#<cpp:directive pos:line="2125" pos:column="2">ifdef</cpp:directive> <name pos:line="2125" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2128" pos:column="1">#<cpp:directive pos:line="2128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2128" pos:column="9">ExceptionGroups_QueryInterface</name><parameter_list pos:line="2128" pos:column="39">(<param><type><name pos:line="2128" pos:column="40">This</name></type></param>,<param><type><name pos:line="2128" pos:column="45">riid</name></type></param>,<param><type><name pos:line="2128" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2129" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2131" pos:column="1">#<cpp:directive pos:line="2131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2131" pos:column="9">ExceptionGroups_AddRef</name><parameter_list pos:line="2131" pos:column="31">(<param><type><name pos:line="2131" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2132" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2134" pos:column="1">#<cpp:directive pos:line="2134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2134" pos:column="9">ExceptionGroups_Release</name><parameter_list pos:line="2134" pos:column="32">(<param><type><name pos:line="2134" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2135" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2138" pos:column="1">#<cpp:directive pos:line="2138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2138" pos:column="9">ExceptionGroups_GetTypeInfoCount</name><parameter_list pos:line="2138" pos:column="41">(<param><type><name pos:line="2138" pos:column="42">This</name></type></param>,<param><type><name pos:line="2138" pos:column="47">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2139" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2141" pos:column="1">#<cpp:directive pos:line="2141" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2141" pos:column="9">ExceptionGroups_GetTypeInfo</name><parameter_list pos:line="2141" pos:column="36">(<param><type><name pos:line="2141" pos:column="37">This</name></type></param>,<param><type><name pos:line="2141" pos:column="42">iTInfo</name></type></param>,<param><type><name pos:line="2141" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="2141" pos:column="54">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2142" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2144" pos:column="1">#<cpp:directive pos:line="2144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2144" pos:column="9">ExceptionGroups_GetIDsOfNames</name><parameter_list pos:line="2144" pos:column="38">(<param><type><name pos:line="2144" pos:column="39">This</name></type></param>,<param><type><name pos:line="2144" pos:column="44">riid</name></type></param>,<param><type><name pos:line="2144" pos:column="49">rgszNames</name></type></param>,<param><type><name pos:line="2144" pos:column="59">cNames</name></type></param>,<param><type><name pos:line="2144" pos:column="66">lcid</name></type></param>,<param><type><name pos:line="2144" pos:column="71">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2145" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2147" pos:column="1">#<cpp:directive pos:line="2147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2147" pos:column="9">ExceptionGroups_Invoke</name><parameter_list pos:line="2147" pos:column="31">(<param><type><name pos:line="2147" pos:column="32">This</name></type></param>,<param><type><name pos:line="2147" pos:column="37">dispIdMember</name></type></param>,<param><type><name pos:line="2147" pos:column="50">riid</name></type></param>,<param><type><name pos:line="2147" pos:column="55">lcid</name></type></param>,<param><type><name pos:line="2147" pos:column="60">wFlags</name></type></param>,<param><type><name pos:line="2147" pos:column="67">pDispParams</name></type></param>,<param><type><name pos:line="2147" pos:column="79">pVarResult</name></type></param>,<param><type><name pos:line="2147" pos:column="90">pExcepInfo</name></type></param>,<param><type><name pos:line="2147" pos:column="101">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2148" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2151" pos:column="1">#<cpp:directive pos:line="2151" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2151" pos:column="9">ExceptionGroups_Item</name><parameter_list pos:line="2151" pos:column="29">(<param><type><name pos:line="2151" pos:column="30">This</name></type></param>,<param><type><name pos:line="2151" pos:column="35">Index</name></type></param>,<param><type><name pos:line="2151" pos:column="41">ExceptionSettings</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2152" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,Index,ExceptionSettings) )</cpp:value></cpp:define> 

<cpp:define pos:line="2154" pos:column="1">#<cpp:directive pos:line="2154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2154" pos:column="9">ExceptionGroups__NewEnum</name><parameter_list pos:line="2154" pos:column="33">(<param><type><name pos:line="2154" pos:column="34">This</name></type></param>,<param><type><name pos:line="2154" pos:column="39">Enumerator</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2155" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,Enumerator) )</cpp:value></cpp:define> 

<cpp:define pos:line="2157" pos:column="1">#<cpp:directive pos:line="2157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2157" pos:column="9">ExceptionGroups_get_DTE</name><parameter_list pos:line="2157" pos:column="32">(<param><type><name pos:line="2157" pos:column="33">This</name></type></param>,<param><type><name pos:line="2157" pos:column="38">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2158" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2160" pos:column="1">#<cpp:directive pos:line="2160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2160" pos:column="9">ExceptionGroups_get_Parent</name><parameter_list pos:line="2160" pos:column="35">(<param><type><name pos:line="2160" pos:column="36">This</name></type></param>,<param><type><name pos:line="2160" pos:column="41">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2161" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="2163" pos:column="1">#<cpp:directive pos:line="2163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2163" pos:column="9">ExceptionGroups_get_Count</name><parameter_list pos:line="2163" pos:column="34">(<param><type><name pos:line="2163" pos:column="35">This</name></type></param>,<param><type><name pos:line="2163" pos:column="40">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2164" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,Count) )</cpp:value></cpp:define> 

<cpp:define pos:line="2166" pos:column="1">#<cpp:directive pos:line="2166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2166" pos:column="9">ExceptionGroups_ResetAll</name><parameter_list pos:line="2166" pos:column="33">(<param><type><name pos:line="2166" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2167" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResetAll(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2169" pos:column="1">#<cpp:directive pos:line="2169" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2169" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2172" pos:column="1">#<cpp:directive pos:line="2172" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2172" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2177" pos:column="1">#<cpp:directive pos:line="2177" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2177" pos:column="9">/* __ExceptionGroups_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2180" pos:column="1">#<cpp:directive pos:line="2180" pos:column="2">ifndef</cpp:directive> <name pos:line="2180" pos:column="9">__ExceptionSettings_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2181" pos:column="1">#<cpp:directive pos:line="2181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2181" pos:column="9">__ExceptionSettings_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2183" pos:column="1">/* interface ExceptionSettings */</comment>
<comment type="block" pos:line="2184" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2187" pos:column="1">EXTERN_C</name> <specifier pos:line="2187" pos:column="10">const</specifier> <name pos:line="2187" pos:column="16">IID</name></type> <name pos:line="2187" pos:column="20">IID_ExceptionSettings</name></decl>;</decl_stmt>

<cpp:if pos:line="2189" pos:column="1">#<cpp:directive pos:line="2189" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2189" pos:column="5">defined</name><argument_list pos:line="2189" pos:column="12">(<argument><expr><name pos:line="2189" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2189" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2189" pos:column="29">!</op:operator><call><name pos:line="2189" pos:column="30">defined</name><argument_list pos:line="2189" pos:column="37">(<argument><expr><name pos:line="2189" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2191" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2191" pos:column="19">(<argument pos:line="2191" pos:column="20">"0E1AB53B-4065-4884-A39F-02E16EB57F7D"</argument>)</argument_list></macro>
    <label><name pos:line="2192" pos:column="5">ExceptionSettings</name> :</label> <expr_stmt><expr pos:line="2192" pos:column="25">public <name pos:line="2192" pos:column="32">IDispatch</name>
    <block pos:line="2193" pos:column="5">{
    <expr pos:line="2194" pos:column="5">public<op:operator pos:line="2194" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2195" pos:column="17">/* [id] */</comment> <name pos:line="2195" pos:column="28">HRESULT</name> <name pos:line="2195" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2195" pos:column="54">Item</name><argument_list pos:line="2195" pos:column="58">( 
            <comment type="block" pos:line="2196" pos:column="13">/* [in] */</comment> <argument pos:line="2196" pos:column="24">VARIANT Index</argument>,
            <comment type="block" pos:line="2197" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2197" pos:column="33">__RPC__deref_out_opt ExceptionSetting **ExceptionSetting</argument>)</argument_list></macro> <op:operator pos:line="2197" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="2197" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="2199" pos:column="9">virtual <comment type="block" pos:line="2199" pos:column="17">/* [restricted][id] */</comment> <name pos:line="2199" pos:column="40">HRESULT</name> <name pos:line="2199" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="2199" pos:column="66">_NewEnum</name><argument_list pos:line="2199" pos:column="74">( 
            <comment type="block" pos:line="2200" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2200" pos:column="33">__RPC__deref_out_opt IUnknown **Enumerator</argument>)</argument_list></macro> <op:operator pos:line="2200" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="2200" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="2202" pos:column="9">virtual <comment type="block" pos:line="2202" pos:column="17">/* [propget][id] */</comment> <name pos:line="2202" pos:column="37">HRESULT</name> <name pos:line="2202" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2202" pos:column="63">get_DTE</name><argument_list pos:line="2202" pos:column="70">( 
            <comment type="block" pos:line="2203" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2203" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2203" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="2203" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="2203" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="2205" pos:column="9">virtual <comment type="block" pos:line="2205" pos:column="17">/* [propget][id] */</comment> <name pos:line="2205" pos:column="37">HRESULT</name> <name pos:line="2205" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2205" pos:column="63">get_Parent</name><argument_list pos:line="2205" pos:column="73">( 
            <comment type="block" pos:line="2206" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2206" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2206" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="2206" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="2206" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="2208" pos:column="9">virtual <comment type="block" pos:line="2208" pos:column="17">/* [propget][id] */</comment> <name pos:line="2208" pos:column="37">HRESULT</name> <name pos:line="2208" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2208" pos:column="63">get_Count</name><argument_list pos:line="2208" pos:column="72">( 
            <comment type="block" pos:line="2209" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2209" pos:column="33">__RPC__out long *Count</argument>)</argument_list></macro> <op:operator pos:line="2209" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="2209" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="2211" pos:column="9">virtual <comment type="block" pos:line="2211" pos:column="17">/* [propget][id] */</comment> <name pos:line="2211" pos:column="37">HRESULT</name> <name pos:line="2211" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2211" pos:column="63">get_Name</name><argument_list pos:line="2211" pos:column="71">( 
            <comment type="block" pos:line="2212" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2212" pos:column="33">__RPC__deref_out_opt BSTR *Name</argument>)</argument_list></macro> <op:operator pos:line="2212" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2212" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2214" pos:column="9">virtual <comment type="block" pos:line="2214" pos:column="17">/* [propget][id] */</comment> <name pos:line="2214" pos:column="37">HRESULT</name> <name pos:line="2214" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2214" pos:column="63">get_SupportsExceptionCodes</name><argument_list pos:line="2214" pos:column="89">( 
            <comment type="block" pos:line="2215" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2215" pos:column="33">__RPC__out VARIANT_BOOL *SupportsExceptionCodes</argument>)</argument_list></macro> <op:operator pos:line="2215" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="2215" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="2217" pos:column="9">virtual <comment type="block" pos:line="2217" pos:column="17">/* [id] */</comment> <name pos:line="2217" pos:column="28">HRESULT</name> <name pos:line="2217" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2217" pos:column="54">ItemFromCode</name><argument_list pos:line="2217" pos:column="66">( 
            <comment type="block" pos:line="2218" pos:column="13">/* [in] */</comment> <argument pos:line="2218" pos:column="24">DWORD Code</argument>,
            <comment type="block" pos:line="2219" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2219" pos:column="33">__RPC__deref_out_opt ExceptionSetting **ExceptionSetting</argument>)</argument_list></macro> <op:operator pos:line="2219" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="2219" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="2221" pos:column="9">virtual <comment type="block" pos:line="2221" pos:column="17">/* [id] */</comment> <name pos:line="2221" pos:column="28">HRESULT</name> <name pos:line="2221" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2221" pos:column="54">NewException</name><argument_list pos:line="2221" pos:column="66">( 
            <comment type="block" pos:line="2222" pos:column="13">/* [in] */</comment> <argument pos:line="2222" pos:column="24">__RPC__in BSTR Name</argument>,
            <comment type="block" pos:line="2223" pos:column="13">/* [in] */</comment> <argument pos:line="2223" pos:column="24">DWORD Code</argument>,
            <comment type="block" pos:line="2224" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2224" pos:column="33">__RPC__deref_out_opt ExceptionSetting **ExceptionSetting</argument>)</argument_list></macro> <op:operator pos:line="2224" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="2224" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="2226" pos:column="9">virtual <comment type="block" pos:line="2226" pos:column="17">/* [id] */</comment> <name pos:line="2226" pos:column="28">HRESULT</name> <name pos:line="2226" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2226" pos:column="54">Remove</name><argument_list pos:line="2226" pos:column="60">( 
            <comment type="block" pos:line="2227" pos:column="13">/* [in] */</comment> <argument pos:line="2227" pos:column="24">VARIANT Index</argument>)</argument_list></macro> <op:operator pos:line="2227" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="2227" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="2229" pos:column="9">virtual <comment type="block" pos:line="2229" pos:column="17">/* [id] */</comment> <name pos:line="2229" pos:column="28">HRESULT</name> <name pos:line="2229" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2229" pos:column="54">RemoveByCode</name><argument_list pos:line="2229" pos:column="66">( 
            <comment type="block" pos:line="2230" pos:column="13">/* [in] */</comment> <argument pos:line="2230" pos:column="24">DWORD Code</argument>)</argument_list></macro> <op:operator pos:line="2230" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2230" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="2232" pos:column="9">virtual <comment type="block" pos:line="2232" pos:column="17">/* [id] */</comment> <name pos:line="2232" pos:column="28">HRESULT</name> <name pos:line="2232" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2232" pos:column="54">SetBreakWhenThrown</name><argument_list pos:line="2232" pos:column="72">( 
            <comment type="block" pos:line="2233" pos:column="13">/* [in] */</comment> <argument pos:line="2233" pos:column="24">VARIANT_BOOL BreakWhenThrown</argument>,
            <comment type="block" pos:line="2234" pos:column="13">/* [in] */</comment> <argument pos:line="2234" pos:column="24">__RPC__in_opt ExceptionSetting *ExceptionSetting</argument>)</argument_list></macro> <op:operator pos:line="2234" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2234" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="2236" pos:column="9">virtual <comment type="block" pos:line="2236" pos:column="17">/* [id] */</comment> <name pos:line="2236" pos:column="28">HRESULT</name> <name pos:line="2236" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2236" pos:column="54">SetBreakWhenUserUnhandled</name><argument_list pos:line="2236" pos:column="79">( 
            <comment type="block" pos:line="2237" pos:column="13">/* [in] */</comment> <argument pos:line="2237" pos:column="24">VARIANT_BOOL BreakWhenUserUnhandled</argument>,
            <comment type="block" pos:line="2238" pos:column="13">/* [in] */</comment> <argument pos:line="2238" pos:column="24">__RPC__in_opt ExceptionSetting *ExceptionSetting</argument>)</argument_list></macro> <op:operator pos:line="2238" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2238" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2242" pos:column="1">#<cpp:directive pos:line="2242" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2242" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2244" pos:column="5">typedef <type><struct pos:line="2244" pos:column="13">struct <name pos:line="2244" pos:column="20">ExceptionSettingsVtbl</name>
    <block pos:line="2245" pos:column="5">{<public type="default" pos:line="2245" pos:column="6">
        <function_decl><type><name pos:line="2246" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2248" pos:column="9">HRESULT</name></type> ( <name pos:line="2248" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2248" pos:column="37">*</type:modifier><name pos:line="2248" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2248" pos:column="54">( 
            <param><decl><type><name pos:line="2249" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2249" pos:column="31">*</type:modifier></type> <name pos:line="2249" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2250" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2250" pos:column="24">__RPC__in</name> <name pos:line="2250" pos:column="34">REFIID</name></type> <name pos:line="2250" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2251" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2252" pos:column="13">__RPC__deref_out</name>  <name pos:line="2252" pos:column="31">void</name> <type:modifier pos:line="2252" pos:column="36">*</type:modifier><type:modifier pos:line="2252" pos:column="37">*</type:modifier></type><name pos:line="2252" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2254" pos:column="9">ULONG</name></type> ( <name pos:line="2254" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2254" pos:column="35">*</type:modifier><name pos:line="2254" pos:column="36">AddRef</name> )<parameter_list pos:line="2254" pos:column="44">( 
            <param><decl><type><name pos:line="2255" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2255" pos:column="31">*</type:modifier></type> <name pos:line="2255" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2257" pos:column="9">ULONG</name></type> ( <name pos:line="2257" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2257" pos:column="35">*</type:modifier><name pos:line="2257" pos:column="36">Release</name> )<parameter_list pos:line="2257" pos:column="45">( 
            <param><decl><type><name pos:line="2258" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2258" pos:column="31">*</type:modifier></type> <name pos:line="2258" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2260" pos:column="9">HRESULT</name></type> ( <name pos:line="2260" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2260" pos:column="37">*</type:modifier><name pos:line="2260" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="2260" pos:column="56">( 
            <param><decl><type><name pos:line="2261" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2261" pos:column="31">*</type:modifier></type> <name pos:line="2261" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2262" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2262" pos:column="25">__RPC__out</name> <name pos:line="2262" pos:column="36">UINT</name> <type:modifier pos:line="2262" pos:column="41">*</type:modifier></type><name pos:line="2262" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2264" pos:column="9">HRESULT</name></type> ( <name pos:line="2264" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2264" pos:column="37">*</type:modifier><name pos:line="2264" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="2264" pos:column="51">( 
            <param><decl><type><name pos:line="2265" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2265" pos:column="31">*</type:modifier></type> <name pos:line="2265" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2266" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2266" pos:column="24">UINT</name></type> <name pos:line="2266" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="2267" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2267" pos:column="24">LCID</name></type> <name pos:line="2267" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2268" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2268" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2268" pos:column="46">ITypeInfo</name> <type:modifier pos:line="2268" pos:column="56">*</type:modifier><type:modifier pos:line="2268" pos:column="57">*</type:modifier></type><name pos:line="2268" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2270" pos:column="9">HRESULT</name> <argument_list pos:line="2270" pos:column="17">( <argument pos:line="2270" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2270" pos:column="53">(</op:operator> 
            <name pos:line="2271" pos:column="13">ExceptionSettings</name> <op:operator pos:line="2271" pos:column="31">*</op:operator> <name pos:line="2271" pos:column="33">This</name><op:operator pos:line="2271" pos:column="37">,</op:operator>
            <comment type="block" pos:line="2272" pos:column="13">/* [in] */</comment> <name pos:line="2272" pos:column="24">__RPC__in</name> <name pos:line="2272" pos:column="34">REFIID</name> <name pos:line="2272" pos:column="41">riid</name><op:operator pos:line="2272" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2273" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2273" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2273" pos:column="54">(<argument pos:line="2273" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="2273" pos:column="63">LPOLESTR</name> <op:operator pos:line="2273" pos:column="72">*</op:operator><name pos:line="2273" pos:column="73">rgszNames</name><op:operator pos:line="2273" pos:column="82">,</op:operator>
            <comment type="block" pos:line="2274" pos:column="13">/* [range][in] */</comment> <name pos:line="2274" pos:column="31">UINT</name> <name pos:line="2274" pos:column="36">cNames</name><op:operator pos:line="2274" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2275" pos:column="13">/* [in] */</comment> <name pos:line="2275" pos:column="24">LCID</name> <name pos:line="2275" pos:column="29">lcid</name><op:operator pos:line="2275" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2276" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="2276" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="2276" pos:column="56">(<argument pos:line="2276" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="2276" pos:column="65">DISPID</name> <op:operator pos:line="2276" pos:column="72">*</op:operator><name pos:line="2276" pos:column="73">rgDispId</name><op:operator pos:line="2276" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2278" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="2278" pos:column="23">HRESULT</name></type> ( <name pos:line="2278" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="2278" pos:column="51">*</type:modifier><name pos:line="2278" pos:column="52">Invoke</name> )<parameter_list pos:line="2278" pos:column="60">( 
            <param><decl><type><name pos:line="2279" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2279" pos:column="31">*</type:modifier></type> <name pos:line="2279" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2280" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2280" pos:column="24">DISPID</name></type> <name pos:line="2280" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="2281" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2281" pos:column="24">REFIID</name></type> <name pos:line="2281" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2282" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2282" pos:column="24">LCID</name></type> <name pos:line="2282" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2283" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2283" pos:column="24">WORD</name></type> <name pos:line="2283" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="2284" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2284" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="2284" pos:column="40">*</type:modifier></type><name pos:line="2284" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="2285" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2285" pos:column="25">VARIANT</name> <type:modifier pos:line="2285" pos:column="33">*</type:modifier></type><name pos:line="2285" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="2286" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2286" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="2286" pos:column="35">*</type:modifier></type><name pos:line="2286" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="2287" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2287" pos:column="25">UINT</name> <type:modifier pos:line="2287" pos:column="30">*</type:modifier></type><name pos:line="2287" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2289" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2289" pos:column="20">HRESULT</name></type> ( <name pos:line="2289" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2289" pos:column="48">*</type:modifier><name pos:line="2289" pos:column="49">Item</name> )<parameter_list pos:line="2289" pos:column="55">( 
            <param><decl><type><name pos:line="2290" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2290" pos:column="31">*</type:modifier></type> <name pos:line="2290" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2291" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2291" pos:column="24">VARIANT</name></type> <name pos:line="2291" pos:column="32">Index</name></decl></param>,
            <comment type="block" pos:line="2292" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2292" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2292" pos:column="54">ExceptionSetting</name> <type:modifier pos:line="2292" pos:column="71">*</type:modifier><type:modifier pos:line="2292" pos:column="72">*</type:modifier></type><name pos:line="2292" pos:column="73">ExceptionSetting</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2294" pos:column="9">/* [restricted][id] */</comment> <function_decl><type><name pos:line="2294" pos:column="32">HRESULT</name></type> ( <name pos:line="2294" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="2294" pos:column="60">*</type:modifier><name pos:line="2294" pos:column="61">_NewEnum</name> )<parameter_list pos:line="2294" pos:column="71">( 
            <param><decl><type><name pos:line="2295" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2295" pos:column="31">*</type:modifier></type> <name pos:line="2295" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2296" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2296" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2296" pos:column="54">IUnknown</name> <type:modifier pos:line="2296" pos:column="63">*</type:modifier><type:modifier pos:line="2296" pos:column="64">*</type:modifier></type><name pos:line="2296" pos:column="65">Enumerator</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2298" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2298" pos:column="29">HRESULT</name></type> ( <name pos:line="2298" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2298" pos:column="57">*</type:modifier><name pos:line="2298" pos:column="58">get_DTE</name> )<parameter_list pos:line="2298" pos:column="67">( 
            <param><decl><type><name pos:line="2299" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2299" pos:column="31">*</type:modifier></type> <name pos:line="2299" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2300" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2300" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2300" pos:column="54">/* external definition not present */</comment> <name pos:line="2300" pos:column="92">DTE</name> <type:modifier pos:line="2300" pos:column="96">*</type:modifier><type:modifier pos:line="2300" pos:column="97">*</type:modifier></type><name pos:line="2300" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2302" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2302" pos:column="29">HRESULT</name></type> ( <name pos:line="2302" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2302" pos:column="57">*</type:modifier><name pos:line="2302" pos:column="58">get_Parent</name> )<parameter_list pos:line="2302" pos:column="70">( 
            <param><decl><type><name pos:line="2303" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2303" pos:column="31">*</type:modifier></type> <name pos:line="2303" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2304" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2304" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2304" pos:column="54">/* external definition not present */</comment> <name pos:line="2304" pos:column="92">Debugger</name> <type:modifier pos:line="2304" pos:column="101">*</type:modifier><type:modifier pos:line="2304" pos:column="102">*</type:modifier></type><name pos:line="2304" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2306" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2306" pos:column="29">HRESULT</name></type> ( <name pos:line="2306" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2306" pos:column="57">*</type:modifier><name pos:line="2306" pos:column="58">get_Count</name> )<parameter_list pos:line="2306" pos:column="69">( 
            <param><decl><type><name pos:line="2307" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2307" pos:column="31">*</type:modifier></type> <name pos:line="2307" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2308" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2308" pos:column="33">__RPC__out</name> <name pos:line="2308" pos:column="44">long</name> <type:modifier pos:line="2308" pos:column="49">*</type:modifier></type><name pos:line="2308" pos:column="50">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2310" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2310" pos:column="29">HRESULT</name></type> ( <name pos:line="2310" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2310" pos:column="57">*</type:modifier><name pos:line="2310" pos:column="58">get_Name</name> )<parameter_list pos:line="2310" pos:column="68">( 
            <param><decl><type><name pos:line="2311" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2311" pos:column="31">*</type:modifier></type> <name pos:line="2311" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2312" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2312" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2312" pos:column="54">BSTR</name> <type:modifier pos:line="2312" pos:column="59">*</type:modifier></type><name pos:line="2312" pos:column="60">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2314" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2314" pos:column="29">HRESULT</name></type> ( <name pos:line="2314" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2314" pos:column="57">*</type:modifier><name pos:line="2314" pos:column="58">get_SupportsExceptionCodes</name> )<parameter_list pos:line="2314" pos:column="86">( 
            <param><decl><type><name pos:line="2315" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2315" pos:column="31">*</type:modifier></type> <name pos:line="2315" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2316" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2316" pos:column="33">__RPC__out</name> <name pos:line="2316" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2316" pos:column="57">*</type:modifier></type><name pos:line="2316" pos:column="58">SupportsExceptionCodes</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2318" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2318" pos:column="20">HRESULT</name></type> ( <name pos:line="2318" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2318" pos:column="48">*</type:modifier><name pos:line="2318" pos:column="49">ItemFromCode</name> )<parameter_list pos:line="2318" pos:column="63">( 
            <param><decl><type><name pos:line="2319" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2319" pos:column="31">*</type:modifier></type> <name pos:line="2319" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2320" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2320" pos:column="24">DWORD</name></type> <name pos:line="2320" pos:column="30">Code</name></decl></param>,
            <comment type="block" pos:line="2321" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2321" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2321" pos:column="54">ExceptionSetting</name> <type:modifier pos:line="2321" pos:column="71">*</type:modifier><type:modifier pos:line="2321" pos:column="72">*</type:modifier></type><name pos:line="2321" pos:column="73">ExceptionSetting</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2323" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2323" pos:column="20">HRESULT</name></type> ( <name pos:line="2323" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2323" pos:column="48">*</type:modifier><name pos:line="2323" pos:column="49">NewException</name> )<parameter_list pos:line="2323" pos:column="63">( 
            <param><decl><type><name pos:line="2324" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2324" pos:column="31">*</type:modifier></type> <name pos:line="2324" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2325" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2325" pos:column="24">__RPC__in</name> <name pos:line="2325" pos:column="34">BSTR</name></type> <name pos:line="2325" pos:column="39">Name</name></decl></param>,
            <comment type="block" pos:line="2326" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2326" pos:column="24">DWORD</name></type> <name pos:line="2326" pos:column="30">Code</name></decl></param>,
            <comment type="block" pos:line="2327" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2327" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2327" pos:column="54">ExceptionSetting</name> <type:modifier pos:line="2327" pos:column="71">*</type:modifier><type:modifier pos:line="2327" pos:column="72">*</type:modifier></type><name pos:line="2327" pos:column="73">ExceptionSetting</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2329" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2329" pos:column="20">HRESULT</name></type> ( <name pos:line="2329" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2329" pos:column="48">*</type:modifier><name pos:line="2329" pos:column="49">Remove</name> )<parameter_list pos:line="2329" pos:column="57">( 
            <param><decl><type><name pos:line="2330" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2330" pos:column="31">*</type:modifier></type> <name pos:line="2330" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2331" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2331" pos:column="24">VARIANT</name></type> <name pos:line="2331" pos:column="32">Index</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2333" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2333" pos:column="20">HRESULT</name></type> ( <name pos:line="2333" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2333" pos:column="48">*</type:modifier><name pos:line="2333" pos:column="49">RemoveByCode</name> )<parameter_list pos:line="2333" pos:column="63">( 
            <param><decl><type><name pos:line="2334" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2334" pos:column="31">*</type:modifier></type> <name pos:line="2334" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2335" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2335" pos:column="24">DWORD</name></type> <name pos:line="2335" pos:column="30">Code</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2337" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2337" pos:column="20">HRESULT</name></type> ( <name pos:line="2337" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2337" pos:column="48">*</type:modifier><name pos:line="2337" pos:column="49">SetBreakWhenThrown</name> )<parameter_list pos:line="2337" pos:column="69">( 
            <param><decl><type><name pos:line="2338" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2338" pos:column="31">*</type:modifier></type> <name pos:line="2338" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2339" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2339" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="2339" pos:column="37">BreakWhenThrown</name></decl></param>,
            <comment type="block" pos:line="2340" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2340" pos:column="24">__RPC__in_opt</name> <name pos:line="2340" pos:column="38">ExceptionSetting</name> <type:modifier pos:line="2340" pos:column="55">*</type:modifier></type><name pos:line="2340" pos:column="56">ExceptionSetting</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2342" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="2342" pos:column="20">HRESULT</name></type> ( <name pos:line="2342" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="2342" pos:column="48">*</type:modifier><name pos:line="2342" pos:column="49">SetBreakWhenUserUnhandled</name> )<parameter_list pos:line="2342" pos:column="76">( 
            <param><decl><type><name pos:line="2343" pos:column="13">ExceptionSettings</name> <type:modifier pos:line="2343" pos:column="31">*</type:modifier></type> <name pos:line="2343" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2344" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2344" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="2344" pos:column="37">BreakWhenUserUnhandled</name></decl></param>,
            <comment type="block" pos:line="2345" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2345" pos:column="24">__RPC__in_opt</name> <name pos:line="2345" pos:column="38">ExceptionSetting</name> <type:modifier pos:line="2345" pos:column="55">*</type:modifier></type><name pos:line="2345" pos:column="56">ExceptionSetting</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2347" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2348" pos:column="7">ExceptionSettingsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2350" pos:column="5">interface</name></type> <name pos:line="2350" pos:column="15">ExceptionSettings</name>
    <argument_list pos:line="2351" pos:column="5">{
        <argument><expr><name pos:line="2352" pos:column="9">CONST_VTBL</name> struct <name pos:line="2352" pos:column="27">ExceptionSettingsVtbl</name> <op:operator pos:line="2352" pos:column="49">*</op:operator><name pos:line="2352" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2357" pos:column="1">#<cpp:directive pos:line="2357" pos:column="2">ifdef</cpp:directive> <name pos:line="2357" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2360" pos:column="1">#<cpp:directive pos:line="2360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2360" pos:column="9">ExceptionSettings_QueryInterface</name><parameter_list pos:line="2360" pos:column="41">(<param><type><name pos:line="2360" pos:column="42">This</name></type></param>,<param><type><name pos:line="2360" pos:column="47">riid</name></type></param>,<param><type><name pos:line="2360" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2361" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2363" pos:column="1">#<cpp:directive pos:line="2363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2363" pos:column="9">ExceptionSettings_AddRef</name><parameter_list pos:line="2363" pos:column="33">(<param><type><name pos:line="2363" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2364" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2366" pos:column="1">#<cpp:directive pos:line="2366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2366" pos:column="9">ExceptionSettings_Release</name><parameter_list pos:line="2366" pos:column="34">(<param><type><name pos:line="2366" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2367" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2370" pos:column="1">#<cpp:directive pos:line="2370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2370" pos:column="9">ExceptionSettings_GetTypeInfoCount</name><parameter_list pos:line="2370" pos:column="43">(<param><type><name pos:line="2370" pos:column="44">This</name></type></param>,<param><type><name pos:line="2370" pos:column="49">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2371" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2373" pos:column="1">#<cpp:directive pos:line="2373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2373" pos:column="9">ExceptionSettings_GetTypeInfo</name><parameter_list pos:line="2373" pos:column="38">(<param><type><name pos:line="2373" pos:column="39">This</name></type></param>,<param><type><name pos:line="2373" pos:column="44">iTInfo</name></type></param>,<param><type><name pos:line="2373" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="2373" pos:column="56">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2374" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2376" pos:column="1">#<cpp:directive pos:line="2376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2376" pos:column="9">ExceptionSettings_GetIDsOfNames</name><parameter_list pos:line="2376" pos:column="40">(<param><type><name pos:line="2376" pos:column="41">This</name></type></param>,<param><type><name pos:line="2376" pos:column="46">riid</name></type></param>,<param><type><name pos:line="2376" pos:column="51">rgszNames</name></type></param>,<param><type><name pos:line="2376" pos:column="61">cNames</name></type></param>,<param><type><name pos:line="2376" pos:column="68">lcid</name></type></param>,<param><type><name pos:line="2376" pos:column="73">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2377" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2379" pos:column="1">#<cpp:directive pos:line="2379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2379" pos:column="9">ExceptionSettings_Invoke</name><parameter_list pos:line="2379" pos:column="33">(<param><type><name pos:line="2379" pos:column="34">This</name></type></param>,<param><type><name pos:line="2379" pos:column="39">dispIdMember</name></type></param>,<param><type><name pos:line="2379" pos:column="52">riid</name></type></param>,<param><type><name pos:line="2379" pos:column="57">lcid</name></type></param>,<param><type><name pos:line="2379" pos:column="62">wFlags</name></type></param>,<param><type><name pos:line="2379" pos:column="69">pDispParams</name></type></param>,<param><type><name pos:line="2379" pos:column="81">pVarResult</name></type></param>,<param><type><name pos:line="2379" pos:column="92">pExcepInfo</name></type></param>,<param><type><name pos:line="2379" pos:column="103">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2380" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2383" pos:column="1">#<cpp:directive pos:line="2383" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2383" pos:column="9">ExceptionSettings_Item</name><parameter_list pos:line="2383" pos:column="31">(<param><type><name pos:line="2383" pos:column="32">This</name></type></param>,<param><type><name pos:line="2383" pos:column="37">Index</name></type></param>,<param><type><name pos:line="2383" pos:column="43">ExceptionSetting</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2384" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,Index,ExceptionSetting) )</cpp:value></cpp:define> 

<cpp:define pos:line="2386" pos:column="1">#<cpp:directive pos:line="2386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2386" pos:column="9">ExceptionSettings__NewEnum</name><parameter_list pos:line="2386" pos:column="35">(<param><type><name pos:line="2386" pos:column="36">This</name></type></param>,<param><type><name pos:line="2386" pos:column="41">Enumerator</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2387" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,Enumerator) )</cpp:value></cpp:define> 

<cpp:define pos:line="2389" pos:column="1">#<cpp:directive pos:line="2389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2389" pos:column="9">ExceptionSettings_get_DTE</name><parameter_list pos:line="2389" pos:column="34">(<param><type><name pos:line="2389" pos:column="35">This</name></type></param>,<param><type><name pos:line="2389" pos:column="40">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2390" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2392" pos:column="1">#<cpp:directive pos:line="2392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2392" pos:column="9">ExceptionSettings_get_Parent</name><parameter_list pos:line="2392" pos:column="37">(<param><type><name pos:line="2392" pos:column="38">This</name></type></param>,<param><type><name pos:line="2392" pos:column="43">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2393" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="2395" pos:column="1">#<cpp:directive pos:line="2395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2395" pos:column="9">ExceptionSettings_get_Count</name><parameter_list pos:line="2395" pos:column="36">(<param><type><name pos:line="2395" pos:column="37">This</name></type></param>,<param><type><name pos:line="2395" pos:column="42">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2396" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,Count) )</cpp:value></cpp:define> 

<cpp:define pos:line="2398" pos:column="1">#<cpp:directive pos:line="2398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2398" pos:column="9">ExceptionSettings_get_Name</name><parameter_list pos:line="2398" pos:column="35">(<param><type><name pos:line="2398" pos:column="36">This</name></type></param>,<param><type><name pos:line="2398" pos:column="41">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2399" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="2401" pos:column="1">#<cpp:directive pos:line="2401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2401" pos:column="9">ExceptionSettings_get_SupportsExceptionCodes</name><parameter_list pos:line="2401" pos:column="53">(<param><type><name pos:line="2401" pos:column="54">This</name></type></param>,<param><type><name pos:line="2401" pos:column="59">SupportsExceptionCodes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2402" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SupportsExceptionCodes(This,SupportsExceptionCodes) )</cpp:value></cpp:define> 

<cpp:define pos:line="2404" pos:column="1">#<cpp:directive pos:line="2404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2404" pos:column="9">ExceptionSettings_ItemFromCode</name><parameter_list pos:line="2404" pos:column="39">(<param><type><name pos:line="2404" pos:column="40">This</name></type></param>,<param><type><name pos:line="2404" pos:column="45">Code</name></type></param>,<param><type><name pos:line="2404" pos:column="50">ExceptionSetting</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2405" pos:column="5">( (This)-&gt;lpVtbl -&gt; ItemFromCode(This,Code,ExceptionSetting) )</cpp:value></cpp:define> 

<cpp:define pos:line="2407" pos:column="1">#<cpp:directive pos:line="2407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2407" pos:column="9">ExceptionSettings_NewException</name><parameter_list pos:line="2407" pos:column="39">(<param><type><name pos:line="2407" pos:column="40">This</name></type></param>,<param><type><name pos:line="2407" pos:column="45">Name</name></type></param>,<param><type><name pos:line="2407" pos:column="50">Code</name></type></param>,<param><type><name pos:line="2407" pos:column="55">ExceptionSetting</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2408" pos:column="5">( (This)-&gt;lpVtbl -&gt; NewException(This,Name,Code,ExceptionSetting) )</cpp:value></cpp:define> 

<cpp:define pos:line="2410" pos:column="1">#<cpp:directive pos:line="2410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2410" pos:column="9">ExceptionSettings_Remove</name><parameter_list pos:line="2410" pos:column="33">(<param><type><name pos:line="2410" pos:column="34">This</name></type></param>,<param><type><name pos:line="2410" pos:column="39">Index</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2411" pos:column="5">( (This)-&gt;lpVtbl -&gt; Remove(This,Index) )</cpp:value></cpp:define> 

<cpp:define pos:line="2413" pos:column="1">#<cpp:directive pos:line="2413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2413" pos:column="9">ExceptionSettings_RemoveByCode</name><parameter_list pos:line="2413" pos:column="39">(<param><type><name pos:line="2413" pos:column="40">This</name></type></param>,<param><type><name pos:line="2413" pos:column="45">Code</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2414" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveByCode(This,Code) )</cpp:value></cpp:define> 

<cpp:define pos:line="2416" pos:column="1">#<cpp:directive pos:line="2416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2416" pos:column="9">ExceptionSettings_SetBreakWhenThrown</name><parameter_list pos:line="2416" pos:column="45">(<param><type><name pos:line="2416" pos:column="46">This</name></type></param>,<param><type><name pos:line="2416" pos:column="51">BreakWhenThrown</name></type></param>,<param><type><name pos:line="2416" pos:column="67">ExceptionSetting</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2417" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBreakWhenThrown(This,BreakWhenThrown,ExceptionSetting) )</cpp:value></cpp:define> 

<cpp:define pos:line="2419" pos:column="1">#<cpp:directive pos:line="2419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2419" pos:column="9">ExceptionSettings_SetBreakWhenUserUnhandled</name><parameter_list pos:line="2419" pos:column="52">(<param><type><name pos:line="2419" pos:column="53">This</name></type></param>,<param><type><name pos:line="2419" pos:column="58">BreakWhenUserUnhandled</name></type></param>,<param><type><name pos:line="2419" pos:column="81">ExceptionSetting</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2420" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBreakWhenUserUnhandled(This,BreakWhenUserUnhandled,ExceptionSetting) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2422" pos:column="1">#<cpp:directive pos:line="2422" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2422" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2425" pos:column="1">#<cpp:directive pos:line="2425" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2425" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2430" pos:column="1">#<cpp:directive pos:line="2430" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2430" pos:column="9">/* __ExceptionSettings_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2433" pos:column="1">#<cpp:directive pos:line="2433" pos:column="2">ifndef</cpp:directive> <name pos:line="2433" pos:column="9">__ExceptionSetting_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2434" pos:column="1">#<cpp:directive pos:line="2434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2434" pos:column="9">__ExceptionSetting_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2436" pos:column="1">/* interface ExceptionSetting */</comment>
<comment type="block" pos:line="2437" pos:column="1">/* [object][version][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2440" pos:column="1">EXTERN_C</name> <specifier pos:line="2440" pos:column="10">const</specifier> <name pos:line="2440" pos:column="16">IID</name></type> <name pos:line="2440" pos:column="20">IID_ExceptionSetting</name></decl>;</decl_stmt>

<cpp:if pos:line="2442" pos:column="1">#<cpp:directive pos:line="2442" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2442" pos:column="5">defined</name><argument_list pos:line="2442" pos:column="12">(<argument><expr><name pos:line="2442" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2442" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2442" pos:column="29">!</op:operator><call><name pos:line="2442" pos:column="30">defined</name><argument_list pos:line="2442" pos:column="37">(<argument><expr><name pos:line="2442" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2444" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2444" pos:column="19">(<argument pos:line="2444" pos:column="20">"115998BF-A603-4848-B5DE-3B250A13D109"</argument>)</argument_list></macro>
    <label><name pos:line="2445" pos:column="5">ExceptionSetting</name> :</label> <expr_stmt><expr pos:line="2445" pos:column="24">public <name pos:line="2445" pos:column="31">IDispatch</name>
    <block pos:line="2446" pos:column="5">{
    <expr pos:line="2447" pos:column="5">public<op:operator pos:line="2447" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2448" pos:column="17">/* [propget][id] */</comment> <name pos:line="2448" pos:column="37">HRESULT</name> <name pos:line="2448" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2448" pos:column="63">get_DTE</name><argument_list pos:line="2448" pos:column="70">( 
            <comment type="block" pos:line="2449" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2449" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2449" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="2449" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="2449" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="2451" pos:column="9">virtual <comment type="block" pos:line="2451" pos:column="17">/* [propget][id] */</comment> <name pos:line="2451" pos:column="37">HRESULT</name> <name pos:line="2451" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2451" pos:column="63">get_Parent</name><argument_list pos:line="2451" pos:column="73">( 
            <comment type="block" pos:line="2452" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2452" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2452" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="2452" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="2452" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="2454" pos:column="9">virtual <comment type="block" pos:line="2454" pos:column="17">/* [propget][id] */</comment> <name pos:line="2454" pos:column="37">HRESULT</name> <name pos:line="2454" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2454" pos:column="63">get_Collection</name><argument_list pos:line="2454" pos:column="77">( 
            <comment type="block" pos:line="2455" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2455" pos:column="33">__RPC__deref_out_opt ExceptionSettings **ExceptionSettings</argument>)</argument_list></macro> <op:operator pos:line="2455" pos:column="93">=</op:operator> <lit:literal type="number" pos:line="2455" pos:column="95">0</lit:literal></expr>;
        
        <expr pos:line="2457" pos:column="9">virtual <comment type="block" pos:line="2457" pos:column="17">/* [propget][id] */</comment> <name pos:line="2457" pos:column="37">HRESULT</name> <name pos:line="2457" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2457" pos:column="63">get_Name</name><argument_list pos:line="2457" pos:column="71">( 
            <comment type="block" pos:line="2458" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2458" pos:column="33">__RPC__deref_out_opt BSTR *Name</argument>)</argument_list></macro> <op:operator pos:line="2458" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2458" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2460" pos:column="9">virtual <comment type="block" pos:line="2460" pos:column="17">/* [propget][id] */</comment> <name pos:line="2460" pos:column="37">HRESULT</name> <name pos:line="2460" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2460" pos:column="63">get_BreakWhenThrown</name><argument_list pos:line="2460" pos:column="82">( 
            <comment type="block" pos:line="2461" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2461" pos:column="33">__RPC__out VARIANT_BOOL *BreakWhenThrown</argument>)</argument_list></macro> <op:operator pos:line="2461" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="2461" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="2463" pos:column="9">virtual <comment type="block" pos:line="2463" pos:column="17">/* [propget][id] */</comment> <name pos:line="2463" pos:column="37">HRESULT</name> <name pos:line="2463" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2463" pos:column="63">get_BreakWhenUserUnhandled</name><argument_list pos:line="2463" pos:column="89">( 
            <comment type="block" pos:line="2464" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2464" pos:column="33">__RPC__out VARIANT_BOOL *BreakWhenUserUnhandled</argument>)</argument_list></macro> <op:operator pos:line="2464" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="2464" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="2466" pos:column="9">virtual <comment type="block" pos:line="2466" pos:column="17">/* [propget][id] */</comment> <name pos:line="2466" pos:column="37">HRESULT</name> <name pos:line="2466" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2466" pos:column="63">get_UserDefined</name><argument_list pos:line="2466" pos:column="78">( 
            <comment type="block" pos:line="2467" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2467" pos:column="33">__RPC__out VARIANT_BOOL *UserDefined</argument>)</argument_list></macro> <op:operator pos:line="2467" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2467" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2469" pos:column="9">virtual <comment type="block" pos:line="2469" pos:column="17">/* [propget][id] */</comment> <name pos:line="2469" pos:column="37">HRESULT</name> <name pos:line="2469" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2469" pos:column="63">get_Code</name><argument_list pos:line="2469" pos:column="71">( 
            <comment type="block" pos:line="2470" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2470" pos:column="33">__RPC__out DWORD *Code</argument>)</argument_list></macro> <op:operator pos:line="2470" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="2470" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2474" pos:column="1">#<cpp:directive pos:line="2474" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2474" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2476" pos:column="5">typedef <type><struct pos:line="2476" pos:column="13">struct <name pos:line="2476" pos:column="20">ExceptionSettingVtbl</name>
    <block pos:line="2477" pos:column="5">{<public type="default" pos:line="2477" pos:column="6">
        <function_decl><type><name pos:line="2478" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2480" pos:column="9">HRESULT</name></type> ( <name pos:line="2480" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2480" pos:column="37">*</type:modifier><name pos:line="2480" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2480" pos:column="54">( 
            <param><decl><type><name pos:line="2481" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2481" pos:column="30">*</type:modifier></type> <name pos:line="2481" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2482" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2482" pos:column="24">__RPC__in</name> <name pos:line="2482" pos:column="34">REFIID</name></type> <name pos:line="2482" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2483" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2484" pos:column="13">__RPC__deref_out</name>  <name pos:line="2484" pos:column="31">void</name> <type:modifier pos:line="2484" pos:column="36">*</type:modifier><type:modifier pos:line="2484" pos:column="37">*</type:modifier></type><name pos:line="2484" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2486" pos:column="9">ULONG</name></type> ( <name pos:line="2486" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2486" pos:column="35">*</type:modifier><name pos:line="2486" pos:column="36">AddRef</name> )<parameter_list pos:line="2486" pos:column="44">( 
            <param><decl><type><name pos:line="2487" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2487" pos:column="30">*</type:modifier></type> <name pos:line="2487" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2489" pos:column="9">ULONG</name></type> ( <name pos:line="2489" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2489" pos:column="35">*</type:modifier><name pos:line="2489" pos:column="36">Release</name> )<parameter_list pos:line="2489" pos:column="45">( 
            <param><decl><type><name pos:line="2490" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2490" pos:column="30">*</type:modifier></type> <name pos:line="2490" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2492" pos:column="9">HRESULT</name></type> ( <name pos:line="2492" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2492" pos:column="37">*</type:modifier><name pos:line="2492" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="2492" pos:column="56">( 
            <param><decl><type><name pos:line="2493" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2493" pos:column="30">*</type:modifier></type> <name pos:line="2493" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2494" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2494" pos:column="25">__RPC__out</name> <name pos:line="2494" pos:column="36">UINT</name> <type:modifier pos:line="2494" pos:column="41">*</type:modifier></type><name pos:line="2494" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2496" pos:column="9">HRESULT</name></type> ( <name pos:line="2496" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2496" pos:column="37">*</type:modifier><name pos:line="2496" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="2496" pos:column="51">( 
            <param><decl><type><name pos:line="2497" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2497" pos:column="30">*</type:modifier></type> <name pos:line="2497" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2498" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2498" pos:column="24">UINT</name></type> <name pos:line="2498" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="2499" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2499" pos:column="24">LCID</name></type> <name pos:line="2499" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2500" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2500" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2500" pos:column="46">ITypeInfo</name> <type:modifier pos:line="2500" pos:column="56">*</type:modifier><type:modifier pos:line="2500" pos:column="57">*</type:modifier></type><name pos:line="2500" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2502" pos:column="9">HRESULT</name> <argument_list pos:line="2502" pos:column="17">( <argument pos:line="2502" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2502" pos:column="53">(</op:operator> 
            <name pos:line="2503" pos:column="13">ExceptionSetting</name> <op:operator pos:line="2503" pos:column="30">*</op:operator> <name pos:line="2503" pos:column="32">This</name><op:operator pos:line="2503" pos:column="36">,</op:operator>
            <comment type="block" pos:line="2504" pos:column="13">/* [in] */</comment> <name pos:line="2504" pos:column="24">__RPC__in</name> <name pos:line="2504" pos:column="34">REFIID</name> <name pos:line="2504" pos:column="41">riid</name><op:operator pos:line="2504" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2505" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2505" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2505" pos:column="54">(<argument pos:line="2505" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="2505" pos:column="63">LPOLESTR</name> <op:operator pos:line="2505" pos:column="72">*</op:operator><name pos:line="2505" pos:column="73">rgszNames</name><op:operator pos:line="2505" pos:column="82">,</op:operator>
            <comment type="block" pos:line="2506" pos:column="13">/* [range][in] */</comment> <name pos:line="2506" pos:column="31">UINT</name> <name pos:line="2506" pos:column="36">cNames</name><op:operator pos:line="2506" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2507" pos:column="13">/* [in] */</comment> <name pos:line="2507" pos:column="24">LCID</name> <name pos:line="2507" pos:column="29">lcid</name><op:operator pos:line="2507" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2508" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="2508" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="2508" pos:column="56">(<argument pos:line="2508" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="2508" pos:column="65">DISPID</name> <op:operator pos:line="2508" pos:column="72">*</op:operator><name pos:line="2508" pos:column="73">rgDispId</name><op:operator pos:line="2508" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2510" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="2510" pos:column="23">HRESULT</name></type> ( <name pos:line="2510" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="2510" pos:column="51">*</type:modifier><name pos:line="2510" pos:column="52">Invoke</name> )<parameter_list pos:line="2510" pos:column="60">( 
            <param><decl><type><name pos:line="2511" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2511" pos:column="30">*</type:modifier></type> <name pos:line="2511" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2512" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2512" pos:column="24">DISPID</name></type> <name pos:line="2512" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="2513" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2513" pos:column="24">REFIID</name></type> <name pos:line="2513" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2514" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2514" pos:column="24">LCID</name></type> <name pos:line="2514" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2515" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2515" pos:column="24">WORD</name></type> <name pos:line="2515" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="2516" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2516" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="2516" pos:column="40">*</type:modifier></type><name pos:line="2516" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="2517" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2517" pos:column="25">VARIANT</name> <type:modifier pos:line="2517" pos:column="33">*</type:modifier></type><name pos:line="2517" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="2518" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2518" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="2518" pos:column="35">*</type:modifier></type><name pos:line="2518" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="2519" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2519" pos:column="25">UINT</name> <type:modifier pos:line="2519" pos:column="30">*</type:modifier></type><name pos:line="2519" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2521" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2521" pos:column="29">HRESULT</name></type> ( <name pos:line="2521" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2521" pos:column="57">*</type:modifier><name pos:line="2521" pos:column="58">get_DTE</name> )<parameter_list pos:line="2521" pos:column="67">( 
            <param><decl><type><name pos:line="2522" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2522" pos:column="30">*</type:modifier></type> <name pos:line="2522" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2523" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2523" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2523" pos:column="54">/* external definition not present */</comment> <name pos:line="2523" pos:column="92">DTE</name> <type:modifier pos:line="2523" pos:column="96">*</type:modifier><type:modifier pos:line="2523" pos:column="97">*</type:modifier></type><name pos:line="2523" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2525" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2525" pos:column="29">HRESULT</name></type> ( <name pos:line="2525" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2525" pos:column="57">*</type:modifier><name pos:line="2525" pos:column="58">get_Parent</name> )<parameter_list pos:line="2525" pos:column="70">( 
            <param><decl><type><name pos:line="2526" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2526" pos:column="30">*</type:modifier></type> <name pos:line="2526" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2527" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2527" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2527" pos:column="54">/* external definition not present */</comment> <name pos:line="2527" pos:column="92">Debugger</name> <type:modifier pos:line="2527" pos:column="101">*</type:modifier><type:modifier pos:line="2527" pos:column="102">*</type:modifier></type><name pos:line="2527" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2529" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2529" pos:column="29">HRESULT</name></type> ( <name pos:line="2529" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2529" pos:column="57">*</type:modifier><name pos:line="2529" pos:column="58">get_Collection</name> )<parameter_list pos:line="2529" pos:column="74">( 
            <param><decl><type><name pos:line="2530" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2530" pos:column="30">*</type:modifier></type> <name pos:line="2530" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2531" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2531" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2531" pos:column="54">ExceptionSettings</name> <type:modifier pos:line="2531" pos:column="72">*</type:modifier><type:modifier pos:line="2531" pos:column="73">*</type:modifier></type><name pos:line="2531" pos:column="74">ExceptionSettings</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2533" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2533" pos:column="29">HRESULT</name></type> ( <name pos:line="2533" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2533" pos:column="57">*</type:modifier><name pos:line="2533" pos:column="58">get_Name</name> )<parameter_list pos:line="2533" pos:column="68">( 
            <param><decl><type><name pos:line="2534" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2534" pos:column="30">*</type:modifier></type> <name pos:line="2534" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2535" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2535" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2535" pos:column="54">BSTR</name> <type:modifier pos:line="2535" pos:column="59">*</type:modifier></type><name pos:line="2535" pos:column="60">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2537" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2537" pos:column="29">HRESULT</name></type> ( <name pos:line="2537" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2537" pos:column="57">*</type:modifier><name pos:line="2537" pos:column="58">get_BreakWhenThrown</name> )<parameter_list pos:line="2537" pos:column="79">( 
            <param><decl><type><name pos:line="2538" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2538" pos:column="30">*</type:modifier></type> <name pos:line="2538" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2539" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2539" pos:column="33">__RPC__out</name> <name pos:line="2539" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2539" pos:column="57">*</type:modifier></type><name pos:line="2539" pos:column="58">BreakWhenThrown</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2541" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2541" pos:column="29">HRESULT</name></type> ( <name pos:line="2541" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2541" pos:column="57">*</type:modifier><name pos:line="2541" pos:column="58">get_BreakWhenUserUnhandled</name> )<parameter_list pos:line="2541" pos:column="86">( 
            <param><decl><type><name pos:line="2542" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2542" pos:column="30">*</type:modifier></type> <name pos:line="2542" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2543" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2543" pos:column="33">__RPC__out</name> <name pos:line="2543" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2543" pos:column="57">*</type:modifier></type><name pos:line="2543" pos:column="58">BreakWhenUserUnhandled</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2545" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2545" pos:column="29">HRESULT</name></type> ( <name pos:line="2545" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2545" pos:column="57">*</type:modifier><name pos:line="2545" pos:column="58">get_UserDefined</name> )<parameter_list pos:line="2545" pos:column="75">( 
            <param><decl><type><name pos:line="2546" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2546" pos:column="30">*</type:modifier></type> <name pos:line="2546" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2547" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2547" pos:column="33">__RPC__out</name> <name pos:line="2547" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2547" pos:column="57">*</type:modifier></type><name pos:line="2547" pos:column="58">UserDefined</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2549" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2549" pos:column="29">HRESULT</name></type> ( <name pos:line="2549" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2549" pos:column="57">*</type:modifier><name pos:line="2549" pos:column="58">get_Code</name> )<parameter_list pos:line="2549" pos:column="68">( 
            <param><decl><type><name pos:line="2550" pos:column="13">ExceptionSetting</name> <type:modifier pos:line="2550" pos:column="30">*</type:modifier></type> <name pos:line="2550" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2551" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2551" pos:column="33">__RPC__out</name> <name pos:line="2551" pos:column="44">DWORD</name> <type:modifier pos:line="2551" pos:column="50">*</type:modifier></type><name pos:line="2551" pos:column="51">Code</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2553" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2554" pos:column="7">ExceptionSettingVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2556" pos:column="5">interface</name></type> <name pos:line="2556" pos:column="15">ExceptionSetting</name>
    <argument_list pos:line="2557" pos:column="5">{
        <argument><expr><name pos:line="2558" pos:column="9">CONST_VTBL</name> struct <name pos:line="2558" pos:column="27">ExceptionSettingVtbl</name> <op:operator pos:line="2558" pos:column="48">*</op:operator><name pos:line="2558" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2563" pos:column="1">#<cpp:directive pos:line="2563" pos:column="2">ifdef</cpp:directive> <name pos:line="2563" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2566" pos:column="1">#<cpp:directive pos:line="2566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2566" pos:column="9">ExceptionSetting_QueryInterface</name><parameter_list pos:line="2566" pos:column="40">(<param><type><name pos:line="2566" pos:column="41">This</name></type></param>,<param><type><name pos:line="2566" pos:column="46">riid</name></type></param>,<param><type><name pos:line="2566" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2567" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2569" pos:column="1">#<cpp:directive pos:line="2569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2569" pos:column="9">ExceptionSetting_AddRef</name><parameter_list pos:line="2569" pos:column="32">(<param><type><name pos:line="2569" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2570" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2572" pos:column="1">#<cpp:directive pos:line="2572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2572" pos:column="9">ExceptionSetting_Release</name><parameter_list pos:line="2572" pos:column="33">(<param><type><name pos:line="2572" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2573" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2576" pos:column="1">#<cpp:directive pos:line="2576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2576" pos:column="9">ExceptionSetting_GetTypeInfoCount</name><parameter_list pos:line="2576" pos:column="42">(<param><type><name pos:line="2576" pos:column="43">This</name></type></param>,<param><type><name pos:line="2576" pos:column="48">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2577" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2579" pos:column="1">#<cpp:directive pos:line="2579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2579" pos:column="9">ExceptionSetting_GetTypeInfo</name><parameter_list pos:line="2579" pos:column="37">(<param><type><name pos:line="2579" pos:column="38">This</name></type></param>,<param><type><name pos:line="2579" pos:column="43">iTInfo</name></type></param>,<param><type><name pos:line="2579" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="2579" pos:column="55">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2580" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2582" pos:column="1">#<cpp:directive pos:line="2582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2582" pos:column="9">ExceptionSetting_GetIDsOfNames</name><parameter_list pos:line="2582" pos:column="39">(<param><type><name pos:line="2582" pos:column="40">This</name></type></param>,<param><type><name pos:line="2582" pos:column="45">riid</name></type></param>,<param><type><name pos:line="2582" pos:column="50">rgszNames</name></type></param>,<param><type><name pos:line="2582" pos:column="60">cNames</name></type></param>,<param><type><name pos:line="2582" pos:column="67">lcid</name></type></param>,<param><type><name pos:line="2582" pos:column="72">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2583" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2585" pos:column="1">#<cpp:directive pos:line="2585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2585" pos:column="9">ExceptionSetting_Invoke</name><parameter_list pos:line="2585" pos:column="32">(<param><type><name pos:line="2585" pos:column="33">This</name></type></param>,<param><type><name pos:line="2585" pos:column="38">dispIdMember</name></type></param>,<param><type><name pos:line="2585" pos:column="51">riid</name></type></param>,<param><type><name pos:line="2585" pos:column="56">lcid</name></type></param>,<param><type><name pos:line="2585" pos:column="61">wFlags</name></type></param>,<param><type><name pos:line="2585" pos:column="68">pDispParams</name></type></param>,<param><type><name pos:line="2585" pos:column="80">pVarResult</name></type></param>,<param><type><name pos:line="2585" pos:column="91">pExcepInfo</name></type></param>,<param><type><name pos:line="2585" pos:column="102">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2586" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2589" pos:column="1">#<cpp:directive pos:line="2589" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2589" pos:column="9">ExceptionSetting_get_DTE</name><parameter_list pos:line="2589" pos:column="33">(<param><type><name pos:line="2589" pos:column="34">This</name></type></param>,<param><type><name pos:line="2589" pos:column="39">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2590" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2592" pos:column="1">#<cpp:directive pos:line="2592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2592" pos:column="9">ExceptionSetting_get_Parent</name><parameter_list pos:line="2592" pos:column="36">(<param><type><name pos:line="2592" pos:column="37">This</name></type></param>,<param><type><name pos:line="2592" pos:column="42">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2593" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="2595" pos:column="1">#<cpp:directive pos:line="2595" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2595" pos:column="9">ExceptionSetting_get_Collection</name><parameter_list pos:line="2595" pos:column="40">(<param><type><name pos:line="2595" pos:column="41">This</name></type></param>,<param><type><name pos:line="2595" pos:column="46">ExceptionSettings</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2596" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,ExceptionSettings) )</cpp:value></cpp:define> 

<cpp:define pos:line="2598" pos:column="1">#<cpp:directive pos:line="2598" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2598" pos:column="9">ExceptionSetting_get_Name</name><parameter_list pos:line="2598" pos:column="34">(<param><type><name pos:line="2598" pos:column="35">This</name></type></param>,<param><type><name pos:line="2598" pos:column="40">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2599" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="2601" pos:column="1">#<cpp:directive pos:line="2601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2601" pos:column="9">ExceptionSetting_get_BreakWhenThrown</name><parameter_list pos:line="2601" pos:column="45">(<param><type><name pos:line="2601" pos:column="46">This</name></type></param>,<param><type><name pos:line="2601" pos:column="51">BreakWhenThrown</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2602" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BreakWhenThrown(This,BreakWhenThrown) )</cpp:value></cpp:define> 

<cpp:define pos:line="2604" pos:column="1">#<cpp:directive pos:line="2604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2604" pos:column="9">ExceptionSetting_get_BreakWhenUserUnhandled</name><parameter_list pos:line="2604" pos:column="52">(<param><type><name pos:line="2604" pos:column="53">This</name></type></param>,<param><type><name pos:line="2604" pos:column="58">BreakWhenUserUnhandled</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2605" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BreakWhenUserUnhandled(This,BreakWhenUserUnhandled) )</cpp:value></cpp:define> 

<cpp:define pos:line="2607" pos:column="1">#<cpp:directive pos:line="2607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2607" pos:column="9">ExceptionSetting_get_UserDefined</name><parameter_list pos:line="2607" pos:column="41">(<param><type><name pos:line="2607" pos:column="42">This</name></type></param>,<param><type><name pos:line="2607" pos:column="47">UserDefined</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2608" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UserDefined(This,UserDefined) )</cpp:value></cpp:define> 

<cpp:define pos:line="2610" pos:column="1">#<cpp:directive pos:line="2610" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2610" pos:column="9">ExceptionSetting_get_Code</name><parameter_list pos:line="2610" pos:column="34">(<param><type><name pos:line="2610" pos:column="35">This</name></type></param>,<param><type><name pos:line="2610" pos:column="40">Code</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2611" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Code(This,Code) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2613" pos:column="1">#<cpp:directive pos:line="2613" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2613" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2616" pos:column="1">#<cpp:directive pos:line="2616" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2616" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2621" pos:column="1">#<cpp:directive pos:line="2621" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2621" pos:column="9">/* __ExceptionSetting_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2624" pos:column="1">#<cpp:directive pos:line="2624" pos:column="2">ifndef</cpp:directive> <name pos:line="2624" pos:column="9">__Template_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2625" pos:column="1">#<cpp:directive pos:line="2625" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2625" pos:column="9">__Template_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2627" pos:column="1">/* interface Template */</comment>
<comment type="block" pos:line="2628" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][object][oleautomation][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2631" pos:column="1">EXTERN_C</name> <specifier pos:line="2631" pos:column="10">const</specifier> <name pos:line="2631" pos:column="16">IID</name></type> <name pos:line="2631" pos:column="20">IID_Template</name></decl>;</decl_stmt>

<cpp:if pos:line="2633" pos:column="1">#<cpp:directive pos:line="2633" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2633" pos:column="5">defined</name><argument_list pos:line="2633" pos:column="12">(<argument><expr><name pos:line="2633" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2633" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2633" pos:column="29">!</op:operator><call><name pos:line="2633" pos:column="30">defined</name><argument_list pos:line="2633" pos:column="37">(<argument><expr><name pos:line="2633" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2635" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2635" pos:column="19">(<argument pos:line="2635" pos:column="20">"76A0263C-083C-49f1-B312-9DB360FCC9F1"</argument>)</argument_list></macro>
    <label><name pos:line="2636" pos:column="5">Template</name> :</label> <expr_stmt><expr pos:line="2636" pos:column="16">public <name pos:line="2636" pos:column="23">IDispatch</name>
    <block pos:line="2637" pos:column="5">{
    <expr pos:line="2638" pos:column="5">public<op:operator pos:line="2638" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2639" pos:column="17">/* [propget][id] */</comment> <name pos:line="2639" pos:column="37">HRESULT</name> <name pos:line="2639" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2639" pos:column="63">get_ID</name><argument_list pos:line="2639" pos:column="69">( 
            <comment type="block" pos:line="2640" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2640" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2640" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2640" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2642" pos:column="9">virtual <comment type="block" pos:line="2642" pos:column="17">/* [propget][id] */</comment> <name pos:line="2642" pos:column="37">HRESULT</name> <name pos:line="2642" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2642" pos:column="63">get_Name</name><argument_list pos:line="2642" pos:column="71">( 
            <comment type="block" pos:line="2643" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2643" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2643" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2643" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2645" pos:column="9">virtual <comment type="block" pos:line="2645" pos:column="17">/* [propget][id] */</comment> <name pos:line="2645" pos:column="37">HRESULT</name> <name pos:line="2645" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2645" pos:column="63">get_Description</name><argument_list pos:line="2645" pos:column="78">( 
            <comment type="block" pos:line="2646" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2646" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2646" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2646" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2648" pos:column="9">virtual <comment type="block" pos:line="2648" pos:column="17">/* [propget][id] */</comment> <name pos:line="2648" pos:column="37">HRESULT</name> <name pos:line="2648" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2648" pos:column="63">get_FilePath</name><argument_list pos:line="2648" pos:column="75">( 
            <comment type="block" pos:line="2649" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2649" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2649" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2649" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2651" pos:column="9">virtual <comment type="block" pos:line="2651" pos:column="17">/* [propget][id] */</comment> <name pos:line="2651" pos:column="37">HRESULT</name> <name pos:line="2651" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2651" pos:column="63">get_BaseName</name><argument_list pos:line="2651" pos:column="75">( 
            <comment type="block" pos:line="2652" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2652" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2652" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2652" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2654" pos:column="9">virtual <comment type="block" pos:line="2654" pos:column="17">/* [propget][id] */</comment> <name pos:line="2654" pos:column="37">HRESULT</name> <name pos:line="2654" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2654" pos:column="63">get_CustomDataSignature</name><argument_list pos:line="2654" pos:column="86">( 
            <comment type="block" pos:line="2655" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2655" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2655" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2655" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2657" pos:column="9">virtual <comment type="block" pos:line="2657" pos:column="17">/* [propget][id] */</comment> <name pos:line="2657" pos:column="37">HRESULT</name> <name pos:line="2657" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2657" pos:column="63">get_CustomData</name><argument_list pos:line="2657" pos:column="77">( 
            <comment type="block" pos:line="2658" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2658" pos:column="33">__RPC__deref_out_opt BSTR *pbstrReturn</argument>)</argument_list></macro> <op:operator pos:line="2658" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2658" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2662" pos:column="1">#<cpp:directive pos:line="2662" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2662" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2664" pos:column="5">typedef <type><struct pos:line="2664" pos:column="13">struct <name pos:line="2664" pos:column="20">TemplateVtbl</name>
    <block pos:line="2665" pos:column="5">{<public type="default" pos:line="2665" pos:column="6">
        <function_decl><type><name pos:line="2666" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2668" pos:column="9">HRESULT</name></type> ( <name pos:line="2668" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2668" pos:column="37">*</type:modifier><name pos:line="2668" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2668" pos:column="54">( 
            <param><decl><type><name pos:line="2669" pos:column="13">Template</name> <type:modifier pos:line="2669" pos:column="22">*</type:modifier></type> <name pos:line="2669" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2670" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2670" pos:column="24">__RPC__in</name> <name pos:line="2670" pos:column="34">REFIID</name></type> <name pos:line="2670" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2671" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2672" pos:column="13">__RPC__deref_out</name>  <name pos:line="2672" pos:column="31">void</name> <type:modifier pos:line="2672" pos:column="36">*</type:modifier><type:modifier pos:line="2672" pos:column="37">*</type:modifier></type><name pos:line="2672" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2674" pos:column="9">ULONG</name></type> ( <name pos:line="2674" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2674" pos:column="35">*</type:modifier><name pos:line="2674" pos:column="36">AddRef</name> )<parameter_list pos:line="2674" pos:column="44">( 
            <param><decl><type><name pos:line="2675" pos:column="13">Template</name> <type:modifier pos:line="2675" pos:column="22">*</type:modifier></type> <name pos:line="2675" pos:column="24">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2677" pos:column="9">ULONG</name></type> ( <name pos:line="2677" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2677" pos:column="35">*</type:modifier><name pos:line="2677" pos:column="36">Release</name> )<parameter_list pos:line="2677" pos:column="45">( 
            <param><decl><type><name pos:line="2678" pos:column="13">Template</name> <type:modifier pos:line="2678" pos:column="22">*</type:modifier></type> <name pos:line="2678" pos:column="24">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2680" pos:column="9">HRESULT</name></type> ( <name pos:line="2680" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2680" pos:column="37">*</type:modifier><name pos:line="2680" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="2680" pos:column="56">( 
            <param><decl><type><name pos:line="2681" pos:column="13">Template</name> <type:modifier pos:line="2681" pos:column="22">*</type:modifier></type> <name pos:line="2681" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2682" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2682" pos:column="25">__RPC__out</name> <name pos:line="2682" pos:column="36">UINT</name> <type:modifier pos:line="2682" pos:column="41">*</type:modifier></type><name pos:line="2682" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2684" pos:column="9">HRESULT</name></type> ( <name pos:line="2684" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2684" pos:column="37">*</type:modifier><name pos:line="2684" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="2684" pos:column="51">( 
            <param><decl><type><name pos:line="2685" pos:column="13">Template</name> <type:modifier pos:line="2685" pos:column="22">*</type:modifier></type> <name pos:line="2685" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2686" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2686" pos:column="24">UINT</name></type> <name pos:line="2686" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="2687" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2687" pos:column="24">LCID</name></type> <name pos:line="2687" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2688" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2688" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2688" pos:column="46">ITypeInfo</name> <type:modifier pos:line="2688" pos:column="56">*</type:modifier><type:modifier pos:line="2688" pos:column="57">*</type:modifier></type><name pos:line="2688" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2690" pos:column="9">HRESULT</name> <argument_list pos:line="2690" pos:column="17">( <argument pos:line="2690" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2690" pos:column="53">(</op:operator> 
            <name pos:line="2691" pos:column="13">Template</name> <op:operator pos:line="2691" pos:column="22">*</op:operator> <name pos:line="2691" pos:column="24">This</name><op:operator pos:line="2691" pos:column="28">,</op:operator>
            <comment type="block" pos:line="2692" pos:column="13">/* [in] */</comment> <name pos:line="2692" pos:column="24">__RPC__in</name> <name pos:line="2692" pos:column="34">REFIID</name> <name pos:line="2692" pos:column="41">riid</name><op:operator pos:line="2692" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2693" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2693" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2693" pos:column="54">(<argument pos:line="2693" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="2693" pos:column="63">LPOLESTR</name> <op:operator pos:line="2693" pos:column="72">*</op:operator><name pos:line="2693" pos:column="73">rgszNames</name><op:operator pos:line="2693" pos:column="82">,</op:operator>
            <comment type="block" pos:line="2694" pos:column="13">/* [range][in] */</comment> <name pos:line="2694" pos:column="31">UINT</name> <name pos:line="2694" pos:column="36">cNames</name><op:operator pos:line="2694" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2695" pos:column="13">/* [in] */</comment> <name pos:line="2695" pos:column="24">LCID</name> <name pos:line="2695" pos:column="29">lcid</name><op:operator pos:line="2695" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2696" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="2696" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="2696" pos:column="56">(<argument pos:line="2696" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="2696" pos:column="65">DISPID</name> <op:operator pos:line="2696" pos:column="72">*</op:operator><name pos:line="2696" pos:column="73">rgDispId</name><op:operator pos:line="2696" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2698" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="2698" pos:column="23">HRESULT</name></type> ( <name pos:line="2698" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="2698" pos:column="51">*</type:modifier><name pos:line="2698" pos:column="52">Invoke</name> )<parameter_list pos:line="2698" pos:column="60">( 
            <param><decl><type><name pos:line="2699" pos:column="13">Template</name> <type:modifier pos:line="2699" pos:column="22">*</type:modifier></type> <name pos:line="2699" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2700" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2700" pos:column="24">DISPID</name></type> <name pos:line="2700" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="2701" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2701" pos:column="24">REFIID</name></type> <name pos:line="2701" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2702" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2702" pos:column="24">LCID</name></type> <name pos:line="2702" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2703" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2703" pos:column="24">WORD</name></type> <name pos:line="2703" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="2704" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2704" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="2704" pos:column="40">*</type:modifier></type><name pos:line="2704" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="2705" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2705" pos:column="25">VARIANT</name> <type:modifier pos:line="2705" pos:column="33">*</type:modifier></type><name pos:line="2705" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="2706" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2706" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="2706" pos:column="35">*</type:modifier></type><name pos:line="2706" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="2707" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2707" pos:column="25">UINT</name> <type:modifier pos:line="2707" pos:column="30">*</type:modifier></type><name pos:line="2707" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2709" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2709" pos:column="29">HRESULT</name></type> ( <name pos:line="2709" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2709" pos:column="57">*</type:modifier><name pos:line="2709" pos:column="58">get_ID</name> )<parameter_list pos:line="2709" pos:column="66">( 
            <param><decl><type><name pos:line="2710" pos:column="13">Template</name> <type:modifier pos:line="2710" pos:column="22">*</type:modifier></type> <name pos:line="2710" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2711" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2711" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2711" pos:column="54">BSTR</name> <type:modifier pos:line="2711" pos:column="59">*</type:modifier></type><name pos:line="2711" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2713" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2713" pos:column="29">HRESULT</name></type> ( <name pos:line="2713" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2713" pos:column="57">*</type:modifier><name pos:line="2713" pos:column="58">get_Name</name> )<parameter_list pos:line="2713" pos:column="68">( 
            <param><decl><type><name pos:line="2714" pos:column="13">Template</name> <type:modifier pos:line="2714" pos:column="22">*</type:modifier></type> <name pos:line="2714" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2715" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2715" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2715" pos:column="54">BSTR</name> <type:modifier pos:line="2715" pos:column="59">*</type:modifier></type><name pos:line="2715" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2717" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2717" pos:column="29">HRESULT</name></type> ( <name pos:line="2717" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2717" pos:column="57">*</type:modifier><name pos:line="2717" pos:column="58">get_Description</name> )<parameter_list pos:line="2717" pos:column="75">( 
            <param><decl><type><name pos:line="2718" pos:column="13">Template</name> <type:modifier pos:line="2718" pos:column="22">*</type:modifier></type> <name pos:line="2718" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2719" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2719" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2719" pos:column="54">BSTR</name> <type:modifier pos:line="2719" pos:column="59">*</type:modifier></type><name pos:line="2719" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2721" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2721" pos:column="29">HRESULT</name></type> ( <name pos:line="2721" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2721" pos:column="57">*</type:modifier><name pos:line="2721" pos:column="58">get_FilePath</name> )<parameter_list pos:line="2721" pos:column="72">( 
            <param><decl><type><name pos:line="2722" pos:column="13">Template</name> <type:modifier pos:line="2722" pos:column="22">*</type:modifier></type> <name pos:line="2722" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2723" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2723" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2723" pos:column="54">BSTR</name> <type:modifier pos:line="2723" pos:column="59">*</type:modifier></type><name pos:line="2723" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2725" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2725" pos:column="29">HRESULT</name></type> ( <name pos:line="2725" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2725" pos:column="57">*</type:modifier><name pos:line="2725" pos:column="58">get_BaseName</name> )<parameter_list pos:line="2725" pos:column="72">( 
            <param><decl><type><name pos:line="2726" pos:column="13">Template</name> <type:modifier pos:line="2726" pos:column="22">*</type:modifier></type> <name pos:line="2726" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2727" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2727" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2727" pos:column="54">BSTR</name> <type:modifier pos:line="2727" pos:column="59">*</type:modifier></type><name pos:line="2727" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2729" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2729" pos:column="29">HRESULT</name></type> ( <name pos:line="2729" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2729" pos:column="57">*</type:modifier><name pos:line="2729" pos:column="58">get_CustomDataSignature</name> )<parameter_list pos:line="2729" pos:column="83">( 
            <param><decl><type><name pos:line="2730" pos:column="13">Template</name> <type:modifier pos:line="2730" pos:column="22">*</type:modifier></type> <name pos:line="2730" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2731" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2731" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2731" pos:column="54">BSTR</name> <type:modifier pos:line="2731" pos:column="59">*</type:modifier></type><name pos:line="2731" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2733" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2733" pos:column="29">HRESULT</name></type> ( <name pos:line="2733" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2733" pos:column="57">*</type:modifier><name pos:line="2733" pos:column="58">get_CustomData</name> )<parameter_list pos:line="2733" pos:column="74">( 
            <param><decl><type><name pos:line="2734" pos:column="13">Template</name> <type:modifier pos:line="2734" pos:column="22">*</type:modifier></type> <name pos:line="2734" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="2735" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2735" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2735" pos:column="54">BSTR</name> <type:modifier pos:line="2735" pos:column="59">*</type:modifier></type><name pos:line="2735" pos:column="60">pbstrReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2737" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2738" pos:column="7">TemplateVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2740" pos:column="5">interface</name></type> <name pos:line="2740" pos:column="15">Template</name>
    <argument_list pos:line="2741" pos:column="5">{
        <argument><expr><name pos:line="2742" pos:column="9">CONST_VTBL</name> struct <name pos:line="2742" pos:column="27">TemplateVtbl</name> <op:operator pos:line="2742" pos:column="40">*</op:operator><name pos:line="2742" pos:column="41">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2747" pos:column="1">#<cpp:directive pos:line="2747" pos:column="2">ifdef</cpp:directive> <name pos:line="2747" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2750" pos:column="1">#<cpp:directive pos:line="2750" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2750" pos:column="9">Template_QueryInterface</name><parameter_list pos:line="2750" pos:column="32">(<param><type><name pos:line="2750" pos:column="33">This</name></type></param>,<param><type><name pos:line="2750" pos:column="38">riid</name></type></param>,<param><type><name pos:line="2750" pos:column="43">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2751" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2753" pos:column="1">#<cpp:directive pos:line="2753" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2753" pos:column="9">Template_AddRef</name><parameter_list pos:line="2753" pos:column="24">(<param><type><name pos:line="2753" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2754" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2756" pos:column="1">#<cpp:directive pos:line="2756" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2756" pos:column="9">Template_Release</name><parameter_list pos:line="2756" pos:column="25">(<param><type><name pos:line="2756" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2757" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2760" pos:column="1">#<cpp:directive pos:line="2760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2760" pos:column="9">Template_GetTypeInfoCount</name><parameter_list pos:line="2760" pos:column="34">(<param><type><name pos:line="2760" pos:column="35">This</name></type></param>,<param><type><name pos:line="2760" pos:column="40">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2761" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2763" pos:column="1">#<cpp:directive pos:line="2763" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2763" pos:column="9">Template_GetTypeInfo</name><parameter_list pos:line="2763" pos:column="29">(<param><type><name pos:line="2763" pos:column="30">This</name></type></param>,<param><type><name pos:line="2763" pos:column="35">iTInfo</name></type></param>,<param><type><name pos:line="2763" pos:column="42">lcid</name></type></param>,<param><type><name pos:line="2763" pos:column="47">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2764" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2766" pos:column="1">#<cpp:directive pos:line="2766" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2766" pos:column="9">Template_GetIDsOfNames</name><parameter_list pos:line="2766" pos:column="31">(<param><type><name pos:line="2766" pos:column="32">This</name></type></param>,<param><type><name pos:line="2766" pos:column="37">riid</name></type></param>,<param><type><name pos:line="2766" pos:column="42">rgszNames</name></type></param>,<param><type><name pos:line="2766" pos:column="52">cNames</name></type></param>,<param><type><name pos:line="2766" pos:column="59">lcid</name></type></param>,<param><type><name pos:line="2766" pos:column="64">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2767" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2769" pos:column="1">#<cpp:directive pos:line="2769" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2769" pos:column="9">Template_Invoke</name><parameter_list pos:line="2769" pos:column="24">(<param><type><name pos:line="2769" pos:column="25">This</name></type></param>,<param><type><name pos:line="2769" pos:column="30">dispIdMember</name></type></param>,<param><type><name pos:line="2769" pos:column="43">riid</name></type></param>,<param><type><name pos:line="2769" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="2769" pos:column="53">wFlags</name></type></param>,<param><type><name pos:line="2769" pos:column="60">pDispParams</name></type></param>,<param><type><name pos:line="2769" pos:column="72">pVarResult</name></type></param>,<param><type><name pos:line="2769" pos:column="83">pExcepInfo</name></type></param>,<param><type><name pos:line="2769" pos:column="94">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2770" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2773" pos:column="1">#<cpp:directive pos:line="2773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2773" pos:column="9">Template_get_ID</name><parameter_list pos:line="2773" pos:column="24">(<param><type><name pos:line="2773" pos:column="25">This</name></type></param>,<param><type><name pos:line="2773" pos:column="30">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2774" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ID(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2776" pos:column="1">#<cpp:directive pos:line="2776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2776" pos:column="9">Template_get_Name</name><parameter_list pos:line="2776" pos:column="26">(<param><type><name pos:line="2776" pos:column="27">This</name></type></param>,<param><type><name pos:line="2776" pos:column="32">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2777" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2779" pos:column="1">#<cpp:directive pos:line="2779" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2779" pos:column="9">Template_get_Description</name><parameter_list pos:line="2779" pos:column="33">(<param><type><name pos:line="2779" pos:column="34">This</name></type></param>,<param><type><name pos:line="2779" pos:column="39">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2780" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Description(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2782" pos:column="1">#<cpp:directive pos:line="2782" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2782" pos:column="9">Template_get_FilePath</name><parameter_list pos:line="2782" pos:column="30">(<param><type><name pos:line="2782" pos:column="31">This</name></type></param>,<param><type><name pos:line="2782" pos:column="36">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2783" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FilePath(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2785" pos:column="1">#<cpp:directive pos:line="2785" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2785" pos:column="9">Template_get_BaseName</name><parameter_list pos:line="2785" pos:column="30">(<param><type><name pos:line="2785" pos:column="31">This</name></type></param>,<param><type><name pos:line="2785" pos:column="36">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2786" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BaseName(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2788" pos:column="1">#<cpp:directive pos:line="2788" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2788" pos:column="9">Template_get_CustomDataSignature</name><parameter_list pos:line="2788" pos:column="41">(<param><type><name pos:line="2788" pos:column="42">This</name></type></param>,<param><type><name pos:line="2788" pos:column="47">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2789" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CustomDataSignature(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2791" pos:column="1">#<cpp:directive pos:line="2791" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2791" pos:column="9">Template_get_CustomData</name><parameter_list pos:line="2791" pos:column="32">(<param><type><name pos:line="2791" pos:column="33">This</name></type></param>,<param><type><name pos:line="2791" pos:column="38">pbstrReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2792" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CustomData(This,pbstrReturn) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2794" pos:column="1">#<cpp:directive pos:line="2794" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2794" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2797" pos:column="1">#<cpp:directive pos:line="2797" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2797" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2802" pos:column="1">#<cpp:directive pos:line="2802" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2802" pos:column="9">/* __Template_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2805" pos:column="1">#<cpp:directive pos:line="2805" pos:column="2">ifndef</cpp:directive> <name pos:line="2805" pos:column="9">__Templates_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2806" pos:column="1">#<cpp:directive pos:line="2806" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2806" pos:column="9">__Templates_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2808" pos:column="1">/* interface Templates */</comment>
<comment type="block" pos:line="2809" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][object][oleautomation][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2812" pos:column="1">EXTERN_C</name> <specifier pos:line="2812" pos:column="10">const</specifier> <name pos:line="2812" pos:column="16">IID</name></type> <name pos:line="2812" pos:column="20">IID_Templates</name></decl>;</decl_stmt>

<cpp:if pos:line="2814" pos:column="1">#<cpp:directive pos:line="2814" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2814" pos:column="5">defined</name><argument_list pos:line="2814" pos:column="12">(<argument><expr><name pos:line="2814" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2814" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2814" pos:column="29">!</op:operator><call><name pos:line="2814" pos:column="30">defined</name><argument_list pos:line="2814" pos:column="37">(<argument><expr><name pos:line="2814" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2816" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2816" pos:column="19">(<argument pos:line="2816" pos:column="20">"30C96324-A117-4618-A9A9-0B06EC455121"</argument>)</argument_list></macro>
    <label><name pos:line="2817" pos:column="5">Templates</name> :</label> <expr_stmt><expr pos:line="2817" pos:column="17">public <name pos:line="2817" pos:column="24">IDispatch</name>
    <block pos:line="2818" pos:column="5">{
    <expr pos:line="2819" pos:column="5">public<op:operator pos:line="2819" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2820" pos:column="17">/* [propget][id] */</comment> <name pos:line="2820" pos:column="37">HRESULT</name> <name pos:line="2820" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2820" pos:column="63">get__NewEnum</name><argument_list pos:line="2820" pos:column="75">( 
            <comment type="block" pos:line="2821" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2821" pos:column="33">__RPC__deref_out_opt IUnknown **ppUnk</argument>)</argument_list></macro> <op:operator pos:line="2821" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="2821" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="2823" pos:column="9">virtual <comment type="block" pos:line="2823" pos:column="17">/* [propget][id] */</comment> <name pos:line="2823" pos:column="37">HRESULT</name> <name pos:line="2823" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2823" pos:column="63">get_Item</name><argument_list pos:line="2823" pos:column="71">( 
            <comment type="block" pos:line="2824" pos:column="13">/* [in] */</comment> <argument pos:line="2824" pos:column="24">long index</argument>,
            <comment type="block" pos:line="2825" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2825" pos:column="33">__RPC__deref_out_opt Template **lppcReturn</argument>)</argument_list></macro> <op:operator pos:line="2825" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="2825" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="2827" pos:column="9">virtual <comment type="block" pos:line="2827" pos:column="17">/* [propget][id] */</comment> <name pos:line="2827" pos:column="37">HRESULT</name> <name pos:line="2827" pos:column="45">STDMETHODCALLTYPE</name> <macro><name pos:line="2827" pos:column="63">get_Count</name><argument_list pos:line="2827" pos:column="72">( 
            <comment type="block" pos:line="2828" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2828" pos:column="33">__RPC__out long *lplReturn</argument>)</argument_list></macro> <op:operator pos:line="2828" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2828" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2832" pos:column="1">#<cpp:directive pos:line="2832" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2832" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2834" pos:column="5">typedef <type><struct pos:line="2834" pos:column="13">struct <name pos:line="2834" pos:column="20">TemplatesVtbl</name>
    <block pos:line="2835" pos:column="5">{<public type="default" pos:line="2835" pos:column="6">
        <function_decl><type><name pos:line="2836" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2838" pos:column="9">HRESULT</name></type> ( <name pos:line="2838" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2838" pos:column="37">*</type:modifier><name pos:line="2838" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2838" pos:column="54">( 
            <param><decl><type><name pos:line="2839" pos:column="13">Templates</name> <type:modifier pos:line="2839" pos:column="23">*</type:modifier></type> <name pos:line="2839" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2840" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2840" pos:column="24">__RPC__in</name> <name pos:line="2840" pos:column="34">REFIID</name></type> <name pos:line="2840" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2841" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2842" pos:column="13">__RPC__deref_out</name>  <name pos:line="2842" pos:column="31">void</name> <type:modifier pos:line="2842" pos:column="36">*</type:modifier><type:modifier pos:line="2842" pos:column="37">*</type:modifier></type><name pos:line="2842" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2844" pos:column="9">ULONG</name></type> ( <name pos:line="2844" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2844" pos:column="35">*</type:modifier><name pos:line="2844" pos:column="36">AddRef</name> )<parameter_list pos:line="2844" pos:column="44">( 
            <param><decl><type><name pos:line="2845" pos:column="13">Templates</name> <type:modifier pos:line="2845" pos:column="23">*</type:modifier></type> <name pos:line="2845" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2847" pos:column="9">ULONG</name></type> ( <name pos:line="2847" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2847" pos:column="35">*</type:modifier><name pos:line="2847" pos:column="36">Release</name> )<parameter_list pos:line="2847" pos:column="45">( 
            <param><decl><type><name pos:line="2848" pos:column="13">Templates</name> <type:modifier pos:line="2848" pos:column="23">*</type:modifier></type> <name pos:line="2848" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2850" pos:column="9">HRESULT</name></type> ( <name pos:line="2850" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2850" pos:column="37">*</type:modifier><name pos:line="2850" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="2850" pos:column="56">( 
            <param><decl><type><name pos:line="2851" pos:column="13">Templates</name> <type:modifier pos:line="2851" pos:column="23">*</type:modifier></type> <name pos:line="2851" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2852" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2852" pos:column="25">__RPC__out</name> <name pos:line="2852" pos:column="36">UINT</name> <type:modifier pos:line="2852" pos:column="41">*</type:modifier></type><name pos:line="2852" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2854" pos:column="9">HRESULT</name></type> ( <name pos:line="2854" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2854" pos:column="37">*</type:modifier><name pos:line="2854" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="2854" pos:column="51">( 
            <param><decl><type><name pos:line="2855" pos:column="13">Templates</name> <type:modifier pos:line="2855" pos:column="23">*</type:modifier></type> <name pos:line="2855" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2856" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2856" pos:column="24">UINT</name></type> <name pos:line="2856" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="2857" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2857" pos:column="24">LCID</name></type> <name pos:line="2857" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2858" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2858" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2858" pos:column="46">ITypeInfo</name> <type:modifier pos:line="2858" pos:column="56">*</type:modifier><type:modifier pos:line="2858" pos:column="57">*</type:modifier></type><name pos:line="2858" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2860" pos:column="9">HRESULT</name> <argument_list pos:line="2860" pos:column="17">( <argument pos:line="2860" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2860" pos:column="53">(</op:operator> 
            <name pos:line="2861" pos:column="13">Templates</name> <op:operator pos:line="2861" pos:column="23">*</op:operator> <name pos:line="2861" pos:column="25">This</name><op:operator pos:line="2861" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2862" pos:column="13">/* [in] */</comment> <name pos:line="2862" pos:column="24">__RPC__in</name> <name pos:line="2862" pos:column="34">REFIID</name> <name pos:line="2862" pos:column="41">riid</name><op:operator pos:line="2862" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2863" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2863" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2863" pos:column="54">(<argument pos:line="2863" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="2863" pos:column="63">LPOLESTR</name> <op:operator pos:line="2863" pos:column="72">*</op:operator><name pos:line="2863" pos:column="73">rgszNames</name><op:operator pos:line="2863" pos:column="82">,</op:operator>
            <comment type="block" pos:line="2864" pos:column="13">/* [range][in] */</comment> <name pos:line="2864" pos:column="31">UINT</name> <name pos:line="2864" pos:column="36">cNames</name><op:operator pos:line="2864" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2865" pos:column="13">/* [in] */</comment> <name pos:line="2865" pos:column="24">LCID</name> <name pos:line="2865" pos:column="29">lcid</name><op:operator pos:line="2865" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2866" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="2866" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="2866" pos:column="56">(<argument pos:line="2866" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="2866" pos:column="65">DISPID</name> <op:operator pos:line="2866" pos:column="72">*</op:operator><name pos:line="2866" pos:column="73">rgDispId</name><op:operator pos:line="2866" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2868" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="2868" pos:column="23">HRESULT</name></type> ( <name pos:line="2868" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="2868" pos:column="51">*</type:modifier><name pos:line="2868" pos:column="52">Invoke</name> )<parameter_list pos:line="2868" pos:column="60">( 
            <param><decl><type><name pos:line="2869" pos:column="13">Templates</name> <type:modifier pos:line="2869" pos:column="23">*</type:modifier></type> <name pos:line="2869" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2870" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2870" pos:column="24">DISPID</name></type> <name pos:line="2870" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="2871" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2871" pos:column="24">REFIID</name></type> <name pos:line="2871" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2872" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2872" pos:column="24">LCID</name></type> <name pos:line="2872" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2873" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2873" pos:column="24">WORD</name></type> <name pos:line="2873" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="2874" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2874" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="2874" pos:column="40">*</type:modifier></type><name pos:line="2874" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="2875" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2875" pos:column="25">VARIANT</name> <type:modifier pos:line="2875" pos:column="33">*</type:modifier></type><name pos:line="2875" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="2876" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2876" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="2876" pos:column="35">*</type:modifier></type><name pos:line="2876" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="2877" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2877" pos:column="25">UINT</name> <type:modifier pos:line="2877" pos:column="30">*</type:modifier></type><name pos:line="2877" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2879" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2879" pos:column="29">HRESULT</name></type> ( <name pos:line="2879" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2879" pos:column="57">*</type:modifier><name pos:line="2879" pos:column="58">get__NewEnum</name> )<parameter_list pos:line="2879" pos:column="72">( 
            <param><decl><type><name pos:line="2880" pos:column="13">Templates</name> <type:modifier pos:line="2880" pos:column="23">*</type:modifier></type> <name pos:line="2880" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2881" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2881" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2881" pos:column="54">IUnknown</name> <type:modifier pos:line="2881" pos:column="63">*</type:modifier><type:modifier pos:line="2881" pos:column="64">*</type:modifier></type><name pos:line="2881" pos:column="65">ppUnk</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2883" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2883" pos:column="29">HRESULT</name></type> ( <name pos:line="2883" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2883" pos:column="57">*</type:modifier><name pos:line="2883" pos:column="58">get_Item</name> )<parameter_list pos:line="2883" pos:column="68">( 
            <param><decl><type><name pos:line="2884" pos:column="13">Templates</name> <type:modifier pos:line="2884" pos:column="23">*</type:modifier></type> <name pos:line="2884" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2885" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2885" pos:column="24">long</name></type> <name pos:line="2885" pos:column="29">index</name></decl></param>,
            <comment type="block" pos:line="2886" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2886" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2886" pos:column="54">Template</name> <type:modifier pos:line="2886" pos:column="63">*</type:modifier><type:modifier pos:line="2886" pos:column="64">*</type:modifier></type><name pos:line="2886" pos:column="65">lppcReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2888" pos:column="9">/* [propget][id] */</comment> <function_decl><type><name pos:line="2888" pos:column="29">HRESULT</name></type> ( <name pos:line="2888" pos:column="39">STDMETHODCALLTYPE</name> <type:modifier pos:line="2888" pos:column="57">*</type:modifier><name pos:line="2888" pos:column="58">get_Count</name> )<parameter_list pos:line="2888" pos:column="69">( 
            <param><decl><type><name pos:line="2889" pos:column="13">Templates</name> <type:modifier pos:line="2889" pos:column="23">*</type:modifier></type> <name pos:line="2889" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2890" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2890" pos:column="33">__RPC__out</name> <name pos:line="2890" pos:column="44">long</name> <type:modifier pos:line="2890" pos:column="49">*</type:modifier></type><name pos:line="2890" pos:column="50">lplReturn</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2892" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2893" pos:column="7">TemplatesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2895" pos:column="5">interface</name></type> <name pos:line="2895" pos:column="15">Templates</name>
    <argument_list pos:line="2896" pos:column="5">{
        <argument><expr><name pos:line="2897" pos:column="9">CONST_VTBL</name> struct <name pos:line="2897" pos:column="27">TemplatesVtbl</name> <op:operator pos:line="2897" pos:column="41">*</op:operator><name pos:line="2897" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2902" pos:column="1">#<cpp:directive pos:line="2902" pos:column="2">ifdef</cpp:directive> <name pos:line="2902" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2905" pos:column="1">#<cpp:directive pos:line="2905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2905" pos:column="9">Templates_QueryInterface</name><parameter_list pos:line="2905" pos:column="33">(<param><type><name pos:line="2905" pos:column="34">This</name></type></param>,<param><type><name pos:line="2905" pos:column="39">riid</name></type></param>,<param><type><name pos:line="2905" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2906" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2908" pos:column="1">#<cpp:directive pos:line="2908" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2908" pos:column="9">Templates_AddRef</name><parameter_list pos:line="2908" pos:column="25">(<param><type><name pos:line="2908" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2909" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2911" pos:column="1">#<cpp:directive pos:line="2911" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2911" pos:column="9">Templates_Release</name><parameter_list pos:line="2911" pos:column="26">(<param><type><name pos:line="2911" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2912" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2915" pos:column="1">#<cpp:directive pos:line="2915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2915" pos:column="9">Templates_GetTypeInfoCount</name><parameter_list pos:line="2915" pos:column="35">(<param><type><name pos:line="2915" pos:column="36">This</name></type></param>,<param><type><name pos:line="2915" pos:column="41">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2916" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2918" pos:column="1">#<cpp:directive pos:line="2918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2918" pos:column="9">Templates_GetTypeInfo</name><parameter_list pos:line="2918" pos:column="30">(<param><type><name pos:line="2918" pos:column="31">This</name></type></param>,<param><type><name pos:line="2918" pos:column="36">iTInfo</name></type></param>,<param><type><name pos:line="2918" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="2918" pos:column="48">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2919" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2921" pos:column="1">#<cpp:directive pos:line="2921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2921" pos:column="9">Templates_GetIDsOfNames</name><parameter_list pos:line="2921" pos:column="32">(<param><type><name pos:line="2921" pos:column="33">This</name></type></param>,<param><type><name pos:line="2921" pos:column="38">riid</name></type></param>,<param><type><name pos:line="2921" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="2921" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="2921" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="2921" pos:column="65">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2922" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2924" pos:column="1">#<cpp:directive pos:line="2924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2924" pos:column="9">Templates_Invoke</name><parameter_list pos:line="2924" pos:column="25">(<param><type><name pos:line="2924" pos:column="26">This</name></type></param>,<param><type><name pos:line="2924" pos:column="31">dispIdMember</name></type></param>,<param><type><name pos:line="2924" pos:column="44">riid</name></type></param>,<param><type><name pos:line="2924" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="2924" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="2924" pos:column="61">pDispParams</name></type></param>,<param><type><name pos:line="2924" pos:column="73">pVarResult</name></type></param>,<param><type><name pos:line="2924" pos:column="84">pExcepInfo</name></type></param>,<param><type><name pos:line="2924" pos:column="95">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2925" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2928" pos:column="1">#<cpp:directive pos:line="2928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2928" pos:column="9">Templates_get__NewEnum</name><parameter_list pos:line="2928" pos:column="31">(<param><type><name pos:line="2928" pos:column="32">This</name></type></param>,<param><type><name pos:line="2928" pos:column="37">ppUnk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2929" pos:column="5">( (This)-&gt;lpVtbl -&gt; get__NewEnum(This,ppUnk) )</cpp:value></cpp:define> 

<cpp:define pos:line="2931" pos:column="1">#<cpp:directive pos:line="2931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2931" pos:column="9">Templates_get_Item</name><parameter_list pos:line="2931" pos:column="27">(<param><type><name pos:line="2931" pos:column="28">This</name></type></param>,<param><type><name pos:line="2931" pos:column="33">index</name></type></param>,<param><type><name pos:line="2931" pos:column="39">lppcReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2932" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Item(This,index,lppcReturn) )</cpp:value></cpp:define> 

<cpp:define pos:line="2934" pos:column="1">#<cpp:directive pos:line="2934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2934" pos:column="9">Templates_get_Count</name><parameter_list pos:line="2934" pos:column="28">(<param><type><name pos:line="2934" pos:column="29">This</name></type></param>,<param><type><name pos:line="2934" pos:column="34">lplReturn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2935" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,lplReturn) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2937" pos:column="1">#<cpp:directive pos:line="2937" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2937" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2940" pos:column="1">#<cpp:directive pos:line="2940" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2940" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2945" pos:column="1">#<cpp:directive pos:line="2945" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2945" pos:column="9">/* __Templates_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2948" pos:column="1">#<cpp:directive pos:line="2948" pos:column="2">ifndef</cpp:directive> <name pos:line="2948" pos:column="9">__Solution3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2949" pos:column="1">#<cpp:directive pos:line="2949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2949" pos:column="9">__Solution3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2951" pos:column="1">/* interface Solution3 */</comment>
<comment type="block" pos:line="2952" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][object][oleautomation][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2955" pos:column="1">EXTERN_C</name> <specifier pos:line="2955" pos:column="10">const</specifier> <name pos:line="2955" pos:column="16">IID</name></type> <name pos:line="2955" pos:column="20">IID_Solution3</name></decl>;</decl_stmt>

<cpp:if pos:line="2957" pos:column="1">#<cpp:directive pos:line="2957" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2957" pos:column="5">defined</name><argument_list pos:line="2957" pos:column="12">(<argument><expr><name pos:line="2957" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2957" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2957" pos:column="29">!</op:operator><call><name pos:line="2957" pos:column="30">defined</name><argument_list pos:line="2957" pos:column="37">(<argument><expr><name pos:line="2957" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2959" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2959" pos:column="19">(<argument pos:line="2959" pos:column="20">"DF23915F-FDA3-4dd5-9CAA-2E1372C2BB16"</argument>)</argument_list></macro>
    <label><name pos:line="2960" pos:column="5">Solution3</name> :</label> <expr_stmt><expr pos:line="2960" pos:column="17">public <name pos:line="2960" pos:column="24">Solution2</name>
    <block pos:line="2961" pos:column="5">{
    <expr pos:line="2962" pos:column="5">public<op:operator pos:line="2962" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2963" pos:column="17">/* [id] */</comment> <name pos:line="2963" pos:column="28">HRESULT</name> <name pos:line="2963" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="2963" pos:column="54">GetProjectItemTemplates</name><argument_list pos:line="2963" pos:column="77">( 
            <argument pos:line="2964" pos:column="13">__RPC__in BSTR Language</argument>,
            <argument pos:line="2965" pos:column="13">__RPC__in BSTR CustomDataSignature</argument>,
            <comment type="block" pos:line="2966" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2966" pos:column="33">__RPC__deref_out_opt Templates **ppTemplates</argument>)</argument_list></macro> <op:operator pos:line="2966" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="2966" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2970" pos:column="1">#<cpp:directive pos:line="2970" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2970" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2972" pos:column="5">typedef <type><struct pos:line="2972" pos:column="13">struct <name pos:line="2972" pos:column="20">Solution3Vtbl</name>
    <block pos:line="2973" pos:column="5">{<public type="default" pos:line="2973" pos:column="6">
        <decl_stmt><decl><type><name pos:line="2974" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="2976" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="2976" pos:column="46">HRESULT</name></type> ( <name pos:line="2976" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2976" pos:column="74">*</type:modifier><name pos:line="2976" pos:column="75">QueryInterface</name> )<parameter_list pos:line="2976" pos:column="91">( 
            <param><decl><type><name pos:line="2977" pos:column="13">Solution3</name> <type:modifier pos:line="2977" pos:column="23">*</type:modifier></type> <name pos:line="2977" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2978" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="2978" pos:column="47">struct <name pos:line="2978" pos:column="54">GUID</name> <type:modifier pos:line="2978" pos:column="59">*</type:modifier></type><name pos:line="2978" pos:column="60">riid</name></decl><op:operator pos:line="2978" pos:column="64">,</op:operator>
            <comment type="block" pos:line="2979" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="2979" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="2979" pos:column="59">void</name> <type:modifier pos:line="2979" pos:column="64">*</type:modifier><type:modifier pos:line="2979" pos:column="65">*</type:modifier><name pos:line="2979" pos:column="66">ppvObj</name><op:operator pos:line="2979" pos:column="72">,</op:operator>
            <comment type="block" pos:line="2980" pos:column="13">/* [retval][out] */</comment> <name pos:line="2980" pos:column="33">__RPC__out</name> <name pos:line="2980" pos:column="44">void</name> <type:modifier pos:line="2980" pos:column="49">*</type:modifier><name pos:line="2980" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="2982" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2982" pos:column="46">HRESULT</name></type> ( <name pos:line="2982" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2982" pos:column="74">*</type:modifier><name pos:line="2982" pos:column="75">AddRef</name> )<parameter_list pos:line="2982" pos:column="83">( 
            <param><decl><type><name pos:line="2983" pos:column="13">Solution3</name> <type:modifier pos:line="2983" pos:column="23">*</type:modifier></type> <name pos:line="2983" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2984" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2984" pos:column="33">__RPC__out</name> <name pos:line="2984" pos:column="44">unsigned</name> <name pos:line="2984" pos:column="53">long</name> <type:modifier pos:line="2984" pos:column="58">*</type:modifier></type><name pos:line="2984" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2986" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2986" pos:column="46">HRESULT</name></type> ( <name pos:line="2986" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2986" pos:column="74">*</type:modifier><name pos:line="2986" pos:column="75">Release</name> )<parameter_list pos:line="2986" pos:column="84">( 
            <param><decl><type><name pos:line="2987" pos:column="13">Solution3</name> <type:modifier pos:line="2987" pos:column="23">*</type:modifier></type> <name pos:line="2987" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2988" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2988" pos:column="33">__RPC__out</name> <name pos:line="2988" pos:column="44">unsigned</name> <name pos:line="2988" pos:column="53">long</name> <type:modifier pos:line="2988" pos:column="58">*</type:modifier></type><name pos:line="2988" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2990" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2990" pos:column="46">HRESULT</name></type> ( <name pos:line="2990" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2990" pos:column="74">*</type:modifier><name pos:line="2990" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="2990" pos:column="93">( 
            <param><decl><type><name pos:line="2991" pos:column="13">Solution3</name> <type:modifier pos:line="2991" pos:column="23">*</type:modifier></type> <name pos:line="2991" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2992" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="2992" pos:column="38">__RPC__out</name> <name pos:line="2992" pos:column="49">unsigned</name> <name pos:line="2992" pos:column="58">UINT</name> <type:modifier pos:line="2992" pos:column="63">*</type:modifier></type><name pos:line="2992" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="2993" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2993" pos:column="33">__RPC__out</name> <name pos:line="2993" pos:column="44">void</name> <type:modifier pos:line="2993" pos:column="49">*</type:modifier></type><name pos:line="2993" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2995" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2995" pos:column="46">HRESULT</name></type> ( <name pos:line="2995" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2995" pos:column="74">*</type:modifier><name pos:line="2995" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="2995" pos:column="88">( 
            <param><decl><type><name pos:line="2996" pos:column="13">Solution3</name> <type:modifier pos:line="2996" pos:column="23">*</type:modifier></type> <name pos:line="2996" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2997" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="2997" pos:column="37">unsigned</name> <name pos:line="2997" pos:column="46">UINT</name></type> <name pos:line="2997" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="2998" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="2998" pos:column="37">unsigned</name> <name pos:line="2998" pos:column="46">long</name></type> <name pos:line="2998" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="2999" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="2999" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="2999" pos:column="59">void</name> <type:modifier pos:line="2999" pos:column="64">*</type:modifier><type:modifier pos:line="2999" pos:column="65">*</type:modifier></type><name pos:line="2999" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="3000" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3000" pos:column="33">__RPC__out</name> <name pos:line="3000" pos:column="44">void</name> <type:modifier pos:line="3000" pos:column="49">*</type:modifier></type><name pos:line="3000" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3002" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3002" pos:column="46">HRESULT</name> <argument_list pos:line="3002" pos:column="54">( <argument pos:line="3002" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3002" pos:column="90">(</op:operator> 
            <name pos:line="3003" pos:column="13">Solution3</name> <op:operator pos:line="3003" pos:column="23">*</op:operator> <name pos:line="3003" pos:column="25">This</name><op:operator pos:line="3003" pos:column="29">,</op:operator>
            <comment type="block" pos:line="3004" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3004" pos:column="37">__RPC__in</name> struct <name pos:line="3004" pos:column="54">GUID</name> <op:operator pos:line="3004" pos:column="59">*</op:operator><name pos:line="3004" pos:column="60">riid</name><op:operator pos:line="3004" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3005" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3005" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="3005" pos:column="57">signed</name> <name pos:line="3005" pos:column="64">char</name> <op:operator pos:line="3005" pos:column="69">*</op:operator><op:operator pos:line="3005" pos:column="70">*</op:operator><name pos:line="3005" pos:column="71">rgszNames</name><op:operator pos:line="3005" pos:column="80">,</op:operator>
            <comment type="block" pos:line="3006" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3006" pos:column="37">unsigned</name> <name pos:line="3006" pos:column="46">UINT</name> <name pos:line="3006" pos:column="51">cNames</name><op:operator pos:line="3006" pos:column="57">,</op:operator>
            <comment type="block" pos:line="3007" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3007" pos:column="37">unsigned</name> <name pos:line="3007" pos:column="46">long</name> <name pos:line="3007" pos:column="51">lcid</name><op:operator pos:line="3007" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3008" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3008" pos:column="38">__RPC__out</name> <name pos:line="3008" pos:column="49">signed</name> <name pos:line="3008" pos:column="56">long</name> <op:operator pos:line="3008" pos:column="61">*</op:operator><name pos:line="3008" pos:column="62">rgdispid</name><op:operator pos:line="3008" pos:column="70">,</op:operator>
            <comment type="block" pos:line="3009" pos:column="13">/* [retval][out] */</comment> <name pos:line="3009" pos:column="33">__RPC__out</name> <name pos:line="3009" pos:column="44">void</name> <op:operator pos:line="3009" pos:column="49">*</op:operator><name pos:line="3009" pos:column="50">retval</name><op:operator pos:line="3009" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3011" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3011" pos:column="46">HRESULT</name> <argument_list pos:line="3011" pos:column="54">( <argument pos:line="3011" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3011" pos:column="83">(</op:operator> 
            <name pos:line="3012" pos:column="13">Solution3</name> <op:operator pos:line="3012" pos:column="23">*</op:operator> <name pos:line="3012" pos:column="25">This</name><op:operator pos:line="3012" pos:column="29">,</op:operator>
            <comment type="block" pos:line="3013" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3013" pos:column="37">signed</name> <name pos:line="3013" pos:column="44">long</name> <name pos:line="3013" pos:column="49">dispidMember</name><op:operator pos:line="3013" pos:column="61">,</op:operator>
            <comment type="block" pos:line="3014" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3014" pos:column="37">__RPC__in</name> struct <name pos:line="3014" pos:column="54">GUID</name> <op:operator pos:line="3014" pos:column="59">*</op:operator><name pos:line="3014" pos:column="60">riid</name><op:operator pos:line="3014" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3015" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3015" pos:column="37">unsigned</name> <name pos:line="3015" pos:column="46">long</name> <name pos:line="3015" pos:column="51">lcid</name><op:operator pos:line="3015" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3016" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3016" pos:column="37">unsigned</name> <name pos:line="3016" pos:column="46">short</name> <name pos:line="3016" pos:column="52">wFlags</name><op:operator pos:line="3016" pos:column="58">,</op:operator>
            <comment type="block" pos:line="3017" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3017" pos:column="37">__RPC__in</name> struct <name pos:line="3017" pos:column="54">DISPPARAMS</name> <op:operator pos:line="3017" pos:column="65">*</op:operator><name pos:line="3017" pos:column="66">pdispparams</name><op:operator pos:line="3017" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3018" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3018" pos:column="38">__RPC__out</name> <name pos:line="3018" pos:column="49">VARIANT</name> <op:operator pos:line="3018" pos:column="57">*</op:operator><name pos:line="3018" pos:column="58">pvarResult</name><op:operator pos:line="3018" pos:column="68">,</op:operator>
            <comment type="block" pos:line="3019" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3019" pos:column="38">__RPC__out</name> struct <name pos:line="3019" pos:column="56">EXCEPINFO</name> <op:operator pos:line="3019" pos:column="66">*</op:operator><name pos:line="3019" pos:column="67">pexcepinfo</name><op:operator pos:line="3019" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3020" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3020" pos:column="38">__RPC__out</name> <name pos:line="3020" pos:column="49">unsigned</name> <name pos:line="3020" pos:column="58">UINT</name> <op:operator pos:line="3020" pos:column="63">*</op:operator><name pos:line="3020" pos:column="64">puArgErr</name><op:operator pos:line="3020" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3021" pos:column="13">/* [retval][out] */</comment> <name pos:line="3021" pos:column="33">__RPC__out</name> <name pos:line="3021" pos:column="44">void</name> <op:operator pos:line="3021" pos:column="49">*</op:operator><name pos:line="3021" pos:column="50">retval</name><op:operator pos:line="3021" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3023" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3023" pos:column="34">HRESULT</name></type> ( <name pos:line="3023" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3023" pos:column="62">*</type:modifier><name pos:line="3023" pos:column="63">Item</name> )<parameter_list pos:line="3023" pos:column="69">( 
            <param><decl><type><name pos:line="3024" pos:column="13">Solution3</name> <type:modifier pos:line="3024" pos:column="23">*</type:modifier></type> <name pos:line="3024" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3025" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3025" pos:column="37">VARIANT</name></type> <name pos:line="3025" pos:column="45">index</name></decl></param>,
            <comment type="block" pos:line="3026" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3026" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3026" pos:column="54">Project</name> <type:modifier pos:line="3026" pos:column="62">*</type:modifier><type:modifier pos:line="3026" pos:column="63">*</type:modifier></type><name pos:line="3026" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3028" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3028" pos:column="46">HRESULT</name></type> ( <name pos:line="3028" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3028" pos:column="74">*</type:modifier><name pos:line="3028" pos:column="75">_NewEnum</name> )<parameter_list pos:line="3028" pos:column="85">( 
            <param><decl><type><name pos:line="3029" pos:column="13">Solution3</name> <type:modifier pos:line="3029" pos:column="23">*</type:modifier></type> <name pos:line="3029" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3030" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3030" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3030" pos:column="54">IUnknown</name> <type:modifier pos:line="3030" pos:column="63">*</type:modifier><type:modifier pos:line="3030" pos:column="64">*</type:modifier></type><name pos:line="3030" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3032" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3032" pos:column="43">HRESULT</name></type> ( <name pos:line="3032" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3032" pos:column="71">*</type:modifier><name pos:line="3032" pos:column="72">get_DTE</name> )<parameter_list pos:line="3032" pos:column="81">( 
            <param><decl><type><name pos:line="3033" pos:column="13">Solution3</name> <type:modifier pos:line="3033" pos:column="23">*</type:modifier></type> <name pos:line="3033" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3034" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3034" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="3034" pos:column="54">*</type:modifier><type:modifier pos:line="3034" pos:column="55">*</type:modifier></type><name pos:line="3034" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3036" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3036" pos:column="43">HRESULT</name></type> ( <name pos:line="3036" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3036" pos:column="71">*</type:modifier><name pos:line="3036" pos:column="72">get_Parent</name> )<parameter_list pos:line="3036" pos:column="84">( 
            <param><decl><type><name pos:line="3037" pos:column="13">Solution3</name> <type:modifier pos:line="3037" pos:column="23">*</type:modifier></type> <name pos:line="3037" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3038" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3038" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="3038" pos:column="54">*</type:modifier><type:modifier pos:line="3038" pos:column="55">*</type:modifier></type><name pos:line="3038" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3040" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3040" pos:column="43">HRESULT</name></type> ( <name pos:line="3040" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3040" pos:column="71">*</type:modifier><name pos:line="3040" pos:column="72">get_Count</name> )<parameter_list pos:line="3040" pos:column="83">( 
            <param><decl><type><name pos:line="3041" pos:column="13">Solution3</name> <type:modifier pos:line="3041" pos:column="23">*</type:modifier></type> <name pos:line="3041" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3042" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3042" pos:column="33">__RPC__out</name> <name pos:line="3042" pos:column="44">signed</name> <name pos:line="3042" pos:column="51">long</name> <type:modifier pos:line="3042" pos:column="56">*</type:modifier></type><name pos:line="3042" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3044" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="3044" pos:column="51">HRESULT</name></type> ( <name pos:line="3044" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="3044" pos:column="79">*</type:modifier><name pos:line="3044" pos:column="80">get_FileName</name> )<parameter_list pos:line="3044" pos:column="94">( 
            <param><decl><type><name pos:line="3045" pos:column="13">Solution3</name> <type:modifier pos:line="3045" pos:column="23">*</type:modifier></type> <name pos:line="3045" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3046" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3046" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3046" pos:column="54">BSTR</name> <type:modifier pos:line="3046" pos:column="59">*</type:modifier></type><name pos:line="3046" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3048" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3048" pos:column="34">HRESULT</name></type> ( <name pos:line="3048" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3048" pos:column="62">*</type:modifier><name pos:line="3048" pos:column="63">SaveAs</name> )<parameter_list pos:line="3048" pos:column="71">( 
            <param><decl><type><name pos:line="3049" pos:column="13">Solution3</name> <type:modifier pos:line="3049" pos:column="23">*</type:modifier></type> <name pos:line="3049" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3050" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3050" pos:column="37">__RPC__in</name> <name pos:line="3050" pos:column="47">BSTR</name></type> <name pos:line="3050" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="3051" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3051" pos:column="33">__RPC__out</name> <name pos:line="3051" pos:column="44">void</name> <type:modifier pos:line="3051" pos:column="49">*</type:modifier></type><name pos:line="3051" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3053" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3053" pos:column="34">HRESULT</name></type> ( <name pos:line="3053" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3053" pos:column="62">*</type:modifier><name pos:line="3053" pos:column="63">AddFromTemplate</name> )<parameter_list pos:line="3053" pos:column="80">( 
            <param><decl><type><name pos:line="3054" pos:column="13">Solution3</name> <type:modifier pos:line="3054" pos:column="23">*</type:modifier></type> <name pos:line="3054" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3055" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3055" pos:column="37">__RPC__in</name> <name pos:line="3055" pos:column="47">BSTR</name></type> <name pos:line="3055" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="3056" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3056" pos:column="37">__RPC__in</name> <name pos:line="3056" pos:column="47">BSTR</name></type> <name pos:line="3056" pos:column="52">Destination</name></decl></param>,
            <comment type="block" pos:line="3057" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3057" pos:column="37">__RPC__in</name> <name pos:line="3057" pos:column="47">BSTR</name></type> <name pos:line="3057" pos:column="52">ProjectName</name></decl></param>,
            <comment type="block" pos:line="3058" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3058" pos:column="37">BOOLEAN</name></type> <name pos:line="3058" pos:column="45">Exclusive</name></decl></param>,
            <comment type="block" pos:line="3059" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3059" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3059" pos:column="54">Project</name> <type:modifier pos:line="3059" pos:column="62">*</type:modifier><type:modifier pos:line="3059" pos:column="63">*</type:modifier></type><name pos:line="3059" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3061" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3061" pos:column="34">HRESULT</name></type> ( <name pos:line="3061" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3061" pos:column="62">*</type:modifier><name pos:line="3061" pos:column="63">AddFromFile</name> )<parameter_list pos:line="3061" pos:column="76">( 
            <param><decl><type><name pos:line="3062" pos:column="13">Solution3</name> <type:modifier pos:line="3062" pos:column="23">*</type:modifier></type> <name pos:line="3062" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3063" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3063" pos:column="37">__RPC__in</name> <name pos:line="3063" pos:column="47">BSTR</name></type> <name pos:line="3063" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="3064" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3064" pos:column="37">BOOLEAN</name></type> <name pos:line="3064" pos:column="45">Exclusive</name></decl></param>,
            <comment type="block" pos:line="3065" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3065" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3065" pos:column="54">Project</name> <type:modifier pos:line="3065" pos:column="62">*</type:modifier><type:modifier pos:line="3065" pos:column="63">*</type:modifier></type><name pos:line="3065" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3067" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3067" pos:column="34">HRESULT</name></type> ( <name pos:line="3067" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3067" pos:column="62">*</type:modifier><name pos:line="3067" pos:column="63">Open</name> )<parameter_list pos:line="3067" pos:column="69">( 
            <param><decl><type><name pos:line="3068" pos:column="13">Solution3</name> <type:modifier pos:line="3068" pos:column="23">*</type:modifier></type> <name pos:line="3068" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3069" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3069" pos:column="37">__RPC__in</name> <name pos:line="3069" pos:column="47">BSTR</name></type> <name pos:line="3069" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="3070" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3070" pos:column="33">__RPC__out</name> <name pos:line="3070" pos:column="44">void</name> <type:modifier pos:line="3070" pos:column="49">*</type:modifier></type><name pos:line="3070" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3072" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3072" pos:column="34">HRESULT</name></type> ( <name pos:line="3072" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3072" pos:column="62">*</type:modifier><name pos:line="3072" pos:column="63">Close</name> )<parameter_list pos:line="3072" pos:column="70">( 
            <param><decl><type><name pos:line="3073" pos:column="13">Solution3</name> <type:modifier pos:line="3073" pos:column="23">*</type:modifier></type> <name pos:line="3073" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3074" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3074" pos:column="37">BOOLEAN</name></type> <name pos:line="3074" pos:column="45">SaveFirst</name></decl></param>,
            <comment type="block" pos:line="3075" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3075" pos:column="33">__RPC__out</name> <name pos:line="3075" pos:column="44">void</name> <type:modifier pos:line="3075" pos:column="49">*</type:modifier></type><name pos:line="3075" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3077" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3077" pos:column="43">HRESULT</name></type> ( <name pos:line="3077" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3077" pos:column="71">*</type:modifier><name pos:line="3077" pos:column="72">get_Properties</name> )<parameter_list pos:line="3077" pos:column="88">( 
            <param><decl><type><name pos:line="3078" pos:column="13">Solution3</name> <type:modifier pos:line="3078" pos:column="23">*</type:modifier></type> <name pos:line="3078" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3079" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3079" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3079" pos:column="54">Properties</name> <type:modifier pos:line="3079" pos:column="65">*</type:modifier><type:modifier pos:line="3079" pos:column="66">*</type:modifier></type><name pos:line="3079" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3081" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="3081" pos:column="51">HRESULT</name></type> ( <name pos:line="3081" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="3081" pos:column="79">*</type:modifier><name pos:line="3081" pos:column="80">get_IsDirty</name> )<parameter_list pos:line="3081" pos:column="93">( 
            <param><decl><type><name pos:line="3082" pos:column="13">Solution3</name> <type:modifier pos:line="3082" pos:column="23">*</type:modifier></type> <name pos:line="3082" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3083" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3083" pos:column="33">__RPC__out</name> <name pos:line="3083" pos:column="44">BOOLEAN</name> <type:modifier pos:line="3083" pos:column="52">*</type:modifier></type><name pos:line="3083" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3085" pos:column="9">/* [id][propput][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="3085" pos:column="51">HRESULT</name></type> ( <name pos:line="3085" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="3085" pos:column="79">*</type:modifier><name pos:line="3085" pos:column="80">put_IsDirty</name> )<parameter_list pos:line="3085" pos:column="93">( 
            <param><decl><type><name pos:line="3086" pos:column="13">Solution3</name> <type:modifier pos:line="3086" pos:column="23">*</type:modifier></type> <name pos:line="3086" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3087" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3087" pos:column="37">BOOLEAN</name></type> <name pos:line="3087" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="3088" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3088" pos:column="33">__RPC__out</name> <name pos:line="3088" pos:column="44">void</name> <type:modifier pos:line="3088" pos:column="49">*</type:modifier></type><name pos:line="3088" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3090" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3090" pos:column="34">HRESULT</name></type> ( <name pos:line="3090" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3090" pos:column="62">*</type:modifier><name pos:line="3090" pos:column="63">Remove</name> )<parameter_list pos:line="3090" pos:column="71">( 
            <param><decl><type><name pos:line="3091" pos:column="13">Solution3</name> <type:modifier pos:line="3091" pos:column="23">*</type:modifier></type> <name pos:line="3091" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3092" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3092" pos:column="37">__RPC__in_opt</name> <name pos:line="3092" pos:column="51">Project</name> <type:modifier pos:line="3092" pos:column="59">*</type:modifier></type><name pos:line="3092" pos:column="60">proj</name></decl></param>,
            <comment type="block" pos:line="3093" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3093" pos:column="33">__RPC__out</name> <name pos:line="3093" pos:column="44">void</name> <type:modifier pos:line="3093" pos:column="49">*</type:modifier></type><name pos:line="3093" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3095" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3095" pos:column="43">HRESULT</name></type> ( <name pos:line="3095" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3095" pos:column="71">*</type:modifier><name pos:line="3095" pos:column="72">get_TemplatePath</name> )<parameter_list pos:line="3095" pos:column="90">( 
            <param><decl><type><name pos:line="3096" pos:column="13">Solution3</name> <type:modifier pos:line="3096" pos:column="23">*</type:modifier></type> <name pos:line="3096" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3097" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3097" pos:column="37">__RPC__in</name> <name pos:line="3097" pos:column="47">BSTR</name></type> <name pos:line="3097" pos:column="52">ProjectType</name></decl></param>,
            <comment type="block" pos:line="3098" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3098" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3098" pos:column="54">BSTR</name> <type:modifier pos:line="3098" pos:column="59">*</type:modifier></type><name pos:line="3098" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3100" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3100" pos:column="43">HRESULT</name></type> ( <name pos:line="3100" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3100" pos:column="71">*</type:modifier><name pos:line="3100" pos:column="72">get_FullName</name> )<parameter_list pos:line="3100" pos:column="86">( 
            <param><decl><type><name pos:line="3101" pos:column="13">Solution3</name> <type:modifier pos:line="3101" pos:column="23">*</type:modifier></type> <name pos:line="3101" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3102" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3102" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3102" pos:column="54">BSTR</name> <type:modifier pos:line="3102" pos:column="59">*</type:modifier></type><name pos:line="3102" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3104" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3104" pos:column="43">HRESULT</name></type> ( <name pos:line="3104" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3104" pos:column="71">*</type:modifier><name pos:line="3104" pos:column="72">get_Saved</name> )<parameter_list pos:line="3104" pos:column="83">( 
            <param><decl><type><name pos:line="3105" pos:column="13">Solution3</name> <type:modifier pos:line="3105" pos:column="23">*</type:modifier></type> <name pos:line="3105" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3106" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3106" pos:column="33">__RPC__out</name> <name pos:line="3106" pos:column="44">BOOLEAN</name> <type:modifier pos:line="3106" pos:column="52">*</type:modifier></type><name pos:line="3106" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3108" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="3108" pos:column="43">HRESULT</name></type> ( <name pos:line="3108" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3108" pos:column="71">*</type:modifier><name pos:line="3108" pos:column="72">put_Saved</name> )<parameter_list pos:line="3108" pos:column="83">( 
            <param><decl><type><name pos:line="3109" pos:column="13">Solution3</name> <type:modifier pos:line="3109" pos:column="23">*</type:modifier></type> <name pos:line="3109" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3110" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3110" pos:column="37">BOOLEAN</name></type> <name pos:line="3110" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="3111" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3111" pos:column="33">__RPC__out</name> <name pos:line="3111" pos:column="44">void</name> <type:modifier pos:line="3111" pos:column="49">*</type:modifier></type><name pos:line="3111" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3113" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3113" pos:column="43">HRESULT</name></type> ( <name pos:line="3113" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3113" pos:column="71">*</type:modifier><name pos:line="3113" pos:column="72">get_Globals</name> )<parameter_list pos:line="3113" pos:column="85">( 
            <param><decl><type><name pos:line="3114" pos:column="13">Solution3</name> <type:modifier pos:line="3114" pos:column="23">*</type:modifier></type> <name pos:line="3114" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3115" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3115" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3115" pos:column="54">Globals</name> <type:modifier pos:line="3115" pos:column="62">*</type:modifier><type:modifier pos:line="3115" pos:column="63">*</type:modifier></type><name pos:line="3115" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3117" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3117" pos:column="43">HRESULT</name></type> ( <name pos:line="3117" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3117" pos:column="71">*</type:modifier><name pos:line="3117" pos:column="72">get_AddIns</name> )<parameter_list pos:line="3117" pos:column="84">( 
            <param><decl><type><name pos:line="3118" pos:column="13">Solution3</name> <type:modifier pos:line="3118" pos:column="23">*</type:modifier></type> <name pos:line="3118" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3119" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3119" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3119" pos:column="54">AddIns</name> <type:modifier pos:line="3119" pos:column="61">*</type:modifier><type:modifier pos:line="3119" pos:column="62">*</type:modifier></type><name pos:line="3119" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3121" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3121" pos:column="43">HRESULT</name></type> ( <name pos:line="3121" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3121" pos:column="71">*</type:modifier><name pos:line="3121" pos:column="72">get_Extender</name> )<parameter_list pos:line="3121" pos:column="86">( 
            <param><decl><type><name pos:line="3122" pos:column="13">Solution3</name> <type:modifier pos:line="3122" pos:column="23">*</type:modifier></type> <name pos:line="3122" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3123" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3123" pos:column="37">__RPC__in</name> <name pos:line="3123" pos:column="47">BSTR</name></type> <name pos:line="3123" pos:column="52">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="3124" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3124" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3124" pos:column="54">IDispatch</name> <type:modifier pos:line="3124" pos:column="64">*</type:modifier><type:modifier pos:line="3124" pos:column="65">*</type:modifier></type><name pos:line="3124" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3126" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3126" pos:column="43">HRESULT</name></type> ( <name pos:line="3126" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3126" pos:column="71">*</type:modifier><name pos:line="3126" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="3126" pos:column="91">( 
            <param><decl><type><name pos:line="3127" pos:column="13">Solution3</name> <type:modifier pos:line="3127" pos:column="23">*</type:modifier></type> <name pos:line="3127" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3128" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3128" pos:column="33">__RPC__out</name> <name pos:line="3128" pos:column="44">VARIANT</name> <type:modifier pos:line="3128" pos:column="52">*</type:modifier></type><name pos:line="3128" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3130" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3130" pos:column="43">HRESULT</name></type> ( <name pos:line="3130" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3130" pos:column="71">*</type:modifier><name pos:line="3130" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="3130" pos:column="91">( 
            <param><decl><type><name pos:line="3131" pos:column="13">Solution3</name> <type:modifier pos:line="3131" pos:column="23">*</type:modifier></type> <name pos:line="3131" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3132" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3132" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3132" pos:column="54">BSTR</name> <type:modifier pos:line="3132" pos:column="59">*</type:modifier></type><name pos:line="3132" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3134" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3134" pos:column="43">HRESULT</name></type> ( <name pos:line="3134" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3134" pos:column="71">*</type:modifier><name pos:line="3134" pos:column="72">get_IsOpen</name> )<parameter_list pos:line="3134" pos:column="84">( 
            <param><decl><type><name pos:line="3135" pos:column="13">Solution3</name> <type:modifier pos:line="3135" pos:column="23">*</type:modifier></type> <name pos:line="3135" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3136" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3136" pos:column="33">__RPC__out</name> <name pos:line="3136" pos:column="44">BOOLEAN</name> <type:modifier pos:line="3136" pos:column="52">*</type:modifier></type><name pos:line="3136" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3138" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3138" pos:column="43">HRESULT</name></type> ( <name pos:line="3138" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3138" pos:column="71">*</type:modifier><name pos:line="3138" pos:column="72">get_SolutionBuild</name> )<parameter_list pos:line="3138" pos:column="91">( 
            <param><decl><type><name pos:line="3139" pos:column="13">Solution3</name> <type:modifier pos:line="3139" pos:column="23">*</type:modifier></type> <name pos:line="3139" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3140" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3140" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3140" pos:column="54">SolutionBuild</name> <type:modifier pos:line="3140" pos:column="68">*</type:modifier><type:modifier pos:line="3140" pos:column="69">*</type:modifier></type><name pos:line="3140" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3142" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3142" pos:column="34">HRESULT</name></type> ( <name pos:line="3142" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3142" pos:column="62">*</type:modifier><name pos:line="3142" pos:column="63">Create</name> )<parameter_list pos:line="3142" pos:column="71">( 
            <param><decl><type><name pos:line="3143" pos:column="13">Solution3</name> <type:modifier pos:line="3143" pos:column="23">*</type:modifier></type> <name pos:line="3143" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3144" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3144" pos:column="33">__RPC__in</name> <name pos:line="3144" pos:column="43">BSTR</name></type> <name pos:line="3144" pos:column="48">Destination</name></decl></param>,
            <comment type="block" pos:line="3145" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3145" pos:column="33">__RPC__in</name> <name pos:line="3145" pos:column="43">BSTR</name></type> <name pos:line="3145" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3146" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3146" pos:column="33">__RPC__out</name> <name pos:line="3146" pos:column="44">void</name> <type:modifier pos:line="3146" pos:column="49">*</type:modifier></type><name pos:line="3146" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3148" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3148" pos:column="43">HRESULT</name></type> ( <name pos:line="3148" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3148" pos:column="71">*</type:modifier><name pos:line="3148" pos:column="72">get_Projects</name> )<parameter_list pos:line="3148" pos:column="86">( 
            <param><decl><type><name pos:line="3149" pos:column="13">Solution3</name> <type:modifier pos:line="3149" pos:column="23">*</type:modifier></type> <name pos:line="3149" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3150" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3150" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3150" pos:column="54">Projects</name> <type:modifier pos:line="3150" pos:column="63">*</type:modifier><type:modifier pos:line="3150" pos:column="64">*</type:modifier></type><name pos:line="3150" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3152" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3152" pos:column="34">HRESULT</name></type> ( <name pos:line="3152" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3152" pos:column="62">*</type:modifier><name pos:line="3152" pos:column="63">FindProjectItem</name> )<parameter_list pos:line="3152" pos:column="80">( 
            <param><decl><type><name pos:line="3153" pos:column="13">Solution3</name> <type:modifier pos:line="3153" pos:column="23">*</type:modifier></type> <name pos:line="3153" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3154" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3154" pos:column="33">__RPC__in</name> <name pos:line="3154" pos:column="43">BSTR</name></type> <name pos:line="3154" pos:column="48">FileName</name></decl></param>,
            <comment type="block" pos:line="3155" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3155" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3155" pos:column="54">ProjectItem</name> <type:modifier pos:line="3155" pos:column="66">*</type:modifier><type:modifier pos:line="3155" pos:column="67">*</type:modifier></type><name pos:line="3155" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3157" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3157" pos:column="34">HRESULT</name></type> ( <name pos:line="3157" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3157" pos:column="62">*</type:modifier><name pos:line="3157" pos:column="63">ProjectItemsTemplatePath</name> )<parameter_list pos:line="3157" pos:column="89">( 
            <param><decl><type><name pos:line="3158" pos:column="13">Solution3</name> <type:modifier pos:line="3158" pos:column="23">*</type:modifier></type> <name pos:line="3158" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3159" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3159" pos:column="33">__RPC__in</name> <name pos:line="3159" pos:column="43">BSTR</name></type> <name pos:line="3159" pos:column="48">ProjectKind</name></decl></param>,
            <comment type="block" pos:line="3160" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3160" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3160" pos:column="54">BSTR</name> <type:modifier pos:line="3160" pos:column="59">*</type:modifier></type><name pos:line="3160" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3162" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3162" pos:column="34">HRESULT</name></type> ( <name pos:line="3162" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3162" pos:column="62">*</type:modifier><name pos:line="3162" pos:column="63">AddSolutionFolder</name> )<parameter_list pos:line="3162" pos:column="82">( 
            <param><decl><type><name pos:line="3163" pos:column="13">Solution3</name> <type:modifier pos:line="3163" pos:column="23">*</type:modifier></type> <name pos:line="3163" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3164" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3164" pos:column="33">__RPC__in</name> <name pos:line="3164" pos:column="43">BSTR</name></type> <name pos:line="3164" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3165" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3165" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3165" pos:column="54">Project</name> <type:modifier pos:line="3165" pos:column="62">*</type:modifier><type:modifier pos:line="3165" pos:column="63">*</type:modifier></type><name pos:line="3165" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3167" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3167" pos:column="34">HRESULT</name></type> ( <name pos:line="3167" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3167" pos:column="62">*</type:modifier><name pos:line="3167" pos:column="63">GetProjectTemplate</name> )<parameter_list pos:line="3167" pos:column="83">( 
            <param><decl><type><name pos:line="3168" pos:column="13">Solution3</name> <type:modifier pos:line="3168" pos:column="23">*</type:modifier></type> <name pos:line="3168" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3169" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3169" pos:column="33">__RPC__in</name> <name pos:line="3169" pos:column="43">BSTR</name></type> <name pos:line="3169" pos:column="48">TemplateName</name></decl></param>,
            <comment type="block" pos:line="3170" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3170" pos:column="33">__RPC__in</name> <name pos:line="3170" pos:column="43">BSTR</name></type> <name pos:line="3170" pos:column="48">Language</name></decl></param>,
            <comment type="block" pos:line="3171" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3171" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3171" pos:column="54">BSTR</name> <type:modifier pos:line="3171" pos:column="59">*</type:modifier></type><name pos:line="3171" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3173" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3173" pos:column="34">HRESULT</name></type> ( <name pos:line="3173" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3173" pos:column="62">*</type:modifier><name pos:line="3173" pos:column="63">GetProjectItemTemplate</name> )<parameter_list pos:line="3173" pos:column="87">( 
            <param><decl><type><name pos:line="3174" pos:column="13">Solution3</name> <type:modifier pos:line="3174" pos:column="23">*</type:modifier></type> <name pos:line="3174" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="3175" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3175" pos:column="33">__RPC__in</name> <name pos:line="3175" pos:column="43">BSTR</name></type> <name pos:line="3175" pos:column="48">TemplateName</name></decl></param>,
            <comment type="block" pos:line="3176" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3176" pos:column="33">__RPC__in</name> <name pos:line="3176" pos:column="43">BSTR</name></type> <name pos:line="3176" pos:column="48">Language</name></decl></param>,
            <comment type="block" pos:line="3177" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3177" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3177" pos:column="54">BSTR</name> <type:modifier pos:line="3177" pos:column="59">*</type:modifier></type><name pos:line="3177" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3179" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="3179" pos:column="20">HRESULT</name></type> ( <name pos:line="3179" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="3179" pos:column="48">*</type:modifier><name pos:line="3179" pos:column="49">GetProjectItemTemplates</name> )<parameter_list pos:line="3179" pos:column="74">( 
            <param><decl><type><name pos:line="3180" pos:column="13">Solution3</name> <type:modifier pos:line="3180" pos:column="23">*</type:modifier></type> <name pos:line="3180" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="3181" pos:column="13">__RPC__in</name> <name pos:line="3181" pos:column="23">BSTR</name></type> <name pos:line="3181" pos:column="28">Language</name></decl></param>,
            <param><decl><type><name pos:line="3182" pos:column="13">__RPC__in</name> <name pos:line="3182" pos:column="23">BSTR</name></type> <name pos:line="3182" pos:column="28">CustomDataSignature</name></decl></param>,
            <comment type="block" pos:line="3183" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3183" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3183" pos:column="54">Templates</name> <type:modifier pos:line="3183" pos:column="64">*</type:modifier><type:modifier pos:line="3183" pos:column="65">*</type:modifier></type><name pos:line="3183" pos:column="66">ppTemplates</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3185" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3186" pos:column="7">Solution3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3188" pos:column="5">interface</name></type> <name pos:line="3188" pos:column="15">Solution3</name>
    <argument_list pos:line="3189" pos:column="5">{
        <argument><expr><name pos:line="3190" pos:column="9">CONST_VTBL</name> struct <name pos:line="3190" pos:column="27">Solution3Vtbl</name> <op:operator pos:line="3190" pos:column="41">*</op:operator><name pos:line="3190" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3195" pos:column="1">#<cpp:directive pos:line="3195" pos:column="2">ifdef</cpp:directive> <name pos:line="3195" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3198" pos:column="1">#<cpp:directive pos:line="3198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3198" pos:column="9">Solution3_QueryInterface</name><parameter_list pos:line="3198" pos:column="33">(<param><type><name pos:line="3198" pos:column="34">This</name></type></param>,<param><type><name pos:line="3198" pos:column="39">riid</name></type></param>,<param><type><name pos:line="3198" pos:column="44">ppvObj</name></type></param>,<param><type><name pos:line="3198" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3199" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3201" pos:column="1">#<cpp:directive pos:line="3201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3201" pos:column="9">Solution3_AddRef</name><parameter_list pos:line="3201" pos:column="25">(<param><type><name pos:line="3201" pos:column="26">This</name></type></param>,<param><type><name pos:line="3201" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3202" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3204" pos:column="1">#<cpp:directive pos:line="3204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3204" pos:column="9">Solution3_Release</name><parameter_list pos:line="3204" pos:column="26">(<param><type><name pos:line="3204" pos:column="27">This</name></type></param>,<param><type><name pos:line="3204" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3205" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3207" pos:column="1">#<cpp:directive pos:line="3207" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3207" pos:column="9">Solution3_GetTypeInfoCount</name><parameter_list pos:line="3207" pos:column="35">(<param><type><name pos:line="3207" pos:column="36">This</name></type></param>,<param><type><name pos:line="3207" pos:column="41">pctinfo</name></type></param>,<param><type><name pos:line="3207" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3208" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3210" pos:column="1">#<cpp:directive pos:line="3210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3210" pos:column="9">Solution3_GetTypeInfo</name><parameter_list pos:line="3210" pos:column="30">(<param><type><name pos:line="3210" pos:column="31">This</name></type></param>,<param><type><name pos:line="3210" pos:column="36">itinfo</name></type></param>,<param><type><name pos:line="3210" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="3210" pos:column="48">pptinfo</name></type></param>,<param><type><name pos:line="3210" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3211" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3213" pos:column="1">#<cpp:directive pos:line="3213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3213" pos:column="9">Solution3_GetIDsOfNames</name><parameter_list pos:line="3213" pos:column="32">(<param><type><name pos:line="3213" pos:column="33">This</name></type></param>,<param><type><name pos:line="3213" pos:column="38">riid</name></type></param>,<param><type><name pos:line="3213" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="3213" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="3213" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="3213" pos:column="65">rgdispid</name></type></param>,<param><type><name pos:line="3213" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3214" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3216" pos:column="1">#<cpp:directive pos:line="3216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3216" pos:column="9">Solution3_Invoke</name><parameter_list pos:line="3216" pos:column="25">(<param><type><name pos:line="3216" pos:column="26">This</name></type></param>,<param><type><name pos:line="3216" pos:column="31">dispidMember</name></type></param>,<param><type><name pos:line="3216" pos:column="44">riid</name></type></param>,<param><type><name pos:line="3216" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="3216" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="3216" pos:column="61">pdispparams</name></type></param>,<param><type><name pos:line="3216" pos:column="73">pvarResult</name></type></param>,<param><type><name pos:line="3216" pos:column="84">pexcepinfo</name></type></param>,<param><type><name pos:line="3216" pos:column="95">puArgErr</name></type></param>,<param><type><name pos:line="3216" pos:column="104">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3217" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3219" pos:column="1">#<cpp:directive pos:line="3219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3219" pos:column="9">Solution3_Item</name><parameter_list pos:line="3219" pos:column="23">(<param><type><name pos:line="3219" pos:column="24">This</name></type></param>,<param><type><name pos:line="3219" pos:column="29">index</name></type></param>,<param><type><name pos:line="3219" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3220" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,index,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3222" pos:column="1">#<cpp:directive pos:line="3222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3222" pos:column="9">Solution3__NewEnum</name><parameter_list pos:line="3222" pos:column="27">(<param><type><name pos:line="3222" pos:column="28">This</name></type></param>,<param><type><name pos:line="3222" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3223" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3225" pos:column="1">#<cpp:directive pos:line="3225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3225" pos:column="9">Solution3_get_DTE</name><parameter_list pos:line="3225" pos:column="26">(<param><type><name pos:line="3225" pos:column="27">This</name></type></param>,<param><type><name pos:line="3225" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3226" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3228" pos:column="1">#<cpp:directive pos:line="3228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3228" pos:column="9">Solution3_get_Parent</name><parameter_list pos:line="3228" pos:column="29">(<param><type><name pos:line="3228" pos:column="30">This</name></type></param>,<param><type><name pos:line="3228" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3229" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3231" pos:column="1">#<cpp:directive pos:line="3231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3231" pos:column="9">Solution3_get_Count</name><parameter_list pos:line="3231" pos:column="28">(<param><type><name pos:line="3231" pos:column="29">This</name></type></param>,<param><type><name pos:line="3231" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3232" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3234" pos:column="1">#<cpp:directive pos:line="3234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3234" pos:column="9">Solution3_get_FileName</name><parameter_list pos:line="3234" pos:column="31">(<param><type><name pos:line="3234" pos:column="32">This</name></type></param>,<param><type><name pos:line="3234" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3235" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FileName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3237" pos:column="1">#<cpp:directive pos:line="3237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3237" pos:column="9">Solution3_SaveAs</name><parameter_list pos:line="3237" pos:column="25">(<param><type><name pos:line="3237" pos:column="26">This</name></type></param>,<param><type><name pos:line="3237" pos:column="31">FileName</name></type></param>,<param><type><name pos:line="3237" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3238" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveAs(This,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3240" pos:column="1">#<cpp:directive pos:line="3240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3240" pos:column="9">Solution3_AddFromTemplate</name><parameter_list pos:line="3240" pos:column="34">(<param><type><name pos:line="3240" pos:column="35">This</name></type></param>,<param><type><name pos:line="3240" pos:column="40">FileName</name></type></param>,<param><type><name pos:line="3240" pos:column="49">Destination</name></type></param>,<param><type><name pos:line="3240" pos:column="61">ProjectName</name></type></param>,<param><type><name pos:line="3240" pos:column="73">Exclusive</name></type></param>,<param><type><name pos:line="3240" pos:column="83">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3241" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3243" pos:column="1">#<cpp:directive pos:line="3243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3243" pos:column="9">Solution3_AddFromFile</name><parameter_list pos:line="3243" pos:column="30">(<param><type><name pos:line="3243" pos:column="31">This</name></type></param>,<param><type><name pos:line="3243" pos:column="36">FileName</name></type></param>,<param><type><name pos:line="3243" pos:column="45">Exclusive</name></type></param>,<param><type><name pos:line="3243" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3244" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromFile(This,FileName,Exclusive,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3246" pos:column="1">#<cpp:directive pos:line="3246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3246" pos:column="9">Solution3_Open</name><parameter_list pos:line="3246" pos:column="23">(<param><type><name pos:line="3246" pos:column="24">This</name></type></param>,<param><type><name pos:line="3246" pos:column="29">FileName</name></type></param>,<param><type><name pos:line="3246" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3247" pos:column="5">( (This)-&gt;lpVtbl -&gt; Open(This,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3249" pos:column="1">#<cpp:directive pos:line="3249" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3249" pos:column="9">Solution3_Close</name><parameter_list pos:line="3249" pos:column="24">(<param><type><name pos:line="3249" pos:column="25">This</name></type></param>,<param><type><name pos:line="3249" pos:column="30">SaveFirst</name></type></param>,<param><type><name pos:line="3249" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3250" pos:column="5">( (This)-&gt;lpVtbl -&gt; Close(This,SaveFirst,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3252" pos:column="1">#<cpp:directive pos:line="3252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3252" pos:column="9">Solution3_get_Properties</name><parameter_list pos:line="3252" pos:column="33">(<param><type><name pos:line="3252" pos:column="34">This</name></type></param>,<param><type><name pos:line="3252" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3253" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Properties(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3255" pos:column="1">#<cpp:directive pos:line="3255" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3255" pos:column="9">Solution3_get_IsDirty</name><parameter_list pos:line="3255" pos:column="30">(<param><type><name pos:line="3255" pos:column="31">This</name></type></param>,<param><type><name pos:line="3255" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3256" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDirty(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3258" pos:column="1">#<cpp:directive pos:line="3258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3258" pos:column="9">Solution3_put_IsDirty</name><parameter_list pos:line="3258" pos:column="30">(<param><type><name pos:line="3258" pos:column="31">This</name></type></param>,<param><type><name pos:line="3258" pos:column="36">noname</name></type></param>,<param><type><name pos:line="3258" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3259" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsDirty(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3261" pos:column="1">#<cpp:directive pos:line="3261" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3261" pos:column="9">Solution3_Remove</name><parameter_list pos:line="3261" pos:column="25">(<param><type><name pos:line="3261" pos:column="26">This</name></type></param>,<param><type><name pos:line="3261" pos:column="31">proj</name></type></param>,<param><type><name pos:line="3261" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3262" pos:column="5">( (This)-&gt;lpVtbl -&gt; Remove(This,proj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3264" pos:column="1">#<cpp:directive pos:line="3264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3264" pos:column="9">Solution3_get_TemplatePath</name><parameter_list pos:line="3264" pos:column="35">(<param><type><name pos:line="3264" pos:column="36">This</name></type></param>,<param><type><name pos:line="3264" pos:column="41">ProjectType</name></type></param>,<param><type><name pos:line="3264" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3265" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TemplatePath(This,ProjectType,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3267" pos:column="1">#<cpp:directive pos:line="3267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3267" pos:column="9">Solution3_get_FullName</name><parameter_list pos:line="3267" pos:column="31">(<param><type><name pos:line="3267" pos:column="32">This</name></type></param>,<param><type><name pos:line="3267" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3268" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3270" pos:column="1">#<cpp:directive pos:line="3270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3270" pos:column="9">Solution3_get_Saved</name><parameter_list pos:line="3270" pos:column="28">(<param><type><name pos:line="3270" pos:column="29">This</name></type></param>,<param><type><name pos:line="3270" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3271" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Saved(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3273" pos:column="1">#<cpp:directive pos:line="3273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3273" pos:column="9">Solution3_put_Saved</name><parameter_list pos:line="3273" pos:column="28">(<param><type><name pos:line="3273" pos:column="29">This</name></type></param>,<param><type><name pos:line="3273" pos:column="34">noname</name></type></param>,<param><type><name pos:line="3273" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3274" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Saved(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3276" pos:column="1">#<cpp:directive pos:line="3276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3276" pos:column="9">Solution3_get_Globals</name><parameter_list pos:line="3276" pos:column="30">(<param><type><name pos:line="3276" pos:column="31">This</name></type></param>,<param><type><name pos:line="3276" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3277" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Globals(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3279" pos:column="1">#<cpp:directive pos:line="3279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3279" pos:column="9">Solution3_get_AddIns</name><parameter_list pos:line="3279" pos:column="29">(<param><type><name pos:line="3279" pos:column="30">This</name></type></param>,<param><type><name pos:line="3279" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3280" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AddIns(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3282" pos:column="1">#<cpp:directive pos:line="3282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3282" pos:column="9">Solution3_get_Extender</name><parameter_list pos:line="3282" pos:column="31">(<param><type><name pos:line="3282" pos:column="32">This</name></type></param>,<param><type><name pos:line="3282" pos:column="37">ExtenderName</name></type></param>,<param><type><name pos:line="3282" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3283" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3285" pos:column="1">#<cpp:directive pos:line="3285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3285" pos:column="9">Solution3_get_ExtenderNames</name><parameter_list pos:line="3285" pos:column="36">(<param><type><name pos:line="3285" pos:column="37">This</name></type></param>,<param><type><name pos:line="3285" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3286" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3288" pos:column="1">#<cpp:directive pos:line="3288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3288" pos:column="9">Solution3_get_ExtenderCATID</name><parameter_list pos:line="3288" pos:column="36">(<param><type><name pos:line="3288" pos:column="37">This</name></type></param>,<param><type><name pos:line="3288" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3289" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3291" pos:column="1">#<cpp:directive pos:line="3291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3291" pos:column="9">Solution3_get_IsOpen</name><parameter_list pos:line="3291" pos:column="29">(<param><type><name pos:line="3291" pos:column="30">This</name></type></param>,<param><type><name pos:line="3291" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3292" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsOpen(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3294" pos:column="1">#<cpp:directive pos:line="3294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3294" pos:column="9">Solution3_get_SolutionBuild</name><parameter_list pos:line="3294" pos:column="36">(<param><type><name pos:line="3294" pos:column="37">This</name></type></param>,<param><type><name pos:line="3294" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3295" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionBuild(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3297" pos:column="1">#<cpp:directive pos:line="3297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3297" pos:column="9">Solution3_Create</name><parameter_list pos:line="3297" pos:column="25">(<param><type><name pos:line="3297" pos:column="26">This</name></type></param>,<param><type><name pos:line="3297" pos:column="31">Destination</name></type></param>,<param><type><name pos:line="3297" pos:column="43">Name</name></type></param>,<param><type><name pos:line="3297" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3298" pos:column="5">( (This)-&gt;lpVtbl -&gt; Create(This,Destination,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3300" pos:column="1">#<cpp:directive pos:line="3300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3300" pos:column="9">Solution3_get_Projects</name><parameter_list pos:line="3300" pos:column="31">(<param><type><name pos:line="3300" pos:column="32">This</name></type></param>,<param><type><name pos:line="3300" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3301" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Projects(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3303" pos:column="1">#<cpp:directive pos:line="3303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3303" pos:column="9">Solution3_FindProjectItem</name><parameter_list pos:line="3303" pos:column="34">(<param><type><name pos:line="3303" pos:column="35">This</name></type></param>,<param><type><name pos:line="3303" pos:column="40">FileName</name></type></param>,<param><type><name pos:line="3303" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3304" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindProjectItem(This,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3306" pos:column="1">#<cpp:directive pos:line="3306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3306" pos:column="9">Solution3_ProjectItemsTemplatePath</name><parameter_list pos:line="3306" pos:column="43">(<param><type><name pos:line="3306" pos:column="44">This</name></type></param>,<param><type><name pos:line="3306" pos:column="49">ProjectKind</name></type></param>,<param><type><name pos:line="3306" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3307" pos:column="5">( (This)-&gt;lpVtbl -&gt; ProjectItemsTemplatePath(This,ProjectKind,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3309" pos:column="1">#<cpp:directive pos:line="3309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3309" pos:column="9">Solution3_AddSolutionFolder</name><parameter_list pos:line="3309" pos:column="36">(<param><type><name pos:line="3309" pos:column="37">This</name></type></param>,<param><type><name pos:line="3309" pos:column="42">Name</name></type></param>,<param><type><name pos:line="3309" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3310" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddSolutionFolder(This,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3312" pos:column="1">#<cpp:directive pos:line="3312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3312" pos:column="9">Solution3_GetProjectTemplate</name><parameter_list pos:line="3312" pos:column="37">(<param><type><name pos:line="3312" pos:column="38">This</name></type></param>,<param><type><name pos:line="3312" pos:column="43">TemplateName</name></type></param>,<param><type><name pos:line="3312" pos:column="56">Language</name></type></param>,<param><type><name pos:line="3312" pos:column="65">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3313" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProjectTemplate(This,TemplateName,Language,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3315" pos:column="1">#<cpp:directive pos:line="3315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3315" pos:column="9">Solution3_GetProjectItemTemplate</name><parameter_list pos:line="3315" pos:column="41">(<param><type><name pos:line="3315" pos:column="42">This</name></type></param>,<param><type><name pos:line="3315" pos:column="47">TemplateName</name></type></param>,<param><type><name pos:line="3315" pos:column="60">Language</name></type></param>,<param><type><name pos:line="3315" pos:column="69">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3316" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProjectItemTemplate(This,TemplateName,Language,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="3319" pos:column="1">#<cpp:directive pos:line="3319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3319" pos:column="9">Solution3_GetProjectItemTemplates</name><parameter_list pos:line="3319" pos:column="42">(<param><type><name pos:line="3319" pos:column="43">This</name></type></param>,<param><type><name pos:line="3319" pos:column="48">Language</name></type></param>,<param><type><name pos:line="3319" pos:column="57">CustomDataSignature</name></type></param>,<param><type><name pos:line="3319" pos:column="77">ppTemplates</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3320" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProjectItemTemplates(This,Language,CustomDataSignature,ppTemplates) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3322" pos:column="1">#<cpp:directive pos:line="3322" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3322" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3325" pos:column="1">#<cpp:directive pos:line="3325" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3325" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3330" pos:column="1">#<cpp:directive pos:line="3330" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3330" pos:column="9">/* __Solution3_INTERFACE_DEFINED__ */</comment>

<cpp:endif pos:line="3332" pos:column="1">#<cpp:directive pos:line="3332" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3332" pos:column="8">/* __EnvDTE90_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="3334" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="3336" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="3338" pos:column="1">#<cpp:directive pos:line="3338" pos:column="2">ifdef</cpp:directive> <name pos:line="3338" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="3340" pos:column="1">#<cpp:directive pos:line="3340" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="3342" pos:column="1">#<cpp:directive pos:line="3342" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
