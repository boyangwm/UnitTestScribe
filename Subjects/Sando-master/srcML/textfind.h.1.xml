<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\textfind.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for textfind.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>


<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef</cpp:directive> <name pos:line="38" pos:column="9">__textfind_h__</name></cpp:ifndef>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">__textfind_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if</cpp:directive> <expr><call><name pos:line="41" pos:column="5">defined</name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="41" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="41" pos:column="26">(</op:operator><name pos:line="41" pos:column="27">_MSC_VER</name> <op:operator pos:line="41" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="41" pos:column="39">1020</lit:literal><op:operator pos:line="41" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="45" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef</cpp:directive> <name pos:line="47" pos:column="9">__IVsTextSpanSet_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">__IVsTextSpanSet_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="49" pos:column="1">typedef <type><name pos:line="49" pos:column="9">interface</name> <name pos:line="49" pos:column="19">IVsTextSpanSet</name></type> <name pos:line="49" pos:column="34">IVsTextSpanSet</name>;</typedef>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="50" pos:column="9">/* __IVsTextSpanSet_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifndef</cpp:directive> <name pos:line="53" pos:column="9">__IVsFinder_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">__IVsFinder_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="55" pos:column="1">typedef <type><name pos:line="55" pos:column="9">interface</name> <name pos:line="55" pos:column="19">IVsFinder</name></type> <name pos:line="55" pos:column="29">IVsFinder</name>;</typedef>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="56" pos:column="9">/* __IVsFinder_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifndef</cpp:directive> <name pos:line="59" pos:column="9">__IVsFindHelper_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">__IVsFindHelper_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="61" pos:column="1">typedef <type><name pos:line="61" pos:column="9">interface</name> <name pos:line="61" pos:column="19">IVsFindHelper</name></type> <name pos:line="61" pos:column="33">IVsFindHelper</name>;</typedef>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="62" pos:column="9">/* __IVsFindHelper_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifndef</cpp:directive> <name pos:line="65" pos:column="9">__IVsFindTarget_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="66" pos:column="9">__IVsFindTarget_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="67" pos:column="1">typedef <type><name pos:line="67" pos:column="9">interface</name> <name pos:line="67" pos:column="19">IVsFindTarget</name></type> <name pos:line="67" pos:column="33">IVsFindTarget</name>;</typedef>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="68" pos:column="9">/* __IVsFindTarget_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifndef</cpp:directive> <name pos:line="71" pos:column="9">__IVsFindScope_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="72" pos:column="9">__IVsFindScope_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="73" pos:column="1">typedef <type><name pos:line="73" pos:column="9">interface</name> <name pos:line="73" pos:column="19">IVsFindScope</name></type> <name pos:line="73" pos:column="32">IVsFindScope</name>;</typedef>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="74" pos:column="9">/* __IVsFindScope_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">ifndef</cpp:directive> <name pos:line="77" pos:column="9">__IVsRegisterFindScope_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="78" pos:column="9">__IVsRegisterFindScope_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="79" pos:column="1">typedef <type><name pos:line="79" pos:column="9">interface</name> <name pos:line="79" pos:column="19">IVsRegisterFindScope</name></type> <name pos:line="79" pos:column="40">IVsRegisterFindScope</name>;</typedef>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="80" pos:column="9">/* __IVsRegisterFindScope_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifndef</cpp:directive> <name pos:line="83" pos:column="9">__IVsHighlight_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">__IVsHighlight_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="85" pos:column="1">typedef <type><name pos:line="85" pos:column="9">interface</name> <name pos:line="85" pos:column="19">IVsHighlight</name></type> <name pos:line="85" pos:column="32">IVsHighlight</name>;</typedef>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="86" pos:column="9">/* __IVsHighlight_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifndef</cpp:directive> <name pos:line="89" pos:column="9">__IVsTextImageUtilities_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="90" pos:column="9">__IVsTextImageUtilities_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="91" pos:column="1">typedef <type><name pos:line="91" pos:column="9">interface</name> <name pos:line="91" pos:column="19">IVsTextImageUtilities</name></type> <name pos:line="91" pos:column="41">IVsTextImageUtilities</name>;</typedef>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="92" pos:column="9">/* __IVsTextImageUtilities_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifndef</cpp:directive> <name pos:line="95" pos:column="9">__VsFinder_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="96" pos:column="9">__VsFinder_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">ifdef</cpp:directive> <name pos:line="98" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="99" pos:column="1">typedef <type pos:line="99" pos:column="9">class <name pos:line="99" pos:column="15">VsFinder</name></type> <name pos:line="99" pos:column="24">VsFinder</name>;</typedef>
<cpp:else pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="101" pos:column="1">typedef <type pos:line="101" pos:column="9">struct <name pos:line="101" pos:column="16">VsFinder</name></type> <name pos:line="101" pos:column="25">VsFinder</name>;</typedef>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="102" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="104" pos:column="9">/* __VsFinder_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifndef</cpp:directive> <name pos:line="107" pos:column="9">__VsTextSpanSet_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">__VsTextSpanSet_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef</cpp:directive> <name pos:line="110" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="111" pos:column="1">typedef <type pos:line="111" pos:column="9">class <name pos:line="111" pos:column="15">VsTextSpanSet</name></type> <name pos:line="111" pos:column="29">VsTextSpanSet</name>;</typedef>
<cpp:else pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="113" pos:column="1">typedef <type pos:line="113" pos:column="9">struct <name pos:line="113" pos:column="16">VsTextSpanSet</name></type> <name pos:line="113" pos:column="30">VsTextSpanSet</name>;</typedef>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="114" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="116" pos:column="9">/* __VsTextSpanSet_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">ifndef</cpp:directive> <name pos:line="119" pos:column="9">__VsTextImage_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="120" pos:column="9">__VsTextImage_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">ifdef</cpp:directive> <name pos:line="122" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="123" pos:column="1">typedef <type pos:line="123" pos:column="9">class <name pos:line="123" pos:column="15">VsTextImage</name></type> <name pos:line="123" pos:column="27">VsTextImage</name>;</typedef>
<cpp:else pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="125" pos:column="1">typedef <type pos:line="125" pos:column="9">struct <name pos:line="125" pos:column="16">VsTextImage</name></type> <name pos:line="125" pos:column="28">VsTextImage</name>;</typedef>
<cpp:endif pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="126" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="128" pos:column="9">/* __VsTextImage_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="131" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="132" pos:column="10">"vsshell.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">ifdef</cpp:directive> <name pos:line="134" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="135" pos:column="1">extern <lit:literal type="string" pos:line="135" pos:column="8">"C"</lit:literal><block pos:line="135" pos:column="11">{
<cpp:endif pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="139" pos:column="1">/* interface __MIDL_itf_textfind_0000_0000 */</comment>
<comment type="block" pos:line="140" pos:column="1">/* [local] */</comment> 









<enum pos:line="150" pos:column="1">enum <name pos:line="150" pos:column="6">__VSFINDOPTIONS</name>
    <block pos:line="151" pos:column="5">{	<decl><name pos:line="151" pos:column="9">FR_OptionMask</name>	<init pos:line="151" pos:column="25">= <expr><lit:literal type="number" pos:line="151" pos:column="27">0xfff</lit:literal></expr></init></decl><op:operator pos:line="151" pos:column="32">,</op:operator>
	<decl><name pos:line="152" pos:column="9">FR_MatchCase</name>	<init pos:line="152" pos:column="25">= <expr><lit:literal type="number" pos:line="152" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="152" pos:column="30">,</op:operator>
	<decl><name pos:line="153" pos:column="9">FR_WholeWord</name>	<init pos:line="153" pos:column="25">= <expr><lit:literal type="number" pos:line="153" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="153" pos:column="30">,</op:operator>
	<decl><name pos:line="154" pos:column="9">FR_Hidden</name>	<init pos:line="154" pos:column="25">= <expr><lit:literal type="number" pos:line="154" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="154" pos:column="30">,</op:operator>
	<decl><name pos:line="155" pos:column="9">FR_Backwards</name>	<init pos:line="155" pos:column="25">= <expr><lit:literal type="number" pos:line="155" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="155" pos:column="30">,</op:operator>
	<decl><name pos:line="156" pos:column="9">FR_Selection</name>	<init pos:line="156" pos:column="25">= <expr><lit:literal type="number" pos:line="156" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="156" pos:column="31">,</op:operator>
	<decl><name pos:line="157" pos:column="9">FR_Block</name>	<init pos:line="157" pos:column="25">= <expr><lit:literal type="number" pos:line="157" pos:column="27">0x20</lit:literal></expr></init></decl><op:operator pos:line="157" pos:column="31">,</op:operator>
	<decl><name pos:line="158" pos:column="9">FR_KeepCase</name>	<init pos:line="158" pos:column="25">= <expr><lit:literal type="number" pos:line="158" pos:column="27">0x40</lit:literal></expr></init></decl><op:operator pos:line="158" pos:column="31">,</op:operator>
	<decl><name pos:line="159" pos:column="9">FR_SubFolders</name>	<init pos:line="159" pos:column="25">= <expr><lit:literal type="number" pos:line="159" pos:column="27">0x100</lit:literal></expr></init></decl><op:operator pos:line="159" pos:column="32">,</op:operator>
	<decl><name pos:line="160" pos:column="9">FR_KeepOpen</name>	<init pos:line="160" pos:column="25">= <expr><lit:literal type="number" pos:line="160" pos:column="27">0x200</lit:literal></expr></init></decl><op:operator pos:line="160" pos:column="32">,</op:operator>
	<decl><name pos:line="161" pos:column="9">FR_NameOnly</name>	<init pos:line="161" pos:column="25">= <expr><lit:literal type="number" pos:line="161" pos:column="27">0x400</lit:literal></expr></init></decl><op:operator pos:line="161" pos:column="32">,</op:operator>
	<decl><name pos:line="162" pos:column="9">FR_SyntaxMask</name>	<init pos:line="162" pos:column="25">= <expr><lit:literal type="number" pos:line="162" pos:column="27">0x3000</lit:literal></expr></init></decl><op:operator pos:line="162" pos:column="33">,</op:operator>
	<decl><name pos:line="163" pos:column="9">FR_Plain</name>	<init pos:line="163" pos:column="25">= <expr><lit:literal type="number" pos:line="163" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="163" pos:column="28">,</op:operator>
	<decl><name pos:line="164" pos:column="9">FR_Wildcard</name>	<init pos:line="164" pos:column="25">= <expr><lit:literal type="number" pos:line="164" pos:column="27">0x1000</lit:literal></expr></init></decl><op:operator pos:line="164" pos:column="33">,</op:operator>
	<decl><name pos:line="165" pos:column="9">FR_RegExpr</name>	<init pos:line="165" pos:column="25">= <expr><lit:literal type="number" pos:line="165" pos:column="27">0x2000</lit:literal></expr></init></decl><op:operator pos:line="165" pos:column="33">,</op:operator>
	<decl><name pos:line="166" pos:column="9">FR_TargetMask</name>	<init pos:line="166" pos:column="25">= <expr><lit:literal type="number" pos:line="166" pos:column="27">0x70000</lit:literal></expr></init></decl><op:operator pos:line="166" pos:column="34">,</op:operator>
	<decl><name pos:line="167" pos:column="9">FR_Document</name>	<init pos:line="167" pos:column="25">= <expr><lit:literal type="number" pos:line="167" pos:column="27">0x10000</lit:literal></expr></init></decl><op:operator pos:line="167" pos:column="34">,</op:operator>
	<decl><name pos:line="168" pos:column="9">FR_OpenDocuments</name>	<init pos:line="168" pos:column="33">= <expr><lit:literal type="number" pos:line="168" pos:column="35">0x20000</lit:literal></expr></init></decl><op:operator pos:line="168" pos:column="42">,</op:operator>
	<decl><name pos:line="169" pos:column="9">FR_Files</name>	<init pos:line="169" pos:column="25">= <expr><lit:literal type="number" pos:line="169" pos:column="27">0x30000</lit:literal></expr></init></decl><op:operator pos:line="169" pos:column="34">,</op:operator>
	<decl><name pos:line="170" pos:column="9">FR_Project</name>	<init pos:line="170" pos:column="25">= <expr><lit:literal type="number" pos:line="170" pos:column="27">0x40000</lit:literal></expr></init></decl><op:operator pos:line="170" pos:column="34">,</op:operator>
	<decl><name pos:line="171" pos:column="9">FR_Solution</name>	<init pos:line="171" pos:column="25">= <expr><lit:literal type="number" pos:line="171" pos:column="27">0x50000</lit:literal></expr></init></decl><op:operator pos:line="171" pos:column="34">,</op:operator>
	<decl><name pos:line="172" pos:column="9">FR_ActionMask</name>	<init pos:line="172" pos:column="25">= <expr><lit:literal type="number" pos:line="172" pos:column="27">0xf80000</lit:literal></expr></init></decl><op:operator pos:line="172" pos:column="35">,</op:operator>
	<decl><name pos:line="173" pos:column="9">FR_MarkAll</name>	<init pos:line="173" pos:column="25">= <expr><lit:literal type="number" pos:line="173" pos:column="27">0x80000</lit:literal></expr></init></decl><op:operator pos:line="173" pos:column="34">,</op:operator>
	<decl><name pos:line="174" pos:column="9">FR_Find</name>	<init pos:line="174" pos:column="17">= <expr><lit:literal type="number" pos:line="174" pos:column="19">0x100000</lit:literal></expr></init></decl><op:operator pos:line="174" pos:column="27">,</op:operator>
	<decl><name pos:line="175" pos:column="9">FR_FindAll</name>	<init pos:line="175" pos:column="25">= <expr><lit:literal type="number" pos:line="175" pos:column="27">0x200000</lit:literal></expr></init></decl><op:operator pos:line="175" pos:column="35">,</op:operator>
	<decl><name pos:line="176" pos:column="9">FR_Replace</name>	<init pos:line="176" pos:column="25">= <expr><lit:literal type="number" pos:line="176" pos:column="27">0x400000</lit:literal></expr></init></decl><op:operator pos:line="176" pos:column="35">,</op:operator>
	<decl><name pos:line="177" pos:column="9">FR_ReplaceAll</name>	<init pos:line="177" pos:column="25">= <expr><lit:literal type="number" pos:line="177" pos:column="27">0x800000</lit:literal></expr></init></decl><op:operator pos:line="177" pos:column="35">,</op:operator>
	<decl><name pos:line="178" pos:column="9">FR_InternalMask</name>	<init pos:line="178" pos:column="25">= <expr><lit:literal type="number" pos:line="178" pos:column="27">0x7f000000</lit:literal></expr></init></decl><op:operator pos:line="178" pos:column="37">,</op:operator>
	<decl><name pos:line="179" pos:column="9">FR_ResetPosition</name>	<init pos:line="179" pos:column="33">= <expr><lit:literal type="number" pos:line="179" pos:column="35">0x1000000</lit:literal></expr></init></decl><op:operator pos:line="179" pos:column="44">,</op:operator>
	<decl><name pos:line="180" pos:column="9">FR_FromStart</name>	<init pos:line="180" pos:column="25">= <expr><lit:literal type="number" pos:line="180" pos:column="27">0x2000000</lit:literal></expr></init></decl><op:operator pos:line="180" pos:column="36">,</op:operator>
	<decl><name pos:line="181" pos:column="9">FR_OneMatchPerLine</name>	<init pos:line="181" pos:column="33">= <expr><lit:literal type="number" pos:line="181" pos:column="35">0x4000000</lit:literal></expr></init></decl><op:operator pos:line="181" pos:column="44">,</op:operator>
	<decl><name pos:line="182" pos:column="9">FR_Report</name>	<init pos:line="182" pos:column="25">= <expr><lit:literal type="number" pos:line="182" pos:column="27">0x8000000</lit:literal></expr></init></decl><op:operator pos:line="182" pos:column="36">,</op:operator>
	<decl><name pos:line="183" pos:column="9">FR_SelectionDefault</name>	<init pos:line="183" pos:column="33">= <expr><lit:literal type="number" pos:line="183" pos:column="35">0x10000000</lit:literal></expr></init></decl><op:operator pos:line="183" pos:column="45">,</op:operator>
	<decl><name pos:line="184" pos:column="9">FR_NoFind</name>	<init pos:line="184" pos:column="25">= <expr><lit:literal type="number" pos:line="184" pos:column="27">0x80000000</lit:literal></expr></init></decl><op:operator pos:line="184" pos:column="37">,</op:operator>
	<decl><name pos:line="185" pos:column="9">FR_CommonOptions</name>	<init pos:line="185" pos:column="33">= <expr><op:operator pos:line="185" pos:column="35">(</op:operator> <op:operator pos:line="185" pos:column="37">(</op:operator> <op:operator pos:line="185" pos:column="39">(</op:operator> <name pos:line="185" pos:column="41">FR_MatchCase</name> <op:operator pos:line="185" pos:column="54">|</op:operator> <name pos:line="185" pos:column="56">FR_WholeWord</name> <op:operator pos:line="185" pos:column="69">)</op:operator>  <op:operator pos:line="185" pos:column="72">|</op:operator> <name pos:line="185" pos:column="74">FR_Hidden</name> <op:operator pos:line="185" pos:column="84">)</op:operator>  <op:operator pos:line="185" pos:column="87">|</op:operator> <name pos:line="185" pos:column="89">FR_KeepCase</name> <op:operator pos:line="185" pos:column="101">)</op:operator></expr></init></decl> <op:operator pos:line="185" pos:column="103">,</op:operator>
	<decl><name pos:line="186" pos:column="9">FR_DocOptionSet</name>	<init pos:line="186" pos:column="25">= <expr><op:operator pos:line="186" pos:column="27">(</op:operator> <op:operator pos:line="186" pos:column="29">(</op:operator> <op:operator pos:line="186" pos:column="31">(</op:operator> <name pos:line="186" pos:column="33">FR_CommonOptions</name> <op:operator pos:line="186" pos:column="50">|</op:operator> <name pos:line="186" pos:column="52">FR_Backwards</name> <op:operator pos:line="186" pos:column="65">)</op:operator>  <op:operator pos:line="186" pos:column="68">|</op:operator> <name pos:line="186" pos:column="70">FR_Selection</name> <op:operator pos:line="186" pos:column="83">)</op:operator>  <op:operator pos:line="186" pos:column="86">|</op:operator> <name pos:line="186" pos:column="88">FR_Block</name> <op:operator pos:line="186" pos:column="97">)</op:operator></expr></init></decl> <op:operator pos:line="186" pos:column="99">,</op:operator>
	<decl><name pos:line="187" pos:column="9">FR_FIFOptionSet</name>	<init pos:line="187" pos:column="25">= <expr><op:operator pos:line="187" pos:column="27">(</op:operator> <op:operator pos:line="187" pos:column="29">(</op:operator> <op:operator pos:line="187" pos:column="31">(</op:operator> <name pos:line="187" pos:column="33">FR_CommonOptions</name> <op:operator pos:line="187" pos:column="50">|</op:operator> <name pos:line="187" pos:column="52">FR_SubFolders</name> <op:operator pos:line="187" pos:column="66">)</op:operator>  <op:operator pos:line="187" pos:column="69">|</op:operator> <name pos:line="187" pos:column="71">FR_KeepOpen</name> <op:operator pos:line="187" pos:column="83">)</op:operator>  <op:operator pos:line="187" pos:column="86">|</op:operator> <name pos:line="187" pos:column="88">FR_NameOnly</name> <op:operator pos:line="187" pos:column="100">)</op:operator></expr></init></decl> <op:operator pos:line="187" pos:column="102">,</op:operator>
	<decl><name pos:line="188" pos:column="9">FR_OptionSet</name>	<init pos:line="188" pos:column="25">= <expr><op:operator pos:line="188" pos:column="27">(</op:operator> <name pos:line="188" pos:column="29">FR_DocOptionSet</name> <op:operator pos:line="188" pos:column="45">|</op:operator> <name pos:line="188" pos:column="47">FR_FIFOptionSet</name> <op:operator pos:line="188" pos:column="63">)</op:operator></expr></init></decl> <op:operator pos:line="188" pos:column="65">,</op:operator>
	<decl><name pos:line="189" pos:column="9">FR_SyntaxSet</name>	<init pos:line="189" pos:column="25">= <expr><op:operator pos:line="189" pos:column="27">(</op:operator> <op:operator pos:line="189" pos:column="29">(</op:operator> <name pos:line="189" pos:column="31">FR_Plain</name> <op:operator pos:line="189" pos:column="40">|</op:operator> <name pos:line="189" pos:column="42">FR_Wildcard</name> <op:operator pos:line="189" pos:column="54">)</op:operator>  <op:operator pos:line="189" pos:column="57">|</op:operator> <name pos:line="189" pos:column="59">FR_RegExpr</name> <op:operator pos:line="189" pos:column="70">)</op:operator></expr></init></decl> <op:operator pos:line="189" pos:column="72">,</op:operator>
	<decl><name pos:line="190" pos:column="9">FR_Capabilities</name>	<init pos:line="190" pos:column="25">= <expr><op:operator pos:line="190" pos:column="27">(</op:operator> <op:operator pos:line="190" pos:column="29">(</op:operator> <op:operator pos:line="190" pos:column="31">(</op:operator> <name pos:line="190" pos:column="33">FR_OptionSet</name> <op:operator pos:line="190" pos:column="46">|</op:operator> <name pos:line="190" pos:column="48">FR_SyntaxSet</name> <op:operator pos:line="190" pos:column="61">)</op:operator>  <op:operator pos:line="190" pos:column="64">|</op:operator> <name pos:line="190" pos:column="66">FR_ActionMask</name> <op:operator pos:line="190" pos:column="80">)</op:operator>  <op:operator pos:line="190" pos:column="83">|</op:operator> <name pos:line="190" pos:column="85">FR_SelectionDefault</name> <op:operator pos:line="190" pos:column="105">)</op:operator></expr></init></decl> <op:operator pos:line="190" pos:column="107">,</op:operator>
	<decl><name pos:line="191" pos:column="9">FR_All</name>	<init pos:line="191" pos:column="17">= <expr><lit:literal type="number" pos:line="191" pos:column="19">0x7fffffff</lit:literal></expr></init></decl><op:operator pos:line="191" pos:column="29">,</op:operator>
	<decl><name pos:line="192" pos:column="9">FR_None</name>	<init pos:line="192" pos:column="17">= <expr><lit:literal type="number" pos:line="192" pos:column="19">0</lit:literal></expr></init></decl><op:operator pos:line="192" pos:column="20">,</op:operator>
	<decl><name pos:line="193" pos:column="9">FR_Procedure</name>	<init pos:line="193" pos:column="25">= <expr><name pos:line="193" pos:column="27">FR_Block</name></expr></init></decl><op:operator pos:line="193" pos:column="35">,</op:operator>
	<decl><name pos:line="194" pos:column="9">FR_Pattern</name>	<init pos:line="194" pos:column="25">= <expr><name pos:line="194" pos:column="27">FR_Wildcard</name></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="196" pos:column="1">typedef <type><name pos:line="196" pos:column="9">DWORD</name></type> <name pos:line="196" pos:column="15">VSFINDOPTIONS</name>;</typedef>

<cpp:ifndef pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">ifndef</cpp:directive> <name pos:line="198" pos:column="9">__RE_E_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="199" pos:column="9">__RE_E_DEFINED__</name></cpp:macro></cpp:define>

<enum pos:line="201" pos:column="1">enum <name pos:line="201" pos:column="6">RE_ERRORS</name>
    <block pos:line="202" pos:column="5">{	<decl><name pos:line="202" pos:column="9">RE_E_INTERNALERROR</name>	<init pos:line="202" pos:column="33">= <expr><op:operator pos:line="202" pos:column="35">(</op:operator> <op:operator pos:line="202" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="202" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="202" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="202" pos:column="52">0x40000</lit:literal> <op:operator pos:line="202" pos:column="60">)</op:operator>  <op:operator pos:line="202" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="202" pos:column="65">0x1</lit:literal> <op:operator pos:line="202" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="202" pos:column="71">,</op:operator>
	<decl><name pos:line="203" pos:column="9">RE_E_SYNTAXERROR</name>	<init pos:line="203" pos:column="33">= <expr><op:operator pos:line="203" pos:column="35">(</op:operator> <op:operator pos:line="203" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="203" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="203" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="203" pos:column="52">0x40000</lit:literal> <op:operator pos:line="203" pos:column="60">)</op:operator>  <op:operator pos:line="203" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="203" pos:column="65">0x2</lit:literal> <op:operator pos:line="203" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="203" pos:column="71">,</op:operator>
	<decl><name pos:line="204" pos:column="9">RE_E_STACKOVERFLOW</name>	<init pos:line="204" pos:column="33">= <expr><op:operator pos:line="204" pos:column="35">(</op:operator> <op:operator pos:line="204" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="204" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="204" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="204" pos:column="52">0x40000</lit:literal> <op:operator pos:line="204" pos:column="60">)</op:operator>  <op:operator pos:line="204" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="204" pos:column="65">0x3</lit:literal> <op:operator pos:line="204" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="204" pos:column="71">,</op:operator>
	<decl><name pos:line="205" pos:column="9">RE_E_MISSINGARG</name>	<init pos:line="205" pos:column="25">= <expr><op:operator pos:line="205" pos:column="27">(</op:operator> <op:operator pos:line="205" pos:column="29">(</op:operator> <lit:literal type="number" pos:line="205" pos:column="31">0x80000000</lit:literal> <op:operator pos:line="205" pos:column="42">|</op:operator> <lit:literal type="number" pos:line="205" pos:column="44">0x40000</lit:literal> <op:operator pos:line="205" pos:column="52">)</op:operator>  <op:operator pos:line="205" pos:column="55">|</op:operator> <lit:literal type="number" pos:line="205" pos:column="57">0x4</lit:literal> <op:operator pos:line="205" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="205" pos:column="63">,</op:operator>
	<decl><name pos:line="206" pos:column="9">RE_E_POWERARGOUTOFRANGE</name>	<init pos:line="206" pos:column="33">= <expr><op:operator pos:line="206" pos:column="35">(</op:operator> <op:operator pos:line="206" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="206" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="206" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="206" pos:column="52">0x40000</lit:literal> <op:operator pos:line="206" pos:column="60">)</op:operator>  <op:operator pos:line="206" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="206" pos:column="65">0x5</lit:literal> <op:operator pos:line="206" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="206" pos:column="71">,</op:operator>
	<decl><name pos:line="207" pos:column="9">RE_E_ESCAPEMISSINGARG</name>	<init pos:line="207" pos:column="33">= <expr><op:operator pos:line="207" pos:column="35">(</op:operator> <op:operator pos:line="207" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="207" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="207" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="207" pos:column="52">0x40000</lit:literal> <op:operator pos:line="207" pos:column="60">)</op:operator>  <op:operator pos:line="207" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="207" pos:column="65">0x6</lit:literal> <op:operator pos:line="207" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="207" pos:column="71">,</op:operator>
	<decl><name pos:line="208" pos:column="9">RE_E_SPECIALUNKNOWN</name>	<init pos:line="208" pos:column="33">= <expr><op:operator pos:line="208" pos:column="35">(</op:operator> <op:operator pos:line="208" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="208" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="208" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="208" pos:column="52">0x40000</lit:literal> <op:operator pos:line="208" pos:column="60">)</op:operator>  <op:operator pos:line="208" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="208" pos:column="65">0x7</lit:literal> <op:operator pos:line="208" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="208" pos:column="71">,</op:operator>
	<decl><name pos:line="209" pos:column="9">RE_E_TAGOUTOFRANGE</name>	<init pos:line="209" pos:column="33">= <expr><op:operator pos:line="209" pos:column="35">(</op:operator> <op:operator pos:line="209" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="209" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="209" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="209" pos:column="52">0x40000</lit:literal> <op:operator pos:line="209" pos:column="60">)</op:operator>  <op:operator pos:line="209" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="209" pos:column="65">0x8</lit:literal> <op:operator pos:line="209" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="209" pos:column="71">,</op:operator>
	<decl><name pos:line="210" pos:column="9">RE_E_SETMISSINGCLOSE</name>	<init pos:line="210" pos:column="33">= <expr><op:operator pos:line="210" pos:column="35">(</op:operator> <op:operator pos:line="210" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="210" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="210" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="210" pos:column="52">0x40000</lit:literal> <op:operator pos:line="210" pos:column="60">)</op:operator>  <op:operator pos:line="210" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="210" pos:column="65">0x9</lit:literal> <op:operator pos:line="210" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="210" pos:column="71">,</op:operator>
	<decl><name pos:line="211" pos:column="9">RE_E_TAGMISSINGCLOSE</name>	<init pos:line="211" pos:column="33">= <expr><op:operator pos:line="211" pos:column="35">(</op:operator> <op:operator pos:line="211" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="211" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="211" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="211" pos:column="52">0x40000</lit:literal> <op:operator pos:line="211" pos:column="60">)</op:operator>  <op:operator pos:line="211" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="211" pos:column="65">0xa</lit:literal> <op:operator pos:line="211" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="211" pos:column="71">,</op:operator>
	<decl><name pos:line="212" pos:column="9">RE_E_TOOMANYTAGS</name>	<init pos:line="212" pos:column="33">= <expr><op:operator pos:line="212" pos:column="35">(</op:operator> <op:operator pos:line="212" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="212" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="212" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="212" pos:column="52">0x40000</lit:literal> <op:operator pos:line="212" pos:column="60">)</op:operator>  <op:operator pos:line="212" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="212" pos:column="65">0xb</lit:literal> <op:operator pos:line="212" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="212" pos:column="71">,</op:operator>
	<decl><name pos:line="213" pos:column="9">RE_E_EMPTYSET</name>	<init pos:line="213" pos:column="25">= <expr><op:operator pos:line="213" pos:column="27">(</op:operator> <op:operator pos:line="213" pos:column="29">(</op:operator> <lit:literal type="number" pos:line="213" pos:column="31">0x80000000</lit:literal> <op:operator pos:line="213" pos:column="42">|</op:operator> <lit:literal type="number" pos:line="213" pos:column="44">0x40000</lit:literal> <op:operator pos:line="213" pos:column="52">)</op:operator>  <op:operator pos:line="213" pos:column="55">|</op:operator> <lit:literal type="number" pos:line="213" pos:column="57">0xc</lit:literal> <op:operator pos:line="213" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="213" pos:column="63">,</op:operator>
	<decl><name pos:line="214" pos:column="9">RE_E_GROUPMISSINGCLOSE</name>	<init pos:line="214" pos:column="33">= <expr><op:operator pos:line="214" pos:column="35">(</op:operator> <op:operator pos:line="214" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="214" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="214" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="214" pos:column="52">0x40000</lit:literal> <op:operator pos:line="214" pos:column="60">)</op:operator>  <op:operator pos:line="214" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="214" pos:column="65">0xd</lit:literal> <op:operator pos:line="214" pos:column="69">)</op:operator></expr></init></decl> <op:operator pos:line="214" pos:column="71">,</op:operator>
	<decl><name pos:line="215" pos:column="9">RE_E_REPLACETEXT</name>	<init pos:line="215" pos:column="33">= <expr><op:operator pos:line="215" pos:column="35">(</op:operator> <op:operator pos:line="215" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="215" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="215" pos:column="50">|</op:operator> <lit:literal type="number" pos:line="215" pos:column="52">0x40000</lit:literal> <op:operator pos:line="215" pos:column="60">)</op:operator>  <op:operator pos:line="215" pos:column="63">|</op:operator> <lit:literal type="number" pos:line="215" pos:column="65">0xe</lit:literal> <op:operator pos:line="215" pos:column="69">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<cpp:endif pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="217" pos:column="8">// __RE_E_DEFINED__</comment>

<enum pos:line="219" pos:column="1">enum <name pos:line="219" pos:column="6">__VSFINDBUFFERFLAGS</name>
    <block pos:line="220" pos:column="5">{	<decl><name pos:line="220" pos:column="9">VSFB_StartOfLine</name>	<init pos:line="220" pos:column="33">= <expr><lit:literal type="number" pos:line="220" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="220" pos:column="38">,</op:operator>
	<decl><name pos:line="221" pos:column="9">VSFB_EndOfLine</name>	<init pos:line="221" pos:column="25">= <expr><lit:literal type="number" pos:line="221" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="221" pos:column="30">,</op:operator>
	<decl><name pos:line="222" pos:column="9">FINDBUFFER_StartOfLine</name>	<init pos:line="222" pos:column="33">= <expr><lit:literal type="number" pos:line="222" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="222" pos:column="38">,</op:operator>
	<decl><name pos:line="223" pos:column="9">FINDBUFFER_EndOfLine</name>	<init pos:line="223" pos:column="33">= <expr><lit:literal type="number" pos:line="223" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="225" pos:column="1">typedef <type><name pos:line="225" pos:column="9">DWORD</name></type> <name pos:line="225" pos:column="15">VSFINDBUFFERFLAGS</name>;</typedef>


<enum pos:line="228" pos:column="1">enum <name pos:line="228" pos:column="6">__VSFINDRESULTLOC</name>
    <block pos:line="229" pos:column="5">{	<decl><name pos:line="229" pos:column="9">VSFRL_FindResultList1</name>	<init pos:line="229" pos:column="33">= <expr><lit:literal type="number" pos:line="229" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="229" pos:column="36">,</op:operator>
	<decl><name pos:line="230" pos:column="9">VSFRL_FindResultList2</name>	<init pos:line="230" pos:column="33">= <expr><lit:literal type="number" pos:line="230" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="230" pos:column="36">,</op:operator>
	<decl><name pos:line="231" pos:column="9">FINDREPLACE_RESULTLOC_ResultsList1</name>	<init pos:line="231" pos:column="49">= <expr><lit:literal type="number" pos:line="231" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="231" pos:column="52">,</op:operator>
	<decl><name pos:line="232" pos:column="9">FINDREPLACE_RESULTLOC_ResultsList2</name>	<init pos:line="232" pos:column="49">= <expr><lit:literal type="number" pos:line="232" pos:column="51">2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="234" pos:column="1">typedef <type><name pos:line="234" pos:column="9">DWORD</name></type> <name pos:line="234" pos:column="15">VSFINDRESULTLOC</name>;</typedef>


<enum pos:line="237" pos:column="1">enum <name pos:line="237" pos:column="6">__VSFINDRESULT</name>
    <block pos:line="238" pos:column="5">{	<decl><name pos:line="238" pos:column="9">VSFR_NotFound</name>	<init pos:line="238" pos:column="25">= <expr><lit:literal type="number" pos:line="238" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="238" pos:column="28">,</op:operator>
	<decl><name pos:line="239" pos:column="9">VSFR_Found</name>	<init pos:line="239" pos:column="25">= <expr><lit:literal type="number" pos:line="239" pos:column="27">1</lit:literal></expr></init></decl><op:operator pos:line="239" pos:column="28">,</op:operator>
	<decl><name pos:line="240" pos:column="9">VSFR_Replaced</name>	<init pos:line="240" pos:column="25">= <expr><lit:literal type="number" pos:line="240" pos:column="27">2</lit:literal></expr></init></decl><op:operator pos:line="240" pos:column="28">,</op:operator>
	<decl><name pos:line="241" pos:column="9">VSFR_EndOfDoc</name>	<init pos:line="241" pos:column="25">= <expr><lit:literal type="number" pos:line="241" pos:column="27">3</lit:literal></expr></init></decl><op:operator pos:line="241" pos:column="28">,</op:operator>
	<decl><name pos:line="242" pos:column="9">VSFR_EndOfSearch</name>	<init pos:line="242" pos:column="33">= <expr><lit:literal type="number" pos:line="242" pos:column="35">4</lit:literal></expr></init></decl><op:operator pos:line="242" pos:column="36">,</op:operator>
	<decl><name pos:line="243" pos:column="9">VSFR_FindInFiles</name>	<init pos:line="243" pos:column="33">= <expr><lit:literal type="number" pos:line="243" pos:column="35">5</lit:literal></expr></init></decl><op:operator pos:line="243" pos:column="36">,</op:operator>
	<decl><name pos:line="244" pos:column="9">VSFR_NoTarget</name>	<init pos:line="244" pos:column="25">= <expr><lit:literal type="number" pos:line="244" pos:column="27">6</lit:literal></expr></init></decl><op:operator pos:line="244" pos:column="28">,</op:operator>
	<decl><name pos:line="245" pos:column="9">VSFR_Error</name>	<init pos:line="245" pos:column="25">= <expr><lit:literal type="number" pos:line="245" pos:column="27">7</lit:literal></expr></init></decl><op:operator pos:line="245" pos:column="28">,</op:operator>
	<decl><name pos:line="246" pos:column="9">VSFR_AndInterrupt</name>	<init pos:line="246" pos:column="33">= <expr><lit:literal type="number" pos:line="246" pos:column="35">0x40000000</lit:literal></expr></init></decl><op:operator pos:line="246" pos:column="45">,</op:operator>
	<decl><name pos:line="247" pos:column="9">VSFR_AndReplace</name>	<init pos:line="247" pos:column="25">= <expr><lit:literal type="number" pos:line="247" pos:column="27">0x80000000</lit:literal></expr></init></decl><op:operator pos:line="247" pos:column="37">,</op:operator>
	<decl><name pos:line="248" pos:column="9">VSFR_FLAGMASK</name>	<init pos:line="248" pos:column="25">= <expr><lit:literal type="number" pos:line="248" pos:column="27">0xff000000</lit:literal></expr></init></decl><op:operator pos:line="248" pos:column="37">,</op:operator>
	<decl><name pos:line="249" pos:column="9">FINDREPLACE_RESULT_Failed</name>	<init pos:line="249" pos:column="41">= <expr><lit:literal type="number" pos:line="249" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="249" pos:column="44">,</op:operator>
	<decl><name pos:line="250" pos:column="9">FINDREPLACE_RESULT_Found</name>	<init pos:line="250" pos:column="41">= <expr><lit:literal type="number" pos:line="250" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="250" pos:column="44">,</op:operator>
	<decl><name pos:line="251" pos:column="9">FINDREPLACE_RESULT_Replaced</name>	<init pos:line="251" pos:column="41">= <expr><lit:literal type="number" pos:line="251" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="251" pos:column="44">,</op:operator>
	<decl><name pos:line="252" pos:column="9">FINDREPLACE_RESULT_EndOfDoc</name>	<init pos:line="252" pos:column="41">= <expr><lit:literal type="number" pos:line="252" pos:column="43">3</lit:literal></expr></init></decl><op:operator pos:line="252" pos:column="44">,</op:operator>
	<decl><name pos:line="253" pos:column="9">FINDREPLACE_RESULT_EndOfSearch</name>	<init pos:line="253" pos:column="41">= <expr><lit:literal type="number" pos:line="253" pos:column="43">4</lit:literal></expr></init></decl><op:operator pos:line="253" pos:column="44">,</op:operator>
	<decl><name pos:line="254" pos:column="9">FINDREPLACE_RESULT_FindInFiles</name>	<init pos:line="254" pos:column="41">= <expr><lit:literal type="number" pos:line="254" pos:column="43">5</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="256" pos:column="1">typedef <type><name pos:line="256" pos:column="9">DWORD</name></type> <name pos:line="256" pos:column="15">VSFINDRESULT</name>;</typedef>


<enum pos:line="259" pos:column="1">enum <name pos:line="259" pos:column="6">__VSFINDPOS</name>
    <block pos:line="260" pos:column="5">{	<decl><name pos:line="260" pos:column="9">VSFP_Start</name>	<init pos:line="260" pos:column="25">= <expr><lit:literal type="number" pos:line="260" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="260" pos:column="30">,</op:operator>
	<decl><name pos:line="261" pos:column="9">VSFP_Current</name>	<init pos:line="261" pos:column="25">= <expr><lit:literal type="number" pos:line="261" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="261" pos:column="30">,</op:operator>
	<decl><name pos:line="262" pos:column="9">VSFP_Wrapped</name>	<init pos:line="262" pos:column="25">= <expr><lit:literal type="number" pos:line="262" pos:column="27">0x10000</lit:literal></expr></init></decl><op:operator pos:line="262" pos:column="34">,</op:operator>
	<decl><name pos:line="263" pos:column="9">VSFP_ResetCounts</name>	<init pos:line="263" pos:column="33">= <expr><lit:literal type="number" pos:line="263" pos:column="35">0x20000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="265" pos:column="1">typedef <type><name pos:line="265" pos:column="9">DWORD</name></type> <name pos:line="265" pos:column="15">VSFINDPOS</name>;</typedef>


<enum pos:line="268" pos:column="1">enum <name pos:line="268" pos:column="6">__VSFINDSTATE</name>
    <block pos:line="269" pos:column="5">{	<decl><name pos:line="269" pos:column="9">VSFS_Error</name>	<init pos:line="269" pos:column="25">= <expr><lit:literal type="number" pos:line="269" pos:column="27">0x10000000</lit:literal></expr></init></decl><op:operator pos:line="269" pos:column="37">,</op:operator>
	<decl><name pos:line="270" pos:column="9">VSFS_Empty</name>	<init pos:line="270" pos:column="25">= <expr><lit:literal type="number" pos:line="270" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="270" pos:column="28">,</op:operator>
	<decl><name pos:line="271" pos:column="9">VSFS_Start</name>	<init pos:line="271" pos:column="25">= <expr><lit:literal type="number" pos:line="271" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="271" pos:column="30">,</op:operator>
	<decl><name pos:line="272" pos:column="9">VSFS_Found</name>	<init pos:line="272" pos:column="25">= <expr><lit:literal type="number" pos:line="272" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="272" pos:column="30">,</op:operator>
	<decl><name pos:line="273" pos:column="9">VSFS_NotFound</name>	<init pos:line="273" pos:column="25">= <expr><lit:literal type="number" pos:line="273" pos:column="27">0x3</lit:literal></expr></init></decl><op:operator pos:line="273" pos:column="30">,</op:operator>
	<decl><name pos:line="274" pos:column="9">VSFS_Wrapped</name>	<init pos:line="274" pos:column="25">= <expr><lit:literal type="number" pos:line="274" pos:column="27">0x10000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="276" pos:column="1">typedef <type><name pos:line="276" pos:column="9">DWORD</name></type> <name pos:line="276" pos:column="15">VSFINDSTATE</name>;</typedef>


<comment type="line" pos:line="279" pos:column="1">// Helper macros for looking at find state</comment>
<comment type="line" pos:line="280" pos:column="1">//</comment>
<cpp:define pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="281" pos:column="9">VSFS_IsFound</name><parameter_list pos:line="281" pos:column="21">(<param><type><name pos:line="281" pos:column="22">fs</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="281" pos:column="26">(VSFS_Found == (fs &amp; 0xf))</cpp:value></cpp:define>
<cpp:define pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="282" pos:column="9">VSFS_IsWrapped</name><parameter_list pos:line="282" pos:column="23">(<param><type><name pos:line="282" pos:column="24">fs</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="282" pos:column="28">(VSFS_Wrapped &amp; fs)</cpp:value></cpp:define>


<enum pos:line="285" pos:column="1">enum <name pos:line="285" pos:column="6">__VSFINDERROR</name>
    <block pos:line="286" pos:column="5">{	<decl><name pos:line="286" pos:column="9">VSFE_Syntax</name>	<init pos:line="286" pos:column="25">= <expr><op:operator pos:line="286" pos:column="27">-</op:operator><lit:literal type="number" pos:line="286" pos:column="28">4</lit:literal></expr></init></decl><op:operator pos:line="286" pos:column="29">,</op:operator>
	<decl><name pos:line="287" pos:column="9">VSFE_NotSupported</name>	<init pos:line="287" pos:column="33">= <expr><op:operator pos:line="287" pos:column="35">-</op:operator><lit:literal type="number" pos:line="287" pos:column="36">3</lit:literal></expr></init></decl><op:operator pos:line="287" pos:column="37">,</op:operator>
	<decl><name pos:line="288" pos:column="9">VSFE_NotInitialized</name>	<init pos:line="288" pos:column="33">= <expr><op:operator pos:line="288" pos:column="35">-</op:operator><lit:literal type="number" pos:line="288" pos:column="36">2</lit:literal></expr></init></decl><op:operator pos:line="288" pos:column="37">,</op:operator>
	<decl><name pos:line="289" pos:column="9">VSFE_Failure</name>	<init pos:line="289" pos:column="25">= <expr><op:operator pos:line="289" pos:column="27">-</op:operator><lit:literal type="number" pos:line="289" pos:column="28">1</lit:literal></expr></init></decl><op:operator pos:line="289" pos:column="29">,</op:operator>
	<decl><name pos:line="290" pos:column="9">VSFE_NoError</name>	<init pos:line="290" pos:column="25">= <expr><lit:literal type="number" pos:line="290" pos:column="27">0</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="292" pos:column="1">typedef <type><name pos:line="292" pos:column="9">DWORD</name></type> <name pos:line="292" pos:column="15">VSFINDERROR</name>;</typedef>


<enum pos:line="295" pos:column="1">enum <name pos:line="295" pos:column="6">__VSFINDHOW</name>
    <block pos:line="296" pos:column="5">{	<decl><name pos:line="296" pos:column="9">VSFH_Ambient</name>	<init pos:line="296" pos:column="25">= <expr><lit:literal type="number" pos:line="296" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="296" pos:column="28">,</op:operator>
	<decl><name pos:line="297" pos:column="9">VSFH_Wrap</name>	<init pos:line="297" pos:column="25">= <expr><lit:literal type="number" pos:line="297" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="297" pos:column="30">,</op:operator>
	<decl><name pos:line="298" pos:column="9">VSFH_TryMatch</name>	<init pos:line="298" pos:column="25">= <expr><lit:literal type="number" pos:line="298" pos:column="27">0x10000000</lit:literal></expr></init></decl><op:operator pos:line="298" pos:column="37">,</op:operator>
	<decl><name pos:line="299" pos:column="9">VSFH_SetMatch</name>	<init pos:line="299" pos:column="25">= <expr><lit:literal type="number" pos:line="299" pos:column="27">0x20000000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="301" pos:column="1">typedef <type><name pos:line="301" pos:column="9">DWORD</name></type> <name pos:line="301" pos:column="15">VSFINDHOW</name>;</typedef>


<enum pos:line="304" pos:column="1">enum <name pos:line="304" pos:column="6">__VSFTPROPID</name>
    <block pos:line="305" pos:column="5">{	<decl><name pos:line="305" pos:column="9">VSFTPROPID_DocName</name>	<init pos:line="305" pos:column="33">= <expr><lit:literal type="number" pos:line="305" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="305" pos:column="36">,</op:operator>
	<decl><name pos:line="306" pos:column="9">VSFTPROPID_IsDiskFile</name>	<init pos:line="306" pos:column="33">= <expr><lit:literal type="number" pos:line="306" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="306" pos:column="36">,</op:operator>
	<decl><name pos:line="307" pos:column="9">VSFTPROPID_BlockName</name>	<init pos:line="307" pos:column="33">= <expr><lit:literal type="number" pos:line="307" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="307" pos:column="36">,</op:operator>
	<decl><name pos:line="308" pos:column="9">VSFTPROPID_InitialPattern</name>	<init pos:line="308" pos:column="41">= <expr><lit:literal type="number" pos:line="308" pos:column="43">3</lit:literal></expr></init></decl><op:operator pos:line="308" pos:column="44">,</op:operator>
	<decl><name pos:line="309" pos:column="9">VSFTPROPID_InitialPatternAggressive</name>	<init pos:line="309" pos:column="49">= <expr><lit:literal type="number" pos:line="309" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="309" pos:column="52">,</op:operator>
	<decl><name pos:line="310" pos:column="9">VSFTPROPID_WindowFrame</name>	<init pos:line="310" pos:column="33">= <expr><lit:literal type="number" pos:line="310" pos:column="35">5</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="312" pos:column="1">typedef <type><name pos:line="312" pos:column="9">DWORD</name></type> <name pos:line="312" pos:column="15">VSFTPROPID</name>;</typedef>


<enum pos:line="315" pos:column="1">enum <name pos:line="315" pos:column="6">__VSFTNOTIFY</name>
    <block pos:line="316" pos:column="5">{	<decl><name pos:line="316" pos:column="9">VSFTNOTIFY_CURRENT</name>	<init pos:line="316" pos:column="33">= <expr><lit:literal type="number" pos:line="316" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="316" pos:column="36">,</op:operator>
	<decl><name pos:line="317" pos:column="9">VSFTNOTIFY_NOTCURRENT</name>	<init pos:line="317" pos:column="33">= <expr><lit:literal type="number" pos:line="317" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="317" pos:column="36">,</op:operator>
	<decl><name pos:line="318" pos:column="9">VSFTNOTIFY_STARTFIND</name>	<init pos:line="318" pos:column="33">= <expr><lit:literal type="number" pos:line="318" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="318" pos:column="36">,</op:operator>
	<decl><name pos:line="319" pos:column="9">VSFTNOTIFY_ENDFIND</name>	<init pos:line="319" pos:column="33">= <expr><lit:literal type="number" pos:line="319" pos:column="35">3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="321" pos:column="1">typedef <type><name pos:line="321" pos:column="9">DWORD</name></type> <name pos:line="321" pos:column="15">VSFTNOTIFY</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="325" pos:column="1">extern</specifier> <name pos:line="325" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="325" pos:column="22">__MIDL_itf_textfind_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="326" pos:column="1">extern</specifier> <name pos:line="326" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="326" pos:column="22">__MIDL_itf_textfind_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">ifndef</cpp:directive> <name pos:line="329" pos:column="9">__TextFind_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="330" pos:column="9">__TextFind_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="332" pos:column="1">/* library TextFind */</comment>
<comment type="block" pos:line="333" pos:column="1">/* [uuid] */</comment> 

<cpp:define pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="335" pos:column="9">SID_SVsTextSpanSet</name></cpp:macro> <cpp:value pos:line="335" pos:column="28">IID_IVsTextSpanSet</cpp:value></cpp:define>
<cpp:define pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="336" pos:column="9">SID_SVsRegisterFindScope</name></cpp:macro> <cpp:value pos:line="336" pos:column="34">IID_IVsRegisterFindScope</cpp:value></cpp:define>
<cpp:define pos:line="337" pos:column="1">#<cpp:directive pos:line="337" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="337" pos:column="9">SID_SVsTextImageUtilities</name></cpp:macro> <cpp:value pos:line="337" pos:column="35">IID_IVsTextImageUtilities</cpp:value></cpp:define>

<decl_stmt><decl><type><name pos:line="339" pos:column="1">EXTERN_C</name> <specifier pos:line="339" pos:column="10">const</specifier> <name pos:line="339" pos:column="16">IID</name></type> <name pos:line="339" pos:column="20">LIBID_TextFind</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="341" pos:column="1">#<cpp:directive pos:line="341" pos:column="2">ifndef</cpp:directive> <name pos:line="341" pos:column="9">__IVsTextSpanSet_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="342" pos:column="9">__IVsTextSpanSet_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="344" pos:column="1">/* interface IVsTextSpanSet */</comment>
<comment type="block" pos:line="345" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="348" pos:column="1">EXTERN_C</name> <specifier pos:line="348" pos:column="10">const</specifier> <name pos:line="348" pos:column="16">IID</name></type> <name pos:line="348" pos:column="20">IID_IVsTextSpanSet</name></decl>;</decl_stmt>

<cpp:if pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">if</cpp:directive> <expr><call><name pos:line="350" pos:column="5">defined</name><argument_list pos:line="350" pos:column="12">(<argument><expr><name pos:line="350" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="350" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="350" pos:column="29">!</op:operator><call><name pos:line="350" pos:column="30">defined</name><argument_list pos:line="350" pos:column="37">(<argument><expr><name pos:line="350" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="352" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="352" pos:column="19">(<argument pos:line="352" pos:column="20">"E6BBDFD0-C06A-11d2-936C-D714766E8B50"</argument>)</argument_list></macro>
    <label><name pos:line="353" pos:column="5">IVsTextSpanSet</name> :</label> <expr_stmt><expr pos:line="353" pos:column="22">public <name pos:line="353" pos:column="29">IUnknown</name>
    <block pos:line="354" pos:column="5">{
    <expr pos:line="355" pos:column="5">public<op:operator pos:line="355" pos:column="11">:</op:operator>
        virtual <name pos:line="356" pos:column="17">HRESULT</name> <name pos:line="356" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="356" pos:column="43">AttachTextImage</name><argument_list pos:line="356" pos:column="58">( 
            <comment type="block" pos:line="357" pos:column="13">/* [in] */</comment> <argument pos:line="357" pos:column="24">__RPC__in_opt IUnknown *pText</argument>)</argument_list></macro> <op:operator pos:line="357" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="357" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="359" pos:column="9">virtual <name pos:line="359" pos:column="17">HRESULT</name> <name pos:line="359" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="359" pos:column="43">Detach</name><argument_list pos:line="359" pos:column="49">( <argument><expr><name pos:line="359" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="359" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="359" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="361" pos:column="9">virtual <name pos:line="361" pos:column="17">HRESULT</name> <name pos:line="361" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="361" pos:column="43">SuspendTracking</name><argument_list pos:line="361" pos:column="58">( <argument><expr><name pos:line="361" pos:column="60">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="361" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="361" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="363" pos:column="9">virtual <name pos:line="363" pos:column="17">HRESULT</name> <name pos:line="363" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="363" pos:column="43">ResumeTracking</name><argument_list pos:line="363" pos:column="57">( <argument><expr><name pos:line="363" pos:column="59">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="363" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="363" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="365" pos:column="9">virtual <name pos:line="365" pos:column="17">HRESULT</name> <name pos:line="365" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="365" pos:column="43">Add</name><argument_list pos:line="365" pos:column="46">( 
            <comment type="block" pos:line="366" pos:column="13">/* [in] */</comment> <argument pos:line="366" pos:column="24">LONG cel</argument>,
            <comment type="block" pos:line="367" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="367" pos:column="33">__RPC__in_ecount_full(cel) const TextSpan *pSpan</argument>)</argument_list></macro> <op:operator pos:line="367" pos:column="83">=</op:operator> <lit:literal type="number" pos:line="367" pos:column="85">0</lit:literal></expr>;
        
        <expr pos:line="369" pos:column="9">virtual <name pos:line="369" pos:column="17">HRESULT</name> <name pos:line="369" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="369" pos:column="43">GetCount</name><argument_list pos:line="369" pos:column="51">( 
            <comment type="block" pos:line="370" pos:column="13">/* [retval][out] */</comment> <argument pos:line="370" pos:column="33">__RPC__out LONG *pcel</argument>)</argument_list></macro> <op:operator pos:line="370" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="370" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="372" pos:column="9">virtual <name pos:line="372" pos:column="17">HRESULT</name> <name pos:line="372" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="372" pos:column="43">GetAt</name><argument_list pos:line="372" pos:column="48">( 
            <comment type="block" pos:line="373" pos:column="13">/* [in] */</comment> <argument pos:line="373" pos:column="24">LONG iEl</argument>,
            <comment type="block" pos:line="374" pos:column="13">/* [retval][out] */</comment> <argument pos:line="374" pos:column="33">__RPC__out TextSpan *pSpan</argument>)</argument_list></macro> <op:operator pos:line="374" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="374" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="376" pos:column="9">virtual <name pos:line="376" pos:column="17">HRESULT</name> <name pos:line="376" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="376" pos:column="43">RemoveAll</name><argument_list pos:line="376" pos:column="52">( <argument><expr><name pos:line="376" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="376" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="376" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="378" pos:column="9">virtual <name pos:line="378" pos:column="17">HRESULT</name> <name pos:line="378" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="378" pos:column="43">Sort</name><argument_list pos:line="378" pos:column="47">( 
            <comment type="block" pos:line="379" pos:column="13">/* [in] */</comment> <argument pos:line="379" pos:column="24">DWORD SortOptions</argument>)</argument_list></macro> <op:operator pos:line="379" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="379" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="381" pos:column="9">virtual <name pos:line="381" pos:column="17">HRESULT</name> <name pos:line="381" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="381" pos:column="43">AddFromEnum</name><argument_list pos:line="381" pos:column="54">( 
            <comment type="block" pos:line="382" pos:column="13">/* [in] */</comment> <argument pos:line="382" pos:column="24">__RPC__in_opt IVsEnumTextSpans *pEnum</argument>)</argument_list></macro> <op:operator pos:line="382" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="382" pos:column="65">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="386" pos:column="1">#<cpp:directive pos:line="386" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="386" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="388" pos:column="5">typedef <type><struct pos:line="388" pos:column="13">struct <name pos:line="388" pos:column="20">IVsTextSpanSetVtbl</name>
    <block pos:line="389" pos:column="5">{<public type="default" pos:line="389" pos:column="6">
        <function_decl><type><name pos:line="390" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="392" pos:column="9">HRESULT</name></type> ( <name pos:line="392" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="392" pos:column="37">*</type:modifier><name pos:line="392" pos:column="38">QueryInterface</name> )<parameter_list pos:line="392" pos:column="54">( 
            <param><decl><type><name pos:line="393" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="393" pos:column="28">*</type:modifier></type> <name pos:line="393" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="394" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="394" pos:column="24">__RPC__in</name> <name pos:line="394" pos:column="34">REFIID</name></type> <name pos:line="394" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="395" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="396" pos:column="13">__RPC__deref_out</name>  <name pos:line="396" pos:column="31">void</name> <type:modifier pos:line="396" pos:column="36">*</type:modifier><type:modifier pos:line="396" pos:column="37">*</type:modifier></type><name pos:line="396" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="398" pos:column="9">ULONG</name></type> ( <name pos:line="398" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="398" pos:column="35">*</type:modifier><name pos:line="398" pos:column="36">AddRef</name> )<parameter_list pos:line="398" pos:column="44">( 
            <param><decl><type><name pos:line="399" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="399" pos:column="28">*</type:modifier></type> <name pos:line="399" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="401" pos:column="9">ULONG</name></type> ( <name pos:line="401" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="401" pos:column="35">*</type:modifier><name pos:line="401" pos:column="36">Release</name> )<parameter_list pos:line="401" pos:column="45">( 
            <param><decl><type><name pos:line="402" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="402" pos:column="28">*</type:modifier></type> <name pos:line="402" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="404" pos:column="9">HRESULT</name></type> ( <name pos:line="404" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="404" pos:column="37">*</type:modifier><name pos:line="404" pos:column="38">AttachTextImage</name> )<parameter_list pos:line="404" pos:column="55">( 
            <param><decl><type><name pos:line="405" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="405" pos:column="28">*</type:modifier></type> <name pos:line="405" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="406" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="406" pos:column="24">__RPC__in_opt</name> <name pos:line="406" pos:column="38">IUnknown</name> <type:modifier pos:line="406" pos:column="47">*</type:modifier></type><name pos:line="406" pos:column="48">pText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="408" pos:column="9">HRESULT</name></type> ( <name pos:line="408" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="408" pos:column="37">*</type:modifier><name pos:line="408" pos:column="38">Detach</name> )<parameter_list pos:line="408" pos:column="46">( 
            <param><decl><type><name pos:line="409" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="409" pos:column="28">*</type:modifier></type> <name pos:line="409" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="411" pos:column="9">HRESULT</name></type> ( <name pos:line="411" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="411" pos:column="37">*</type:modifier><name pos:line="411" pos:column="38">SuspendTracking</name> )<parameter_list pos:line="411" pos:column="55">( 
            <param><decl><type><name pos:line="412" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="412" pos:column="28">*</type:modifier></type> <name pos:line="412" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="414" pos:column="9">HRESULT</name></type> ( <name pos:line="414" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="414" pos:column="37">*</type:modifier><name pos:line="414" pos:column="38">ResumeTracking</name> )<parameter_list pos:line="414" pos:column="54">( 
            <param><decl><type><name pos:line="415" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="415" pos:column="28">*</type:modifier></type> <name pos:line="415" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="417" pos:column="9">HRESULT</name> <argument_list pos:line="417" pos:column="17">( <argument pos:line="417" pos:column="19">STDMETHODCALLTYPE *Add</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="417" pos:column="43">(</op:operator> 
            <name pos:line="418" pos:column="13">IVsTextSpanSet</name> <op:operator pos:line="418" pos:column="28">*</op:operator> <name pos:line="418" pos:column="30">This</name><op:operator pos:line="418" pos:column="34">,</op:operator>
            <comment type="block" pos:line="419" pos:column="13">/* [in] */</comment> <name pos:line="419" pos:column="24">LONG</name> <name pos:line="419" pos:column="29">cel</name><op:operator pos:line="419" pos:column="32">,</op:operator>
            <comment type="block" pos:line="420" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="420" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="420" pos:column="54">(<argument pos:line="420" pos:column="55">cel</argument>)</argument_list></macro> const <name pos:line="420" pos:column="66">TextSpan</name> <op:operator pos:line="420" pos:column="75">*</op:operator><name pos:line="420" pos:column="76">pSpan</name><op:operator pos:line="420" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="422" pos:column="9">HRESULT</name></type> ( <name pos:line="422" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="422" pos:column="37">*</type:modifier><name pos:line="422" pos:column="38">GetCount</name> )<parameter_list pos:line="422" pos:column="48">( 
            <param><decl><type><name pos:line="423" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="423" pos:column="28">*</type:modifier></type> <name pos:line="423" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="424" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="424" pos:column="33">__RPC__out</name> <name pos:line="424" pos:column="44">LONG</name> <type:modifier pos:line="424" pos:column="49">*</type:modifier></type><name pos:line="424" pos:column="50">pcel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="426" pos:column="9">HRESULT</name></type> ( <name pos:line="426" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="426" pos:column="37">*</type:modifier><name pos:line="426" pos:column="38">GetAt</name> )<parameter_list pos:line="426" pos:column="45">( 
            <param><decl><type><name pos:line="427" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="427" pos:column="28">*</type:modifier></type> <name pos:line="427" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="428" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="428" pos:column="24">LONG</name></type> <name pos:line="428" pos:column="29">iEl</name></decl></param>,
            <comment type="block" pos:line="429" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="429" pos:column="33">__RPC__out</name> <name pos:line="429" pos:column="44">TextSpan</name> <type:modifier pos:line="429" pos:column="53">*</type:modifier></type><name pos:line="429" pos:column="54">pSpan</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="431" pos:column="9">HRESULT</name></type> ( <name pos:line="431" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="431" pos:column="37">*</type:modifier><name pos:line="431" pos:column="38">RemoveAll</name> )<parameter_list pos:line="431" pos:column="49">( 
            <param><decl><type><name pos:line="432" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="432" pos:column="28">*</type:modifier></type> <name pos:line="432" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="434" pos:column="9">HRESULT</name></type> ( <name pos:line="434" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="434" pos:column="37">*</type:modifier><name pos:line="434" pos:column="38">Sort</name> )<parameter_list pos:line="434" pos:column="44">( 
            <param><decl><type><name pos:line="435" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="435" pos:column="28">*</type:modifier></type> <name pos:line="435" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="436" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="436" pos:column="24">DWORD</name></type> <name pos:line="436" pos:column="30">SortOptions</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="438" pos:column="9">HRESULT</name></type> ( <name pos:line="438" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="438" pos:column="37">*</type:modifier><name pos:line="438" pos:column="38">AddFromEnum</name> )<parameter_list pos:line="438" pos:column="51">( 
            <param><decl><type><name pos:line="439" pos:column="13">IVsTextSpanSet</name> <type:modifier pos:line="439" pos:column="28">*</type:modifier></type> <name pos:line="439" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="440" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="440" pos:column="24">__RPC__in_opt</name> <name pos:line="440" pos:column="38">IVsEnumTextSpans</name> <type:modifier pos:line="440" pos:column="55">*</type:modifier></type><name pos:line="440" pos:column="56">pEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="442" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="443" pos:column="7">IVsTextSpanSetVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="445" pos:column="5">interface</name></type> <name pos:line="445" pos:column="15">IVsTextSpanSet</name>
    <argument_list pos:line="446" pos:column="5">{
        <argument><expr><name pos:line="447" pos:column="9">CONST_VTBL</name> struct <name pos:line="447" pos:column="27">IVsTextSpanSetVtbl</name> <op:operator pos:line="447" pos:column="46">*</op:operator><name pos:line="447" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="452" pos:column="1">#<cpp:directive pos:line="452" pos:column="2">ifdef</cpp:directive> <name pos:line="452" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="455" pos:column="1">#<cpp:directive pos:line="455" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="455" pos:column="9">IVsTextSpanSet_QueryInterface</name><parameter_list pos:line="455" pos:column="38">(<param><type><name pos:line="455" pos:column="39">This</name></type></param>,<param><type><name pos:line="455" pos:column="44">riid</name></type></param>,<param><type><name pos:line="455" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="456" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="458" pos:column="1">#<cpp:directive pos:line="458" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="458" pos:column="9">IVsTextSpanSet_AddRef</name><parameter_list pos:line="458" pos:column="30">(<param><type><name pos:line="458" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="459" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="461" pos:column="1">#<cpp:directive pos:line="461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="461" pos:column="9">IVsTextSpanSet_Release</name><parameter_list pos:line="461" pos:column="31">(<param><type><name pos:line="461" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="462" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="465" pos:column="1">#<cpp:directive pos:line="465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="465" pos:column="9">IVsTextSpanSet_AttachTextImage</name><parameter_list pos:line="465" pos:column="39">(<param><type><name pos:line="465" pos:column="40">This</name></type></param>,<param><type><name pos:line="465" pos:column="45">pText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="466" pos:column="5">( (This)-&gt;lpVtbl -&gt; AttachTextImage(This,pText) )</cpp:value></cpp:define> 

<cpp:define pos:line="468" pos:column="1">#<cpp:directive pos:line="468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="468" pos:column="9">IVsTextSpanSet_Detach</name><parameter_list pos:line="468" pos:column="30">(<param><type><name pos:line="468" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="469" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="471" pos:column="1">#<cpp:directive pos:line="471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="471" pos:column="9">IVsTextSpanSet_SuspendTracking</name><parameter_list pos:line="471" pos:column="39">(<param><type><name pos:line="471" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="472" pos:column="5">( (This)-&gt;lpVtbl -&gt; SuspendTracking(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="474" pos:column="9">IVsTextSpanSet_ResumeTracking</name><parameter_list pos:line="474" pos:column="38">(<param><type><name pos:line="474" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="475" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResumeTracking(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="477" pos:column="1">#<cpp:directive pos:line="477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="477" pos:column="9">IVsTextSpanSet_Add</name><parameter_list pos:line="477" pos:column="27">(<param><type><name pos:line="477" pos:column="28">This</name></type></param>,<param><type><name pos:line="477" pos:column="33">cel</name></type></param>,<param><type><name pos:line="477" pos:column="37">pSpan</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="478" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add(This,cel,pSpan) )</cpp:value></cpp:define> 

<cpp:define pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="480" pos:column="9">IVsTextSpanSet_GetCount</name><parameter_list pos:line="480" pos:column="32">(<param><type><name pos:line="480" pos:column="33">This</name></type></param>,<param><type><name pos:line="480" pos:column="38">pcel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="481" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcel) )</cpp:value></cpp:define> 

<cpp:define pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="483" pos:column="9">IVsTextSpanSet_GetAt</name><parameter_list pos:line="483" pos:column="29">(<param><type><name pos:line="483" pos:column="30">This</name></type></param>,<param><type><name pos:line="483" pos:column="35">iEl</name></type></param>,<param><type><name pos:line="483" pos:column="39">pSpan</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="484" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAt(This,iEl,pSpan) )</cpp:value></cpp:define> 

<cpp:define pos:line="486" pos:column="1">#<cpp:directive pos:line="486" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="486" pos:column="9">IVsTextSpanSet_RemoveAll</name><parameter_list pos:line="486" pos:column="33">(<param><type><name pos:line="486" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="487" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveAll(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="489" pos:column="1">#<cpp:directive pos:line="489" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="489" pos:column="9">IVsTextSpanSet_Sort</name><parameter_list pos:line="489" pos:column="28">(<param><type><name pos:line="489" pos:column="29">This</name></type></param>,<param><type><name pos:line="489" pos:column="34">SortOptions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="490" pos:column="5">( (This)-&gt;lpVtbl -&gt; Sort(This,SortOptions) )</cpp:value></cpp:define> 

<cpp:define pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="492" pos:column="9">IVsTextSpanSet_AddFromEnum</name><parameter_list pos:line="492" pos:column="35">(<param><type><name pos:line="492" pos:column="36">This</name></type></param>,<param><type><name pos:line="492" pos:column="41">pEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="493" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromEnum(This,pEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="495" pos:column="1">#<cpp:directive pos:line="495" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="495" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="498" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="503" pos:column="9">/* __IVsTextSpanSet_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">ifndef</cpp:directive> <name pos:line="506" pos:column="9">__IVsFinder_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="507" pos:column="9">__IVsFinder_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="509" pos:column="1">/* interface IVsFinder */</comment>
<comment type="block" pos:line="510" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="513" pos:column="1">EXTERN_C</name> <specifier pos:line="513" pos:column="10">const</specifier> <name pos:line="513" pos:column="16">IID</name></type> <name pos:line="513" pos:column="20">IID_IVsFinder</name></decl>;</decl_stmt>

<cpp:if pos:line="515" pos:column="1">#<cpp:directive pos:line="515" pos:column="2">if</cpp:directive> <expr><call><name pos:line="515" pos:column="5">defined</name><argument_list pos:line="515" pos:column="12">(<argument><expr><name pos:line="515" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="515" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="515" pos:column="29">!</op:operator><call><name pos:line="515" pos:column="30">defined</name><argument_list pos:line="515" pos:column="37">(<argument><expr><name pos:line="515" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="517" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="517" pos:column="19">(<argument pos:line="517" pos:column="20">"D0C79C30-C06A-11d2-936C-D714766E8B50"</argument>)</argument_list></macro>
    <label><name pos:line="518" pos:column="5">IVsFinder</name> :</label> <expr_stmt><expr pos:line="518" pos:column="17">public <name pos:line="518" pos:column="24">IUnknown</name>
    <block pos:line="519" pos:column="5">{
    <expr pos:line="520" pos:column="5">public<op:operator pos:line="520" pos:column="11">:</op:operator>
        virtual <name pos:line="521" pos:column="17">HRESULT</name> <name pos:line="521" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="521" pos:column="43">AttachTextImage</name><argument_list pos:line="521" pos:column="58">( 
            <comment type="block" pos:line="522" pos:column="13">/* [in] */</comment> <argument pos:line="522" pos:column="24">__RPC__in_opt IUnknown *pTextImage</argument>)</argument_list></macro> <op:operator pos:line="522" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="522" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="524" pos:column="9">virtual <name pos:line="524" pos:column="17">HRESULT</name> <name pos:line="524" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="524" pos:column="43">Detach</name><argument_list pos:line="524" pos:column="49">( <argument><expr><name pos:line="524" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="524" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="524" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="526" pos:column="9">virtual <name pos:line="526" pos:column="17">HRESULT</name> <name pos:line="526" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="526" pos:column="43">SetScope</name><argument_list pos:line="526" pos:column="51">( 
            <comment type="block" pos:line="527" pos:column="13">/* [in] */</comment> <argument pos:line="527" pos:column="24">__RPC__in_opt IVsTextSpanSet *pSpanScope</argument>)</argument_list></macro> <op:operator pos:line="527" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="527" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="529" pos:column="9">virtual <name pos:line="529" pos:column="17">HRESULT</name> <name pos:line="529" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="529" pos:column="43">Init</name><argument_list pos:line="529" pos:column="47">( 
            <comment type="block" pos:line="530" pos:column="13">/* [in] */</comment> <argument pos:line="530" pos:column="24">DWORD grfOptions</argument>,
            <comment type="block" pos:line="531" pos:column="13">/* [in] */</comment> <argument pos:line="531" pos:column="24">__RPC__in LPCOLESTR pszFindPattern</argument>,
            <comment type="block" pos:line="532" pos:column="13">/* [in] */</comment> <argument pos:line="532" pos:column="24">BOOL fReinit</argument>,
            <comment type="block" pos:line="533" pos:column="13">/* [retval][out] */</comment> <argument pos:line="533" pos:column="33">__RPC__out VSFINDERROR *pResult</argument>)</argument_list></macro> <op:operator pos:line="533" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="533" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="535" pos:column="9">virtual <name pos:line="535" pos:column="17">HRESULT</name> <name pos:line="535" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="535" pos:column="43">SetPosition</name><argument_list pos:line="535" pos:column="54">( 
            <comment type="block" pos:line="536" pos:column="13">/* [in] */</comment> <argument pos:line="536" pos:column="24">VSFINDPOS fp</argument>,
            <comment type="block" pos:line="537" pos:column="13">/* [in] */</comment> <argument pos:line="537" pos:column="24">TextAddress ta</argument>)</argument_list></macro> <op:operator pos:line="537" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="537" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="539" pos:column="9">virtual <name pos:line="539" pos:column="17">HRESULT</name> <name pos:line="539" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="539" pos:column="43">Find</name><argument_list pos:line="539" pos:column="47">( 
            <comment type="block" pos:line="540" pos:column="13">/* [in] */</comment> <argument pos:line="540" pos:column="24">VSFINDHOW grfFindHow</argument>,
            <comment type="block" pos:line="541" pos:column="13">/* [out][in] */</comment> <argument pos:line="541" pos:column="29">__RPC__inout TextSpan *ptsMatch</argument>,
            <comment type="block" pos:line="542" pos:column="13">/* [retval][out] */</comment> <argument pos:line="542" pos:column="33">__RPC__out VSFINDSTATE *pgrfResult</argument>)</argument_list></macro> <op:operator pos:line="542" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="542" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="544" pos:column="9">virtual <name pos:line="544" pos:column="17">HRESULT</name> <name pos:line="544" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="544" pos:column="43">GetMatch</name><argument_list pos:line="544" pos:column="51">( 
            <comment type="block" pos:line="545" pos:column="13">/* [retval][out] */</comment> <argument pos:line="545" pos:column="33">__RPC__out TextSpan *pts</argument>)</argument_list></macro> <op:operator pos:line="545" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="545" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="547" pos:column="9">virtual <name pos:line="547" pos:column="17">HRESULT</name> <name pos:line="547" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="547" pos:column="43">GetMatchedSpans</name><argument_list pos:line="547" pos:column="58">( 
            <comment type="block" pos:line="548" pos:column="13">/* [retval][out] */</comment> <argument pos:line="548" pos:column="33">__RPC__deref_out_opt IVsTextSpanSet **ppSpans</argument>)</argument_list></macro> <op:operator pos:line="548" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="548" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="550" pos:column="9">virtual <name pos:line="550" pos:column="17">HRESULT</name> <name pos:line="550" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="550" pos:column="43">GetTaggedSpans</name><argument_list pos:line="550" pos:column="57">( 
            <comment type="block" pos:line="551" pos:column="13">/* [retval][out] */</comment> <argument pos:line="551" pos:column="33">__RPC__deref_out_opt IVsTextSpanSet **ppTags</argument>)</argument_list></macro> <op:operator pos:line="551" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="551" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="553" pos:column="9">virtual <name pos:line="553" pos:column="17">HRESULT</name> <name pos:line="553" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="553" pos:column="43">GetState</name><argument_list pos:line="553" pos:column="51">( 
            <comment type="block" pos:line="554" pos:column="13">/* [out] */</comment> <argument pos:line="554" pos:column="25">__RPC__out LONG *pcFound</argument>,
            <comment type="block" pos:line="555" pos:column="13">/* [out] */</comment> <argument pos:line="555" pos:column="25">__RPC__out VSFINDERROR *pResult</argument>,
            <comment type="block" pos:line="556" pos:column="13">/* [retval][out] */</comment> <argument pos:line="556" pos:column="33">__RPC__out VSFINDSTATE *pState</argument>)</argument_list></macro> <op:operator pos:line="556" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="556" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="560" pos:column="1">#<cpp:directive pos:line="560" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="560" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="562" pos:column="5">typedef <type><struct pos:line="562" pos:column="13">struct <name pos:line="562" pos:column="20">IVsFinderVtbl</name>
    <block pos:line="563" pos:column="5">{<public type="default" pos:line="563" pos:column="6">
        <function_decl><type><name pos:line="564" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="566" pos:column="9">HRESULT</name></type> ( <name pos:line="566" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="566" pos:column="37">*</type:modifier><name pos:line="566" pos:column="38">QueryInterface</name> )<parameter_list pos:line="566" pos:column="54">( 
            <param><decl><type><name pos:line="567" pos:column="13">IVsFinder</name> <type:modifier pos:line="567" pos:column="23">*</type:modifier></type> <name pos:line="567" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="568" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="568" pos:column="24">__RPC__in</name> <name pos:line="568" pos:column="34">REFIID</name></type> <name pos:line="568" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="569" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="570" pos:column="13">__RPC__deref_out</name>  <name pos:line="570" pos:column="31">void</name> <type:modifier pos:line="570" pos:column="36">*</type:modifier><type:modifier pos:line="570" pos:column="37">*</type:modifier></type><name pos:line="570" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="572" pos:column="9">ULONG</name></type> ( <name pos:line="572" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="572" pos:column="35">*</type:modifier><name pos:line="572" pos:column="36">AddRef</name> )<parameter_list pos:line="572" pos:column="44">( 
            <param><decl><type><name pos:line="573" pos:column="13">IVsFinder</name> <type:modifier pos:line="573" pos:column="23">*</type:modifier></type> <name pos:line="573" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="575" pos:column="9">ULONG</name></type> ( <name pos:line="575" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="575" pos:column="35">*</type:modifier><name pos:line="575" pos:column="36">Release</name> )<parameter_list pos:line="575" pos:column="45">( 
            <param><decl><type><name pos:line="576" pos:column="13">IVsFinder</name> <type:modifier pos:line="576" pos:column="23">*</type:modifier></type> <name pos:line="576" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="578" pos:column="9">HRESULT</name></type> ( <name pos:line="578" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="578" pos:column="37">*</type:modifier><name pos:line="578" pos:column="38">AttachTextImage</name> )<parameter_list pos:line="578" pos:column="55">( 
            <param><decl><type><name pos:line="579" pos:column="13">IVsFinder</name> <type:modifier pos:line="579" pos:column="23">*</type:modifier></type> <name pos:line="579" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="580" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="580" pos:column="24">__RPC__in_opt</name> <name pos:line="580" pos:column="38">IUnknown</name> <type:modifier pos:line="580" pos:column="47">*</type:modifier></type><name pos:line="580" pos:column="48">pTextImage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="582" pos:column="9">HRESULT</name></type> ( <name pos:line="582" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="582" pos:column="37">*</type:modifier><name pos:line="582" pos:column="38">Detach</name> )<parameter_list pos:line="582" pos:column="46">( 
            <param><decl><type><name pos:line="583" pos:column="13">IVsFinder</name> <type:modifier pos:line="583" pos:column="23">*</type:modifier></type> <name pos:line="583" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="585" pos:column="9">HRESULT</name></type> ( <name pos:line="585" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="585" pos:column="37">*</type:modifier><name pos:line="585" pos:column="38">SetScope</name> )<parameter_list pos:line="585" pos:column="48">( 
            <param><decl><type><name pos:line="586" pos:column="13">IVsFinder</name> <type:modifier pos:line="586" pos:column="23">*</type:modifier></type> <name pos:line="586" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="587" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="587" pos:column="24">__RPC__in_opt</name> <name pos:line="587" pos:column="38">IVsTextSpanSet</name> <type:modifier pos:line="587" pos:column="53">*</type:modifier></type><name pos:line="587" pos:column="54">pSpanScope</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="589" pos:column="9">HRESULT</name></type> ( <name pos:line="589" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="589" pos:column="37">*</type:modifier><name pos:line="589" pos:column="38">Init</name> )<parameter_list pos:line="589" pos:column="44">( 
            <param><decl><type><name pos:line="590" pos:column="13">IVsFinder</name> <type:modifier pos:line="590" pos:column="23">*</type:modifier></type> <name pos:line="590" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="591" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="591" pos:column="24">DWORD</name></type> <name pos:line="591" pos:column="30">grfOptions</name></decl></param>,
            <comment type="block" pos:line="592" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="592" pos:column="24">__RPC__in</name> <name pos:line="592" pos:column="34">LPCOLESTR</name></type> <name pos:line="592" pos:column="44">pszFindPattern</name></decl></param>,
            <comment type="block" pos:line="593" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="593" pos:column="24">BOOL</name></type> <name pos:line="593" pos:column="29">fReinit</name></decl></param>,
            <comment type="block" pos:line="594" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="594" pos:column="33">__RPC__out</name> <name pos:line="594" pos:column="44">VSFINDERROR</name> <type:modifier pos:line="594" pos:column="56">*</type:modifier></type><name pos:line="594" pos:column="57">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="596" pos:column="9">HRESULT</name></type> ( <name pos:line="596" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="596" pos:column="37">*</type:modifier><name pos:line="596" pos:column="38">SetPosition</name> )<parameter_list pos:line="596" pos:column="51">( 
            <param><decl><type><name pos:line="597" pos:column="13">IVsFinder</name> <type:modifier pos:line="597" pos:column="23">*</type:modifier></type> <name pos:line="597" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="598" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="598" pos:column="24">VSFINDPOS</name></type> <name pos:line="598" pos:column="34">fp</name></decl></param>,
            <comment type="block" pos:line="599" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="599" pos:column="24">TextAddress</name></type> <name pos:line="599" pos:column="36">ta</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="601" pos:column="9">HRESULT</name></type> ( <name pos:line="601" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="601" pos:column="37">*</type:modifier><name pos:line="601" pos:column="38">Find</name> )<parameter_list pos:line="601" pos:column="44">( 
            <param><decl><type><name pos:line="602" pos:column="13">IVsFinder</name> <type:modifier pos:line="602" pos:column="23">*</type:modifier></type> <name pos:line="602" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="603" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="603" pos:column="24">VSFINDHOW</name></type> <name pos:line="603" pos:column="34">grfFindHow</name></decl></param>,
            <comment type="block" pos:line="604" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="604" pos:column="29">__RPC__inout</name> <name pos:line="604" pos:column="42">TextSpan</name> <type:modifier pos:line="604" pos:column="51">*</type:modifier></type><name pos:line="604" pos:column="52">ptsMatch</name></decl></param>,
            <comment type="block" pos:line="605" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="605" pos:column="33">__RPC__out</name> <name pos:line="605" pos:column="44">VSFINDSTATE</name> <type:modifier pos:line="605" pos:column="56">*</type:modifier></type><name pos:line="605" pos:column="57">pgrfResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="607" pos:column="9">HRESULT</name></type> ( <name pos:line="607" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="607" pos:column="37">*</type:modifier><name pos:line="607" pos:column="38">GetMatch</name> )<parameter_list pos:line="607" pos:column="48">( 
            <param><decl><type><name pos:line="608" pos:column="13">IVsFinder</name> <type:modifier pos:line="608" pos:column="23">*</type:modifier></type> <name pos:line="608" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="609" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="609" pos:column="33">__RPC__out</name> <name pos:line="609" pos:column="44">TextSpan</name> <type:modifier pos:line="609" pos:column="53">*</type:modifier></type><name pos:line="609" pos:column="54">pts</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="611" pos:column="9">HRESULT</name></type> ( <name pos:line="611" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="611" pos:column="37">*</type:modifier><name pos:line="611" pos:column="38">GetMatchedSpans</name> )<parameter_list pos:line="611" pos:column="55">( 
            <param><decl><type><name pos:line="612" pos:column="13">IVsFinder</name> <type:modifier pos:line="612" pos:column="23">*</type:modifier></type> <name pos:line="612" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="613" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="613" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="613" pos:column="54">IVsTextSpanSet</name> <type:modifier pos:line="613" pos:column="69">*</type:modifier><type:modifier pos:line="613" pos:column="70">*</type:modifier></type><name pos:line="613" pos:column="71">ppSpans</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="615" pos:column="9">HRESULT</name></type> ( <name pos:line="615" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="615" pos:column="37">*</type:modifier><name pos:line="615" pos:column="38">GetTaggedSpans</name> )<parameter_list pos:line="615" pos:column="54">( 
            <param><decl><type><name pos:line="616" pos:column="13">IVsFinder</name> <type:modifier pos:line="616" pos:column="23">*</type:modifier></type> <name pos:line="616" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="617" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="617" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="617" pos:column="54">IVsTextSpanSet</name> <type:modifier pos:line="617" pos:column="69">*</type:modifier><type:modifier pos:line="617" pos:column="70">*</type:modifier></type><name pos:line="617" pos:column="71">ppTags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="619" pos:column="9">HRESULT</name></type> ( <name pos:line="619" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="619" pos:column="37">*</type:modifier><name pos:line="619" pos:column="38">GetState</name> )<parameter_list pos:line="619" pos:column="48">( 
            <param><decl><type><name pos:line="620" pos:column="13">IVsFinder</name> <type:modifier pos:line="620" pos:column="23">*</type:modifier></type> <name pos:line="620" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="621" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="621" pos:column="25">__RPC__out</name> <name pos:line="621" pos:column="36">LONG</name> <type:modifier pos:line="621" pos:column="41">*</type:modifier></type><name pos:line="621" pos:column="42">pcFound</name></decl></param>,
            <comment type="block" pos:line="622" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="622" pos:column="25">__RPC__out</name> <name pos:line="622" pos:column="36">VSFINDERROR</name> <type:modifier pos:line="622" pos:column="48">*</type:modifier></type><name pos:line="622" pos:column="49">pResult</name></decl></param>,
            <comment type="block" pos:line="623" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="623" pos:column="33">__RPC__out</name> <name pos:line="623" pos:column="44">VSFINDSTATE</name> <type:modifier pos:line="623" pos:column="56">*</type:modifier></type><name pos:line="623" pos:column="57">pState</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="625" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="626" pos:column="7">IVsFinderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="628" pos:column="5">interface</name></type> <name pos:line="628" pos:column="15">IVsFinder</name>
    <argument_list pos:line="629" pos:column="5">{
        <argument><expr><name pos:line="630" pos:column="9">CONST_VTBL</name> struct <name pos:line="630" pos:column="27">IVsFinderVtbl</name> <op:operator pos:line="630" pos:column="41">*</op:operator><name pos:line="630" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="635" pos:column="1">#<cpp:directive pos:line="635" pos:column="2">ifdef</cpp:directive> <name pos:line="635" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="638" pos:column="1">#<cpp:directive pos:line="638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="638" pos:column="9">IVsFinder_QueryInterface</name><parameter_list pos:line="638" pos:column="33">(<param><type><name pos:line="638" pos:column="34">This</name></type></param>,<param><type><name pos:line="638" pos:column="39">riid</name></type></param>,<param><type><name pos:line="638" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="639" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="641" pos:column="1">#<cpp:directive pos:line="641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="641" pos:column="9">IVsFinder_AddRef</name><parameter_list pos:line="641" pos:column="25">(<param><type><name pos:line="641" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="642" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="644" pos:column="1">#<cpp:directive pos:line="644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="644" pos:column="9">IVsFinder_Release</name><parameter_list pos:line="644" pos:column="26">(<param><type><name pos:line="644" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="645" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="648" pos:column="1">#<cpp:directive pos:line="648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="648" pos:column="9">IVsFinder_AttachTextImage</name><parameter_list pos:line="648" pos:column="34">(<param><type><name pos:line="648" pos:column="35">This</name></type></param>,<param><type><name pos:line="648" pos:column="40">pTextImage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="649" pos:column="5">( (This)-&gt;lpVtbl -&gt; AttachTextImage(This,pTextImage) )</cpp:value></cpp:define> 

<cpp:define pos:line="651" pos:column="1">#<cpp:directive pos:line="651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="651" pos:column="9">IVsFinder_Detach</name><parameter_list pos:line="651" pos:column="25">(<param><type><name pos:line="651" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="652" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="654" pos:column="1">#<cpp:directive pos:line="654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="654" pos:column="9">IVsFinder_SetScope</name><parameter_list pos:line="654" pos:column="27">(<param><type><name pos:line="654" pos:column="28">This</name></type></param>,<param><type><name pos:line="654" pos:column="33">pSpanScope</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="655" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetScope(This,pSpanScope) )</cpp:value></cpp:define> 

<cpp:define pos:line="657" pos:column="1">#<cpp:directive pos:line="657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="657" pos:column="9">IVsFinder_Init</name><parameter_list pos:line="657" pos:column="23">(<param><type><name pos:line="657" pos:column="24">This</name></type></param>,<param><type><name pos:line="657" pos:column="29">grfOptions</name></type></param>,<param><type><name pos:line="657" pos:column="40">pszFindPattern</name></type></param>,<param><type><name pos:line="657" pos:column="55">fReinit</name></type></param>,<param><type><name pos:line="657" pos:column="63">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="658" pos:column="5">( (This)-&gt;lpVtbl -&gt; Init(This,grfOptions,pszFindPattern,fReinit,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="660" pos:column="1">#<cpp:directive pos:line="660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="660" pos:column="9">IVsFinder_SetPosition</name><parameter_list pos:line="660" pos:column="30">(<param><type><name pos:line="660" pos:column="31">This</name></type></param>,<param><type><name pos:line="660" pos:column="36">fp</name></type></param>,<param><type><name pos:line="660" pos:column="39">ta</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="661" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetPosition(This,fp,ta) )</cpp:value></cpp:define> 

<cpp:define pos:line="663" pos:column="1">#<cpp:directive pos:line="663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="663" pos:column="9">IVsFinder_Find</name><parameter_list pos:line="663" pos:column="23">(<param><type><name pos:line="663" pos:column="24">This</name></type></param>,<param><type><name pos:line="663" pos:column="29">grfFindHow</name></type></param>,<param><type><name pos:line="663" pos:column="40">ptsMatch</name></type></param>,<param><type><name pos:line="663" pos:column="49">pgrfResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="664" pos:column="5">( (This)-&gt;lpVtbl -&gt; Find(This,grfFindHow,ptsMatch,pgrfResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="666" pos:column="1">#<cpp:directive pos:line="666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="666" pos:column="9">IVsFinder_GetMatch</name><parameter_list pos:line="666" pos:column="27">(<param><type><name pos:line="666" pos:column="28">This</name></type></param>,<param><type><name pos:line="666" pos:column="33">pts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="667" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMatch(This,pts) )</cpp:value></cpp:define> 

<cpp:define pos:line="669" pos:column="1">#<cpp:directive pos:line="669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="669" pos:column="9">IVsFinder_GetMatchedSpans</name><parameter_list pos:line="669" pos:column="34">(<param><type><name pos:line="669" pos:column="35">This</name></type></param>,<param><type><name pos:line="669" pos:column="40">ppSpans</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="670" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMatchedSpans(This,ppSpans) )</cpp:value></cpp:define> 

<cpp:define pos:line="672" pos:column="1">#<cpp:directive pos:line="672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="672" pos:column="9">IVsFinder_GetTaggedSpans</name><parameter_list pos:line="672" pos:column="33">(<param><type><name pos:line="672" pos:column="34">This</name></type></param>,<param><type><name pos:line="672" pos:column="39">ppTags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="673" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTaggedSpans(This,ppTags) )</cpp:value></cpp:define> 

<cpp:define pos:line="675" pos:column="1">#<cpp:directive pos:line="675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="675" pos:column="9">IVsFinder_GetState</name><parameter_list pos:line="675" pos:column="27">(<param><type><name pos:line="675" pos:column="28">This</name></type></param>,<param><type><name pos:line="675" pos:column="33">pcFound</name></type></param>,<param><type><name pos:line="675" pos:column="41">pResult</name></type></param>,<param><type><name pos:line="675" pos:column="49">pState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="676" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetState(This,pcFound,pResult,pState) )</cpp:value></cpp:define> 

<cpp:endif pos:line="678" pos:column="1">#<cpp:directive pos:line="678" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="678" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="681" pos:column="1">#<cpp:directive pos:line="681" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="681" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="686" pos:column="1">#<cpp:directive pos:line="686" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="686" pos:column="9">/* __IVsFinder_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="689" pos:column="1">#<cpp:directive pos:line="689" pos:column="2">ifndef</cpp:directive> <name pos:line="689" pos:column="9">__IVsFindHelper_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="690" pos:column="1">#<cpp:directive pos:line="690" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="690" pos:column="9">__IVsFindHelper_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="692" pos:column="1">/* interface IVsFindHelper */</comment>
<comment type="block" pos:line="693" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="696" pos:column="1">EXTERN_C</name> <specifier pos:line="696" pos:column="10">const</specifier> <name pos:line="696" pos:column="16">IID</name></type> <name pos:line="696" pos:column="20">IID_IVsFindHelper</name></decl>;</decl_stmt>

<cpp:if pos:line="698" pos:column="1">#<cpp:directive pos:line="698" pos:column="2">if</cpp:directive> <expr><call><name pos:line="698" pos:column="5">defined</name><argument_list pos:line="698" pos:column="12">(<argument><expr><name pos:line="698" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="698" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="698" pos:column="29">!</op:operator><call><name pos:line="698" pos:column="30">defined</name><argument_list pos:line="698" pos:column="37">(<argument><expr><name pos:line="698" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="700" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="700" pos:column="19">(<argument pos:line="700" pos:column="20">"BB02E777-EC3E-479f-980E-8E36B9617DCA"</argument>)</argument_list></macro>
    <label><name pos:line="701" pos:column="5">IVsFindHelper</name> :</label> <expr_stmt><expr pos:line="701" pos:column="21">public <name pos:line="701" pos:column="28">IUnknown</name>
    <block pos:line="702" pos:column="5">{
    <expr pos:line="703" pos:column="5">public<op:operator pos:line="703" pos:column="11">:</op:operator>
        virtual <name pos:line="704" pos:column="17">HRESULT</name> <name pos:line="704" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="704" pos:column="43">FindInText</name><argument_list pos:line="704" pos:column="53">( 
            <comment type="block" pos:line="705" pos:column="13">/* [in] */</comment> <argument pos:line="705" pos:column="24">__RPC__in LPCOLESTR pszFind</argument>,
            <comment type="block" pos:line="706" pos:column="13">/* [in] */</comment> <argument pos:line="706" pos:column="24">__RPC__in LPCOLESTR pszReplace</argument>,
            <comment type="block" pos:line="707" pos:column="13">/* [in] */</comment> <argument pos:line="707" pos:column="24">VSFINDOPTIONS grfFindOptions</argument>,
            <comment type="block" pos:line="708" pos:column="13">/* [in] */</comment> <argument pos:line="708" pos:column="24">VSFINDBUFFERFLAGS grfBufferFlags</argument>,
            <comment type="block" pos:line="709" pos:column="13">/* [in] */</comment> <argument pos:line="709" pos:column="24">ULONG cchText</argument>,
            <comment type="block" pos:line="710" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="710" pos:column="33">__RPC__in_ecount_full(cchText) LPCOLESTR pchText</argument>,
            <comment type="block" pos:line="711" pos:column="13">/* [out] */</comment> <argument pos:line="711" pos:column="25">__RPC__out ULONG *piFound</argument>,
            <comment type="block" pos:line="712" pos:column="13">/* [out] */</comment> <argument pos:line="712" pos:column="25">__RPC__out ULONG *pcchFound</argument>,
            <comment type="block" pos:line="713" pos:column="13">/* [out] */</comment> <argument pos:line="713" pos:column="25">__RPC__deref_out_opt BSTR *pbstrReplaceText</argument>,
            <comment type="block" pos:line="714" pos:column="13">/* [retval][out] */</comment> <argument pos:line="714" pos:column="33">__RPC__out BOOL *pfFound</argument>)</argument_list></macro> <op:operator pos:line="714" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="714" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="718" pos:column="1">#<cpp:directive pos:line="718" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="718" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="720" pos:column="5">typedef <type><struct pos:line="720" pos:column="13">struct <name pos:line="720" pos:column="20">IVsFindHelperVtbl</name>
    <block pos:line="721" pos:column="5">{<public type="default" pos:line="721" pos:column="6">
        <function_decl><type><name pos:line="722" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="724" pos:column="9">HRESULT</name></type> ( <name pos:line="724" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="724" pos:column="37">*</type:modifier><name pos:line="724" pos:column="38">QueryInterface</name> )<parameter_list pos:line="724" pos:column="54">( 
            <param><decl><type><name pos:line="725" pos:column="13">IVsFindHelper</name> <type:modifier pos:line="725" pos:column="27">*</type:modifier></type> <name pos:line="725" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="726" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="726" pos:column="24">__RPC__in</name> <name pos:line="726" pos:column="34">REFIID</name></type> <name pos:line="726" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="727" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="728" pos:column="13">__RPC__deref_out</name>  <name pos:line="728" pos:column="31">void</name> <type:modifier pos:line="728" pos:column="36">*</type:modifier><type:modifier pos:line="728" pos:column="37">*</type:modifier></type><name pos:line="728" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="730" pos:column="9">ULONG</name></type> ( <name pos:line="730" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="730" pos:column="35">*</type:modifier><name pos:line="730" pos:column="36">AddRef</name> )<parameter_list pos:line="730" pos:column="44">( 
            <param><decl><type><name pos:line="731" pos:column="13">IVsFindHelper</name> <type:modifier pos:line="731" pos:column="27">*</type:modifier></type> <name pos:line="731" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="733" pos:column="9">ULONG</name></type> ( <name pos:line="733" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="733" pos:column="35">*</type:modifier><name pos:line="733" pos:column="36">Release</name> )<parameter_list pos:line="733" pos:column="45">( 
            <param><decl><type><name pos:line="734" pos:column="13">IVsFindHelper</name> <type:modifier pos:line="734" pos:column="27">*</type:modifier></type> <name pos:line="734" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="736" pos:column="9">HRESULT</name> <argument_list pos:line="736" pos:column="17">( <argument pos:line="736" pos:column="19">STDMETHODCALLTYPE *FindInText</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="736" pos:column="50">(</op:operator> 
            <name pos:line="737" pos:column="13">IVsFindHelper</name> <op:operator pos:line="737" pos:column="27">*</op:operator> <name pos:line="737" pos:column="29">This</name><op:operator pos:line="737" pos:column="33">,</op:operator>
            <comment type="block" pos:line="738" pos:column="13">/* [in] */</comment> <name pos:line="738" pos:column="24">__RPC__in</name> <name pos:line="738" pos:column="34">LPCOLESTR</name> <name pos:line="738" pos:column="44">pszFind</name><op:operator pos:line="738" pos:column="51">,</op:operator>
            <comment type="block" pos:line="739" pos:column="13">/* [in] */</comment> <name pos:line="739" pos:column="24">__RPC__in</name> <name pos:line="739" pos:column="34">LPCOLESTR</name> <name pos:line="739" pos:column="44">pszReplace</name><op:operator pos:line="739" pos:column="54">,</op:operator>
            <comment type="block" pos:line="740" pos:column="13">/* [in] */</comment> <name pos:line="740" pos:column="24">VSFINDOPTIONS</name> <name pos:line="740" pos:column="38">grfFindOptions</name><op:operator pos:line="740" pos:column="52">,</op:operator>
            <comment type="block" pos:line="741" pos:column="13">/* [in] */</comment> <name pos:line="741" pos:column="24">VSFINDBUFFERFLAGS</name> <name pos:line="741" pos:column="42">grfBufferFlags</name><op:operator pos:line="741" pos:column="56">,</op:operator>
            <comment type="block" pos:line="742" pos:column="13">/* [in] */</comment> <name pos:line="742" pos:column="24">ULONG</name> <name pos:line="742" pos:column="30">cchText</name><op:operator pos:line="742" pos:column="37">,</op:operator>
            <comment type="block" pos:line="743" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="743" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="743" pos:column="54">(<argument pos:line="743" pos:column="55">cchText</argument>)</argument_list></macro> <name pos:line="743" pos:column="64">LPCOLESTR</name> <name pos:line="743" pos:column="74">pchText</name><op:operator pos:line="743" pos:column="81">,</op:operator>
            <comment type="block" pos:line="744" pos:column="13">/* [out] */</comment> <name pos:line="744" pos:column="25">__RPC__out</name> <name pos:line="744" pos:column="36">ULONG</name> <op:operator pos:line="744" pos:column="42">*</op:operator><name pos:line="744" pos:column="43">piFound</name><op:operator pos:line="744" pos:column="50">,</op:operator>
            <comment type="block" pos:line="745" pos:column="13">/* [out] */</comment> <name pos:line="745" pos:column="25">__RPC__out</name> <name pos:line="745" pos:column="36">ULONG</name> <op:operator pos:line="745" pos:column="42">*</op:operator><name pos:line="745" pos:column="43">pcchFound</name><op:operator pos:line="745" pos:column="52">,</op:operator>
            <comment type="block" pos:line="746" pos:column="13">/* [out] */</comment> <name pos:line="746" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="746" pos:column="46">BSTR</name> <op:operator pos:line="746" pos:column="51">*</op:operator><name pos:line="746" pos:column="52">pbstrReplaceText</name><op:operator pos:line="746" pos:column="68">,</op:operator>
            <comment type="block" pos:line="747" pos:column="13">/* [retval][out] */</comment> <name pos:line="747" pos:column="33">__RPC__out</name> <name pos:line="747" pos:column="44">BOOL</name> <op:operator pos:line="747" pos:column="49">*</op:operator><name pos:line="747" pos:column="50">pfFound</name><op:operator pos:line="747" pos:column="57">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="749" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="750" pos:column="7">IVsFindHelperVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="752" pos:column="5">interface</name></type> <name pos:line="752" pos:column="15">IVsFindHelper</name>
    <argument_list pos:line="753" pos:column="5">{
        <argument><expr><name pos:line="754" pos:column="9">CONST_VTBL</name> struct <name pos:line="754" pos:column="27">IVsFindHelperVtbl</name> <op:operator pos:line="754" pos:column="45">*</op:operator><name pos:line="754" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="759" pos:column="1">#<cpp:directive pos:line="759" pos:column="2">ifdef</cpp:directive> <name pos:line="759" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="762" pos:column="1">#<cpp:directive pos:line="762" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="762" pos:column="9">IVsFindHelper_QueryInterface</name><parameter_list pos:line="762" pos:column="37">(<param><type><name pos:line="762" pos:column="38">This</name></type></param>,<param><type><name pos:line="762" pos:column="43">riid</name></type></param>,<param><type><name pos:line="762" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="763" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="765" pos:column="1">#<cpp:directive pos:line="765" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="765" pos:column="9">IVsFindHelper_AddRef</name><parameter_list pos:line="765" pos:column="29">(<param><type><name pos:line="765" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="766" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="768" pos:column="1">#<cpp:directive pos:line="768" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="768" pos:column="9">IVsFindHelper_Release</name><parameter_list pos:line="768" pos:column="30">(<param><type><name pos:line="768" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="769" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="772" pos:column="1">#<cpp:directive pos:line="772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="772" pos:column="9">IVsFindHelper_FindInText</name><parameter_list pos:line="772" pos:column="33">(<param><type><name pos:line="772" pos:column="34">This</name></type></param>,<param><type><name pos:line="772" pos:column="39">pszFind</name></type></param>,<param><type><name pos:line="772" pos:column="47">pszReplace</name></type></param>,<param><type><name pos:line="772" pos:column="58">grfFindOptions</name></type></param>,<param><type><name pos:line="772" pos:column="73">grfBufferFlags</name></type></param>,<param><type><name pos:line="772" pos:column="88">cchText</name></type></param>,<param><type><name pos:line="772" pos:column="96">pchText</name></type></param>,<param><type><name pos:line="772" pos:column="104">piFound</name></type></param>,<param><type><name pos:line="772" pos:column="112">pcchFound</name></type></param>,<param><type><name pos:line="772" pos:column="122">pbstrReplaceText</name></type></param>,<param><type><name pos:line="772" pos:column="139">pfFound</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="773" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindInText(This,pszFind,pszReplace,grfFindOptions,grfBufferFlags,cchText,pchText,piFound,pcchFound,pbstrReplaceText,pfFound) )</cpp:value></cpp:define> 

<cpp:endif pos:line="775" pos:column="1">#<cpp:directive pos:line="775" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="775" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="778" pos:column="1">#<cpp:directive pos:line="778" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="778" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="783" pos:column="1">#<cpp:directive pos:line="783" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="783" pos:column="9">/* __IVsFindHelper_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="786" pos:column="1">#<cpp:directive pos:line="786" pos:column="2">ifndef</cpp:directive> <name pos:line="786" pos:column="9">__IVsFindTarget_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="787" pos:column="1">#<cpp:directive pos:line="787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="787" pos:column="9">__IVsFindTarget_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="789" pos:column="1">/* interface IVsFindTarget */</comment>
<comment type="block" pos:line="790" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="793" pos:column="1">EXTERN_C</name> <specifier pos:line="793" pos:column="10">const</specifier> <name pos:line="793" pos:column="16">IID</name></type> <name pos:line="793" pos:column="20">IID_IVsFindTarget</name></decl>;</decl_stmt>

<cpp:if pos:line="795" pos:column="1">#<cpp:directive pos:line="795" pos:column="2">if</cpp:directive> <expr><call><name pos:line="795" pos:column="5">defined</name><argument_list pos:line="795" pos:column="12">(<argument><expr><name pos:line="795" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="795" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="795" pos:column="29">!</op:operator><call><name pos:line="795" pos:column="30">defined</name><argument_list pos:line="795" pos:column="37">(<argument><expr><name pos:line="795" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="797" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="797" pos:column="19">(<argument pos:line="797" pos:column="20">"DE89D360-C06A-11d2-936C-D714766E8B50"</argument>)</argument_list></macro>
    <label><name pos:line="798" pos:column="5">IVsFindTarget</name> :</label> <expr_stmt><expr pos:line="798" pos:column="21">public <name pos:line="798" pos:column="28">IUnknown</name>
    <block pos:line="799" pos:column="5">{
    <expr pos:line="800" pos:column="5">public<op:operator pos:line="800" pos:column="11">:</op:operator>
        virtual <name pos:line="801" pos:column="17">HRESULT</name> <name pos:line="801" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="801" pos:column="43">GetCapabilities</name><argument_list pos:line="801" pos:column="58">( 
            <comment type="block" pos:line="802" pos:column="13">/* [custom][out] */</comment> <argument pos:line="802" pos:column="33">__RPC__out BOOL *pfImage</argument>,
            <comment type="block" pos:line="803" pos:column="13">/* [out] */</comment> <argument pos:line="803" pos:column="25">__RPC__out VSFINDOPTIONS *pgrfOptions</argument>)</argument_list></macro> <op:operator pos:line="803" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="803" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="805" pos:column="9">virtual <comment type="block" pos:line="805" pos:column="17">/* [custom] */</comment> <name pos:line="805" pos:column="32">HRESULT</name> <name pos:line="805" pos:column="40">STDMETHODCALLTYPE</name> <macro><name pos:line="805" pos:column="58">GetProperty</name><argument_list pos:line="805" pos:column="69">( 
            <comment type="block" pos:line="806" pos:column="13">/* [in] */</comment> <argument pos:line="806" pos:column="24">VSFTPROPID propid</argument>,
            <comment type="block" pos:line="807" pos:column="13">/* [retval][out] */</comment> <argument pos:line="807" pos:column="33">__RPC__out VARIANT *pvar</argument>)</argument_list></macro> <op:operator pos:line="807" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="807" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="809" pos:column="9">virtual <name pos:line="809" pos:column="17">HRESULT</name> <name pos:line="809" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="809" pos:column="43">GetSearchImage</name><argument_list pos:line="809" pos:column="57">( 
            <comment type="block" pos:line="810" pos:column="13">/* [in] */</comment> <argument pos:line="810" pos:column="24">VSFINDOPTIONS grfOptions</argument>,
            <comment type="block" pos:line="811" pos:column="13">/* [custom][out] */</comment> <argument pos:line="811" pos:column="33">__RPC__deref_out_opt IVsTextSpanSet **ppSpans</argument>,
            <comment type="block" pos:line="812" pos:column="13">/* [retval][out] */</comment> <argument pos:line="812" pos:column="33">__RPC__deref_out_opt IVsTextImage **ppTextImage</argument>)</argument_list></macro> <op:operator pos:line="812" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="812" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="814" pos:column="9">virtual <name pos:line="814" pos:column="17">HRESULT</name> <name pos:line="814" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="814" pos:column="43">Find</name><argument_list pos:line="814" pos:column="47">( 
            <comment type="block" pos:line="815" pos:column="13">/* [in] */</comment> <argument pos:line="815" pos:column="24">__RPC__in LPCOLESTR pszSearch</argument>,
            <comment type="block" pos:line="816" pos:column="13">/* [in] */</comment> <argument pos:line="816" pos:column="24">VSFINDOPTIONS grfOptions</argument>,
            <comment type="block" pos:line="817" pos:column="13">/* [in] */</comment> <argument pos:line="817" pos:column="24">BOOL fResetStartPoint</argument>,
            <comment type="block" pos:line="818" pos:column="13">/* [in] */</comment> <argument pos:line="818" pos:column="24">__RPC__in_opt IVsFindHelper *pHelper</argument>,
            <comment type="block" pos:line="819" pos:column="13">/* [retval][out] */</comment> <argument pos:line="819" pos:column="33">__RPC__out VSFINDRESULT *pResult</argument>)</argument_list></macro> <op:operator pos:line="819" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="819" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="821" pos:column="9">virtual <name pos:line="821" pos:column="17">HRESULT</name> <name pos:line="821" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="821" pos:column="43">Replace</name><argument_list pos:line="821" pos:column="50">( 
            <comment type="block" pos:line="822" pos:column="13">/* [in] */</comment> <argument pos:line="822" pos:column="24">__RPC__in LPCOLESTR pszSearch</argument>,
            <comment type="block" pos:line="823" pos:column="13">/* [in] */</comment> <argument pos:line="823" pos:column="24">__RPC__in LPCOLESTR pszReplace</argument>,
            <comment type="block" pos:line="824" pos:column="13">/* [in] */</comment> <argument pos:line="824" pos:column="24">VSFINDOPTIONS grfOptions</argument>,
            <comment type="block" pos:line="825" pos:column="13">/* [in] */</comment> <argument pos:line="825" pos:column="24">BOOL fResetStartPoint</argument>,
            <comment type="block" pos:line="826" pos:column="13">/* [in] */</comment> <argument pos:line="826" pos:column="24">__RPC__in_opt IVsFindHelper *pHelper</argument>,
            <comment type="block" pos:line="827" pos:column="13">/* [retval][out] */</comment> <argument pos:line="827" pos:column="33">__RPC__out BOOL *pfReplaced</argument>)</argument_list></macro> <op:operator pos:line="827" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="827" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="829" pos:column="9">virtual <comment type="block" pos:line="829" pos:column="17">/* [custom] */</comment> <name pos:line="829" pos:column="32">HRESULT</name> <name pos:line="829" pos:column="40">STDMETHODCALLTYPE</name> <macro><name pos:line="829" pos:column="58">GetMatchRect</name><argument_list pos:line="829" pos:column="70">( 
            <comment type="block" pos:line="830" pos:column="13">/* [retval][out] */</comment> <argument pos:line="830" pos:column="33">__RPC__out PRECT prc</argument>)</argument_list></macro> <op:operator pos:line="830" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="830" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="832" pos:column="9">virtual <name pos:line="832" pos:column="17">HRESULT</name> <name pos:line="832" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="832" pos:column="43">NavigateTo</name><argument_list pos:line="832" pos:column="53">( 
            <comment type="block" pos:line="833" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="833" pos:column="24">__RPC__in</name> const <name pos:line="833" pos:column="40">TextSpan</name> <op:operator pos:line="833" pos:column="49">*</op:operator><name pos:line="833" pos:column="50">pts</name></expr></argument>)</argument_list></call> <op:operator pos:line="833" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="833" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="835" pos:column="9">virtual <comment type="block" pos:line="835" pos:column="17">/* [custom] */</comment> <name pos:line="835" pos:column="32">HRESULT</name> <name pos:line="835" pos:column="40">STDMETHODCALLTYPE</name> <macro><name pos:line="835" pos:column="58">GetCurrentSpan</name><argument_list pos:line="835" pos:column="72">( 
            <comment type="block" pos:line="836" pos:column="13">/* [retval][out] */</comment> <argument pos:line="836" pos:column="33">__RPC__out TextSpan *pts</argument>)</argument_list></macro> <op:operator pos:line="836" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="836" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="838" pos:column="9">virtual <name pos:line="838" pos:column="17">HRESULT</name> <name pos:line="838" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="838" pos:column="43">SetFindState</name><argument_list pos:line="838" pos:column="55">( 
            <comment type="block" pos:line="839" pos:column="13">/* [in] */</comment> <argument pos:line="839" pos:column="24">__RPC__in_opt IUnknown *punk</argument>)</argument_list></macro> <op:operator pos:line="839" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="839" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="841" pos:column="9">virtual <name pos:line="841" pos:column="17">HRESULT</name> <name pos:line="841" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="841" pos:column="43">GetFindState</name><argument_list pos:line="841" pos:column="55">( 
            <comment type="block" pos:line="842" pos:column="13">/* [retval][out] */</comment> <argument pos:line="842" pos:column="33">__RPC__deref_out_opt IUnknown **ppunk</argument>)</argument_list></macro> <op:operator pos:line="842" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="842" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="844" pos:column="9">virtual <name pos:line="844" pos:column="17">HRESULT</name> <name pos:line="844" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="844" pos:column="43">NotifyFindTarget</name><argument_list pos:line="844" pos:column="59">( 
            <comment type="block" pos:line="845" pos:column="13">/* [in] */</comment> <argument pos:line="845" pos:column="24">VSFTNOTIFY notification</argument>)</argument_list></macro> <op:operator pos:line="845" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="845" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="847" pos:column="9">virtual <name pos:line="847" pos:column="17">HRESULT</name> <name pos:line="847" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="847" pos:column="43">MarkSpan</name><argument_list pos:line="847" pos:column="51">( 
            <comment type="block" pos:line="848" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="848" pos:column="24">__RPC__in</name> const <name pos:line="848" pos:column="40">TextSpan</name> <op:operator pos:line="848" pos:column="49">*</op:operator><name pos:line="848" pos:column="50">pts</name></expr></argument>)</argument_list></call> <op:operator pos:line="848" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="848" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="852" pos:column="1">#<cpp:directive pos:line="852" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="852" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="854" pos:column="5">typedef <type><struct pos:line="854" pos:column="13">struct <name pos:line="854" pos:column="20">IVsFindTargetVtbl</name>
    <block pos:line="855" pos:column="5">{<public type="default" pos:line="855" pos:column="6">
        <function_decl><type><name pos:line="856" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="858" pos:column="9">HRESULT</name></type> ( <name pos:line="858" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="858" pos:column="37">*</type:modifier><name pos:line="858" pos:column="38">QueryInterface</name> )<parameter_list pos:line="858" pos:column="54">( 
            <param><decl><type><name pos:line="859" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="859" pos:column="27">*</type:modifier></type> <name pos:line="859" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="860" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="860" pos:column="24">__RPC__in</name> <name pos:line="860" pos:column="34">REFIID</name></type> <name pos:line="860" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="861" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="862" pos:column="13">__RPC__deref_out</name>  <name pos:line="862" pos:column="31">void</name> <type:modifier pos:line="862" pos:column="36">*</type:modifier><type:modifier pos:line="862" pos:column="37">*</type:modifier></type><name pos:line="862" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="864" pos:column="9">ULONG</name></type> ( <name pos:line="864" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="864" pos:column="35">*</type:modifier><name pos:line="864" pos:column="36">AddRef</name> )<parameter_list pos:line="864" pos:column="44">( 
            <param><decl><type><name pos:line="865" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="865" pos:column="27">*</type:modifier></type> <name pos:line="865" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="867" pos:column="9">ULONG</name></type> ( <name pos:line="867" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="867" pos:column="35">*</type:modifier><name pos:line="867" pos:column="36">Release</name> )<parameter_list pos:line="867" pos:column="45">( 
            <param><decl><type><name pos:line="868" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="868" pos:column="27">*</type:modifier></type> <name pos:line="868" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="870" pos:column="9">HRESULT</name></type> ( <name pos:line="870" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="870" pos:column="37">*</type:modifier><name pos:line="870" pos:column="38">GetCapabilities</name> )<parameter_list pos:line="870" pos:column="55">( 
            <param><decl><type><name pos:line="871" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="871" pos:column="27">*</type:modifier></type> <name pos:line="871" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="872" pos:column="13">/* [custom][out] */</comment> <param><decl><type><name pos:line="872" pos:column="33">__RPC__out</name> <name pos:line="872" pos:column="44">BOOL</name> <type:modifier pos:line="872" pos:column="49">*</type:modifier></type><name pos:line="872" pos:column="50">pfImage</name></decl></param>,
            <comment type="block" pos:line="873" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="873" pos:column="25">__RPC__out</name> <name pos:line="873" pos:column="36">VSFINDOPTIONS</name> <type:modifier pos:line="873" pos:column="50">*</type:modifier></type><name pos:line="873" pos:column="51">pgrfOptions</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="875" pos:column="9">/* [custom] */</comment> <function_decl><type><name pos:line="875" pos:column="24">HRESULT</name></type> ( <name pos:line="875" pos:column="34">STDMETHODCALLTYPE</name> <type:modifier pos:line="875" pos:column="52">*</type:modifier><name pos:line="875" pos:column="53">GetProperty</name> )<parameter_list pos:line="875" pos:column="66">( 
            <param><decl><type><name pos:line="876" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="876" pos:column="27">*</type:modifier></type> <name pos:line="876" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="877" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="877" pos:column="24">VSFTPROPID</name></type> <name pos:line="877" pos:column="35">propid</name></decl></param>,
            <comment type="block" pos:line="878" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="878" pos:column="33">__RPC__out</name> <name pos:line="878" pos:column="44">VARIANT</name> <type:modifier pos:line="878" pos:column="52">*</type:modifier></type><name pos:line="878" pos:column="53">pvar</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="880" pos:column="9">HRESULT</name></type> ( <name pos:line="880" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="880" pos:column="37">*</type:modifier><name pos:line="880" pos:column="38">GetSearchImage</name> )<parameter_list pos:line="880" pos:column="54">( 
            <param><decl><type><name pos:line="881" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="881" pos:column="27">*</type:modifier></type> <name pos:line="881" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="882" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="882" pos:column="24">VSFINDOPTIONS</name></type> <name pos:line="882" pos:column="38">grfOptions</name></decl></param>,
            <comment type="block" pos:line="883" pos:column="13">/* [custom][out] */</comment> <param><decl><type><name pos:line="883" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="883" pos:column="54">IVsTextSpanSet</name> <type:modifier pos:line="883" pos:column="69">*</type:modifier><type:modifier pos:line="883" pos:column="70">*</type:modifier></type><name pos:line="883" pos:column="71">ppSpans</name></decl></param>,
            <comment type="block" pos:line="884" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="884" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="884" pos:column="54">IVsTextImage</name> <type:modifier pos:line="884" pos:column="67">*</type:modifier><type:modifier pos:line="884" pos:column="68">*</type:modifier></type><name pos:line="884" pos:column="69">ppTextImage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="886" pos:column="9">HRESULT</name></type> ( <name pos:line="886" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="886" pos:column="37">*</type:modifier><name pos:line="886" pos:column="38">Find</name> )<parameter_list pos:line="886" pos:column="44">( 
            <param><decl><type><name pos:line="887" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="887" pos:column="27">*</type:modifier></type> <name pos:line="887" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="888" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="888" pos:column="24">__RPC__in</name> <name pos:line="888" pos:column="34">LPCOLESTR</name></type> <name pos:line="888" pos:column="44">pszSearch</name></decl></param>,
            <comment type="block" pos:line="889" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="889" pos:column="24">VSFINDOPTIONS</name></type> <name pos:line="889" pos:column="38">grfOptions</name></decl></param>,
            <comment type="block" pos:line="890" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="890" pos:column="24">BOOL</name></type> <name pos:line="890" pos:column="29">fResetStartPoint</name></decl></param>,
            <comment type="block" pos:line="891" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="891" pos:column="24">__RPC__in_opt</name> <name pos:line="891" pos:column="38">IVsFindHelper</name> <type:modifier pos:line="891" pos:column="52">*</type:modifier></type><name pos:line="891" pos:column="53">pHelper</name></decl></param>,
            <comment type="block" pos:line="892" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="892" pos:column="33">__RPC__out</name> <name pos:line="892" pos:column="44">VSFINDRESULT</name> <type:modifier pos:line="892" pos:column="57">*</type:modifier></type><name pos:line="892" pos:column="58">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="894" pos:column="9">HRESULT</name></type> ( <name pos:line="894" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="894" pos:column="37">*</type:modifier><name pos:line="894" pos:column="38">Replace</name> )<parameter_list pos:line="894" pos:column="47">( 
            <param><decl><type><name pos:line="895" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="895" pos:column="27">*</type:modifier></type> <name pos:line="895" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="896" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="896" pos:column="24">__RPC__in</name> <name pos:line="896" pos:column="34">LPCOLESTR</name></type> <name pos:line="896" pos:column="44">pszSearch</name></decl></param>,
            <comment type="block" pos:line="897" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="897" pos:column="24">__RPC__in</name> <name pos:line="897" pos:column="34">LPCOLESTR</name></type> <name pos:line="897" pos:column="44">pszReplace</name></decl></param>,
            <comment type="block" pos:line="898" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="898" pos:column="24">VSFINDOPTIONS</name></type> <name pos:line="898" pos:column="38">grfOptions</name></decl></param>,
            <comment type="block" pos:line="899" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="899" pos:column="24">BOOL</name></type> <name pos:line="899" pos:column="29">fResetStartPoint</name></decl></param>,
            <comment type="block" pos:line="900" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="900" pos:column="24">__RPC__in_opt</name> <name pos:line="900" pos:column="38">IVsFindHelper</name> <type:modifier pos:line="900" pos:column="52">*</type:modifier></type><name pos:line="900" pos:column="53">pHelper</name></decl></param>,
            <comment type="block" pos:line="901" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="901" pos:column="33">__RPC__out</name> <name pos:line="901" pos:column="44">BOOL</name> <type:modifier pos:line="901" pos:column="49">*</type:modifier></type><name pos:line="901" pos:column="50">pfReplaced</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="903" pos:column="9">/* [custom] */</comment> <function_decl><type><name pos:line="903" pos:column="24">HRESULT</name></type> ( <name pos:line="903" pos:column="34">STDMETHODCALLTYPE</name> <type:modifier pos:line="903" pos:column="52">*</type:modifier><name pos:line="903" pos:column="53">GetMatchRect</name> )<parameter_list pos:line="903" pos:column="67">( 
            <param><decl><type><name pos:line="904" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="904" pos:column="27">*</type:modifier></type> <name pos:line="904" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="905" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="905" pos:column="33">__RPC__out</name> <name pos:line="905" pos:column="44">PRECT</name></type> <name pos:line="905" pos:column="50">prc</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="907" pos:column="9">HRESULT</name></type> ( <name pos:line="907" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="907" pos:column="37">*</type:modifier><name pos:line="907" pos:column="38">NavigateTo</name> )<parameter_list pos:line="907" pos:column="50">( 
            <param><decl><type><name pos:line="908" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="908" pos:column="27">*</type:modifier></type> <name pos:line="908" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="909" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="909" pos:column="24">__RPC__in</name> <specifier pos:line="909" pos:column="34">const</specifier> <name pos:line="909" pos:column="40">TextSpan</name> <type:modifier pos:line="909" pos:column="49">*</type:modifier></type><name pos:line="909" pos:column="50">pts</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="911" pos:column="9">/* [custom] */</comment> <function_decl><type><name pos:line="911" pos:column="24">HRESULT</name></type> ( <name pos:line="911" pos:column="34">STDMETHODCALLTYPE</name> <type:modifier pos:line="911" pos:column="52">*</type:modifier><name pos:line="911" pos:column="53">GetCurrentSpan</name> )<parameter_list pos:line="911" pos:column="69">( 
            <param><decl><type><name pos:line="912" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="912" pos:column="27">*</type:modifier></type> <name pos:line="912" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="913" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="913" pos:column="33">__RPC__out</name> <name pos:line="913" pos:column="44">TextSpan</name> <type:modifier pos:line="913" pos:column="53">*</type:modifier></type><name pos:line="913" pos:column="54">pts</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="915" pos:column="9">HRESULT</name></type> ( <name pos:line="915" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="915" pos:column="37">*</type:modifier><name pos:line="915" pos:column="38">SetFindState</name> )<parameter_list pos:line="915" pos:column="52">( 
            <param><decl><type><name pos:line="916" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="916" pos:column="27">*</type:modifier></type> <name pos:line="916" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="917" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="917" pos:column="24">__RPC__in_opt</name> <name pos:line="917" pos:column="38">IUnknown</name> <type:modifier pos:line="917" pos:column="47">*</type:modifier></type><name pos:line="917" pos:column="48">punk</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="919" pos:column="9">HRESULT</name></type> ( <name pos:line="919" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="919" pos:column="37">*</type:modifier><name pos:line="919" pos:column="38">GetFindState</name> )<parameter_list pos:line="919" pos:column="52">( 
            <param><decl><type><name pos:line="920" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="920" pos:column="27">*</type:modifier></type> <name pos:line="920" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="921" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="921" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="921" pos:column="54">IUnknown</name> <type:modifier pos:line="921" pos:column="63">*</type:modifier><type:modifier pos:line="921" pos:column="64">*</type:modifier></type><name pos:line="921" pos:column="65">ppunk</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="923" pos:column="9">HRESULT</name></type> ( <name pos:line="923" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="923" pos:column="37">*</type:modifier><name pos:line="923" pos:column="38">NotifyFindTarget</name> )<parameter_list pos:line="923" pos:column="56">( 
            <param><decl><type><name pos:line="924" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="924" pos:column="27">*</type:modifier></type> <name pos:line="924" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="925" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="925" pos:column="24">VSFTNOTIFY</name></type> <name pos:line="925" pos:column="35">notification</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="927" pos:column="9">HRESULT</name></type> ( <name pos:line="927" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="927" pos:column="37">*</type:modifier><name pos:line="927" pos:column="38">MarkSpan</name> )<parameter_list pos:line="927" pos:column="48">( 
            <param><decl><type><name pos:line="928" pos:column="13">IVsFindTarget</name> <type:modifier pos:line="928" pos:column="27">*</type:modifier></type> <name pos:line="928" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="929" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="929" pos:column="24">__RPC__in</name> <specifier pos:line="929" pos:column="34">const</specifier> <name pos:line="929" pos:column="40">TextSpan</name> <type:modifier pos:line="929" pos:column="49">*</type:modifier></type><name pos:line="929" pos:column="50">pts</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="931" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="932" pos:column="7">IVsFindTargetVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="934" pos:column="5">interface</name></type> <name pos:line="934" pos:column="15">IVsFindTarget</name>
    <argument_list pos:line="935" pos:column="5">{
        <argument><expr><name pos:line="936" pos:column="9">CONST_VTBL</name> struct <name pos:line="936" pos:column="27">IVsFindTargetVtbl</name> <op:operator pos:line="936" pos:column="45">*</op:operator><name pos:line="936" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="941" pos:column="1">#<cpp:directive pos:line="941" pos:column="2">ifdef</cpp:directive> <name pos:line="941" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="944" pos:column="1">#<cpp:directive pos:line="944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="944" pos:column="9">IVsFindTarget_QueryInterface</name><parameter_list pos:line="944" pos:column="37">(<param><type><name pos:line="944" pos:column="38">This</name></type></param>,<param><type><name pos:line="944" pos:column="43">riid</name></type></param>,<param><type><name pos:line="944" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="945" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="947" pos:column="1">#<cpp:directive pos:line="947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="947" pos:column="9">IVsFindTarget_AddRef</name><parameter_list pos:line="947" pos:column="29">(<param><type><name pos:line="947" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="948" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="950" pos:column="1">#<cpp:directive pos:line="950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="950" pos:column="9">IVsFindTarget_Release</name><parameter_list pos:line="950" pos:column="30">(<param><type><name pos:line="950" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="951" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="954" pos:column="1">#<cpp:directive pos:line="954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="954" pos:column="9">IVsFindTarget_GetCapabilities</name><parameter_list pos:line="954" pos:column="38">(<param><type><name pos:line="954" pos:column="39">This</name></type></param>,<param><type><name pos:line="954" pos:column="44">pfImage</name></type></param>,<param><type><name pos:line="954" pos:column="52">pgrfOptions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="955" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCapabilities(This,pfImage,pgrfOptions) )</cpp:value></cpp:define> 

<cpp:define pos:line="957" pos:column="1">#<cpp:directive pos:line="957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="957" pos:column="9">IVsFindTarget_GetProperty</name><parameter_list pos:line="957" pos:column="34">(<param><type><name pos:line="957" pos:column="35">This</name></type></param>,<param><type><name pos:line="957" pos:column="40">propid</name></type></param>,<param><type><name pos:line="957" pos:column="47">pvar</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="958" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProperty(This,propid,pvar) )</cpp:value></cpp:define> 

<cpp:define pos:line="960" pos:column="1">#<cpp:directive pos:line="960" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="960" pos:column="9">IVsFindTarget_GetSearchImage</name><parameter_list pos:line="960" pos:column="37">(<param><type><name pos:line="960" pos:column="38">This</name></type></param>,<param><type><name pos:line="960" pos:column="43">grfOptions</name></type></param>,<param><type><name pos:line="960" pos:column="54">ppSpans</name></type></param>,<param><type><name pos:line="960" pos:column="62">ppTextImage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="961" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSearchImage(This,grfOptions,ppSpans,ppTextImage) )</cpp:value></cpp:define> 

<cpp:define pos:line="963" pos:column="1">#<cpp:directive pos:line="963" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="963" pos:column="9">IVsFindTarget_Find</name><parameter_list pos:line="963" pos:column="27">(<param><type><name pos:line="963" pos:column="28">This</name></type></param>,<param><type><name pos:line="963" pos:column="33">pszSearch</name></type></param>,<param><type><name pos:line="963" pos:column="43">grfOptions</name></type></param>,<param><type><name pos:line="963" pos:column="54">fResetStartPoint</name></type></param>,<param><type><name pos:line="963" pos:column="71">pHelper</name></type></param>,<param><type><name pos:line="963" pos:column="79">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="964" pos:column="5">( (This)-&gt;lpVtbl -&gt; Find(This,pszSearch,grfOptions,fResetStartPoint,pHelper,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="966" pos:column="1">#<cpp:directive pos:line="966" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="966" pos:column="9">IVsFindTarget_Replace</name><parameter_list pos:line="966" pos:column="30">(<param><type><name pos:line="966" pos:column="31">This</name></type></param>,<param><type><name pos:line="966" pos:column="36">pszSearch</name></type></param>,<param><type><name pos:line="966" pos:column="46">pszReplace</name></type></param>,<param><type><name pos:line="966" pos:column="57">grfOptions</name></type></param>,<param><type><name pos:line="966" pos:column="68">fResetStartPoint</name></type></param>,<param><type><name pos:line="966" pos:column="85">pHelper</name></type></param>,<param><type><name pos:line="966" pos:column="93">pfReplaced</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="967" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace(This,pszSearch,pszReplace,grfOptions,fResetStartPoint,pHelper,pfReplaced) )</cpp:value></cpp:define> 

<cpp:define pos:line="969" pos:column="1">#<cpp:directive pos:line="969" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="969" pos:column="9">IVsFindTarget_GetMatchRect</name><parameter_list pos:line="969" pos:column="35">(<param><type><name pos:line="969" pos:column="36">This</name></type></param>,<param><type><name pos:line="969" pos:column="41">prc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="970" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMatchRect(This,prc) )</cpp:value></cpp:define> 

<cpp:define pos:line="972" pos:column="1">#<cpp:directive pos:line="972" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="972" pos:column="9">IVsFindTarget_NavigateTo</name><parameter_list pos:line="972" pos:column="33">(<param><type><name pos:line="972" pos:column="34">This</name></type></param>,<param><type><name pos:line="972" pos:column="39">pts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="973" pos:column="5">( (This)-&gt;lpVtbl -&gt; NavigateTo(This,pts) )</cpp:value></cpp:define> 

<cpp:define pos:line="975" pos:column="1">#<cpp:directive pos:line="975" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="975" pos:column="9">IVsFindTarget_GetCurrentSpan</name><parameter_list pos:line="975" pos:column="37">(<param><type><name pos:line="975" pos:column="38">This</name></type></param>,<param><type><name pos:line="975" pos:column="43">pts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="976" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentSpan(This,pts) )</cpp:value></cpp:define> 

<cpp:define pos:line="978" pos:column="1">#<cpp:directive pos:line="978" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="978" pos:column="9">IVsFindTarget_SetFindState</name><parameter_list pos:line="978" pos:column="35">(<param><type><name pos:line="978" pos:column="36">This</name></type></param>,<param><type><name pos:line="978" pos:column="41">punk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="979" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetFindState(This,punk) )</cpp:value></cpp:define> 

<cpp:define pos:line="981" pos:column="1">#<cpp:directive pos:line="981" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="981" pos:column="9">IVsFindTarget_GetFindState</name><parameter_list pos:line="981" pos:column="35">(<param><type><name pos:line="981" pos:column="36">This</name></type></param>,<param><type><name pos:line="981" pos:column="41">ppunk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="982" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFindState(This,ppunk) )</cpp:value></cpp:define> 

<cpp:define pos:line="984" pos:column="1">#<cpp:directive pos:line="984" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="984" pos:column="9">IVsFindTarget_NotifyFindTarget</name><parameter_list pos:line="984" pos:column="39">(<param><type><name pos:line="984" pos:column="40">This</name></type></param>,<param><type><name pos:line="984" pos:column="45">notification</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="985" pos:column="5">( (This)-&gt;lpVtbl -&gt; NotifyFindTarget(This,notification) )</cpp:value></cpp:define> 

<cpp:define pos:line="987" pos:column="1">#<cpp:directive pos:line="987" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="987" pos:column="9">IVsFindTarget_MarkSpan</name><parameter_list pos:line="987" pos:column="31">(<param><type><name pos:line="987" pos:column="32">This</name></type></param>,<param><type><name pos:line="987" pos:column="37">pts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="988" pos:column="5">( (This)-&gt;lpVtbl -&gt; MarkSpan(This,pts) )</cpp:value></cpp:define> 

<cpp:endif pos:line="990" pos:column="1">#<cpp:directive pos:line="990" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="990" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="993" pos:column="1">#<cpp:directive pos:line="993" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="993" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="998" pos:column="1">#<cpp:directive pos:line="998" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="998" pos:column="9">/* __IVsFindTarget_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1001" pos:column="1">#<cpp:directive pos:line="1001" pos:column="2">ifndef</cpp:directive> <name pos:line="1001" pos:column="9">__IVsFindScope_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1002" pos:column="1">#<cpp:directive pos:line="1002" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1002" pos:column="9">__IVsFindScope_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1004" pos:column="1">/* interface IVsFindScope */</comment>
<comment type="block" pos:line="1005" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1008" pos:column="1">EXTERN_C</name> <specifier pos:line="1008" pos:column="10">const</specifier> <name pos:line="1008" pos:column="16">IID</name></type> <name pos:line="1008" pos:column="20">IID_IVsFindScope</name></decl>;</decl_stmt>

<cpp:if pos:line="1010" pos:column="1">#<cpp:directive pos:line="1010" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1010" pos:column="5">defined</name><argument_list pos:line="1010" pos:column="12">(<argument><expr><name pos:line="1010" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1010" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1010" pos:column="29">!</op:operator><call><name pos:line="1010" pos:column="30">defined</name><argument_list pos:line="1010" pos:column="37">(<argument><expr><name pos:line="1010" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1012" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1012" pos:column="19">(<argument pos:line="1012" pos:column="20">"0FE9496A-129C-40ee-99D8-7705A6283518"</argument>)</argument_list></macro>
    <label><name pos:line="1013" pos:column="5">IVsFindScope</name> :</label> <expr_stmt><expr pos:line="1013" pos:column="20">public <name pos:line="1013" pos:column="27">IUnknown</name>
    <block pos:line="1014" pos:column="5">{
    <expr pos:line="1015" pos:column="5">public<op:operator pos:line="1015" pos:column="11">:</op:operator>
        virtual <name pos:line="1016" pos:column="17">HRESULT</name> <name pos:line="1016" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1016" pos:column="43">GetUIName</name><argument_list pos:line="1016" pos:column="52">( 
            <comment type="block" pos:line="1017" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1017" pos:column="33">__RPC__deref_out_opt BSTR *pbsName</argument>)</argument_list></macro> <op:operator pos:line="1017" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1017" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1019" pos:column="9">virtual <name pos:line="1019" pos:column="17">HRESULT</name> <name pos:line="1019" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1019" pos:column="43">GetQuery</name><argument_list pos:line="1019" pos:column="51">( 
            <comment type="block" pos:line="1020" pos:column="13">/* [out] */</comment> <argument pos:line="1020" pos:column="25">__RPC__deref_out_opt BSTR *pbstrBaseDirectory</argument>,
            <comment type="block" pos:line="1021" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1021" pos:column="33">__RPC__deref_out_opt BSTR *pbstrQuery</argument>)</argument_list></macro> <op:operator pos:line="1021" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="1021" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="1023" pos:column="9">virtual <name pos:line="1023" pos:column="17">HRESULT</name> <name pos:line="1023" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1023" pos:column="43">EnumFilenames</name><argument_list pos:line="1023" pos:column="56">( 
            <comment type="block" pos:line="1024" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1024" pos:column="33">__RPC__deref_out_opt IEnumString **ppEnumString</argument>)</argument_list></macro> <op:operator pos:line="1024" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="1024" pos:column="84">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1028" pos:column="1">#<cpp:directive pos:line="1028" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1028" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1030" pos:column="5">typedef <type><struct pos:line="1030" pos:column="13">struct <name pos:line="1030" pos:column="20">IVsFindScopeVtbl</name>
    <block pos:line="1031" pos:column="5">{<public type="default" pos:line="1031" pos:column="6">
        <function_decl><type><name pos:line="1032" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1034" pos:column="9">HRESULT</name></type> ( <name pos:line="1034" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1034" pos:column="37">*</type:modifier><name pos:line="1034" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1034" pos:column="54">( 
            <param><decl><type><name pos:line="1035" pos:column="13">IVsFindScope</name> <type:modifier pos:line="1035" pos:column="26">*</type:modifier></type> <name pos:line="1035" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1036" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1036" pos:column="24">__RPC__in</name> <name pos:line="1036" pos:column="34">REFIID</name></type> <name pos:line="1036" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1037" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1038" pos:column="13">__RPC__deref_out</name>  <name pos:line="1038" pos:column="31">void</name> <type:modifier pos:line="1038" pos:column="36">*</type:modifier><type:modifier pos:line="1038" pos:column="37">*</type:modifier></type><name pos:line="1038" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1040" pos:column="9">ULONG</name></type> ( <name pos:line="1040" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1040" pos:column="35">*</type:modifier><name pos:line="1040" pos:column="36">AddRef</name> )<parameter_list pos:line="1040" pos:column="44">( 
            <param><decl><type><name pos:line="1041" pos:column="13">IVsFindScope</name> <type:modifier pos:line="1041" pos:column="26">*</type:modifier></type> <name pos:line="1041" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1043" pos:column="9">ULONG</name></type> ( <name pos:line="1043" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1043" pos:column="35">*</type:modifier><name pos:line="1043" pos:column="36">Release</name> )<parameter_list pos:line="1043" pos:column="45">( 
            <param><decl><type><name pos:line="1044" pos:column="13">IVsFindScope</name> <type:modifier pos:line="1044" pos:column="26">*</type:modifier></type> <name pos:line="1044" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1046" pos:column="9">HRESULT</name></type> ( <name pos:line="1046" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1046" pos:column="37">*</type:modifier><name pos:line="1046" pos:column="38">GetUIName</name> )<parameter_list pos:line="1046" pos:column="49">( 
            <param><decl><type><name pos:line="1047" pos:column="13">IVsFindScope</name> <type:modifier pos:line="1047" pos:column="26">*</type:modifier></type> <name pos:line="1047" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1048" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1048" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1048" pos:column="54">BSTR</name> <type:modifier pos:line="1048" pos:column="59">*</type:modifier></type><name pos:line="1048" pos:column="60">pbsName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1050" pos:column="9">HRESULT</name></type> ( <name pos:line="1050" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1050" pos:column="37">*</type:modifier><name pos:line="1050" pos:column="38">GetQuery</name> )<parameter_list pos:line="1050" pos:column="48">( 
            <param><decl><type><name pos:line="1051" pos:column="13">IVsFindScope</name> <type:modifier pos:line="1051" pos:column="26">*</type:modifier></type> <name pos:line="1051" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1052" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1052" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1052" pos:column="46">BSTR</name> <type:modifier pos:line="1052" pos:column="51">*</type:modifier></type><name pos:line="1052" pos:column="52">pbstrBaseDirectory</name></decl></param>,
            <comment type="block" pos:line="1053" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1053" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1053" pos:column="54">BSTR</name> <type:modifier pos:line="1053" pos:column="59">*</type:modifier></type><name pos:line="1053" pos:column="60">pbstrQuery</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1055" pos:column="9">HRESULT</name></type> ( <name pos:line="1055" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1055" pos:column="37">*</type:modifier><name pos:line="1055" pos:column="38">EnumFilenames</name> )<parameter_list pos:line="1055" pos:column="53">( 
            <param><decl><type><name pos:line="1056" pos:column="13">IVsFindScope</name> <type:modifier pos:line="1056" pos:column="26">*</type:modifier></type> <name pos:line="1056" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1057" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1057" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1057" pos:column="54">IEnumString</name> <type:modifier pos:line="1057" pos:column="66">*</type:modifier><type:modifier pos:line="1057" pos:column="67">*</type:modifier></type><name pos:line="1057" pos:column="68">ppEnumString</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1059" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1060" pos:column="7">IVsFindScopeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1062" pos:column="5">interface</name></type> <name pos:line="1062" pos:column="15">IVsFindScope</name>
    <argument_list pos:line="1063" pos:column="5">{
        <argument><expr><name pos:line="1064" pos:column="9">CONST_VTBL</name> struct <name pos:line="1064" pos:column="27">IVsFindScopeVtbl</name> <op:operator pos:line="1064" pos:column="44">*</op:operator><name pos:line="1064" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1069" pos:column="1">#<cpp:directive pos:line="1069" pos:column="2">ifdef</cpp:directive> <name pos:line="1069" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1072" pos:column="1">#<cpp:directive pos:line="1072" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1072" pos:column="9">IVsFindScope_QueryInterface</name><parameter_list pos:line="1072" pos:column="36">(<param><type><name pos:line="1072" pos:column="37">This</name></type></param>,<param><type><name pos:line="1072" pos:column="42">riid</name></type></param>,<param><type><name pos:line="1072" pos:column="47">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1073" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1075" pos:column="1">#<cpp:directive pos:line="1075" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1075" pos:column="9">IVsFindScope_AddRef</name><parameter_list pos:line="1075" pos:column="28">(<param><type><name pos:line="1075" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1076" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1078" pos:column="1">#<cpp:directive pos:line="1078" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1078" pos:column="9">IVsFindScope_Release</name><parameter_list pos:line="1078" pos:column="29">(<param><type><name pos:line="1078" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1079" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1082" pos:column="1">#<cpp:directive pos:line="1082" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1082" pos:column="9">IVsFindScope_GetUIName</name><parameter_list pos:line="1082" pos:column="31">(<param><type><name pos:line="1082" pos:column="32">This</name></type></param>,<param><type><name pos:line="1082" pos:column="37">pbsName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1083" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetUIName(This,pbsName) )</cpp:value></cpp:define> 

<cpp:define pos:line="1085" pos:column="1">#<cpp:directive pos:line="1085" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1085" pos:column="9">IVsFindScope_GetQuery</name><parameter_list pos:line="1085" pos:column="30">(<param><type><name pos:line="1085" pos:column="31">This</name></type></param>,<param><type><name pos:line="1085" pos:column="36">pbstrBaseDirectory</name></type></param>,<param><type><name pos:line="1085" pos:column="55">pbstrQuery</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1086" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetQuery(This,pbstrBaseDirectory,pbstrQuery) )</cpp:value></cpp:define> 

<cpp:define pos:line="1088" pos:column="1">#<cpp:directive pos:line="1088" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1088" pos:column="9">IVsFindScope_EnumFilenames</name><parameter_list pos:line="1088" pos:column="35">(<param><type><name pos:line="1088" pos:column="36">This</name></type></param>,<param><type><name pos:line="1088" pos:column="41">ppEnumString</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1089" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumFilenames(This,ppEnumString) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1091" pos:column="1">#<cpp:directive pos:line="1091" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1091" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1094" pos:column="1">#<cpp:directive pos:line="1094" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1094" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1099" pos:column="1">#<cpp:directive pos:line="1099" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1099" pos:column="9">/* __IVsFindScope_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1102" pos:column="1">#<cpp:directive pos:line="1102" pos:column="2">ifndef</cpp:directive> <name pos:line="1102" pos:column="9">__IVsRegisterFindScope_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1103" pos:column="1">#<cpp:directive pos:line="1103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1103" pos:column="9">__IVsRegisterFindScope_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1105" pos:column="1">/* interface IVsRegisterFindScope */</comment>
<comment type="block" pos:line="1106" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1109" pos:column="1">EXTERN_C</name> <specifier pos:line="1109" pos:column="10">const</specifier> <name pos:line="1109" pos:column="16">IID</name></type> <name pos:line="1109" pos:column="20">IID_IVsRegisterFindScope</name></decl>;</decl_stmt>

<cpp:if pos:line="1111" pos:column="1">#<cpp:directive pos:line="1111" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1111" pos:column="5">defined</name><argument_list pos:line="1111" pos:column="12">(<argument><expr><name pos:line="1111" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1111" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1111" pos:column="29">!</op:operator><call><name pos:line="1111" pos:column="30">defined</name><argument_list pos:line="1111" pos:column="37">(<argument><expr><name pos:line="1111" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1113" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1113" pos:column="19">(<argument pos:line="1113" pos:column="20">"08363D65-C178-4484-A293-D148173DD750"</argument>)</argument_list></macro>
    <label><name pos:line="1114" pos:column="5">IVsRegisterFindScope</name> :</label> <expr_stmt><expr pos:line="1114" pos:column="28">public <name pos:line="1114" pos:column="35">IUnknown</name>
    <block pos:line="1115" pos:column="5">{
    <expr pos:line="1116" pos:column="5">public<op:operator pos:line="1116" pos:column="11">:</op:operator>
        virtual <name pos:line="1117" pos:column="17">HRESULT</name> <name pos:line="1117" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1117" pos:column="43">RegisterFindScope</name><argument_list pos:line="1117" pos:column="60">( 
            <comment type="block" pos:line="1118" pos:column="13">/* [in] */</comment> <argument pos:line="1118" pos:column="24">__RPC__in_opt IVsFindScope *pScope</argument>,
            <comment type="block" pos:line="1119" pos:column="13">/* [out] */</comment> <argument pos:line="1119" pos:column="25">__RPC__out DWORD_PTR *pdwCookie</argument>)</argument_list></macro> <op:operator pos:line="1119" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="1119" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="1121" pos:column="9">virtual <name pos:line="1121" pos:column="17">HRESULT</name> <name pos:line="1121" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1121" pos:column="43">UnRegisterFindScope</name><argument_list pos:line="1121" pos:column="62">( 
            <comment type="block" pos:line="1122" pos:column="13">/* [in] */</comment> <argument pos:line="1122" pos:column="24">DWORD_PTR dwCookie</argument>)</argument_list></macro> <op:operator pos:line="1122" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="1122" pos:column="46">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1126" pos:column="1">#<cpp:directive pos:line="1126" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1126" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1128" pos:column="5">typedef <type><struct pos:line="1128" pos:column="13">struct <name pos:line="1128" pos:column="20">IVsRegisterFindScopeVtbl</name>
    <block pos:line="1129" pos:column="5">{<public type="default" pos:line="1129" pos:column="6">
        <function_decl><type><name pos:line="1130" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1132" pos:column="9">HRESULT</name></type> ( <name pos:line="1132" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1132" pos:column="37">*</type:modifier><name pos:line="1132" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1132" pos:column="54">( 
            <param><decl><type><name pos:line="1133" pos:column="13">IVsRegisterFindScope</name> <type:modifier pos:line="1133" pos:column="34">*</type:modifier></type> <name pos:line="1133" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1134" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1134" pos:column="24">__RPC__in</name> <name pos:line="1134" pos:column="34">REFIID</name></type> <name pos:line="1134" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1135" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1136" pos:column="13">__RPC__deref_out</name>  <name pos:line="1136" pos:column="31">void</name> <type:modifier pos:line="1136" pos:column="36">*</type:modifier><type:modifier pos:line="1136" pos:column="37">*</type:modifier></type><name pos:line="1136" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1138" pos:column="9">ULONG</name></type> ( <name pos:line="1138" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1138" pos:column="35">*</type:modifier><name pos:line="1138" pos:column="36">AddRef</name> )<parameter_list pos:line="1138" pos:column="44">( 
            <param><decl><type><name pos:line="1139" pos:column="13">IVsRegisterFindScope</name> <type:modifier pos:line="1139" pos:column="34">*</type:modifier></type> <name pos:line="1139" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1141" pos:column="9">ULONG</name></type> ( <name pos:line="1141" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1141" pos:column="35">*</type:modifier><name pos:line="1141" pos:column="36">Release</name> )<parameter_list pos:line="1141" pos:column="45">( 
            <param><decl><type><name pos:line="1142" pos:column="13">IVsRegisterFindScope</name> <type:modifier pos:line="1142" pos:column="34">*</type:modifier></type> <name pos:line="1142" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1144" pos:column="9">HRESULT</name></type> ( <name pos:line="1144" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1144" pos:column="37">*</type:modifier><name pos:line="1144" pos:column="38">RegisterFindScope</name> )<parameter_list pos:line="1144" pos:column="57">( 
            <param><decl><type><name pos:line="1145" pos:column="13">IVsRegisterFindScope</name> <type:modifier pos:line="1145" pos:column="34">*</type:modifier></type> <name pos:line="1145" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1146" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1146" pos:column="24">__RPC__in_opt</name> <name pos:line="1146" pos:column="38">IVsFindScope</name> <type:modifier pos:line="1146" pos:column="51">*</type:modifier></type><name pos:line="1146" pos:column="52">pScope</name></decl></param>,
            <comment type="block" pos:line="1147" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1147" pos:column="25">__RPC__out</name> <name pos:line="1147" pos:column="36">DWORD_PTR</name> <type:modifier pos:line="1147" pos:column="46">*</type:modifier></type><name pos:line="1147" pos:column="47">pdwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1149" pos:column="9">HRESULT</name></type> ( <name pos:line="1149" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1149" pos:column="37">*</type:modifier><name pos:line="1149" pos:column="38">UnRegisterFindScope</name> )<parameter_list pos:line="1149" pos:column="59">( 
            <param><decl><type><name pos:line="1150" pos:column="13">IVsRegisterFindScope</name> <type:modifier pos:line="1150" pos:column="34">*</type:modifier></type> <name pos:line="1150" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1151" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1151" pos:column="24">DWORD_PTR</name></type> <name pos:line="1151" pos:column="34">dwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1153" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1154" pos:column="7">IVsRegisterFindScopeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1156" pos:column="5">interface</name></type> <name pos:line="1156" pos:column="15">IVsRegisterFindScope</name>
    <argument_list pos:line="1157" pos:column="5">{
        <argument><expr><name pos:line="1158" pos:column="9">CONST_VTBL</name> struct <name pos:line="1158" pos:column="27">IVsRegisterFindScopeVtbl</name> <op:operator pos:line="1158" pos:column="52">*</op:operator><name pos:line="1158" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1163" pos:column="1">#<cpp:directive pos:line="1163" pos:column="2">ifdef</cpp:directive> <name pos:line="1163" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1166" pos:column="1">#<cpp:directive pos:line="1166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1166" pos:column="9">IVsRegisterFindScope_QueryInterface</name><parameter_list pos:line="1166" pos:column="44">(<param><type><name pos:line="1166" pos:column="45">This</name></type></param>,<param><type><name pos:line="1166" pos:column="50">riid</name></type></param>,<param><type><name pos:line="1166" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1167" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1169" pos:column="1">#<cpp:directive pos:line="1169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1169" pos:column="9">IVsRegisterFindScope_AddRef</name><parameter_list pos:line="1169" pos:column="36">(<param><type><name pos:line="1169" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1170" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1172" pos:column="1">#<cpp:directive pos:line="1172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1172" pos:column="9">IVsRegisterFindScope_Release</name><parameter_list pos:line="1172" pos:column="37">(<param><type><name pos:line="1172" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1173" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1176" pos:column="1">#<cpp:directive pos:line="1176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1176" pos:column="9">IVsRegisterFindScope_RegisterFindScope</name><parameter_list pos:line="1176" pos:column="47">(<param><type><name pos:line="1176" pos:column="48">This</name></type></param>,<param><type><name pos:line="1176" pos:column="53">pScope</name></type></param>,<param><type><name pos:line="1176" pos:column="60">pdwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1177" pos:column="5">( (This)-&gt;lpVtbl -&gt; RegisterFindScope(This,pScope,pdwCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="1179" pos:column="1">#<cpp:directive pos:line="1179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1179" pos:column="9">IVsRegisterFindScope_UnRegisterFindScope</name><parameter_list pos:line="1179" pos:column="49">(<param><type><name pos:line="1179" pos:column="50">This</name></type></param>,<param><type><name pos:line="1179" pos:column="55">dwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1180" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnRegisterFindScope(This,dwCookie) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1182" pos:column="1">#<cpp:directive pos:line="1182" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1182" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1185" pos:column="1">#<cpp:directive pos:line="1185" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1185" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1190" pos:column="1">#<cpp:directive pos:line="1190" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1190" pos:column="9">/* __IVsRegisterFindScope_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1193" pos:column="1">#<cpp:directive pos:line="1193" pos:column="2">ifndef</cpp:directive> <name pos:line="1193" pos:column="9">__IVsHighlight_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1194" pos:column="1">#<cpp:directive pos:line="1194" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1194" pos:column="9">__IVsHighlight_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1196" pos:column="1">/* interface IVsHighlight */</comment>
<comment type="block" pos:line="1197" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1200" pos:column="1">EXTERN_C</name> <specifier pos:line="1200" pos:column="10">const</specifier> <name pos:line="1200" pos:column="16">IID</name></type> <name pos:line="1200" pos:column="20">IID_IVsHighlight</name></decl>;</decl_stmt>

<cpp:if pos:line="1202" pos:column="1">#<cpp:directive pos:line="1202" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1202" pos:column="5">defined</name><argument_list pos:line="1202" pos:column="12">(<argument><expr><name pos:line="1202" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1202" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1202" pos:column="29">!</op:operator><call><name pos:line="1202" pos:column="30">defined</name><argument_list pos:line="1202" pos:column="37">(<argument><expr><name pos:line="1202" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1204" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1204" pos:column="19">(<argument pos:line="1204" pos:column="20">"22212CD2-83FF-11d2-92E6-005345000000"</argument>)</argument_list></macro>
    <label><name pos:line="1205" pos:column="5">IVsHighlight</name> :</label> <expr_stmt><expr pos:line="1205" pos:column="20">public <name pos:line="1205" pos:column="27">IUnknown</name>
    <block pos:line="1206" pos:column="5">{
    <expr pos:line="1207" pos:column="5">public<op:operator pos:line="1207" pos:column="11">:</op:operator>
        virtual <name pos:line="1208" pos:column="17">HRESULT</name> <name pos:line="1208" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1208" pos:column="43">GetHighlightRect</name><argument_list pos:line="1208" pos:column="59">( 
            <comment type="block" pos:line="1209" pos:column="13">/* [out] */</comment> <argument pos:line="1209" pos:column="25">__RPC__out RECT *prc</argument>)</argument_list></macro> <op:operator pos:line="1209" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1209" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1213" pos:column="1">#<cpp:directive pos:line="1213" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1213" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1215" pos:column="5">typedef <type><struct pos:line="1215" pos:column="13">struct <name pos:line="1215" pos:column="20">IVsHighlightVtbl</name>
    <block pos:line="1216" pos:column="5">{<public type="default" pos:line="1216" pos:column="6">
        <function_decl><type><name pos:line="1217" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1219" pos:column="9">HRESULT</name></type> ( <name pos:line="1219" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1219" pos:column="37">*</type:modifier><name pos:line="1219" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1219" pos:column="54">( 
            <param><decl><type><name pos:line="1220" pos:column="13">IVsHighlight</name> <type:modifier pos:line="1220" pos:column="26">*</type:modifier></type> <name pos:line="1220" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1221" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1221" pos:column="24">__RPC__in</name> <name pos:line="1221" pos:column="34">REFIID</name></type> <name pos:line="1221" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1222" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1223" pos:column="13">__RPC__deref_out</name>  <name pos:line="1223" pos:column="31">void</name> <type:modifier pos:line="1223" pos:column="36">*</type:modifier><type:modifier pos:line="1223" pos:column="37">*</type:modifier></type><name pos:line="1223" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1225" pos:column="9">ULONG</name></type> ( <name pos:line="1225" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1225" pos:column="35">*</type:modifier><name pos:line="1225" pos:column="36">AddRef</name> )<parameter_list pos:line="1225" pos:column="44">( 
            <param><decl><type><name pos:line="1226" pos:column="13">IVsHighlight</name> <type:modifier pos:line="1226" pos:column="26">*</type:modifier></type> <name pos:line="1226" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1228" pos:column="9">ULONG</name></type> ( <name pos:line="1228" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1228" pos:column="35">*</type:modifier><name pos:line="1228" pos:column="36">Release</name> )<parameter_list pos:line="1228" pos:column="45">( 
            <param><decl><type><name pos:line="1229" pos:column="13">IVsHighlight</name> <type:modifier pos:line="1229" pos:column="26">*</type:modifier></type> <name pos:line="1229" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1231" pos:column="9">HRESULT</name></type> ( <name pos:line="1231" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1231" pos:column="37">*</type:modifier><name pos:line="1231" pos:column="38">GetHighlightRect</name> )<parameter_list pos:line="1231" pos:column="56">( 
            <param><decl><type><name pos:line="1232" pos:column="13">IVsHighlight</name> <type:modifier pos:line="1232" pos:column="26">*</type:modifier></type> <name pos:line="1232" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1233" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1233" pos:column="25">__RPC__out</name> <name pos:line="1233" pos:column="36">RECT</name> <type:modifier pos:line="1233" pos:column="41">*</type:modifier></type><name pos:line="1233" pos:column="42">prc</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1235" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1236" pos:column="7">IVsHighlightVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1238" pos:column="5">interface</name></type> <name pos:line="1238" pos:column="15">IVsHighlight</name>
    <argument_list pos:line="1239" pos:column="5">{
        <argument><expr><name pos:line="1240" pos:column="9">CONST_VTBL</name> struct <name pos:line="1240" pos:column="27">IVsHighlightVtbl</name> <op:operator pos:line="1240" pos:column="44">*</op:operator><name pos:line="1240" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1245" pos:column="1">#<cpp:directive pos:line="1245" pos:column="2">ifdef</cpp:directive> <name pos:line="1245" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1248" pos:column="1">#<cpp:directive pos:line="1248" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1248" pos:column="9">IVsHighlight_QueryInterface</name><parameter_list pos:line="1248" pos:column="36">(<param><type><name pos:line="1248" pos:column="37">This</name></type></param>,<param><type><name pos:line="1248" pos:column="42">riid</name></type></param>,<param><type><name pos:line="1248" pos:column="47">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1249" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1251" pos:column="1">#<cpp:directive pos:line="1251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1251" pos:column="9">IVsHighlight_AddRef</name><parameter_list pos:line="1251" pos:column="28">(<param><type><name pos:line="1251" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1252" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1254" pos:column="1">#<cpp:directive pos:line="1254" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1254" pos:column="9">IVsHighlight_Release</name><parameter_list pos:line="1254" pos:column="29">(<param><type><name pos:line="1254" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1255" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1258" pos:column="1">#<cpp:directive pos:line="1258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1258" pos:column="9">IVsHighlight_GetHighlightRect</name><parameter_list pos:line="1258" pos:column="38">(<param><type><name pos:line="1258" pos:column="39">This</name></type></param>,<param><type><name pos:line="1258" pos:column="44">prc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1259" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHighlightRect(This,prc) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1261" pos:column="1">#<cpp:directive pos:line="1261" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1261" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1264" pos:column="1">#<cpp:directive pos:line="1264" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1264" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1269" pos:column="1">#<cpp:directive pos:line="1269" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1269" pos:column="9">/* __IVsHighlight_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1272" pos:column="1">#<cpp:directive pos:line="1272" pos:column="2">ifndef</cpp:directive> <name pos:line="1272" pos:column="9">__IVsTextImageUtilities_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1273" pos:column="1">#<cpp:directive pos:line="1273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1273" pos:column="9">__IVsTextImageUtilities_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1275" pos:column="1">/* interface IVsTextImageUtilities */</comment>
<comment type="block" pos:line="1276" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1279" pos:column="1">EXTERN_C</name> <specifier pos:line="1279" pos:column="10">const</specifier> <name pos:line="1279" pos:column="16">IID</name></type> <name pos:line="1279" pos:column="20">IID_IVsTextImageUtilities</name></decl>;</decl_stmt>

<cpp:if pos:line="1281" pos:column="1">#<cpp:directive pos:line="1281" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1281" pos:column="5">defined</name><argument_list pos:line="1281" pos:column="12">(<argument><expr><name pos:line="1281" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1281" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1281" pos:column="29">!</op:operator><call><name pos:line="1281" pos:column="30">defined</name><argument_list pos:line="1281" pos:column="37">(<argument><expr><name pos:line="1281" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1283" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1283" pos:column="19">(<argument pos:line="1283" pos:column="20">"C5557BAA-B685-46dc-AF46-C16BFDE8FAB7"</argument>)</argument_list></macro>
    <label><name pos:line="1284" pos:column="5">IVsTextImageUtilities</name> :</label> <expr_stmt><expr pos:line="1284" pos:column="29">public <name pos:line="1284" pos:column="36">IUnknown</name>
    <block pos:line="1285" pos:column="5">{
    <expr pos:line="1286" pos:column="5">public<op:operator pos:line="1286" pos:column="11">:</op:operator>
        virtual <name pos:line="1287" pos:column="17">HRESULT</name> <name pos:line="1287" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1287" pos:column="43">GetReplaceText</name><argument_list pos:line="1287" pos:column="57">( 
            <comment type="block" pos:line="1288" pos:column="13">/* [in] */</comment> <argument pos:line="1288" pos:column="24">VSFINDOPTIONS grfOptions</argument>,
            <comment type="block" pos:line="1289" pos:column="13">/* [in] */</comment> <argument pos:line="1289" pos:column="24">__RPC__in LPCOLESTR pszReplace</argument>,
            <comment type="block" pos:line="1290" pos:column="13">/* [in] */</comment> <argument pos:line="1290" pos:column="24">__RPC__in_opt IVsTextImage *pText</argument>,
            <comment type="block" pos:line="1291" pos:column="13">/* [in] */</comment> <argument pos:line="1291" pos:column="24">__RPC__in const TextSpan *pMatch</argument>,
            <comment type="block" pos:line="1292" pos:column="13">/* [in] */</comment> <argument pos:line="1292" pos:column="24">__RPC__in_opt IVsTextSpanSet *pTags</argument>,
            <comment type="block" pos:line="1293" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1293" pos:column="33">__RPC__deref_out_opt BSTR *pbstrComputedText</argument>)</argument_list></macro> <op:operator pos:line="1293" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="1293" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="1295" pos:column="9">virtual <name pos:line="1295" pos:column="17">HRESULT</name> <name pos:line="1295" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1295" pos:column="43">LoadTextFile</name><argument_list pos:line="1295" pos:column="55">( 
            <comment type="block" pos:line="1296" pos:column="13">/* [in] */</comment> <argument pos:line="1296" pos:column="24">__RPC__in LPCOLESTR pszFilename</argument>,
            <comment type="block" pos:line="1297" pos:column="13">/* [in] */</comment> <argument pos:line="1297" pos:column="24">VSTFF vstffIn</argument>,
            <comment type="block" pos:line="1298" pos:column="13">/* [out] */</comment> <argument pos:line="1298" pos:column="25">__RPC__out VSTFF *pvstffOut</argument>,
            <comment type="block" pos:line="1299" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1299" pos:column="33">__RPC__deref_out_opt BSTR *pbstr</argument>)</argument_list></macro> <op:operator pos:line="1299" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="1299" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="1301" pos:column="9">virtual <name pos:line="1301" pos:column="17">HRESULT</name> <name pos:line="1301" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1301" pos:column="43">LoadTextImageFromFile</name><argument_list pos:line="1301" pos:column="64">( 
            <comment type="block" pos:line="1302" pos:column="13">/* [in] */</comment> <argument pos:line="1302" pos:column="24">__RPC__in LPCOLESTR pszFilename</argument>,
            <comment type="block" pos:line="1303" pos:column="13">/* [in] */</comment> <argument pos:line="1303" pos:column="24">__RPC__in_opt IVsTextImage *pImage</argument>,
            <comment type="block" pos:line="1304" pos:column="13">/* [in] */</comment> <argument pos:line="1304" pos:column="24">VSTFF vstffIn</argument>,
            <comment type="block" pos:line="1305" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1305" pos:column="33">__RPC__out VSTFF *pvstffOut</argument>)</argument_list></macro> <op:operator pos:line="1305" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="1305" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="1307" pos:column="9">virtual <name pos:line="1307" pos:column="17">HRESULT</name> <name pos:line="1307" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1307" pos:column="43">SaveTextImageToFile</name><argument_list pos:line="1307" pos:column="62">( 
            <comment type="block" pos:line="1308" pos:column="13">/* [in] */</comment> <argument pos:line="1308" pos:column="24">__RPC__in LPCOLESTR pszFilename</argument>,
            <comment type="block" pos:line="1309" pos:column="13">/* [in] */</comment> <argument pos:line="1309" pos:column="24">__RPC__in_opt IVsTextImage *pImage</argument>,
            <comment type="block" pos:line="1310" pos:column="13">/* [in] */</comment> <argument pos:line="1310" pos:column="24">VSTFF vstffIn</argument>,
            <comment type="block" pos:line="1311" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1311" pos:column="33">__RPC__out VSTFF *pvstffOut</argument>)</argument_list></macro> <op:operator pos:line="1311" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="1311" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="1313" pos:column="9">virtual <name pos:line="1313" pos:column="17">HRESULT</name> <name pos:line="1313" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1313" pos:column="43">GetTextFormat</name><argument_list pos:line="1313" pos:column="56">( 
            <comment type="block" pos:line="1314" pos:column="13">/* [in] */</comment> <argument pos:line="1314" pos:column="24">VSTFF vstffIn</argument>,
            <comment type="block" pos:line="1315" pos:column="13">/* [in] */</comment> <argument pos:line="1315" pos:column="24">DWORD cbData</argument>,
            <comment type="block" pos:line="1316" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="1316" pos:column="33">__RPC__in_ecount_full(cbData) const BYTE *pData</argument>,
            <comment type="block" pos:line="1317" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1317" pos:column="33">__RPC__out VSTFF *pvstffOut</argument>)</argument_list></macro> <op:operator pos:line="1317" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="1317" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="1319" pos:column="9">virtual <name pos:line="1319" pos:column="17">HRESULT</name> <name pos:line="1319" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1319" pos:column="43">LoadTextImageFromMemory</name><argument_list pos:line="1319" pos:column="66">( 
            <comment type="block" pos:line="1320" pos:column="13">/* [in] */</comment> <argument pos:line="1320" pos:column="24">__RPC__in_opt IVsTextImage *pImage</argument>,
            <comment type="block" pos:line="1321" pos:column="13">/* [in] */</comment> <argument pos:line="1321" pos:column="24">VSTFF vstffIn</argument>,
            <comment type="block" pos:line="1322" pos:column="13">/* [in] */</comment> <argument pos:line="1322" pos:column="24">DWORD cbData</argument>,
            <comment type="block" pos:line="1323" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="1323" pos:column="33">__RPC__in_ecount_full(cbData) const BYTE *pData</argument>,
            <comment type="block" pos:line="1324" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1324" pos:column="33">__RPC__out VSTFF *pvstffOut</argument>)</argument_list></macro> <op:operator pos:line="1324" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="1324" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="1326" pos:column="9">virtual <name pos:line="1326" pos:column="17">HRESULT</name> <name pos:line="1326" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1326" pos:column="43">SaveTextImageToMemory</name><argument_list pos:line="1326" pos:column="64">( 
            <comment type="block" pos:line="1327" pos:column="13">/* [in] */</comment> <argument pos:line="1327" pos:column="24">__RPC__in_opt IVsTextImage *pImage</argument>,
            <comment type="block" pos:line="1328" pos:column="13">/* [in] */</comment> <argument pos:line="1328" pos:column="24">VSTFF vstffIn</argument>,
            <comment type="block" pos:line="1329" pos:column="13">/* [in] */</comment> <argument pos:line="1329" pos:column="24">DWORD cbData</argument>,
            <comment type="block" pos:line="1330" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="1330" pos:column="45">__RPC__out_ecount_part(cbData, *pcbWritten) BYTE *pData</argument>,
            <comment type="block" pos:line="1331" pos:column="13">/* [out] */</comment> <argument pos:line="1331" pos:column="25">__RPC__out DWORD *pcbWritten</argument>,
            <comment type="block" pos:line="1332" pos:column="13">/* [out] */</comment> <argument pos:line="1332" pos:column="25">__RPC__out VSTFF *pvstffOut</argument>)</argument_list></macro> <op:operator pos:line="1332" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1332" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1336" pos:column="1">#<cpp:directive pos:line="1336" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1336" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1338" pos:column="5">typedef <type><struct pos:line="1338" pos:column="13">struct <name pos:line="1338" pos:column="20">IVsTextImageUtilitiesVtbl</name>
    <block pos:line="1339" pos:column="5">{<public type="default" pos:line="1339" pos:column="6">
        <function_decl><type><name pos:line="1340" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1342" pos:column="9">HRESULT</name></type> ( <name pos:line="1342" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1342" pos:column="37">*</type:modifier><name pos:line="1342" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1342" pos:column="54">( 
            <param><decl><type><name pos:line="1343" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1343" pos:column="35">*</type:modifier></type> <name pos:line="1343" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1344" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1344" pos:column="24">__RPC__in</name> <name pos:line="1344" pos:column="34">REFIID</name></type> <name pos:line="1344" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1345" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1346" pos:column="13">__RPC__deref_out</name>  <name pos:line="1346" pos:column="31">void</name> <type:modifier pos:line="1346" pos:column="36">*</type:modifier><type:modifier pos:line="1346" pos:column="37">*</type:modifier></type><name pos:line="1346" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1348" pos:column="9">ULONG</name></type> ( <name pos:line="1348" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1348" pos:column="35">*</type:modifier><name pos:line="1348" pos:column="36">AddRef</name> )<parameter_list pos:line="1348" pos:column="44">( 
            <param><decl><type><name pos:line="1349" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1349" pos:column="35">*</type:modifier></type> <name pos:line="1349" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1351" pos:column="9">ULONG</name></type> ( <name pos:line="1351" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1351" pos:column="35">*</type:modifier><name pos:line="1351" pos:column="36">Release</name> )<parameter_list pos:line="1351" pos:column="45">( 
            <param><decl><type><name pos:line="1352" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1352" pos:column="35">*</type:modifier></type> <name pos:line="1352" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1354" pos:column="9">HRESULT</name></type> ( <name pos:line="1354" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1354" pos:column="37">*</type:modifier><name pos:line="1354" pos:column="38">GetReplaceText</name> )<parameter_list pos:line="1354" pos:column="54">( 
            <param><decl><type><name pos:line="1355" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1355" pos:column="35">*</type:modifier></type> <name pos:line="1355" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1356" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1356" pos:column="24">VSFINDOPTIONS</name></type> <name pos:line="1356" pos:column="38">grfOptions</name></decl></param>,
            <comment type="block" pos:line="1357" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1357" pos:column="24">__RPC__in</name> <name pos:line="1357" pos:column="34">LPCOLESTR</name></type> <name pos:line="1357" pos:column="44">pszReplace</name></decl></param>,
            <comment type="block" pos:line="1358" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1358" pos:column="24">__RPC__in_opt</name> <name pos:line="1358" pos:column="38">IVsTextImage</name> <type:modifier pos:line="1358" pos:column="51">*</type:modifier></type><name pos:line="1358" pos:column="52">pText</name></decl></param>,
            <comment type="block" pos:line="1359" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1359" pos:column="24">__RPC__in</name> <specifier pos:line="1359" pos:column="34">const</specifier> <name pos:line="1359" pos:column="40">TextSpan</name> <type:modifier pos:line="1359" pos:column="49">*</type:modifier></type><name pos:line="1359" pos:column="50">pMatch</name></decl></param>,
            <comment type="block" pos:line="1360" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1360" pos:column="24">__RPC__in_opt</name> <name pos:line="1360" pos:column="38">IVsTextSpanSet</name> <type:modifier pos:line="1360" pos:column="53">*</type:modifier></type><name pos:line="1360" pos:column="54">pTags</name></decl></param>,
            <comment type="block" pos:line="1361" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1361" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1361" pos:column="54">BSTR</name> <type:modifier pos:line="1361" pos:column="59">*</type:modifier></type><name pos:line="1361" pos:column="60">pbstrComputedText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1363" pos:column="9">HRESULT</name></type> ( <name pos:line="1363" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1363" pos:column="37">*</type:modifier><name pos:line="1363" pos:column="38">LoadTextFile</name> )<parameter_list pos:line="1363" pos:column="52">( 
            <param><decl><type><name pos:line="1364" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1364" pos:column="35">*</type:modifier></type> <name pos:line="1364" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1365" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1365" pos:column="24">__RPC__in</name> <name pos:line="1365" pos:column="34">LPCOLESTR</name></type> <name pos:line="1365" pos:column="44">pszFilename</name></decl></param>,
            <comment type="block" pos:line="1366" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1366" pos:column="24">VSTFF</name></type> <name pos:line="1366" pos:column="30">vstffIn</name></decl></param>,
            <comment type="block" pos:line="1367" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1367" pos:column="25">__RPC__out</name> <name pos:line="1367" pos:column="36">VSTFF</name> <type:modifier pos:line="1367" pos:column="42">*</type:modifier></type><name pos:line="1367" pos:column="43">pvstffOut</name></decl></param>,
            <comment type="block" pos:line="1368" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1368" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1368" pos:column="54">BSTR</name> <type:modifier pos:line="1368" pos:column="59">*</type:modifier></type><name pos:line="1368" pos:column="60">pbstr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1370" pos:column="9">HRESULT</name></type> ( <name pos:line="1370" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1370" pos:column="37">*</type:modifier><name pos:line="1370" pos:column="38">LoadTextImageFromFile</name> )<parameter_list pos:line="1370" pos:column="61">( 
            <param><decl><type><name pos:line="1371" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1371" pos:column="35">*</type:modifier></type> <name pos:line="1371" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1372" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1372" pos:column="24">__RPC__in</name> <name pos:line="1372" pos:column="34">LPCOLESTR</name></type> <name pos:line="1372" pos:column="44">pszFilename</name></decl></param>,
            <comment type="block" pos:line="1373" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1373" pos:column="24">__RPC__in_opt</name> <name pos:line="1373" pos:column="38">IVsTextImage</name> <type:modifier pos:line="1373" pos:column="51">*</type:modifier></type><name pos:line="1373" pos:column="52">pImage</name></decl></param>,
            <comment type="block" pos:line="1374" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1374" pos:column="24">VSTFF</name></type> <name pos:line="1374" pos:column="30">vstffIn</name></decl></param>,
            <comment type="block" pos:line="1375" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1375" pos:column="33">__RPC__out</name> <name pos:line="1375" pos:column="44">VSTFF</name> <type:modifier pos:line="1375" pos:column="50">*</type:modifier></type><name pos:line="1375" pos:column="51">pvstffOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1377" pos:column="9">HRESULT</name></type> ( <name pos:line="1377" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1377" pos:column="37">*</type:modifier><name pos:line="1377" pos:column="38">SaveTextImageToFile</name> )<parameter_list pos:line="1377" pos:column="59">( 
            <param><decl><type><name pos:line="1378" pos:column="13">IVsTextImageUtilities</name> <type:modifier pos:line="1378" pos:column="35">*</type:modifier></type> <name pos:line="1378" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1379" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1379" pos:column="24">__RPC__in</name> <name pos:line="1379" pos:column="34">LPCOLESTR</name></type> <name pos:line="1379" pos:column="44">pszFilename</name></decl></param>,
            <comment type="block" pos:line="1380" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1380" pos:column="24">__RPC__in_opt</name> <name pos:line="1380" pos:column="38">IVsTextImage</name> <type:modifier pos:line="1380" pos:column="51">*</type:modifier></type><name pos:line="1380" pos:column="52">pImage</name></decl></param>,
            <comment type="block" pos:line="1381" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1381" pos:column="24">VSTFF</name></type> <name pos:line="1381" pos:column="30">vstffIn</name></decl></param>,
            <comment type="block" pos:line="1382" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1382" pos:column="33">__RPC__out</name> <name pos:line="1382" pos:column="44">VSTFF</name> <type:modifier pos:line="1382" pos:column="50">*</type:modifier></type><name pos:line="1382" pos:column="51">pvstffOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1384" pos:column="9">HRESULT</name> <argument_list pos:line="1384" pos:column="17">( <argument pos:line="1384" pos:column="19">STDMETHODCALLTYPE *GetTextFormat</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1384" pos:column="53">(</op:operator> 
            <name pos:line="1385" pos:column="13">IVsTextImageUtilities</name> <op:operator pos:line="1385" pos:column="35">*</op:operator> <name pos:line="1385" pos:column="37">This</name><op:operator pos:line="1385" pos:column="41">,</op:operator>
            <comment type="block" pos:line="1386" pos:column="13">/* [in] */</comment> <name pos:line="1386" pos:column="24">VSTFF</name> <name pos:line="1386" pos:column="30">vstffIn</name><op:operator pos:line="1386" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1387" pos:column="13">/* [in] */</comment> <name pos:line="1387" pos:column="24">DWORD</name> <name pos:line="1387" pos:column="30">cbData</name><op:operator pos:line="1387" pos:column="36">,</op:operator>
            <comment type="block" pos:line="1388" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1388" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1388" pos:column="54">(<argument pos:line="1388" pos:column="55">cbData</argument>)</argument_list></macro> const <name pos:line="1388" pos:column="69">BYTE</name> <op:operator pos:line="1388" pos:column="74">*</op:operator><name pos:line="1388" pos:column="75">pData</name><op:operator pos:line="1388" pos:column="80">,</op:operator>
            <comment type="block" pos:line="1389" pos:column="13">/* [retval][out] */</comment> <name pos:line="1389" pos:column="33">__RPC__out</name> <name pos:line="1389" pos:column="44">VSTFF</name> <op:operator pos:line="1389" pos:column="50">*</op:operator><name pos:line="1389" pos:column="51">pvstffOut</name><op:operator pos:line="1389" pos:column="60">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1391" pos:column="9">HRESULT</name> <argument_list pos:line="1391" pos:column="17">( <argument pos:line="1391" pos:column="19">STDMETHODCALLTYPE *LoadTextImageFromMemory</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1391" pos:column="63">(</op:operator> 
            <name pos:line="1392" pos:column="13">IVsTextImageUtilities</name> <op:operator pos:line="1392" pos:column="35">*</op:operator> <name pos:line="1392" pos:column="37">This</name><op:operator pos:line="1392" pos:column="41">,</op:operator>
            <comment type="block" pos:line="1393" pos:column="13">/* [in] */</comment> <name pos:line="1393" pos:column="24">__RPC__in_opt</name> <name pos:line="1393" pos:column="38">IVsTextImage</name> <op:operator pos:line="1393" pos:column="51">*</op:operator><name pos:line="1393" pos:column="52">pImage</name><op:operator pos:line="1393" pos:column="58">,</op:operator>
            <comment type="block" pos:line="1394" pos:column="13">/* [in] */</comment> <name pos:line="1394" pos:column="24">VSTFF</name> <name pos:line="1394" pos:column="30">vstffIn</name><op:operator pos:line="1394" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1395" pos:column="13">/* [in] */</comment> <name pos:line="1395" pos:column="24">DWORD</name> <name pos:line="1395" pos:column="30">cbData</name><op:operator pos:line="1395" pos:column="36">,</op:operator>
            <comment type="block" pos:line="1396" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1396" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1396" pos:column="54">(<argument pos:line="1396" pos:column="55">cbData</argument>)</argument_list></macro> const <name pos:line="1396" pos:column="69">BYTE</name> <op:operator pos:line="1396" pos:column="74">*</op:operator><name pos:line="1396" pos:column="75">pData</name><op:operator pos:line="1396" pos:column="80">,</op:operator>
            <comment type="block" pos:line="1397" pos:column="13">/* [retval][out] */</comment> <name pos:line="1397" pos:column="33">__RPC__out</name> <name pos:line="1397" pos:column="44">VSTFF</name> <op:operator pos:line="1397" pos:column="50">*</op:operator><name pos:line="1397" pos:column="51">pvstffOut</name><op:operator pos:line="1397" pos:column="60">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1399" pos:column="9">HRESULT</name> <argument_list pos:line="1399" pos:column="17">( <argument pos:line="1399" pos:column="19">STDMETHODCALLTYPE *SaveTextImageToMemory</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1399" pos:column="61">(</op:operator> 
            <name pos:line="1400" pos:column="13">IVsTextImageUtilities</name> <op:operator pos:line="1400" pos:column="35">*</op:operator> <name pos:line="1400" pos:column="37">This</name><op:operator pos:line="1400" pos:column="41">,</op:operator>
            <comment type="block" pos:line="1401" pos:column="13">/* [in] */</comment> <name pos:line="1401" pos:column="24">__RPC__in_opt</name> <name pos:line="1401" pos:column="38">IVsTextImage</name> <op:operator pos:line="1401" pos:column="51">*</op:operator><name pos:line="1401" pos:column="52">pImage</name><op:operator pos:line="1401" pos:column="58">,</op:operator>
            <comment type="block" pos:line="1402" pos:column="13">/* [in] */</comment> <name pos:line="1402" pos:column="24">VSTFF</name> <name pos:line="1402" pos:column="30">vstffIn</name><op:operator pos:line="1402" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1403" pos:column="13">/* [in] */</comment> <name pos:line="1403" pos:column="24">DWORD</name> <name pos:line="1403" pos:column="30">cbData</name><op:operator pos:line="1403" pos:column="36">,</op:operator>
            <comment type="block" pos:line="1404" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1404" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1404" pos:column="67">(<argument pos:line="1404" pos:column="68">cbData</argument>, <argument pos:line="1404" pos:column="76">*pcbWritten</argument>)</argument_list></macro> <name pos:line="1404" pos:column="89">BYTE</name> <op:operator pos:line="1404" pos:column="94">*</op:operator><name pos:line="1404" pos:column="95">pData</name><op:operator pos:line="1404" pos:column="100">,</op:operator>
            <comment type="block" pos:line="1405" pos:column="13">/* [out] */</comment> <name pos:line="1405" pos:column="25">__RPC__out</name> <name pos:line="1405" pos:column="36">DWORD</name> <op:operator pos:line="1405" pos:column="42">*</op:operator><name pos:line="1405" pos:column="43">pcbWritten</name><op:operator pos:line="1405" pos:column="53">,</op:operator>
            <comment type="block" pos:line="1406" pos:column="13">/* [out] */</comment> <name pos:line="1406" pos:column="25">__RPC__out</name> <name pos:line="1406" pos:column="36">VSTFF</name> <op:operator pos:line="1406" pos:column="42">*</op:operator><name pos:line="1406" pos:column="43">pvstffOut</name><op:operator pos:line="1406" pos:column="52">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1408" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1409" pos:column="7">IVsTextImageUtilitiesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1411" pos:column="5">interface</name></type> <name pos:line="1411" pos:column="15">IVsTextImageUtilities</name>
    <argument_list pos:line="1412" pos:column="5">{
        <argument><expr><name pos:line="1413" pos:column="9">CONST_VTBL</name> struct <name pos:line="1413" pos:column="27">IVsTextImageUtilitiesVtbl</name> <op:operator pos:line="1413" pos:column="53">*</op:operator><name pos:line="1413" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1418" pos:column="1">#<cpp:directive pos:line="1418" pos:column="2">ifdef</cpp:directive> <name pos:line="1418" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1421" pos:column="1">#<cpp:directive pos:line="1421" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1421" pos:column="9">IVsTextImageUtilities_QueryInterface</name><parameter_list pos:line="1421" pos:column="45">(<param><type><name pos:line="1421" pos:column="46">This</name></type></param>,<param><type><name pos:line="1421" pos:column="51">riid</name></type></param>,<param><type><name pos:line="1421" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1422" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1424" pos:column="1">#<cpp:directive pos:line="1424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1424" pos:column="9">IVsTextImageUtilities_AddRef</name><parameter_list pos:line="1424" pos:column="37">(<param><type><name pos:line="1424" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1425" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1427" pos:column="1">#<cpp:directive pos:line="1427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1427" pos:column="9">IVsTextImageUtilities_Release</name><parameter_list pos:line="1427" pos:column="38">(<param><type><name pos:line="1427" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1428" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1431" pos:column="1">#<cpp:directive pos:line="1431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1431" pos:column="9">IVsTextImageUtilities_GetReplaceText</name><parameter_list pos:line="1431" pos:column="45">(<param><type><name pos:line="1431" pos:column="46">This</name></type></param>,<param><type><name pos:line="1431" pos:column="51">grfOptions</name></type></param>,<param><type><name pos:line="1431" pos:column="62">pszReplace</name></type></param>,<param><type><name pos:line="1431" pos:column="73">pText</name></type></param>,<param><type><name pos:line="1431" pos:column="79">pMatch</name></type></param>,<param><type><name pos:line="1431" pos:column="86">pTags</name></type></param>,<param><type><name pos:line="1431" pos:column="92">pbstrComputedText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1432" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReplaceText(This,grfOptions,pszReplace,pText,pMatch,pTags,pbstrComputedText) )</cpp:value></cpp:define> 

<cpp:define pos:line="1434" pos:column="1">#<cpp:directive pos:line="1434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1434" pos:column="9">IVsTextImageUtilities_LoadTextFile</name><parameter_list pos:line="1434" pos:column="43">(<param><type><name pos:line="1434" pos:column="44">This</name></type></param>,<param><type><name pos:line="1434" pos:column="49">pszFilename</name></type></param>,<param><type><name pos:line="1434" pos:column="61">vstffIn</name></type></param>,<param><type><name pos:line="1434" pos:column="69">pvstffOut</name></type></param>,<param><type><name pos:line="1434" pos:column="79">pbstr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1435" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadTextFile(This,pszFilename,vstffIn,pvstffOut,pbstr) )</cpp:value></cpp:define> 

<cpp:define pos:line="1437" pos:column="1">#<cpp:directive pos:line="1437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1437" pos:column="9">IVsTextImageUtilities_LoadTextImageFromFile</name><parameter_list pos:line="1437" pos:column="52">(<param><type><name pos:line="1437" pos:column="53">This</name></type></param>,<param><type><name pos:line="1437" pos:column="58">pszFilename</name></type></param>,<param><type><name pos:line="1437" pos:column="70">pImage</name></type></param>,<param><type><name pos:line="1437" pos:column="77">vstffIn</name></type></param>,<param><type><name pos:line="1437" pos:column="85">pvstffOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1438" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadTextImageFromFile(This,pszFilename,pImage,vstffIn,pvstffOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="1440" pos:column="1">#<cpp:directive pos:line="1440" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1440" pos:column="9">IVsTextImageUtilities_SaveTextImageToFile</name><parameter_list pos:line="1440" pos:column="50">(<param><type><name pos:line="1440" pos:column="51">This</name></type></param>,<param><type><name pos:line="1440" pos:column="56">pszFilename</name></type></param>,<param><type><name pos:line="1440" pos:column="68">pImage</name></type></param>,<param><type><name pos:line="1440" pos:column="75">vstffIn</name></type></param>,<param><type><name pos:line="1440" pos:column="83">pvstffOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1441" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveTextImageToFile(This,pszFilename,pImage,vstffIn,pvstffOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="1443" pos:column="1">#<cpp:directive pos:line="1443" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1443" pos:column="9">IVsTextImageUtilities_GetTextFormat</name><parameter_list pos:line="1443" pos:column="44">(<param><type><name pos:line="1443" pos:column="45">This</name></type></param>,<param><type><name pos:line="1443" pos:column="50">vstffIn</name></type></param>,<param><type><name pos:line="1443" pos:column="58">cbData</name></type></param>,<param><type><name pos:line="1443" pos:column="65">pData</name></type></param>,<param><type><name pos:line="1443" pos:column="71">pvstffOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1444" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextFormat(This,vstffIn,cbData,pData,pvstffOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="1446" pos:column="1">#<cpp:directive pos:line="1446" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1446" pos:column="9">IVsTextImageUtilities_LoadTextImageFromMemory</name><parameter_list pos:line="1446" pos:column="54">(<param><type><name pos:line="1446" pos:column="55">This</name></type></param>,<param><type><name pos:line="1446" pos:column="60">pImage</name></type></param>,<param><type><name pos:line="1446" pos:column="67">vstffIn</name></type></param>,<param><type><name pos:line="1446" pos:column="75">cbData</name></type></param>,<param><type><name pos:line="1446" pos:column="82">pData</name></type></param>,<param><type><name pos:line="1446" pos:column="88">pvstffOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1447" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadTextImageFromMemory(This,pImage,vstffIn,cbData,pData,pvstffOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="1449" pos:column="1">#<cpp:directive pos:line="1449" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1449" pos:column="9">IVsTextImageUtilities_SaveTextImageToMemory</name><parameter_list pos:line="1449" pos:column="52">(<param><type><name pos:line="1449" pos:column="53">This</name></type></param>,<param><type><name pos:line="1449" pos:column="58">pImage</name></type></param>,<param><type><name pos:line="1449" pos:column="65">vstffIn</name></type></param>,<param><type><name pos:line="1449" pos:column="73">cbData</name></type></param>,<param><type><name pos:line="1449" pos:column="80">pData</name></type></param>,<param><type><name pos:line="1449" pos:column="86">pcbWritten</name></type></param>,<param><type><name pos:line="1449" pos:column="97">pvstffOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1450" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveTextImageToMemory(This,pImage,vstffIn,cbData,pData,pcbWritten,pvstffOut) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1452" pos:column="1">#<cpp:directive pos:line="1452" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1452" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1455" pos:column="1">#<cpp:directive pos:line="1455" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1455" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1460" pos:column="1">#<cpp:directive pos:line="1460" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1460" pos:column="9">/* __IVsTextImageUtilities_INTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="1463" pos:column="1">EXTERN_C</name> <specifier pos:line="1463" pos:column="10">const</specifier> <name pos:line="1463" pos:column="16">CLSID</name></type> <name pos:line="1463" pos:column="22">CLSID_VsFinder</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="1465" pos:column="1">#<cpp:directive pos:line="1465" pos:column="2">ifdef</cpp:directive> <name pos:line="1465" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="1467" pos:column="1">class</type> <name pos:line="1467" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="1467" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="1467" pos:column="21">"9F842E53-E27B-426f-AE69-8F075770C6F3"</lit:literal></expr></argument>)</argument_list>
<name pos:line="1468" pos:column="1">VsFinder</name></decl>;</decl_stmt>
<cpp:endif pos:line="1469" pos:column="1">#<cpp:directive pos:line="1469" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="1471" pos:column="1">EXTERN_C</name> <specifier pos:line="1471" pos:column="10">const</specifier> <name pos:line="1471" pos:column="16">CLSID</name></type> <name pos:line="1471" pos:column="22">CLSID_VsTextSpanSet</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="1473" pos:column="1">#<cpp:directive pos:line="1473" pos:column="2">ifdef</cpp:directive> <name pos:line="1473" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="1475" pos:column="1">class</type> <name pos:line="1475" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="1475" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="1475" pos:column="21">"31A81214-5A9F-4532-ACD0-3204A9AB5D08"</lit:literal></expr></argument>)</argument_list>
<name pos:line="1476" pos:column="1">VsTextSpanSet</name></decl>;</decl_stmt>
<cpp:endif pos:line="1477" pos:column="1">#<cpp:directive pos:line="1477" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="1479" pos:column="1">EXTERN_C</name> <specifier pos:line="1479" pos:column="10">const</specifier> <name pos:line="1479" pos:column="16">CLSID</name></type> <name pos:line="1479" pos:column="22">CLSID_VsTextImage</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="1481" pos:column="1">#<cpp:directive pos:line="1481" pos:column="2">ifdef</cpp:directive> <name pos:line="1481" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="1483" pos:column="1">class</type> <name pos:line="1483" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="1483" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="1483" pos:column="21">"66B88230-2363-4992-B740-B0450A6F51CA"</lit:literal></expr></argument>)</argument_list>
<name pos:line="1484" pos:column="1">VsTextImage</name></decl>;</decl_stmt>
<cpp:endif pos:line="1485" pos:column="1">#<cpp:directive pos:line="1485" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:endif pos:line="1486" pos:column="1">#<cpp:directive pos:line="1486" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1486" pos:column="8">/* __TextFind_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="1488" pos:column="1">/* interface __MIDL_itf_textfind_0001_0223 */</comment>
<comment type="block" pos:line="1489" pos:column="1">/* [local] */</comment> 

<decl_stmt><decl><type><specifier pos:line="1491" pos:column="1">const</specifier> <name pos:line="1491" pos:column="7">GUID</name></type> <name pos:line="1491" pos:column="12">GUID_FindReplace</name>   <init pos:line="1491" pos:column="31">= <expr><block pos:line="1491" pos:column="33">{ <expr><lit:literal type="number" pos:line="1491" pos:column="35">0xcf2ddc32</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="47">0x8cad</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="55">0x11d2</lit:literal></expr>, <expr><block pos:line="1491" pos:column="63">{ <expr><lit:literal type="number" pos:line="1491" pos:column="65">0x93</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="71">0x2</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="76">0x0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="81">0x53</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="87">0x45</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="93">0x0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="98">0x0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1491" pos:column="103">0x0</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1492" pos:column="1">const</specifier> <name pos:line="1492" pos:column="7">GUID</name></type> <name pos:line="1492" pos:column="12">GUID_FindAdvanced</name> <init pos:line="1492" pos:column="30">= <expr><block pos:line="1492" pos:column="32">{ <expr><lit:literal type="number" pos:line="1492" pos:column="34">0xe830ec50</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="46">0xc2b5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="54">0x11d2</lit:literal></expr>, <expr><block pos:line="1492" pos:column="62">{ <expr><lit:literal type="number" pos:line="1492" pos:column="64">0x93</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="70">0x75</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="76">0x0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="81">0x80</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="87">0xc7</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="93">0x47</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="99">0xd9</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1492" pos:column="105">0xa0</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1493" pos:column="1">const</specifier> <name pos:line="1493" pos:column="7">GUID</name></type> <name pos:line="1493" pos:column="12">GUID_FindResults1</name>  <init pos:line="1493" pos:column="31">= <expr><block pos:line="1493" pos:column="33">{ <expr><lit:literal type="number" pos:line="1493" pos:column="35">0xf887920</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="46">0xc2b6</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="54">0x11d2</lit:literal></expr>, <expr><block pos:line="1493" pos:column="62">{ <expr><lit:literal type="number" pos:line="1493" pos:column="64">0x93</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="70">0x75</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="76">0x0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="81">0x80</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="87">0xc7</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="93">0x47</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="99">0xd9</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1493" pos:column="105">0xa0</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1494" pos:column="1">const</specifier> <name pos:line="1494" pos:column="7">GUID</name></type> <name pos:line="1494" pos:column="12">GUID_FindResults2</name>  <init pos:line="1494" pos:column="31">= <expr><block pos:line="1494" pos:column="33">{ <expr><lit:literal type="number" pos:line="1494" pos:column="35">0xf887921</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="46">0xc2b6</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="54">0x11d2</lit:literal></expr>, <expr><block pos:line="1494" pos:column="62">{ <expr><lit:literal type="number" pos:line="1494" pos:column="64">0x93</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="70">0x75</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="76">0x0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="81">0x80</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="87">0xc7</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="93">0x47</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="99">0xd9</lit:literal></expr>, <expr><lit:literal type="number" pos:line="1494" pos:column="105">0xa0</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier pos:line="1497" pos:column="1">extern</specifier> <name pos:line="1497" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1497" pos:column="22">__MIDL_itf_textfind_0001_0223_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1498" pos:column="1">extern</specifier> <name pos:line="1498" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1498" pos:column="22">__MIDL_itf_textfind_0001_0223_v0_0_s_ifspec</name></decl>;</decl_stmt>

<comment type="block" pos:line="1500" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="1502" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="1504" pos:column="1">#<cpp:directive pos:line="1504" pos:column="2">ifdef</cpp:directive> <name pos:line="1504" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="1506" pos:column="1">#<cpp:directive pos:line="1506" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="1508" pos:column="1">#<cpp:directive pos:line="1508" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
