<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core.UnitTests\Tools\InFileCoOccurrenceMatrixTests.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">IO</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Linq</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Text</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">NUnit</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Framework</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Core</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">Tools</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Sando</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">Core</name><op:operator pos:line="10" pos:column="21">.</op:operator><name pos:line="10" pos:column="22">UnitTests</name><op:operator pos:line="10" pos:column="31">.</op:operator><name pos:line="10" pos:column="32">Tools</name></name>
<block pos:line="11" pos:column="1">{
    <class><attribute pos:line="12" pos:column="5">[<expr><name pos:line="12" pos:column="6">TestFixture</name></expr>]</attribute>
    class <name pos:line="13" pos:column="11">InFileCoOccurrenceMatrixTests</name>
    <block pos:line="14" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">IWordCoOccurrenceMatrix</name></type> <name pos:line="15" pos:column="40">matrix</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">InFileCoOccurrenceMatrixTests</name><parameter_list pos:line="17" pos:column="45">()</parameter_list>
        <block pos:line="18" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">this</name><op:operator pos:line="19" pos:column="17">.</op:operator><name pos:line="19" pos:column="18">matrix</name></name> <op:operator pos:line="19" pos:column="25">=</op:operator> <op:operator pos:line="19" pos:column="27">new</op:operator> <call><name pos:line="19" pos:column="31">SparseCoOccurrenceMatrix</name><argument_list pos:line="19" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>


        <function><type><attribute pos:line="23" pos:column="9">[<expr><name pos:line="23" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">void</name></type> <name pos:line="24" pos:column="21">TestPerformanceOfMatrix</name><parameter_list pos:line="24" pos:column="44">()</parameter_list>
        <block pos:line="25" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">Stopwatch</name></type> <name pos:line="26" pos:column="23">stopwatch</name> <init pos:line="26" pos:column="33">= <expr><op:operator pos:line="26" pos:column="35">new</op:operator> <call><name pos:line="26" pos:column="39">Stopwatch</name><argument_list pos:line="26" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">stopwatch</name><op:operator pos:line="27" pos:column="22">.</op:operator><name pos:line="27" pos:column="23">Start</name></name><argument_list pos:line="27" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">matrix</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Initialize</name></name><argument_list pos:line="28" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="31">@"TestFiles\LargeMatrix"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">matrix</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">Dispose</name></name><argument_list pos:line="29" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">stopwatch</name><op:operator pos:line="30" pos:column="22">.</op:operator><name pos:line="30" pos:column="23">Stop</name></name><argument_list pos:line="30" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">IsTrue</name></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">stopwatch</name><op:operator pos:line="31" pos:column="36">.</op:operator><name pos:line="31" pos:column="37">ElapsedMilliseconds</name></name> <op:operator pos:line="31" pos:column="57">&lt;</op:operator> <lit:literal type="number" pos:line="31" pos:column="59">500</lit:literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        
    }</block></class>
}</block></namespace>
</unit>
