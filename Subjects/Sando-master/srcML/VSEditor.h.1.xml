<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\VSEditor.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for VSEditor.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="25" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="26" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifndef</cpp:directive> <name pos:line="28" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="30" pos:column="8">// __RPCNDR_H_VERSION__</comment>


<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__VSEditor_h__</name></cpp:ifndef>
<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">__VSEditor_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if</cpp:directive> <expr><call><name pos:line="36" pos:column="5">defined</name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="36" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="36" pos:column="26">(</op:operator><name pos:line="36" pos:column="27">_MSC_VER</name> <op:operator pos:line="36" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="36" pos:column="39">1020</lit:literal><op:operator pos:line="36" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="40" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__IEnumeratorBSTR_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__IEnumeratorBSTR_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="44" pos:column="1">typedef <type><name pos:line="44" pos:column="9">interface</name> <name pos:line="44" pos:column="19">IEnumeratorBSTR</name></type> <name pos:line="44" pos:column="35">IEnumeratorBSTR</name>;</typedef>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="45" pos:column="9">/* __IEnumeratorBSTR_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifndef</cpp:directive> <name pos:line="48" pos:column="9">__IEnumerableBSTR_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="49" pos:column="9">__IEnumerableBSTR_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="50" pos:column="1">typedef <type><name pos:line="50" pos:column="9">interface</name> <name pos:line="50" pos:column="19">IEnumerableBSTR</name></type> <name pos:line="50" pos:column="35">IEnumerableBSTR</name>;</typedef>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="51" pos:column="9">/* __IEnumerableBSTR_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifndef</cpp:directive> <name pos:line="54" pos:column="9">__IEnumeratorIVxContentType_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="55" pos:column="9">__IEnumeratorIVxContentType_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="56" pos:column="1">typedef <type><name pos:line="56" pos:column="9">interface</name> <name pos:line="56" pos:column="19">IEnumeratorIVxContentType</name></type> <name pos:line="56" pos:column="45">IEnumeratorIVxContentType</name>;</typedef>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="57" pos:column="9">/* __IEnumeratorIVxContentType_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifndef</cpp:directive> <name pos:line="60" pos:column="9">__IEnumerableIVxContentType_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="61" pos:column="9">__IEnumerableIVxContentType_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="62" pos:column="1">typedef <type><name pos:line="62" pos:column="9">interface</name> <name pos:line="62" pos:column="19">IEnumerableIVxContentType</name></type> <name pos:line="62" pos:column="45">IEnumerableIVxContentType</name>;</typedef>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="63" pos:column="9">/* __IEnumerableIVxContentType_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">ifndef</cpp:directive> <name pos:line="66" pos:column="9">__IVxTextDocumentFileActionEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="67" pos:column="9">__IVxTextDocumentFileActionEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="68" pos:column="1">typedef <type><name pos:line="68" pos:column="9">interface</name> <name pos:line="68" pos:column="19">IVxTextDocumentFileActionEvent</name></type> <name pos:line="68" pos:column="50">IVxTextDocumentFileActionEvent</name>;</typedef>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="69" pos:column="9">/* __IVxTextDocumentFileActionEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifndef</cpp:directive> <name pos:line="72" pos:column="9">__IVxEventArgsEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="73" pos:column="9">__IVxEventArgsEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="74" pos:column="1">typedef <type><name pos:line="74" pos:column="9">interface</name> <name pos:line="74" pos:column="19">IVxEventArgsEvent</name></type> <name pos:line="74" pos:column="37">IVxEventArgsEvent</name>;</typedef>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="75" pos:column="9">/* __IVxEventArgsEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifndef</cpp:directive> <name pos:line="78" pos:column="9">__IVxTextDocumentEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="79" pos:column="9">__IVxTextDocumentEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="80" pos:column="1">typedef <type><name pos:line="80" pos:column="9">interface</name> <name pos:line="80" pos:column="19">IVxTextDocumentEvent</name></type> <name pos:line="80" pos:column="40">IVxTextDocumentEvent</name>;</typedef>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="81" pos:column="9">/* __IVxTextDocumentEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">ifndef</cpp:directive> <name pos:line="84" pos:column="9">__IVxSnapshotSpanEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="85" pos:column="9">__IVxSnapshotSpanEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="86" pos:column="1">typedef <type><name pos:line="86" pos:column="9">interface</name> <name pos:line="86" pos:column="19">IVxSnapshotSpanEvent</name></type> <name pos:line="86" pos:column="40">IVxSnapshotSpanEvent</name>;</typedef>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="87" pos:column="9">/* __IVxSnapshotSpanEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifndef</cpp:directive> <name pos:line="90" pos:column="9">__IVxTextContentChangedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="91" pos:column="9">__IVxTextContentChangedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="92" pos:column="1">typedef <type><name pos:line="92" pos:column="9">interface</name> <name pos:line="92" pos:column="19">IVxTextContentChangedEvent</name></type> <name pos:line="92" pos:column="46">IVxTextContentChangedEvent</name>;</typedef>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="93" pos:column="9">/* __IVxTextContentChangedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">ifndef</cpp:directive> <name pos:line="96" pos:column="9">__IVxTextContentChangingEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="97" pos:column="9">__IVxTextContentChangingEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="98" pos:column="1">typedef <type><name pos:line="98" pos:column="9">interface</name> <name pos:line="98" pos:column="19">IVxTextContentChangingEvent</name></type> <name pos:line="98" pos:column="47">IVxTextContentChangingEvent</name>;</typedef>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="99" pos:column="9">/* __IVxTextContentChangingEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">ifndef</cpp:directive> <name pos:line="102" pos:column="9">__IVxContentTypeChangedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="103" pos:column="9">__IVxContentTypeChangedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="104" pos:column="1">typedef <type><name pos:line="104" pos:column="9">interface</name> <name pos:line="104" pos:column="19">IVxContentTypeChangedEvent</name></type> <name pos:line="104" pos:column="46">IVxContentTypeChangedEvent</name>;</typedef>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="105" pos:column="9">/* __IVxContentTypeChangedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">ifndef</cpp:directive> <name pos:line="108" pos:column="9">__IVxTextBufferCreatedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="109" pos:column="9">__IVxTextBufferCreatedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="110" pos:column="1">typedef <type><name pos:line="110" pos:column="9">interface</name> <name pos:line="110" pos:column="19">IVxTextBufferCreatedEvent</name></type> <name pos:line="110" pos:column="45">IVxTextBufferCreatedEvent</name>;</typedef>
<cpp:endif pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="111" pos:column="9">/* __IVxTextBufferCreatedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">ifndef</cpp:directive> <name pos:line="114" pos:column="9">__IEnumeratorIVxTextSnapshotLine_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="115" pos:column="9">__IEnumeratorIVxTextSnapshotLine_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="116" pos:column="1">typedef <type><name pos:line="116" pos:column="9">interface</name> <name pos:line="116" pos:column="19">IEnumeratorIVxTextSnapshotLine</name></type> <name pos:line="116" pos:column="50">IEnumeratorIVxTextSnapshotLine</name>;</typedef>
<cpp:endif pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="117" pos:column="9">/* __IEnumeratorIVxTextSnapshotLine_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">ifndef</cpp:directive> <name pos:line="120" pos:column="9">__IEnumerableIVxTextSnapshotLine_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="121" pos:column="9">__IEnumerableIVxTextSnapshotLine_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="122" pos:column="1">typedef <type><name pos:line="122" pos:column="9">interface</name> <name pos:line="122" pos:column="19">IEnumerableIVxTextSnapshotLine</name></type> <name pos:line="122" pos:column="50">IEnumerableIVxTextSnapshotLine</name>;</typedef>
<cpp:endif pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="123" pos:column="9">/* __IEnumerableIVxTextSnapshotLine_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">ifndef</cpp:directive> <name pos:line="126" pos:column="9">__IEnumeratorVxSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="127" pos:column="9">__IEnumeratorVxSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="128" pos:column="1">typedef <type><name pos:line="128" pos:column="9">interface</name> <name pos:line="128" pos:column="19">IEnumeratorVxSpan</name></type> <name pos:line="128" pos:column="37">IEnumeratorVxSpan</name>;</typedef>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="129" pos:column="9">/* __IEnumeratorVxSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">ifndef</cpp:directive> <name pos:line="132" pos:column="9">__IListVxSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="133" pos:column="9">__IListVxSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="134" pos:column="1">typedef <type><name pos:line="134" pos:column="9">interface</name> <name pos:line="134" pos:column="19">IListVxSpan</name></type> <name pos:line="134" pos:column="31">IListVxSpan</name>;</typedef>
<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="135" pos:column="9">/* __IListVxSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">ifndef</cpp:directive> <name pos:line="138" pos:column="9">__IEnumeratorIVxTextBuffer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="139" pos:column="9">__IEnumeratorIVxTextBuffer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="140" pos:column="1">typedef <type><name pos:line="140" pos:column="9">interface</name> <name pos:line="140" pos:column="19">IEnumeratorIVxTextBuffer</name></type> <name pos:line="140" pos:column="44">IEnumeratorIVxTextBuffer</name>;</typedef>
<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="141" pos:column="9">/* __IEnumeratorIVxTextBuffer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">ifndef</cpp:directive> <name pos:line="144" pos:column="9">__IListIVxTextBuffer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="145" pos:column="9">__IListIVxTextBuffer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="146" pos:column="1">typedef <type><name pos:line="146" pos:column="9">interface</name> <name pos:line="146" pos:column="19">IListIVxTextBuffer</name></type> <name pos:line="146" pos:column="38">IListIVxTextBuffer</name>;</typedef>
<cpp:endif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="147" pos:column="9">/* __IListIVxTextBuffer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">ifndef</cpp:directive> <name pos:line="150" pos:column="9">__IVxGraphBuffersChangedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="151" pos:column="9">__IVxGraphBuffersChangedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="152" pos:column="1">typedef <type><name pos:line="152" pos:column="9">interface</name> <name pos:line="152" pos:column="19">IVxGraphBuffersChangedEvent</name></type> <name pos:line="152" pos:column="47">IVxGraphBuffersChangedEvent</name>;</typedef>
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="153" pos:column="9">/* __IVxGraphBuffersChangedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">ifndef</cpp:directive> <name pos:line="156" pos:column="9">__IVxGraphBufferContentTypeChangedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="157" pos:column="9">__IVxGraphBufferContentTypeChangedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="158" pos:column="1">typedef <type><name pos:line="158" pos:column="9">interface</name> <name pos:line="158" pos:column="19">IVxGraphBufferContentTypeChangedEvent</name></type> <name pos:line="158" pos:column="57">IVxGraphBufferContentTypeChangedEvent</name>;</typedef>
<cpp:endif pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="159" pos:column="9">/* __IVxGraphBufferContentTypeChangedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">ifndef</cpp:directive> <name pos:line="162" pos:column="9">__IEnumeratorIVxTextSnapshot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="163" pos:column="9">__IEnumeratorIVxTextSnapshot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="164" pos:column="1">typedef <type><name pos:line="164" pos:column="9">interface</name> <name pos:line="164" pos:column="19">IEnumeratorIVxTextSnapshot</name></type> <name pos:line="164" pos:column="46">IEnumeratorIVxTextSnapshot</name>;</typedef>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="165" pos:column="9">/* __IEnumeratorIVxTextSnapshot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">ifndef</cpp:directive> <name pos:line="168" pos:column="9">__IListIVxTextSnapshot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="169" pos:column="9">__IListIVxTextSnapshot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="170" pos:column="1">typedef <type><name pos:line="170" pos:column="9">interface</name> <name pos:line="170" pos:column="19">IListIVxTextSnapshot</name></type> <name pos:line="170" pos:column="40">IListIVxTextSnapshot</name>;</typedef>
<cpp:endif pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="171" pos:column="9">/* __IListIVxTextSnapshot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">ifndef</cpp:directive> <name pos:line="174" pos:column="9">__IEnumeratorVxSnapshotSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="175" pos:column="9">__IEnumeratorVxSnapshotSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="176" pos:column="1">typedef <type><name pos:line="176" pos:column="9">interface</name> <name pos:line="176" pos:column="19">IEnumeratorVxSnapshotSpan</name></type> <name pos:line="176" pos:column="45">IEnumeratorVxSnapshotSpan</name>;</typedef>
<cpp:endif pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="177" pos:column="9">/* __IEnumeratorVxSnapshotSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">ifndef</cpp:directive> <name pos:line="180" pos:column="9">__IListVxSnapshotSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="181" pos:column="9">__IListVxSnapshotSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="182" pos:column="1">typedef <type><name pos:line="182" pos:column="9">interface</name> <name pos:line="182" pos:column="19">IListVxSnapshotSpan</name></type> <name pos:line="182" pos:column="39">IListVxSnapshotSpan</name>;</typedef>
<cpp:endif pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="183" pos:column="9">/* __IListVxSnapshotSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">ifndef</cpp:directive> <name pos:line="186" pos:column="9">__IEnumeratorVxSnapshotPoint_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="187" pos:column="9">__IEnumeratorVxSnapshotPoint_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="188" pos:column="1">typedef <type><name pos:line="188" pos:column="9">interface</name> <name pos:line="188" pos:column="19">IEnumeratorVxSnapshotPoint</name></type> <name pos:line="188" pos:column="46">IEnumeratorVxSnapshotPoint</name>;</typedef>
<cpp:endif pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="189" pos:column="9">/* __IEnumeratorVxSnapshotPoint_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">ifndef</cpp:directive> <name pos:line="192" pos:column="9">__IListVxSnapshotPoint_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="193" pos:column="9">__IListVxSnapshotPoint_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="194" pos:column="1">typedef <type><name pos:line="194" pos:column="9">interface</name> <name pos:line="194" pos:column="19">IListVxSnapshotPoint</name></type> <name pos:line="194" pos:column="40">IListVxSnapshotPoint</name>;</typedef>
<cpp:endif pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="195" pos:column="9">/* __IListVxSnapshotPoint_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">ifndef</cpp:directive> <name pos:line="198" pos:column="9">__IEnumeratorIUnknown_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="199" pos:column="9">__IEnumeratorIUnknown_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="200" pos:column="1">typedef <type><name pos:line="200" pos:column="9">interface</name> <name pos:line="200" pos:column="19">IEnumeratorIUnknown</name></type> <name pos:line="200" pos:column="39">IEnumeratorIUnknown</name>;</typedef>
<cpp:endif pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="201" pos:column="9">/* __IEnumeratorIUnknown_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">ifndef</cpp:directive> <name pos:line="204" pos:column="9">__IListIUnknown_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="205" pos:column="9">__IListIUnknown_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="206" pos:column="1">typedef <type><name pos:line="206" pos:column="9">interface</name> <name pos:line="206" pos:column="19">IListIUnknown</name></type> <name pos:line="206" pos:column="33">IListIUnknown</name>;</typedef>
<cpp:endif pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="207" pos:column="9">/* __IListIUnknown_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">ifndef</cpp:directive> <name pos:line="210" pos:column="9">__IVxProjectionSourceSpansChangedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="211" pos:column="9">__IVxProjectionSourceSpansChangedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="212" pos:column="1">typedef <type><name pos:line="212" pos:column="9">interface</name> <name pos:line="212" pos:column="19">IVxProjectionSourceSpansChangedEvent</name></type> <name pos:line="212" pos:column="56">IVxProjectionSourceSpansChangedEvent</name>;</typedef>
<cpp:endif pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="213" pos:column="9">/* __IVxProjectionSourceSpansChangedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">ifndef</cpp:directive> <name pos:line="216" pos:column="9">__IVxProjectionSourceBuffersChangedEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="217" pos:column="9">__IVxProjectionSourceBuffersChangedEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="218" pos:column="1">typedef <type><name pos:line="218" pos:column="9">interface</name> <name pos:line="218" pos:column="19">IVxProjectionSourceBuffersChangedEvent</name></type> <name pos:line="218" pos:column="58">IVxProjectionSourceBuffersChangedEvent</name>;</typedef>
<cpp:endif pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="219" pos:column="9">/* __IVxProjectionSourceBuffersChangedEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">ifndef</cpp:directive> <name pos:line="222" pos:column="9">__IEnumeratorIVxTrackingSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="223" pos:column="9">__IEnumeratorIVxTrackingSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="224" pos:column="1">typedef <type><name pos:line="224" pos:column="9">interface</name> <name pos:line="224" pos:column="19">IEnumeratorIVxTrackingSpan</name></type> <name pos:line="224" pos:column="46">IEnumeratorIVxTrackingSpan</name>;</typedef>
<cpp:endif pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="225" pos:column="9">/* __IEnumeratorIVxTrackingSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">ifndef</cpp:directive> <name pos:line="228" pos:column="9">__IListIVxTrackingSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="229" pos:column="1">#<cpp:directive pos:line="229" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="229" pos:column="9">__IListIVxTrackingSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="230" pos:column="1">typedef <type><name pos:line="230" pos:column="9">interface</name> <name pos:line="230" pos:column="19">IListIVxTrackingSpan</name></type> <name pos:line="230" pos:column="40">IListIVxTrackingSpan</name>;</typedef>
<cpp:endif pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="231" pos:column="9">/* __IListIVxTrackingSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">ifndef</cpp:directive> <name pos:line="234" pos:column="9">__IEnumeratorIVxTextChange_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="235" pos:column="1">#<cpp:directive pos:line="235" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="235" pos:column="9">__IEnumeratorIVxTextChange_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="236" pos:column="1">typedef <type><name pos:line="236" pos:column="9">interface</name> <name pos:line="236" pos:column="19">IEnumeratorIVxTextChange</name></type> <name pos:line="236" pos:column="44">IEnumeratorIVxTextChange</name>;</typedef>
<cpp:endif pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="237" pos:column="9">/* __IEnumeratorIVxTextChange_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">ifndef</cpp:directive> <name pos:line="240" pos:column="9">__IListIVxTextChange_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="241" pos:column="9">__IListIVxTextChange_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="242" pos:column="1">typedef <type><name pos:line="242" pos:column="9">interface</name> <name pos:line="242" pos:column="19">IListIVxTextChange</name></type> <name pos:line="242" pos:column="38">IListIVxTextChange</name>;</typedef>
<cpp:endif pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="243" pos:column="9">/* __IListIVxTextChange_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">ifndef</cpp:directive> <name pos:line="246" pos:column="9">__IVxDisposable_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="247" pos:column="9">__IVxDisposable_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="248" pos:column="1">typedef <type><name pos:line="248" pos:column="9">interface</name> <name pos:line="248" pos:column="19">IVxDisposable</name></type> <name pos:line="248" pos:column="33">IVxDisposable</name>;</typedef>
<cpp:endif pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="249" pos:column="9">/* __IVxDisposable_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="252" pos:column="1">#<cpp:directive pos:line="252" pos:column="2">ifndef</cpp:directive> <name pos:line="252" pos:column="9">__IVxPropertyOwner_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="253" pos:column="9">__IVxPropertyOwner_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="254" pos:column="1">typedef <type><name pos:line="254" pos:column="9">interface</name> <name pos:line="254" pos:column="19">IVxPropertyOwner</name></type> <name pos:line="254" pos:column="36">IVxPropertyOwner</name>;</typedef>
<cpp:endif pos:line="255" pos:column="1">#<cpp:directive pos:line="255" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="255" pos:column="9">/* __IVxPropertyOwner_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">ifndef</cpp:directive> <name pos:line="258" pos:column="9">__IVxPropertyCollection_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="259" pos:column="9">__IVxPropertyCollection_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="260" pos:column="1">typedef <type><name pos:line="260" pos:column="9">interface</name> <name pos:line="260" pos:column="19">IVxPropertyCollection</name></type> <name pos:line="260" pos:column="41">IVxPropertyCollection</name>;</typedef>
<cpp:endif pos:line="261" pos:column="1">#<cpp:directive pos:line="261" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="261" pos:column="9">/* __IVxPropertyCollection_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">ifndef</cpp:directive> <name pos:line="264" pos:column="9">__IVxContentTypeRegistryService_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="265" pos:column="9">__IVxContentTypeRegistryService_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="266" pos:column="1">typedef <type><name pos:line="266" pos:column="9">interface</name> <name pos:line="266" pos:column="19">IVxContentTypeRegistryService</name></type> <name pos:line="266" pos:column="49">IVxContentTypeRegistryService</name>;</typedef>
<cpp:endif pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="267" pos:column="9">/* __IVxContentTypeRegistryService_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">ifndef</cpp:directive> <name pos:line="270" pos:column="9">__IVxContentType_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="271" pos:column="9">__IVxContentType_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="272" pos:column="1">typedef <type><name pos:line="272" pos:column="9">interface</name> <name pos:line="272" pos:column="19">IVxContentType</name></type> <name pos:line="272" pos:column="34">IVxContentType</name>;</typedef>
<cpp:endif pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="273" pos:column="9">/* __IVxContentType_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">ifndef</cpp:directive> <name pos:line="276" pos:column="9">__IVxTextDocument_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="277" pos:column="1">#<cpp:directive pos:line="277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="277" pos:column="9">__IVxTextDocument_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="278" pos:column="1">typedef <type><name pos:line="278" pos:column="9">interface</name> <name pos:line="278" pos:column="19">IVxTextDocument</name></type> <name pos:line="278" pos:column="35">IVxTextDocument</name>;</typedef>
<cpp:endif pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="279" pos:column="9">/* __IVxTextDocument_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">ifndef</cpp:directive> <name pos:line="282" pos:column="9">__IVxTextDocumentFactoryService_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="283" pos:column="9">__IVxTextDocumentFactoryService_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="284" pos:column="1">typedef <type><name pos:line="284" pos:column="9">interface</name> <name pos:line="284" pos:column="19">IVxTextDocumentFactoryService</name></type> <name pos:line="284" pos:column="49">IVxTextDocumentFactoryService</name>;</typedef>
<cpp:endif pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="285" pos:column="9">/* __IVxTextDocumentFactoryService_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">ifndef</cpp:directive> <name pos:line="288" pos:column="9">__IVxTextDocumentEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="289" pos:column="1">#<cpp:directive pos:line="289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="289" pos:column="9">__IVxTextDocumentEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="290" pos:column="1">typedef <type><name pos:line="290" pos:column="9">interface</name> <name pos:line="290" pos:column="19">IVxTextDocumentEventArgs</name></type> <name pos:line="290" pos:column="44">IVxTextDocumentEventArgs</name>;</typedef>
<cpp:endif pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="291" pos:column="9">/* __IVxTextDocumentEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">ifndef</cpp:directive> <name pos:line="294" pos:column="9">__IVxTextDocumentFileActionEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="295" pos:column="1">#<cpp:directive pos:line="295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="295" pos:column="9">__IVxTextDocumentFileActionEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="296" pos:column="1">typedef <type><name pos:line="296" pos:column="9">interface</name> <name pos:line="296" pos:column="19">IVxTextDocumentFileActionEventArgs</name></type> <name pos:line="296" pos:column="54">IVxTextDocumentFileActionEventArgs</name>;</typedef>
<cpp:endif pos:line="297" pos:column="1">#<cpp:directive pos:line="297" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="297" pos:column="9">/* __IVxTextDocumentFileActionEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">ifndef</cpp:directive> <name pos:line="300" pos:column="9">__IVxTextSnapshotChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="301" pos:column="9">__IVxTextSnapshotChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="302" pos:column="1">typedef <type><name pos:line="302" pos:column="9">interface</name> <name pos:line="302" pos:column="19">IVxTextSnapshotChangedEventArgs</name></type> <name pos:line="302" pos:column="51">IVxTextSnapshotChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="303" pos:column="1">#<cpp:directive pos:line="303" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="303" pos:column="9">/* __IVxTextSnapshotChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="306" pos:column="1">#<cpp:directive pos:line="306" pos:column="2">ifndef</cpp:directive> <name pos:line="306" pos:column="9">__IVxContentTypeChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="307" pos:column="9">__IVxContentTypeChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="308" pos:column="1">typedef <type><name pos:line="308" pos:column="9">interface</name> <name pos:line="308" pos:column="19">IVxContentTypeChangedEventArgs</name></type> <name pos:line="308" pos:column="50">IVxContentTypeChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="309" pos:column="9">/* __IVxContentTypeChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">ifndef</cpp:directive> <name pos:line="312" pos:column="9">__IVxMappingPoint_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="313" pos:column="9">__IVxMappingPoint_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="314" pos:column="1">typedef <type><name pos:line="314" pos:column="9">interface</name> <name pos:line="314" pos:column="19">IVxMappingPoint</name></type> <name pos:line="314" pos:column="35">IVxMappingPoint</name>;</typedef>
<cpp:endif pos:line="315" pos:column="1">#<cpp:directive pos:line="315" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="315" pos:column="9">/* __IVxMappingPoint_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="318" pos:column="1">#<cpp:directive pos:line="318" pos:column="2">ifndef</cpp:directive> <name pos:line="318" pos:column="9">__IVxMappingSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="319" pos:column="1">#<cpp:directive pos:line="319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="319" pos:column="9">__IVxMappingSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="320" pos:column="1">typedef <type><name pos:line="320" pos:column="9">interface</name> <name pos:line="320" pos:column="19">IVxMappingSpan</name></type> <name pos:line="320" pos:column="34">IVxMappingSpan</name>;</typedef>
<cpp:endif pos:line="321" pos:column="1">#<cpp:directive pos:line="321" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="321" pos:column="9">/* __IVxMappingSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="324" pos:column="1">#<cpp:directive pos:line="324" pos:column="2">ifndef</cpp:directive> <name pos:line="324" pos:column="9">__IVxNormalizedTextChangeCollection_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="325" pos:column="1">#<cpp:directive pos:line="325" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="325" pos:column="9">__IVxNormalizedTextChangeCollection_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="326" pos:column="1">typedef <type><name pos:line="326" pos:column="9">interface</name> <name pos:line="326" pos:column="19">IVxNormalizedTextChangeCollection</name></type> <name pos:line="326" pos:column="53">IVxNormalizedTextChangeCollection</name>;</typedef>
<cpp:endif pos:line="327" pos:column="1">#<cpp:directive pos:line="327" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="327" pos:column="9">/* __IVxNormalizedTextChangeCollection_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">ifndef</cpp:directive> <name pos:line="330" pos:column="9">__IVxReadOnlyRegion_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="331" pos:column="1">#<cpp:directive pos:line="331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="331" pos:column="9">__IVxReadOnlyRegion_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="332" pos:column="1">typedef <type><name pos:line="332" pos:column="9">interface</name> <name pos:line="332" pos:column="19">IVxReadOnlyRegion</name></type> <name pos:line="332" pos:column="37">IVxReadOnlyRegion</name>;</typedef>
<cpp:endif pos:line="333" pos:column="1">#<cpp:directive pos:line="333" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="333" pos:column="9">/* __IVxReadOnlyRegion_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">ifndef</cpp:directive> <name pos:line="336" pos:column="9">__IVxTextBufferEdit_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="337" pos:column="1">#<cpp:directive pos:line="337" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="337" pos:column="9">__IVxTextBufferEdit_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="338" pos:column="1">typedef <type><name pos:line="338" pos:column="9">interface</name> <name pos:line="338" pos:column="19">IVxTextBufferEdit</name></type> <name pos:line="338" pos:column="37">IVxTextBufferEdit</name>;</typedef>
<cpp:endif pos:line="339" pos:column="1">#<cpp:directive pos:line="339" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="339" pos:column="9">/* __IVxTextBufferEdit_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">ifndef</cpp:directive> <name pos:line="342" pos:column="9">__IVxReadOnlyRegionEdit_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="343" pos:column="1">#<cpp:directive pos:line="343" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="343" pos:column="9">__IVxReadOnlyRegionEdit_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="344" pos:column="1">typedef <type><name pos:line="344" pos:column="9">interface</name> <name pos:line="344" pos:column="19">IVxReadOnlyRegionEdit</name></type> <name pos:line="344" pos:column="41">IVxReadOnlyRegionEdit</name>;</typedef>
<cpp:endif pos:line="345" pos:column="1">#<cpp:directive pos:line="345" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="345" pos:column="9">/* __IVxReadOnlyRegionEdit_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">ifndef</cpp:directive> <name pos:line="348" pos:column="9">__IVxTextBuffer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="349" pos:column="1">#<cpp:directive pos:line="349" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="349" pos:column="9">__IVxTextBuffer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="350" pos:column="1">typedef <type><name pos:line="350" pos:column="9">interface</name> <name pos:line="350" pos:column="19">IVxTextBuffer</name></type> <name pos:line="350" pos:column="33">IVxTextBuffer</name>;</typedef>
<cpp:endif pos:line="351" pos:column="1">#<cpp:directive pos:line="351" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="351" pos:column="9">/* __IVxTextBuffer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="354" pos:column="1">#<cpp:directive pos:line="354" pos:column="2">ifndef</cpp:directive> <name pos:line="354" pos:column="9">__IVxTextBufferFactoryService_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="355" pos:column="1">#<cpp:directive pos:line="355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="355" pos:column="9">__IVxTextBufferFactoryService_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="356" pos:column="1">typedef <type><name pos:line="356" pos:column="9">interface</name> <name pos:line="356" pos:column="19">IVxTextBufferFactoryService</name></type> <name pos:line="356" pos:column="47">IVxTextBufferFactoryService</name>;</typedef>
<cpp:endif pos:line="357" pos:column="1">#<cpp:directive pos:line="357" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="357" pos:column="9">/* __IVxTextBufferFactoryService_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">ifndef</cpp:directive> <name pos:line="360" pos:column="9">__IVxTextChange_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="361" pos:column="1">#<cpp:directive pos:line="361" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="361" pos:column="9">__IVxTextChange_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="362" pos:column="1">typedef <type><name pos:line="362" pos:column="9">interface</name> <name pos:line="362" pos:column="19">IVxTextChange</name></type> <name pos:line="362" pos:column="33">IVxTextChange</name>;</typedef>
<cpp:endif pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="363" pos:column="9">/* __IVxTextChange_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="366" pos:column="1">#<cpp:directive pos:line="366" pos:column="2">ifndef</cpp:directive> <name pos:line="366" pos:column="9">__IVxTextEdit_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="367" pos:column="1">#<cpp:directive pos:line="367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="367" pos:column="9">__IVxTextEdit_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="368" pos:column="1">typedef <type><name pos:line="368" pos:column="9">interface</name> <name pos:line="368" pos:column="19">IVxTextEdit</name></type> <name pos:line="368" pos:column="31">IVxTextEdit</name>;</typedef>
<cpp:endif pos:line="369" pos:column="1">#<cpp:directive pos:line="369" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="369" pos:column="9">/* __IVxTextEdit_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="372" pos:column="1">#<cpp:directive pos:line="372" pos:column="2">ifndef</cpp:directive> <name pos:line="372" pos:column="9">__IVxTextSnapshot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="373" pos:column="1">#<cpp:directive pos:line="373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="373" pos:column="9">__IVxTextSnapshot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="374" pos:column="1">typedef <type><name pos:line="374" pos:column="9">interface</name> <name pos:line="374" pos:column="19">IVxTextSnapshot</name></type> <name pos:line="374" pos:column="35">IVxTextSnapshot</name>;</typedef>
<cpp:endif pos:line="375" pos:column="1">#<cpp:directive pos:line="375" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="375" pos:column="9">/* __IVxTextSnapshot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">ifndef</cpp:directive> <name pos:line="378" pos:column="9">__IVxTextSnapshotLine_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="379" pos:column="1">#<cpp:directive pos:line="379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="379" pos:column="9">__IVxTextSnapshotLine_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="380" pos:column="1">typedef <type><name pos:line="380" pos:column="9">interface</name> <name pos:line="380" pos:column="19">IVxTextSnapshotLine</name></type> <name pos:line="380" pos:column="39">IVxTextSnapshotLine</name>;</typedef>
<cpp:endif pos:line="381" pos:column="1">#<cpp:directive pos:line="381" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="381" pos:column="9">/* __IVxTextSnapshotLine_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">ifndef</cpp:directive> <name pos:line="384" pos:column="9">__IVxTextVersion_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="385" pos:column="1">#<cpp:directive pos:line="385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="385" pos:column="9">__IVxTextVersion_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="386" pos:column="1">typedef <type><name pos:line="386" pos:column="9">interface</name> <name pos:line="386" pos:column="19">IVxTextVersion</name></type> <name pos:line="386" pos:column="34">IVxTextVersion</name>;</typedef>
<cpp:endif pos:line="387" pos:column="1">#<cpp:directive pos:line="387" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="387" pos:column="9">/* __IVxTextVersion_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="390" pos:column="1">#<cpp:directive pos:line="390" pos:column="2">ifndef</cpp:directive> <name pos:line="390" pos:column="9">__IVxTrackingPoint_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="391" pos:column="1">#<cpp:directive pos:line="391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="391" pos:column="9">__IVxTrackingPoint_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="392" pos:column="1">typedef <type><name pos:line="392" pos:column="9">interface</name> <name pos:line="392" pos:column="19">IVxTrackingPoint</name></type> <name pos:line="392" pos:column="36">IVxTrackingPoint</name>;</typedef>
<cpp:endif pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="393" pos:column="9">/* __IVxTrackingPoint_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="396" pos:column="1">#<cpp:directive pos:line="396" pos:column="2">ifndef</cpp:directive> <name pos:line="396" pos:column="9">__IVxTrackingSpan_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="397" pos:column="9">__IVxTrackingSpan_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="398" pos:column="1">typedef <type><name pos:line="398" pos:column="9">interface</name> <name pos:line="398" pos:column="19">IVxTrackingSpan</name></type> <name pos:line="398" pos:column="35">IVxTrackingSpan</name>;</typedef>
<cpp:endif pos:line="399" pos:column="1">#<cpp:directive pos:line="399" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="399" pos:column="9">/* __IVxTrackingSpan_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">ifndef</cpp:directive> <name pos:line="402" pos:column="9">__IVxNormalizedSnapshotSpanCollection_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="403" pos:column="1">#<cpp:directive pos:line="403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="403" pos:column="9">__IVxNormalizedSnapshotSpanCollection_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="404" pos:column="1">typedef <type><name pos:line="404" pos:column="9">interface</name> <name pos:line="404" pos:column="19">IVxNormalizedSnapshotSpanCollection</name></type> <name pos:line="404" pos:column="55">IVxNormalizedSnapshotSpanCollection</name>;</typedef>
<cpp:endif pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="405" pos:column="9">/* __IVxNormalizedSnapshotSpanCollection_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">ifndef</cpp:directive> <name pos:line="408" pos:column="9">__IVxNormalizedSpanCollection_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="409" pos:column="1">#<cpp:directive pos:line="409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="409" pos:column="9">__IVxNormalizedSpanCollection_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="410" pos:column="1">typedef <type><name pos:line="410" pos:column="9">interface</name> <name pos:line="410" pos:column="19">IVxNormalizedSpanCollection</name></type> <name pos:line="410" pos:column="47">IVxNormalizedSpanCollection</name>;</typedef>
<cpp:endif pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="411" pos:column="9">/* __IVxNormalizedSpanCollection_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">ifndef</cpp:directive> <name pos:line="414" pos:column="9">__IVxTextContentChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="415" pos:column="1">#<cpp:directive pos:line="415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="415" pos:column="9">__IVxTextContentChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="416" pos:column="1">typedef <type><name pos:line="416" pos:column="9">interface</name> <name pos:line="416" pos:column="19">IVxTextContentChangedEventArgs</name></type> <name pos:line="416" pos:column="50">IVxTextContentChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="417" pos:column="9">/* __IVxTextContentChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">ifndef</cpp:directive> <name pos:line="420" pos:column="9">__IVxGraphBufferContentTypeChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="421" pos:column="1">#<cpp:directive pos:line="421" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="421" pos:column="9">__IVxGraphBufferContentTypeChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="422" pos:column="1">typedef <type><name pos:line="422" pos:column="9">interface</name> <name pos:line="422" pos:column="19">IVxGraphBufferContentTypeChangedEventArgs</name></type> <name pos:line="422" pos:column="61">IVxGraphBufferContentTypeChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="423" pos:column="1">#<cpp:directive pos:line="423" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="423" pos:column="9">/* __IVxGraphBufferContentTypeChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">ifndef</cpp:directive> <name pos:line="426" pos:column="9">__IVxGraphBuffersChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="427" pos:column="1">#<cpp:directive pos:line="427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="427" pos:column="9">__IVxGraphBuffersChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="428" pos:column="1">typedef <type><name pos:line="428" pos:column="9">interface</name> <name pos:line="428" pos:column="19">IVxGraphBuffersChangedEventArgs</name></type> <name pos:line="428" pos:column="51">IVxGraphBuffersChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="429" pos:column="1">#<cpp:directive pos:line="429" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="429" pos:column="9">/* __IVxGraphBuffersChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="432" pos:column="1">#<cpp:directive pos:line="432" pos:column="2">ifndef</cpp:directive> <name pos:line="432" pos:column="9">__IVxBufferGraph_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="433" pos:column="1">#<cpp:directive pos:line="433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="433" pos:column="9">__IVxBufferGraph_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="434" pos:column="1">typedef <type><name pos:line="434" pos:column="9">interface</name> <name pos:line="434" pos:column="19">IVxBufferGraph</name></type> <name pos:line="434" pos:column="34">IVxBufferGraph</name>;</typedef>
<cpp:endif pos:line="435" pos:column="1">#<cpp:directive pos:line="435" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="435" pos:column="9">/* __IVxBufferGraph_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">ifndef</cpp:directive> <name pos:line="438" pos:column="9">__IVxProjectionBufferBase_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="439" pos:column="1">#<cpp:directive pos:line="439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="439" pos:column="9">__IVxProjectionBufferBase_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="440" pos:column="1">typedef <type><name pos:line="440" pos:column="9">interface</name> <name pos:line="440" pos:column="19">IVxProjectionBufferBase</name></type> <name pos:line="440" pos:column="43">IVxProjectionBufferBase</name>;</typedef>
<cpp:endif pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="441" pos:column="9">/* __IVxProjectionBufferBase_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="444" pos:column="1">#<cpp:directive pos:line="444" pos:column="2">ifndef</cpp:directive> <name pos:line="444" pos:column="9">__IVxProjectionSnapshot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="445" pos:column="1">#<cpp:directive pos:line="445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="445" pos:column="9">__IVxProjectionSnapshot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="446" pos:column="1">typedef <type><name pos:line="446" pos:column="9">interface</name> <name pos:line="446" pos:column="19">IVxProjectionSnapshot</name></type> <name pos:line="446" pos:column="41">IVxProjectionSnapshot</name>;</typedef>
<cpp:endif pos:line="447" pos:column="1">#<cpp:directive pos:line="447" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="447" pos:column="9">/* __IVxProjectionSnapshot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="450" pos:column="1">#<cpp:directive pos:line="450" pos:column="2">ifndef</cpp:directive> <name pos:line="450" pos:column="9">__IVxProjectionBuffer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="451" pos:column="1">#<cpp:directive pos:line="451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="451" pos:column="9">__IVxProjectionBuffer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="452" pos:column="1">typedef <type><name pos:line="452" pos:column="9">interface</name> <name pos:line="452" pos:column="19">IVxProjectionBuffer</name></type> <name pos:line="452" pos:column="39">IVxProjectionBuffer</name>;</typedef>
<cpp:endif pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="453" pos:column="9">/* __IVxProjectionBuffer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">ifndef</cpp:directive> <name pos:line="456" pos:column="9">__IVxProjectionSourceSpansChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="457" pos:column="1">#<cpp:directive pos:line="457" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="457" pos:column="9">__IVxProjectionSourceSpansChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="458" pos:column="1">typedef <type><name pos:line="458" pos:column="9">interface</name> <name pos:line="458" pos:column="19">IVxProjectionSourceSpansChangedEventArgs</name></type> <name pos:line="458" pos:column="60">IVxProjectionSourceSpansChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="459" pos:column="1">#<cpp:directive pos:line="459" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="459" pos:column="9">/* __IVxProjectionSourceSpansChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="462" pos:column="1">#<cpp:directive pos:line="462" pos:column="2">ifndef</cpp:directive> <name pos:line="462" pos:column="9">__IVxProjectionSourceBuffersChangedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="463" pos:column="1">#<cpp:directive pos:line="463" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="463" pos:column="9">__IVxProjectionSourceBuffersChangedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="464" pos:column="1">typedef <type><name pos:line="464" pos:column="9">interface</name> <name pos:line="464" pos:column="19">IVxProjectionSourceBuffersChangedEventArgs</name></type> <name pos:line="464" pos:column="62">IVxProjectionSourceBuffersChangedEventArgs</name>;</typedef>
<cpp:endif pos:line="465" pos:column="1">#<cpp:directive pos:line="465" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="465" pos:column="9">/* __IVxProjectionSourceBuffersChangedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="468" pos:column="1">#<cpp:directive pos:line="468" pos:column="2">ifndef</cpp:directive> <name pos:line="468" pos:column="9">__IVxSnapshotSpanEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="469" pos:column="9">__IVxSnapshotSpanEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="470" pos:column="1">typedef <type><name pos:line="470" pos:column="9">interface</name> <name pos:line="470" pos:column="19">IVxSnapshotSpanEventArgs</name></type> <name pos:line="470" pos:column="44">IVxSnapshotSpanEventArgs</name>;</typedef>
<cpp:endif pos:line="471" pos:column="1">#<cpp:directive pos:line="471" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="471" pos:column="9">/* __IVxSnapshotSpanEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">ifndef</cpp:directive> <name pos:line="474" pos:column="9">__IVxTextBufferCreatedEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="475" pos:column="1">#<cpp:directive pos:line="475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="475" pos:column="9">__IVxTextBufferCreatedEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="476" pos:column="1">typedef <type><name pos:line="476" pos:column="9">interface</name> <name pos:line="476" pos:column="19">IVxTextBufferCreatedEventArgs</name></type> <name pos:line="476" pos:column="49">IVxTextBufferCreatedEventArgs</name>;</typedef>
<cpp:endif pos:line="477" pos:column="1">#<cpp:directive pos:line="477" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="477" pos:column="9">/* __IVxTextBufferCreatedEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">ifndef</cpp:directive> <name pos:line="480" pos:column="9">__IVxTextContentChangingEventArgs_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="481" pos:column="1">#<cpp:directive pos:line="481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="481" pos:column="9">__IVxTextContentChangingEventArgs_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="482" pos:column="1">typedef <type><name pos:line="482" pos:column="9">interface</name> <name pos:line="482" pos:column="19">IVxTextContentChangingEventArgs</name></type> <name pos:line="482" pos:column="51">IVxTextContentChangingEventArgs</name>;</typedef>
<cpp:endif pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="483" pos:column="9">/* __IVxTextContentChangingEventArgs_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="486" pos:column="1">#<cpp:directive pos:line="486" pos:column="2">ifndef</cpp:directive> <name pos:line="486" pos:column="9">__IVxTextSearchService_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="487" pos:column="1">#<cpp:directive pos:line="487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="487" pos:column="9">__IVxTextSearchService_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="488" pos:column="1">typedef <type><name pos:line="488" pos:column="9">interface</name> <name pos:line="488" pos:column="19">IVxTextSearchService</name></type> <name pos:line="488" pos:column="40">IVxTextSearchService</name>;</typedef>
<cpp:endif pos:line="489" pos:column="1">#<cpp:directive pos:line="489" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="489" pos:column="9">/* __IVxTextSearchService_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">ifndef</cpp:directive> <name pos:line="492" pos:column="9">__IVxTextStructureNavigator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="493" pos:column="9">__IVxTextStructureNavigator_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="494" pos:column="1">typedef <type><name pos:line="494" pos:column="9">interface</name> <name pos:line="494" pos:column="19">IVxTextStructureNavigator</name></type> <name pos:line="494" pos:column="45">IVxTextStructureNavigator</name>;</typedef>
<cpp:endif pos:line="495" pos:column="1">#<cpp:directive pos:line="495" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="495" pos:column="9">/* __IVxTextStructureNavigator_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">ifndef</cpp:directive> <name pos:line="498" pos:column="9">__IVxPlatformFactory_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="499" pos:column="9">__IVxPlatformFactory_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="500" pos:column="1">typedef <type><name pos:line="500" pos:column="9">interface</name> <name pos:line="500" pos:column="19">IVxPlatformFactory</name></type> <name pos:line="500" pos:column="38">IVxPlatformFactory</name>;</typedef>
<cpp:endif pos:line="501" pos:column="1">#<cpp:directive pos:line="501" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="501" pos:column="9">/* __IVxPlatformFactory_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">ifndef</cpp:directive> <name pos:line="504" pos:column="9">__IVxThumbnailSupport_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="505" pos:column="1">#<cpp:directive pos:line="505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="505" pos:column="9">__IVxThumbnailSupport_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="506" pos:column="1">typedef <type><name pos:line="506" pos:column="9">interface</name> <name pos:line="506" pos:column="19">IVxThumbnailSupport</name></type> <name pos:line="506" pos:column="39">IVxThumbnailSupport</name>;</typedef>
<cpp:endif pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="507" pos:column="9">/* __IVxThumbnailSupport_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="510" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="511" pos:column="1">#<cpp:directive pos:line="511" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="511" pos:column="10">"oaidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="512" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">ifdef</cpp:directive> <name pos:line="514" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="515" pos:column="1">extern <lit:literal type="string" pos:line="515" pos:column="8">"C"</lit:literal><block pos:line="515" pos:column="11">{
<cpp:endif pos:line="516" pos:column="1">#<cpp:directive pos:line="516" pos:column="2">endif</cpp:directive></cpp:endif> 



<cpp:ifndef pos:line="520" pos:column="1">#<cpp:directive pos:line="520" pos:column="2">ifndef</cpp:directive> <name pos:line="520" pos:column="9">__VSEditorLibrary_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="521" pos:column="1">#<cpp:directive pos:line="521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="521" pos:column="9">__VSEditorLibrary_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="523" pos:column="1">/* library VSEditorLibrary */</comment>
<comment type="block" pos:line="524" pos:column="1">/* [uuid] */</comment> 















































































<typedef pos:line="604" pos:column="1">typedef 
<type><enum pos:line="605" pos:column="1">enum <name pos:line="605" pos:column="6">_VxEnumerableCardinality</name>
    <block pos:line="606" pos:column="5">{	<decl><name pos:line="606" pos:column="9">VxEnumerableCardinalityZero</name>	<init pos:line="606" pos:column="41">= <expr><lit:literal type="number" pos:line="606" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="606" pos:column="44">,</op:operator>
	<decl><name pos:line="607" pos:column="9">VxEnumerableCardinalityOne</name>	<init pos:line="607" pos:column="41">= <expr><lit:literal type="number" pos:line="607" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="607" pos:column="44">,</op:operator>
	<decl><name pos:line="608" pos:column="9">VxEnumerableCardinalityTwoOrMore</name>	<init pos:line="608" pos:column="49">= <expr><lit:literal type="number" pos:line="608" pos:column="51">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="609" pos:column="9">VxEnumerableCardinality</name>;</typedef>

<typedef pos:line="611" pos:column="1">typedef 
<type><enum pos:line="612" pos:column="1">enum <name pos:line="612" pos:column="6">_VxCompositionTraceId</name>
    <block pos:line="613" pos:column="5">{	<decl><name pos:line="613" pos:column="9">VxCompositionTraceIdRejection_DefinitionRejected</name>	<init pos:line="613" pos:column="65">= <expr><lit:literal type="number" pos:line="613" pos:column="67">1</lit:literal></expr></init></decl><op:operator pos:line="613" pos:column="68">,</op:operator>
	<decl><name pos:line="614" pos:column="9">VxCompositionTraceIdRejection_DefinitionResurrected</name>	<init pos:line="614" pos:column="65">= <expr><lit:literal type="number" pos:line="614" pos:column="67">2</lit:literal></expr></init></decl><op:operator pos:line="614" pos:column="68">,</op:operator>
	<decl><name pos:line="615" pos:column="9">VxCompositionTraceIdDiscovery_AssemblyLoadFailed</name>	<init pos:line="615" pos:column="65">= <expr><lit:literal type="number" pos:line="615" pos:column="67">3</lit:literal></expr></init></decl><op:operator pos:line="615" pos:column="68">,</op:operator>
	<decl><name pos:line="616" pos:column="9">VxCompositionTraceIdDiscovery_DefinitionMarkedWithPartNotDiscoverableAttribute</name>	<init pos:line="616" pos:column="89">= <expr><lit:literal type="number" pos:line="616" pos:column="91">4</lit:literal></expr></init></decl><op:operator pos:line="616" pos:column="92">,</op:operator>
	<decl><name pos:line="617" pos:column="9">VxCompositionTraceIdDiscovery_DefinitionContainsGenericParameters</name>	<init pos:line="617" pos:column="81">= <expr><lit:literal type="number" pos:line="617" pos:column="83">5</lit:literal></expr></init></decl><op:operator pos:line="617" pos:column="84">,</op:operator>
	<decl><name pos:line="618" pos:column="9">VxCompositionTraceIdDiscovery_DefinitionContainsNoExports</name>	<init pos:line="618" pos:column="73">= <expr><lit:literal type="number" pos:line="618" pos:column="75">6</lit:literal></expr></init></decl><op:operator pos:line="618" pos:column="76">,</op:operator>
	<decl><name pos:line="619" pos:column="9">VxCompositionTraceIdDiscovery_MemberMarkedWithMultipleImportAndImportMany</name>	<init pos:line="619" pos:column="89">= <expr><lit:literal type="number" pos:line="619" pos:column="91">7</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="620" pos:column="9">VxCompositionTraceId</name>;</typedef>

<typedef pos:line="622" pos:column="1">typedef 
<type><enum pos:line="623" pos:column="1">enum <name pos:line="623" pos:column="6">_VxAtomicCompositionQueryState</name>
    <block pos:line="624" pos:column="5">{	<decl><name pos:line="624" pos:column="9">VxAtomicCompositionQueryStateUnknown</name>	<init pos:line="624" pos:column="49">= <expr><lit:literal type="number" pos:line="624" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="624" pos:column="52">,</op:operator>
	<decl><name pos:line="625" pos:column="9">VxAtomicCompositionQueryStateTreatAsRejected</name>	<init pos:line="625" pos:column="57">= <expr><lit:literal type="number" pos:line="625" pos:column="59">1</lit:literal></expr></init></decl><op:operator pos:line="625" pos:column="60">,</op:operator>
	<decl><name pos:line="626" pos:column="9">VxAtomicCompositionQueryStateTreatAsValidated</name>	<init pos:line="626" pos:column="57">= <expr><lit:literal type="number" pos:line="626" pos:column="59">2</lit:literal></expr></init></decl><op:operator pos:line="626" pos:column="60">,</op:operator>
	<decl><name pos:line="627" pos:column="9">VxAtomicCompositionQueryStateNeedsTesting</name>	<init pos:line="627" pos:column="57">= <expr><lit:literal type="number" pos:line="627" pos:column="59">3</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="628" pos:column="9">VxAtomicCompositionQueryState</name>;</typedef>

<typedef pos:line="630" pos:column="1">typedef 
<type><enum pos:line="631" pos:column="1">enum <name pos:line="631" pos:column="6">_VxExportCardinalityCheckResult</name>
    <block pos:line="632" pos:column="5">{	<decl><name pos:line="632" pos:column="9">VxExportCardinalityCheckResultMatch</name>	<init pos:line="632" pos:column="49">= <expr><lit:literal type="number" pos:line="632" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="632" pos:column="52">,</op:operator>
	<decl><name pos:line="633" pos:column="9">VxExportCardinalityCheckResultNoExports</name>	<init pos:line="633" pos:column="49">= <expr><lit:literal type="number" pos:line="633" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="633" pos:column="52">,</op:operator>
	<decl><name pos:line="634" pos:column="9">VxExportCardinalityCheckResultTooManyExports</name>	<init pos:line="634" pos:column="57">= <expr><lit:literal type="number" pos:line="634" pos:column="59">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="635" pos:column="9">VxExportCardinalityCheckResult</name>;</typedef>

<typedef pos:line="637" pos:column="1">typedef 
<type><enum pos:line="638" pos:column="1">enum <name pos:line="638" pos:column="6">_VxImportState</name>
    <block pos:line="639" pos:column="5">{	<decl><name pos:line="639" pos:column="9">VxImportStateNoImportsSatisfied</name>	<init pos:line="639" pos:column="41">= <expr><lit:literal type="number" pos:line="639" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="639" pos:column="44">,</op:operator>
	<decl><name pos:line="640" pos:column="9">VxImportStateImportsPreviewing</name>	<init pos:line="640" pos:column="41">= <expr><lit:literal type="number" pos:line="640" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="640" pos:column="44">,</op:operator>
	<decl><name pos:line="641" pos:column="9">VxImportStateImportsPreviewed</name>	<init pos:line="641" pos:column="41">= <expr><lit:literal type="number" pos:line="641" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="641" pos:column="44">,</op:operator>
	<decl><name pos:line="642" pos:column="9">VxImportStatePreExportImportsSatisfying</name>	<init pos:line="642" pos:column="49">= <expr><lit:literal type="number" pos:line="642" pos:column="51">3</lit:literal></expr></init></decl><op:operator pos:line="642" pos:column="52">,</op:operator>
	<decl><name pos:line="643" pos:column="9">VxImportStatePreExportImportsSatisfied</name>	<init pos:line="643" pos:column="49">= <expr><lit:literal type="number" pos:line="643" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="643" pos:column="52">,</op:operator>
	<decl><name pos:line="644" pos:column="9">VxImportStatePostExportImportsSatisfying</name>	<init pos:line="644" pos:column="57">= <expr><lit:literal type="number" pos:line="644" pos:column="59">5</lit:literal></expr></init></decl><op:operator pos:line="644" pos:column="60">,</op:operator>
	<decl><name pos:line="645" pos:column="9">VxImportStatePostExportImportsSatisfied</name>	<init pos:line="645" pos:column="49">= <expr><lit:literal type="number" pos:line="645" pos:column="51">6</lit:literal></expr></init></decl><op:operator pos:line="645" pos:column="52">,</op:operator>
	<decl><name pos:line="646" pos:column="9">VxImportStateComposedNotifying</name>	<init pos:line="646" pos:column="41">= <expr><lit:literal type="number" pos:line="646" pos:column="43">7</lit:literal></expr></init></decl><op:operator pos:line="646" pos:column="44">,</op:operator>
	<decl><name pos:line="647" pos:column="9">VxImportStateComposed</name>	<init pos:line="647" pos:column="33">= <expr><lit:literal type="number" pos:line="647" pos:column="35">8</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="648" pos:column="9">VxImportState</name>;</typedef>

<typedef pos:line="650" pos:column="1">typedef 
<type><enum pos:line="651" pos:column="1">enum <name pos:line="651" pos:column="6">_VxImportCardinality</name>
    <block pos:line="652" pos:column="5">{	<decl><name pos:line="652" pos:column="9">VxImportCardinalityZeroOrOne</name>	<init pos:line="652" pos:column="41">= <expr><lit:literal type="number" pos:line="652" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="652" pos:column="44">,</op:operator>
	<decl><name pos:line="653" pos:column="9">VxImportCardinalityExactlyOne</name>	<init pos:line="653" pos:column="41">= <expr><lit:literal type="number" pos:line="653" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="653" pos:column="44">,</op:operator>
	<decl><name pos:line="654" pos:column="9">VxImportCardinalityZeroOrMore</name>	<init pos:line="654" pos:column="41">= <expr><lit:literal type="number" pos:line="654" pos:column="43">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="655" pos:column="9">VxImportCardinality</name>;</typedef>

<typedef pos:line="657" pos:column="1">typedef 
<type><enum pos:line="658" pos:column="1">enum <name pos:line="658" pos:column="6">_VxReflectionItemType</name>
    <block pos:line="659" pos:column="5">{	<decl><name pos:line="659" pos:column="9">VxReflectionItemTypeParameter</name>	<init pos:line="659" pos:column="41">= <expr><lit:literal type="number" pos:line="659" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="659" pos:column="44">,</op:operator>
	<decl><name pos:line="660" pos:column="9">VxReflectionItemTypeField</name>	<init pos:line="660" pos:column="41">= <expr><lit:literal type="number" pos:line="660" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="660" pos:column="44">,</op:operator>
	<decl><name pos:line="661" pos:column="9">VxReflectionItemTypeProperty</name>	<init pos:line="661" pos:column="41">= <expr><lit:literal type="number" pos:line="661" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="661" pos:column="44">,</op:operator>
	<decl><name pos:line="662" pos:column="9">VxReflectionItemTypeMethod</name>	<init pos:line="662" pos:column="41">= <expr><lit:literal type="number" pos:line="662" pos:column="43">3</lit:literal></expr></init></decl><op:operator pos:line="662" pos:column="44">,</op:operator>
	<decl><name pos:line="663" pos:column="9">VxReflectionItemTypeType</name>	<init pos:line="663" pos:column="41">= <expr><lit:literal type="number" pos:line="663" pos:column="43">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="664" pos:column="9">VxReflectionItemType</name>;</typedef>

<typedef pos:line="666" pos:column="1">typedef 
<type><enum pos:line="667" pos:column="1">enum <name pos:line="667" pos:column="6">_VxCompositionErrorId</name>
    <block pos:line="668" pos:column="5">{	<decl><name pos:line="668" pos:column="9">VxCompositionErrorIdUnknown</name>	<init pos:line="668" pos:column="41">= <expr><lit:literal type="number" pos:line="668" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="668" pos:column="44">,</op:operator>
	<decl><name pos:line="669" pos:column="9">VxCompositionErrorIdInvalidExportMetadata</name>	<init pos:line="669" pos:column="57">= <expr><lit:literal type="number" pos:line="669" pos:column="59">1</lit:literal></expr></init></decl><op:operator pos:line="669" pos:column="60">,</op:operator>
	<decl><name pos:line="670" pos:column="9">VxCompositionErrorIdRequiredMetadataNotFound</name>	<init pos:line="670" pos:column="57">= <expr><lit:literal type="number" pos:line="670" pos:column="59">2</lit:literal></expr></init></decl><op:operator pos:line="670" pos:column="60">,</op:operator>
	<decl><name pos:line="671" pos:column="9">VxCompositionErrorIdUnsupportedExportType</name>	<init pos:line="671" pos:column="57">= <expr><lit:literal type="number" pos:line="671" pos:column="59">3</lit:literal></expr></init></decl><op:operator pos:line="671" pos:column="60">,</op:operator>
	<decl><name pos:line="672" pos:column="9">VxCompositionErrorIdImportNotSetOnPart</name>	<init pos:line="672" pos:column="49">= <expr><lit:literal type="number" pos:line="672" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="672" pos:column="52">,</op:operator>
	<decl><name pos:line="673" pos:column="9">VxCompositionErrorIdImportEngine_ComposeTookTooManyIterations</name>	<init pos:line="673" pos:column="73">= <expr><lit:literal type="number" pos:line="673" pos:column="75">5</lit:literal></expr></init></decl><op:operator pos:line="673" pos:column="76">,</op:operator>
	<decl><name pos:line="674" pos:column="9">VxCompositionErrorIdImportEngine_ImportCardinalityMismatch</name>	<init pos:line="674" pos:column="73">= <expr><lit:literal type="number" pos:line="674" pos:column="75">6</lit:literal></expr></init></decl><op:operator pos:line="674" pos:column="76">,</op:operator>
	<decl><name pos:line="675" pos:column="9">VxCompositionErrorIdImportEngine_PartCycle</name>	<init pos:line="675" pos:column="57">= <expr><lit:literal type="number" pos:line="675" pos:column="59">7</lit:literal></expr></init></decl><op:operator pos:line="675" pos:column="60">,</op:operator>
	<decl><name pos:line="676" pos:column="9">VxCompositionErrorIdImportEngine_PartCannotSetImport</name>	<init pos:line="676" pos:column="65">= <expr><lit:literal type="number" pos:line="676" pos:column="67">8</lit:literal></expr></init></decl><op:operator pos:line="676" pos:column="68">,</op:operator>
	<decl><name pos:line="677" pos:column="9">VxCompositionErrorIdImportEngine_PartCannotGetExportedValue</name>	<init pos:line="677" pos:column="73">= <expr><lit:literal type="number" pos:line="677" pos:column="75">9</lit:literal></expr></init></decl><op:operator pos:line="677" pos:column="76">,</op:operator>
	<decl><name pos:line="678" pos:column="9">VxCompositionErrorIdImportEngine_PartCannotActivate</name>	<init pos:line="678" pos:column="65">= <expr><lit:literal type="number" pos:line="678" pos:column="67">10</lit:literal></expr></init></decl><op:operator pos:line="678" pos:column="69">,</op:operator>
	<decl><name pos:line="679" pos:column="9">VxCompositionErrorIdImportEngine_PreventedByExistingImport</name>	<init pos:line="679" pos:column="73">= <expr><lit:literal type="number" pos:line="679" pos:column="75">11</lit:literal></expr></init></decl><op:operator pos:line="679" pos:column="77">,</op:operator>
	<decl><name pos:line="680" pos:column="9">VxCompositionErrorIdImportEngine_InvalidStateForRecomposition</name>	<init pos:line="680" pos:column="73">= <expr><lit:literal type="number" pos:line="680" pos:column="75">12</lit:literal></expr></init></decl><op:operator pos:line="680" pos:column="77">,</op:operator>
	<decl><name pos:line="681" pos:column="9">VxCompositionErrorIdReflectionModel_PartConstructorMissing</name>	<init pos:line="681" pos:column="73">= <expr><lit:literal type="number" pos:line="681" pos:column="75">13</lit:literal></expr></init></decl><op:operator pos:line="681" pos:column="77">,</op:operator>
	<decl><name pos:line="682" pos:column="9">VxCompositionErrorIdReflectionModel_PartConstructorThrewException</name>	<init pos:line="682" pos:column="81">= <expr><lit:literal type="number" pos:line="682" pos:column="83">14</lit:literal></expr></init></decl><op:operator pos:line="682" pos:column="85">,</op:operator>
	<decl><name pos:line="683" pos:column="9">VxCompositionErrorIdReflectionModel_PartOnImportsSatisfiedThrewException</name>	<init pos:line="683" pos:column="89">= <expr><lit:literal type="number" pos:line="683" pos:column="91">15</lit:literal></expr></init></decl><op:operator pos:line="683" pos:column="93">,</op:operator>
	<decl><name pos:line="684" pos:column="9">VxCompositionErrorIdReflectionModel_ExportNotReadable</name>	<init pos:line="684" pos:column="65">= <expr><lit:literal type="number" pos:line="684" pos:column="67">16</lit:literal></expr></init></decl><op:operator pos:line="684" pos:column="69">,</op:operator>
	<decl><name pos:line="685" pos:column="9">VxCompositionErrorIdReflectionModel_ExportThrewException</name>	<init pos:line="685" pos:column="73">= <expr><lit:literal type="number" pos:line="685" pos:column="75">17</lit:literal></expr></init></decl><op:operator pos:line="685" pos:column="77">,</op:operator>
	<decl><name pos:line="686" pos:column="9">VxCompositionErrorIdReflectionModel_ExportMethodTooManyParameters</name>	<init pos:line="686" pos:column="81">= <expr><lit:literal type="number" pos:line="686" pos:column="83">18</lit:literal></expr></init></decl><op:operator pos:line="686" pos:column="85">,</op:operator>
	<decl><name pos:line="687" pos:column="9">VxCompositionErrorIdReflectionModel_ImportNotWritable</name>	<init pos:line="687" pos:column="65">= <expr><lit:literal type="number" pos:line="687" pos:column="67">19</lit:literal></expr></init></decl><op:operator pos:line="687" pos:column="69">,</op:operator>
	<decl><name pos:line="688" pos:column="9">VxCompositionErrorIdReflectionModel_ImportThrewException</name>	<init pos:line="688" pos:column="73">= <expr><lit:literal type="number" pos:line="688" pos:column="75">20</lit:literal></expr></init></decl><op:operator pos:line="688" pos:column="77">,</op:operator>
	<decl><name pos:line="689" pos:column="9">VxCompositionErrorIdReflectionModel_ImportNotAssignableFromExport</name>	<init pos:line="689" pos:column="81">= <expr><lit:literal type="number" pos:line="689" pos:column="83">21</lit:literal></expr></init></decl><op:operator pos:line="689" pos:column="85">,</op:operator>
	<decl><name pos:line="690" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionNull</name>	<init pos:line="690" pos:column="73">= <expr><lit:literal type="number" pos:line="690" pos:column="75">22</lit:literal></expr></init></decl><op:operator pos:line="690" pos:column="77">,</op:operator>
	<decl><name pos:line="691" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionNotWritable</name>	<init pos:line="691" pos:column="73">= <expr><lit:literal type="number" pos:line="691" pos:column="75">23</lit:literal></expr></init></decl><op:operator pos:line="691" pos:column="77">,</op:operator>
	<decl><name pos:line="692" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionConstructionThrewException</name>	<init pos:line="692" pos:column="89">= <expr><lit:literal type="number" pos:line="692" pos:column="91">24</lit:literal></expr></init></decl><op:operator pos:line="692" pos:column="93">,</op:operator>
	<decl><name pos:line="693" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionGetThrewException</name>	<init pos:line="693" pos:column="81">= <expr><lit:literal type="number" pos:line="693" pos:column="83">25</lit:literal></expr></init></decl><op:operator pos:line="693" pos:column="85">,</op:operator>
	<decl><name pos:line="694" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionIsReadOnlyThrewException</name>	<init pos:line="694" pos:column="89">= <expr><lit:literal type="number" pos:line="694" pos:column="91">26</lit:literal></expr></init></decl><op:operator pos:line="694" pos:column="93">,</op:operator>
	<decl><name pos:line="695" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionClearThrewException</name>	<init pos:line="695" pos:column="81">= <expr><lit:literal type="number" pos:line="695" pos:column="83">27</lit:literal></expr></init></decl><op:operator pos:line="695" pos:column="85">,</op:operator>
	<decl><name pos:line="696" pos:column="9">VxCompositionErrorIdReflectionModel_ImportCollectionAddThrewException</name>	<init pos:line="696" pos:column="81">= <expr><lit:literal type="number" pos:line="696" pos:column="83">28</lit:literal></expr></init></decl><op:operator pos:line="696" pos:column="85">,</op:operator>
	<decl><name pos:line="697" pos:column="9">VxCompositionErrorIdReflectionModel_ImportManyOnParameterCanOnlyBeAssigned</name>	<init pos:line="697" pos:column="89">= <expr><lit:literal type="number" pos:line="697" pos:column="91">29</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="698" pos:column="9">VxCompositionErrorId</name>;</typedef>

<typedef pos:line="700" pos:column="1">typedef 
<type><enum pos:line="701" pos:column="1">enum <name pos:line="701" pos:column="6">_VxCreationPolicy</name>
    <block pos:line="702" pos:column="5">{	<decl><name pos:line="702" pos:column="9">VxCreationPolicyAny</name>	<init pos:line="702" pos:column="33">= <expr><lit:literal type="number" pos:line="702" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="702" pos:column="36">,</op:operator>
	<decl><name pos:line="703" pos:column="9">VxCreationPolicyShared</name>	<init pos:line="703" pos:column="33">= <expr><lit:literal type="number" pos:line="703" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="703" pos:column="36">,</op:operator>
	<decl><name pos:line="704" pos:column="9">VxCreationPolicyNonShared</name>	<init pos:line="704" pos:column="41">= <expr><lit:literal type="number" pos:line="704" pos:column="43">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="705" pos:column="9">VxCreationPolicy</name>;</typedef>

<typedef pos:line="707" pos:column="1">typedef 
<type><enum pos:line="708" pos:column="1">enum <name pos:line="708" pos:column="6">_VxDifferenceType</name>
    <block pos:line="709" pos:column="5">{	<decl><name pos:line="709" pos:column="9">VxDifferenceTypeAdd</name>	<init pos:line="709" pos:column="33">= <expr><lit:literal type="number" pos:line="709" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="709" pos:column="36">,</op:operator>
	<decl><name pos:line="710" pos:column="9">VxDifferenceTypeRemove</name>	<init pos:line="710" pos:column="33">= <expr><lit:literal type="number" pos:line="710" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="710" pos:column="36">,</op:operator>
	<decl><name pos:line="711" pos:column="9">VxDifferenceTypeChange</name>	<init pos:line="711" pos:column="33">= <expr><lit:literal type="number" pos:line="711" pos:column="35">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="712" pos:column="9">VxDifferenceType</name>;</typedef>

<typedef pos:line="714" pos:column="1">typedef 
<type><enum pos:line="715" pos:column="1">enum <name pos:line="715" pos:column="6">_VxStringDifferenceTypes</name>
    <block pos:line="716" pos:column="5">{	<decl><name pos:line="716" pos:column="9">VxStringDifferenceTypesLine</name>	<init pos:line="716" pos:column="41">= <expr><lit:literal type="number" pos:line="716" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="716" pos:column="44">,</op:operator>
	<decl><name pos:line="717" pos:column="9">VxStringDifferenceTypesWord</name>	<init pos:line="717" pos:column="41">= <expr><lit:literal type="number" pos:line="717" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="717" pos:column="44">,</op:operator>
	<decl><name pos:line="718" pos:column="9">VxStringDifferenceTypesCharacter</name>	<init pos:line="718" pos:column="49">= <expr><lit:literal type="number" pos:line="718" pos:column="51">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="719" pos:column="9">VxStringDifferenceTypes</name>;</typedef>

<typedef pos:line="721" pos:column="1">typedef 
<type><enum pos:line="722" pos:column="1">enum <name pos:line="722" pos:column="6">_VxWordSplitBehavior</name>
    <block pos:line="723" pos:column="5">{	<decl><name pos:line="723" pos:column="9">VxWordSplitBehaviorDefault</name>	<init pos:line="723" pos:column="41">= <expr><lit:literal type="number" pos:line="723" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="723" pos:column="44">,</op:operator>
	<decl><name pos:line="724" pos:column="9">VxWordSplitBehaviorCharacterClass</name>	<init pos:line="724" pos:column="49">= <expr><lit:literal type="number" pos:line="724" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="724" pos:column="52">,</op:operator>
	<decl><name pos:line="725" pos:column="9">VxWordSplitBehaviorWhiteSpace</name>	<init pos:line="725" pos:column="41">= <expr><lit:literal type="number" pos:line="725" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="725" pos:column="44">,</op:operator>
	<decl><name pos:line="726" pos:column="9">VxWordSplitBehaviorWhiteSpaceAndPunctuation</name>	<init pos:line="726" pos:column="57">= <expr><lit:literal type="number" pos:line="726" pos:column="59">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="727" pos:column="9">VxWordSplitBehavior</name>;</typedef>

<typedef pos:line="729" pos:column="1">typedef 
<type><enum pos:line="730" pos:column="1">enum <name pos:line="730" pos:column="6">_VxReloadResult</name>
    <block pos:line="731" pos:column="5">{	<decl><name pos:line="731" pos:column="9">VxReloadResultAborted</name>	<init pos:line="731" pos:column="33">= <expr><lit:literal type="number" pos:line="731" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="731" pos:column="36">,</op:operator>
	<decl><name pos:line="732" pos:column="9">VxReloadResultSucceeded</name>	<init pos:line="732" pos:column="33">= <expr><lit:literal type="number" pos:line="732" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="732" pos:column="36">,</op:operator>
	<decl><name pos:line="733" pos:column="9">VxReloadResultSucceededWithCharacterSubstitutions</name>	<init pos:line="733" pos:column="65">= <expr><lit:literal type="number" pos:line="733" pos:column="67">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="734" pos:column="9">VxReloadResult</name>;</typedef>

<typedef pos:line="736" pos:column="1">typedef 
<type><enum pos:line="737" pos:column="1">enum <name pos:line="737" pos:column="6">_VxFileActionTypes</name>
    <block pos:line="738" pos:column="5">{	<decl><name pos:line="738" pos:column="9">VxFileActionTypesContentSavedToDisk</name>	<init pos:line="738" pos:column="49">= <expr><lit:literal type="number" pos:line="738" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="738" pos:column="52">,</op:operator>
	<decl><name pos:line="739" pos:column="9">VxFileActionTypesContentLoadedFromDisk</name>	<init pos:line="739" pos:column="49">= <expr><lit:literal type="number" pos:line="739" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="739" pos:column="52">,</op:operator>
	<decl><name pos:line="740" pos:column="9">VxFileActionTypesDocumentRenamed</name>	<init pos:line="740" pos:column="49">= <expr><lit:literal type="number" pos:line="740" pos:column="51">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="741" pos:column="9">VxFileActionTypes</name>;</typedef>

<typedef pos:line="743" pos:column="1">typedef 
<type><enum pos:line="744" pos:column="1">enum <name pos:line="744" pos:column="6">_VxEdgeInsertionMode</name>
    <block pos:line="745" pos:column="5">{	<decl><name pos:line="745" pos:column="9">VxEdgeInsertionModeAllow</name>	<init pos:line="745" pos:column="41">= <expr><lit:literal type="number" pos:line="745" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="745" pos:column="44">,</op:operator>
	<decl><name pos:line="746" pos:column="9">VxEdgeInsertionModeDeny</name>	<init pos:line="746" pos:column="33">= <expr><lit:literal type="number" pos:line="746" pos:column="35">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="747" pos:column="9">VxEdgeInsertionMode</name>;</typedef>

<typedef pos:line="749" pos:column="1">typedef 
<type><enum pos:line="750" pos:column="1">enum <name pos:line="750" pos:column="6">_VxPointTrackingMode</name>
    <block pos:line="751" pos:column="5">{	<decl><name pos:line="751" pos:column="9">VxPointTrackingModePositive</name>	<init pos:line="751" pos:column="41">= <expr><lit:literal type="number" pos:line="751" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="751" pos:column="44">,</op:operator>
	<decl><name pos:line="752" pos:column="9">VxPointTrackingModeNegative</name>	<init pos:line="752" pos:column="41">= <expr><lit:literal type="number" pos:line="752" pos:column="43">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="753" pos:column="9">VxPointTrackingMode</name>;</typedef>

<typedef pos:line="755" pos:column="1">typedef 
<type><enum pos:line="756" pos:column="1">enum <name pos:line="756" pos:column="6">_VxPositionAffinity</name>
    <block pos:line="757" pos:column="5">{	<decl><name pos:line="757" pos:column="9">VxPositionAffinityPredecessor</name>	<init pos:line="757" pos:column="41">= <expr><lit:literal type="number" pos:line="757" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="757" pos:column="44">,</op:operator>
	<decl><name pos:line="758" pos:column="9">VxPositionAffinitySuccessor</name>	<init pos:line="758" pos:column="41">= <expr><lit:literal type="number" pos:line="758" pos:column="43">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="759" pos:column="9">VxPositionAffinity</name>;</typedef>

<typedef pos:line="761" pos:column="1">typedef 
<type><enum pos:line="762" pos:column="1">enum <name pos:line="762" pos:column="6">_VxElisionBufferOptions</name>
    <block pos:line="763" pos:column="5">{	<decl><name pos:line="763" pos:column="9">VxElisionBufferOptionsNone</name>	<init pos:line="763" pos:column="41">= <expr><lit:literal type="number" pos:line="763" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="763" pos:column="44">,</op:operator>
	<decl><name pos:line="764" pos:column="9">VxElisionBufferOptionsFillInMappingMode</name>	<init pos:line="764" pos:column="49">= <expr><lit:literal type="number" pos:line="764" pos:column="51">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="765" pos:column="9">VxElisionBufferOptions</name>;</typedef>

<typedef pos:line="767" pos:column="1">typedef 
<type><enum pos:line="768" pos:column="1">enum <name pos:line="768" pos:column="6">_VxProjectionBufferOptions</name>
    <block pos:line="769" pos:column="5">{	<decl><name pos:line="769" pos:column="9">VxProjectionBufferOptionsNone</name>	<init pos:line="769" pos:column="41">= <expr><lit:literal type="number" pos:line="769" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="769" pos:column="44">,</op:operator>
	<decl><name pos:line="770" pos:column="9">VxProjectionBufferOptionsPermissiveEdgeInclusiveSourceSpans</name>	<init pos:line="770" pos:column="73">= <expr><lit:literal type="number" pos:line="770" pos:column="75">1</lit:literal></expr></init></decl><op:operator pos:line="770" pos:column="76">,</op:operator>
	<decl><name pos:line="771" pos:column="9">VxProjectionBufferOptionsWritableLiteralSpans</name>	<init pos:line="771" pos:column="57">= <expr><lit:literal type="number" pos:line="771" pos:column="59">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="772" pos:column="9">VxProjectionBufferOptions</name>;</typedef>

<typedef pos:line="774" pos:column="1">typedef 
<type><enum pos:line="775" pos:column="1">enum <name pos:line="775" pos:column="6">_VxSpanTrackingMode</name>
    <block pos:line="776" pos:column="5">{	<decl><name pos:line="776" pos:column="9">VxSpanTrackingModeEdgeExclusive</name>	<init pos:line="776" pos:column="41">= <expr><lit:literal type="number" pos:line="776" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="776" pos:column="44">,</op:operator>
	<decl><name pos:line="777" pos:column="9">VxSpanTrackingModeEdgeInclusive</name>	<init pos:line="777" pos:column="41">= <expr><lit:literal type="number" pos:line="777" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="777" pos:column="44">,</op:operator>
	<decl><name pos:line="778" pos:column="9">VxSpanTrackingModeEdgePositive</name>	<init pos:line="778" pos:column="41">= <expr><lit:literal type="number" pos:line="778" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="778" pos:column="44">,</op:operator>
	<decl><name pos:line="779" pos:column="9">VxSpanTrackingModeEdgeNegative</name>	<init pos:line="779" pos:column="41">= <expr><lit:literal type="number" pos:line="779" pos:column="43">3</lit:literal></expr></init></decl><op:operator pos:line="779" pos:column="44">,</op:operator>
	<decl><name pos:line="780" pos:column="9">VxSpanTrackingModeCustom</name>	<init pos:line="780" pos:column="41">= <expr><lit:literal type="number" pos:line="780" pos:column="43">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="781" pos:column="9">VxSpanTrackingMode</name>;</typedef>

<typedef pos:line="783" pos:column="1">typedef 
<type><enum pos:line="784" pos:column="1">enum <name pos:line="784" pos:column="6">_VxTrackingFidelityMode</name>
    <block pos:line="785" pos:column="5">{	<decl><name pos:line="785" pos:column="9">VxTrackingFidelityModeForward</name>	<init pos:line="785" pos:column="41">= <expr><lit:literal type="number" pos:line="785" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="785" pos:column="44">,</op:operator>
	<decl><name pos:line="786" pos:column="9">VxTrackingFidelityModeBackward</name>	<init pos:line="786" pos:column="41">= <expr><lit:literal type="number" pos:line="786" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="786" pos:column="44">,</op:operator>
	<decl><name pos:line="787" pos:column="9">VxTrackingFidelityModeUndoRedo</name>	<init pos:line="787" pos:column="41">= <expr><lit:literal type="number" pos:line="787" pos:column="43">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="788" pos:column="9">VxTrackingFidelityMode</name>;</typedef>

<typedef pos:line="790" pos:column="1">typedef 
<type><enum pos:line="791" pos:column="1">enum <name pos:line="791" pos:column="6">_VxTagAggregatorOptions</name>
    <block pos:line="792" pos:column="5">{	<decl><name pos:line="792" pos:column="9">VxTagAggregatorOptionsNone</name>	<init pos:line="792" pos:column="41">= <expr><lit:literal type="number" pos:line="792" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="792" pos:column="44">,</op:operator>
	<decl><name pos:line="793" pos:column="9">VxTagAggregatorOptionsMapByContentType</name>	<init pos:line="793" pos:column="49">= <expr><lit:literal type="number" pos:line="793" pos:column="51">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="794" pos:column="9">VxTagAggregatorOptions</name>;</typedef>

<typedef pos:line="796" pos:column="1">typedef 
<type><enum pos:line="797" pos:column="1">enum <name pos:line="797" pos:column="6">_VxChangeTypes</name>
    <block pos:line="798" pos:column="5">{	<decl><name pos:line="798" pos:column="9">VxChangeTypesNone</name>	<init pos:line="798" pos:column="33">= <expr><lit:literal type="number" pos:line="798" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="798" pos:column="36">,</op:operator>
	<decl><name pos:line="799" pos:column="9">VxChangeTypesChangedSinceOpened</name>	<init pos:line="799" pos:column="41">= <expr><lit:literal type="number" pos:line="799" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="799" pos:column="44">,</op:operator>
	<decl><name pos:line="800" pos:column="9">VxChangeTypesChangedSinceSaved</name>	<init pos:line="800" pos:column="41">= <expr><lit:literal type="number" pos:line="800" pos:column="43">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="801" pos:column="9">VxChangeTypes</name>;</typedef>

<typedef pos:line="803" pos:column="1">typedef 
<type><enum pos:line="804" pos:column="1">enum <name pos:line="804" pos:column="6">_VxFindOptions</name>
    <block pos:line="805" pos:column="5">{	<decl><name pos:line="805" pos:column="9">VxFindOptionsNone</name>	<init pos:line="805" pos:column="33">= <expr><lit:literal type="number" pos:line="805" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="805" pos:column="36">,</op:operator>
	<decl><name pos:line="806" pos:column="9">VxFindOptionsMatchCase</name>	<init pos:line="806" pos:column="33">= <expr><lit:literal type="number" pos:line="806" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="806" pos:column="36">,</op:operator>
	<decl><name pos:line="807" pos:column="9">VxFindOptionsUseRegularExpressions</name>	<init pos:line="807" pos:column="49">= <expr><lit:literal type="number" pos:line="807" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="807" pos:column="52">,</op:operator>
	<decl><name pos:line="808" pos:column="9">VxFindOptionsWholeWord</name>	<init pos:line="808" pos:column="33">= <expr><lit:literal type="number" pos:line="808" pos:column="35">4</lit:literal></expr></init></decl><op:operator pos:line="808" pos:column="36">,</op:operator>
	<decl><name pos:line="809" pos:column="9">VxFindOptionsSearchReverse</name>	<init pos:line="809" pos:column="41">= <expr><lit:literal type="number" pos:line="809" pos:column="43">8</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="810" pos:column="9">VxFindOptions</name>;</typedef>

<typedef pos:line="812" pos:column="1">typedef 
<type><enum pos:line="813" pos:column="1">enum <name pos:line="813" pos:column="6">_VxTextUndoHistoryState</name>
    <block pos:line="814" pos:column="5">{	<decl><name pos:line="814" pos:column="9">VxTextUndoHistoryStateIdle</name>	<init pos:line="814" pos:column="41">= <expr><lit:literal type="number" pos:line="814" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="814" pos:column="44">,</op:operator>
	<decl><name pos:line="815" pos:column="9">VxTextUndoHistoryStateUndoing</name>	<init pos:line="815" pos:column="41">= <expr><lit:literal type="number" pos:line="815" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="815" pos:column="44">,</op:operator>
	<decl><name pos:line="816" pos:column="9">VxTextUndoHistoryStateRedoing</name>	<init pos:line="816" pos:column="41">= <expr><lit:literal type="number" pos:line="816" pos:column="43">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="817" pos:column="9">VxTextUndoHistoryState</name>;</typedef>

<typedef pos:line="819" pos:column="1">typedef 
<type><enum pos:line="820" pos:column="1">enum <name pos:line="820" pos:column="6">_VxTextUndoTransactionCompletionResult</name>
    <block pos:line="821" pos:column="5">{	<decl><name pos:line="821" pos:column="9">VxTextUndoTransactionCompletionResultTransactionAdded</name>	<init pos:line="821" pos:column="65">= <expr><lit:literal type="number" pos:line="821" pos:column="67">0</lit:literal></expr></init></decl><op:operator pos:line="821" pos:column="68">,</op:operator>
	<decl><name pos:line="822" pos:column="9">VxTextUndoTransactionCompletionResultTransactionMerged</name>	<init pos:line="822" pos:column="65">= <expr><lit:literal type="number" pos:line="822" pos:column="67">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="823" pos:column="9">VxTextUndoTransactionCompletionResult</name>;</typedef>

<typedef pos:line="825" pos:column="1">typedef 
<type><enum pos:line="826" pos:column="1">enum <name pos:line="826" pos:column="6">_VxUndoTransactionState</name>
    <block pos:line="827" pos:column="5">{	<decl><name pos:line="827" pos:column="9">VxUndoTransactionStateOpen</name>	<init pos:line="827" pos:column="41">= <expr><lit:literal type="number" pos:line="827" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="827" pos:column="44">,</op:operator>
	<decl><name pos:line="828" pos:column="9">VxUndoTransactionStateCompleted</name>	<init pos:line="828" pos:column="41">= <expr><lit:literal type="number" pos:line="828" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="828" pos:column="44">,</op:operator>
	<decl><name pos:line="829" pos:column="9">VxUndoTransactionStateCanceled</name>	<init pos:line="829" pos:column="41">= <expr><lit:literal type="number" pos:line="829" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="829" pos:column="44">,</op:operator>
	<decl><name pos:line="830" pos:column="9">VxUndoTransactionStateRedoing</name>	<init pos:line="830" pos:column="41">= <expr><lit:literal type="number" pos:line="830" pos:column="43">3</lit:literal></expr></init></decl><op:operator pos:line="830" pos:column="44">,</op:operator>
	<decl><name pos:line="831" pos:column="9">VxUndoTransactionStateUndoing</name>	<init pos:line="831" pos:column="41">= <expr><lit:literal type="number" pos:line="831" pos:column="43">4</lit:literal></expr></init></decl><op:operator pos:line="831" pos:column="44">,</op:operator>
	<decl><name pos:line="832" pos:column="9">VxUndoTransactionStateUndone</name>	<init pos:line="832" pos:column="41">= <expr><lit:literal type="number" pos:line="832" pos:column="43">5</lit:literal></expr></init></decl><op:operator pos:line="832" pos:column="44">,</op:operator>
	<decl><name pos:line="833" pos:column="9">VxUndoTransactionStateInvalid</name>	<init pos:line="833" pos:column="41">= <expr><lit:literal type="number" pos:line="833" pos:column="43">6</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="834" pos:column="9">VxUndoTransactionState</name>;</typedef>

<typedef pos:line="836" pos:column="1">typedef 
<type><enum pos:line="837" pos:column="1">enum <name pos:line="837" pos:column="6">_VxPopupStyles</name>
    <block pos:line="838" pos:column="5">{	<decl><name pos:line="838" pos:column="9">VxPopupStylesNone</name>	<init pos:line="838" pos:column="33">= <expr><lit:literal type="number" pos:line="838" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="838" pos:column="36">,</op:operator>
	<decl><name pos:line="839" pos:column="9">VxPopupStylesDismissOnMouseLeaveText</name>	<init pos:line="839" pos:column="49">= <expr><lit:literal type="number" pos:line="839" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="839" pos:column="52">,</op:operator>
	<decl><name pos:line="840" pos:column="9">VxPopupStylesDismissOnMouseLeaveTextOrContent</name>	<init pos:line="840" pos:column="57">= <expr><lit:literal type="number" pos:line="840" pos:column="59">8</lit:literal></expr></init></decl><op:operator pos:line="840" pos:column="60">,</op:operator>
	<decl><name pos:line="841" pos:column="9">VxPopupStylesPositionLeftOrRight</name>	<init pos:line="841" pos:column="49">= <expr><lit:literal type="number" pos:line="841" pos:column="51">16</lit:literal></expr></init></decl><op:operator pos:line="841" pos:column="53">,</op:operator>
	<decl><name pos:line="842" pos:column="9">VxPopupStylesPreferLeftOrTopPosition</name>	<init pos:line="842" pos:column="49">= <expr><lit:literal type="number" pos:line="842" pos:column="51">32</lit:literal></expr></init></decl><op:operator pos:line="842" pos:column="53">,</op:operator>
	<decl><name pos:line="843" pos:column="9">VxPopupStylesRightOrBottomJustify</name>	<init pos:line="843" pos:column="49">= <expr><lit:literal type="number" pos:line="843" pos:column="51">64</lit:literal></expr></init></decl><op:operator pos:line="843" pos:column="53">,</op:operator>
	<decl><name pos:line="844" pos:column="9">VxPopupStylesPositionClosest</name>	<init pos:line="844" pos:column="41">= <expr><lit:literal type="number" pos:line="844" pos:column="43">128</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="845" pos:column="9">VxPopupStyles</name>;</typedef>

<typedef pos:line="847" pos:column="1">typedef 
<type><enum pos:line="848" pos:column="1">enum <name pos:line="848" pos:column="6">_VxEnsureSpanVisibleOptions</name>
    <block pos:line="849" pos:column="5">{	<decl><name pos:line="849" pos:column="9">VxEnsureSpanVisibleOptionsShowStart</name>	<init pos:line="849" pos:column="49">= <expr><lit:literal type="number" pos:line="849" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="849" pos:column="52">,</op:operator>
	<decl><name pos:line="850" pos:column="9">VxEnsureSpanVisibleOptionsMinimumScroll</name>	<init pos:line="850" pos:column="49">= <expr><lit:literal type="number" pos:line="850" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="850" pos:column="52">,</op:operator>
	<decl><name pos:line="851" pos:column="9">VxEnsureSpanVisibleOptionsAlwaysCenter</name>	<init pos:line="851" pos:column="49">= <expr><lit:literal type="number" pos:line="851" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="851" pos:column="52">,</op:operator>
	<decl><name pos:line="852" pos:column="9">VxEnsureSpanVisibleOptionsNone</name>	<init pos:line="852" pos:column="41">= <expr><lit:literal type="number" pos:line="852" pos:column="43">0</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="853" pos:column="9">VxEnsureSpanVisibleOptions</name>;</typedef>

<typedef pos:line="855" pos:column="1">typedef 
<type><enum pos:line="856" pos:column="1">enum <name pos:line="856" pos:column="6">_VxScrollDirection</name>
    <block pos:line="857" pos:column="5">{	<decl><name pos:line="857" pos:column="9">VxScrollDirectionUp</name>	<init pos:line="857" pos:column="33">= <expr><lit:literal type="number" pos:line="857" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="857" pos:column="36">,</op:operator>
	<decl><name pos:line="858" pos:column="9">VxScrollDirectionDown</name>	<init pos:line="858" pos:column="33">= <expr><lit:literal type="number" pos:line="858" pos:column="35">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="859" pos:column="9">VxScrollDirection</name>;</typedef>

<typedef pos:line="861" pos:column="1">typedef 
<type><enum pos:line="862" pos:column="1">enum <name pos:line="862" pos:column="6">_VxTextSelectionMode</name>
    <block pos:line="863" pos:column="5">{	<decl><name pos:line="863" pos:column="9">VxTextSelectionModeStream</name>	<init pos:line="863" pos:column="41">= <expr><lit:literal type="number" pos:line="863" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="863" pos:column="44">,</op:operator>
	<decl><name pos:line="864" pos:column="9">VxTextSelectionModeBox</name>	<init pos:line="864" pos:column="33">= <expr><lit:literal type="number" pos:line="864" pos:column="35">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="865" pos:column="9">VxTextSelectionMode</name>;</typedef>

<typedef pos:line="867" pos:column="1">typedef 
<type><enum pos:line="868" pos:column="1">enum <name pos:line="868" pos:column="6">_VxViewRelativePosition</name>
    <block pos:line="869" pos:column="5">{	<decl><name pos:line="869" pos:column="9">VxViewRelativePositionTop</name>	<init pos:line="869" pos:column="41">= <expr><lit:literal type="number" pos:line="869" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="869" pos:column="44">,</op:operator>
	<decl><name pos:line="870" pos:column="9">VxViewRelativePositionBottom</name>	<init pos:line="870" pos:column="41">= <expr><lit:literal type="number" pos:line="870" pos:column="43">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="871" pos:column="9">VxViewRelativePosition</name>;</typedef>

<typedef pos:line="873" pos:column="1">typedef 
<type><enum pos:line="874" pos:column="1">enum <name pos:line="874" pos:column="6">_VxWordWrapStyles</name>
    <block pos:line="875" pos:column="5">{	<decl><name pos:line="875" pos:column="9">VxWordWrapStylesNone</name>	<init pos:line="875" pos:column="33">= <expr><lit:literal type="number" pos:line="875" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="875" pos:column="36">,</op:operator>
	<decl><name pos:line="876" pos:column="9">VxWordWrapStylesWordWrap</name>	<init pos:line="876" pos:column="41">= <expr><lit:literal type="number" pos:line="876" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="876" pos:column="44">,</op:operator>
	<decl><name pos:line="877" pos:column="9">VxWordWrapStylesVisibleGlyphs</name>	<init pos:line="877" pos:column="41">= <expr><lit:literal type="number" pos:line="877" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="877" pos:column="44">,</op:operator>
	<decl><name pos:line="878" pos:column="9">VxWordWrapStylesAutoIndent</name>	<init pos:line="878" pos:column="41">= <expr><lit:literal type="number" pos:line="878" pos:column="43">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="879" pos:column="9">VxWordWrapStyles</name>;</typedef>

<typedef pos:line="881" pos:column="1">typedef 
<type><enum pos:line="882" pos:column="1">enum <name pos:line="882" pos:column="6">_VxTextViewLineChange</name>
    <block pos:line="883" pos:column="5">{	<decl><name pos:line="883" pos:column="9">VxTextViewLineChangeNone</name>	<init pos:line="883" pos:column="41">= <expr><lit:literal type="number" pos:line="883" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="883" pos:column="44">,</op:operator>
	<decl><name pos:line="884" pos:column="9">VxTextViewLineChangeNewOrReformatted</name>	<init pos:line="884" pos:column="49">= <expr><lit:literal type="number" pos:line="884" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="884" pos:column="52">,</op:operator>
	<decl><name pos:line="885" pos:column="9">VxTextViewLineChangeTranslated</name>	<init pos:line="885" pos:column="41">= <expr><lit:literal type="number" pos:line="885" pos:column="43">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="886" pos:column="9">VxTextViewLineChange</name>;</typedef>

<typedef pos:line="888" pos:column="1">typedef 
<type><enum pos:line="889" pos:column="1">enum <name pos:line="889" pos:column="6">_VxVisibilityState</name>
    <block pos:line="890" pos:column="5">{	<decl><name pos:line="890" pos:column="9">VxVisibilityStateUnattached</name>	<init pos:line="890" pos:column="41">= <expr><lit:literal type="number" pos:line="890" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="890" pos:column="44">,</op:operator>
	<decl><name pos:line="891" pos:column="9">VxVisibilityStateHidden</name>	<init pos:line="891" pos:column="33">= <expr><lit:literal type="number" pos:line="891" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="891" pos:column="36">,</op:operator>
	<decl><name pos:line="892" pos:column="9">VxVisibilityStatePartiallyVisible</name>	<init pos:line="892" pos:column="49">= <expr><lit:literal type="number" pos:line="892" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="892" pos:column="52">,</op:operator>
	<decl><name pos:line="893" pos:column="9">VxVisibilityStateFullyVisible</name>	<init pos:line="893" pos:column="41">= <expr><lit:literal type="number" pos:line="893" pos:column="43">3</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="894" pos:column="9">VxVisibilityState</name>;</typedef>

<typedef pos:line="896" pos:column="1">typedef 
<type><enum pos:line="897" pos:column="1">enum <name pos:line="897" pos:column="6">_VxIncrementalSearchDirection</name>
    <block pos:line="898" pos:column="5">{	<decl><name pos:line="898" pos:column="9">VxIncrementalSearchDirectionForward</name>	<init pos:line="898" pos:column="49">= <expr><lit:literal type="number" pos:line="898" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="898" pos:column="52">,</op:operator>
	<decl><name pos:line="899" pos:column="9">VxIncrementalSearchDirectionBackward</name>	<init pos:line="899" pos:column="49">= <expr><lit:literal type="number" pos:line="899" pos:column="51">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="900" pos:column="9">VxIncrementalSearchDirection</name>;</typedef>

<typedef pos:line="902" pos:column="1">typedef 
<type><enum pos:line="903" pos:column="1">enum <name pos:line="903" pos:column="6">_VxAdornmentPositioningBehavior</name>
    <block pos:line="904" pos:column="5">{	<decl><name pos:line="904" pos:column="9">VxAdornmentPositioningBehaviorOwnerControlled</name>	<init pos:line="904" pos:column="57">= <expr><lit:literal type="number" pos:line="904" pos:column="59">0</lit:literal></expr></init></decl><op:operator pos:line="904" pos:column="60">,</op:operator>
	<decl><name pos:line="905" pos:column="9">VxAdornmentPositioningBehaviorViewportRelative</name>	<init pos:line="905" pos:column="57">= <expr><lit:literal type="number" pos:line="905" pos:column="59">1</lit:literal></expr></init></decl><op:operator pos:line="905" pos:column="60">,</op:operator>
	<decl><name pos:line="906" pos:column="9">VxAdornmentPositioningBehaviorTextRelative</name>	<init pos:line="906" pos:column="57">= <expr><lit:literal type="number" pos:line="906" pos:column="59">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="907" pos:column="9">VxAdornmentPositioningBehavior</name>;</typedef>

<typedef pos:line="909" pos:column="1">typedef 
<type><enum pos:line="910" pos:column="1">enum <name pos:line="910" pos:column="6">_VxDragDropPointerEffects</name>
    <block pos:line="911" pos:column="5">{	<decl><name pos:line="911" pos:column="9">VxDragDropPointerEffectsNone</name>	<init pos:line="911" pos:column="41">= <expr><lit:literal type="number" pos:line="911" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="911" pos:column="44">,</op:operator>
	<decl><name pos:line="912" pos:column="9">VxDragDropPointerEffectsCopy</name>	<init pos:line="912" pos:column="41">= <expr><lit:literal type="number" pos:line="912" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="912" pos:column="44">,</op:operator>
	<decl><name pos:line="913" pos:column="9">VxDragDropPointerEffectsLink</name>	<init pos:line="913" pos:column="41">= <expr><lit:literal type="number" pos:line="913" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="913" pos:column="44">,</op:operator>
	<decl><name pos:line="914" pos:column="9">VxDragDropPointerEffectsMove</name>	<init pos:line="914" pos:column="41">= <expr><lit:literal type="number" pos:line="914" pos:column="43">4</lit:literal></expr></init></decl><op:operator pos:line="914" pos:column="44">,</op:operator>
	<decl><name pos:line="915" pos:column="9">VxDragDropPointerEffectsScroll</name>	<init pos:line="915" pos:column="41">= <expr><lit:literal type="number" pos:line="915" pos:column="43">8</lit:literal></expr></init></decl><op:operator pos:line="915" pos:column="44">,</op:operator>
	<decl><name pos:line="916" pos:column="9">VxDragDropPointerEffectsTrack</name>	<init pos:line="916" pos:column="41">= <expr><lit:literal type="number" pos:line="916" pos:column="43">16</lit:literal></expr></init></decl><op:operator pos:line="916" pos:column="45">,</op:operator>
	<decl><name pos:line="917" pos:column="9">VxDragDropPointerEffectsAll</name>	<init pos:line="917" pos:column="41">= <expr><lit:literal type="number" pos:line="917" pos:column="43">31</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="918" pos:column="9">VxDragDropPointerEffects</name>;</typedef>

<typedef pos:line="920" pos:column="1">typedef 
<type><enum pos:line="921" pos:column="1">enum <name pos:line="921" pos:column="6">_VxConnectionReason</name>
    <block pos:line="922" pos:column="5">{	<decl><name pos:line="922" pos:column="9">VxConnectionReasonTextViewLifetime</name>	<init pos:line="922" pos:column="49">= <expr><lit:literal type="number" pos:line="922" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="922" pos:column="52">,</op:operator>
	<decl><name pos:line="923" pos:column="9">VxConnectionReasonContentTypeChange</name>	<init pos:line="923" pos:column="49">= <expr><lit:literal type="number" pos:line="923" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="923" pos:column="52">,</op:operator>
	<decl><name pos:line="924" pos:column="9">VxConnectionReasonBufferGraphChange</name>	<init pos:line="924" pos:column="49">= <expr><lit:literal type="number" pos:line="924" pos:column="51">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="925" pos:column="9">VxConnectionReason</name>;</typedef>

<typedef pos:line="927" pos:column="1">typedef 
<type><enum pos:line="928" pos:column="1">enum <name pos:line="928" pos:column="6">_VxCompletionMatchType</name>
    <block pos:line="929" pos:column="5">{	<decl><name pos:line="929" pos:column="9">VxCompletionMatchTypeMatchDisplayText</name>	<init pos:line="929" pos:column="49">= <expr><lit:literal type="number" pos:line="929" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="929" pos:column="52">,</op:operator>
	<decl><name pos:line="930" pos:column="9">VxCompletionMatchTypeMatchInsertionText</name>	<init pos:line="930" pos:column="49">= <expr><lit:literal type="number" pos:line="930" pos:column="51">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="931" pos:column="9">VxCompletionMatchType</name>;</typedef>

<typedef pos:line="933" pos:column="1">typedef 
<type><enum pos:line="934" pos:column="1">enum <name pos:line="934" pos:column="6">_VxIntellisenseKeyboardCommand</name>
    <block pos:line="935" pos:column="5">{	<decl><name pos:line="935" pos:column="9">VxIntellisenseKeyboardCommandUp</name>	<init pos:line="935" pos:column="41">= <expr><lit:literal type="number" pos:line="935" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="935" pos:column="44">,</op:operator>
	<decl><name pos:line="936" pos:column="9">VxIntellisenseKeyboardCommandDown</name>	<init pos:line="936" pos:column="49">= <expr><lit:literal type="number" pos:line="936" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="936" pos:column="52">,</op:operator>
	<decl><name pos:line="937" pos:column="9">VxIntellisenseKeyboardCommandPageUp</name>	<init pos:line="937" pos:column="49">= <expr><lit:literal type="number" pos:line="937" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="937" pos:column="52">,</op:operator>
	<decl><name pos:line="938" pos:column="9">VxIntellisenseKeyboardCommandPageDown</name>	<init pos:line="938" pos:column="49">= <expr><lit:literal type="number" pos:line="938" pos:column="51">3</lit:literal></expr></init></decl><op:operator pos:line="938" pos:column="52">,</op:operator>
	<decl><name pos:line="939" pos:column="9">VxIntellisenseKeyboardCommandTopLine</name>	<init pos:line="939" pos:column="49">= <expr><lit:literal type="number" pos:line="939" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="939" pos:column="52">,</op:operator>
	<decl><name pos:line="940" pos:column="9">VxIntellisenseKeyboardCommandBottomLine</name>	<init pos:line="940" pos:column="49">= <expr><lit:literal type="number" pos:line="940" pos:column="51">5</lit:literal></expr></init></decl><op:operator pos:line="940" pos:column="52">,</op:operator>
	<decl><name pos:line="941" pos:column="9">VxIntellisenseKeyboardCommandHome</name>	<init pos:line="941" pos:column="49">= <expr><lit:literal type="number" pos:line="941" pos:column="51">6</lit:literal></expr></init></decl><op:operator pos:line="941" pos:column="52">,</op:operator>
	<decl><name pos:line="942" pos:column="9">VxIntellisenseKeyboardCommandEnd</name>	<init pos:line="942" pos:column="49">= <expr><lit:literal type="number" pos:line="942" pos:column="51">7</lit:literal></expr></init></decl><op:operator pos:line="942" pos:column="52">,</op:operator>
	<decl><name pos:line="943" pos:column="9">VxIntellisenseKeyboardCommandEnter</name>	<init pos:line="943" pos:column="49">= <expr><lit:literal type="number" pos:line="943" pos:column="51">8</lit:literal></expr></init></decl><op:operator pos:line="943" pos:column="52">,</op:operator>
	<decl><name pos:line="944" pos:column="9">VxIntellisenseKeyboardCommandEscape</name>	<init pos:line="944" pos:column="49">= <expr><lit:literal type="number" pos:line="944" pos:column="51">9</lit:literal></expr></init></decl><op:operator pos:line="944" pos:column="52">,</op:operator>
	<decl><name pos:line="945" pos:column="9">VxIntellisenseKeyboardCommandIncreaseFilterLevel</name>	<init pos:line="945" pos:column="65">= <expr><lit:literal type="number" pos:line="945" pos:column="67">10</lit:literal></expr></init></decl><op:operator pos:line="945" pos:column="69">,</op:operator>
	<decl><name pos:line="946" pos:column="9">VxIntellisenseKeyboardCommandDecreaseFilterLevel</name>	<init pos:line="946" pos:column="65">= <expr><lit:literal type="number" pos:line="946" pos:column="67">11</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="947" pos:column="9">VxIntellisenseKeyboardCommand</name>;</typedef>

<typedef pos:line="949" pos:column="1">typedef 
<type><enum pos:line="950" pos:column="1">enum <name pos:line="950" pos:column="6">_VxSmartTagState</name>
    <block pos:line="951" pos:column="5">{	<decl><name pos:line="951" pos:column="9">VxSmartTagStateCollapsed</name>	<init pos:line="951" pos:column="41">= <expr><lit:literal type="number" pos:line="951" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="951" pos:column="44">,</op:operator>
	<decl><name pos:line="952" pos:column="9">VxSmartTagStateIntermediate</name>	<init pos:line="952" pos:column="41">= <expr><lit:literal type="number" pos:line="952" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="952" pos:column="44">,</op:operator>
	<decl><name pos:line="953" pos:column="9">VxSmartTagStateExpanded</name>	<init pos:line="953" pos:column="33">= <expr><lit:literal type="number" pos:line="953" pos:column="35">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="954" pos:column="9">VxSmartTagState</name>;</typedef>

<typedef pos:line="956" pos:column="1">typedef 
<type><enum pos:line="957" pos:column="1">enum <name pos:line="957" pos:column="6">_VxSmartTagType</name>
    <block pos:line="958" pos:column="5">{	<decl><name pos:line="958" pos:column="9">VxSmartTagTypeFactoid</name>	<init pos:line="958" pos:column="33">= <expr><lit:literal type="number" pos:line="958" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="958" pos:column="36">,</op:operator>
	<decl><name pos:line="959" pos:column="9">VxSmartTagTypeEphemeral</name>	<init pos:line="959" pos:column="33">= <expr><lit:literal type="number" pos:line="959" pos:column="35">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="960" pos:column="9">VxSmartTagType</name>;</typedef>

<typedef pos:line="962" pos:column="1">typedef 
<type><enum pos:line="963" pos:column="1">enum <name pos:line="963" pos:column="6">_VxStandardGlyphGroup</name>
    <block pos:line="964" pos:column="5">{	<decl><name pos:line="964" pos:column="9">VxStandardGlyphGroupGlyphGroupClass</name>	<init pos:line="964" pos:column="49">= <expr><lit:literal type="number" pos:line="964" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="964" pos:column="52">,</op:operator>
	<decl><name pos:line="965" pos:column="9">VxStandardGlyphGroupGlyphGroupConstant</name>	<init pos:line="965" pos:column="49">= <expr><lit:literal type="number" pos:line="965" pos:column="51">6</lit:literal></expr></init></decl><op:operator pos:line="965" pos:column="52">,</op:operator>
	<decl><name pos:line="966" pos:column="9">VxStandardGlyphGroupGlyphGroupDelegate</name>	<init pos:line="966" pos:column="49">= <expr><lit:literal type="number" pos:line="966" pos:column="51">12</lit:literal></expr></init></decl><op:operator pos:line="966" pos:column="53">,</op:operator>
	<decl><name pos:line="967" pos:column="9">VxStandardGlyphGroupGlyphGroupEnum</name>	<init pos:line="967" pos:column="49">= <expr><lit:literal type="number" pos:line="967" pos:column="51">18</lit:literal></expr></init></decl><op:operator pos:line="967" pos:column="53">,</op:operator>
	<decl><name pos:line="968" pos:column="9">VxStandardGlyphGroupGlyphGroupEnumMember</name>	<init pos:line="968" pos:column="57">= <expr><lit:literal type="number" pos:line="968" pos:column="59">24</lit:literal></expr></init></decl><op:operator pos:line="968" pos:column="61">,</op:operator>
	<decl><name pos:line="969" pos:column="9">VxStandardGlyphGroupGlyphGroupEvent</name>	<init pos:line="969" pos:column="49">= <expr><lit:literal type="number" pos:line="969" pos:column="51">30</lit:literal></expr></init></decl><op:operator pos:line="969" pos:column="53">,</op:operator>
	<decl><name pos:line="970" pos:column="9">VxStandardGlyphGroupGlyphGroupException</name>	<init pos:line="970" pos:column="49">= <expr><lit:literal type="number" pos:line="970" pos:column="51">36</lit:literal></expr></init></decl><op:operator pos:line="970" pos:column="53">,</op:operator>
	<decl><name pos:line="971" pos:column="9">VxStandardGlyphGroupGlyphGroupField</name>	<init pos:line="971" pos:column="49">= <expr><lit:literal type="number" pos:line="971" pos:column="51">42</lit:literal></expr></init></decl><op:operator pos:line="971" pos:column="53">,</op:operator>
	<decl><name pos:line="972" pos:column="9">VxStandardGlyphGroupGlyphGroupInterface</name>	<init pos:line="972" pos:column="49">= <expr><lit:literal type="number" pos:line="972" pos:column="51">48</lit:literal></expr></init></decl><op:operator pos:line="972" pos:column="53">,</op:operator>
	<decl><name pos:line="973" pos:column="9">VxStandardGlyphGroupGlyphGroupMacro</name>	<init pos:line="973" pos:column="49">= <expr><lit:literal type="number" pos:line="973" pos:column="51">54</lit:literal></expr></init></decl><op:operator pos:line="973" pos:column="53">,</op:operator>
	<decl><name pos:line="974" pos:column="9">VxStandardGlyphGroupGlyphGroupMap</name>	<init pos:line="974" pos:column="49">= <expr><lit:literal type="number" pos:line="974" pos:column="51">60</lit:literal></expr></init></decl><op:operator pos:line="974" pos:column="53">,</op:operator>
	<decl><name pos:line="975" pos:column="9">VxStandardGlyphGroupGlyphGroupMapItem</name>	<init pos:line="975" pos:column="49">= <expr><lit:literal type="number" pos:line="975" pos:column="51">66</lit:literal></expr></init></decl><op:operator pos:line="975" pos:column="53">,</op:operator>
	<decl><name pos:line="976" pos:column="9">VxStandardGlyphGroupGlyphGroupMethod</name>	<init pos:line="976" pos:column="49">= <expr><lit:literal type="number" pos:line="976" pos:column="51">72</lit:literal></expr></init></decl><op:operator pos:line="976" pos:column="53">,</op:operator>
	<decl><name pos:line="977" pos:column="9">VxStandardGlyphGroupGlyphGroupOverload</name>	<init pos:line="977" pos:column="49">= <expr><lit:literal type="number" pos:line="977" pos:column="51">78</lit:literal></expr></init></decl><op:operator pos:line="977" pos:column="53">,</op:operator>
	<decl><name pos:line="978" pos:column="9">VxStandardGlyphGroupGlyphGroupModule</name>	<init pos:line="978" pos:column="49">= <expr><lit:literal type="number" pos:line="978" pos:column="51">84</lit:literal></expr></init></decl><op:operator pos:line="978" pos:column="53">,</op:operator>
	<decl><name pos:line="979" pos:column="9">VxStandardGlyphGroupGlyphGroupNamespace</name>	<init pos:line="979" pos:column="49">= <expr><lit:literal type="number" pos:line="979" pos:column="51">90</lit:literal></expr></init></decl><op:operator pos:line="979" pos:column="53">,</op:operator>
	<decl><name pos:line="980" pos:column="9">VxStandardGlyphGroupGlyphGroupOperator</name>	<init pos:line="980" pos:column="49">= <expr><lit:literal type="number" pos:line="980" pos:column="51">96</lit:literal></expr></init></decl><op:operator pos:line="980" pos:column="53">,</op:operator>
	<decl><name pos:line="981" pos:column="9">VxStandardGlyphGroupGlyphGroupProperty</name>	<init pos:line="981" pos:column="49">= <expr><lit:literal type="number" pos:line="981" pos:column="51">102</lit:literal></expr></init></decl><op:operator pos:line="981" pos:column="54">,</op:operator>
	<decl><name pos:line="982" pos:column="9">VxStandardGlyphGroupGlyphGroupStruct</name>	<init pos:line="982" pos:column="49">= <expr><lit:literal type="number" pos:line="982" pos:column="51">108</lit:literal></expr></init></decl><op:operator pos:line="982" pos:column="54">,</op:operator>
	<decl><name pos:line="983" pos:column="9">VxStandardGlyphGroupGlyphGroupTemplate</name>	<init pos:line="983" pos:column="49">= <expr><lit:literal type="number" pos:line="983" pos:column="51">114</lit:literal></expr></init></decl><op:operator pos:line="983" pos:column="54">,</op:operator>
	<decl><name pos:line="984" pos:column="9">VxStandardGlyphGroupGlyphGroupTypedef</name>	<init pos:line="984" pos:column="49">= <expr><lit:literal type="number" pos:line="984" pos:column="51">120</lit:literal></expr></init></decl><op:operator pos:line="984" pos:column="54">,</op:operator>
	<decl><name pos:line="985" pos:column="9">VxStandardGlyphGroupGlyphGroupType</name>	<init pos:line="985" pos:column="49">= <expr><lit:literal type="number" pos:line="985" pos:column="51">126</lit:literal></expr></init></decl><op:operator pos:line="985" pos:column="54">,</op:operator>
	<decl><name pos:line="986" pos:column="9">VxStandardGlyphGroupGlyphGroupUnion</name>	<init pos:line="986" pos:column="49">= <expr><lit:literal type="number" pos:line="986" pos:column="51">132</lit:literal></expr></init></decl><op:operator pos:line="986" pos:column="54">,</op:operator>
	<decl><name pos:line="987" pos:column="9">VxStandardGlyphGroupGlyphGroupVariable</name>	<init pos:line="987" pos:column="49">= <expr><lit:literal type="number" pos:line="987" pos:column="51">138</lit:literal></expr></init></decl><op:operator pos:line="987" pos:column="54">,</op:operator>
	<decl><name pos:line="988" pos:column="9">VxStandardGlyphGroupGlyphGroupValueType</name>	<init pos:line="988" pos:column="49">= <expr><lit:literal type="number" pos:line="988" pos:column="51">144</lit:literal></expr></init></decl><op:operator pos:line="988" pos:column="54">,</op:operator>
	<decl><name pos:line="989" pos:column="9">VxStandardGlyphGroupGlyphGroupIntrinsic</name>	<init pos:line="989" pos:column="49">= <expr><lit:literal type="number" pos:line="989" pos:column="51">150</lit:literal></expr></init></decl><op:operator pos:line="989" pos:column="54">,</op:operator>
	<decl><name pos:line="990" pos:column="9">VxStandardGlyphGroupGlyphGroupJSharpMethod</name>	<init pos:line="990" pos:column="57">= <expr><lit:literal type="number" pos:line="990" pos:column="59">156</lit:literal></expr></init></decl><op:operator pos:line="990" pos:column="62">,</op:operator>
	<decl><name pos:line="991" pos:column="9">VxStandardGlyphGroupGlyphGroupJSharpField</name>	<init pos:line="991" pos:column="57">= <expr><lit:literal type="number" pos:line="991" pos:column="59">162</lit:literal></expr></init></decl><op:operator pos:line="991" pos:column="62">,</op:operator>
	<decl><name pos:line="992" pos:column="9">VxStandardGlyphGroupGlyphGroupJSharpClass</name>	<init pos:line="992" pos:column="57">= <expr><lit:literal type="number" pos:line="992" pos:column="59">168</lit:literal></expr></init></decl><op:operator pos:line="992" pos:column="62">,</op:operator>
	<decl><name pos:line="993" pos:column="9">VxStandardGlyphGroupGlyphGroupJSharpNamespace</name>	<init pos:line="993" pos:column="57">= <expr><lit:literal type="number" pos:line="993" pos:column="59">174</lit:literal></expr></init></decl><op:operator pos:line="993" pos:column="62">,</op:operator>
	<decl><name pos:line="994" pos:column="9">VxStandardGlyphGroupGlyphGroupJSharpInterface</name>	<init pos:line="994" pos:column="57">= <expr><lit:literal type="number" pos:line="994" pos:column="59">180</lit:literal></expr></init></decl><op:operator pos:line="994" pos:column="62">,</op:operator>
	<decl><name pos:line="995" pos:column="9">VxStandardGlyphGroupGlyphGroupError</name>	<init pos:line="995" pos:column="49">= <expr><lit:literal type="number" pos:line="995" pos:column="51">186</lit:literal></expr></init></decl><op:operator pos:line="995" pos:column="54">,</op:operator>
	<decl><name pos:line="996" pos:column="9">VxStandardGlyphGroupGlyphBscFile</name>	<init pos:line="996" pos:column="49">= <expr><lit:literal type="number" pos:line="996" pos:column="51">191</lit:literal></expr></init></decl><op:operator pos:line="996" pos:column="54">,</op:operator>
	<decl><name pos:line="997" pos:column="9">VxStandardGlyphGroupGlyphAssembly</name>	<init pos:line="997" pos:column="49">= <expr><lit:literal type="number" pos:line="997" pos:column="51">192</lit:literal></expr></init></decl><op:operator pos:line="997" pos:column="54">,</op:operator>
	<decl><name pos:line="998" pos:column="9">VxStandardGlyphGroupGlyphLibrary</name>	<init pos:line="998" pos:column="49">= <expr><lit:literal type="number" pos:line="998" pos:column="51">193</lit:literal></expr></init></decl><op:operator pos:line="998" pos:column="54">,</op:operator>
	<decl><name pos:line="999" pos:column="9">VxStandardGlyphGroupGlyphVBProject</name>	<init pos:line="999" pos:column="49">= <expr><lit:literal type="number" pos:line="999" pos:column="51">194</lit:literal></expr></init></decl><op:operator pos:line="999" pos:column="54">,</op:operator>
	<decl><name pos:line="1000" pos:column="9">VxStandardGlyphGroupGlyphCoolProject</name>	<init pos:line="1000" pos:column="49">= <expr><lit:literal type="number" pos:line="1000" pos:column="51">196</lit:literal></expr></init></decl><op:operator pos:line="1000" pos:column="54">,</op:operator>
	<decl><name pos:line="1001" pos:column="9">VxStandardGlyphGroupGlyphCppProject</name>	<init pos:line="1001" pos:column="49">= <expr><lit:literal type="number" pos:line="1001" pos:column="51">199</lit:literal></expr></init></decl><op:operator pos:line="1001" pos:column="54">,</op:operator>
	<decl><name pos:line="1002" pos:column="9">VxStandardGlyphGroupGlyphDialogId</name>	<init pos:line="1002" pos:column="49">= <expr><lit:literal type="number" pos:line="1002" pos:column="51">200</lit:literal></expr></init></decl><op:operator pos:line="1002" pos:column="54">,</op:operator>
	<decl><name pos:line="1003" pos:column="9">VxStandardGlyphGroupGlyphOpenFolder</name>	<init pos:line="1003" pos:column="49">= <expr><lit:literal type="number" pos:line="1003" pos:column="51">201</lit:literal></expr></init></decl><op:operator pos:line="1003" pos:column="54">,</op:operator>
	<decl><name pos:line="1004" pos:column="9">VxStandardGlyphGroupGlyphClosedFolder</name>	<init pos:line="1004" pos:column="49">= <expr><lit:literal type="number" pos:line="1004" pos:column="51">202</lit:literal></expr></init></decl><op:operator pos:line="1004" pos:column="54">,</op:operator>
	<decl><name pos:line="1005" pos:column="9">VxStandardGlyphGroupGlyphArrow</name>	<init pos:line="1005" pos:column="41">= <expr><lit:literal type="number" pos:line="1005" pos:column="43">203</lit:literal></expr></init></decl><op:operator pos:line="1005" pos:column="46">,</op:operator>
	<decl><name pos:line="1006" pos:column="9">VxStandardGlyphGroupGlyphCSharpFile</name>	<init pos:line="1006" pos:column="49">= <expr><lit:literal type="number" pos:line="1006" pos:column="51">204</lit:literal></expr></init></decl><op:operator pos:line="1006" pos:column="54">,</op:operator>
	<decl><name pos:line="1007" pos:column="9">VxStandardGlyphGroupGlyphCSharpExpansion</name>	<init pos:line="1007" pos:column="57">= <expr><lit:literal type="number" pos:line="1007" pos:column="59">205</lit:literal></expr></init></decl><op:operator pos:line="1007" pos:column="62">,</op:operator>
	<decl><name pos:line="1008" pos:column="9">VxStandardGlyphGroupGlyphKeyword</name>	<init pos:line="1008" pos:column="49">= <expr><lit:literal type="number" pos:line="1008" pos:column="51">206</lit:literal></expr></init></decl><op:operator pos:line="1008" pos:column="54">,</op:operator>
	<decl><name pos:line="1009" pos:column="9">VxStandardGlyphGroupGlyphInformation</name>	<init pos:line="1009" pos:column="49">= <expr><lit:literal type="number" pos:line="1009" pos:column="51">207</lit:literal></expr></init></decl><op:operator pos:line="1009" pos:column="54">,</op:operator>
	<decl><name pos:line="1010" pos:column="9">VxStandardGlyphGroupGlyphReference</name>	<init pos:line="1010" pos:column="49">= <expr><lit:literal type="number" pos:line="1010" pos:column="51">208</lit:literal></expr></init></decl><op:operator pos:line="1010" pos:column="54">,</op:operator>
	<decl><name pos:line="1011" pos:column="9">VxStandardGlyphGroupGlyphRecursion</name>	<init pos:line="1011" pos:column="49">= <expr><lit:literal type="number" pos:line="1011" pos:column="51">209</lit:literal></expr></init></decl><op:operator pos:line="1011" pos:column="54">,</op:operator>
	<decl><name pos:line="1012" pos:column="9">VxStandardGlyphGroupGlyphXmlItem</name>	<init pos:line="1012" pos:column="49">= <expr><lit:literal type="number" pos:line="1012" pos:column="51">210</lit:literal></expr></init></decl><op:operator pos:line="1012" pos:column="54">,</op:operator>
	<decl><name pos:line="1013" pos:column="9">VxStandardGlyphGroupGlyphJSharpProject</name>	<init pos:line="1013" pos:column="49">= <expr><lit:literal type="number" pos:line="1013" pos:column="51">211</lit:literal></expr></init></decl><op:operator pos:line="1013" pos:column="54">,</op:operator>
	<decl><name pos:line="1014" pos:column="9">VxStandardGlyphGroupGlyphJSharpDocument</name>	<init pos:line="1014" pos:column="49">= <expr><lit:literal type="number" pos:line="1014" pos:column="51">212</lit:literal></expr></init></decl><op:operator pos:line="1014" pos:column="54">,</op:operator>
	<decl><name pos:line="1015" pos:column="9">VxStandardGlyphGroupGlyphForwardType</name>	<init pos:line="1015" pos:column="49">= <expr><lit:literal type="number" pos:line="1015" pos:column="51">213</lit:literal></expr></init></decl><op:operator pos:line="1015" pos:column="54">,</op:operator>
	<decl><name pos:line="1016" pos:column="9">VxStandardGlyphGroupGlyphCallersGraph</name>	<init pos:line="1016" pos:column="49">= <expr><lit:literal type="number" pos:line="1016" pos:column="51">214</lit:literal></expr></init></decl><op:operator pos:line="1016" pos:column="54">,</op:operator>
	<decl><name pos:line="1017" pos:column="9">VxStandardGlyphGroupGlyphCallGraph</name>	<init pos:line="1017" pos:column="49">= <expr><lit:literal type="number" pos:line="1017" pos:column="51">215</lit:literal></expr></init></decl><op:operator pos:line="1017" pos:column="54">,</op:operator>
	<decl><name pos:line="1018" pos:column="9">VxStandardGlyphGroupGlyphWarning</name>	<init pos:line="1018" pos:column="49">= <expr><lit:literal type="number" pos:line="1018" pos:column="51">216</lit:literal></expr></init></decl><op:operator pos:line="1018" pos:column="54">,</op:operator>
	<decl><name pos:line="1019" pos:column="9">VxStandardGlyphGroupGlyphMaybeReference</name>	<init pos:line="1019" pos:column="49">= <expr><lit:literal type="number" pos:line="1019" pos:column="51">217</lit:literal></expr></init></decl><op:operator pos:line="1019" pos:column="54">,</op:operator>
	<decl><name pos:line="1020" pos:column="9">VxStandardGlyphGroupGlyphMaybeCaller</name>	<init pos:line="1020" pos:column="49">= <expr><lit:literal type="number" pos:line="1020" pos:column="51">218</lit:literal></expr></init></decl><op:operator pos:line="1020" pos:column="54">,</op:operator>
	<decl><name pos:line="1021" pos:column="9">VxStandardGlyphGroupGlyphMaybeCall</name>	<init pos:line="1021" pos:column="49">= <expr><lit:literal type="number" pos:line="1021" pos:column="51">219</lit:literal></expr></init></decl><op:operator pos:line="1021" pos:column="54">,</op:operator>
	<decl><name pos:line="1022" pos:column="9">VxStandardGlyphGroupGlyphExtensionMethod</name>	<init pos:line="1022" pos:column="57">= <expr><lit:literal type="number" pos:line="1022" pos:column="59">220</lit:literal></expr></init></decl><op:operator pos:line="1022" pos:column="62">,</op:operator>
	<decl><name pos:line="1023" pos:column="9">VxStandardGlyphGroupGlyphExtensionMethodInternal</name>	<init pos:line="1023" pos:column="65">= <expr><lit:literal type="number" pos:line="1023" pos:column="67">221</lit:literal></expr></init></decl><op:operator pos:line="1023" pos:column="70">,</op:operator>
	<decl><name pos:line="1024" pos:column="9">VxStandardGlyphGroupGlyphExtensionMethodFriend</name>	<init pos:line="1024" pos:column="57">= <expr><lit:literal type="number" pos:line="1024" pos:column="59">222</lit:literal></expr></init></decl><op:operator pos:line="1024" pos:column="62">,</op:operator>
	<decl><name pos:line="1025" pos:column="9">VxStandardGlyphGroupGlyphExtensionMethodProtected</name>	<init pos:line="1025" pos:column="65">= <expr><lit:literal type="number" pos:line="1025" pos:column="67">223</lit:literal></expr></init></decl><op:operator pos:line="1025" pos:column="70">,</op:operator>
	<decl><name pos:line="1026" pos:column="9">VxStandardGlyphGroupGlyphExtensionMethodPrivate</name>	<init pos:line="1026" pos:column="57">= <expr><lit:literal type="number" pos:line="1026" pos:column="59">224</lit:literal></expr></init></decl><op:operator pos:line="1026" pos:column="62">,</op:operator>
	<decl><name pos:line="1027" pos:column="9">VxStandardGlyphGroupGlyphExtensionMethodShortcut</name>	<init pos:line="1027" pos:column="65">= <expr><lit:literal type="number" pos:line="1027" pos:column="67">225</lit:literal></expr></init></decl><op:operator pos:line="1027" pos:column="70">,</op:operator>
	<decl><name pos:line="1028" pos:column="9">VxStandardGlyphGroupGlyphXmlAttribute</name>	<init pos:line="1028" pos:column="49">= <expr><lit:literal type="number" pos:line="1028" pos:column="51">226</lit:literal></expr></init></decl><op:operator pos:line="1028" pos:column="54">,</op:operator>
	<decl><name pos:line="1029" pos:column="9">VxStandardGlyphGroupGlyphXmlChild</name>	<init pos:line="1029" pos:column="49">= <expr><lit:literal type="number" pos:line="1029" pos:column="51">227</lit:literal></expr></init></decl><op:operator pos:line="1029" pos:column="54">,</op:operator>
	<decl><name pos:line="1030" pos:column="9">VxStandardGlyphGroupGlyphXmlDescendant</name>	<init pos:line="1030" pos:column="49">= <expr><lit:literal type="number" pos:line="1030" pos:column="51">228</lit:literal></expr></init></decl><op:operator pos:line="1030" pos:column="54">,</op:operator>
	<decl><name pos:line="1031" pos:column="9">VxStandardGlyphGroupGlyphXmlNamespace</name>	<init pos:line="1031" pos:column="49">= <expr><lit:literal type="number" pos:line="1031" pos:column="51">229</lit:literal></expr></init></decl><op:operator pos:line="1031" pos:column="54">,</op:operator>
	<decl><name pos:line="1032" pos:column="9">VxStandardGlyphGroupGlyphXmlAttributeQuestion</name>	<init pos:line="1032" pos:column="57">= <expr><lit:literal type="number" pos:line="1032" pos:column="59">230</lit:literal></expr></init></decl><op:operator pos:line="1032" pos:column="62">,</op:operator>
	<decl><name pos:line="1033" pos:column="9">VxStandardGlyphGroupGlyphXmlAttributeCheck</name>	<init pos:line="1033" pos:column="57">= <expr><lit:literal type="number" pos:line="1033" pos:column="59">231</lit:literal></expr></init></decl><op:operator pos:line="1033" pos:column="62">,</op:operator>
	<decl><name pos:line="1034" pos:column="9">VxStandardGlyphGroupGlyphXmlChildQuestion</name>	<init pos:line="1034" pos:column="57">= <expr><lit:literal type="number" pos:line="1034" pos:column="59">232</lit:literal></expr></init></decl><op:operator pos:line="1034" pos:column="62">,</op:operator>
	<decl><name pos:line="1035" pos:column="9">VxStandardGlyphGroupGlyphXmlChildCheck</name>	<init pos:line="1035" pos:column="49">= <expr><lit:literal type="number" pos:line="1035" pos:column="51">233</lit:literal></expr></init></decl><op:operator pos:line="1035" pos:column="54">,</op:operator>
	<decl><name pos:line="1036" pos:column="9">VxStandardGlyphGroupGlyphXmlDescendantQuestion</name>	<init pos:line="1036" pos:column="57">= <expr><lit:literal type="number" pos:line="1036" pos:column="59">234</lit:literal></expr></init></decl><op:operator pos:line="1036" pos:column="62">,</op:operator>
	<decl><name pos:line="1037" pos:column="9">VxStandardGlyphGroupGlyphXmlDescendantCheck</name>	<init pos:line="1037" pos:column="57">= <expr><lit:literal type="number" pos:line="1037" pos:column="59">235</lit:literal></expr></init></decl><op:operator pos:line="1037" pos:column="62">,</op:operator>
	<decl><name pos:line="1038" pos:column="9">VxStandardGlyphGroupGlyphGroupUnknown</name>	<init pos:line="1038" pos:column="49">= <expr><lit:literal type="number" pos:line="1038" pos:column="51">236</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1039" pos:column="9">VxStandardGlyphGroup</name>;</typedef>

<typedef pos:line="1041" pos:column="1">typedef 
<type><enum pos:line="1042" pos:column="1">enum <name pos:line="1042" pos:column="6">_VxStandardGlyphItem</name>
    <block pos:line="1043" pos:column="5">{	<decl><name pos:line="1043" pos:column="9">VxStandardGlyphItemGlyphItemPublic</name>	<init pos:line="1043" pos:column="49">= <expr><lit:literal type="number" pos:line="1043" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="1043" pos:column="52">,</op:operator>
	<decl><name pos:line="1044" pos:column="9">VxStandardGlyphItemGlyphItemInternal</name>	<init pos:line="1044" pos:column="49">= <expr><lit:literal type="number" pos:line="1044" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="1044" pos:column="52">,</op:operator>
	<decl><name pos:line="1045" pos:column="9">VxStandardGlyphItemGlyphItemFriend</name>	<init pos:line="1045" pos:column="49">= <expr><lit:literal type="number" pos:line="1045" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="1045" pos:column="52">,</op:operator>
	<decl><name pos:line="1046" pos:column="9">VxStandardGlyphItemGlyphItemProtected</name>	<init pos:line="1046" pos:column="49">= <expr><lit:literal type="number" pos:line="1046" pos:column="51">3</lit:literal></expr></init></decl><op:operator pos:line="1046" pos:column="52">,</op:operator>
	<decl><name pos:line="1047" pos:column="9">VxStandardGlyphItemGlyphItemPrivate</name>	<init pos:line="1047" pos:column="49">= <expr><lit:literal type="number" pos:line="1047" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="1047" pos:column="52">,</op:operator>
	<decl><name pos:line="1048" pos:column="9">VxStandardGlyphItemGlyphItemShortcut</name>	<init pos:line="1048" pos:column="49">= <expr><lit:literal type="number" pos:line="1048" pos:column="51">5</lit:literal></expr></init></decl><op:operator pos:line="1048" pos:column="52">,</op:operator>
	<decl><name pos:line="1049" pos:column="9">VxStandardGlyphItemTotalGlyphItems</name>	<init pos:line="1049" pos:column="49">= <expr><lit:literal type="number" pos:line="1049" pos:column="51">6</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1050" pos:column="9">VxStandardGlyphItem</name>;</typedef>

<typedef pos:line="1052" pos:column="1">typedef 
<type><enum pos:line="1053" pos:column="1">enum <name pos:line="1053" pos:column="6">_VxUIElementType</name>
    <block pos:line="1054" pos:column="5">{	<decl><name pos:line="1054" pos:column="9">VxUIElementTypeSmall</name>	<init pos:line="1054" pos:column="33">= <expr><lit:literal type="number" pos:line="1054" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="1054" pos:column="36">,</op:operator>
	<decl><name pos:line="1055" pos:column="9">VxUIElementTypeLarge</name>	<init pos:line="1055" pos:column="33">= <expr><lit:literal type="number" pos:line="1055" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="1055" pos:column="36">,</op:operator>
	<decl><name pos:line="1056" pos:column="9">VxUIElementTypeTooltip</name>	<init pos:line="1056" pos:column="33">= <expr><lit:literal type="number" pos:line="1056" pos:column="35">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1057" pos:column="9">VxUIElementType</name>;</typedef>

<typedef pos:line="1059" pos:column="1">typedef 
<type><enum pos:line="1060" pos:column="1">enum <name pos:line="1060" pos:column="6">_VxVisitState</name>
    <block pos:line="1061" pos:column="5">{	<decl><name pos:line="1061" pos:column="9">VxVisitStateNotVisited</name>	<init pos:line="1061" pos:column="33">= <expr><lit:literal type="number" pos:line="1061" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="1061" pos:column="36">,</op:operator>
	<decl><name pos:line="1062" pos:column="9">VxVisitStateVisiting</name>	<init pos:line="1062" pos:column="33">= <expr><lit:literal type="number" pos:line="1062" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="1062" pos:column="36">,</op:operator>
	<decl><name pos:line="1063" pos:column="9">VxVisitStateVisited</name>	<init pos:line="1063" pos:column="33">= <expr><lit:literal type="number" pos:line="1063" pos:column="35">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1064" pos:column="9">VxVisitState</name>;</typedef>

<typedef pos:line="1066" pos:column="1">typedef 
<type><enum pos:line="1067" pos:column="1">enum <name pos:line="1067" pos:column="6">_VxQuickInfoState</name>
    <block pos:line="1068" pos:column="5">{	<decl><name pos:line="1068" pos:column="9">VxQuickInfoStateInitialized</name>	<init pos:line="1068" pos:column="41">= <expr><lit:literal type="number" pos:line="1068" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="1068" pos:column="44">,</op:operator>
	<decl><name pos:line="1069" pos:column="9">VxQuickInfoStateCalculating</name>	<init pos:line="1069" pos:column="41">= <expr><lit:literal type="number" pos:line="1069" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="1069" pos:column="44">,</op:operator>
	<decl><name pos:line="1070" pos:column="9">VxQuickInfoStateStarted</name>	<init pos:line="1070" pos:column="33">= <expr><lit:literal type="number" pos:line="1070" pos:column="35">4</lit:literal></expr></init></decl><op:operator pos:line="1070" pos:column="36">,</op:operator>
	<decl><name pos:line="1071" pos:column="9">VxQuickInfoStateDismissed</name>	<init pos:line="1071" pos:column="41">= <expr><lit:literal type="number" pos:line="1071" pos:column="43">8</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1072" pos:column="9">VxQuickInfoState</name>;</typedef>

<typedef pos:line="1074" pos:column="1">typedef 
<type><enum pos:line="1075" pos:column="1">enum <name pos:line="1075" pos:column="6">_VxDefaultSmartTagPresenterStates</name>
    <block pos:line="1076" pos:column="5">{	<decl><name pos:line="1076" pos:column="9">VxDefaultSmartTagPresenterStatesInvisible</name>	<init pos:line="1076" pos:column="57">= <expr><lit:literal type="number" pos:line="1076" pos:column="59">0</lit:literal></expr></init></decl><op:operator pos:line="1076" pos:column="60">,</op:operator>
	<decl><name pos:line="1077" pos:column="9">VxDefaultSmartTagPresenterStatesTickler</name>	<init pos:line="1077" pos:column="49">= <expr><lit:literal type="number" pos:line="1077" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="1077" pos:column="52">,</op:operator>
	<decl><name pos:line="1078" pos:column="9">VxDefaultSmartTagPresenterStatesBareButton</name>	<init pos:line="1078" pos:column="57">= <expr><lit:literal type="number" pos:line="1078" pos:column="59">2</lit:literal></expr></init></decl><op:operator pos:line="1078" pos:column="60">,</op:operator>
	<decl><name pos:line="1079" pos:column="9">VxDefaultSmartTagPresenterStatesGlowingButton</name>	<init pos:line="1079" pos:column="57">= <expr><lit:literal type="number" pos:line="1079" pos:column="59">3</lit:literal></expr></init></decl><op:operator pos:line="1079" pos:column="60">,</op:operator>
	<decl><name pos:line="1080" pos:column="9">VxDefaultSmartTagPresenterStatesListMenu</name>	<init pos:line="1080" pos:column="57">= <expr><lit:literal type="number" pos:line="1080" pos:column="59">4</lit:literal></expr></init></decl><op:operator pos:line="1080" pos:column="60">,</op:operator>
	<decl><name pos:line="1081" pos:column="9">VxDefaultSmartTagPresenterStatesOwnerDrawingTag</name>	<init pos:line="1081" pos:column="57">= <expr><lit:literal type="number" pos:line="1081" pos:column="59">5</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1082" pos:column="9">VxDefaultSmartTagPresenterStates</name>;</typedef>

<typedef pos:line="1084" pos:column="1">typedef 
<type><enum pos:line="1085" pos:column="1">enum <name pos:line="1085" pos:column="6">_VxInternalState</name>
    <block pos:line="1086" pos:column="5">{	<decl><name pos:line="1086" pos:column="9">VxInternalStateInitialized</name>	<init pos:line="1086" pos:column="41">= <expr><lit:literal type="number" pos:line="1086" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="1086" pos:column="44">,</op:operator>
	<decl><name pos:line="1087" pos:column="9">VxInternalStateCalculating</name>	<init pos:line="1087" pos:column="41">= <expr><lit:literal type="number" pos:line="1087" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="1087" pos:column="44">,</op:operator>
	<decl><name pos:line="1088" pos:column="9">VxInternalStateStartedAndCalculating</name>	<init pos:line="1088" pos:column="49">= <expr><lit:literal type="number" pos:line="1088" pos:column="51">4</lit:literal></expr></init></decl><op:operator pos:line="1088" pos:column="52">,</op:operator>
	<decl><name pos:line="1089" pos:column="9">VxInternalStateStarted</name>	<init pos:line="1089" pos:column="33">= <expr><lit:literal type="number" pos:line="1089" pos:column="35">8</lit:literal></expr></init></decl><op:operator pos:line="1089" pos:column="36">,</op:operator>
	<decl><name pos:line="1090" pos:column="9">VxInternalStateDismissed</name>	<init pos:line="1090" pos:column="41">= <expr><lit:literal type="number" pos:line="1090" pos:column="43">16</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1091" pos:column="9">VxInternalState</name>;</typedef>

<typedef pos:line="1093" pos:column="1">typedef 
<type><enum pos:line="1094" pos:column="1">enum <name pos:line="1094" pos:column="6">_VxDragDropState</name>
    <block pos:line="1095" pos:column="5">{	<decl><name pos:line="1095" pos:column="9">VxDragDropStateStart</name>	<init pos:line="1095" pos:column="33">= <expr><lit:literal type="number" pos:line="1095" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="1095" pos:column="36">,</op:operator>
	<decl><name pos:line="1096" pos:column="9">VxDragDropStateMouseDown</name>	<init pos:line="1096" pos:column="41">= <expr><lit:literal type="number" pos:line="1096" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="1096" pos:column="44">,</op:operator>
	<decl><name pos:line="1097" pos:column="9">VxDragDropStateDragging</name>	<init pos:line="1097" pos:column="33">= <expr><lit:literal type="number" pos:line="1097" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="1097" pos:column="36">,</op:operator>
	<decl><name pos:line="1098" pos:column="9">VxDragDropStateCanceled</name>	<init pos:line="1098" pos:column="33">= <expr><lit:literal type="number" pos:line="1098" pos:column="35">3</lit:literal></expr></init></decl><op:operator pos:line="1098" pos:column="36">,</op:operator>
	<decl><name pos:line="1099" pos:column="9">VxDragDropStateDropped</name>	<init pos:line="1099" pos:column="33">= <expr><lit:literal type="number" pos:line="1099" pos:column="35">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1100" pos:column="9">VxDragDropState</name>;</typedef>

<typedef pos:line="1102" pos:column="1">typedef 
<type><enum pos:line="1103" pos:column="1">enum <name pos:line="1103" pos:column="6">_VxCaretMovementDirection</name>
    <block pos:line="1104" pos:column="5">{	<decl><name pos:line="1104" pos:column="9">VxCaretMovementDirectionPrevious</name>	<init pos:line="1104" pos:column="49">= <expr><lit:literal type="number" pos:line="1104" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="1104" pos:column="52">,</op:operator>
	<decl><name pos:line="1105" pos:column="9">VxCaretMovementDirectionNext</name>	<init pos:line="1105" pos:column="41">= <expr><lit:literal type="number" pos:line="1105" pos:column="43">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1106" pos:column="9">VxCaretMovementDirection</name>;</typedef>

<typedef pos:line="1108" pos:column="1">typedef 
<type><enum pos:line="1109" pos:column="1">enum <name pos:line="1109" pos:column="6">_VxLetterCase</name>
    <block pos:line="1110" pos:column="5">{	<decl><name pos:line="1110" pos:column="9">VxLetterCaseUppercase</name>	<init pos:line="1110" pos:column="33">= <expr><lit:literal type="number" pos:line="1110" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="1110" pos:column="36">,</op:operator>
	<decl><name pos:line="1111" pos:column="9">VxLetterCaseLowercase</name>	<init pos:line="1111" pos:column="33">= <expr><lit:literal type="number" pos:line="1111" pos:column="35">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1112" pos:column="9">VxLetterCase</name>;</typedef>

<typedef pos:line="1114" pos:column="1">typedef 
<type><enum pos:line="1115" pos:column="1">enum <name pos:line="1115" pos:column="6">_VxSelectionUpdate</name>
    <block pos:line="1116" pos:column="5">{	<decl><name pos:line="1116" pos:column="9">VxSelectionUpdatePreserve</name>	<init pos:line="1116" pos:column="41">= <expr><lit:literal type="number" pos:line="1116" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="1116" pos:column="44">,</op:operator>
	<decl><name pos:line="1117" pos:column="9">VxSelectionUpdateReset</name>	<init pos:line="1117" pos:column="33">= <expr><lit:literal type="number" pos:line="1117" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="1117" pos:column="36">,</op:operator>
	<decl><name pos:line="1118" pos:column="9">VxSelectionUpdateResetUnlessEmptyBox</name>	<init pos:line="1118" pos:column="49">= <expr><lit:literal type="number" pos:line="1118" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="1118" pos:column="52">,</op:operator>
	<decl><name pos:line="1119" pos:column="9">VxSelectionUpdateIgnore</name>	<init pos:line="1119" pos:column="33">= <expr><lit:literal type="number" pos:line="1119" pos:column="35">3</lit:literal></expr></init></decl><op:operator pos:line="1119" pos:column="36">,</op:operator>
	<decl><name pos:line="1120" pos:column="9">VxSelectionUpdateClearVirtualSpace</name>	<init pos:line="1120" pos:column="49">= <expr><lit:literal type="number" pos:line="1120" pos:column="51">4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1121" pos:column="9">VxSelectionUpdate</name>;</typedef>

<typedef pos:line="1123" pos:column="1">typedef 
<type><enum pos:line="1124" pos:column="1">enum <name pos:line="1124" pos:column="6">_VxTextEditAction</name>
    <block pos:line="1125" pos:column="5">{	<decl><name pos:line="1125" pos:column="9">VxTextEditActionNone</name>	<init pos:line="1125" pos:column="33">= <expr><lit:literal type="number" pos:line="1125" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="1125" pos:column="36">,</op:operator>
	<decl><name pos:line="1126" pos:column="9">VxTextEditActionType</name>	<init pos:line="1126" pos:column="33">= <expr><lit:literal type="number" pos:line="1126" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="1126" pos:column="36">,</op:operator>
	<decl><name pos:line="1127" pos:column="9">VxTextEditActionDelete</name>	<init pos:line="1127" pos:column="33">= <expr><lit:literal type="number" pos:line="1127" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="1127" pos:column="36">,</op:operator>
	<decl><name pos:line="1128" pos:column="9">VxTextEditActionBackspace</name>	<init pos:line="1128" pos:column="41">= <expr><lit:literal type="number" pos:line="1128" pos:column="43">3</lit:literal></expr></init></decl><op:operator pos:line="1128" pos:column="44">,</op:operator>
	<decl><name pos:line="1129" pos:column="9">VxTextEditActionPaste</name>	<init pos:line="1129" pos:column="33">= <expr><lit:literal type="number" pos:line="1129" pos:column="35">4</lit:literal></expr></init></decl><op:operator pos:line="1129" pos:column="36">,</op:operator>
	<decl><name pos:line="1130" pos:column="9">VxTextEditActionEnter</name>	<init pos:line="1130" pos:column="33">= <expr><lit:literal type="number" pos:line="1130" pos:column="35">5</lit:literal></expr></init></decl><op:operator pos:line="1130" pos:column="36">,</op:operator>
	<decl><name pos:line="1131" pos:column="9">VxTextEditActionAutoIndent</name>	<init pos:line="1131" pos:column="41">= <expr><lit:literal type="number" pos:line="1131" pos:column="43">6</lit:literal></expr></init></decl><op:operator pos:line="1131" pos:column="44">,</op:operator>
	<decl><name pos:line="1132" pos:column="9">VxTextEditActionReplace</name>	<init pos:line="1132" pos:column="33">= <expr><lit:literal type="number" pos:line="1132" pos:column="35">7</lit:literal></expr></init></decl><op:operator pos:line="1132" pos:column="36">,</op:operator>
	<decl><name pos:line="1133" pos:column="9">VxTextEditActionProvisionalOverwrite</name>	<init pos:line="1133" pos:column="49">= <expr><lit:literal type="number" pos:line="1133" pos:column="51">8</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1134" pos:column="9">VxTextEditAction</name>;</typedef>

<typedef pos:line="1136" pos:column="1">typedef 
<type><enum pos:line="1137" pos:column="1">enum <name pos:line="1137" pos:column="6">_VxTextTransactionMergeDirections</name>
    <block pos:line="1138" pos:column="5">{	<decl><name pos:line="1138" pos:column="9">VxTextTransactionMergeDirectionsForward</name>	<init pos:line="1138" pos:column="49">= <expr><lit:literal type="number" pos:line="1138" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="1138" pos:column="52">,</op:operator>
	<decl><name pos:line="1139" pos:column="9">VxTextTransactionMergeDirectionsBackward</name>	<init pos:line="1139" pos:column="57">= <expr><lit:literal type="number" pos:line="1139" pos:column="59">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1140" pos:column="9">VxTextTransactionMergeDirections</name>;</typedef>

<typedef pos:line="1142" pos:column="1">typedef 
<type><enum pos:line="1143" pos:column="1">enum <name pos:line="1143" pos:column="6">_VxCharacterType</name>
    <block pos:line="1144" pos:column="5">{	<decl><name pos:line="1144" pos:column="9">VxCharacterTypeAlphaNumeric</name>	<init pos:line="1144" pos:column="41">= <expr><lit:literal type="number" pos:line="1144" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="1144" pos:column="44">,</op:operator>
	<decl><name pos:line="1145" pos:column="9">VxCharacterTypeWhiteSpace</name>	<init pos:line="1145" pos:column="41">= <expr><lit:literal type="number" pos:line="1145" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="1145" pos:column="44">,</op:operator>
	<decl><name pos:line="1146" pos:column="9">VxCharacterTypeSymbols</name>	<init pos:line="1146" pos:column="33">= <expr><lit:literal type="number" pos:line="1146" pos:column="35">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1147" pos:column="9">VxCharacterType</name>;</typedef>

<typedef pos:line="1149" pos:column="1">typedef 
<type><enum pos:line="1150" pos:column="1">enum <name pos:line="1150" pos:column="6">_VxSpanType</name>
    <block pos:line="1151" pos:column="5">{	<decl><name pos:line="1151" pos:column="9">VxSpanTypeEmpty</name>	<init pos:line="1151" pos:column="25">= <expr><lit:literal type="number" pos:line="1151" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="1151" pos:column="28">,</op:operator>
	<decl><name pos:line="1152" pos:column="9">VxSpanTypeMultipleCharacters</name>	<init pos:line="1152" pos:column="41">= <expr><lit:literal type="number" pos:line="1152" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="1152" pos:column="44">,</op:operator>
	<decl><name pos:line="1153" pos:column="9">VxSpanTypeWord</name>	<init pos:line="1153" pos:column="25">= <expr><lit:literal type="number" pos:line="1153" pos:column="27">2</lit:literal></expr></init></decl><op:operator pos:line="1153" pos:column="28">,</op:operator>
	<decl><name pos:line="1154" pos:column="9">VxSpanTypeMultipleWords</name>	<init pos:line="1154" pos:column="33">= <expr><lit:literal type="number" pos:line="1154" pos:column="35">3</lit:literal></expr></init></decl><op:operator pos:line="1154" pos:column="36">,</op:operator>
	<decl><name pos:line="1155" pos:column="9">VxSpanTypeSentence</name>	<init pos:line="1155" pos:column="33">= <expr><lit:literal type="number" pos:line="1155" pos:column="35">4</lit:literal></expr></init></decl><op:operator pos:line="1155" pos:column="36">,</op:operator>
	<decl><name pos:line="1156" pos:column="9">VxSpanTypeMultipleSentences</name>	<init pos:line="1156" pos:column="41">= <expr><lit:literal type="number" pos:line="1156" pos:column="43">5</lit:literal></expr></init></decl><op:operator pos:line="1156" pos:column="44">,</op:operator>
	<decl><name pos:line="1157" pos:column="9">VxSpanTypeParagraph</name>	<init pos:line="1157" pos:column="33">= <expr><lit:literal type="number" pos:line="1157" pos:column="35">6</lit:literal></expr></init></decl><op:operator pos:line="1157" pos:column="36">,</op:operator>
	<decl><name pos:line="1158" pos:column="9">VxSpanTypeMultipleParagraphs</name>	<init pos:line="1158" pos:column="41">= <expr><lit:literal type="number" pos:line="1158" pos:column="43">7</lit:literal></expr></init></decl><op:operator pos:line="1158" pos:column="44">,</op:operator>
	<decl><name pos:line="1159" pos:column="9">VxSpanTypeDocument</name>	<init pos:line="1159" pos:column="33">= <expr><lit:literal type="number" pos:line="1159" pos:column="35">8</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1160" pos:column="9">VxSpanType</name>;</typedef>

<typedef pos:line="1162" pos:column="1">typedef 
<type><enum pos:line="1163" pos:column="1">enum <name pos:line="1163" pos:column="6">_VxLineCalculationState</name>
    <block pos:line="1164" pos:column="5">{	<decl><name pos:line="1164" pos:column="9">VxLineCalculationStatePrimary</name>	<init pos:line="1164" pos:column="41">= <expr><lit:literal type="number" pos:line="1164" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="1164" pos:column="44">,</op:operator>
	<decl><name pos:line="1165" pos:column="9">VxLineCalculationStateAppend</name>	<init pos:line="1165" pos:column="41">= <expr><lit:literal type="number" pos:line="1165" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="1165" pos:column="44">,</op:operator>
	<decl><name pos:line="1166" pos:column="9">VxLineCalculationStatePrepend</name>	<init pos:line="1166" pos:column="41">= <expr><lit:literal type="number" pos:line="1166" pos:column="43">2</lit:literal></expr></init></decl><op:operator pos:line="1166" pos:column="44">,</op:operator>
	<decl><name pos:line="1167" pos:column="9">VxLineCalculationStateBipend</name>	<init pos:line="1167" pos:column="41">= <expr><lit:literal type="number" pos:line="1167" pos:column="43">3</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1168" pos:column="9">VxLineCalculationState</name>;</typedef>

<typedef pos:line="1170" pos:column="1">typedef 
<type><enum pos:line="1171" pos:column="1">enum <name pos:line="1171" pos:column="6">_VxLineBreakBoundaryConditions</name>
    <block pos:line="1172" pos:column="5">{	<decl><name pos:line="1172" pos:column="9">VxLineBreakBoundaryConditionsNone</name>	<init pos:line="1172" pos:column="49">= <expr><lit:literal type="number" pos:line="1172" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="1172" pos:column="52">,</op:operator>
	<decl><name pos:line="1173" pos:column="9">VxLineBreakBoundaryConditionsPrecedingReturn</name>	<init pos:line="1173" pos:column="57">= <expr><lit:literal type="number" pos:line="1173" pos:column="59">1</lit:literal></expr></init></decl><op:operator pos:line="1173" pos:column="60">,</op:operator>
	<decl><name pos:line="1174" pos:column="9">VxLineBreakBoundaryConditionsSucceedingNewline</name>	<init pos:line="1174" pos:column="57">= <expr><lit:literal type="number" pos:line="1174" pos:column="59">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1175" pos:column="9">VxLineBreakBoundaryConditions</name>;</typedef>

<typedef pos:line="1177" pos:column="1">typedef 
<type><enum pos:line="1178" pos:column="1">enum <name pos:line="1178" pos:column="6">_VxValidProtocolFound</name>
    <block pos:line="1179" pos:column="5">{	<decl><name pos:line="1179" pos:column="9">VxValidProtocolFoundValidProtocol</name>	<init pos:line="1179" pos:column="49">= <expr><lit:literal type="number" pos:line="1179" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="1179" pos:column="52">,</op:operator>
	<decl><name pos:line="1180" pos:column="9">VxValidProtocolFoundValidProtocolNoSlash</name>	<init pos:line="1180" pos:column="57">= <expr><lit:literal type="number" pos:line="1180" pos:column="59">1</lit:literal></expr></init></decl><op:operator pos:line="1180" pos:column="60">,</op:operator>
	<decl><name pos:line="1181" pos:column="9">VxValidProtocolFoundInvalidProtocol</name>	<init pos:line="1181" pos:column="49">= <expr><lit:literal type="number" pos:line="1181" pos:column="51">2</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="1182" pos:column="9">VxValidProtocolFound</name>;</typedef>

<typedef pos:line="1184" pos:column="1">typedef <type><struct pos:line="1184" pos:column="9">struct <name pos:line="1184" pos:column="16">_VxStringDifferenceOptions</name>
    <block pos:line="1185" pos:column="5">{<public type="default" pos:line="1185" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1186" pos:column="5">VxStringDifferenceTypes</name></type> <name pos:line="1186" pos:column="29">differenceType</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1187" pos:column="5">int</name></type> <name pos:line="1187" pos:column="9">locality</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1188" pos:column="5">BOOL</name></type> <name pos:line="1188" pos:column="10">ignoreTrimWhiteSpace</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1189" pos:column="9">VxStringDifferenceOptions</name>;</typedef>

<typedef pos:line="1191" pos:column="1">typedef <type><struct pos:line="1191" pos:column="9">struct <name pos:line="1191" pos:column="16">_VxEditOptions</name>
    <block pos:line="1192" pos:column="5">{<public type="default" pos:line="1192" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1193" pos:column="5">BOOL</name></type> <name pos:line="1193" pos:column="10">computeMinimalChange</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1194" pos:column="5">VxStringDifferenceOptions</name></type> <name pos:line="1194" pos:column="31">differenceOptions</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1195" pos:column="9">VxEditOptions</name>;</typedef>

<typedef pos:line="1197" pos:column="1">typedef <type><struct pos:line="1197" pos:column="9">struct <name pos:line="1197" pos:column="16">_VxSnapshotPoint</name>
    <block pos:line="1198" pos:column="5">{<public type="default" pos:line="1198" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1199" pos:column="5">IVxTextSnapshot</name> <type:modifier pos:line="1199" pos:column="21">*</type:modifier></type><name pos:line="1199" pos:column="22">snapshot</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1200" pos:column="5">int</name></type> <name pos:line="1200" pos:column="9">position</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1201" pos:column="9">VxSnapshotPoint</name>;</typedef>

<typedef pos:line="1203" pos:column="1">typedef <type><struct pos:line="1203" pos:column="9">struct <name pos:line="1203" pos:column="16">_VxSnapshotSpan</name>
    <block pos:line="1204" pos:column="5">{<public type="default" pos:line="1204" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1205" pos:column="5">VxSnapshotPoint</name></type> <name pos:line="1205" pos:column="21">start</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1206" pos:column="5">int</name></type> <name pos:line="1206" pos:column="9">length</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1207" pos:column="9">VxSnapshotSpan</name>;</typedef>

<typedef pos:line="1209" pos:column="1">typedef <type><struct pos:line="1209" pos:column="9">struct <name pos:line="1209" pos:column="16">_VxSpan</name>
    <block pos:line="1210" pos:column="5">{<public type="default" pos:line="1210" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1211" pos:column="5">int</name></type> <name pos:line="1211" pos:column="9">start</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1212" pos:column="5">int</name></type> <name pos:line="1212" pos:column="9">length</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1213" pos:column="9">VxSpan</name>;</typedef>

<typedef pos:line="1215" pos:column="1">typedef <type><struct pos:line="1215" pos:column="9">struct <name pos:line="1215" pos:column="16">_VxFindData</name>
    <block pos:line="1216" pos:column="5">{<public type="default" pos:line="1216" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1217" pos:column="5">BSTR</name></type> <name pos:line="1217" pos:column="10">_searchString</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1218" pos:column="5">IVxTextSnapshot</name> <type:modifier pos:line="1218" pos:column="21">*</type:modifier></type><name pos:line="1218" pos:column="22">_textSnapshotToSearch</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1219" pos:column="5">VxFindOptions</name></type> <name pos:line="1219" pos:column="19">_findOptions</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1220" pos:column="5">IVxTextStructureNavigator</name> <type:modifier pos:line="1220" pos:column="31">*</type:modifier></type><name pos:line="1220" pos:column="32">_textStructureNavigator</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1221" pos:column="9">VxFindData</name>;</typedef>

<typedef pos:line="1223" pos:column="1">typedef <type><struct pos:line="1223" pos:column="9">struct <name pos:line="1223" pos:column="16">_VxTextExtent</name>
    <block pos:line="1224" pos:column="5">{<public type="default" pos:line="1224" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1225" pos:column="5">VxSnapshotSpan</name></type> <name pos:line="1225" pos:column="20">_span</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1226" pos:column="5">BOOL</name></type> <name pos:line="1226" pos:column="10">_isSignificant</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1227" pos:column="9">VxTextExtent</name>;</typedef>


<decl_stmt><decl><type><name pos:line="1230" pos:column="1">EXTERN_C</name> <specifier pos:line="1230" pos:column="10">const</specifier> <name pos:line="1230" pos:column="16">IID</name></type> <name pos:line="1230" pos:column="20">LIBID_VSEditorLibrary</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="1232" pos:column="1">#<cpp:directive pos:line="1232" pos:column="2">ifndef</cpp:directive> <name pos:line="1232" pos:column="9">__IEnumeratorBSTR_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1233" pos:column="1">#<cpp:directive pos:line="1233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1233" pos:column="9">__IEnumeratorBSTR_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1235" pos:column="1">/* interface IEnumeratorBSTR */</comment>
<comment type="block" pos:line="1236" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1239" pos:column="1">EXTERN_C</name> <specifier pos:line="1239" pos:column="10">const</specifier> <name pos:line="1239" pos:column="16">IID</name></type> <name pos:line="1239" pos:column="20">IID_IEnumeratorBSTR</name></decl>;</decl_stmt>

<cpp:if pos:line="1241" pos:column="1">#<cpp:directive pos:line="1241" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1241" pos:column="5">defined</name><argument_list pos:line="1241" pos:column="12">(<argument><expr><name pos:line="1241" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1241" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1241" pos:column="29">!</op:operator><call><name pos:line="1241" pos:column="30">defined</name><argument_list pos:line="1241" pos:column="37">(<argument><expr><name pos:line="1241" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1243" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1243" pos:column="19">(<argument pos:line="1243" pos:column="20">"18a2071c-67fb-4543-bd62-d11e68a6785b"</argument>)</argument_list></macro>
    <label><name pos:line="1244" pos:column="5">IEnumeratorBSTR</name> :</label> <expr_stmt><expr pos:line="1244" pos:column="23">public <name pos:line="1244" pos:column="30">IUnknown</name>
    <block pos:line="1245" pos:column="5">{
    <expr pos:line="1246" pos:column="5">public<op:operator pos:line="1246" pos:column="11">:</op:operator>
        virtual <name pos:line="1247" pos:column="17">HRESULT</name> <name pos:line="1247" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1247" pos:column="43">GetCurrent</name><argument_list pos:line="1247" pos:column="53">( 
            <comment type="block" pos:line="1248" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1248" pos:column="33">BSTR</name> <op:operator pos:line="1248" pos:column="38">*</op:operator><name pos:line="1248" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="1248" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="1248" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="1250" pos:column="9">virtual <name pos:line="1250" pos:column="17">HRESULT</name> <name pos:line="1250" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1250" pos:column="43">MoveNext</name><argument_list pos:line="1250" pos:column="51">( 
            <comment type="block" pos:line="1251" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1251" pos:column="33">BOOL</name> <op:operator pos:line="1251" pos:column="38">*</op:operator><name pos:line="1251" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="1251" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="1251" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="1253" pos:column="9">virtual <name pos:line="1253" pos:column="17">HRESULT</name> <name pos:line="1253" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1253" pos:column="43">Reset</name><argument_list pos:line="1253" pos:column="48">( <argument><expr><name pos:line="1253" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1253" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1253" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1257" pos:column="1">#<cpp:directive pos:line="1257" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1257" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1259" pos:column="5">typedef <type><struct pos:line="1259" pos:column="13">struct <name pos:line="1259" pos:column="20">IEnumeratorBSTRVtbl</name>
    <block pos:line="1260" pos:column="5">{<public type="default" pos:line="1260" pos:column="6">
        <function_decl><type><name pos:line="1261" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1263" pos:column="9">HRESULT</name></type> ( <name pos:line="1263" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1263" pos:column="37">*</type:modifier><name pos:line="1263" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1263" pos:column="54">( 
            <param><decl><type><name pos:line="1264" pos:column="13">IEnumeratorBSTR</name> <type:modifier pos:line="1264" pos:column="29">*</type:modifier></type> <name pos:line="1264" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1265" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1265" pos:column="24">REFIID</name></type> <name pos:line="1265" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1266" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1267" pos:column="13">__RPC__deref_out</name>  <name pos:line="1267" pos:column="31">void</name> <type:modifier pos:line="1267" pos:column="36">*</type:modifier><type:modifier pos:line="1267" pos:column="37">*</type:modifier></type><name pos:line="1267" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1269" pos:column="9">ULONG</name></type> ( <name pos:line="1269" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1269" pos:column="35">*</type:modifier><name pos:line="1269" pos:column="36">AddRef</name> )<parameter_list pos:line="1269" pos:column="44">( 
            <param><decl><type><name pos:line="1270" pos:column="13">IEnumeratorBSTR</name> <type:modifier pos:line="1270" pos:column="29">*</type:modifier></type> <name pos:line="1270" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1272" pos:column="9">ULONG</name></type> ( <name pos:line="1272" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1272" pos:column="35">*</type:modifier><name pos:line="1272" pos:column="36">Release</name> )<parameter_list pos:line="1272" pos:column="45">( 
            <param><decl><type><name pos:line="1273" pos:column="13">IEnumeratorBSTR</name> <type:modifier pos:line="1273" pos:column="29">*</type:modifier></type> <name pos:line="1273" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1275" pos:column="9">HRESULT</name></type> ( <name pos:line="1275" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1275" pos:column="37">*</type:modifier><name pos:line="1275" pos:column="38">GetCurrent</name> )<parameter_list pos:line="1275" pos:column="50">( 
            <param><decl><type><name pos:line="1276" pos:column="13">IEnumeratorBSTR</name> <type:modifier pos:line="1276" pos:column="29">*</type:modifier></type> <name pos:line="1276" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1277" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1277" pos:column="33">BSTR</name> <type:modifier pos:line="1277" pos:column="38">*</type:modifier></type><name pos:line="1277" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1279" pos:column="9">HRESULT</name></type> ( <name pos:line="1279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1279" pos:column="37">*</type:modifier><name pos:line="1279" pos:column="38">MoveNext</name> )<parameter_list pos:line="1279" pos:column="48">( 
            <param><decl><type><name pos:line="1280" pos:column="13">IEnumeratorBSTR</name> <type:modifier pos:line="1280" pos:column="29">*</type:modifier></type> <name pos:line="1280" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1281" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1281" pos:column="33">BOOL</name> <type:modifier pos:line="1281" pos:column="38">*</type:modifier></type><name pos:line="1281" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1283" pos:column="9">HRESULT</name></type> ( <name pos:line="1283" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1283" pos:column="37">*</type:modifier><name pos:line="1283" pos:column="38">Reset</name> )<parameter_list pos:line="1283" pos:column="45">( 
            <param><decl><type><name pos:line="1284" pos:column="13">IEnumeratorBSTR</name> <type:modifier pos:line="1284" pos:column="29">*</type:modifier></type> <name pos:line="1284" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1286" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1287" pos:column="7">IEnumeratorBSTRVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1289" pos:column="5">interface</name></type> <name pos:line="1289" pos:column="15">IEnumeratorBSTR</name>
    <argument_list pos:line="1290" pos:column="5">{
        <argument><expr><name pos:line="1291" pos:column="9">CONST_VTBL</name> struct <name pos:line="1291" pos:column="27">IEnumeratorBSTRVtbl</name> <op:operator pos:line="1291" pos:column="47">*</op:operator><name pos:line="1291" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1296" pos:column="1">#<cpp:directive pos:line="1296" pos:column="2">ifdef</cpp:directive> <name pos:line="1296" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1299" pos:column="1">#<cpp:directive pos:line="1299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1299" pos:column="9">IEnumeratorBSTR_QueryInterface</name><parameter_list pos:line="1299" pos:column="39">(<param><type><name pos:line="1299" pos:column="40">This</name></type></param>,<param><type><name pos:line="1299" pos:column="45">riid</name></type></param>,<param><type><name pos:line="1299" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1300" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1302" pos:column="1">#<cpp:directive pos:line="1302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1302" pos:column="9">IEnumeratorBSTR_AddRef</name><parameter_list pos:line="1302" pos:column="31">(<param><type><name pos:line="1302" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1303" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1305" pos:column="1">#<cpp:directive pos:line="1305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1305" pos:column="9">IEnumeratorBSTR_Release</name><parameter_list pos:line="1305" pos:column="32">(<param><type><name pos:line="1305" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1306" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1309" pos:column="1">#<cpp:directive pos:line="1309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1309" pos:column="9">IEnumeratorBSTR_GetCurrent</name><parameter_list pos:line="1309" pos:column="35">(<param><type><name pos:line="1309" pos:column="36">This</name></type></param>,<param><type><name pos:line="1309" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1310" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="1312" pos:column="1">#<cpp:directive pos:line="1312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1312" pos:column="9">IEnumeratorBSTR_MoveNext</name><parameter_list pos:line="1312" pos:column="33">(<param><type><name pos:line="1312" pos:column="34">This</name></type></param>,<param><type><name pos:line="1312" pos:column="39">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1313" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="1315" pos:column="1">#<cpp:directive pos:line="1315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1315" pos:column="9">IEnumeratorBSTR_Reset</name><parameter_list pos:line="1315" pos:column="30">(<param><type><name pos:line="1315" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1316" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1318" pos:column="1">#<cpp:directive pos:line="1318" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1318" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1321" pos:column="1">#<cpp:directive pos:line="1321" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1321" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1326" pos:column="1">#<cpp:directive pos:line="1326" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1326" pos:column="9">/* __IEnumeratorBSTR_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1329" pos:column="1">#<cpp:directive pos:line="1329" pos:column="2">ifndef</cpp:directive> <name pos:line="1329" pos:column="9">__IEnumerableBSTR_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1330" pos:column="1">#<cpp:directive pos:line="1330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1330" pos:column="9">__IEnumerableBSTR_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1332" pos:column="1">/* interface IEnumerableBSTR */</comment>
<comment type="block" pos:line="1333" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1336" pos:column="1">EXTERN_C</name> <specifier pos:line="1336" pos:column="10">const</specifier> <name pos:line="1336" pos:column="16">IID</name></type> <name pos:line="1336" pos:column="20">IID_IEnumerableBSTR</name></decl>;</decl_stmt>

<cpp:if pos:line="1338" pos:column="1">#<cpp:directive pos:line="1338" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1338" pos:column="5">defined</name><argument_list pos:line="1338" pos:column="12">(<argument><expr><name pos:line="1338" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1338" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1338" pos:column="29">!</op:operator><call><name pos:line="1338" pos:column="30">defined</name><argument_list pos:line="1338" pos:column="37">(<argument><expr><name pos:line="1338" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1340" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1340" pos:column="19">(<argument pos:line="1340" pos:column="20">"b887db4f-490c-415e-9ff4-f4657b757772"</argument>)</argument_list></macro>
    <label><name pos:line="1341" pos:column="5">IEnumerableBSTR</name> :</label> <expr_stmt><expr pos:line="1341" pos:column="23">public <name pos:line="1341" pos:column="30">IUnknown</name>
    <block pos:line="1342" pos:column="5">{
    <expr pos:line="1343" pos:column="5">public<op:operator pos:line="1343" pos:column="11">:</op:operator>
        virtual <name pos:line="1344" pos:column="17">HRESULT</name> <name pos:line="1344" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1344" pos:column="43">GetEnumerator</name><argument_list pos:line="1344" pos:column="56">( 
            <comment type="block" pos:line="1345" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1345" pos:column="33">IEnumeratorBSTR</name> <op:operator pos:line="1345" pos:column="49">*</op:operator><op:operator pos:line="1345" pos:column="50">*</op:operator><name pos:line="1345" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="1345" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1345" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1349" pos:column="1">#<cpp:directive pos:line="1349" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1349" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1351" pos:column="5">typedef <type><struct pos:line="1351" pos:column="13">struct <name pos:line="1351" pos:column="20">IEnumerableBSTRVtbl</name>
    <block pos:line="1352" pos:column="5">{<public type="default" pos:line="1352" pos:column="6">
        <function_decl><type><name pos:line="1353" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1355" pos:column="9">HRESULT</name></type> ( <name pos:line="1355" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1355" pos:column="37">*</type:modifier><name pos:line="1355" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1355" pos:column="54">( 
            <param><decl><type><name pos:line="1356" pos:column="13">IEnumerableBSTR</name> <type:modifier pos:line="1356" pos:column="29">*</type:modifier></type> <name pos:line="1356" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1357" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1357" pos:column="24">REFIID</name></type> <name pos:line="1357" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1358" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1359" pos:column="13">__RPC__deref_out</name>  <name pos:line="1359" pos:column="31">void</name> <type:modifier pos:line="1359" pos:column="36">*</type:modifier><type:modifier pos:line="1359" pos:column="37">*</type:modifier></type><name pos:line="1359" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1361" pos:column="9">ULONG</name></type> ( <name pos:line="1361" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1361" pos:column="35">*</type:modifier><name pos:line="1361" pos:column="36">AddRef</name> )<parameter_list pos:line="1361" pos:column="44">( 
            <param><decl><type><name pos:line="1362" pos:column="13">IEnumerableBSTR</name> <type:modifier pos:line="1362" pos:column="29">*</type:modifier></type> <name pos:line="1362" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1364" pos:column="9">ULONG</name></type> ( <name pos:line="1364" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1364" pos:column="35">*</type:modifier><name pos:line="1364" pos:column="36">Release</name> )<parameter_list pos:line="1364" pos:column="45">( 
            <param><decl><type><name pos:line="1365" pos:column="13">IEnumerableBSTR</name> <type:modifier pos:line="1365" pos:column="29">*</type:modifier></type> <name pos:line="1365" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1367" pos:column="9">HRESULT</name></type> ( <name pos:line="1367" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1367" pos:column="37">*</type:modifier><name pos:line="1367" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="1367" pos:column="53">( 
            <param><decl><type><name pos:line="1368" pos:column="13">IEnumerableBSTR</name> <type:modifier pos:line="1368" pos:column="29">*</type:modifier></type> <name pos:line="1368" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1369" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1369" pos:column="33">IEnumeratorBSTR</name> <type:modifier pos:line="1369" pos:column="49">*</type:modifier><type:modifier pos:line="1369" pos:column="50">*</type:modifier></type><name pos:line="1369" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1371" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1372" pos:column="7">IEnumerableBSTRVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1374" pos:column="5">interface</name></type> <name pos:line="1374" pos:column="15">IEnumerableBSTR</name>
    <argument_list pos:line="1375" pos:column="5">{
        <argument><expr><name pos:line="1376" pos:column="9">CONST_VTBL</name> struct <name pos:line="1376" pos:column="27">IEnumerableBSTRVtbl</name> <op:operator pos:line="1376" pos:column="47">*</op:operator><name pos:line="1376" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1381" pos:column="1">#<cpp:directive pos:line="1381" pos:column="2">ifdef</cpp:directive> <name pos:line="1381" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1384" pos:column="1">#<cpp:directive pos:line="1384" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1384" pos:column="9">IEnumerableBSTR_QueryInterface</name><parameter_list pos:line="1384" pos:column="39">(<param><type><name pos:line="1384" pos:column="40">This</name></type></param>,<param><type><name pos:line="1384" pos:column="45">riid</name></type></param>,<param><type><name pos:line="1384" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1385" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1387" pos:column="1">#<cpp:directive pos:line="1387" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1387" pos:column="9">IEnumerableBSTR_AddRef</name><parameter_list pos:line="1387" pos:column="31">(<param><type><name pos:line="1387" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1388" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1390" pos:column="1">#<cpp:directive pos:line="1390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1390" pos:column="9">IEnumerableBSTR_Release</name><parameter_list pos:line="1390" pos:column="32">(<param><type><name pos:line="1390" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1391" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1394" pos:column="1">#<cpp:directive pos:line="1394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1394" pos:column="9">IEnumerableBSTR_GetEnumerator</name><parameter_list pos:line="1394" pos:column="38">(<param><type><name pos:line="1394" pos:column="39">This</name></type></param>,<param><type><name pos:line="1394" pos:column="44">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1395" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1397" pos:column="1">#<cpp:directive pos:line="1397" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1397" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1400" pos:column="1">#<cpp:directive pos:line="1400" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1400" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1405" pos:column="1">#<cpp:directive pos:line="1405" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1405" pos:column="9">/* __IEnumerableBSTR_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1408" pos:column="1">#<cpp:directive pos:line="1408" pos:column="2">ifndef</cpp:directive> <name pos:line="1408" pos:column="9">__IEnumeratorIVxContentType_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1409" pos:column="1">#<cpp:directive pos:line="1409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1409" pos:column="9">__IEnumeratorIVxContentType_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1411" pos:column="1">/* interface IEnumeratorIVxContentType */</comment>
<comment type="block" pos:line="1412" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1415" pos:column="1">EXTERN_C</name> <specifier pos:line="1415" pos:column="10">const</specifier> <name pos:line="1415" pos:column="16">IID</name></type> <name pos:line="1415" pos:column="20">IID_IEnumeratorIVxContentType</name></decl>;</decl_stmt>

<cpp:if pos:line="1417" pos:column="1">#<cpp:directive pos:line="1417" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1417" pos:column="5">defined</name><argument_list pos:line="1417" pos:column="12">(<argument><expr><name pos:line="1417" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1417" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1417" pos:column="29">!</op:operator><call><name pos:line="1417" pos:column="30">defined</name><argument_list pos:line="1417" pos:column="37">(<argument><expr><name pos:line="1417" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1419" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1419" pos:column="19">(<argument pos:line="1419" pos:column="20">"d92cce42-6e23-4ce3-a633-8b76ac0826f2"</argument>)</argument_list></macro>
    <label><name pos:line="1420" pos:column="5">IEnumeratorIVxContentType</name> :</label> <expr_stmt><expr pos:line="1420" pos:column="33">public <name pos:line="1420" pos:column="40">IUnknown</name>
    <block pos:line="1421" pos:column="5">{
    <expr pos:line="1422" pos:column="5">public<op:operator pos:line="1422" pos:column="11">:</op:operator>
        virtual <name pos:line="1423" pos:column="17">HRESULT</name> <name pos:line="1423" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1423" pos:column="43">GetCurrent</name><argument_list pos:line="1423" pos:column="53">( 
            <comment type="block" pos:line="1424" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1424" pos:column="33">IVxContentType</name> <op:operator pos:line="1424" pos:column="48">*</op:operator><op:operator pos:line="1424" pos:column="49">*</op:operator><name pos:line="1424" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="1424" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="1424" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="1426" pos:column="9">virtual <name pos:line="1426" pos:column="17">HRESULT</name> <name pos:line="1426" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1426" pos:column="43">MoveNext</name><argument_list pos:line="1426" pos:column="51">( 
            <comment type="block" pos:line="1427" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1427" pos:column="33">BOOL</name> <op:operator pos:line="1427" pos:column="38">*</op:operator><name pos:line="1427" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="1427" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="1427" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="1429" pos:column="9">virtual <name pos:line="1429" pos:column="17">HRESULT</name> <name pos:line="1429" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1429" pos:column="43">Reset</name><argument_list pos:line="1429" pos:column="48">( <argument><expr><name pos:line="1429" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1429" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1429" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1433" pos:column="1">#<cpp:directive pos:line="1433" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1433" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1435" pos:column="5">typedef <type><struct pos:line="1435" pos:column="13">struct <name pos:line="1435" pos:column="20">IEnumeratorIVxContentTypeVtbl</name>
    <block pos:line="1436" pos:column="5">{<public type="default" pos:line="1436" pos:column="6">
        <function_decl><type><name pos:line="1437" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1439" pos:column="9">HRESULT</name></type> ( <name pos:line="1439" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1439" pos:column="37">*</type:modifier><name pos:line="1439" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1439" pos:column="54">( 
            <param><decl><type><name pos:line="1440" pos:column="13">IEnumeratorIVxContentType</name> <type:modifier pos:line="1440" pos:column="39">*</type:modifier></type> <name pos:line="1440" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="1441" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1441" pos:column="24">REFIID</name></type> <name pos:line="1441" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1442" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1443" pos:column="13">__RPC__deref_out</name>  <name pos:line="1443" pos:column="31">void</name> <type:modifier pos:line="1443" pos:column="36">*</type:modifier><type:modifier pos:line="1443" pos:column="37">*</type:modifier></type><name pos:line="1443" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1445" pos:column="9">ULONG</name></type> ( <name pos:line="1445" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1445" pos:column="35">*</type:modifier><name pos:line="1445" pos:column="36">AddRef</name> )<parameter_list pos:line="1445" pos:column="44">( 
            <param><decl><type><name pos:line="1446" pos:column="13">IEnumeratorIVxContentType</name> <type:modifier pos:line="1446" pos:column="39">*</type:modifier></type> <name pos:line="1446" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1448" pos:column="9">ULONG</name></type> ( <name pos:line="1448" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1448" pos:column="35">*</type:modifier><name pos:line="1448" pos:column="36">Release</name> )<parameter_list pos:line="1448" pos:column="45">( 
            <param><decl><type><name pos:line="1449" pos:column="13">IEnumeratorIVxContentType</name> <type:modifier pos:line="1449" pos:column="39">*</type:modifier></type> <name pos:line="1449" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1451" pos:column="9">HRESULT</name></type> ( <name pos:line="1451" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1451" pos:column="37">*</type:modifier><name pos:line="1451" pos:column="38">GetCurrent</name> )<parameter_list pos:line="1451" pos:column="50">( 
            <param><decl><type><name pos:line="1452" pos:column="13">IEnumeratorIVxContentType</name> <type:modifier pos:line="1452" pos:column="39">*</type:modifier></type> <name pos:line="1452" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="1453" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1453" pos:column="33">IVxContentType</name> <type:modifier pos:line="1453" pos:column="48">*</type:modifier><type:modifier pos:line="1453" pos:column="49">*</type:modifier></type><name pos:line="1453" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1455" pos:column="9">HRESULT</name></type> ( <name pos:line="1455" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1455" pos:column="37">*</type:modifier><name pos:line="1455" pos:column="38">MoveNext</name> )<parameter_list pos:line="1455" pos:column="48">( 
            <param><decl><type><name pos:line="1456" pos:column="13">IEnumeratorIVxContentType</name> <type:modifier pos:line="1456" pos:column="39">*</type:modifier></type> <name pos:line="1456" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="1457" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1457" pos:column="33">BOOL</name> <type:modifier pos:line="1457" pos:column="38">*</type:modifier></type><name pos:line="1457" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1459" pos:column="9">HRESULT</name></type> ( <name pos:line="1459" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1459" pos:column="37">*</type:modifier><name pos:line="1459" pos:column="38">Reset</name> )<parameter_list pos:line="1459" pos:column="45">( 
            <param><decl><type><name pos:line="1460" pos:column="13">IEnumeratorIVxContentType</name> <type:modifier pos:line="1460" pos:column="39">*</type:modifier></type> <name pos:line="1460" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1462" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1463" pos:column="7">IEnumeratorIVxContentTypeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1465" pos:column="5">interface</name></type> <name pos:line="1465" pos:column="15">IEnumeratorIVxContentType</name>
    <argument_list pos:line="1466" pos:column="5">{
        <argument><expr><name pos:line="1467" pos:column="9">CONST_VTBL</name> struct <name pos:line="1467" pos:column="27">IEnumeratorIVxContentTypeVtbl</name> <op:operator pos:line="1467" pos:column="57">*</op:operator><name pos:line="1467" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1472" pos:column="1">#<cpp:directive pos:line="1472" pos:column="2">ifdef</cpp:directive> <name pos:line="1472" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1475" pos:column="1">#<cpp:directive pos:line="1475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1475" pos:column="9">IEnumeratorIVxContentType_QueryInterface</name><parameter_list pos:line="1475" pos:column="49">(<param><type><name pos:line="1475" pos:column="50">This</name></type></param>,<param><type><name pos:line="1475" pos:column="55">riid</name></type></param>,<param><type><name pos:line="1475" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1476" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1478" pos:column="1">#<cpp:directive pos:line="1478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1478" pos:column="9">IEnumeratorIVxContentType_AddRef</name><parameter_list pos:line="1478" pos:column="41">(<param><type><name pos:line="1478" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1479" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1481" pos:column="1">#<cpp:directive pos:line="1481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1481" pos:column="9">IEnumeratorIVxContentType_Release</name><parameter_list pos:line="1481" pos:column="42">(<param><type><name pos:line="1481" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1482" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1485" pos:column="1">#<cpp:directive pos:line="1485" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1485" pos:column="9">IEnumeratorIVxContentType_GetCurrent</name><parameter_list pos:line="1485" pos:column="45">(<param><type><name pos:line="1485" pos:column="46">This</name></type></param>,<param><type><name pos:line="1485" pos:column="51">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1486" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="1488" pos:column="1">#<cpp:directive pos:line="1488" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1488" pos:column="9">IEnumeratorIVxContentType_MoveNext</name><parameter_list pos:line="1488" pos:column="43">(<param><type><name pos:line="1488" pos:column="44">This</name></type></param>,<param><type><name pos:line="1488" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1489" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="1491" pos:column="1">#<cpp:directive pos:line="1491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1491" pos:column="9">IEnumeratorIVxContentType_Reset</name><parameter_list pos:line="1491" pos:column="40">(<param><type><name pos:line="1491" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1492" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1494" pos:column="1">#<cpp:directive pos:line="1494" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1494" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1497" pos:column="1">#<cpp:directive pos:line="1497" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1497" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1502" pos:column="1">#<cpp:directive pos:line="1502" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1502" pos:column="9">/* __IEnumeratorIVxContentType_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1505" pos:column="1">#<cpp:directive pos:line="1505" pos:column="2">ifndef</cpp:directive> <name pos:line="1505" pos:column="9">__IEnumerableIVxContentType_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1506" pos:column="1">#<cpp:directive pos:line="1506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1506" pos:column="9">__IEnumerableIVxContentType_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1508" pos:column="1">/* interface IEnumerableIVxContentType */</comment>
<comment type="block" pos:line="1509" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1512" pos:column="1">EXTERN_C</name> <specifier pos:line="1512" pos:column="10">const</specifier> <name pos:line="1512" pos:column="16">IID</name></type> <name pos:line="1512" pos:column="20">IID_IEnumerableIVxContentType</name></decl>;</decl_stmt>

<cpp:if pos:line="1514" pos:column="1">#<cpp:directive pos:line="1514" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1514" pos:column="5">defined</name><argument_list pos:line="1514" pos:column="12">(<argument><expr><name pos:line="1514" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1514" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1514" pos:column="29">!</op:operator><call><name pos:line="1514" pos:column="30">defined</name><argument_list pos:line="1514" pos:column="37">(<argument><expr><name pos:line="1514" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1516" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1516" pos:column="19">(<argument pos:line="1516" pos:column="20">"acc50312-81c5-4da1-92b0-3f37acfa1106"</argument>)</argument_list></macro>
    <label><name pos:line="1517" pos:column="5">IEnumerableIVxContentType</name> :</label> <expr_stmt><expr pos:line="1517" pos:column="33">public <name pos:line="1517" pos:column="40">IUnknown</name>
    <block pos:line="1518" pos:column="5">{
    <expr pos:line="1519" pos:column="5">public<op:operator pos:line="1519" pos:column="11">:</op:operator>
        virtual <name pos:line="1520" pos:column="17">HRESULT</name> <name pos:line="1520" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1520" pos:column="43">GetEnumerator</name><argument_list pos:line="1520" pos:column="56">( 
            <comment type="block" pos:line="1521" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1521" pos:column="33">IEnumeratorIVxContentType</name> <op:operator pos:line="1521" pos:column="59">*</op:operator><op:operator pos:line="1521" pos:column="60">*</op:operator><name pos:line="1521" pos:column="61">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="1521" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1521" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1525" pos:column="1">#<cpp:directive pos:line="1525" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1525" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1527" pos:column="5">typedef <type><struct pos:line="1527" pos:column="13">struct <name pos:line="1527" pos:column="20">IEnumerableIVxContentTypeVtbl</name>
    <block pos:line="1528" pos:column="5">{<public type="default" pos:line="1528" pos:column="6">
        <function_decl><type><name pos:line="1529" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1531" pos:column="9">HRESULT</name></type> ( <name pos:line="1531" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1531" pos:column="37">*</type:modifier><name pos:line="1531" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1531" pos:column="54">( 
            <param><decl><type><name pos:line="1532" pos:column="13">IEnumerableIVxContentType</name> <type:modifier pos:line="1532" pos:column="39">*</type:modifier></type> <name pos:line="1532" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="1533" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1533" pos:column="24">REFIID</name></type> <name pos:line="1533" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1534" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1535" pos:column="13">__RPC__deref_out</name>  <name pos:line="1535" pos:column="31">void</name> <type:modifier pos:line="1535" pos:column="36">*</type:modifier><type:modifier pos:line="1535" pos:column="37">*</type:modifier></type><name pos:line="1535" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1537" pos:column="9">ULONG</name></type> ( <name pos:line="1537" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1537" pos:column="35">*</type:modifier><name pos:line="1537" pos:column="36">AddRef</name> )<parameter_list pos:line="1537" pos:column="44">( 
            <param><decl><type><name pos:line="1538" pos:column="13">IEnumerableIVxContentType</name> <type:modifier pos:line="1538" pos:column="39">*</type:modifier></type> <name pos:line="1538" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1540" pos:column="9">ULONG</name></type> ( <name pos:line="1540" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1540" pos:column="35">*</type:modifier><name pos:line="1540" pos:column="36">Release</name> )<parameter_list pos:line="1540" pos:column="45">( 
            <param><decl><type><name pos:line="1541" pos:column="13">IEnumerableIVxContentType</name> <type:modifier pos:line="1541" pos:column="39">*</type:modifier></type> <name pos:line="1541" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1543" pos:column="9">HRESULT</name></type> ( <name pos:line="1543" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1543" pos:column="37">*</type:modifier><name pos:line="1543" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="1543" pos:column="53">( 
            <param><decl><type><name pos:line="1544" pos:column="13">IEnumerableIVxContentType</name> <type:modifier pos:line="1544" pos:column="39">*</type:modifier></type> <name pos:line="1544" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="1545" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1545" pos:column="33">IEnumeratorIVxContentType</name> <type:modifier pos:line="1545" pos:column="59">*</type:modifier><type:modifier pos:line="1545" pos:column="60">*</type:modifier></type><name pos:line="1545" pos:column="61">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1547" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1548" pos:column="7">IEnumerableIVxContentTypeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1550" pos:column="5">interface</name></type> <name pos:line="1550" pos:column="15">IEnumerableIVxContentType</name>
    <argument_list pos:line="1551" pos:column="5">{
        <argument><expr><name pos:line="1552" pos:column="9">CONST_VTBL</name> struct <name pos:line="1552" pos:column="27">IEnumerableIVxContentTypeVtbl</name> <op:operator pos:line="1552" pos:column="57">*</op:operator><name pos:line="1552" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1557" pos:column="1">#<cpp:directive pos:line="1557" pos:column="2">ifdef</cpp:directive> <name pos:line="1557" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1560" pos:column="1">#<cpp:directive pos:line="1560" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1560" pos:column="9">IEnumerableIVxContentType_QueryInterface</name><parameter_list pos:line="1560" pos:column="49">(<param><type><name pos:line="1560" pos:column="50">This</name></type></param>,<param><type><name pos:line="1560" pos:column="55">riid</name></type></param>,<param><type><name pos:line="1560" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1561" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1563" pos:column="1">#<cpp:directive pos:line="1563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1563" pos:column="9">IEnumerableIVxContentType_AddRef</name><parameter_list pos:line="1563" pos:column="41">(<param><type><name pos:line="1563" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1564" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1566" pos:column="1">#<cpp:directive pos:line="1566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1566" pos:column="9">IEnumerableIVxContentType_Release</name><parameter_list pos:line="1566" pos:column="42">(<param><type><name pos:line="1566" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1567" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1570" pos:column="1">#<cpp:directive pos:line="1570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1570" pos:column="9">IEnumerableIVxContentType_GetEnumerator</name><parameter_list pos:line="1570" pos:column="48">(<param><type><name pos:line="1570" pos:column="49">This</name></type></param>,<param><type><name pos:line="1570" pos:column="54">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1571" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1573" pos:column="1">#<cpp:directive pos:line="1573" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1573" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1576" pos:column="1">#<cpp:directive pos:line="1576" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1576" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1581" pos:column="1">#<cpp:directive pos:line="1581" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1581" pos:column="9">/* __IEnumerableIVxContentType_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1584" pos:column="1">#<cpp:directive pos:line="1584" pos:column="2">ifndef</cpp:directive> <name pos:line="1584" pos:column="9">__IVxTextDocumentFileActionEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1585" pos:column="1">#<cpp:directive pos:line="1585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1585" pos:column="9">__IVxTextDocumentFileActionEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1587" pos:column="1">/* interface IVxTextDocumentFileActionEvent */</comment>
<comment type="block" pos:line="1588" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1591" pos:column="1">EXTERN_C</name> <specifier pos:line="1591" pos:column="10">const</specifier> <name pos:line="1591" pos:column="16">IID</name></type> <name pos:line="1591" pos:column="20">IID_IVxTextDocumentFileActionEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="1593" pos:column="1">#<cpp:directive pos:line="1593" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1593" pos:column="5">defined</name><argument_list pos:line="1593" pos:column="12">(<argument><expr><name pos:line="1593" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1593" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1593" pos:column="29">!</op:operator><call><name pos:line="1593" pos:column="30">defined</name><argument_list pos:line="1593" pos:column="37">(<argument><expr><name pos:line="1593" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1595" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1595" pos:column="19">(<argument pos:line="1595" pos:column="20">"7598112a-a45e-4ec3-9b15-2536d26b1cab"</argument>)</argument_list></macro>
    <label><name pos:line="1596" pos:column="5">IVxTextDocumentFileActionEvent</name> :</label> <expr_stmt><expr pos:line="1596" pos:column="38">public <name pos:line="1596" pos:column="45">IUnknown</name>
    <block pos:line="1597" pos:column="5">{
    <expr pos:line="1598" pos:column="5">public<op:operator pos:line="1598" pos:column="11">:</op:operator>
        virtual <name pos:line="1599" pos:column="17">HRESULT</name> <name pos:line="1599" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1599" pos:column="43">OnTextDocumentFileAction</name><argument_list pos:line="1599" pos:column="67">( 
            <comment type="block" pos:line="1600" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1600" pos:column="24">IUnknown</name> <op:operator pos:line="1600" pos:column="33">*</op:operator><name pos:line="1600" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="1601" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1601" pos:column="24">IVxTextDocumentFileActionEventArgs</name> <op:operator pos:line="1601" pos:column="59">*</op:operator><name pos:line="1601" pos:column="60">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1601" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="1601" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1605" pos:column="1">#<cpp:directive pos:line="1605" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1605" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1607" pos:column="5">typedef <type><struct pos:line="1607" pos:column="13">struct <name pos:line="1607" pos:column="20">IVxTextDocumentFileActionEventVtbl</name>
    <block pos:line="1608" pos:column="5">{<public type="default" pos:line="1608" pos:column="6">
        <function_decl><type><name pos:line="1609" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1611" pos:column="9">HRESULT</name></type> ( <name pos:line="1611" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1611" pos:column="37">*</type:modifier><name pos:line="1611" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1611" pos:column="54">( 
            <param><decl><type><name pos:line="1612" pos:column="13">IVxTextDocumentFileActionEvent</name> <type:modifier pos:line="1612" pos:column="44">*</type:modifier></type> <name pos:line="1612" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="1613" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1613" pos:column="24">REFIID</name></type> <name pos:line="1613" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1614" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1615" pos:column="13">__RPC__deref_out</name>  <name pos:line="1615" pos:column="31">void</name> <type:modifier pos:line="1615" pos:column="36">*</type:modifier><type:modifier pos:line="1615" pos:column="37">*</type:modifier></type><name pos:line="1615" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1617" pos:column="9">ULONG</name></type> ( <name pos:line="1617" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1617" pos:column="35">*</type:modifier><name pos:line="1617" pos:column="36">AddRef</name> )<parameter_list pos:line="1617" pos:column="44">( 
            <param><decl><type><name pos:line="1618" pos:column="13">IVxTextDocumentFileActionEvent</name> <type:modifier pos:line="1618" pos:column="44">*</type:modifier></type> <name pos:line="1618" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1620" pos:column="9">ULONG</name></type> ( <name pos:line="1620" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1620" pos:column="35">*</type:modifier><name pos:line="1620" pos:column="36">Release</name> )<parameter_list pos:line="1620" pos:column="45">( 
            <param><decl><type><name pos:line="1621" pos:column="13">IVxTextDocumentFileActionEvent</name> <type:modifier pos:line="1621" pos:column="44">*</type:modifier></type> <name pos:line="1621" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1623" pos:column="9">HRESULT</name></type> ( <name pos:line="1623" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1623" pos:column="37">*</type:modifier><name pos:line="1623" pos:column="38">OnTextDocumentFileAction</name> )<parameter_list pos:line="1623" pos:column="64">( 
            <param><decl><type><name pos:line="1624" pos:column="13">IVxTextDocumentFileActionEvent</name> <type:modifier pos:line="1624" pos:column="44">*</type:modifier></type> <name pos:line="1624" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="1625" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1625" pos:column="24">IUnknown</name> <type:modifier pos:line="1625" pos:column="33">*</type:modifier></type><name pos:line="1625" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="1626" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1626" pos:column="24">IVxTextDocumentFileActionEventArgs</name> <type:modifier pos:line="1626" pos:column="59">*</type:modifier></type><name pos:line="1626" pos:column="60">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1628" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1629" pos:column="7">IVxTextDocumentFileActionEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1631" pos:column="5">interface</name></type> <name pos:line="1631" pos:column="15">IVxTextDocumentFileActionEvent</name>
    <argument_list pos:line="1632" pos:column="5">{
        <argument><expr><name pos:line="1633" pos:column="9">CONST_VTBL</name> struct <name pos:line="1633" pos:column="27">IVxTextDocumentFileActionEventVtbl</name> <op:operator pos:line="1633" pos:column="62">*</op:operator><name pos:line="1633" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1638" pos:column="1">#<cpp:directive pos:line="1638" pos:column="2">ifdef</cpp:directive> <name pos:line="1638" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1641" pos:column="1">#<cpp:directive pos:line="1641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1641" pos:column="9">IVxTextDocumentFileActionEvent_QueryInterface</name><parameter_list pos:line="1641" pos:column="54">(<param><type><name pos:line="1641" pos:column="55">This</name></type></param>,<param><type><name pos:line="1641" pos:column="60">riid</name></type></param>,<param><type><name pos:line="1641" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1642" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1644" pos:column="1">#<cpp:directive pos:line="1644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1644" pos:column="9">IVxTextDocumentFileActionEvent_AddRef</name><parameter_list pos:line="1644" pos:column="46">(<param><type><name pos:line="1644" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1645" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1647" pos:column="1">#<cpp:directive pos:line="1647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1647" pos:column="9">IVxTextDocumentFileActionEvent_Release</name><parameter_list pos:line="1647" pos:column="47">(<param><type><name pos:line="1647" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1648" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1651" pos:column="1">#<cpp:directive pos:line="1651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1651" pos:column="9">IVxTextDocumentFileActionEvent_OnTextDocumentFileAction</name><parameter_list pos:line="1651" pos:column="64">(<param><type><name pos:line="1651" pos:column="65">This</name></type></param>,<param><type><name pos:line="1651" pos:column="70">pSender</name></type></param>,<param><type><name pos:line="1651" pos:column="78">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1652" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnTextDocumentFileAction(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1654" pos:column="1">#<cpp:directive pos:line="1654" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1654" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1657" pos:column="1">#<cpp:directive pos:line="1657" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1657" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1662" pos:column="1">#<cpp:directive pos:line="1662" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1662" pos:column="9">/* __IVxTextDocumentFileActionEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1665" pos:column="1">#<cpp:directive pos:line="1665" pos:column="2">ifndef</cpp:directive> <name pos:line="1665" pos:column="9">__IVxEventArgsEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1666" pos:column="1">#<cpp:directive pos:line="1666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1666" pos:column="9">__IVxEventArgsEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1668" pos:column="1">/* interface IVxEventArgsEvent */</comment>
<comment type="block" pos:line="1669" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1672" pos:column="1">EXTERN_C</name> <specifier pos:line="1672" pos:column="10">const</specifier> <name pos:line="1672" pos:column="16">IID</name></type> <name pos:line="1672" pos:column="20">IID_IVxEventArgsEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="1674" pos:column="1">#<cpp:directive pos:line="1674" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1674" pos:column="5">defined</name><argument_list pos:line="1674" pos:column="12">(<argument><expr><name pos:line="1674" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1674" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1674" pos:column="29">!</op:operator><call><name pos:line="1674" pos:column="30">defined</name><argument_list pos:line="1674" pos:column="37">(<argument><expr><name pos:line="1674" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1676" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1676" pos:column="19">(<argument pos:line="1676" pos:column="20">"765b3465-12be-4cfe-8bd1-85b27f2cb081"</argument>)</argument_list></macro>
    <label><name pos:line="1677" pos:column="5">IVxEventArgsEvent</name> :</label> <expr_stmt><expr pos:line="1677" pos:column="25">public <name pos:line="1677" pos:column="32">IUnknown</name>
    <block pos:line="1678" pos:column="5">{
    <expr pos:line="1679" pos:column="5">public<op:operator pos:line="1679" pos:column="11">:</op:operator>
        virtual <name pos:line="1680" pos:column="17">HRESULT</name> <name pos:line="1680" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1680" pos:column="43">OnEventArgs</name><argument_list pos:line="1680" pos:column="54">( 
            <comment type="block" pos:line="1681" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1681" pos:column="24">IUnknown</name> <op:operator pos:line="1681" pos:column="33">*</op:operator><name pos:line="1681" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="1682" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1682" pos:column="24">IUnknown</name> <op:operator pos:line="1682" pos:column="33">*</op:operator><name pos:line="1682" pos:column="34">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1682" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="1682" pos:column="40">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1686" pos:column="1">#<cpp:directive pos:line="1686" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1686" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1688" pos:column="5">typedef <type><struct pos:line="1688" pos:column="13">struct <name pos:line="1688" pos:column="20">IVxEventArgsEventVtbl</name>
    <block pos:line="1689" pos:column="5">{<public type="default" pos:line="1689" pos:column="6">
        <function_decl><type><name pos:line="1690" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1692" pos:column="9">HRESULT</name></type> ( <name pos:line="1692" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1692" pos:column="37">*</type:modifier><name pos:line="1692" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1692" pos:column="54">( 
            <param><decl><type><name pos:line="1693" pos:column="13">IVxEventArgsEvent</name> <type:modifier pos:line="1693" pos:column="31">*</type:modifier></type> <name pos:line="1693" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1694" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1694" pos:column="24">REFIID</name></type> <name pos:line="1694" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1695" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1696" pos:column="13">__RPC__deref_out</name>  <name pos:line="1696" pos:column="31">void</name> <type:modifier pos:line="1696" pos:column="36">*</type:modifier><type:modifier pos:line="1696" pos:column="37">*</type:modifier></type><name pos:line="1696" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1698" pos:column="9">ULONG</name></type> ( <name pos:line="1698" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1698" pos:column="35">*</type:modifier><name pos:line="1698" pos:column="36">AddRef</name> )<parameter_list pos:line="1698" pos:column="44">( 
            <param><decl><type><name pos:line="1699" pos:column="13">IVxEventArgsEvent</name> <type:modifier pos:line="1699" pos:column="31">*</type:modifier></type> <name pos:line="1699" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1701" pos:column="9">ULONG</name></type> ( <name pos:line="1701" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1701" pos:column="35">*</type:modifier><name pos:line="1701" pos:column="36">Release</name> )<parameter_list pos:line="1701" pos:column="45">( 
            <param><decl><type><name pos:line="1702" pos:column="13">IVxEventArgsEvent</name> <type:modifier pos:line="1702" pos:column="31">*</type:modifier></type> <name pos:line="1702" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1704" pos:column="9">HRESULT</name></type> ( <name pos:line="1704" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1704" pos:column="37">*</type:modifier><name pos:line="1704" pos:column="38">OnEventArgs</name> )<parameter_list pos:line="1704" pos:column="51">( 
            <param><decl><type><name pos:line="1705" pos:column="13">IVxEventArgsEvent</name> <type:modifier pos:line="1705" pos:column="31">*</type:modifier></type> <name pos:line="1705" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1706" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1706" pos:column="24">IUnknown</name> <type:modifier pos:line="1706" pos:column="33">*</type:modifier></type><name pos:line="1706" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="1707" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1707" pos:column="24">IUnknown</name> <type:modifier pos:line="1707" pos:column="33">*</type:modifier></type><name pos:line="1707" pos:column="34">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1709" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1710" pos:column="7">IVxEventArgsEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1712" pos:column="5">interface</name></type> <name pos:line="1712" pos:column="15">IVxEventArgsEvent</name>
    <argument_list pos:line="1713" pos:column="5">{
        <argument><expr><name pos:line="1714" pos:column="9">CONST_VTBL</name> struct <name pos:line="1714" pos:column="27">IVxEventArgsEventVtbl</name> <op:operator pos:line="1714" pos:column="49">*</op:operator><name pos:line="1714" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1719" pos:column="1">#<cpp:directive pos:line="1719" pos:column="2">ifdef</cpp:directive> <name pos:line="1719" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1722" pos:column="1">#<cpp:directive pos:line="1722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1722" pos:column="9">IVxEventArgsEvent_QueryInterface</name><parameter_list pos:line="1722" pos:column="41">(<param><type><name pos:line="1722" pos:column="42">This</name></type></param>,<param><type><name pos:line="1722" pos:column="47">riid</name></type></param>,<param><type><name pos:line="1722" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1723" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1725" pos:column="1">#<cpp:directive pos:line="1725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1725" pos:column="9">IVxEventArgsEvent_AddRef</name><parameter_list pos:line="1725" pos:column="33">(<param><type><name pos:line="1725" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1726" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1728" pos:column="1">#<cpp:directive pos:line="1728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1728" pos:column="9">IVxEventArgsEvent_Release</name><parameter_list pos:line="1728" pos:column="34">(<param><type><name pos:line="1728" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1729" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1732" pos:column="1">#<cpp:directive pos:line="1732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1732" pos:column="9">IVxEventArgsEvent_OnEventArgs</name><parameter_list pos:line="1732" pos:column="38">(<param><type><name pos:line="1732" pos:column="39">This</name></type></param>,<param><type><name pos:line="1732" pos:column="44">pSender</name></type></param>,<param><type><name pos:line="1732" pos:column="52">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1733" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnEventArgs(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1735" pos:column="1">#<cpp:directive pos:line="1735" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1735" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1738" pos:column="1">#<cpp:directive pos:line="1738" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1738" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1743" pos:column="1">#<cpp:directive pos:line="1743" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1743" pos:column="9">/* __IVxEventArgsEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1746" pos:column="1">#<cpp:directive pos:line="1746" pos:column="2">ifndef</cpp:directive> <name pos:line="1746" pos:column="9">__IVxTextDocumentEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1747" pos:column="1">#<cpp:directive pos:line="1747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1747" pos:column="9">__IVxTextDocumentEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1749" pos:column="1">/* interface IVxTextDocumentEvent */</comment>
<comment type="block" pos:line="1750" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1753" pos:column="1">EXTERN_C</name> <specifier pos:line="1753" pos:column="10">const</specifier> <name pos:line="1753" pos:column="16">IID</name></type> <name pos:line="1753" pos:column="20">IID_IVxTextDocumentEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="1755" pos:column="1">#<cpp:directive pos:line="1755" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1755" pos:column="5">defined</name><argument_list pos:line="1755" pos:column="12">(<argument><expr><name pos:line="1755" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1755" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1755" pos:column="29">!</op:operator><call><name pos:line="1755" pos:column="30">defined</name><argument_list pos:line="1755" pos:column="37">(<argument><expr><name pos:line="1755" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1757" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1757" pos:column="19">(<argument pos:line="1757" pos:column="20">"36811be1-5281-4eca-9a64-dacb86fabf66"</argument>)</argument_list></macro>
    <label><name pos:line="1758" pos:column="5">IVxTextDocumentEvent</name> :</label> <expr_stmt><expr pos:line="1758" pos:column="28">public <name pos:line="1758" pos:column="35">IUnknown</name>
    <block pos:line="1759" pos:column="5">{
    <expr pos:line="1760" pos:column="5">public<op:operator pos:line="1760" pos:column="11">:</op:operator>
        virtual <name pos:line="1761" pos:column="17">HRESULT</name> <name pos:line="1761" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1761" pos:column="43">OnTextDocument</name><argument_list pos:line="1761" pos:column="57">( 
            <comment type="block" pos:line="1762" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1762" pos:column="24">IUnknown</name> <op:operator pos:line="1762" pos:column="33">*</op:operator><name pos:line="1762" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="1763" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1763" pos:column="24">IVxTextDocumentEventArgs</name> <op:operator pos:line="1763" pos:column="49">*</op:operator><name pos:line="1763" pos:column="50">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1763" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1763" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1767" pos:column="1">#<cpp:directive pos:line="1767" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1767" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1769" pos:column="5">typedef <type><struct pos:line="1769" pos:column="13">struct <name pos:line="1769" pos:column="20">IVxTextDocumentEventVtbl</name>
    <block pos:line="1770" pos:column="5">{<public type="default" pos:line="1770" pos:column="6">
        <function_decl><type><name pos:line="1771" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1773" pos:column="9">HRESULT</name></type> ( <name pos:line="1773" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1773" pos:column="37">*</type:modifier><name pos:line="1773" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1773" pos:column="54">( 
            <param><decl><type><name pos:line="1774" pos:column="13">IVxTextDocumentEvent</name> <type:modifier pos:line="1774" pos:column="34">*</type:modifier></type> <name pos:line="1774" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1775" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1775" pos:column="24">REFIID</name></type> <name pos:line="1775" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1776" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1777" pos:column="13">__RPC__deref_out</name>  <name pos:line="1777" pos:column="31">void</name> <type:modifier pos:line="1777" pos:column="36">*</type:modifier><type:modifier pos:line="1777" pos:column="37">*</type:modifier></type><name pos:line="1777" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1779" pos:column="9">ULONG</name></type> ( <name pos:line="1779" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1779" pos:column="35">*</type:modifier><name pos:line="1779" pos:column="36">AddRef</name> )<parameter_list pos:line="1779" pos:column="44">( 
            <param><decl><type><name pos:line="1780" pos:column="13">IVxTextDocumentEvent</name> <type:modifier pos:line="1780" pos:column="34">*</type:modifier></type> <name pos:line="1780" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1782" pos:column="9">ULONG</name></type> ( <name pos:line="1782" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1782" pos:column="35">*</type:modifier><name pos:line="1782" pos:column="36">Release</name> )<parameter_list pos:line="1782" pos:column="45">( 
            <param><decl><type><name pos:line="1783" pos:column="13">IVxTextDocumentEvent</name> <type:modifier pos:line="1783" pos:column="34">*</type:modifier></type> <name pos:line="1783" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1785" pos:column="9">HRESULT</name></type> ( <name pos:line="1785" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1785" pos:column="37">*</type:modifier><name pos:line="1785" pos:column="38">OnTextDocument</name> )<parameter_list pos:line="1785" pos:column="54">( 
            <param><decl><type><name pos:line="1786" pos:column="13">IVxTextDocumentEvent</name> <type:modifier pos:line="1786" pos:column="34">*</type:modifier></type> <name pos:line="1786" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1787" pos:column="24">IUnknown</name> <type:modifier pos:line="1787" pos:column="33">*</type:modifier></type><name pos:line="1787" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="1788" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1788" pos:column="24">IVxTextDocumentEventArgs</name> <type:modifier pos:line="1788" pos:column="49">*</type:modifier></type><name pos:line="1788" pos:column="50">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1790" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1791" pos:column="7">IVxTextDocumentEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1793" pos:column="5">interface</name></type> <name pos:line="1793" pos:column="15">IVxTextDocumentEvent</name>
    <argument_list pos:line="1794" pos:column="5">{
        <argument><expr><name pos:line="1795" pos:column="9">CONST_VTBL</name> struct <name pos:line="1795" pos:column="27">IVxTextDocumentEventVtbl</name> <op:operator pos:line="1795" pos:column="52">*</op:operator><name pos:line="1795" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1800" pos:column="1">#<cpp:directive pos:line="1800" pos:column="2">ifdef</cpp:directive> <name pos:line="1800" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1803" pos:column="1">#<cpp:directive pos:line="1803" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1803" pos:column="9">IVxTextDocumentEvent_QueryInterface</name><parameter_list pos:line="1803" pos:column="44">(<param><type><name pos:line="1803" pos:column="45">This</name></type></param>,<param><type><name pos:line="1803" pos:column="50">riid</name></type></param>,<param><type><name pos:line="1803" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1804" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1806" pos:column="1">#<cpp:directive pos:line="1806" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1806" pos:column="9">IVxTextDocumentEvent_AddRef</name><parameter_list pos:line="1806" pos:column="36">(<param><type><name pos:line="1806" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1807" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1809" pos:column="1">#<cpp:directive pos:line="1809" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1809" pos:column="9">IVxTextDocumentEvent_Release</name><parameter_list pos:line="1809" pos:column="37">(<param><type><name pos:line="1809" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1810" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1813" pos:column="1">#<cpp:directive pos:line="1813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1813" pos:column="9">IVxTextDocumentEvent_OnTextDocument</name><parameter_list pos:line="1813" pos:column="44">(<param><type><name pos:line="1813" pos:column="45">This</name></type></param>,<param><type><name pos:line="1813" pos:column="50">pSender</name></type></param>,<param><type><name pos:line="1813" pos:column="58">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1814" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnTextDocument(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1816" pos:column="1">#<cpp:directive pos:line="1816" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1816" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1819" pos:column="1">#<cpp:directive pos:line="1819" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1819" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1824" pos:column="1">#<cpp:directive pos:line="1824" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1824" pos:column="9">/* __IVxTextDocumentEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1827" pos:column="1">#<cpp:directive pos:line="1827" pos:column="2">ifndef</cpp:directive> <name pos:line="1827" pos:column="9">__IVxSnapshotSpanEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1828" pos:column="1">#<cpp:directive pos:line="1828" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1828" pos:column="9">__IVxSnapshotSpanEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1830" pos:column="1">/* interface IVxSnapshotSpanEvent */</comment>
<comment type="block" pos:line="1831" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1834" pos:column="1">EXTERN_C</name> <specifier pos:line="1834" pos:column="10">const</specifier> <name pos:line="1834" pos:column="16">IID</name></type> <name pos:line="1834" pos:column="20">IID_IVxSnapshotSpanEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="1836" pos:column="1">#<cpp:directive pos:line="1836" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1836" pos:column="5">defined</name><argument_list pos:line="1836" pos:column="12">(<argument><expr><name pos:line="1836" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1836" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1836" pos:column="29">!</op:operator><call><name pos:line="1836" pos:column="30">defined</name><argument_list pos:line="1836" pos:column="37">(<argument><expr><name pos:line="1836" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1838" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1838" pos:column="19">(<argument pos:line="1838" pos:column="20">"8b881e32-b5f3-47a1-b62d-1dd1f2ff7803"</argument>)</argument_list></macro>
    <label><name pos:line="1839" pos:column="5">IVxSnapshotSpanEvent</name> :</label> <expr_stmt><expr pos:line="1839" pos:column="28">public <name pos:line="1839" pos:column="35">IUnknown</name>
    <block pos:line="1840" pos:column="5">{
    <expr pos:line="1841" pos:column="5">public<op:operator pos:line="1841" pos:column="11">:</op:operator>
        virtual <name pos:line="1842" pos:column="17">HRESULT</name> <name pos:line="1842" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1842" pos:column="43">OnSnapshotSpan</name><argument_list pos:line="1842" pos:column="57">( 
            <comment type="block" pos:line="1843" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1843" pos:column="24">IUnknown</name> <op:operator pos:line="1843" pos:column="33">*</op:operator><name pos:line="1843" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="1844" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1844" pos:column="24">IVxSnapshotSpanEventArgs</name> <op:operator pos:line="1844" pos:column="49">*</op:operator><name pos:line="1844" pos:column="50">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1844" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1844" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1848" pos:column="1">#<cpp:directive pos:line="1848" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1848" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1850" pos:column="5">typedef <type><struct pos:line="1850" pos:column="13">struct <name pos:line="1850" pos:column="20">IVxSnapshotSpanEventVtbl</name>
    <block pos:line="1851" pos:column="5">{<public type="default" pos:line="1851" pos:column="6">
        <function_decl><type><name pos:line="1852" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1854" pos:column="9">HRESULT</name></type> ( <name pos:line="1854" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1854" pos:column="37">*</type:modifier><name pos:line="1854" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1854" pos:column="54">( 
            <param><decl><type><name pos:line="1855" pos:column="13">IVxSnapshotSpanEvent</name> <type:modifier pos:line="1855" pos:column="34">*</type:modifier></type> <name pos:line="1855" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1856" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1856" pos:column="24">REFIID</name></type> <name pos:line="1856" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1857" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1858" pos:column="13">__RPC__deref_out</name>  <name pos:line="1858" pos:column="31">void</name> <type:modifier pos:line="1858" pos:column="36">*</type:modifier><type:modifier pos:line="1858" pos:column="37">*</type:modifier></type><name pos:line="1858" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1860" pos:column="9">ULONG</name></type> ( <name pos:line="1860" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1860" pos:column="35">*</type:modifier><name pos:line="1860" pos:column="36">AddRef</name> )<parameter_list pos:line="1860" pos:column="44">( 
            <param><decl><type><name pos:line="1861" pos:column="13">IVxSnapshotSpanEvent</name> <type:modifier pos:line="1861" pos:column="34">*</type:modifier></type> <name pos:line="1861" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1863" pos:column="9">ULONG</name></type> ( <name pos:line="1863" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1863" pos:column="35">*</type:modifier><name pos:line="1863" pos:column="36">Release</name> )<parameter_list pos:line="1863" pos:column="45">( 
            <param><decl><type><name pos:line="1864" pos:column="13">IVxSnapshotSpanEvent</name> <type:modifier pos:line="1864" pos:column="34">*</type:modifier></type> <name pos:line="1864" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1866" pos:column="9">HRESULT</name></type> ( <name pos:line="1866" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1866" pos:column="37">*</type:modifier><name pos:line="1866" pos:column="38">OnSnapshotSpan</name> )<parameter_list pos:line="1866" pos:column="54">( 
            <param><decl><type><name pos:line="1867" pos:column="13">IVxSnapshotSpanEvent</name> <type:modifier pos:line="1867" pos:column="34">*</type:modifier></type> <name pos:line="1867" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1868" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1868" pos:column="24">IUnknown</name> <type:modifier pos:line="1868" pos:column="33">*</type:modifier></type><name pos:line="1868" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="1869" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1869" pos:column="24">IVxSnapshotSpanEventArgs</name> <type:modifier pos:line="1869" pos:column="49">*</type:modifier></type><name pos:line="1869" pos:column="50">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1871" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1872" pos:column="7">IVxSnapshotSpanEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1874" pos:column="5">interface</name></type> <name pos:line="1874" pos:column="15">IVxSnapshotSpanEvent</name>
    <argument_list pos:line="1875" pos:column="5">{
        <argument><expr><name pos:line="1876" pos:column="9">CONST_VTBL</name> struct <name pos:line="1876" pos:column="27">IVxSnapshotSpanEventVtbl</name> <op:operator pos:line="1876" pos:column="52">*</op:operator><name pos:line="1876" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1881" pos:column="1">#<cpp:directive pos:line="1881" pos:column="2">ifdef</cpp:directive> <name pos:line="1881" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1884" pos:column="1">#<cpp:directive pos:line="1884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1884" pos:column="9">IVxSnapshotSpanEvent_QueryInterface</name><parameter_list pos:line="1884" pos:column="44">(<param><type><name pos:line="1884" pos:column="45">This</name></type></param>,<param><type><name pos:line="1884" pos:column="50">riid</name></type></param>,<param><type><name pos:line="1884" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1885" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1887" pos:column="1">#<cpp:directive pos:line="1887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1887" pos:column="9">IVxSnapshotSpanEvent_AddRef</name><parameter_list pos:line="1887" pos:column="36">(<param><type><name pos:line="1887" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1888" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1890" pos:column="1">#<cpp:directive pos:line="1890" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1890" pos:column="9">IVxSnapshotSpanEvent_Release</name><parameter_list pos:line="1890" pos:column="37">(<param><type><name pos:line="1890" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1891" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1894" pos:column="1">#<cpp:directive pos:line="1894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1894" pos:column="9">IVxSnapshotSpanEvent_OnSnapshotSpan</name><parameter_list pos:line="1894" pos:column="44">(<param><type><name pos:line="1894" pos:column="45">This</name></type></param>,<param><type><name pos:line="1894" pos:column="50">pSender</name></type></param>,<param><type><name pos:line="1894" pos:column="58">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1895" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnSnapshotSpan(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1897" pos:column="1">#<cpp:directive pos:line="1897" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1897" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1900" pos:column="1">#<cpp:directive pos:line="1900" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1900" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1905" pos:column="1">#<cpp:directive pos:line="1905" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1905" pos:column="9">/* __IVxSnapshotSpanEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1908" pos:column="1">#<cpp:directive pos:line="1908" pos:column="2">ifndef</cpp:directive> <name pos:line="1908" pos:column="9">__IVxTextContentChangedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1909" pos:column="1">#<cpp:directive pos:line="1909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1909" pos:column="9">__IVxTextContentChangedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1911" pos:column="1">/* interface IVxTextContentChangedEvent */</comment>
<comment type="block" pos:line="1912" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1915" pos:column="1">EXTERN_C</name> <specifier pos:line="1915" pos:column="10">const</specifier> <name pos:line="1915" pos:column="16">IID</name></type> <name pos:line="1915" pos:column="20">IID_IVxTextContentChangedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="1917" pos:column="1">#<cpp:directive pos:line="1917" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1917" pos:column="5">defined</name><argument_list pos:line="1917" pos:column="12">(<argument><expr><name pos:line="1917" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1917" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1917" pos:column="29">!</op:operator><call><name pos:line="1917" pos:column="30">defined</name><argument_list pos:line="1917" pos:column="37">(<argument><expr><name pos:line="1917" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1919" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1919" pos:column="19">(<argument pos:line="1919" pos:column="20">"5be64365-ae6e-4d88-b265-b22c5e743450"</argument>)</argument_list></macro>
    <label><name pos:line="1920" pos:column="5">IVxTextContentChangedEvent</name> :</label> <expr_stmt><expr pos:line="1920" pos:column="34">public <name pos:line="1920" pos:column="41">IUnknown</name>
    <block pos:line="1921" pos:column="5">{
    <expr pos:line="1922" pos:column="5">public<op:operator pos:line="1922" pos:column="11">:</op:operator>
        virtual <name pos:line="1923" pos:column="17">HRESULT</name> <name pos:line="1923" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1923" pos:column="43">OnTextContentChanged</name><argument_list pos:line="1923" pos:column="63">( 
            <comment type="block" pos:line="1924" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1924" pos:column="24">IUnknown</name> <op:operator pos:line="1924" pos:column="33">*</op:operator><name pos:line="1924" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="1925" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1925" pos:column="24">IVxTextContentChangedEventArgs</name> <op:operator pos:line="1925" pos:column="55">*</op:operator><name pos:line="1925" pos:column="56">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1925" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="1925" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1929" pos:column="1">#<cpp:directive pos:line="1929" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1929" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1931" pos:column="5">typedef <type><struct pos:line="1931" pos:column="13">struct <name pos:line="1931" pos:column="20">IVxTextContentChangedEventVtbl</name>
    <block pos:line="1932" pos:column="5">{<public type="default" pos:line="1932" pos:column="6">
        <function_decl><type><name pos:line="1933" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1935" pos:column="9">HRESULT</name></type> ( <name pos:line="1935" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1935" pos:column="37">*</type:modifier><name pos:line="1935" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1935" pos:column="54">( 
            <param><decl><type><name pos:line="1936" pos:column="13">IVxTextContentChangedEvent</name> <type:modifier pos:line="1936" pos:column="40">*</type:modifier></type> <name pos:line="1936" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="1937" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1937" pos:column="24">REFIID</name></type> <name pos:line="1937" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1938" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1939" pos:column="13">__RPC__deref_out</name>  <name pos:line="1939" pos:column="31">void</name> <type:modifier pos:line="1939" pos:column="36">*</type:modifier><type:modifier pos:line="1939" pos:column="37">*</type:modifier></type><name pos:line="1939" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1941" pos:column="9">ULONG</name></type> ( <name pos:line="1941" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1941" pos:column="35">*</type:modifier><name pos:line="1941" pos:column="36">AddRef</name> )<parameter_list pos:line="1941" pos:column="44">( 
            <param><decl><type><name pos:line="1942" pos:column="13">IVxTextContentChangedEvent</name> <type:modifier pos:line="1942" pos:column="40">*</type:modifier></type> <name pos:line="1942" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1944" pos:column="9">ULONG</name></type> ( <name pos:line="1944" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1944" pos:column="35">*</type:modifier><name pos:line="1944" pos:column="36">Release</name> )<parameter_list pos:line="1944" pos:column="45">( 
            <param><decl><type><name pos:line="1945" pos:column="13">IVxTextContentChangedEvent</name> <type:modifier pos:line="1945" pos:column="40">*</type:modifier></type> <name pos:line="1945" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1947" pos:column="9">HRESULT</name></type> ( <name pos:line="1947" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1947" pos:column="37">*</type:modifier><name pos:line="1947" pos:column="38">OnTextContentChanged</name> )<parameter_list pos:line="1947" pos:column="60">( 
            <param><decl><type><name pos:line="1948" pos:column="13">IVxTextContentChangedEvent</name> <type:modifier pos:line="1948" pos:column="40">*</type:modifier></type> <name pos:line="1948" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="1949" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1949" pos:column="24">IUnknown</name> <type:modifier pos:line="1949" pos:column="33">*</type:modifier></type><name pos:line="1949" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="1950" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1950" pos:column="24">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="1950" pos:column="55">*</type:modifier></type><name pos:line="1950" pos:column="56">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1952" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1953" pos:column="7">IVxTextContentChangedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1955" pos:column="5">interface</name></type> <name pos:line="1955" pos:column="15">IVxTextContentChangedEvent</name>
    <argument_list pos:line="1956" pos:column="5">{
        <argument><expr><name pos:line="1957" pos:column="9">CONST_VTBL</name> struct <name pos:line="1957" pos:column="27">IVxTextContentChangedEventVtbl</name> <op:operator pos:line="1957" pos:column="58">*</op:operator><name pos:line="1957" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1962" pos:column="1">#<cpp:directive pos:line="1962" pos:column="2">ifdef</cpp:directive> <name pos:line="1962" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1965" pos:column="1">#<cpp:directive pos:line="1965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1965" pos:column="9">IVxTextContentChangedEvent_QueryInterface</name><parameter_list pos:line="1965" pos:column="50">(<param><type><name pos:line="1965" pos:column="51">This</name></type></param>,<param><type><name pos:line="1965" pos:column="56">riid</name></type></param>,<param><type><name pos:line="1965" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1966" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1968" pos:column="1">#<cpp:directive pos:line="1968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1968" pos:column="9">IVxTextContentChangedEvent_AddRef</name><parameter_list pos:line="1968" pos:column="42">(<param><type><name pos:line="1968" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1969" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1971" pos:column="1">#<cpp:directive pos:line="1971" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1971" pos:column="9">IVxTextContentChangedEvent_Release</name><parameter_list pos:line="1971" pos:column="43">(<param><type><name pos:line="1971" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1972" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1975" pos:column="1">#<cpp:directive pos:line="1975" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1975" pos:column="9">IVxTextContentChangedEvent_OnTextContentChanged</name><parameter_list pos:line="1975" pos:column="56">(<param><type><name pos:line="1975" pos:column="57">This</name></type></param>,<param><type><name pos:line="1975" pos:column="62">pSender</name></type></param>,<param><type><name pos:line="1975" pos:column="70">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1976" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnTextContentChanged(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1978" pos:column="1">#<cpp:directive pos:line="1978" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1978" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1981" pos:column="1">#<cpp:directive pos:line="1981" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1981" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1986" pos:column="1">#<cpp:directive pos:line="1986" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1986" pos:column="9">/* __IVxTextContentChangedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1989" pos:column="1">#<cpp:directive pos:line="1989" pos:column="2">ifndef</cpp:directive> <name pos:line="1989" pos:column="9">__IVxTextContentChangingEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1990" pos:column="1">#<cpp:directive pos:line="1990" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1990" pos:column="9">__IVxTextContentChangingEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1992" pos:column="1">/* interface IVxTextContentChangingEvent */</comment>
<comment type="block" pos:line="1993" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1996" pos:column="1">EXTERN_C</name> <specifier pos:line="1996" pos:column="10">const</specifier> <name pos:line="1996" pos:column="16">IID</name></type> <name pos:line="1996" pos:column="20">IID_IVxTextContentChangingEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="1998" pos:column="1">#<cpp:directive pos:line="1998" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1998" pos:column="5">defined</name><argument_list pos:line="1998" pos:column="12">(<argument><expr><name pos:line="1998" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1998" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1998" pos:column="29">!</op:operator><call><name pos:line="1998" pos:column="30">defined</name><argument_list pos:line="1998" pos:column="37">(<argument><expr><name pos:line="1998" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2000" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2000" pos:column="19">(<argument pos:line="2000" pos:column="20">"5e12035a-0f79-408d-8d48-6896ff85bf7d"</argument>)</argument_list></macro>
    <label><name pos:line="2001" pos:column="5">IVxTextContentChangingEvent</name> :</label> <expr_stmt><expr pos:line="2001" pos:column="35">public <name pos:line="2001" pos:column="42">IUnknown</name>
    <block pos:line="2002" pos:column="5">{
    <expr pos:line="2003" pos:column="5">public<op:operator pos:line="2003" pos:column="11">:</op:operator>
        virtual <name pos:line="2004" pos:column="17">HRESULT</name> <name pos:line="2004" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2004" pos:column="43">OnTextContentChanging</name><argument_list pos:line="2004" pos:column="64">( 
            <comment type="block" pos:line="2005" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2005" pos:column="24">IUnknown</name> <op:operator pos:line="2005" pos:column="33">*</op:operator><name pos:line="2005" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="2006" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2006" pos:column="24">IVxTextContentChangingEventArgs</name> <op:operator pos:line="2006" pos:column="56">*</op:operator><name pos:line="2006" pos:column="57">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2006" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2006" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2010" pos:column="1">#<cpp:directive pos:line="2010" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2010" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2012" pos:column="5">typedef <type><struct pos:line="2012" pos:column="13">struct <name pos:line="2012" pos:column="20">IVxTextContentChangingEventVtbl</name>
    <block pos:line="2013" pos:column="5">{<public type="default" pos:line="2013" pos:column="6">
        <function_decl><type><name pos:line="2014" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2016" pos:column="9">HRESULT</name></type> ( <name pos:line="2016" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2016" pos:column="37">*</type:modifier><name pos:line="2016" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2016" pos:column="54">( 
            <param><decl><type><name pos:line="2017" pos:column="13">IVxTextContentChangingEvent</name> <type:modifier pos:line="2017" pos:column="41">*</type:modifier></type> <name pos:line="2017" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="2018" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2018" pos:column="24">REFIID</name></type> <name pos:line="2018" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2019" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2020" pos:column="13">__RPC__deref_out</name>  <name pos:line="2020" pos:column="31">void</name> <type:modifier pos:line="2020" pos:column="36">*</type:modifier><type:modifier pos:line="2020" pos:column="37">*</type:modifier></type><name pos:line="2020" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2022" pos:column="9">ULONG</name></type> ( <name pos:line="2022" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2022" pos:column="35">*</type:modifier><name pos:line="2022" pos:column="36">AddRef</name> )<parameter_list pos:line="2022" pos:column="44">( 
            <param><decl><type><name pos:line="2023" pos:column="13">IVxTextContentChangingEvent</name> <type:modifier pos:line="2023" pos:column="41">*</type:modifier></type> <name pos:line="2023" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2025" pos:column="9">ULONG</name></type> ( <name pos:line="2025" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2025" pos:column="35">*</type:modifier><name pos:line="2025" pos:column="36">Release</name> )<parameter_list pos:line="2025" pos:column="45">( 
            <param><decl><type><name pos:line="2026" pos:column="13">IVxTextContentChangingEvent</name> <type:modifier pos:line="2026" pos:column="41">*</type:modifier></type> <name pos:line="2026" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2028" pos:column="9">HRESULT</name></type> ( <name pos:line="2028" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2028" pos:column="37">*</type:modifier><name pos:line="2028" pos:column="38">OnTextContentChanging</name> )<parameter_list pos:line="2028" pos:column="61">( 
            <param><decl><type><name pos:line="2029" pos:column="13">IVxTextContentChangingEvent</name> <type:modifier pos:line="2029" pos:column="41">*</type:modifier></type> <name pos:line="2029" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="2030" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2030" pos:column="24">IUnknown</name> <type:modifier pos:line="2030" pos:column="33">*</type:modifier></type><name pos:line="2030" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="2031" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2031" pos:column="24">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="2031" pos:column="56">*</type:modifier></type><name pos:line="2031" pos:column="57">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2033" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2034" pos:column="7">IVxTextContentChangingEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2036" pos:column="5">interface</name></type> <name pos:line="2036" pos:column="15">IVxTextContentChangingEvent</name>
    <argument_list pos:line="2037" pos:column="5">{
        <argument><expr><name pos:line="2038" pos:column="9">CONST_VTBL</name> struct <name pos:line="2038" pos:column="27">IVxTextContentChangingEventVtbl</name> <op:operator pos:line="2038" pos:column="59">*</op:operator><name pos:line="2038" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2043" pos:column="1">#<cpp:directive pos:line="2043" pos:column="2">ifdef</cpp:directive> <name pos:line="2043" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2046" pos:column="1">#<cpp:directive pos:line="2046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2046" pos:column="9">IVxTextContentChangingEvent_QueryInterface</name><parameter_list pos:line="2046" pos:column="51">(<param><type><name pos:line="2046" pos:column="52">This</name></type></param>,<param><type><name pos:line="2046" pos:column="57">riid</name></type></param>,<param><type><name pos:line="2046" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2047" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2049" pos:column="1">#<cpp:directive pos:line="2049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2049" pos:column="9">IVxTextContentChangingEvent_AddRef</name><parameter_list pos:line="2049" pos:column="43">(<param><type><name pos:line="2049" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2050" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2052" pos:column="1">#<cpp:directive pos:line="2052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2052" pos:column="9">IVxTextContentChangingEvent_Release</name><parameter_list pos:line="2052" pos:column="44">(<param><type><name pos:line="2052" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2053" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2056" pos:column="1">#<cpp:directive pos:line="2056" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2056" pos:column="9">IVxTextContentChangingEvent_OnTextContentChanging</name><parameter_list pos:line="2056" pos:column="58">(<param><type><name pos:line="2056" pos:column="59">This</name></type></param>,<param><type><name pos:line="2056" pos:column="64">pSender</name></type></param>,<param><type><name pos:line="2056" pos:column="72">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2057" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnTextContentChanging(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2059" pos:column="1">#<cpp:directive pos:line="2059" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2059" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2062" pos:column="1">#<cpp:directive pos:line="2062" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2062" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2067" pos:column="1">#<cpp:directive pos:line="2067" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2067" pos:column="9">/* __IVxTextContentChangingEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2070" pos:column="1">#<cpp:directive pos:line="2070" pos:column="2">ifndef</cpp:directive> <name pos:line="2070" pos:column="9">__IVxContentTypeChangedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2071" pos:column="1">#<cpp:directive pos:line="2071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2071" pos:column="9">__IVxContentTypeChangedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2073" pos:column="1">/* interface IVxContentTypeChangedEvent */</comment>
<comment type="block" pos:line="2074" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2077" pos:column="1">EXTERN_C</name> <specifier pos:line="2077" pos:column="10">const</specifier> <name pos:line="2077" pos:column="16">IID</name></type> <name pos:line="2077" pos:column="20">IID_IVxContentTypeChangedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="2079" pos:column="1">#<cpp:directive pos:line="2079" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2079" pos:column="5">defined</name><argument_list pos:line="2079" pos:column="12">(<argument><expr><name pos:line="2079" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2079" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2079" pos:column="29">!</op:operator><call><name pos:line="2079" pos:column="30">defined</name><argument_list pos:line="2079" pos:column="37">(<argument><expr><name pos:line="2079" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2081" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2081" pos:column="19">(<argument pos:line="2081" pos:column="20">"b58ad157-69a4-4225-aa41-0e5547b6cda3"</argument>)</argument_list></macro>
    <label><name pos:line="2082" pos:column="5">IVxContentTypeChangedEvent</name> :</label> <expr_stmt><expr pos:line="2082" pos:column="34">public <name pos:line="2082" pos:column="41">IUnknown</name>
    <block pos:line="2083" pos:column="5">{
    <expr pos:line="2084" pos:column="5">public<op:operator pos:line="2084" pos:column="11">:</op:operator>
        virtual <name pos:line="2085" pos:column="17">HRESULT</name> <name pos:line="2085" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2085" pos:column="43">OnContentTypeChanged</name><argument_list pos:line="2085" pos:column="63">( 
            <comment type="block" pos:line="2086" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2086" pos:column="24">IUnknown</name> <op:operator pos:line="2086" pos:column="33">*</op:operator><name pos:line="2086" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="2087" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2087" pos:column="24">IVxContentTypeChangedEventArgs</name> <op:operator pos:line="2087" pos:column="55">*</op:operator><name pos:line="2087" pos:column="56">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2087" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="2087" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2091" pos:column="1">#<cpp:directive pos:line="2091" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2091" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2093" pos:column="5">typedef <type><struct pos:line="2093" pos:column="13">struct <name pos:line="2093" pos:column="20">IVxContentTypeChangedEventVtbl</name>
    <block pos:line="2094" pos:column="5">{<public type="default" pos:line="2094" pos:column="6">
        <function_decl><type><name pos:line="2095" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2097" pos:column="9">HRESULT</name></type> ( <name pos:line="2097" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2097" pos:column="37">*</type:modifier><name pos:line="2097" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2097" pos:column="54">( 
            <param><decl><type><name pos:line="2098" pos:column="13">IVxContentTypeChangedEvent</name> <type:modifier pos:line="2098" pos:column="40">*</type:modifier></type> <name pos:line="2098" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="2099" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2099" pos:column="24">REFIID</name></type> <name pos:line="2099" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2100" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2101" pos:column="13">__RPC__deref_out</name>  <name pos:line="2101" pos:column="31">void</name> <type:modifier pos:line="2101" pos:column="36">*</type:modifier><type:modifier pos:line="2101" pos:column="37">*</type:modifier></type><name pos:line="2101" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2103" pos:column="9">ULONG</name></type> ( <name pos:line="2103" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2103" pos:column="35">*</type:modifier><name pos:line="2103" pos:column="36">AddRef</name> )<parameter_list pos:line="2103" pos:column="44">( 
            <param><decl><type><name pos:line="2104" pos:column="13">IVxContentTypeChangedEvent</name> <type:modifier pos:line="2104" pos:column="40">*</type:modifier></type> <name pos:line="2104" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2106" pos:column="9">ULONG</name></type> ( <name pos:line="2106" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2106" pos:column="35">*</type:modifier><name pos:line="2106" pos:column="36">Release</name> )<parameter_list pos:line="2106" pos:column="45">( 
            <param><decl><type><name pos:line="2107" pos:column="13">IVxContentTypeChangedEvent</name> <type:modifier pos:line="2107" pos:column="40">*</type:modifier></type> <name pos:line="2107" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2109" pos:column="9">HRESULT</name></type> ( <name pos:line="2109" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2109" pos:column="37">*</type:modifier><name pos:line="2109" pos:column="38">OnContentTypeChanged</name> )<parameter_list pos:line="2109" pos:column="60">( 
            <param><decl><type><name pos:line="2110" pos:column="13">IVxContentTypeChangedEvent</name> <type:modifier pos:line="2110" pos:column="40">*</type:modifier></type> <name pos:line="2110" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="2111" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2111" pos:column="24">IUnknown</name> <type:modifier pos:line="2111" pos:column="33">*</type:modifier></type><name pos:line="2111" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="2112" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2112" pos:column="24">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="2112" pos:column="55">*</type:modifier></type><name pos:line="2112" pos:column="56">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2114" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2115" pos:column="7">IVxContentTypeChangedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2117" pos:column="5">interface</name></type> <name pos:line="2117" pos:column="15">IVxContentTypeChangedEvent</name>
    <argument_list pos:line="2118" pos:column="5">{
        <argument><expr><name pos:line="2119" pos:column="9">CONST_VTBL</name> struct <name pos:line="2119" pos:column="27">IVxContentTypeChangedEventVtbl</name> <op:operator pos:line="2119" pos:column="58">*</op:operator><name pos:line="2119" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2124" pos:column="1">#<cpp:directive pos:line="2124" pos:column="2">ifdef</cpp:directive> <name pos:line="2124" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2127" pos:column="1">#<cpp:directive pos:line="2127" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2127" pos:column="9">IVxContentTypeChangedEvent_QueryInterface</name><parameter_list pos:line="2127" pos:column="50">(<param><type><name pos:line="2127" pos:column="51">This</name></type></param>,<param><type><name pos:line="2127" pos:column="56">riid</name></type></param>,<param><type><name pos:line="2127" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2128" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2130" pos:column="1">#<cpp:directive pos:line="2130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2130" pos:column="9">IVxContentTypeChangedEvent_AddRef</name><parameter_list pos:line="2130" pos:column="42">(<param><type><name pos:line="2130" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2131" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2133" pos:column="1">#<cpp:directive pos:line="2133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2133" pos:column="9">IVxContentTypeChangedEvent_Release</name><parameter_list pos:line="2133" pos:column="43">(<param><type><name pos:line="2133" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2134" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2137" pos:column="1">#<cpp:directive pos:line="2137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2137" pos:column="9">IVxContentTypeChangedEvent_OnContentTypeChanged</name><parameter_list pos:line="2137" pos:column="56">(<param><type><name pos:line="2137" pos:column="57">This</name></type></param>,<param><type><name pos:line="2137" pos:column="62">pSender</name></type></param>,<param><type><name pos:line="2137" pos:column="70">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2138" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnContentTypeChanged(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2140" pos:column="1">#<cpp:directive pos:line="2140" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2140" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2143" pos:column="1">#<cpp:directive pos:line="2143" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2143" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2148" pos:column="1">#<cpp:directive pos:line="2148" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2148" pos:column="9">/* __IVxContentTypeChangedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2151" pos:column="1">#<cpp:directive pos:line="2151" pos:column="2">ifndef</cpp:directive> <name pos:line="2151" pos:column="9">__IVxTextBufferCreatedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2152" pos:column="1">#<cpp:directive pos:line="2152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2152" pos:column="9">__IVxTextBufferCreatedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2154" pos:column="1">/* interface IVxTextBufferCreatedEvent */</comment>
<comment type="block" pos:line="2155" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2158" pos:column="1">EXTERN_C</name> <specifier pos:line="2158" pos:column="10">const</specifier> <name pos:line="2158" pos:column="16">IID</name></type> <name pos:line="2158" pos:column="20">IID_IVxTextBufferCreatedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="2160" pos:column="1">#<cpp:directive pos:line="2160" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2160" pos:column="5">defined</name><argument_list pos:line="2160" pos:column="12">(<argument><expr><name pos:line="2160" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2160" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2160" pos:column="29">!</op:operator><call><name pos:line="2160" pos:column="30">defined</name><argument_list pos:line="2160" pos:column="37">(<argument><expr><name pos:line="2160" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2162" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2162" pos:column="19">(<argument pos:line="2162" pos:column="20">"7a45771d-7a36-4d18-9b81-c5daa88985b8"</argument>)</argument_list></macro>
    <label><name pos:line="2163" pos:column="5">IVxTextBufferCreatedEvent</name> :</label> <expr_stmt><expr pos:line="2163" pos:column="33">public <name pos:line="2163" pos:column="40">IUnknown</name>
    <block pos:line="2164" pos:column="5">{
    <expr pos:line="2165" pos:column="5">public<op:operator pos:line="2165" pos:column="11">:</op:operator>
        virtual <name pos:line="2166" pos:column="17">HRESULT</name> <name pos:line="2166" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2166" pos:column="43">OnTextBufferCreated</name><argument_list pos:line="2166" pos:column="62">( 
            <comment type="block" pos:line="2167" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2167" pos:column="24">IUnknown</name> <op:operator pos:line="2167" pos:column="33">*</op:operator><name pos:line="2167" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="2168" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2168" pos:column="24">IVxTextBufferCreatedEventArgs</name> <op:operator pos:line="2168" pos:column="54">*</op:operator><name pos:line="2168" pos:column="55">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2168" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="2168" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2172" pos:column="1">#<cpp:directive pos:line="2172" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2172" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2174" pos:column="5">typedef <type><struct pos:line="2174" pos:column="13">struct <name pos:line="2174" pos:column="20">IVxTextBufferCreatedEventVtbl</name>
    <block pos:line="2175" pos:column="5">{<public type="default" pos:line="2175" pos:column="6">
        <function_decl><type><name pos:line="2176" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2178" pos:column="9">HRESULT</name></type> ( <name pos:line="2178" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2178" pos:column="37">*</type:modifier><name pos:line="2178" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2178" pos:column="54">( 
            <param><decl><type><name pos:line="2179" pos:column="13">IVxTextBufferCreatedEvent</name> <type:modifier pos:line="2179" pos:column="39">*</type:modifier></type> <name pos:line="2179" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2180" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2180" pos:column="24">REFIID</name></type> <name pos:line="2180" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2181" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2182" pos:column="13">__RPC__deref_out</name>  <name pos:line="2182" pos:column="31">void</name> <type:modifier pos:line="2182" pos:column="36">*</type:modifier><type:modifier pos:line="2182" pos:column="37">*</type:modifier></type><name pos:line="2182" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2184" pos:column="9">ULONG</name></type> ( <name pos:line="2184" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2184" pos:column="35">*</type:modifier><name pos:line="2184" pos:column="36">AddRef</name> )<parameter_list pos:line="2184" pos:column="44">( 
            <param><decl><type><name pos:line="2185" pos:column="13">IVxTextBufferCreatedEvent</name> <type:modifier pos:line="2185" pos:column="39">*</type:modifier></type> <name pos:line="2185" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2187" pos:column="9">ULONG</name></type> ( <name pos:line="2187" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2187" pos:column="35">*</type:modifier><name pos:line="2187" pos:column="36">Release</name> )<parameter_list pos:line="2187" pos:column="45">( 
            <param><decl><type><name pos:line="2188" pos:column="13">IVxTextBufferCreatedEvent</name> <type:modifier pos:line="2188" pos:column="39">*</type:modifier></type> <name pos:line="2188" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2190" pos:column="9">HRESULT</name></type> ( <name pos:line="2190" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2190" pos:column="37">*</type:modifier><name pos:line="2190" pos:column="38">OnTextBufferCreated</name> )<parameter_list pos:line="2190" pos:column="59">( 
            <param><decl><type><name pos:line="2191" pos:column="13">IVxTextBufferCreatedEvent</name> <type:modifier pos:line="2191" pos:column="39">*</type:modifier></type> <name pos:line="2191" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2192" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2192" pos:column="24">IUnknown</name> <type:modifier pos:line="2192" pos:column="33">*</type:modifier></type><name pos:line="2192" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="2193" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2193" pos:column="24">IVxTextBufferCreatedEventArgs</name> <type:modifier pos:line="2193" pos:column="54">*</type:modifier></type><name pos:line="2193" pos:column="55">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2195" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2196" pos:column="7">IVxTextBufferCreatedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2198" pos:column="5">interface</name></type> <name pos:line="2198" pos:column="15">IVxTextBufferCreatedEvent</name>
    <argument_list pos:line="2199" pos:column="5">{
        <argument><expr><name pos:line="2200" pos:column="9">CONST_VTBL</name> struct <name pos:line="2200" pos:column="27">IVxTextBufferCreatedEventVtbl</name> <op:operator pos:line="2200" pos:column="57">*</op:operator><name pos:line="2200" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2205" pos:column="1">#<cpp:directive pos:line="2205" pos:column="2">ifdef</cpp:directive> <name pos:line="2205" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2208" pos:column="1">#<cpp:directive pos:line="2208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2208" pos:column="9">IVxTextBufferCreatedEvent_QueryInterface</name><parameter_list pos:line="2208" pos:column="49">(<param><type><name pos:line="2208" pos:column="50">This</name></type></param>,<param><type><name pos:line="2208" pos:column="55">riid</name></type></param>,<param><type><name pos:line="2208" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2209" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2211" pos:column="1">#<cpp:directive pos:line="2211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2211" pos:column="9">IVxTextBufferCreatedEvent_AddRef</name><parameter_list pos:line="2211" pos:column="41">(<param><type><name pos:line="2211" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2212" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2214" pos:column="1">#<cpp:directive pos:line="2214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2214" pos:column="9">IVxTextBufferCreatedEvent_Release</name><parameter_list pos:line="2214" pos:column="42">(<param><type><name pos:line="2214" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2215" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2218" pos:column="1">#<cpp:directive pos:line="2218" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2218" pos:column="9">IVxTextBufferCreatedEvent_OnTextBufferCreated</name><parameter_list pos:line="2218" pos:column="54">(<param><type><name pos:line="2218" pos:column="55">This</name></type></param>,<param><type><name pos:line="2218" pos:column="60">pSender</name></type></param>,<param><type><name pos:line="2218" pos:column="68">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2219" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnTextBufferCreated(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2221" pos:column="1">#<cpp:directive pos:line="2221" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2221" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2224" pos:column="1">#<cpp:directive pos:line="2224" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2224" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2229" pos:column="1">#<cpp:directive pos:line="2229" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2229" pos:column="9">/* __IVxTextBufferCreatedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2232" pos:column="1">#<cpp:directive pos:line="2232" pos:column="2">ifndef</cpp:directive> <name pos:line="2232" pos:column="9">__IEnumeratorIVxTextSnapshotLine_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2233" pos:column="1">#<cpp:directive pos:line="2233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2233" pos:column="9">__IEnumeratorIVxTextSnapshotLine_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2235" pos:column="1">/* interface IEnumeratorIVxTextSnapshotLine */</comment>
<comment type="block" pos:line="2236" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2239" pos:column="1">EXTERN_C</name> <specifier pos:line="2239" pos:column="10">const</specifier> <name pos:line="2239" pos:column="16">IID</name></type> <name pos:line="2239" pos:column="20">IID_IEnumeratorIVxTextSnapshotLine</name></decl>;</decl_stmt>

<cpp:if pos:line="2241" pos:column="1">#<cpp:directive pos:line="2241" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2241" pos:column="5">defined</name><argument_list pos:line="2241" pos:column="12">(<argument><expr><name pos:line="2241" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2241" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2241" pos:column="29">!</op:operator><call><name pos:line="2241" pos:column="30">defined</name><argument_list pos:line="2241" pos:column="37">(<argument><expr><name pos:line="2241" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2243" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2243" pos:column="19">(<argument pos:line="2243" pos:column="20">"5ba4ea24-9310-4284-9e86-6ebec3e1818e"</argument>)</argument_list></macro>
    <label><name pos:line="2244" pos:column="5">IEnumeratorIVxTextSnapshotLine</name> :</label> <expr_stmt><expr pos:line="2244" pos:column="38">public <name pos:line="2244" pos:column="45">IUnknown</name>
    <block pos:line="2245" pos:column="5">{
    <expr pos:line="2246" pos:column="5">public<op:operator pos:line="2246" pos:column="11">:</op:operator>
        virtual <name pos:line="2247" pos:column="17">HRESULT</name> <name pos:line="2247" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2247" pos:column="43">GetCurrent</name><argument_list pos:line="2247" pos:column="53">( 
            <comment type="block" pos:line="2248" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2248" pos:column="33">IVxTextSnapshotLine</name> <op:operator pos:line="2248" pos:column="53">*</op:operator><op:operator pos:line="2248" pos:column="54">*</op:operator><name pos:line="2248" pos:column="55">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2248" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="2248" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="2250" pos:column="9">virtual <name pos:line="2250" pos:column="17">HRESULT</name> <name pos:line="2250" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2250" pos:column="43">MoveNext</name><argument_list pos:line="2250" pos:column="51">( 
            <comment type="block" pos:line="2251" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2251" pos:column="33">BOOL</name> <op:operator pos:line="2251" pos:column="38">*</op:operator><name pos:line="2251" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2251" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="2251" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="2253" pos:column="9">virtual <name pos:line="2253" pos:column="17">HRESULT</name> <name pos:line="2253" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2253" pos:column="43">Reset</name><argument_list pos:line="2253" pos:column="48">( <argument><expr><name pos:line="2253" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2253" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2253" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2257" pos:column="1">#<cpp:directive pos:line="2257" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2257" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2259" pos:column="5">typedef <type><struct pos:line="2259" pos:column="13">struct <name pos:line="2259" pos:column="20">IEnumeratorIVxTextSnapshotLineVtbl</name>
    <block pos:line="2260" pos:column="5">{<public type="default" pos:line="2260" pos:column="6">
        <function_decl><type><name pos:line="2261" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2263" pos:column="9">HRESULT</name></type> ( <name pos:line="2263" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2263" pos:column="37">*</type:modifier><name pos:line="2263" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2263" pos:column="54">( 
            <param><decl><type><name pos:line="2264" pos:column="13">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2264" pos:column="44">*</type:modifier></type> <name pos:line="2264" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2265" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2265" pos:column="24">REFIID</name></type> <name pos:line="2265" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2266" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2267" pos:column="13">__RPC__deref_out</name>  <name pos:line="2267" pos:column="31">void</name> <type:modifier pos:line="2267" pos:column="36">*</type:modifier><type:modifier pos:line="2267" pos:column="37">*</type:modifier></type><name pos:line="2267" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2269" pos:column="9">ULONG</name></type> ( <name pos:line="2269" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2269" pos:column="35">*</type:modifier><name pos:line="2269" pos:column="36">AddRef</name> )<parameter_list pos:line="2269" pos:column="44">( 
            <param><decl><type><name pos:line="2270" pos:column="13">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2270" pos:column="44">*</type:modifier></type> <name pos:line="2270" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2272" pos:column="9">ULONG</name></type> ( <name pos:line="2272" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2272" pos:column="35">*</type:modifier><name pos:line="2272" pos:column="36">Release</name> )<parameter_list pos:line="2272" pos:column="45">( 
            <param><decl><type><name pos:line="2273" pos:column="13">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2273" pos:column="44">*</type:modifier></type> <name pos:line="2273" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2275" pos:column="9">HRESULT</name></type> ( <name pos:line="2275" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2275" pos:column="37">*</type:modifier><name pos:line="2275" pos:column="38">GetCurrent</name> )<parameter_list pos:line="2275" pos:column="50">( 
            <param><decl><type><name pos:line="2276" pos:column="13">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2276" pos:column="44">*</type:modifier></type> <name pos:line="2276" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2277" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2277" pos:column="33">IVxTextSnapshotLine</name> <type:modifier pos:line="2277" pos:column="53">*</type:modifier><type:modifier pos:line="2277" pos:column="54">*</type:modifier></type><name pos:line="2277" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2279" pos:column="9">HRESULT</name></type> ( <name pos:line="2279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2279" pos:column="37">*</type:modifier><name pos:line="2279" pos:column="38">MoveNext</name> )<parameter_list pos:line="2279" pos:column="48">( 
            <param><decl><type><name pos:line="2280" pos:column="13">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2280" pos:column="44">*</type:modifier></type> <name pos:line="2280" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2281" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2281" pos:column="33">BOOL</name> <type:modifier pos:line="2281" pos:column="38">*</type:modifier></type><name pos:line="2281" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2283" pos:column="9">HRESULT</name></type> ( <name pos:line="2283" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2283" pos:column="37">*</type:modifier><name pos:line="2283" pos:column="38">Reset</name> )<parameter_list pos:line="2283" pos:column="45">( 
            <param><decl><type><name pos:line="2284" pos:column="13">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2284" pos:column="44">*</type:modifier></type> <name pos:line="2284" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2286" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2287" pos:column="7">IEnumeratorIVxTextSnapshotLineVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2289" pos:column="5">interface</name></type> <name pos:line="2289" pos:column="15">IEnumeratorIVxTextSnapshotLine</name>
    <argument_list pos:line="2290" pos:column="5">{
        <argument><expr><name pos:line="2291" pos:column="9">CONST_VTBL</name> struct <name pos:line="2291" pos:column="27">IEnumeratorIVxTextSnapshotLineVtbl</name> <op:operator pos:line="2291" pos:column="62">*</op:operator><name pos:line="2291" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2296" pos:column="1">#<cpp:directive pos:line="2296" pos:column="2">ifdef</cpp:directive> <name pos:line="2296" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2299" pos:column="1">#<cpp:directive pos:line="2299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2299" pos:column="9">IEnumeratorIVxTextSnapshotLine_QueryInterface</name><parameter_list pos:line="2299" pos:column="54">(<param><type><name pos:line="2299" pos:column="55">This</name></type></param>,<param><type><name pos:line="2299" pos:column="60">riid</name></type></param>,<param><type><name pos:line="2299" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2300" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2302" pos:column="1">#<cpp:directive pos:line="2302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2302" pos:column="9">IEnumeratorIVxTextSnapshotLine_AddRef</name><parameter_list pos:line="2302" pos:column="46">(<param><type><name pos:line="2302" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2303" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2305" pos:column="1">#<cpp:directive pos:line="2305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2305" pos:column="9">IEnumeratorIVxTextSnapshotLine_Release</name><parameter_list pos:line="2305" pos:column="47">(<param><type><name pos:line="2305" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2306" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2309" pos:column="1">#<cpp:directive pos:line="2309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2309" pos:column="9">IEnumeratorIVxTextSnapshotLine_GetCurrent</name><parameter_list pos:line="2309" pos:column="50">(<param><type><name pos:line="2309" pos:column="51">This</name></type></param>,<param><type><name pos:line="2309" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2310" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2312" pos:column="1">#<cpp:directive pos:line="2312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2312" pos:column="9">IEnumeratorIVxTextSnapshotLine_MoveNext</name><parameter_list pos:line="2312" pos:column="48">(<param><type><name pos:line="2312" pos:column="49">This</name></type></param>,<param><type><name pos:line="2312" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2313" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2315" pos:column="1">#<cpp:directive pos:line="2315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2315" pos:column="9">IEnumeratorIVxTextSnapshotLine_Reset</name><parameter_list pos:line="2315" pos:column="45">(<param><type><name pos:line="2315" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2316" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2318" pos:column="1">#<cpp:directive pos:line="2318" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2318" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2321" pos:column="1">#<cpp:directive pos:line="2321" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2321" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2326" pos:column="1">#<cpp:directive pos:line="2326" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2326" pos:column="9">/* __IEnumeratorIVxTextSnapshotLine_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2329" pos:column="1">#<cpp:directive pos:line="2329" pos:column="2">ifndef</cpp:directive> <name pos:line="2329" pos:column="9">__IEnumerableIVxTextSnapshotLine_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2330" pos:column="1">#<cpp:directive pos:line="2330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2330" pos:column="9">__IEnumerableIVxTextSnapshotLine_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2332" pos:column="1">/* interface IEnumerableIVxTextSnapshotLine */</comment>
<comment type="block" pos:line="2333" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2336" pos:column="1">EXTERN_C</name> <specifier pos:line="2336" pos:column="10">const</specifier> <name pos:line="2336" pos:column="16">IID</name></type> <name pos:line="2336" pos:column="20">IID_IEnumerableIVxTextSnapshotLine</name></decl>;</decl_stmt>

<cpp:if pos:line="2338" pos:column="1">#<cpp:directive pos:line="2338" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2338" pos:column="5">defined</name><argument_list pos:line="2338" pos:column="12">(<argument><expr><name pos:line="2338" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2338" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2338" pos:column="29">!</op:operator><call><name pos:line="2338" pos:column="30">defined</name><argument_list pos:line="2338" pos:column="37">(<argument><expr><name pos:line="2338" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2340" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2340" pos:column="19">(<argument pos:line="2340" pos:column="20">"021b71e1-59bb-481a-9ac6-c9b4ad7b7446"</argument>)</argument_list></macro>
    <label><name pos:line="2341" pos:column="5">IEnumerableIVxTextSnapshotLine</name> :</label> <expr_stmt><expr pos:line="2341" pos:column="38">public <name pos:line="2341" pos:column="45">IUnknown</name>
    <block pos:line="2342" pos:column="5">{
    <expr pos:line="2343" pos:column="5">public<op:operator pos:line="2343" pos:column="11">:</op:operator>
        virtual <name pos:line="2344" pos:column="17">HRESULT</name> <name pos:line="2344" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2344" pos:column="43">GetEnumerator</name><argument_list pos:line="2344" pos:column="56">( 
            <comment type="block" pos:line="2345" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2345" pos:column="33">IEnumeratorIVxTextSnapshotLine</name> <op:operator pos:line="2345" pos:column="64">*</op:operator><op:operator pos:line="2345" pos:column="65">*</op:operator><name pos:line="2345" pos:column="66">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2345" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="2345" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2349" pos:column="1">#<cpp:directive pos:line="2349" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2349" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2351" pos:column="5">typedef <type><struct pos:line="2351" pos:column="13">struct <name pos:line="2351" pos:column="20">IEnumerableIVxTextSnapshotLineVtbl</name>
    <block pos:line="2352" pos:column="5">{<public type="default" pos:line="2352" pos:column="6">
        <function_decl><type><name pos:line="2353" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2355" pos:column="9">HRESULT</name></type> ( <name pos:line="2355" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2355" pos:column="37">*</type:modifier><name pos:line="2355" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2355" pos:column="54">( 
            <param><decl><type><name pos:line="2356" pos:column="13">IEnumerableIVxTextSnapshotLine</name> <type:modifier pos:line="2356" pos:column="44">*</type:modifier></type> <name pos:line="2356" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2357" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2357" pos:column="24">REFIID</name></type> <name pos:line="2357" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2358" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2359" pos:column="13">__RPC__deref_out</name>  <name pos:line="2359" pos:column="31">void</name> <type:modifier pos:line="2359" pos:column="36">*</type:modifier><type:modifier pos:line="2359" pos:column="37">*</type:modifier></type><name pos:line="2359" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2361" pos:column="9">ULONG</name></type> ( <name pos:line="2361" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2361" pos:column="35">*</type:modifier><name pos:line="2361" pos:column="36">AddRef</name> )<parameter_list pos:line="2361" pos:column="44">( 
            <param><decl><type><name pos:line="2362" pos:column="13">IEnumerableIVxTextSnapshotLine</name> <type:modifier pos:line="2362" pos:column="44">*</type:modifier></type> <name pos:line="2362" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2364" pos:column="9">ULONG</name></type> ( <name pos:line="2364" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2364" pos:column="35">*</type:modifier><name pos:line="2364" pos:column="36">Release</name> )<parameter_list pos:line="2364" pos:column="45">( 
            <param><decl><type><name pos:line="2365" pos:column="13">IEnumerableIVxTextSnapshotLine</name> <type:modifier pos:line="2365" pos:column="44">*</type:modifier></type> <name pos:line="2365" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2367" pos:column="9">HRESULT</name></type> ( <name pos:line="2367" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2367" pos:column="37">*</type:modifier><name pos:line="2367" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="2367" pos:column="53">( 
            <param><decl><type><name pos:line="2368" pos:column="13">IEnumerableIVxTextSnapshotLine</name> <type:modifier pos:line="2368" pos:column="44">*</type:modifier></type> <name pos:line="2368" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2369" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2369" pos:column="33">IEnumeratorIVxTextSnapshotLine</name> <type:modifier pos:line="2369" pos:column="64">*</type:modifier><type:modifier pos:line="2369" pos:column="65">*</type:modifier></type><name pos:line="2369" pos:column="66">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2371" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2372" pos:column="7">IEnumerableIVxTextSnapshotLineVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2374" pos:column="5">interface</name></type> <name pos:line="2374" pos:column="15">IEnumerableIVxTextSnapshotLine</name>
    <argument_list pos:line="2375" pos:column="5">{
        <argument><expr><name pos:line="2376" pos:column="9">CONST_VTBL</name> struct <name pos:line="2376" pos:column="27">IEnumerableIVxTextSnapshotLineVtbl</name> <op:operator pos:line="2376" pos:column="62">*</op:operator><name pos:line="2376" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2381" pos:column="1">#<cpp:directive pos:line="2381" pos:column="2">ifdef</cpp:directive> <name pos:line="2381" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2384" pos:column="1">#<cpp:directive pos:line="2384" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2384" pos:column="9">IEnumerableIVxTextSnapshotLine_QueryInterface</name><parameter_list pos:line="2384" pos:column="54">(<param><type><name pos:line="2384" pos:column="55">This</name></type></param>,<param><type><name pos:line="2384" pos:column="60">riid</name></type></param>,<param><type><name pos:line="2384" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2385" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2387" pos:column="1">#<cpp:directive pos:line="2387" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2387" pos:column="9">IEnumerableIVxTextSnapshotLine_AddRef</name><parameter_list pos:line="2387" pos:column="46">(<param><type><name pos:line="2387" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2388" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2390" pos:column="1">#<cpp:directive pos:line="2390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2390" pos:column="9">IEnumerableIVxTextSnapshotLine_Release</name><parameter_list pos:line="2390" pos:column="47">(<param><type><name pos:line="2390" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2391" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2394" pos:column="1">#<cpp:directive pos:line="2394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2394" pos:column="9">IEnumerableIVxTextSnapshotLine_GetEnumerator</name><parameter_list pos:line="2394" pos:column="53">(<param><type><name pos:line="2394" pos:column="54">This</name></type></param>,<param><type><name pos:line="2394" pos:column="59">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2395" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2397" pos:column="1">#<cpp:directive pos:line="2397" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2397" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2400" pos:column="1">#<cpp:directive pos:line="2400" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2400" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2405" pos:column="1">#<cpp:directive pos:line="2405" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2405" pos:column="9">/* __IEnumerableIVxTextSnapshotLine_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2408" pos:column="1">#<cpp:directive pos:line="2408" pos:column="2">ifndef</cpp:directive> <name pos:line="2408" pos:column="9">__IEnumeratorVxSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2409" pos:column="1">#<cpp:directive pos:line="2409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2409" pos:column="9">__IEnumeratorVxSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2411" pos:column="1">/* interface IEnumeratorVxSpan */</comment>
<comment type="block" pos:line="2412" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2415" pos:column="1">EXTERN_C</name> <specifier pos:line="2415" pos:column="10">const</specifier> <name pos:line="2415" pos:column="16">IID</name></type> <name pos:line="2415" pos:column="20">IID_IEnumeratorVxSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="2417" pos:column="1">#<cpp:directive pos:line="2417" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2417" pos:column="5">defined</name><argument_list pos:line="2417" pos:column="12">(<argument><expr><name pos:line="2417" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2417" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2417" pos:column="29">!</op:operator><call><name pos:line="2417" pos:column="30">defined</name><argument_list pos:line="2417" pos:column="37">(<argument><expr><name pos:line="2417" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2419" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2419" pos:column="19">(<argument pos:line="2419" pos:column="20">"f5c3a3cb-442d-4abc-84b7-687611079c21"</argument>)</argument_list></macro>
    <label><name pos:line="2420" pos:column="5">IEnumeratorVxSpan</name> :</label> <expr_stmt><expr pos:line="2420" pos:column="25">public <name pos:line="2420" pos:column="32">IUnknown</name>
    <block pos:line="2421" pos:column="5">{
    <expr pos:line="2422" pos:column="5">public<op:operator pos:line="2422" pos:column="11">:</op:operator>
        virtual <name pos:line="2423" pos:column="17">HRESULT</name> <name pos:line="2423" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2423" pos:column="43">GetCurrent</name><argument_list pos:line="2423" pos:column="53">( 
            <comment type="block" pos:line="2424" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2424" pos:column="33">VxSpan</name> <op:operator pos:line="2424" pos:column="40">*</op:operator><name pos:line="2424" pos:column="41">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2424" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2424" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="2426" pos:column="9">virtual <name pos:line="2426" pos:column="17">HRESULT</name> <name pos:line="2426" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2426" pos:column="43">MoveNext</name><argument_list pos:line="2426" pos:column="51">( 
            <comment type="block" pos:line="2427" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2427" pos:column="33">BOOL</name> <op:operator pos:line="2427" pos:column="38">*</op:operator><name pos:line="2427" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2427" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="2427" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="2429" pos:column="9">virtual <name pos:line="2429" pos:column="17">HRESULT</name> <name pos:line="2429" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2429" pos:column="43">Reset</name><argument_list pos:line="2429" pos:column="48">( <argument><expr><name pos:line="2429" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2429" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2429" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2433" pos:column="1">#<cpp:directive pos:line="2433" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2433" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2435" pos:column="5">typedef <type><struct pos:line="2435" pos:column="13">struct <name pos:line="2435" pos:column="20">IEnumeratorVxSpanVtbl</name>
    <block pos:line="2436" pos:column="5">{<public type="default" pos:line="2436" pos:column="6">
        <function_decl><type><name pos:line="2437" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2439" pos:column="9">HRESULT</name></type> ( <name pos:line="2439" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2439" pos:column="37">*</type:modifier><name pos:line="2439" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2439" pos:column="54">( 
            <param><decl><type><name pos:line="2440" pos:column="13">IEnumeratorVxSpan</name> <type:modifier pos:line="2440" pos:column="31">*</type:modifier></type> <name pos:line="2440" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2441" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2441" pos:column="24">REFIID</name></type> <name pos:line="2441" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2442" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2443" pos:column="13">__RPC__deref_out</name>  <name pos:line="2443" pos:column="31">void</name> <type:modifier pos:line="2443" pos:column="36">*</type:modifier><type:modifier pos:line="2443" pos:column="37">*</type:modifier></type><name pos:line="2443" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2445" pos:column="9">ULONG</name></type> ( <name pos:line="2445" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2445" pos:column="35">*</type:modifier><name pos:line="2445" pos:column="36">AddRef</name> )<parameter_list pos:line="2445" pos:column="44">( 
            <param><decl><type><name pos:line="2446" pos:column="13">IEnumeratorVxSpan</name> <type:modifier pos:line="2446" pos:column="31">*</type:modifier></type> <name pos:line="2446" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2448" pos:column="9">ULONG</name></type> ( <name pos:line="2448" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2448" pos:column="35">*</type:modifier><name pos:line="2448" pos:column="36">Release</name> )<parameter_list pos:line="2448" pos:column="45">( 
            <param><decl><type><name pos:line="2449" pos:column="13">IEnumeratorVxSpan</name> <type:modifier pos:line="2449" pos:column="31">*</type:modifier></type> <name pos:line="2449" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2451" pos:column="9">HRESULT</name></type> ( <name pos:line="2451" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2451" pos:column="37">*</type:modifier><name pos:line="2451" pos:column="38">GetCurrent</name> )<parameter_list pos:line="2451" pos:column="50">( 
            <param><decl><type><name pos:line="2452" pos:column="13">IEnumeratorVxSpan</name> <type:modifier pos:line="2452" pos:column="31">*</type:modifier></type> <name pos:line="2452" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2453" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2453" pos:column="33">VxSpan</name> <type:modifier pos:line="2453" pos:column="40">*</type:modifier></type><name pos:line="2453" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2455" pos:column="9">HRESULT</name></type> ( <name pos:line="2455" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2455" pos:column="37">*</type:modifier><name pos:line="2455" pos:column="38">MoveNext</name> )<parameter_list pos:line="2455" pos:column="48">( 
            <param><decl><type><name pos:line="2456" pos:column="13">IEnumeratorVxSpan</name> <type:modifier pos:line="2456" pos:column="31">*</type:modifier></type> <name pos:line="2456" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2457" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2457" pos:column="33">BOOL</name> <type:modifier pos:line="2457" pos:column="38">*</type:modifier></type><name pos:line="2457" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2459" pos:column="9">HRESULT</name></type> ( <name pos:line="2459" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2459" pos:column="37">*</type:modifier><name pos:line="2459" pos:column="38">Reset</name> )<parameter_list pos:line="2459" pos:column="45">( 
            <param><decl><type><name pos:line="2460" pos:column="13">IEnumeratorVxSpan</name> <type:modifier pos:line="2460" pos:column="31">*</type:modifier></type> <name pos:line="2460" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2462" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2463" pos:column="7">IEnumeratorVxSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2465" pos:column="5">interface</name></type> <name pos:line="2465" pos:column="15">IEnumeratorVxSpan</name>
    <argument_list pos:line="2466" pos:column="5">{
        <argument><expr><name pos:line="2467" pos:column="9">CONST_VTBL</name> struct <name pos:line="2467" pos:column="27">IEnumeratorVxSpanVtbl</name> <op:operator pos:line="2467" pos:column="49">*</op:operator><name pos:line="2467" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2472" pos:column="1">#<cpp:directive pos:line="2472" pos:column="2">ifdef</cpp:directive> <name pos:line="2472" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2475" pos:column="1">#<cpp:directive pos:line="2475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2475" pos:column="9">IEnumeratorVxSpan_QueryInterface</name><parameter_list pos:line="2475" pos:column="41">(<param><type><name pos:line="2475" pos:column="42">This</name></type></param>,<param><type><name pos:line="2475" pos:column="47">riid</name></type></param>,<param><type><name pos:line="2475" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2476" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2478" pos:column="1">#<cpp:directive pos:line="2478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2478" pos:column="9">IEnumeratorVxSpan_AddRef</name><parameter_list pos:line="2478" pos:column="33">(<param><type><name pos:line="2478" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2479" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2481" pos:column="1">#<cpp:directive pos:line="2481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2481" pos:column="9">IEnumeratorVxSpan_Release</name><parameter_list pos:line="2481" pos:column="34">(<param><type><name pos:line="2481" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2482" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2485" pos:column="1">#<cpp:directive pos:line="2485" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2485" pos:column="9">IEnumeratorVxSpan_GetCurrent</name><parameter_list pos:line="2485" pos:column="37">(<param><type><name pos:line="2485" pos:column="38">This</name></type></param>,<param><type><name pos:line="2485" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2486" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2488" pos:column="1">#<cpp:directive pos:line="2488" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2488" pos:column="9">IEnumeratorVxSpan_MoveNext</name><parameter_list pos:line="2488" pos:column="35">(<param><type><name pos:line="2488" pos:column="36">This</name></type></param>,<param><type><name pos:line="2488" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2489" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2491" pos:column="1">#<cpp:directive pos:line="2491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2491" pos:column="9">IEnumeratorVxSpan_Reset</name><parameter_list pos:line="2491" pos:column="32">(<param><type><name pos:line="2491" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2492" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2494" pos:column="1">#<cpp:directive pos:line="2494" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2494" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2497" pos:column="1">#<cpp:directive pos:line="2497" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2497" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2502" pos:column="1">#<cpp:directive pos:line="2502" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2502" pos:column="9">/* __IEnumeratorVxSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2505" pos:column="1">#<cpp:directive pos:line="2505" pos:column="2">ifndef</cpp:directive> <name pos:line="2505" pos:column="9">__IListVxSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2506" pos:column="1">#<cpp:directive pos:line="2506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2506" pos:column="9">__IListVxSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2508" pos:column="1">/* interface IListVxSpan */</comment>
<comment type="block" pos:line="2509" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2512" pos:column="1">EXTERN_C</name> <specifier pos:line="2512" pos:column="10">const</specifier> <name pos:line="2512" pos:column="16">IID</name></type> <name pos:line="2512" pos:column="20">IID_IListVxSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="2514" pos:column="1">#<cpp:directive pos:line="2514" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2514" pos:column="5">defined</name><argument_list pos:line="2514" pos:column="12">(<argument><expr><name pos:line="2514" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2514" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2514" pos:column="29">!</op:operator><call><name pos:line="2514" pos:column="30">defined</name><argument_list pos:line="2514" pos:column="37">(<argument><expr><name pos:line="2514" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2516" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2516" pos:column="19">(<argument pos:line="2516" pos:column="20">"f265752d-e60c-4c02-a3d4-9200a936b1b4"</argument>)</argument_list></macro>
    <label><name pos:line="2517" pos:column="5">IListVxSpan</name> :</label> <expr_stmt><expr pos:line="2517" pos:column="19">public <name pos:line="2517" pos:column="26">IUnknown</name>
    <block pos:line="2518" pos:column="5">{
    <expr pos:line="2519" pos:column="5">public<op:operator pos:line="2519" pos:column="11">:</op:operator>
        virtual <name pos:line="2520" pos:column="17">HRESULT</name> <name pos:line="2520" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2520" pos:column="43">GetCount</name><argument_list pos:line="2520" pos:column="51">( 
            <comment type="block" pos:line="2521" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2521" pos:column="33">int</name> <op:operator pos:line="2521" pos:column="37">*</op:operator><name pos:line="2521" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2521" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="2521" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="2523" pos:column="9">virtual <name pos:line="2523" pos:column="17">HRESULT</name> <name pos:line="2523" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2523" pos:column="43">GetElement</name><argument_list pos:line="2523" pos:column="53">( 
            <comment type="block" pos:line="2524" pos:column="13">/* [in] */</comment> <argument pos:line="2524" pos:column="24">int index</argument>,
            <comment type="block" pos:line="2525" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2525" pos:column="33">VxSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="2525" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2525" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="2527" pos:column="9">virtual <name pos:line="2527" pos:column="17">HRESULT</name> <name pos:line="2527" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2527" pos:column="43">GetEnumerator</name><argument_list pos:line="2527" pos:column="56">( 
            <comment type="block" pos:line="2528" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2528" pos:column="33">IEnumeratorVxSpan</name> <op:operator pos:line="2528" pos:column="51">*</op:operator><op:operator pos:line="2528" pos:column="52">*</op:operator><name pos:line="2528" pos:column="53">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2528" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2528" pos:column="65">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2532" pos:column="1">#<cpp:directive pos:line="2532" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2532" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2534" pos:column="5">typedef <type><struct pos:line="2534" pos:column="13">struct <name pos:line="2534" pos:column="20">IListVxSpanVtbl</name>
    <block pos:line="2535" pos:column="5">{<public type="default" pos:line="2535" pos:column="6">
        <function_decl><type><name pos:line="2536" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2538" pos:column="9">HRESULT</name></type> ( <name pos:line="2538" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2538" pos:column="37">*</type:modifier><name pos:line="2538" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2538" pos:column="54">( 
            <param><decl><type><name pos:line="2539" pos:column="13">IListVxSpan</name> <type:modifier pos:line="2539" pos:column="25">*</type:modifier></type> <name pos:line="2539" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2540" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2540" pos:column="24">REFIID</name></type> <name pos:line="2540" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2541" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2542" pos:column="13">__RPC__deref_out</name>  <name pos:line="2542" pos:column="31">void</name> <type:modifier pos:line="2542" pos:column="36">*</type:modifier><type:modifier pos:line="2542" pos:column="37">*</type:modifier></type><name pos:line="2542" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2544" pos:column="9">ULONG</name></type> ( <name pos:line="2544" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2544" pos:column="35">*</type:modifier><name pos:line="2544" pos:column="36">AddRef</name> )<parameter_list pos:line="2544" pos:column="44">( 
            <param><decl><type><name pos:line="2545" pos:column="13">IListVxSpan</name> <type:modifier pos:line="2545" pos:column="25">*</type:modifier></type> <name pos:line="2545" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2547" pos:column="9">ULONG</name></type> ( <name pos:line="2547" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2547" pos:column="35">*</type:modifier><name pos:line="2547" pos:column="36">Release</name> )<parameter_list pos:line="2547" pos:column="45">( 
            <param><decl><type><name pos:line="2548" pos:column="13">IListVxSpan</name> <type:modifier pos:line="2548" pos:column="25">*</type:modifier></type> <name pos:line="2548" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2550" pos:column="9">HRESULT</name></type> ( <name pos:line="2550" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2550" pos:column="37">*</type:modifier><name pos:line="2550" pos:column="38">GetCount</name> )<parameter_list pos:line="2550" pos:column="48">( 
            <param><decl><type><name pos:line="2551" pos:column="13">IListVxSpan</name> <type:modifier pos:line="2551" pos:column="25">*</type:modifier></type> <name pos:line="2551" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2552" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2552" pos:column="33">int</name> <type:modifier pos:line="2552" pos:column="37">*</type:modifier></type><name pos:line="2552" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2554" pos:column="9">HRESULT</name></type> ( <name pos:line="2554" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2554" pos:column="37">*</type:modifier><name pos:line="2554" pos:column="38">GetElement</name> )<parameter_list pos:line="2554" pos:column="50">( 
            <param><decl><type><name pos:line="2555" pos:column="13">IListVxSpan</name> <type:modifier pos:line="2555" pos:column="25">*</type:modifier></type> <name pos:line="2555" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2556" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2556" pos:column="24">int</name></type> <name pos:line="2556" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="2557" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2557" pos:column="33">VxSpan</name> <type:modifier pos:line="2557" pos:column="40">*</type:modifier></type><name pos:line="2557" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2559" pos:column="9">HRESULT</name></type> ( <name pos:line="2559" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2559" pos:column="37">*</type:modifier><name pos:line="2559" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="2559" pos:column="53">( 
            <param><decl><type><name pos:line="2560" pos:column="13">IListVxSpan</name> <type:modifier pos:line="2560" pos:column="25">*</type:modifier></type> <name pos:line="2560" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2561" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2561" pos:column="33">IEnumeratorVxSpan</name> <type:modifier pos:line="2561" pos:column="51">*</type:modifier><type:modifier pos:line="2561" pos:column="52">*</type:modifier></type><name pos:line="2561" pos:column="53">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2563" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2564" pos:column="7">IListVxSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2566" pos:column="5">interface</name></type> <name pos:line="2566" pos:column="15">IListVxSpan</name>
    <argument_list pos:line="2567" pos:column="5">{
        <argument><expr><name pos:line="2568" pos:column="9">CONST_VTBL</name> struct <name pos:line="2568" pos:column="27">IListVxSpanVtbl</name> <op:operator pos:line="2568" pos:column="43">*</op:operator><name pos:line="2568" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2573" pos:column="1">#<cpp:directive pos:line="2573" pos:column="2">ifdef</cpp:directive> <name pos:line="2573" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2576" pos:column="1">#<cpp:directive pos:line="2576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2576" pos:column="9">IListVxSpan_QueryInterface</name><parameter_list pos:line="2576" pos:column="35">(<param><type><name pos:line="2576" pos:column="36">This</name></type></param>,<param><type><name pos:line="2576" pos:column="41">riid</name></type></param>,<param><type><name pos:line="2576" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2577" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2579" pos:column="1">#<cpp:directive pos:line="2579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2579" pos:column="9">IListVxSpan_AddRef</name><parameter_list pos:line="2579" pos:column="27">(<param><type><name pos:line="2579" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2580" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2582" pos:column="1">#<cpp:directive pos:line="2582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2582" pos:column="9">IListVxSpan_Release</name><parameter_list pos:line="2582" pos:column="28">(<param><type><name pos:line="2582" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2583" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2586" pos:column="1">#<cpp:directive pos:line="2586" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2586" pos:column="9">IListVxSpan_GetCount</name><parameter_list pos:line="2586" pos:column="29">(<param><type><name pos:line="2586" pos:column="30">This</name></type></param>,<param><type><name pos:line="2586" pos:column="35">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2587" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2589" pos:column="1">#<cpp:directive pos:line="2589" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2589" pos:column="9">IListVxSpan_GetElement</name><parameter_list pos:line="2589" pos:column="31">(<param><type><name pos:line="2589" pos:column="32">This</name></type></param>,<param><type><name pos:line="2589" pos:column="37">index</name></type></param>,<param><type><name pos:line="2589" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2590" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2592" pos:column="1">#<cpp:directive pos:line="2592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2592" pos:column="9">IListVxSpan_GetEnumerator</name><parameter_list pos:line="2592" pos:column="34">(<param><type><name pos:line="2592" pos:column="35">This</name></type></param>,<param><type><name pos:line="2592" pos:column="40">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2593" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2595" pos:column="1">#<cpp:directive pos:line="2595" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2595" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2598" pos:column="1">#<cpp:directive pos:line="2598" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2598" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2603" pos:column="1">#<cpp:directive pos:line="2603" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2603" pos:column="9">/* __IListVxSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2606" pos:column="1">#<cpp:directive pos:line="2606" pos:column="2">ifndef</cpp:directive> <name pos:line="2606" pos:column="9">__IEnumeratorIVxTextBuffer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2607" pos:column="1">#<cpp:directive pos:line="2607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2607" pos:column="9">__IEnumeratorIVxTextBuffer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2609" pos:column="1">/* interface IEnumeratorIVxTextBuffer */</comment>
<comment type="block" pos:line="2610" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2613" pos:column="1">EXTERN_C</name> <specifier pos:line="2613" pos:column="10">const</specifier> <name pos:line="2613" pos:column="16">IID</name></type> <name pos:line="2613" pos:column="20">IID_IEnumeratorIVxTextBuffer</name></decl>;</decl_stmt>

<cpp:if pos:line="2615" pos:column="1">#<cpp:directive pos:line="2615" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2615" pos:column="5">defined</name><argument_list pos:line="2615" pos:column="12">(<argument><expr><name pos:line="2615" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2615" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2615" pos:column="29">!</op:operator><call><name pos:line="2615" pos:column="30">defined</name><argument_list pos:line="2615" pos:column="37">(<argument><expr><name pos:line="2615" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2617" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2617" pos:column="19">(<argument pos:line="2617" pos:column="20">"7a1e5f7c-6f1d-4e1e-b13d-8656b71f2f97"</argument>)</argument_list></macro>
    <label><name pos:line="2618" pos:column="5">IEnumeratorIVxTextBuffer</name> :</label> <expr_stmt><expr pos:line="2618" pos:column="32">public <name pos:line="2618" pos:column="39">IUnknown</name>
    <block pos:line="2619" pos:column="5">{
    <expr pos:line="2620" pos:column="5">public<op:operator pos:line="2620" pos:column="11">:</op:operator>
        virtual <name pos:line="2621" pos:column="17">HRESULT</name> <name pos:line="2621" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2621" pos:column="43">GetCurrent</name><argument_list pos:line="2621" pos:column="53">( 
            <comment type="block" pos:line="2622" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2622" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="2622" pos:column="47">*</op:operator><op:operator pos:line="2622" pos:column="48">*</op:operator><name pos:line="2622" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2622" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="2622" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="2624" pos:column="9">virtual <name pos:line="2624" pos:column="17">HRESULT</name> <name pos:line="2624" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2624" pos:column="43">MoveNext</name><argument_list pos:line="2624" pos:column="51">( 
            <comment type="block" pos:line="2625" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2625" pos:column="33">BOOL</name> <op:operator pos:line="2625" pos:column="38">*</op:operator><name pos:line="2625" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2625" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="2625" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="2627" pos:column="9">virtual <name pos:line="2627" pos:column="17">HRESULT</name> <name pos:line="2627" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2627" pos:column="43">Reset</name><argument_list pos:line="2627" pos:column="48">( <argument><expr><name pos:line="2627" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2627" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2627" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2631" pos:column="1">#<cpp:directive pos:line="2631" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2631" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2633" pos:column="5">typedef <type><struct pos:line="2633" pos:column="13">struct <name pos:line="2633" pos:column="20">IEnumeratorIVxTextBufferVtbl</name>
    <block pos:line="2634" pos:column="5">{<public type="default" pos:line="2634" pos:column="6">
        <function_decl><type><name pos:line="2635" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2637" pos:column="9">HRESULT</name></type> ( <name pos:line="2637" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2637" pos:column="37">*</type:modifier><name pos:line="2637" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2637" pos:column="54">( 
            <param><decl><type><name pos:line="2638" pos:column="13">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2638" pos:column="38">*</type:modifier></type> <name pos:line="2638" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2639" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2639" pos:column="24">REFIID</name></type> <name pos:line="2639" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2640" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2641" pos:column="13">__RPC__deref_out</name>  <name pos:line="2641" pos:column="31">void</name> <type:modifier pos:line="2641" pos:column="36">*</type:modifier><type:modifier pos:line="2641" pos:column="37">*</type:modifier></type><name pos:line="2641" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2643" pos:column="9">ULONG</name></type> ( <name pos:line="2643" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2643" pos:column="35">*</type:modifier><name pos:line="2643" pos:column="36">AddRef</name> )<parameter_list pos:line="2643" pos:column="44">( 
            <param><decl><type><name pos:line="2644" pos:column="13">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2644" pos:column="38">*</type:modifier></type> <name pos:line="2644" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2646" pos:column="9">ULONG</name></type> ( <name pos:line="2646" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2646" pos:column="35">*</type:modifier><name pos:line="2646" pos:column="36">Release</name> )<parameter_list pos:line="2646" pos:column="45">( 
            <param><decl><type><name pos:line="2647" pos:column="13">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2647" pos:column="38">*</type:modifier></type> <name pos:line="2647" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2649" pos:column="9">HRESULT</name></type> ( <name pos:line="2649" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2649" pos:column="37">*</type:modifier><name pos:line="2649" pos:column="38">GetCurrent</name> )<parameter_list pos:line="2649" pos:column="50">( 
            <param><decl><type><name pos:line="2650" pos:column="13">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2650" pos:column="38">*</type:modifier></type> <name pos:line="2650" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2651" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2651" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="2651" pos:column="47">*</type:modifier><type:modifier pos:line="2651" pos:column="48">*</type:modifier></type><name pos:line="2651" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2653" pos:column="9">HRESULT</name></type> ( <name pos:line="2653" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2653" pos:column="37">*</type:modifier><name pos:line="2653" pos:column="38">MoveNext</name> )<parameter_list pos:line="2653" pos:column="48">( 
            <param><decl><type><name pos:line="2654" pos:column="13">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2654" pos:column="38">*</type:modifier></type> <name pos:line="2654" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2655" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2655" pos:column="33">BOOL</name> <type:modifier pos:line="2655" pos:column="38">*</type:modifier></type><name pos:line="2655" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2657" pos:column="9">HRESULT</name></type> ( <name pos:line="2657" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2657" pos:column="37">*</type:modifier><name pos:line="2657" pos:column="38">Reset</name> )<parameter_list pos:line="2657" pos:column="45">( 
            <param><decl><type><name pos:line="2658" pos:column="13">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2658" pos:column="38">*</type:modifier></type> <name pos:line="2658" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2660" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2661" pos:column="7">IEnumeratorIVxTextBufferVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2663" pos:column="5">interface</name></type> <name pos:line="2663" pos:column="15">IEnumeratorIVxTextBuffer</name>
    <argument_list pos:line="2664" pos:column="5">{
        <argument><expr><name pos:line="2665" pos:column="9">CONST_VTBL</name> struct <name pos:line="2665" pos:column="27">IEnumeratorIVxTextBufferVtbl</name> <op:operator pos:line="2665" pos:column="56">*</op:operator><name pos:line="2665" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2670" pos:column="1">#<cpp:directive pos:line="2670" pos:column="2">ifdef</cpp:directive> <name pos:line="2670" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2673" pos:column="1">#<cpp:directive pos:line="2673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2673" pos:column="9">IEnumeratorIVxTextBuffer_QueryInterface</name><parameter_list pos:line="2673" pos:column="48">(<param><type><name pos:line="2673" pos:column="49">This</name></type></param>,<param><type><name pos:line="2673" pos:column="54">riid</name></type></param>,<param><type><name pos:line="2673" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2674" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2676" pos:column="1">#<cpp:directive pos:line="2676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2676" pos:column="9">IEnumeratorIVxTextBuffer_AddRef</name><parameter_list pos:line="2676" pos:column="40">(<param><type><name pos:line="2676" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2677" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2679" pos:column="1">#<cpp:directive pos:line="2679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2679" pos:column="9">IEnumeratorIVxTextBuffer_Release</name><parameter_list pos:line="2679" pos:column="41">(<param><type><name pos:line="2679" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2680" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2683" pos:column="1">#<cpp:directive pos:line="2683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2683" pos:column="9">IEnumeratorIVxTextBuffer_GetCurrent</name><parameter_list pos:line="2683" pos:column="44">(<param><type><name pos:line="2683" pos:column="45">This</name></type></param>,<param><type><name pos:line="2683" pos:column="50">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2684" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2686" pos:column="1">#<cpp:directive pos:line="2686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2686" pos:column="9">IEnumeratorIVxTextBuffer_MoveNext</name><parameter_list pos:line="2686" pos:column="42">(<param><type><name pos:line="2686" pos:column="43">This</name></type></param>,<param><type><name pos:line="2686" pos:column="48">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2687" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2689" pos:column="1">#<cpp:directive pos:line="2689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2689" pos:column="9">IEnumeratorIVxTextBuffer_Reset</name><parameter_list pos:line="2689" pos:column="39">(<param><type><name pos:line="2689" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2690" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2692" pos:column="1">#<cpp:directive pos:line="2692" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2692" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2695" pos:column="1">#<cpp:directive pos:line="2695" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2695" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2700" pos:column="1">#<cpp:directive pos:line="2700" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2700" pos:column="9">/* __IEnumeratorIVxTextBuffer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2703" pos:column="1">#<cpp:directive pos:line="2703" pos:column="2">ifndef</cpp:directive> <name pos:line="2703" pos:column="9">__IListIVxTextBuffer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2704" pos:column="1">#<cpp:directive pos:line="2704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2704" pos:column="9">__IListIVxTextBuffer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2706" pos:column="1">/* interface IListIVxTextBuffer */</comment>
<comment type="block" pos:line="2707" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2710" pos:column="1">EXTERN_C</name> <specifier pos:line="2710" pos:column="10">const</specifier> <name pos:line="2710" pos:column="16">IID</name></type> <name pos:line="2710" pos:column="20">IID_IListIVxTextBuffer</name></decl>;</decl_stmt>

<cpp:if pos:line="2712" pos:column="1">#<cpp:directive pos:line="2712" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2712" pos:column="5">defined</name><argument_list pos:line="2712" pos:column="12">(<argument><expr><name pos:line="2712" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2712" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2712" pos:column="29">!</op:operator><call><name pos:line="2712" pos:column="30">defined</name><argument_list pos:line="2712" pos:column="37">(<argument><expr><name pos:line="2712" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2714" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2714" pos:column="19">(<argument pos:line="2714" pos:column="20">"121811be-de48-4320-b7c6-1237c0d2ff3b"</argument>)</argument_list></macro>
    <label><name pos:line="2715" pos:column="5">IListIVxTextBuffer</name> :</label> <expr_stmt><expr pos:line="2715" pos:column="26">public <name pos:line="2715" pos:column="33">IUnknown</name>
    <block pos:line="2716" pos:column="5">{
    <expr pos:line="2717" pos:column="5">public<op:operator pos:line="2717" pos:column="11">:</op:operator>
        virtual <name pos:line="2718" pos:column="17">HRESULT</name> <name pos:line="2718" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2718" pos:column="43">GetCount</name><argument_list pos:line="2718" pos:column="51">( 
            <comment type="block" pos:line="2719" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2719" pos:column="33">int</name> <op:operator pos:line="2719" pos:column="37">*</op:operator><name pos:line="2719" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2719" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="2719" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="2721" pos:column="9">virtual <name pos:line="2721" pos:column="17">HRESULT</name> <name pos:line="2721" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2721" pos:column="43">GetElement</name><argument_list pos:line="2721" pos:column="53">( 
            <comment type="block" pos:line="2722" pos:column="13">/* [in] */</comment> <argument pos:line="2722" pos:column="24">int index</argument>,
            <comment type="block" pos:line="2723" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2723" pos:column="33">IVxTextBuffer **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="2723" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="2723" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="2725" pos:column="9">virtual <name pos:line="2725" pos:column="17">HRESULT</name> <name pos:line="2725" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2725" pos:column="43">GetEnumerator</name><argument_list pos:line="2725" pos:column="56">( 
            <comment type="block" pos:line="2726" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2726" pos:column="33">IEnumeratorIVxTextBuffer</name> <op:operator pos:line="2726" pos:column="58">*</op:operator><op:operator pos:line="2726" pos:column="59">*</op:operator><name pos:line="2726" pos:column="60">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2726" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2726" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2730" pos:column="1">#<cpp:directive pos:line="2730" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2730" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2732" pos:column="5">typedef <type><struct pos:line="2732" pos:column="13">struct <name pos:line="2732" pos:column="20">IListIVxTextBufferVtbl</name>
    <block pos:line="2733" pos:column="5">{<public type="default" pos:line="2733" pos:column="6">
        <function_decl><type><name pos:line="2734" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2736" pos:column="9">HRESULT</name></type> ( <name pos:line="2736" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2736" pos:column="37">*</type:modifier><name pos:line="2736" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2736" pos:column="54">( 
            <param><decl><type><name pos:line="2737" pos:column="13">IListIVxTextBuffer</name> <type:modifier pos:line="2737" pos:column="32">*</type:modifier></type> <name pos:line="2737" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2738" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2738" pos:column="24">REFIID</name></type> <name pos:line="2738" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2739" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2740" pos:column="13">__RPC__deref_out</name>  <name pos:line="2740" pos:column="31">void</name> <type:modifier pos:line="2740" pos:column="36">*</type:modifier><type:modifier pos:line="2740" pos:column="37">*</type:modifier></type><name pos:line="2740" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2742" pos:column="9">ULONG</name></type> ( <name pos:line="2742" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2742" pos:column="35">*</type:modifier><name pos:line="2742" pos:column="36">AddRef</name> )<parameter_list pos:line="2742" pos:column="44">( 
            <param><decl><type><name pos:line="2743" pos:column="13">IListIVxTextBuffer</name> <type:modifier pos:line="2743" pos:column="32">*</type:modifier></type> <name pos:line="2743" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2745" pos:column="9">ULONG</name></type> ( <name pos:line="2745" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2745" pos:column="35">*</type:modifier><name pos:line="2745" pos:column="36">Release</name> )<parameter_list pos:line="2745" pos:column="45">( 
            <param><decl><type><name pos:line="2746" pos:column="13">IListIVxTextBuffer</name> <type:modifier pos:line="2746" pos:column="32">*</type:modifier></type> <name pos:line="2746" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2748" pos:column="9">HRESULT</name></type> ( <name pos:line="2748" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2748" pos:column="37">*</type:modifier><name pos:line="2748" pos:column="38">GetCount</name> )<parameter_list pos:line="2748" pos:column="48">( 
            <param><decl><type><name pos:line="2749" pos:column="13">IListIVxTextBuffer</name> <type:modifier pos:line="2749" pos:column="32">*</type:modifier></type> <name pos:line="2749" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2750" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2750" pos:column="33">int</name> <type:modifier pos:line="2750" pos:column="37">*</type:modifier></type><name pos:line="2750" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2752" pos:column="9">HRESULT</name></type> ( <name pos:line="2752" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2752" pos:column="37">*</type:modifier><name pos:line="2752" pos:column="38">GetElement</name> )<parameter_list pos:line="2752" pos:column="50">( 
            <param><decl><type><name pos:line="2753" pos:column="13">IListIVxTextBuffer</name> <type:modifier pos:line="2753" pos:column="32">*</type:modifier></type> <name pos:line="2753" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2754" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2754" pos:column="24">int</name></type> <name pos:line="2754" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="2755" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2755" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="2755" pos:column="47">*</type:modifier><type:modifier pos:line="2755" pos:column="48">*</type:modifier></type><name pos:line="2755" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2757" pos:column="9">HRESULT</name></type> ( <name pos:line="2757" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2757" pos:column="37">*</type:modifier><name pos:line="2757" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="2757" pos:column="53">( 
            <param><decl><type><name pos:line="2758" pos:column="13">IListIVxTextBuffer</name> <type:modifier pos:line="2758" pos:column="32">*</type:modifier></type> <name pos:line="2758" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2759" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2759" pos:column="33">IEnumeratorIVxTextBuffer</name> <type:modifier pos:line="2759" pos:column="58">*</type:modifier><type:modifier pos:line="2759" pos:column="59">*</type:modifier></type><name pos:line="2759" pos:column="60">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2761" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2762" pos:column="7">IListIVxTextBufferVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2764" pos:column="5">interface</name></type> <name pos:line="2764" pos:column="15">IListIVxTextBuffer</name>
    <argument_list pos:line="2765" pos:column="5">{
        <argument><expr><name pos:line="2766" pos:column="9">CONST_VTBL</name> struct <name pos:line="2766" pos:column="27">IListIVxTextBufferVtbl</name> <op:operator pos:line="2766" pos:column="50">*</op:operator><name pos:line="2766" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2771" pos:column="1">#<cpp:directive pos:line="2771" pos:column="2">ifdef</cpp:directive> <name pos:line="2771" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2774" pos:column="1">#<cpp:directive pos:line="2774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2774" pos:column="9">IListIVxTextBuffer_QueryInterface</name><parameter_list pos:line="2774" pos:column="42">(<param><type><name pos:line="2774" pos:column="43">This</name></type></param>,<param><type><name pos:line="2774" pos:column="48">riid</name></type></param>,<param><type><name pos:line="2774" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2775" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2777" pos:column="1">#<cpp:directive pos:line="2777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2777" pos:column="9">IListIVxTextBuffer_AddRef</name><parameter_list pos:line="2777" pos:column="34">(<param><type><name pos:line="2777" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2778" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2780" pos:column="1">#<cpp:directive pos:line="2780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2780" pos:column="9">IListIVxTextBuffer_Release</name><parameter_list pos:line="2780" pos:column="35">(<param><type><name pos:line="2780" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2781" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2784" pos:column="1">#<cpp:directive pos:line="2784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2784" pos:column="9">IListIVxTextBuffer_GetCount</name><parameter_list pos:line="2784" pos:column="36">(<param><type><name pos:line="2784" pos:column="37">This</name></type></param>,<param><type><name pos:line="2784" pos:column="42">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2785" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2787" pos:column="1">#<cpp:directive pos:line="2787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2787" pos:column="9">IListIVxTextBuffer_GetElement</name><parameter_list pos:line="2787" pos:column="38">(<param><type><name pos:line="2787" pos:column="39">This</name></type></param>,<param><type><name pos:line="2787" pos:column="44">index</name></type></param>,<param><type><name pos:line="2787" pos:column="50">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2788" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2790" pos:column="1">#<cpp:directive pos:line="2790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2790" pos:column="9">IListIVxTextBuffer_GetEnumerator</name><parameter_list pos:line="2790" pos:column="41">(<param><type><name pos:line="2790" pos:column="42">This</name></type></param>,<param><type><name pos:line="2790" pos:column="47">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2791" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2793" pos:column="1">#<cpp:directive pos:line="2793" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2793" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2796" pos:column="1">#<cpp:directive pos:line="2796" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2796" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2801" pos:column="1">#<cpp:directive pos:line="2801" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2801" pos:column="9">/* __IListIVxTextBuffer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2804" pos:column="1">#<cpp:directive pos:line="2804" pos:column="2">ifndef</cpp:directive> <name pos:line="2804" pos:column="9">__IVxGraphBuffersChangedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2805" pos:column="1">#<cpp:directive pos:line="2805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2805" pos:column="9">__IVxGraphBuffersChangedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2807" pos:column="1">/* interface IVxGraphBuffersChangedEvent */</comment>
<comment type="block" pos:line="2808" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2811" pos:column="1">EXTERN_C</name> <specifier pos:line="2811" pos:column="10">const</specifier> <name pos:line="2811" pos:column="16">IID</name></type> <name pos:line="2811" pos:column="20">IID_IVxGraphBuffersChangedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="2813" pos:column="1">#<cpp:directive pos:line="2813" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2813" pos:column="5">defined</name><argument_list pos:line="2813" pos:column="12">(<argument><expr><name pos:line="2813" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2813" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2813" pos:column="29">!</op:operator><call><name pos:line="2813" pos:column="30">defined</name><argument_list pos:line="2813" pos:column="37">(<argument><expr><name pos:line="2813" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2815" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2815" pos:column="19">(<argument pos:line="2815" pos:column="20">"d1b54e5e-2782-4cd7-b6a0-2eff76c07dfb"</argument>)</argument_list></macro>
    <label><name pos:line="2816" pos:column="5">IVxGraphBuffersChangedEvent</name> :</label> <expr_stmt><expr pos:line="2816" pos:column="35">public <name pos:line="2816" pos:column="42">IUnknown</name>
    <block pos:line="2817" pos:column="5">{
    <expr pos:line="2818" pos:column="5">public<op:operator pos:line="2818" pos:column="11">:</op:operator>
        virtual <name pos:line="2819" pos:column="17">HRESULT</name> <name pos:line="2819" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2819" pos:column="43">OnGraphBuffersChanged</name><argument_list pos:line="2819" pos:column="64">( 
            <comment type="block" pos:line="2820" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2820" pos:column="24">IUnknown</name> <op:operator pos:line="2820" pos:column="33">*</op:operator><name pos:line="2820" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="2821" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2821" pos:column="24">IVxGraphBuffersChangedEventArgs</name> <op:operator pos:line="2821" pos:column="56">*</op:operator><name pos:line="2821" pos:column="57">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2821" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2821" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2825" pos:column="1">#<cpp:directive pos:line="2825" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2825" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2827" pos:column="5">typedef <type><struct pos:line="2827" pos:column="13">struct <name pos:line="2827" pos:column="20">IVxGraphBuffersChangedEventVtbl</name>
    <block pos:line="2828" pos:column="5">{<public type="default" pos:line="2828" pos:column="6">
        <function_decl><type><name pos:line="2829" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2831" pos:column="9">HRESULT</name></type> ( <name pos:line="2831" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2831" pos:column="37">*</type:modifier><name pos:line="2831" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2831" pos:column="54">( 
            <param><decl><type><name pos:line="2832" pos:column="13">IVxGraphBuffersChangedEvent</name> <type:modifier pos:line="2832" pos:column="41">*</type:modifier></type> <name pos:line="2832" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="2833" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2833" pos:column="24">REFIID</name></type> <name pos:line="2833" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2834" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2835" pos:column="13">__RPC__deref_out</name>  <name pos:line="2835" pos:column="31">void</name> <type:modifier pos:line="2835" pos:column="36">*</type:modifier><type:modifier pos:line="2835" pos:column="37">*</type:modifier></type><name pos:line="2835" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2837" pos:column="9">ULONG</name></type> ( <name pos:line="2837" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2837" pos:column="35">*</type:modifier><name pos:line="2837" pos:column="36">AddRef</name> )<parameter_list pos:line="2837" pos:column="44">( 
            <param><decl><type><name pos:line="2838" pos:column="13">IVxGraphBuffersChangedEvent</name> <type:modifier pos:line="2838" pos:column="41">*</type:modifier></type> <name pos:line="2838" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2840" pos:column="9">ULONG</name></type> ( <name pos:line="2840" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2840" pos:column="35">*</type:modifier><name pos:line="2840" pos:column="36">Release</name> )<parameter_list pos:line="2840" pos:column="45">( 
            <param><decl><type><name pos:line="2841" pos:column="13">IVxGraphBuffersChangedEvent</name> <type:modifier pos:line="2841" pos:column="41">*</type:modifier></type> <name pos:line="2841" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2843" pos:column="9">HRESULT</name></type> ( <name pos:line="2843" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2843" pos:column="37">*</type:modifier><name pos:line="2843" pos:column="38">OnGraphBuffersChanged</name> )<parameter_list pos:line="2843" pos:column="61">( 
            <param><decl><type><name pos:line="2844" pos:column="13">IVxGraphBuffersChangedEvent</name> <type:modifier pos:line="2844" pos:column="41">*</type:modifier></type> <name pos:line="2844" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="2845" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2845" pos:column="24">IUnknown</name> <type:modifier pos:line="2845" pos:column="33">*</type:modifier></type><name pos:line="2845" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="2846" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2846" pos:column="24">IVxGraphBuffersChangedEventArgs</name> <type:modifier pos:line="2846" pos:column="56">*</type:modifier></type><name pos:line="2846" pos:column="57">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2848" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2849" pos:column="7">IVxGraphBuffersChangedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2851" pos:column="5">interface</name></type> <name pos:line="2851" pos:column="15">IVxGraphBuffersChangedEvent</name>
    <argument_list pos:line="2852" pos:column="5">{
        <argument><expr><name pos:line="2853" pos:column="9">CONST_VTBL</name> struct <name pos:line="2853" pos:column="27">IVxGraphBuffersChangedEventVtbl</name> <op:operator pos:line="2853" pos:column="59">*</op:operator><name pos:line="2853" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2858" pos:column="1">#<cpp:directive pos:line="2858" pos:column="2">ifdef</cpp:directive> <name pos:line="2858" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2861" pos:column="1">#<cpp:directive pos:line="2861" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2861" pos:column="9">IVxGraphBuffersChangedEvent_QueryInterface</name><parameter_list pos:line="2861" pos:column="51">(<param><type><name pos:line="2861" pos:column="52">This</name></type></param>,<param><type><name pos:line="2861" pos:column="57">riid</name></type></param>,<param><type><name pos:line="2861" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2862" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2864" pos:column="1">#<cpp:directive pos:line="2864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2864" pos:column="9">IVxGraphBuffersChangedEvent_AddRef</name><parameter_list pos:line="2864" pos:column="43">(<param><type><name pos:line="2864" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2865" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2867" pos:column="1">#<cpp:directive pos:line="2867" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2867" pos:column="9">IVxGraphBuffersChangedEvent_Release</name><parameter_list pos:line="2867" pos:column="44">(<param><type><name pos:line="2867" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2868" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2871" pos:column="1">#<cpp:directive pos:line="2871" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2871" pos:column="9">IVxGraphBuffersChangedEvent_OnGraphBuffersChanged</name><parameter_list pos:line="2871" pos:column="58">(<param><type><name pos:line="2871" pos:column="59">This</name></type></param>,<param><type><name pos:line="2871" pos:column="64">pSender</name></type></param>,<param><type><name pos:line="2871" pos:column="72">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2872" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnGraphBuffersChanged(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2874" pos:column="1">#<cpp:directive pos:line="2874" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2874" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2877" pos:column="1">#<cpp:directive pos:line="2877" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2877" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2882" pos:column="1">#<cpp:directive pos:line="2882" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2882" pos:column="9">/* __IVxGraphBuffersChangedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2885" pos:column="1">#<cpp:directive pos:line="2885" pos:column="2">ifndef</cpp:directive> <name pos:line="2885" pos:column="9">__IVxGraphBufferContentTypeChangedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2886" pos:column="1">#<cpp:directive pos:line="2886" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2886" pos:column="9">__IVxGraphBufferContentTypeChangedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2888" pos:column="1">/* interface IVxGraphBufferContentTypeChangedEvent */</comment>
<comment type="block" pos:line="2889" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2892" pos:column="1">EXTERN_C</name> <specifier pos:line="2892" pos:column="10">const</specifier> <name pos:line="2892" pos:column="16">IID</name></type> <name pos:line="2892" pos:column="20">IID_IVxGraphBufferContentTypeChangedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="2894" pos:column="1">#<cpp:directive pos:line="2894" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2894" pos:column="5">defined</name><argument_list pos:line="2894" pos:column="12">(<argument><expr><name pos:line="2894" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2894" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2894" pos:column="29">!</op:operator><call><name pos:line="2894" pos:column="30">defined</name><argument_list pos:line="2894" pos:column="37">(<argument><expr><name pos:line="2894" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2896" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2896" pos:column="19">(<argument pos:line="2896" pos:column="20">"566861da-0ce4-4f47-896f-133cfb73a62f"</argument>)</argument_list></macro>
    <label><name pos:line="2897" pos:column="5">IVxGraphBufferContentTypeChangedEvent</name> :</label> <expr_stmt><expr pos:line="2897" pos:column="45">public <name pos:line="2897" pos:column="52">IUnknown</name>
    <block pos:line="2898" pos:column="5">{
    <expr pos:line="2899" pos:column="5">public<op:operator pos:line="2899" pos:column="11">:</op:operator>
        virtual <name pos:line="2900" pos:column="17">HRESULT</name> <name pos:line="2900" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2900" pos:column="43">OnGraphBufferContentTypeChanged</name><argument_list pos:line="2900" pos:column="74">( 
            <comment type="block" pos:line="2901" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2901" pos:column="24">IUnknown</name> <op:operator pos:line="2901" pos:column="33">*</op:operator><name pos:line="2901" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="2902" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="2902" pos:column="24">IVxGraphBufferContentTypeChangedEventArgs</name> <op:operator pos:line="2902" pos:column="66">*</op:operator><name pos:line="2902" pos:column="67">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2902" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2902" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2906" pos:column="1">#<cpp:directive pos:line="2906" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2906" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2908" pos:column="5">typedef <type><struct pos:line="2908" pos:column="13">struct <name pos:line="2908" pos:column="20">IVxGraphBufferContentTypeChangedEventVtbl</name>
    <block pos:line="2909" pos:column="5">{<public type="default" pos:line="2909" pos:column="6">
        <function_decl><type><name pos:line="2910" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2912" pos:column="9">HRESULT</name></type> ( <name pos:line="2912" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2912" pos:column="37">*</type:modifier><name pos:line="2912" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2912" pos:column="54">( 
            <param><decl><type><name pos:line="2913" pos:column="13">IVxGraphBufferContentTypeChangedEvent</name> <type:modifier pos:line="2913" pos:column="51">*</type:modifier></type> <name pos:line="2913" pos:column="53">This</name></decl></param>,
            <comment type="block" pos:line="2914" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2914" pos:column="24">REFIID</name></type> <name pos:line="2914" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2915" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2916" pos:column="13">__RPC__deref_out</name>  <name pos:line="2916" pos:column="31">void</name> <type:modifier pos:line="2916" pos:column="36">*</type:modifier><type:modifier pos:line="2916" pos:column="37">*</type:modifier></type><name pos:line="2916" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2918" pos:column="9">ULONG</name></type> ( <name pos:line="2918" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2918" pos:column="35">*</type:modifier><name pos:line="2918" pos:column="36">AddRef</name> )<parameter_list pos:line="2918" pos:column="44">( 
            <param><decl><type><name pos:line="2919" pos:column="13">IVxGraphBufferContentTypeChangedEvent</name> <type:modifier pos:line="2919" pos:column="51">*</type:modifier></type> <name pos:line="2919" pos:column="53">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2921" pos:column="9">ULONG</name></type> ( <name pos:line="2921" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2921" pos:column="35">*</type:modifier><name pos:line="2921" pos:column="36">Release</name> )<parameter_list pos:line="2921" pos:column="45">( 
            <param><decl><type><name pos:line="2922" pos:column="13">IVxGraphBufferContentTypeChangedEvent</name> <type:modifier pos:line="2922" pos:column="51">*</type:modifier></type> <name pos:line="2922" pos:column="53">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2924" pos:column="9">HRESULT</name></type> ( <name pos:line="2924" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2924" pos:column="37">*</type:modifier><name pos:line="2924" pos:column="38">OnGraphBufferContentTypeChanged</name> )<parameter_list pos:line="2924" pos:column="71">( 
            <param><decl><type><name pos:line="2925" pos:column="13">IVxGraphBufferContentTypeChangedEvent</name> <type:modifier pos:line="2925" pos:column="51">*</type:modifier></type> <name pos:line="2925" pos:column="53">This</name></decl></param>,
            <comment type="block" pos:line="2926" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2926" pos:column="24">IUnknown</name> <type:modifier pos:line="2926" pos:column="33">*</type:modifier></type><name pos:line="2926" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="2927" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2927" pos:column="24">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="2927" pos:column="66">*</type:modifier></type><name pos:line="2927" pos:column="67">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2929" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2930" pos:column="7">IVxGraphBufferContentTypeChangedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2932" pos:column="5">interface</name></type> <name pos:line="2932" pos:column="15">IVxGraphBufferContentTypeChangedEvent</name>
    <argument_list pos:line="2933" pos:column="5">{
        <argument><expr><name pos:line="2934" pos:column="9">CONST_VTBL</name> struct <name pos:line="2934" pos:column="27">IVxGraphBufferContentTypeChangedEventVtbl</name> <op:operator pos:line="2934" pos:column="69">*</op:operator><name pos:line="2934" pos:column="70">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2939" pos:column="1">#<cpp:directive pos:line="2939" pos:column="2">ifdef</cpp:directive> <name pos:line="2939" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2942" pos:column="1">#<cpp:directive pos:line="2942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2942" pos:column="9">IVxGraphBufferContentTypeChangedEvent_QueryInterface</name><parameter_list pos:line="2942" pos:column="61">(<param><type><name pos:line="2942" pos:column="62">This</name></type></param>,<param><type><name pos:line="2942" pos:column="67">riid</name></type></param>,<param><type><name pos:line="2942" pos:column="72">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2943" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2945" pos:column="1">#<cpp:directive pos:line="2945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2945" pos:column="9">IVxGraphBufferContentTypeChangedEvent_AddRef</name><parameter_list pos:line="2945" pos:column="53">(<param><type><name pos:line="2945" pos:column="54">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2946" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2948" pos:column="1">#<cpp:directive pos:line="2948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2948" pos:column="9">IVxGraphBufferContentTypeChangedEvent_Release</name><parameter_list pos:line="2948" pos:column="54">(<param><type><name pos:line="2948" pos:column="55">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2949" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2952" pos:column="1">#<cpp:directive pos:line="2952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2952" pos:column="9">IVxGraphBufferContentTypeChangedEvent_OnGraphBufferContentTypeChanged</name><parameter_list pos:line="2952" pos:column="78">(<param><type><name pos:line="2952" pos:column="79">This</name></type></param>,<param><type><name pos:line="2952" pos:column="84">pSender</name></type></param>,<param><type><name pos:line="2952" pos:column="92">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2953" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnGraphBufferContentTypeChanged(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2955" pos:column="1">#<cpp:directive pos:line="2955" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2955" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2958" pos:column="1">#<cpp:directive pos:line="2958" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2958" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2963" pos:column="1">#<cpp:directive pos:line="2963" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2963" pos:column="9">/* __IVxGraphBufferContentTypeChangedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2966" pos:column="1">#<cpp:directive pos:line="2966" pos:column="2">ifndef</cpp:directive> <name pos:line="2966" pos:column="9">__IEnumeratorIVxTextSnapshot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2967" pos:column="1">#<cpp:directive pos:line="2967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2967" pos:column="9">__IEnumeratorIVxTextSnapshot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2969" pos:column="1">/* interface IEnumeratorIVxTextSnapshot */</comment>
<comment type="block" pos:line="2970" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2973" pos:column="1">EXTERN_C</name> <specifier pos:line="2973" pos:column="10">const</specifier> <name pos:line="2973" pos:column="16">IID</name></type> <name pos:line="2973" pos:column="20">IID_IEnumeratorIVxTextSnapshot</name></decl>;</decl_stmt>

<cpp:if pos:line="2975" pos:column="1">#<cpp:directive pos:line="2975" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2975" pos:column="5">defined</name><argument_list pos:line="2975" pos:column="12">(<argument><expr><name pos:line="2975" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2975" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2975" pos:column="29">!</op:operator><call><name pos:line="2975" pos:column="30">defined</name><argument_list pos:line="2975" pos:column="37">(<argument><expr><name pos:line="2975" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2977" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2977" pos:column="19">(<argument pos:line="2977" pos:column="20">"13dc5d4f-7e53-4180-8779-1364b6ae8322"</argument>)</argument_list></macro>
    <label><name pos:line="2978" pos:column="5">IEnumeratorIVxTextSnapshot</name> :</label> <expr_stmt><expr pos:line="2978" pos:column="34">public <name pos:line="2978" pos:column="41">IUnknown</name>
    <block pos:line="2979" pos:column="5">{
    <expr pos:line="2980" pos:column="5">public<op:operator pos:line="2980" pos:column="11">:</op:operator>
        virtual <name pos:line="2981" pos:column="17">HRESULT</name> <name pos:line="2981" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2981" pos:column="43">GetCurrent</name><argument_list pos:line="2981" pos:column="53">( 
            <comment type="block" pos:line="2982" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2982" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="2982" pos:column="49">*</op:operator><op:operator pos:line="2982" pos:column="50">*</op:operator><name pos:line="2982" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2982" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2982" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="2984" pos:column="9">virtual <name pos:line="2984" pos:column="17">HRESULT</name> <name pos:line="2984" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2984" pos:column="43">MoveNext</name><argument_list pos:line="2984" pos:column="51">( 
            <comment type="block" pos:line="2985" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2985" pos:column="33">BOOL</name> <op:operator pos:line="2985" pos:column="38">*</op:operator><name pos:line="2985" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="2985" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="2985" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="2987" pos:column="9">virtual <name pos:line="2987" pos:column="17">HRESULT</name> <name pos:line="2987" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2987" pos:column="43">Reset</name><argument_list pos:line="2987" pos:column="48">( <argument><expr><name pos:line="2987" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2987" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2987" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2991" pos:column="1">#<cpp:directive pos:line="2991" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2991" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2993" pos:column="5">typedef <type><struct pos:line="2993" pos:column="13">struct <name pos:line="2993" pos:column="20">IEnumeratorIVxTextSnapshotVtbl</name>
    <block pos:line="2994" pos:column="5">{<public type="default" pos:line="2994" pos:column="6">
        <function_decl><type><name pos:line="2995" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2997" pos:column="9">HRESULT</name></type> ( <name pos:line="2997" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2997" pos:column="37">*</type:modifier><name pos:line="2997" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2997" pos:column="54">( 
            <param><decl><type><name pos:line="2998" pos:column="13">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="2998" pos:column="40">*</type:modifier></type> <name pos:line="2998" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="2999" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2999" pos:column="24">REFIID</name></type> <name pos:line="2999" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3000" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3001" pos:column="13">__RPC__deref_out</name>  <name pos:line="3001" pos:column="31">void</name> <type:modifier pos:line="3001" pos:column="36">*</type:modifier><type:modifier pos:line="3001" pos:column="37">*</type:modifier></type><name pos:line="3001" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3003" pos:column="9">ULONG</name></type> ( <name pos:line="3003" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3003" pos:column="35">*</type:modifier><name pos:line="3003" pos:column="36">AddRef</name> )<parameter_list pos:line="3003" pos:column="44">( 
            <param><decl><type><name pos:line="3004" pos:column="13">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="3004" pos:column="40">*</type:modifier></type> <name pos:line="3004" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3006" pos:column="9">ULONG</name></type> ( <name pos:line="3006" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3006" pos:column="35">*</type:modifier><name pos:line="3006" pos:column="36">Release</name> )<parameter_list pos:line="3006" pos:column="45">( 
            <param><decl><type><name pos:line="3007" pos:column="13">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="3007" pos:column="40">*</type:modifier></type> <name pos:line="3007" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3009" pos:column="9">HRESULT</name></type> ( <name pos:line="3009" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3009" pos:column="37">*</type:modifier><name pos:line="3009" pos:column="38">GetCurrent</name> )<parameter_list pos:line="3009" pos:column="50">( 
            <param><decl><type><name pos:line="3010" pos:column="13">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="3010" pos:column="40">*</type:modifier></type> <name pos:line="3010" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3011" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3011" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="3011" pos:column="49">*</type:modifier><type:modifier pos:line="3011" pos:column="50">*</type:modifier></type><name pos:line="3011" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3013" pos:column="9">HRESULT</name></type> ( <name pos:line="3013" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3013" pos:column="37">*</type:modifier><name pos:line="3013" pos:column="38">MoveNext</name> )<parameter_list pos:line="3013" pos:column="48">( 
            <param><decl><type><name pos:line="3014" pos:column="13">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="3014" pos:column="40">*</type:modifier></type> <name pos:line="3014" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3015" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3015" pos:column="33">BOOL</name> <type:modifier pos:line="3015" pos:column="38">*</type:modifier></type><name pos:line="3015" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3017" pos:column="9">HRESULT</name></type> ( <name pos:line="3017" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3017" pos:column="37">*</type:modifier><name pos:line="3017" pos:column="38">Reset</name> )<parameter_list pos:line="3017" pos:column="45">( 
            <param><decl><type><name pos:line="3018" pos:column="13">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="3018" pos:column="40">*</type:modifier></type> <name pos:line="3018" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3020" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3021" pos:column="7">IEnumeratorIVxTextSnapshotVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3023" pos:column="5">interface</name></type> <name pos:line="3023" pos:column="15">IEnumeratorIVxTextSnapshot</name>
    <argument_list pos:line="3024" pos:column="5">{
        <argument><expr><name pos:line="3025" pos:column="9">CONST_VTBL</name> struct <name pos:line="3025" pos:column="27">IEnumeratorIVxTextSnapshotVtbl</name> <op:operator pos:line="3025" pos:column="58">*</op:operator><name pos:line="3025" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3030" pos:column="1">#<cpp:directive pos:line="3030" pos:column="2">ifdef</cpp:directive> <name pos:line="3030" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3033" pos:column="1">#<cpp:directive pos:line="3033" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3033" pos:column="9">IEnumeratorIVxTextSnapshot_QueryInterface</name><parameter_list pos:line="3033" pos:column="50">(<param><type><name pos:line="3033" pos:column="51">This</name></type></param>,<param><type><name pos:line="3033" pos:column="56">riid</name></type></param>,<param><type><name pos:line="3033" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3034" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3036" pos:column="1">#<cpp:directive pos:line="3036" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3036" pos:column="9">IEnumeratorIVxTextSnapshot_AddRef</name><parameter_list pos:line="3036" pos:column="42">(<param><type><name pos:line="3036" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3037" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3039" pos:column="1">#<cpp:directive pos:line="3039" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3039" pos:column="9">IEnumeratorIVxTextSnapshot_Release</name><parameter_list pos:line="3039" pos:column="43">(<param><type><name pos:line="3039" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3040" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3043" pos:column="1">#<cpp:directive pos:line="3043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3043" pos:column="9">IEnumeratorIVxTextSnapshot_GetCurrent</name><parameter_list pos:line="3043" pos:column="46">(<param><type><name pos:line="3043" pos:column="47">This</name></type></param>,<param><type><name pos:line="3043" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3044" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3046" pos:column="1">#<cpp:directive pos:line="3046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3046" pos:column="9">IEnumeratorIVxTextSnapshot_MoveNext</name><parameter_list pos:line="3046" pos:column="44">(<param><type><name pos:line="3046" pos:column="45">This</name></type></param>,<param><type><name pos:line="3046" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3047" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3049" pos:column="1">#<cpp:directive pos:line="3049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3049" pos:column="9">IEnumeratorIVxTextSnapshot_Reset</name><parameter_list pos:line="3049" pos:column="41">(<param><type><name pos:line="3049" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3050" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3052" pos:column="1">#<cpp:directive pos:line="3052" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3052" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3055" pos:column="1">#<cpp:directive pos:line="3055" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3055" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3060" pos:column="1">#<cpp:directive pos:line="3060" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3060" pos:column="9">/* __IEnumeratorIVxTextSnapshot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3063" pos:column="1">#<cpp:directive pos:line="3063" pos:column="2">ifndef</cpp:directive> <name pos:line="3063" pos:column="9">__IListIVxTextSnapshot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3064" pos:column="1">#<cpp:directive pos:line="3064" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3064" pos:column="9">__IListIVxTextSnapshot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3066" pos:column="1">/* interface IListIVxTextSnapshot */</comment>
<comment type="block" pos:line="3067" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3070" pos:column="1">EXTERN_C</name> <specifier pos:line="3070" pos:column="10">const</specifier> <name pos:line="3070" pos:column="16">IID</name></type> <name pos:line="3070" pos:column="20">IID_IListIVxTextSnapshot</name></decl>;</decl_stmt>

<cpp:if pos:line="3072" pos:column="1">#<cpp:directive pos:line="3072" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3072" pos:column="5">defined</name><argument_list pos:line="3072" pos:column="12">(<argument><expr><name pos:line="3072" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3072" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3072" pos:column="29">!</op:operator><call><name pos:line="3072" pos:column="30">defined</name><argument_list pos:line="3072" pos:column="37">(<argument><expr><name pos:line="3072" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3074" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3074" pos:column="19">(<argument pos:line="3074" pos:column="20">"b886572e-8f74-43c8-b8c1-f8bc0bdb5d1c"</argument>)</argument_list></macro>
    <label><name pos:line="3075" pos:column="5">IListIVxTextSnapshot</name> :</label> <expr_stmt><expr pos:line="3075" pos:column="28">public <name pos:line="3075" pos:column="35">IUnknown</name>
    <block pos:line="3076" pos:column="5">{
    <expr pos:line="3077" pos:column="5">public<op:operator pos:line="3077" pos:column="11">:</op:operator>
        virtual <name pos:line="3078" pos:column="17">HRESULT</name> <name pos:line="3078" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3078" pos:column="43">GetCount</name><argument_list pos:line="3078" pos:column="51">( 
            <comment type="block" pos:line="3079" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3079" pos:column="33">int</name> <op:operator pos:line="3079" pos:column="37">*</op:operator><name pos:line="3079" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3079" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3079" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3081" pos:column="9">virtual <name pos:line="3081" pos:column="17">HRESULT</name> <name pos:line="3081" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3081" pos:column="43">GetElement</name><argument_list pos:line="3081" pos:column="53">( 
            <comment type="block" pos:line="3082" pos:column="13">/* [in] */</comment> <argument pos:line="3082" pos:column="24">int index</argument>,
            <comment type="block" pos:line="3083" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3083" pos:column="33">IVxTextSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="3083" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="3083" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="3085" pos:column="9">virtual <name pos:line="3085" pos:column="17">HRESULT</name> <name pos:line="3085" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3085" pos:column="43">GetEnumerator</name><argument_list pos:line="3085" pos:column="56">( 
            <comment type="block" pos:line="3086" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3086" pos:column="33">IEnumeratorIVxTextSnapshot</name> <op:operator pos:line="3086" pos:column="60">*</op:operator><op:operator pos:line="3086" pos:column="61">*</op:operator><name pos:line="3086" pos:column="62">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3086" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="3086" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3090" pos:column="1">#<cpp:directive pos:line="3090" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3090" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3092" pos:column="5">typedef <type><struct pos:line="3092" pos:column="13">struct <name pos:line="3092" pos:column="20">IListIVxTextSnapshotVtbl</name>
    <block pos:line="3093" pos:column="5">{<public type="default" pos:line="3093" pos:column="6">
        <function_decl><type><name pos:line="3094" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3096" pos:column="9">HRESULT</name></type> ( <name pos:line="3096" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3096" pos:column="37">*</type:modifier><name pos:line="3096" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3096" pos:column="54">( 
            <param><decl><type><name pos:line="3097" pos:column="13">IListIVxTextSnapshot</name> <type:modifier pos:line="3097" pos:column="34">*</type:modifier></type> <name pos:line="3097" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3098" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3098" pos:column="24">REFIID</name></type> <name pos:line="3098" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3099" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3100" pos:column="13">__RPC__deref_out</name>  <name pos:line="3100" pos:column="31">void</name> <type:modifier pos:line="3100" pos:column="36">*</type:modifier><type:modifier pos:line="3100" pos:column="37">*</type:modifier></type><name pos:line="3100" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3102" pos:column="9">ULONG</name></type> ( <name pos:line="3102" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3102" pos:column="35">*</type:modifier><name pos:line="3102" pos:column="36">AddRef</name> )<parameter_list pos:line="3102" pos:column="44">( 
            <param><decl><type><name pos:line="3103" pos:column="13">IListIVxTextSnapshot</name> <type:modifier pos:line="3103" pos:column="34">*</type:modifier></type> <name pos:line="3103" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3105" pos:column="9">ULONG</name></type> ( <name pos:line="3105" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3105" pos:column="35">*</type:modifier><name pos:line="3105" pos:column="36">Release</name> )<parameter_list pos:line="3105" pos:column="45">( 
            <param><decl><type><name pos:line="3106" pos:column="13">IListIVxTextSnapshot</name> <type:modifier pos:line="3106" pos:column="34">*</type:modifier></type> <name pos:line="3106" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3108" pos:column="9">HRESULT</name></type> ( <name pos:line="3108" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3108" pos:column="37">*</type:modifier><name pos:line="3108" pos:column="38">GetCount</name> )<parameter_list pos:line="3108" pos:column="48">( 
            <param><decl><type><name pos:line="3109" pos:column="13">IListIVxTextSnapshot</name> <type:modifier pos:line="3109" pos:column="34">*</type:modifier></type> <name pos:line="3109" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3110" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3110" pos:column="33">int</name> <type:modifier pos:line="3110" pos:column="37">*</type:modifier></type><name pos:line="3110" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3112" pos:column="9">HRESULT</name></type> ( <name pos:line="3112" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3112" pos:column="37">*</type:modifier><name pos:line="3112" pos:column="38">GetElement</name> )<parameter_list pos:line="3112" pos:column="50">( 
            <param><decl><type><name pos:line="3113" pos:column="13">IListIVxTextSnapshot</name> <type:modifier pos:line="3113" pos:column="34">*</type:modifier></type> <name pos:line="3113" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3114" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3114" pos:column="24">int</name></type> <name pos:line="3114" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="3115" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3115" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="3115" pos:column="49">*</type:modifier><type:modifier pos:line="3115" pos:column="50">*</type:modifier></type><name pos:line="3115" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3117" pos:column="9">HRESULT</name></type> ( <name pos:line="3117" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3117" pos:column="37">*</type:modifier><name pos:line="3117" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="3117" pos:column="53">( 
            <param><decl><type><name pos:line="3118" pos:column="13">IListIVxTextSnapshot</name> <type:modifier pos:line="3118" pos:column="34">*</type:modifier></type> <name pos:line="3118" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3119" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3119" pos:column="33">IEnumeratorIVxTextSnapshot</name> <type:modifier pos:line="3119" pos:column="60">*</type:modifier><type:modifier pos:line="3119" pos:column="61">*</type:modifier></type><name pos:line="3119" pos:column="62">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3121" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3122" pos:column="7">IListIVxTextSnapshotVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3124" pos:column="5">interface</name></type> <name pos:line="3124" pos:column="15">IListIVxTextSnapshot</name>
    <argument_list pos:line="3125" pos:column="5">{
        <argument><expr><name pos:line="3126" pos:column="9">CONST_VTBL</name> struct <name pos:line="3126" pos:column="27">IListIVxTextSnapshotVtbl</name> <op:operator pos:line="3126" pos:column="52">*</op:operator><name pos:line="3126" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3131" pos:column="1">#<cpp:directive pos:line="3131" pos:column="2">ifdef</cpp:directive> <name pos:line="3131" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3134" pos:column="1">#<cpp:directive pos:line="3134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3134" pos:column="9">IListIVxTextSnapshot_QueryInterface</name><parameter_list pos:line="3134" pos:column="44">(<param><type><name pos:line="3134" pos:column="45">This</name></type></param>,<param><type><name pos:line="3134" pos:column="50">riid</name></type></param>,<param><type><name pos:line="3134" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3135" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3137" pos:column="1">#<cpp:directive pos:line="3137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3137" pos:column="9">IListIVxTextSnapshot_AddRef</name><parameter_list pos:line="3137" pos:column="36">(<param><type><name pos:line="3137" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3138" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3140" pos:column="1">#<cpp:directive pos:line="3140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3140" pos:column="9">IListIVxTextSnapshot_Release</name><parameter_list pos:line="3140" pos:column="37">(<param><type><name pos:line="3140" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3141" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3144" pos:column="1">#<cpp:directive pos:line="3144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3144" pos:column="9">IListIVxTextSnapshot_GetCount</name><parameter_list pos:line="3144" pos:column="38">(<param><type><name pos:line="3144" pos:column="39">This</name></type></param>,<param><type><name pos:line="3144" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3145" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3147" pos:column="1">#<cpp:directive pos:line="3147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3147" pos:column="9">IListIVxTextSnapshot_GetElement</name><parameter_list pos:line="3147" pos:column="40">(<param><type><name pos:line="3147" pos:column="41">This</name></type></param>,<param><type><name pos:line="3147" pos:column="46">index</name></type></param>,<param><type><name pos:line="3147" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3148" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3150" pos:column="1">#<cpp:directive pos:line="3150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3150" pos:column="9">IListIVxTextSnapshot_GetEnumerator</name><parameter_list pos:line="3150" pos:column="43">(<param><type><name pos:line="3150" pos:column="44">This</name></type></param>,<param><type><name pos:line="3150" pos:column="49">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3151" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3153" pos:column="1">#<cpp:directive pos:line="3153" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3153" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3156" pos:column="1">#<cpp:directive pos:line="3156" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3156" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3161" pos:column="1">#<cpp:directive pos:line="3161" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3161" pos:column="9">/* __IListIVxTextSnapshot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3164" pos:column="1">#<cpp:directive pos:line="3164" pos:column="2">ifndef</cpp:directive> <name pos:line="3164" pos:column="9">__IEnumeratorVxSnapshotSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3165" pos:column="1">#<cpp:directive pos:line="3165" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3165" pos:column="9">__IEnumeratorVxSnapshotSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3167" pos:column="1">/* interface IEnumeratorVxSnapshotSpan */</comment>
<comment type="block" pos:line="3168" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3171" pos:column="1">EXTERN_C</name> <specifier pos:line="3171" pos:column="10">const</specifier> <name pos:line="3171" pos:column="16">IID</name></type> <name pos:line="3171" pos:column="20">IID_IEnumeratorVxSnapshotSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="3173" pos:column="1">#<cpp:directive pos:line="3173" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3173" pos:column="5">defined</name><argument_list pos:line="3173" pos:column="12">(<argument><expr><name pos:line="3173" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3173" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3173" pos:column="29">!</op:operator><call><name pos:line="3173" pos:column="30">defined</name><argument_list pos:line="3173" pos:column="37">(<argument><expr><name pos:line="3173" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3175" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3175" pos:column="19">(<argument pos:line="3175" pos:column="20">"fd6cb9a7-f2c2-450d-b14e-756b5a013591"</argument>)</argument_list></macro>
    <label><name pos:line="3176" pos:column="5">IEnumeratorVxSnapshotSpan</name> :</label> <expr_stmt><expr pos:line="3176" pos:column="33">public <name pos:line="3176" pos:column="40">IUnknown</name>
    <block pos:line="3177" pos:column="5">{
    <expr pos:line="3178" pos:column="5">public<op:operator pos:line="3178" pos:column="11">:</op:operator>
        virtual <name pos:line="3179" pos:column="17">HRESULT</name> <name pos:line="3179" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3179" pos:column="43">GetCurrent</name><argument_list pos:line="3179" pos:column="53">( 
            <comment type="block" pos:line="3180" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3180" pos:column="33">VxSnapshotSpan</name> <op:operator pos:line="3180" pos:column="48">*</op:operator><name pos:line="3180" pos:column="49">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3180" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="3180" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="3182" pos:column="9">virtual <name pos:line="3182" pos:column="17">HRESULT</name> <name pos:line="3182" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3182" pos:column="43">MoveNext</name><argument_list pos:line="3182" pos:column="51">( 
            <comment type="block" pos:line="3183" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3183" pos:column="33">BOOL</name> <op:operator pos:line="3183" pos:column="38">*</op:operator><name pos:line="3183" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3183" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3183" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="3185" pos:column="9">virtual <name pos:line="3185" pos:column="17">HRESULT</name> <name pos:line="3185" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3185" pos:column="43">Reset</name><argument_list pos:line="3185" pos:column="48">( <argument><expr><name pos:line="3185" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3185" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3185" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3189" pos:column="1">#<cpp:directive pos:line="3189" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3189" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3191" pos:column="5">typedef <type><struct pos:line="3191" pos:column="13">struct <name pos:line="3191" pos:column="20">IEnumeratorVxSnapshotSpanVtbl</name>
    <block pos:line="3192" pos:column="5">{<public type="default" pos:line="3192" pos:column="6">
        <function_decl><type><name pos:line="3193" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3195" pos:column="9">HRESULT</name></type> ( <name pos:line="3195" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3195" pos:column="37">*</type:modifier><name pos:line="3195" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3195" pos:column="54">( 
            <param><decl><type><name pos:line="3196" pos:column="13">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3196" pos:column="39">*</type:modifier></type> <name pos:line="3196" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="3197" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3197" pos:column="24">REFIID</name></type> <name pos:line="3197" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3198" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3199" pos:column="13">__RPC__deref_out</name>  <name pos:line="3199" pos:column="31">void</name> <type:modifier pos:line="3199" pos:column="36">*</type:modifier><type:modifier pos:line="3199" pos:column="37">*</type:modifier></type><name pos:line="3199" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3201" pos:column="9">ULONG</name></type> ( <name pos:line="3201" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3201" pos:column="35">*</type:modifier><name pos:line="3201" pos:column="36">AddRef</name> )<parameter_list pos:line="3201" pos:column="44">( 
            <param><decl><type><name pos:line="3202" pos:column="13">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3202" pos:column="39">*</type:modifier></type> <name pos:line="3202" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3204" pos:column="9">ULONG</name></type> ( <name pos:line="3204" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3204" pos:column="35">*</type:modifier><name pos:line="3204" pos:column="36">Release</name> )<parameter_list pos:line="3204" pos:column="45">( 
            <param><decl><type><name pos:line="3205" pos:column="13">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3205" pos:column="39">*</type:modifier></type> <name pos:line="3205" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3207" pos:column="9">HRESULT</name></type> ( <name pos:line="3207" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3207" pos:column="37">*</type:modifier><name pos:line="3207" pos:column="38">GetCurrent</name> )<parameter_list pos:line="3207" pos:column="50">( 
            <param><decl><type><name pos:line="3208" pos:column="13">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3208" pos:column="39">*</type:modifier></type> <name pos:line="3208" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="3209" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3209" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="3209" pos:column="48">*</type:modifier></type><name pos:line="3209" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3211" pos:column="9">HRESULT</name></type> ( <name pos:line="3211" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3211" pos:column="37">*</type:modifier><name pos:line="3211" pos:column="38">MoveNext</name> )<parameter_list pos:line="3211" pos:column="48">( 
            <param><decl><type><name pos:line="3212" pos:column="13">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3212" pos:column="39">*</type:modifier></type> <name pos:line="3212" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="3213" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3213" pos:column="33">BOOL</name> <type:modifier pos:line="3213" pos:column="38">*</type:modifier></type><name pos:line="3213" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3215" pos:column="9">HRESULT</name></type> ( <name pos:line="3215" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3215" pos:column="37">*</type:modifier><name pos:line="3215" pos:column="38">Reset</name> )<parameter_list pos:line="3215" pos:column="45">( 
            <param><decl><type><name pos:line="3216" pos:column="13">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3216" pos:column="39">*</type:modifier></type> <name pos:line="3216" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3218" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3219" pos:column="7">IEnumeratorVxSnapshotSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3221" pos:column="5">interface</name></type> <name pos:line="3221" pos:column="15">IEnumeratorVxSnapshotSpan</name>
    <argument_list pos:line="3222" pos:column="5">{
        <argument><expr><name pos:line="3223" pos:column="9">CONST_VTBL</name> struct <name pos:line="3223" pos:column="27">IEnumeratorVxSnapshotSpanVtbl</name> <op:operator pos:line="3223" pos:column="57">*</op:operator><name pos:line="3223" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3228" pos:column="1">#<cpp:directive pos:line="3228" pos:column="2">ifdef</cpp:directive> <name pos:line="3228" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3231" pos:column="1">#<cpp:directive pos:line="3231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3231" pos:column="9">IEnumeratorVxSnapshotSpan_QueryInterface</name><parameter_list pos:line="3231" pos:column="49">(<param><type><name pos:line="3231" pos:column="50">This</name></type></param>,<param><type><name pos:line="3231" pos:column="55">riid</name></type></param>,<param><type><name pos:line="3231" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3232" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3234" pos:column="1">#<cpp:directive pos:line="3234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3234" pos:column="9">IEnumeratorVxSnapshotSpan_AddRef</name><parameter_list pos:line="3234" pos:column="41">(<param><type><name pos:line="3234" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3235" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3237" pos:column="1">#<cpp:directive pos:line="3237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3237" pos:column="9">IEnumeratorVxSnapshotSpan_Release</name><parameter_list pos:line="3237" pos:column="42">(<param><type><name pos:line="3237" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3238" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3241" pos:column="1">#<cpp:directive pos:line="3241" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3241" pos:column="9">IEnumeratorVxSnapshotSpan_GetCurrent</name><parameter_list pos:line="3241" pos:column="45">(<param><type><name pos:line="3241" pos:column="46">This</name></type></param>,<param><type><name pos:line="3241" pos:column="51">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3242" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3244" pos:column="1">#<cpp:directive pos:line="3244" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3244" pos:column="9">IEnumeratorVxSnapshotSpan_MoveNext</name><parameter_list pos:line="3244" pos:column="43">(<param><type><name pos:line="3244" pos:column="44">This</name></type></param>,<param><type><name pos:line="3244" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3245" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3247" pos:column="1">#<cpp:directive pos:line="3247" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3247" pos:column="9">IEnumeratorVxSnapshotSpan_Reset</name><parameter_list pos:line="3247" pos:column="40">(<param><type><name pos:line="3247" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3248" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3250" pos:column="1">#<cpp:directive pos:line="3250" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3250" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3253" pos:column="1">#<cpp:directive pos:line="3253" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3253" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3258" pos:column="1">#<cpp:directive pos:line="3258" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3258" pos:column="9">/* __IEnumeratorVxSnapshotSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3261" pos:column="1">#<cpp:directive pos:line="3261" pos:column="2">ifndef</cpp:directive> <name pos:line="3261" pos:column="9">__IListVxSnapshotSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3262" pos:column="1">#<cpp:directive pos:line="3262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3262" pos:column="9">__IListVxSnapshotSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3264" pos:column="1">/* interface IListVxSnapshotSpan */</comment>
<comment type="block" pos:line="3265" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3268" pos:column="1">EXTERN_C</name> <specifier pos:line="3268" pos:column="10">const</specifier> <name pos:line="3268" pos:column="16">IID</name></type> <name pos:line="3268" pos:column="20">IID_IListVxSnapshotSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="3270" pos:column="1">#<cpp:directive pos:line="3270" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3270" pos:column="5">defined</name><argument_list pos:line="3270" pos:column="12">(<argument><expr><name pos:line="3270" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3270" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3270" pos:column="29">!</op:operator><call><name pos:line="3270" pos:column="30">defined</name><argument_list pos:line="3270" pos:column="37">(<argument><expr><name pos:line="3270" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3272" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3272" pos:column="19">(<argument pos:line="3272" pos:column="20">"75970b1d-36b9-419b-bf43-ec2a66776955"</argument>)</argument_list></macro>
    <label><name pos:line="3273" pos:column="5">IListVxSnapshotSpan</name> :</label> <expr_stmt><expr pos:line="3273" pos:column="27">public <name pos:line="3273" pos:column="34">IUnknown</name>
    <block pos:line="3274" pos:column="5">{
    <expr pos:line="3275" pos:column="5">public<op:operator pos:line="3275" pos:column="11">:</op:operator>
        virtual <name pos:line="3276" pos:column="17">HRESULT</name> <name pos:line="3276" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3276" pos:column="43">GetCount</name><argument_list pos:line="3276" pos:column="51">( 
            <comment type="block" pos:line="3277" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3277" pos:column="33">int</name> <op:operator pos:line="3277" pos:column="37">*</op:operator><name pos:line="3277" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3277" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3277" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3279" pos:column="9">virtual <name pos:line="3279" pos:column="17">HRESULT</name> <name pos:line="3279" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3279" pos:column="43">GetElement</name><argument_list pos:line="3279" pos:column="53">( 
            <comment type="block" pos:line="3280" pos:column="13">/* [in] */</comment> <argument pos:line="3280" pos:column="24">int index</argument>,
            <comment type="block" pos:line="3281" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3281" pos:column="33">VxSnapshotSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="3281" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="3281" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="3283" pos:column="9">virtual <name pos:line="3283" pos:column="17">HRESULT</name> <name pos:line="3283" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3283" pos:column="43">GetEnumerator</name><argument_list pos:line="3283" pos:column="56">( 
            <comment type="block" pos:line="3284" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3284" pos:column="33">IEnumeratorVxSnapshotSpan</name> <op:operator pos:line="3284" pos:column="59">*</op:operator><op:operator pos:line="3284" pos:column="60">*</op:operator><name pos:line="3284" pos:column="61">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3284" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="3284" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3288" pos:column="1">#<cpp:directive pos:line="3288" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3288" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3290" pos:column="5">typedef <type><struct pos:line="3290" pos:column="13">struct <name pos:line="3290" pos:column="20">IListVxSnapshotSpanVtbl</name>
    <block pos:line="3291" pos:column="5">{<public type="default" pos:line="3291" pos:column="6">
        <function_decl><type><name pos:line="3292" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3294" pos:column="9">HRESULT</name></type> ( <name pos:line="3294" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3294" pos:column="37">*</type:modifier><name pos:line="3294" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3294" pos:column="54">( 
            <param><decl><type><name pos:line="3295" pos:column="13">IListVxSnapshotSpan</name> <type:modifier pos:line="3295" pos:column="33">*</type:modifier></type> <name pos:line="3295" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3296" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3296" pos:column="24">REFIID</name></type> <name pos:line="3296" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3297" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3298" pos:column="13">__RPC__deref_out</name>  <name pos:line="3298" pos:column="31">void</name> <type:modifier pos:line="3298" pos:column="36">*</type:modifier><type:modifier pos:line="3298" pos:column="37">*</type:modifier></type><name pos:line="3298" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3300" pos:column="9">ULONG</name></type> ( <name pos:line="3300" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3300" pos:column="35">*</type:modifier><name pos:line="3300" pos:column="36">AddRef</name> )<parameter_list pos:line="3300" pos:column="44">( 
            <param><decl><type><name pos:line="3301" pos:column="13">IListVxSnapshotSpan</name> <type:modifier pos:line="3301" pos:column="33">*</type:modifier></type> <name pos:line="3301" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3303" pos:column="9">ULONG</name></type> ( <name pos:line="3303" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3303" pos:column="35">*</type:modifier><name pos:line="3303" pos:column="36">Release</name> )<parameter_list pos:line="3303" pos:column="45">( 
            <param><decl><type><name pos:line="3304" pos:column="13">IListVxSnapshotSpan</name> <type:modifier pos:line="3304" pos:column="33">*</type:modifier></type> <name pos:line="3304" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3306" pos:column="9">HRESULT</name></type> ( <name pos:line="3306" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3306" pos:column="37">*</type:modifier><name pos:line="3306" pos:column="38">GetCount</name> )<parameter_list pos:line="3306" pos:column="48">( 
            <param><decl><type><name pos:line="3307" pos:column="13">IListVxSnapshotSpan</name> <type:modifier pos:line="3307" pos:column="33">*</type:modifier></type> <name pos:line="3307" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3308" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3308" pos:column="33">int</name> <type:modifier pos:line="3308" pos:column="37">*</type:modifier></type><name pos:line="3308" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3310" pos:column="9">HRESULT</name></type> ( <name pos:line="3310" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3310" pos:column="37">*</type:modifier><name pos:line="3310" pos:column="38">GetElement</name> )<parameter_list pos:line="3310" pos:column="50">( 
            <param><decl><type><name pos:line="3311" pos:column="13">IListVxSnapshotSpan</name> <type:modifier pos:line="3311" pos:column="33">*</type:modifier></type> <name pos:line="3311" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3312" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3312" pos:column="24">int</name></type> <name pos:line="3312" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="3313" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3313" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="3313" pos:column="48">*</type:modifier></type><name pos:line="3313" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3315" pos:column="9">HRESULT</name></type> ( <name pos:line="3315" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3315" pos:column="37">*</type:modifier><name pos:line="3315" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="3315" pos:column="53">( 
            <param><decl><type><name pos:line="3316" pos:column="13">IListVxSnapshotSpan</name> <type:modifier pos:line="3316" pos:column="33">*</type:modifier></type> <name pos:line="3316" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3317" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3317" pos:column="33">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="3317" pos:column="59">*</type:modifier><type:modifier pos:line="3317" pos:column="60">*</type:modifier></type><name pos:line="3317" pos:column="61">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3319" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3320" pos:column="7">IListVxSnapshotSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3322" pos:column="5">interface</name></type> <name pos:line="3322" pos:column="15">IListVxSnapshotSpan</name>
    <argument_list pos:line="3323" pos:column="5">{
        <argument><expr><name pos:line="3324" pos:column="9">CONST_VTBL</name> struct <name pos:line="3324" pos:column="27">IListVxSnapshotSpanVtbl</name> <op:operator pos:line="3324" pos:column="51">*</op:operator><name pos:line="3324" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3329" pos:column="1">#<cpp:directive pos:line="3329" pos:column="2">ifdef</cpp:directive> <name pos:line="3329" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3332" pos:column="1">#<cpp:directive pos:line="3332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3332" pos:column="9">IListVxSnapshotSpan_QueryInterface</name><parameter_list pos:line="3332" pos:column="43">(<param><type><name pos:line="3332" pos:column="44">This</name></type></param>,<param><type><name pos:line="3332" pos:column="49">riid</name></type></param>,<param><type><name pos:line="3332" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3333" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3335" pos:column="1">#<cpp:directive pos:line="3335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3335" pos:column="9">IListVxSnapshotSpan_AddRef</name><parameter_list pos:line="3335" pos:column="35">(<param><type><name pos:line="3335" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3336" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3338" pos:column="1">#<cpp:directive pos:line="3338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3338" pos:column="9">IListVxSnapshotSpan_Release</name><parameter_list pos:line="3338" pos:column="36">(<param><type><name pos:line="3338" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3339" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3342" pos:column="1">#<cpp:directive pos:line="3342" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3342" pos:column="9">IListVxSnapshotSpan_GetCount</name><parameter_list pos:line="3342" pos:column="37">(<param><type><name pos:line="3342" pos:column="38">This</name></type></param>,<param><type><name pos:line="3342" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3343" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3345" pos:column="1">#<cpp:directive pos:line="3345" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3345" pos:column="9">IListVxSnapshotSpan_GetElement</name><parameter_list pos:line="3345" pos:column="39">(<param><type><name pos:line="3345" pos:column="40">This</name></type></param>,<param><type><name pos:line="3345" pos:column="45">index</name></type></param>,<param><type><name pos:line="3345" pos:column="51">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3346" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3348" pos:column="1">#<cpp:directive pos:line="3348" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3348" pos:column="9">IListVxSnapshotSpan_GetEnumerator</name><parameter_list pos:line="3348" pos:column="42">(<param><type><name pos:line="3348" pos:column="43">This</name></type></param>,<param><type><name pos:line="3348" pos:column="48">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3349" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3351" pos:column="1">#<cpp:directive pos:line="3351" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3351" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3354" pos:column="1">#<cpp:directive pos:line="3354" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3354" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3359" pos:column="1">#<cpp:directive pos:line="3359" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3359" pos:column="9">/* __IListVxSnapshotSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3362" pos:column="1">#<cpp:directive pos:line="3362" pos:column="2">ifndef</cpp:directive> <name pos:line="3362" pos:column="9">__IEnumeratorVxSnapshotPoint_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3363" pos:column="1">#<cpp:directive pos:line="3363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3363" pos:column="9">__IEnumeratorVxSnapshotPoint_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3365" pos:column="1">/* interface IEnumeratorVxSnapshotPoint */</comment>
<comment type="block" pos:line="3366" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3369" pos:column="1">EXTERN_C</name> <specifier pos:line="3369" pos:column="10">const</specifier> <name pos:line="3369" pos:column="16">IID</name></type> <name pos:line="3369" pos:column="20">IID_IEnumeratorVxSnapshotPoint</name></decl>;</decl_stmt>

<cpp:if pos:line="3371" pos:column="1">#<cpp:directive pos:line="3371" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3371" pos:column="5">defined</name><argument_list pos:line="3371" pos:column="12">(<argument><expr><name pos:line="3371" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3371" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3371" pos:column="29">!</op:operator><call><name pos:line="3371" pos:column="30">defined</name><argument_list pos:line="3371" pos:column="37">(<argument><expr><name pos:line="3371" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3373" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3373" pos:column="19">(<argument pos:line="3373" pos:column="20">"30ddec83-f0b5-4bd7-a4d3-2d82d51d6d70"</argument>)</argument_list></macro>
    <label><name pos:line="3374" pos:column="5">IEnumeratorVxSnapshotPoint</name> :</label> <expr_stmt><expr pos:line="3374" pos:column="34">public <name pos:line="3374" pos:column="41">IUnknown</name>
    <block pos:line="3375" pos:column="5">{
    <expr pos:line="3376" pos:column="5">public<op:operator pos:line="3376" pos:column="11">:</op:operator>
        virtual <name pos:line="3377" pos:column="17">HRESULT</name> <name pos:line="3377" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3377" pos:column="43">GetCurrent</name><argument_list pos:line="3377" pos:column="53">( 
            <comment type="block" pos:line="3378" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3378" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="3378" pos:column="49">*</op:operator><name pos:line="3378" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3378" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3378" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="3380" pos:column="9">virtual <name pos:line="3380" pos:column="17">HRESULT</name> <name pos:line="3380" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3380" pos:column="43">MoveNext</name><argument_list pos:line="3380" pos:column="51">( 
            <comment type="block" pos:line="3381" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3381" pos:column="33">BOOL</name> <op:operator pos:line="3381" pos:column="38">*</op:operator><name pos:line="3381" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3381" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3381" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="3383" pos:column="9">virtual <name pos:line="3383" pos:column="17">HRESULT</name> <name pos:line="3383" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3383" pos:column="43">Reset</name><argument_list pos:line="3383" pos:column="48">( <argument><expr><name pos:line="3383" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3383" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3383" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3387" pos:column="1">#<cpp:directive pos:line="3387" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3387" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3389" pos:column="5">typedef <type><struct pos:line="3389" pos:column="13">struct <name pos:line="3389" pos:column="20">IEnumeratorVxSnapshotPointVtbl</name>
    <block pos:line="3390" pos:column="5">{<public type="default" pos:line="3390" pos:column="6">
        <function_decl><type><name pos:line="3391" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3393" pos:column="9">HRESULT</name></type> ( <name pos:line="3393" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3393" pos:column="37">*</type:modifier><name pos:line="3393" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3393" pos:column="54">( 
            <param><decl><type><name pos:line="3394" pos:column="13">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3394" pos:column="40">*</type:modifier></type> <name pos:line="3394" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3395" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3395" pos:column="24">REFIID</name></type> <name pos:line="3395" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3396" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3397" pos:column="13">__RPC__deref_out</name>  <name pos:line="3397" pos:column="31">void</name> <type:modifier pos:line="3397" pos:column="36">*</type:modifier><type:modifier pos:line="3397" pos:column="37">*</type:modifier></type><name pos:line="3397" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3399" pos:column="9">ULONG</name></type> ( <name pos:line="3399" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3399" pos:column="35">*</type:modifier><name pos:line="3399" pos:column="36">AddRef</name> )<parameter_list pos:line="3399" pos:column="44">( 
            <param><decl><type><name pos:line="3400" pos:column="13">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3400" pos:column="40">*</type:modifier></type> <name pos:line="3400" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3402" pos:column="9">ULONG</name></type> ( <name pos:line="3402" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3402" pos:column="35">*</type:modifier><name pos:line="3402" pos:column="36">Release</name> )<parameter_list pos:line="3402" pos:column="45">( 
            <param><decl><type><name pos:line="3403" pos:column="13">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3403" pos:column="40">*</type:modifier></type> <name pos:line="3403" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3405" pos:column="9">HRESULT</name></type> ( <name pos:line="3405" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3405" pos:column="37">*</type:modifier><name pos:line="3405" pos:column="38">GetCurrent</name> )<parameter_list pos:line="3405" pos:column="50">( 
            <param><decl><type><name pos:line="3406" pos:column="13">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3406" pos:column="40">*</type:modifier></type> <name pos:line="3406" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3407" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3407" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="3407" pos:column="49">*</type:modifier></type><name pos:line="3407" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3409" pos:column="9">HRESULT</name></type> ( <name pos:line="3409" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3409" pos:column="37">*</type:modifier><name pos:line="3409" pos:column="38">MoveNext</name> )<parameter_list pos:line="3409" pos:column="48">( 
            <param><decl><type><name pos:line="3410" pos:column="13">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3410" pos:column="40">*</type:modifier></type> <name pos:line="3410" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3411" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3411" pos:column="33">BOOL</name> <type:modifier pos:line="3411" pos:column="38">*</type:modifier></type><name pos:line="3411" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3413" pos:column="9">HRESULT</name></type> ( <name pos:line="3413" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3413" pos:column="37">*</type:modifier><name pos:line="3413" pos:column="38">Reset</name> )<parameter_list pos:line="3413" pos:column="45">( 
            <param><decl><type><name pos:line="3414" pos:column="13">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3414" pos:column="40">*</type:modifier></type> <name pos:line="3414" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3416" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3417" pos:column="7">IEnumeratorVxSnapshotPointVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3419" pos:column="5">interface</name></type> <name pos:line="3419" pos:column="15">IEnumeratorVxSnapshotPoint</name>
    <argument_list pos:line="3420" pos:column="5">{
        <argument><expr><name pos:line="3421" pos:column="9">CONST_VTBL</name> struct <name pos:line="3421" pos:column="27">IEnumeratorVxSnapshotPointVtbl</name> <op:operator pos:line="3421" pos:column="58">*</op:operator><name pos:line="3421" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3426" pos:column="1">#<cpp:directive pos:line="3426" pos:column="2">ifdef</cpp:directive> <name pos:line="3426" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3429" pos:column="1">#<cpp:directive pos:line="3429" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3429" pos:column="9">IEnumeratorVxSnapshotPoint_QueryInterface</name><parameter_list pos:line="3429" pos:column="50">(<param><type><name pos:line="3429" pos:column="51">This</name></type></param>,<param><type><name pos:line="3429" pos:column="56">riid</name></type></param>,<param><type><name pos:line="3429" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3430" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3432" pos:column="1">#<cpp:directive pos:line="3432" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3432" pos:column="9">IEnumeratorVxSnapshotPoint_AddRef</name><parameter_list pos:line="3432" pos:column="42">(<param><type><name pos:line="3432" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3433" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3435" pos:column="1">#<cpp:directive pos:line="3435" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3435" pos:column="9">IEnumeratorVxSnapshotPoint_Release</name><parameter_list pos:line="3435" pos:column="43">(<param><type><name pos:line="3435" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3436" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3439" pos:column="1">#<cpp:directive pos:line="3439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3439" pos:column="9">IEnumeratorVxSnapshotPoint_GetCurrent</name><parameter_list pos:line="3439" pos:column="46">(<param><type><name pos:line="3439" pos:column="47">This</name></type></param>,<param><type><name pos:line="3439" pos:column="52">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3440" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3442" pos:column="1">#<cpp:directive pos:line="3442" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3442" pos:column="9">IEnumeratorVxSnapshotPoint_MoveNext</name><parameter_list pos:line="3442" pos:column="44">(<param><type><name pos:line="3442" pos:column="45">This</name></type></param>,<param><type><name pos:line="3442" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3443" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3445" pos:column="1">#<cpp:directive pos:line="3445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3445" pos:column="9">IEnumeratorVxSnapshotPoint_Reset</name><parameter_list pos:line="3445" pos:column="41">(<param><type><name pos:line="3445" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3446" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3448" pos:column="1">#<cpp:directive pos:line="3448" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3448" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3451" pos:column="1">#<cpp:directive pos:line="3451" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3451" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3456" pos:column="1">#<cpp:directive pos:line="3456" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3456" pos:column="9">/* __IEnumeratorVxSnapshotPoint_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3459" pos:column="1">#<cpp:directive pos:line="3459" pos:column="2">ifndef</cpp:directive> <name pos:line="3459" pos:column="9">__IListVxSnapshotPoint_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3460" pos:column="1">#<cpp:directive pos:line="3460" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3460" pos:column="9">__IListVxSnapshotPoint_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3462" pos:column="1">/* interface IListVxSnapshotPoint */</comment>
<comment type="block" pos:line="3463" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3466" pos:column="1">EXTERN_C</name> <specifier pos:line="3466" pos:column="10">const</specifier> <name pos:line="3466" pos:column="16">IID</name></type> <name pos:line="3466" pos:column="20">IID_IListVxSnapshotPoint</name></decl>;</decl_stmt>

<cpp:if pos:line="3468" pos:column="1">#<cpp:directive pos:line="3468" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3468" pos:column="5">defined</name><argument_list pos:line="3468" pos:column="12">(<argument><expr><name pos:line="3468" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3468" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3468" pos:column="29">!</op:operator><call><name pos:line="3468" pos:column="30">defined</name><argument_list pos:line="3468" pos:column="37">(<argument><expr><name pos:line="3468" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3470" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3470" pos:column="19">(<argument pos:line="3470" pos:column="20">"587a5a1a-4b4e-43f8-896f-7d61716a33cb"</argument>)</argument_list></macro>
    <label><name pos:line="3471" pos:column="5">IListVxSnapshotPoint</name> :</label> <expr_stmt><expr pos:line="3471" pos:column="28">public <name pos:line="3471" pos:column="35">IUnknown</name>
    <block pos:line="3472" pos:column="5">{
    <expr pos:line="3473" pos:column="5">public<op:operator pos:line="3473" pos:column="11">:</op:operator>
        virtual <name pos:line="3474" pos:column="17">HRESULT</name> <name pos:line="3474" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3474" pos:column="43">GetCount</name><argument_list pos:line="3474" pos:column="51">( 
            <comment type="block" pos:line="3475" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3475" pos:column="33">int</name> <op:operator pos:line="3475" pos:column="37">*</op:operator><name pos:line="3475" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3475" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3475" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3477" pos:column="9">virtual <name pos:line="3477" pos:column="17">HRESULT</name> <name pos:line="3477" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3477" pos:column="43">GetElement</name><argument_list pos:line="3477" pos:column="53">( 
            <comment type="block" pos:line="3478" pos:column="13">/* [in] */</comment> <argument pos:line="3478" pos:column="24">int index</argument>,
            <comment type="block" pos:line="3479" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3479" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="3479" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3479" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="3481" pos:column="9">virtual <name pos:line="3481" pos:column="17">HRESULT</name> <name pos:line="3481" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3481" pos:column="43">GetEnumerator</name><argument_list pos:line="3481" pos:column="56">( 
            <comment type="block" pos:line="3482" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3482" pos:column="33">IEnumeratorVxSnapshotPoint</name> <op:operator pos:line="3482" pos:column="60">*</op:operator><op:operator pos:line="3482" pos:column="61">*</op:operator><name pos:line="3482" pos:column="62">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3482" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="3482" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3486" pos:column="1">#<cpp:directive pos:line="3486" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3486" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3488" pos:column="5">typedef <type><struct pos:line="3488" pos:column="13">struct <name pos:line="3488" pos:column="20">IListVxSnapshotPointVtbl</name>
    <block pos:line="3489" pos:column="5">{<public type="default" pos:line="3489" pos:column="6">
        <function_decl><type><name pos:line="3490" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3492" pos:column="9">HRESULT</name></type> ( <name pos:line="3492" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3492" pos:column="37">*</type:modifier><name pos:line="3492" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3492" pos:column="54">( 
            <param><decl><type><name pos:line="3493" pos:column="13">IListVxSnapshotPoint</name> <type:modifier pos:line="3493" pos:column="34">*</type:modifier></type> <name pos:line="3493" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3494" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3494" pos:column="24">REFIID</name></type> <name pos:line="3494" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3495" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3496" pos:column="13">__RPC__deref_out</name>  <name pos:line="3496" pos:column="31">void</name> <type:modifier pos:line="3496" pos:column="36">*</type:modifier><type:modifier pos:line="3496" pos:column="37">*</type:modifier></type><name pos:line="3496" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3498" pos:column="9">ULONG</name></type> ( <name pos:line="3498" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3498" pos:column="35">*</type:modifier><name pos:line="3498" pos:column="36">AddRef</name> )<parameter_list pos:line="3498" pos:column="44">( 
            <param><decl><type><name pos:line="3499" pos:column="13">IListVxSnapshotPoint</name> <type:modifier pos:line="3499" pos:column="34">*</type:modifier></type> <name pos:line="3499" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3501" pos:column="9">ULONG</name></type> ( <name pos:line="3501" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3501" pos:column="35">*</type:modifier><name pos:line="3501" pos:column="36">Release</name> )<parameter_list pos:line="3501" pos:column="45">( 
            <param><decl><type><name pos:line="3502" pos:column="13">IListVxSnapshotPoint</name> <type:modifier pos:line="3502" pos:column="34">*</type:modifier></type> <name pos:line="3502" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3504" pos:column="9">HRESULT</name></type> ( <name pos:line="3504" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3504" pos:column="37">*</type:modifier><name pos:line="3504" pos:column="38">GetCount</name> )<parameter_list pos:line="3504" pos:column="48">( 
            <param><decl><type><name pos:line="3505" pos:column="13">IListVxSnapshotPoint</name> <type:modifier pos:line="3505" pos:column="34">*</type:modifier></type> <name pos:line="3505" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3506" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3506" pos:column="33">int</name> <type:modifier pos:line="3506" pos:column="37">*</type:modifier></type><name pos:line="3506" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3508" pos:column="9">HRESULT</name></type> ( <name pos:line="3508" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3508" pos:column="37">*</type:modifier><name pos:line="3508" pos:column="38">GetElement</name> )<parameter_list pos:line="3508" pos:column="50">( 
            <param><decl><type><name pos:line="3509" pos:column="13">IListVxSnapshotPoint</name> <type:modifier pos:line="3509" pos:column="34">*</type:modifier></type> <name pos:line="3509" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3510" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3510" pos:column="24">int</name></type> <name pos:line="3510" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="3511" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3511" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="3511" pos:column="49">*</type:modifier></type><name pos:line="3511" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3513" pos:column="9">HRESULT</name></type> ( <name pos:line="3513" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3513" pos:column="37">*</type:modifier><name pos:line="3513" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="3513" pos:column="53">( 
            <param><decl><type><name pos:line="3514" pos:column="13">IListVxSnapshotPoint</name> <type:modifier pos:line="3514" pos:column="34">*</type:modifier></type> <name pos:line="3514" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3515" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3515" pos:column="33">IEnumeratorVxSnapshotPoint</name> <type:modifier pos:line="3515" pos:column="60">*</type:modifier><type:modifier pos:line="3515" pos:column="61">*</type:modifier></type><name pos:line="3515" pos:column="62">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3517" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3518" pos:column="7">IListVxSnapshotPointVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3520" pos:column="5">interface</name></type> <name pos:line="3520" pos:column="15">IListVxSnapshotPoint</name>
    <argument_list pos:line="3521" pos:column="5">{
        <argument><expr><name pos:line="3522" pos:column="9">CONST_VTBL</name> struct <name pos:line="3522" pos:column="27">IListVxSnapshotPointVtbl</name> <op:operator pos:line="3522" pos:column="52">*</op:operator><name pos:line="3522" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3527" pos:column="1">#<cpp:directive pos:line="3527" pos:column="2">ifdef</cpp:directive> <name pos:line="3527" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3530" pos:column="1">#<cpp:directive pos:line="3530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3530" pos:column="9">IListVxSnapshotPoint_QueryInterface</name><parameter_list pos:line="3530" pos:column="44">(<param><type><name pos:line="3530" pos:column="45">This</name></type></param>,<param><type><name pos:line="3530" pos:column="50">riid</name></type></param>,<param><type><name pos:line="3530" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3531" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3533" pos:column="1">#<cpp:directive pos:line="3533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3533" pos:column="9">IListVxSnapshotPoint_AddRef</name><parameter_list pos:line="3533" pos:column="36">(<param><type><name pos:line="3533" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3534" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3536" pos:column="1">#<cpp:directive pos:line="3536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3536" pos:column="9">IListVxSnapshotPoint_Release</name><parameter_list pos:line="3536" pos:column="37">(<param><type><name pos:line="3536" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3537" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3540" pos:column="1">#<cpp:directive pos:line="3540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3540" pos:column="9">IListVxSnapshotPoint_GetCount</name><parameter_list pos:line="3540" pos:column="38">(<param><type><name pos:line="3540" pos:column="39">This</name></type></param>,<param><type><name pos:line="3540" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3541" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3543" pos:column="1">#<cpp:directive pos:line="3543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3543" pos:column="9">IListVxSnapshotPoint_GetElement</name><parameter_list pos:line="3543" pos:column="40">(<param><type><name pos:line="3543" pos:column="41">This</name></type></param>,<param><type><name pos:line="3543" pos:column="46">index</name></type></param>,<param><type><name pos:line="3543" pos:column="52">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3544" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3546" pos:column="1">#<cpp:directive pos:line="3546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3546" pos:column="9">IListVxSnapshotPoint_GetEnumerator</name><parameter_list pos:line="3546" pos:column="43">(<param><type><name pos:line="3546" pos:column="44">This</name></type></param>,<param><type><name pos:line="3546" pos:column="49">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3547" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3549" pos:column="1">#<cpp:directive pos:line="3549" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3549" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3552" pos:column="1">#<cpp:directive pos:line="3552" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3552" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3557" pos:column="1">#<cpp:directive pos:line="3557" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3557" pos:column="9">/* __IListVxSnapshotPoint_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3560" pos:column="1">#<cpp:directive pos:line="3560" pos:column="2">ifndef</cpp:directive> <name pos:line="3560" pos:column="9">__IEnumeratorIUnknown_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3561" pos:column="1">#<cpp:directive pos:line="3561" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3561" pos:column="9">__IEnumeratorIUnknown_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3563" pos:column="1">/* interface IEnumeratorIUnknown */</comment>
<comment type="block" pos:line="3564" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3567" pos:column="1">EXTERN_C</name> <specifier pos:line="3567" pos:column="10">const</specifier> <name pos:line="3567" pos:column="16">IID</name></type> <name pos:line="3567" pos:column="20">IID_IEnumeratorIUnknown</name></decl>;</decl_stmt>

<cpp:if pos:line="3569" pos:column="1">#<cpp:directive pos:line="3569" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3569" pos:column="5">defined</name><argument_list pos:line="3569" pos:column="12">(<argument><expr><name pos:line="3569" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3569" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3569" pos:column="29">!</op:operator><call><name pos:line="3569" pos:column="30">defined</name><argument_list pos:line="3569" pos:column="37">(<argument><expr><name pos:line="3569" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3571" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3571" pos:column="19">(<argument pos:line="3571" pos:column="20">"379d6c69-25b8-413d-b58c-015f2c7a942d"</argument>)</argument_list></macro>
    <label><name pos:line="3572" pos:column="5">IEnumeratorIUnknown</name> :</label> <expr_stmt><expr pos:line="3572" pos:column="27">public <name pos:line="3572" pos:column="34">IUnknown</name>
    <block pos:line="3573" pos:column="5">{
    <expr pos:line="3574" pos:column="5">public<op:operator pos:line="3574" pos:column="11">:</op:operator>
        virtual <name pos:line="3575" pos:column="17">HRESULT</name> <name pos:line="3575" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3575" pos:column="43">GetCurrent</name><argument_list pos:line="3575" pos:column="53">( 
            <comment type="block" pos:line="3576" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3576" pos:column="33">IUnknown</name> <op:operator pos:line="3576" pos:column="42">*</op:operator><op:operator pos:line="3576" pos:column="43">*</op:operator><name pos:line="3576" pos:column="44">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3576" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="3576" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="3578" pos:column="9">virtual <name pos:line="3578" pos:column="17">HRESULT</name> <name pos:line="3578" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3578" pos:column="43">MoveNext</name><argument_list pos:line="3578" pos:column="51">( 
            <comment type="block" pos:line="3579" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3579" pos:column="33">BOOL</name> <op:operator pos:line="3579" pos:column="38">*</op:operator><name pos:line="3579" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3579" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3579" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="3581" pos:column="9">virtual <name pos:line="3581" pos:column="17">HRESULT</name> <name pos:line="3581" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3581" pos:column="43">Reset</name><argument_list pos:line="3581" pos:column="48">( <argument><expr><name pos:line="3581" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3581" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3581" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3585" pos:column="1">#<cpp:directive pos:line="3585" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3585" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3587" pos:column="5">typedef <type><struct pos:line="3587" pos:column="13">struct <name pos:line="3587" pos:column="20">IEnumeratorIUnknownVtbl</name>
    <block pos:line="3588" pos:column="5">{<public type="default" pos:line="3588" pos:column="6">
        <function_decl><type><name pos:line="3589" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3591" pos:column="9">HRESULT</name></type> ( <name pos:line="3591" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3591" pos:column="37">*</type:modifier><name pos:line="3591" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3591" pos:column="54">( 
            <param><decl><type><name pos:line="3592" pos:column="13">IEnumeratorIUnknown</name> <type:modifier pos:line="3592" pos:column="33">*</type:modifier></type> <name pos:line="3592" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3593" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3593" pos:column="24">REFIID</name></type> <name pos:line="3593" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3594" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3595" pos:column="13">__RPC__deref_out</name>  <name pos:line="3595" pos:column="31">void</name> <type:modifier pos:line="3595" pos:column="36">*</type:modifier><type:modifier pos:line="3595" pos:column="37">*</type:modifier></type><name pos:line="3595" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3597" pos:column="9">ULONG</name></type> ( <name pos:line="3597" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3597" pos:column="35">*</type:modifier><name pos:line="3597" pos:column="36">AddRef</name> )<parameter_list pos:line="3597" pos:column="44">( 
            <param><decl><type><name pos:line="3598" pos:column="13">IEnumeratorIUnknown</name> <type:modifier pos:line="3598" pos:column="33">*</type:modifier></type> <name pos:line="3598" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3600" pos:column="9">ULONG</name></type> ( <name pos:line="3600" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3600" pos:column="35">*</type:modifier><name pos:line="3600" pos:column="36">Release</name> )<parameter_list pos:line="3600" pos:column="45">( 
            <param><decl><type><name pos:line="3601" pos:column="13">IEnumeratorIUnknown</name> <type:modifier pos:line="3601" pos:column="33">*</type:modifier></type> <name pos:line="3601" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3603" pos:column="9">HRESULT</name></type> ( <name pos:line="3603" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3603" pos:column="37">*</type:modifier><name pos:line="3603" pos:column="38">GetCurrent</name> )<parameter_list pos:line="3603" pos:column="50">( 
            <param><decl><type><name pos:line="3604" pos:column="13">IEnumeratorIUnknown</name> <type:modifier pos:line="3604" pos:column="33">*</type:modifier></type> <name pos:line="3604" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3605" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3605" pos:column="33">IUnknown</name> <type:modifier pos:line="3605" pos:column="42">*</type:modifier><type:modifier pos:line="3605" pos:column="43">*</type:modifier></type><name pos:line="3605" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3607" pos:column="9">HRESULT</name></type> ( <name pos:line="3607" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3607" pos:column="37">*</type:modifier><name pos:line="3607" pos:column="38">MoveNext</name> )<parameter_list pos:line="3607" pos:column="48">( 
            <param><decl><type><name pos:line="3608" pos:column="13">IEnumeratorIUnknown</name> <type:modifier pos:line="3608" pos:column="33">*</type:modifier></type> <name pos:line="3608" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3609" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3609" pos:column="33">BOOL</name> <type:modifier pos:line="3609" pos:column="38">*</type:modifier></type><name pos:line="3609" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3611" pos:column="9">HRESULT</name></type> ( <name pos:line="3611" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3611" pos:column="37">*</type:modifier><name pos:line="3611" pos:column="38">Reset</name> )<parameter_list pos:line="3611" pos:column="45">( 
            <param><decl><type><name pos:line="3612" pos:column="13">IEnumeratorIUnknown</name> <type:modifier pos:line="3612" pos:column="33">*</type:modifier></type> <name pos:line="3612" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3614" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3615" pos:column="7">IEnumeratorIUnknownVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3617" pos:column="5">interface</name></type> <name pos:line="3617" pos:column="15">IEnumeratorIUnknown</name>
    <argument_list pos:line="3618" pos:column="5">{
        <argument><expr><name pos:line="3619" pos:column="9">CONST_VTBL</name> struct <name pos:line="3619" pos:column="27">IEnumeratorIUnknownVtbl</name> <op:operator pos:line="3619" pos:column="51">*</op:operator><name pos:line="3619" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3624" pos:column="1">#<cpp:directive pos:line="3624" pos:column="2">ifdef</cpp:directive> <name pos:line="3624" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3627" pos:column="1">#<cpp:directive pos:line="3627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3627" pos:column="9">IEnumeratorIUnknown_QueryInterface</name><parameter_list pos:line="3627" pos:column="43">(<param><type><name pos:line="3627" pos:column="44">This</name></type></param>,<param><type><name pos:line="3627" pos:column="49">riid</name></type></param>,<param><type><name pos:line="3627" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3628" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3630" pos:column="1">#<cpp:directive pos:line="3630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3630" pos:column="9">IEnumeratorIUnknown_AddRef</name><parameter_list pos:line="3630" pos:column="35">(<param><type><name pos:line="3630" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3631" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3633" pos:column="1">#<cpp:directive pos:line="3633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3633" pos:column="9">IEnumeratorIUnknown_Release</name><parameter_list pos:line="3633" pos:column="36">(<param><type><name pos:line="3633" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3634" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3637" pos:column="1">#<cpp:directive pos:line="3637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3637" pos:column="9">IEnumeratorIUnknown_GetCurrent</name><parameter_list pos:line="3637" pos:column="39">(<param><type><name pos:line="3637" pos:column="40">This</name></type></param>,<param><type><name pos:line="3637" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3638" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3640" pos:column="1">#<cpp:directive pos:line="3640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3640" pos:column="9">IEnumeratorIUnknown_MoveNext</name><parameter_list pos:line="3640" pos:column="37">(<param><type><name pos:line="3640" pos:column="38">This</name></type></param>,<param><type><name pos:line="3640" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3641" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3643" pos:column="1">#<cpp:directive pos:line="3643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3643" pos:column="9">IEnumeratorIUnknown_Reset</name><parameter_list pos:line="3643" pos:column="34">(<param><type><name pos:line="3643" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3644" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3646" pos:column="1">#<cpp:directive pos:line="3646" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3646" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3649" pos:column="1">#<cpp:directive pos:line="3649" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3649" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3654" pos:column="1">#<cpp:directive pos:line="3654" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3654" pos:column="9">/* __IEnumeratorIUnknown_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3657" pos:column="1">#<cpp:directive pos:line="3657" pos:column="2">ifndef</cpp:directive> <name pos:line="3657" pos:column="9">__IListIUnknown_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3658" pos:column="1">#<cpp:directive pos:line="3658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3658" pos:column="9">__IListIUnknown_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3660" pos:column="1">/* interface IListIUnknown */</comment>
<comment type="block" pos:line="3661" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3664" pos:column="1">EXTERN_C</name> <specifier pos:line="3664" pos:column="10">const</specifier> <name pos:line="3664" pos:column="16">IID</name></type> <name pos:line="3664" pos:column="20">IID_IListIUnknown</name></decl>;</decl_stmt>

<cpp:if pos:line="3666" pos:column="1">#<cpp:directive pos:line="3666" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3666" pos:column="5">defined</name><argument_list pos:line="3666" pos:column="12">(<argument><expr><name pos:line="3666" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3666" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3666" pos:column="29">!</op:operator><call><name pos:line="3666" pos:column="30">defined</name><argument_list pos:line="3666" pos:column="37">(<argument><expr><name pos:line="3666" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3668" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3668" pos:column="19">(<argument pos:line="3668" pos:column="20">"fdc0603f-f733-49c9-aad2-ac3e0ae513bb"</argument>)</argument_list></macro>
    <label><name pos:line="3669" pos:column="5">IListIUnknown</name> :</label> <expr_stmt><expr pos:line="3669" pos:column="21">public <name pos:line="3669" pos:column="28">IUnknown</name>
    <block pos:line="3670" pos:column="5">{
    <expr pos:line="3671" pos:column="5">public<op:operator pos:line="3671" pos:column="11">:</op:operator>
        virtual <name pos:line="3672" pos:column="17">HRESULT</name> <name pos:line="3672" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3672" pos:column="43">GetCount</name><argument_list pos:line="3672" pos:column="51">( 
            <comment type="block" pos:line="3673" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3673" pos:column="33">int</name> <op:operator pos:line="3673" pos:column="37">*</op:operator><name pos:line="3673" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3673" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3673" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3675" pos:column="9">virtual <name pos:line="3675" pos:column="17">HRESULT</name> <name pos:line="3675" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3675" pos:column="43">GetElement</name><argument_list pos:line="3675" pos:column="53">( 
            <comment type="block" pos:line="3676" pos:column="13">/* [in] */</comment> <argument pos:line="3676" pos:column="24">int index</argument>,
            <comment type="block" pos:line="3677" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3677" pos:column="33">IUnknown **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="3677" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="3677" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="3679" pos:column="9">virtual <name pos:line="3679" pos:column="17">HRESULT</name> <name pos:line="3679" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3679" pos:column="43">GetEnumerator</name><argument_list pos:line="3679" pos:column="56">( 
            <comment type="block" pos:line="3680" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3680" pos:column="33">IEnumeratorIUnknown</name> <op:operator pos:line="3680" pos:column="53">*</op:operator><op:operator pos:line="3680" pos:column="54">*</op:operator><name pos:line="3680" pos:column="55">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3680" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="3680" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3684" pos:column="1">#<cpp:directive pos:line="3684" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3684" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3686" pos:column="5">typedef <type><struct pos:line="3686" pos:column="13">struct <name pos:line="3686" pos:column="20">IListIUnknownVtbl</name>
    <block pos:line="3687" pos:column="5">{<public type="default" pos:line="3687" pos:column="6">
        <function_decl><type><name pos:line="3688" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3690" pos:column="9">HRESULT</name></type> ( <name pos:line="3690" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3690" pos:column="37">*</type:modifier><name pos:line="3690" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3690" pos:column="54">( 
            <param><decl><type><name pos:line="3691" pos:column="13">IListIUnknown</name> <type:modifier pos:line="3691" pos:column="27">*</type:modifier></type> <name pos:line="3691" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="3692" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3692" pos:column="24">REFIID</name></type> <name pos:line="3692" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3693" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3694" pos:column="13">__RPC__deref_out</name>  <name pos:line="3694" pos:column="31">void</name> <type:modifier pos:line="3694" pos:column="36">*</type:modifier><type:modifier pos:line="3694" pos:column="37">*</type:modifier></type><name pos:line="3694" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3696" pos:column="9">ULONG</name></type> ( <name pos:line="3696" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3696" pos:column="35">*</type:modifier><name pos:line="3696" pos:column="36">AddRef</name> )<parameter_list pos:line="3696" pos:column="44">( 
            <param><decl><type><name pos:line="3697" pos:column="13">IListIUnknown</name> <type:modifier pos:line="3697" pos:column="27">*</type:modifier></type> <name pos:line="3697" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3699" pos:column="9">ULONG</name></type> ( <name pos:line="3699" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3699" pos:column="35">*</type:modifier><name pos:line="3699" pos:column="36">Release</name> )<parameter_list pos:line="3699" pos:column="45">( 
            <param><decl><type><name pos:line="3700" pos:column="13">IListIUnknown</name> <type:modifier pos:line="3700" pos:column="27">*</type:modifier></type> <name pos:line="3700" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3702" pos:column="9">HRESULT</name></type> ( <name pos:line="3702" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3702" pos:column="37">*</type:modifier><name pos:line="3702" pos:column="38">GetCount</name> )<parameter_list pos:line="3702" pos:column="48">( 
            <param><decl><type><name pos:line="3703" pos:column="13">IListIUnknown</name> <type:modifier pos:line="3703" pos:column="27">*</type:modifier></type> <name pos:line="3703" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="3704" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3704" pos:column="33">int</name> <type:modifier pos:line="3704" pos:column="37">*</type:modifier></type><name pos:line="3704" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3706" pos:column="9">HRESULT</name></type> ( <name pos:line="3706" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3706" pos:column="37">*</type:modifier><name pos:line="3706" pos:column="38">GetElement</name> )<parameter_list pos:line="3706" pos:column="50">( 
            <param><decl><type><name pos:line="3707" pos:column="13">IListIUnknown</name> <type:modifier pos:line="3707" pos:column="27">*</type:modifier></type> <name pos:line="3707" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="3708" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3708" pos:column="24">int</name></type> <name pos:line="3708" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="3709" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3709" pos:column="33">IUnknown</name> <type:modifier pos:line="3709" pos:column="42">*</type:modifier><type:modifier pos:line="3709" pos:column="43">*</type:modifier></type><name pos:line="3709" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3711" pos:column="9">HRESULT</name></type> ( <name pos:line="3711" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3711" pos:column="37">*</type:modifier><name pos:line="3711" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="3711" pos:column="53">( 
            <param><decl><type><name pos:line="3712" pos:column="13">IListIUnknown</name> <type:modifier pos:line="3712" pos:column="27">*</type:modifier></type> <name pos:line="3712" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="3713" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3713" pos:column="33">IEnumeratorIUnknown</name> <type:modifier pos:line="3713" pos:column="53">*</type:modifier><type:modifier pos:line="3713" pos:column="54">*</type:modifier></type><name pos:line="3713" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3715" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3716" pos:column="7">IListIUnknownVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3718" pos:column="5">interface</name></type> <name pos:line="3718" pos:column="15">IListIUnknown</name>
    <argument_list pos:line="3719" pos:column="5">{
        <argument><expr><name pos:line="3720" pos:column="9">CONST_VTBL</name> struct <name pos:line="3720" pos:column="27">IListIUnknownVtbl</name> <op:operator pos:line="3720" pos:column="45">*</op:operator><name pos:line="3720" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3725" pos:column="1">#<cpp:directive pos:line="3725" pos:column="2">ifdef</cpp:directive> <name pos:line="3725" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3728" pos:column="1">#<cpp:directive pos:line="3728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3728" pos:column="9">IListIUnknown_QueryInterface</name><parameter_list pos:line="3728" pos:column="37">(<param><type><name pos:line="3728" pos:column="38">This</name></type></param>,<param><type><name pos:line="3728" pos:column="43">riid</name></type></param>,<param><type><name pos:line="3728" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3729" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3731" pos:column="1">#<cpp:directive pos:line="3731" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3731" pos:column="9">IListIUnknown_AddRef</name><parameter_list pos:line="3731" pos:column="29">(<param><type><name pos:line="3731" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3732" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3734" pos:column="1">#<cpp:directive pos:line="3734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3734" pos:column="9">IListIUnknown_Release</name><parameter_list pos:line="3734" pos:column="30">(<param><type><name pos:line="3734" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3735" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3738" pos:column="1">#<cpp:directive pos:line="3738" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3738" pos:column="9">IListIUnknown_GetCount</name><parameter_list pos:line="3738" pos:column="31">(<param><type><name pos:line="3738" pos:column="32">This</name></type></param>,<param><type><name pos:line="3738" pos:column="37">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3739" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3741" pos:column="1">#<cpp:directive pos:line="3741" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3741" pos:column="9">IListIUnknown_GetElement</name><parameter_list pos:line="3741" pos:column="33">(<param><type><name pos:line="3741" pos:column="34">This</name></type></param>,<param><type><name pos:line="3741" pos:column="39">index</name></type></param>,<param><type><name pos:line="3741" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3742" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="3744" pos:column="1">#<cpp:directive pos:line="3744" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3744" pos:column="9">IListIUnknown_GetEnumerator</name><parameter_list pos:line="3744" pos:column="36">(<param><type><name pos:line="3744" pos:column="37">This</name></type></param>,<param><type><name pos:line="3744" pos:column="42">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3745" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3747" pos:column="1">#<cpp:directive pos:line="3747" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3747" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3750" pos:column="1">#<cpp:directive pos:line="3750" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3750" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3755" pos:column="1">#<cpp:directive pos:line="3755" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3755" pos:column="9">/* __IListIUnknown_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3758" pos:column="1">#<cpp:directive pos:line="3758" pos:column="2">ifndef</cpp:directive> <name pos:line="3758" pos:column="9">__IVxProjectionSourceSpansChangedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3759" pos:column="1">#<cpp:directive pos:line="3759" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3759" pos:column="9">__IVxProjectionSourceSpansChangedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3761" pos:column="1">/* interface IVxProjectionSourceSpansChangedEvent */</comment>
<comment type="block" pos:line="3762" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3765" pos:column="1">EXTERN_C</name> <specifier pos:line="3765" pos:column="10">const</specifier> <name pos:line="3765" pos:column="16">IID</name></type> <name pos:line="3765" pos:column="20">IID_IVxProjectionSourceSpansChangedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="3767" pos:column="1">#<cpp:directive pos:line="3767" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3767" pos:column="5">defined</name><argument_list pos:line="3767" pos:column="12">(<argument><expr><name pos:line="3767" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3767" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3767" pos:column="29">!</op:operator><call><name pos:line="3767" pos:column="30">defined</name><argument_list pos:line="3767" pos:column="37">(<argument><expr><name pos:line="3767" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3769" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3769" pos:column="19">(<argument pos:line="3769" pos:column="20">"6c6c11a3-ec8a-426d-9c73-180431dcf306"</argument>)</argument_list></macro>
    <label><name pos:line="3770" pos:column="5">IVxProjectionSourceSpansChangedEvent</name> :</label> <expr_stmt><expr pos:line="3770" pos:column="44">public <name pos:line="3770" pos:column="51">IUnknown</name>
    <block pos:line="3771" pos:column="5">{
    <expr pos:line="3772" pos:column="5">public<op:operator pos:line="3772" pos:column="11">:</op:operator>
        virtual <name pos:line="3773" pos:column="17">HRESULT</name> <name pos:line="3773" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3773" pos:column="43">OnProjectionSourceSpansChanged</name><argument_list pos:line="3773" pos:column="73">( 
            <comment type="block" pos:line="3774" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="3774" pos:column="24">IUnknown</name> <op:operator pos:line="3774" pos:column="33">*</op:operator><name pos:line="3774" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="3775" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="3775" pos:column="24">IVxProjectionSourceSpansChangedEventArgs</name> <op:operator pos:line="3775" pos:column="65">*</op:operator><name pos:line="3775" pos:column="66">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="3775" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="3775" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3779" pos:column="1">#<cpp:directive pos:line="3779" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3779" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3781" pos:column="5">typedef <type><struct pos:line="3781" pos:column="13">struct <name pos:line="3781" pos:column="20">IVxProjectionSourceSpansChangedEventVtbl</name>
    <block pos:line="3782" pos:column="5">{<public type="default" pos:line="3782" pos:column="6">
        <function_decl><type><name pos:line="3783" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3785" pos:column="9">HRESULT</name></type> ( <name pos:line="3785" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3785" pos:column="37">*</type:modifier><name pos:line="3785" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3785" pos:column="54">( 
            <param><decl><type><name pos:line="3786" pos:column="13">IVxProjectionSourceSpansChangedEvent</name> <type:modifier pos:line="3786" pos:column="50">*</type:modifier></type> <name pos:line="3786" pos:column="52">This</name></decl></param>,
            <comment type="block" pos:line="3787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3787" pos:column="24">REFIID</name></type> <name pos:line="3787" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3788" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3789" pos:column="13">__RPC__deref_out</name>  <name pos:line="3789" pos:column="31">void</name> <type:modifier pos:line="3789" pos:column="36">*</type:modifier><type:modifier pos:line="3789" pos:column="37">*</type:modifier></type><name pos:line="3789" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3791" pos:column="9">ULONG</name></type> ( <name pos:line="3791" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3791" pos:column="35">*</type:modifier><name pos:line="3791" pos:column="36">AddRef</name> )<parameter_list pos:line="3791" pos:column="44">( 
            <param><decl><type><name pos:line="3792" pos:column="13">IVxProjectionSourceSpansChangedEvent</name> <type:modifier pos:line="3792" pos:column="50">*</type:modifier></type> <name pos:line="3792" pos:column="52">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3794" pos:column="9">ULONG</name></type> ( <name pos:line="3794" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3794" pos:column="35">*</type:modifier><name pos:line="3794" pos:column="36">Release</name> )<parameter_list pos:line="3794" pos:column="45">( 
            <param><decl><type><name pos:line="3795" pos:column="13">IVxProjectionSourceSpansChangedEvent</name> <type:modifier pos:line="3795" pos:column="50">*</type:modifier></type> <name pos:line="3795" pos:column="52">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3797" pos:column="9">HRESULT</name></type> ( <name pos:line="3797" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3797" pos:column="37">*</type:modifier><name pos:line="3797" pos:column="38">OnProjectionSourceSpansChanged</name> )<parameter_list pos:line="3797" pos:column="70">( 
            <param><decl><type><name pos:line="3798" pos:column="13">IVxProjectionSourceSpansChangedEvent</name> <type:modifier pos:line="3798" pos:column="50">*</type:modifier></type> <name pos:line="3798" pos:column="52">This</name></decl></param>,
            <comment type="block" pos:line="3799" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3799" pos:column="24">IUnknown</name> <type:modifier pos:line="3799" pos:column="33">*</type:modifier></type><name pos:line="3799" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="3800" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3800" pos:column="24">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="3800" pos:column="65">*</type:modifier></type><name pos:line="3800" pos:column="66">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3802" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3803" pos:column="7">IVxProjectionSourceSpansChangedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3805" pos:column="5">interface</name></type> <name pos:line="3805" pos:column="15">IVxProjectionSourceSpansChangedEvent</name>
    <argument_list pos:line="3806" pos:column="5">{
        <argument><expr><name pos:line="3807" pos:column="9">CONST_VTBL</name> struct <name pos:line="3807" pos:column="27">IVxProjectionSourceSpansChangedEventVtbl</name> <op:operator pos:line="3807" pos:column="68">*</op:operator><name pos:line="3807" pos:column="69">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3812" pos:column="1">#<cpp:directive pos:line="3812" pos:column="2">ifdef</cpp:directive> <name pos:line="3812" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3815" pos:column="1">#<cpp:directive pos:line="3815" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3815" pos:column="9">IVxProjectionSourceSpansChangedEvent_QueryInterface</name><parameter_list pos:line="3815" pos:column="60">(<param><type><name pos:line="3815" pos:column="61">This</name></type></param>,<param><type><name pos:line="3815" pos:column="66">riid</name></type></param>,<param><type><name pos:line="3815" pos:column="71">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3816" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3818" pos:column="1">#<cpp:directive pos:line="3818" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3818" pos:column="9">IVxProjectionSourceSpansChangedEvent_AddRef</name><parameter_list pos:line="3818" pos:column="52">(<param><type><name pos:line="3818" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3819" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3821" pos:column="1">#<cpp:directive pos:line="3821" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3821" pos:column="9">IVxProjectionSourceSpansChangedEvent_Release</name><parameter_list pos:line="3821" pos:column="53">(<param><type><name pos:line="3821" pos:column="54">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3822" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3825" pos:column="1">#<cpp:directive pos:line="3825" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3825" pos:column="9">IVxProjectionSourceSpansChangedEvent_OnProjectionSourceSpansChanged</name><parameter_list pos:line="3825" pos:column="76">(<param><type><name pos:line="3825" pos:column="77">This</name></type></param>,<param><type><name pos:line="3825" pos:column="82">pSender</name></type></param>,<param><type><name pos:line="3825" pos:column="90">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3826" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnProjectionSourceSpansChanged(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3828" pos:column="1">#<cpp:directive pos:line="3828" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3828" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3831" pos:column="1">#<cpp:directive pos:line="3831" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3831" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3836" pos:column="1">#<cpp:directive pos:line="3836" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3836" pos:column="9">/* __IVxProjectionSourceSpansChangedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3839" pos:column="1">#<cpp:directive pos:line="3839" pos:column="2">ifndef</cpp:directive> <name pos:line="3839" pos:column="9">__IVxProjectionSourceBuffersChangedEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3840" pos:column="1">#<cpp:directive pos:line="3840" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3840" pos:column="9">__IVxProjectionSourceBuffersChangedEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3842" pos:column="1">/* interface IVxProjectionSourceBuffersChangedEvent */</comment>
<comment type="block" pos:line="3843" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3846" pos:column="1">EXTERN_C</name> <specifier pos:line="3846" pos:column="10">const</specifier> <name pos:line="3846" pos:column="16">IID</name></type> <name pos:line="3846" pos:column="20">IID_IVxProjectionSourceBuffersChangedEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="3848" pos:column="1">#<cpp:directive pos:line="3848" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3848" pos:column="5">defined</name><argument_list pos:line="3848" pos:column="12">(<argument><expr><name pos:line="3848" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3848" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3848" pos:column="29">!</op:operator><call><name pos:line="3848" pos:column="30">defined</name><argument_list pos:line="3848" pos:column="37">(<argument><expr><name pos:line="3848" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3850" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3850" pos:column="19">(<argument pos:line="3850" pos:column="20">"5fd8dc1e-0c10-4026-8fde-a3f198815998"</argument>)</argument_list></macro>
    <label><name pos:line="3851" pos:column="5">IVxProjectionSourceBuffersChangedEvent</name> :</label> <expr_stmt><expr pos:line="3851" pos:column="46">public <name pos:line="3851" pos:column="53">IUnknown</name>
    <block pos:line="3852" pos:column="5">{
    <expr pos:line="3853" pos:column="5">public<op:operator pos:line="3853" pos:column="11">:</op:operator>
        virtual <name pos:line="3854" pos:column="17">HRESULT</name> <name pos:line="3854" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3854" pos:column="43">OnProjectionSourceBuffersChanged</name><argument_list pos:line="3854" pos:column="75">( 
            <comment type="block" pos:line="3855" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="3855" pos:column="24">IUnknown</name> <op:operator pos:line="3855" pos:column="33">*</op:operator><name pos:line="3855" pos:column="34">pSender</name></expr></argument>,
            <comment type="block" pos:line="3856" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="3856" pos:column="24">IVxProjectionSourceBuffersChangedEventArgs</name> <op:operator pos:line="3856" pos:column="67">*</op:operator><name pos:line="3856" pos:column="68">pE</name></expr></argument>)</argument_list></call> <op:operator pos:line="3856" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="3856" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3860" pos:column="1">#<cpp:directive pos:line="3860" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3860" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3862" pos:column="5">typedef <type><struct pos:line="3862" pos:column="13">struct <name pos:line="3862" pos:column="20">IVxProjectionSourceBuffersChangedEventVtbl</name>
    <block pos:line="3863" pos:column="5">{<public type="default" pos:line="3863" pos:column="6">
        <function_decl><type><name pos:line="3864" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3866" pos:column="9">HRESULT</name></type> ( <name pos:line="3866" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3866" pos:column="37">*</type:modifier><name pos:line="3866" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3866" pos:column="54">( 
            <param><decl><type><name pos:line="3867" pos:column="13">IVxProjectionSourceBuffersChangedEvent</name> <type:modifier pos:line="3867" pos:column="52">*</type:modifier></type> <name pos:line="3867" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="3868" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3868" pos:column="24">REFIID</name></type> <name pos:line="3868" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3869" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3870" pos:column="13">__RPC__deref_out</name>  <name pos:line="3870" pos:column="31">void</name> <type:modifier pos:line="3870" pos:column="36">*</type:modifier><type:modifier pos:line="3870" pos:column="37">*</type:modifier></type><name pos:line="3870" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3872" pos:column="9">ULONG</name></type> ( <name pos:line="3872" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3872" pos:column="35">*</type:modifier><name pos:line="3872" pos:column="36">AddRef</name> )<parameter_list pos:line="3872" pos:column="44">( 
            <param><decl><type><name pos:line="3873" pos:column="13">IVxProjectionSourceBuffersChangedEvent</name> <type:modifier pos:line="3873" pos:column="52">*</type:modifier></type> <name pos:line="3873" pos:column="54">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3875" pos:column="9">ULONG</name></type> ( <name pos:line="3875" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3875" pos:column="35">*</type:modifier><name pos:line="3875" pos:column="36">Release</name> )<parameter_list pos:line="3875" pos:column="45">( 
            <param><decl><type><name pos:line="3876" pos:column="13">IVxProjectionSourceBuffersChangedEvent</name> <type:modifier pos:line="3876" pos:column="52">*</type:modifier></type> <name pos:line="3876" pos:column="54">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3878" pos:column="9">HRESULT</name></type> ( <name pos:line="3878" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3878" pos:column="37">*</type:modifier><name pos:line="3878" pos:column="38">OnProjectionSourceBuffersChanged</name> )<parameter_list pos:line="3878" pos:column="72">( 
            <param><decl><type><name pos:line="3879" pos:column="13">IVxProjectionSourceBuffersChangedEvent</name> <type:modifier pos:line="3879" pos:column="52">*</type:modifier></type> <name pos:line="3879" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="3880" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3880" pos:column="24">IUnknown</name> <type:modifier pos:line="3880" pos:column="33">*</type:modifier></type><name pos:line="3880" pos:column="34">pSender</name></decl></param>,
            <comment type="block" pos:line="3881" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3881" pos:column="24">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="3881" pos:column="67">*</type:modifier></type><name pos:line="3881" pos:column="68">pE</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3883" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3884" pos:column="7">IVxProjectionSourceBuffersChangedEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3886" pos:column="5">interface</name></type> <name pos:line="3886" pos:column="15">IVxProjectionSourceBuffersChangedEvent</name>
    <argument_list pos:line="3887" pos:column="5">{
        <argument><expr><name pos:line="3888" pos:column="9">CONST_VTBL</name> struct <name pos:line="3888" pos:column="27">IVxProjectionSourceBuffersChangedEventVtbl</name> <op:operator pos:line="3888" pos:column="70">*</op:operator><name pos:line="3888" pos:column="71">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3893" pos:column="1">#<cpp:directive pos:line="3893" pos:column="2">ifdef</cpp:directive> <name pos:line="3893" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3896" pos:column="1">#<cpp:directive pos:line="3896" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3896" pos:column="9">IVxProjectionSourceBuffersChangedEvent_QueryInterface</name><parameter_list pos:line="3896" pos:column="62">(<param><type><name pos:line="3896" pos:column="63">This</name></type></param>,<param><type><name pos:line="3896" pos:column="68">riid</name></type></param>,<param><type><name pos:line="3896" pos:column="73">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3897" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3899" pos:column="1">#<cpp:directive pos:line="3899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3899" pos:column="9">IVxProjectionSourceBuffersChangedEvent_AddRef</name><parameter_list pos:line="3899" pos:column="54">(<param><type><name pos:line="3899" pos:column="55">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3900" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3902" pos:column="1">#<cpp:directive pos:line="3902" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3902" pos:column="9">IVxProjectionSourceBuffersChangedEvent_Release</name><parameter_list pos:line="3902" pos:column="55">(<param><type><name pos:line="3902" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3903" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3906" pos:column="1">#<cpp:directive pos:line="3906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3906" pos:column="9">IVxProjectionSourceBuffersChangedEvent_OnProjectionSourceBuffersChanged</name><parameter_list pos:line="3906" pos:column="80">(<param><type><name pos:line="3906" pos:column="81">This</name></type></param>,<param><type><name pos:line="3906" pos:column="86">pSender</name></type></param>,<param><type><name pos:line="3906" pos:column="94">pE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3907" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnProjectionSourceBuffersChanged(This,pSender,pE) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3909" pos:column="1">#<cpp:directive pos:line="3909" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3909" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3912" pos:column="1">#<cpp:directive pos:line="3912" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3912" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3917" pos:column="1">#<cpp:directive pos:line="3917" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3917" pos:column="9">/* __IVxProjectionSourceBuffersChangedEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3920" pos:column="1">#<cpp:directive pos:line="3920" pos:column="2">ifndef</cpp:directive> <name pos:line="3920" pos:column="9">__IEnumeratorIVxTrackingSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3921" pos:column="1">#<cpp:directive pos:line="3921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3921" pos:column="9">__IEnumeratorIVxTrackingSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3923" pos:column="1">/* interface IEnumeratorIVxTrackingSpan */</comment>
<comment type="block" pos:line="3924" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3927" pos:column="1">EXTERN_C</name> <specifier pos:line="3927" pos:column="10">const</specifier> <name pos:line="3927" pos:column="16">IID</name></type> <name pos:line="3927" pos:column="20">IID_IEnumeratorIVxTrackingSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="3929" pos:column="1">#<cpp:directive pos:line="3929" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3929" pos:column="5">defined</name><argument_list pos:line="3929" pos:column="12">(<argument><expr><name pos:line="3929" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3929" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3929" pos:column="29">!</op:operator><call><name pos:line="3929" pos:column="30">defined</name><argument_list pos:line="3929" pos:column="37">(<argument><expr><name pos:line="3929" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3931" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3931" pos:column="19">(<argument pos:line="3931" pos:column="20">"496727c4-5622-4889-94ae-ddd857bacea7"</argument>)</argument_list></macro>
    <label><name pos:line="3932" pos:column="5">IEnumeratorIVxTrackingSpan</name> :</label> <expr_stmt><expr pos:line="3932" pos:column="34">public <name pos:line="3932" pos:column="41">IUnknown</name>
    <block pos:line="3933" pos:column="5">{
    <expr pos:line="3934" pos:column="5">public<op:operator pos:line="3934" pos:column="11">:</op:operator>
        virtual <name pos:line="3935" pos:column="17">HRESULT</name> <name pos:line="3935" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3935" pos:column="43">GetCurrent</name><argument_list pos:line="3935" pos:column="53">( 
            <comment type="block" pos:line="3936" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3936" pos:column="33">IVxTrackingSpan</name> <op:operator pos:line="3936" pos:column="49">*</op:operator><op:operator pos:line="3936" pos:column="50">*</op:operator><name pos:line="3936" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3936" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="3936" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="3938" pos:column="9">virtual <name pos:line="3938" pos:column="17">HRESULT</name> <name pos:line="3938" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3938" pos:column="43">MoveNext</name><argument_list pos:line="3938" pos:column="51">( 
            <comment type="block" pos:line="3939" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="3939" pos:column="33">BOOL</name> <op:operator pos:line="3939" pos:column="38">*</op:operator><name pos:line="3939" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="3939" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3939" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="3941" pos:column="9">virtual <name pos:line="3941" pos:column="17">HRESULT</name> <name pos:line="3941" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3941" pos:column="43">Reset</name><argument_list pos:line="3941" pos:column="48">( <argument><expr><name pos:line="3941" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3941" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3941" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3945" pos:column="1">#<cpp:directive pos:line="3945" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3945" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3947" pos:column="5">typedef <type><struct pos:line="3947" pos:column="13">struct <name pos:line="3947" pos:column="20">IEnumeratorIVxTrackingSpanVtbl</name>
    <block pos:line="3948" pos:column="5">{<public type="default" pos:line="3948" pos:column="6">
        <function_decl><type><name pos:line="3949" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3951" pos:column="9">HRESULT</name></type> ( <name pos:line="3951" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3951" pos:column="37">*</type:modifier><name pos:line="3951" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3951" pos:column="54">( 
            <param><decl><type><name pos:line="3952" pos:column="13">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="3952" pos:column="40">*</type:modifier></type> <name pos:line="3952" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3953" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3953" pos:column="24">REFIID</name></type> <name pos:line="3953" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3954" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3955" pos:column="13">__RPC__deref_out</name>  <name pos:line="3955" pos:column="31">void</name> <type:modifier pos:line="3955" pos:column="36">*</type:modifier><type:modifier pos:line="3955" pos:column="37">*</type:modifier></type><name pos:line="3955" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3957" pos:column="9">ULONG</name></type> ( <name pos:line="3957" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3957" pos:column="35">*</type:modifier><name pos:line="3957" pos:column="36">AddRef</name> )<parameter_list pos:line="3957" pos:column="44">( 
            <param><decl><type><name pos:line="3958" pos:column="13">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="3958" pos:column="40">*</type:modifier></type> <name pos:line="3958" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3960" pos:column="9">ULONG</name></type> ( <name pos:line="3960" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3960" pos:column="35">*</type:modifier><name pos:line="3960" pos:column="36">Release</name> )<parameter_list pos:line="3960" pos:column="45">( 
            <param><decl><type><name pos:line="3961" pos:column="13">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="3961" pos:column="40">*</type:modifier></type> <name pos:line="3961" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3963" pos:column="9">HRESULT</name></type> ( <name pos:line="3963" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3963" pos:column="37">*</type:modifier><name pos:line="3963" pos:column="38">GetCurrent</name> )<parameter_list pos:line="3963" pos:column="50">( 
            <param><decl><type><name pos:line="3964" pos:column="13">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="3964" pos:column="40">*</type:modifier></type> <name pos:line="3964" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3965" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3965" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="3965" pos:column="49">*</type:modifier><type:modifier pos:line="3965" pos:column="50">*</type:modifier></type><name pos:line="3965" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3967" pos:column="9">HRESULT</name></type> ( <name pos:line="3967" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3967" pos:column="37">*</type:modifier><name pos:line="3967" pos:column="38">MoveNext</name> )<parameter_list pos:line="3967" pos:column="48">( 
            <param><decl><type><name pos:line="3968" pos:column="13">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="3968" pos:column="40">*</type:modifier></type> <name pos:line="3968" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3969" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3969" pos:column="33">BOOL</name> <type:modifier pos:line="3969" pos:column="38">*</type:modifier></type><name pos:line="3969" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3971" pos:column="9">HRESULT</name></type> ( <name pos:line="3971" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3971" pos:column="37">*</type:modifier><name pos:line="3971" pos:column="38">Reset</name> )<parameter_list pos:line="3971" pos:column="45">( 
            <param><decl><type><name pos:line="3972" pos:column="13">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="3972" pos:column="40">*</type:modifier></type> <name pos:line="3972" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3974" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3975" pos:column="7">IEnumeratorIVxTrackingSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3977" pos:column="5">interface</name></type> <name pos:line="3977" pos:column="15">IEnumeratorIVxTrackingSpan</name>
    <argument_list pos:line="3978" pos:column="5">{
        <argument><expr><name pos:line="3979" pos:column="9">CONST_VTBL</name> struct <name pos:line="3979" pos:column="27">IEnumeratorIVxTrackingSpanVtbl</name> <op:operator pos:line="3979" pos:column="58">*</op:operator><name pos:line="3979" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3984" pos:column="1">#<cpp:directive pos:line="3984" pos:column="2">ifdef</cpp:directive> <name pos:line="3984" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3987" pos:column="1">#<cpp:directive pos:line="3987" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3987" pos:column="9">IEnumeratorIVxTrackingSpan_QueryInterface</name><parameter_list pos:line="3987" pos:column="50">(<param><type><name pos:line="3987" pos:column="51">This</name></type></param>,<param><type><name pos:line="3987" pos:column="56">riid</name></type></param>,<param><type><name pos:line="3987" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3988" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3990" pos:column="1">#<cpp:directive pos:line="3990" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3990" pos:column="9">IEnumeratorIVxTrackingSpan_AddRef</name><parameter_list pos:line="3990" pos:column="42">(<param><type><name pos:line="3990" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3991" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3993" pos:column="1">#<cpp:directive pos:line="3993" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3993" pos:column="9">IEnumeratorIVxTrackingSpan_Release</name><parameter_list pos:line="3993" pos:column="43">(<param><type><name pos:line="3993" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3994" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3997" pos:column="1">#<cpp:directive pos:line="3997" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3997" pos:column="9">IEnumeratorIVxTrackingSpan_GetCurrent</name><parameter_list pos:line="3997" pos:column="46">(<param><type><name pos:line="3997" pos:column="47">This</name></type></param>,<param><type><name pos:line="3997" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3998" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4000" pos:column="1">#<cpp:directive pos:line="4000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4000" pos:column="9">IEnumeratorIVxTrackingSpan_MoveNext</name><parameter_list pos:line="4000" pos:column="44">(<param><type><name pos:line="4000" pos:column="45">This</name></type></param>,<param><type><name pos:line="4000" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4001" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4003" pos:column="1">#<cpp:directive pos:line="4003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4003" pos:column="9">IEnumeratorIVxTrackingSpan_Reset</name><parameter_list pos:line="4003" pos:column="41">(<param><type><name pos:line="4003" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4004" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4006" pos:column="1">#<cpp:directive pos:line="4006" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4006" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4009" pos:column="1">#<cpp:directive pos:line="4009" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4009" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4014" pos:column="1">#<cpp:directive pos:line="4014" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4014" pos:column="9">/* __IEnumeratorIVxTrackingSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4017" pos:column="1">#<cpp:directive pos:line="4017" pos:column="2">ifndef</cpp:directive> <name pos:line="4017" pos:column="9">__IListIVxTrackingSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4018" pos:column="1">#<cpp:directive pos:line="4018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4018" pos:column="9">__IListIVxTrackingSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4020" pos:column="1">/* interface IListIVxTrackingSpan */</comment>
<comment type="block" pos:line="4021" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4024" pos:column="1">EXTERN_C</name> <specifier pos:line="4024" pos:column="10">const</specifier> <name pos:line="4024" pos:column="16">IID</name></type> <name pos:line="4024" pos:column="20">IID_IListIVxTrackingSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="4026" pos:column="1">#<cpp:directive pos:line="4026" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4026" pos:column="5">defined</name><argument_list pos:line="4026" pos:column="12">(<argument><expr><name pos:line="4026" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4026" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4026" pos:column="29">!</op:operator><call><name pos:line="4026" pos:column="30">defined</name><argument_list pos:line="4026" pos:column="37">(<argument><expr><name pos:line="4026" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4028" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4028" pos:column="19">(<argument pos:line="4028" pos:column="20">"fb17674f-3e6c-4ad2-9d17-e605c3f45262"</argument>)</argument_list></macro>
    <label><name pos:line="4029" pos:column="5">IListIVxTrackingSpan</name> :</label> <expr_stmt><expr pos:line="4029" pos:column="28">public <name pos:line="4029" pos:column="35">IUnknown</name>
    <block pos:line="4030" pos:column="5">{
    <expr pos:line="4031" pos:column="5">public<op:operator pos:line="4031" pos:column="11">:</op:operator>
        virtual <name pos:line="4032" pos:column="17">HRESULT</name> <name pos:line="4032" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4032" pos:column="43">GetCount</name><argument_list pos:line="4032" pos:column="51">( 
            <comment type="block" pos:line="4033" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4033" pos:column="33">int</name> <op:operator pos:line="4033" pos:column="37">*</op:operator><name pos:line="4033" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4033" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="4033" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="4035" pos:column="9">virtual <name pos:line="4035" pos:column="17">HRESULT</name> <name pos:line="4035" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4035" pos:column="43">GetElement</name><argument_list pos:line="4035" pos:column="53">( 
            <comment type="block" pos:line="4036" pos:column="13">/* [in] */</comment> <argument pos:line="4036" pos:column="24">int index</argument>,
            <comment type="block" pos:line="4037" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4037" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="4037" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="4037" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="4039" pos:column="9">virtual <name pos:line="4039" pos:column="17">HRESULT</name> <name pos:line="4039" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4039" pos:column="43">GetEnumerator</name><argument_list pos:line="4039" pos:column="56">( 
            <comment type="block" pos:line="4040" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4040" pos:column="33">IEnumeratorIVxTrackingSpan</name> <op:operator pos:line="4040" pos:column="60">*</op:operator><op:operator pos:line="4040" pos:column="61">*</op:operator><name pos:line="4040" pos:column="62">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4040" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="4040" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4044" pos:column="1">#<cpp:directive pos:line="4044" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4044" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4046" pos:column="5">typedef <type><struct pos:line="4046" pos:column="13">struct <name pos:line="4046" pos:column="20">IListIVxTrackingSpanVtbl</name>
    <block pos:line="4047" pos:column="5">{<public type="default" pos:line="4047" pos:column="6">
        <function_decl><type><name pos:line="4048" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4050" pos:column="9">HRESULT</name></type> ( <name pos:line="4050" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4050" pos:column="37">*</type:modifier><name pos:line="4050" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4050" pos:column="54">( 
            <param><decl><type><name pos:line="4051" pos:column="13">IListIVxTrackingSpan</name> <type:modifier pos:line="4051" pos:column="34">*</type:modifier></type> <name pos:line="4051" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="4052" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4052" pos:column="24">REFIID</name></type> <name pos:line="4052" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4053" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4054" pos:column="13">__RPC__deref_out</name>  <name pos:line="4054" pos:column="31">void</name> <type:modifier pos:line="4054" pos:column="36">*</type:modifier><type:modifier pos:line="4054" pos:column="37">*</type:modifier></type><name pos:line="4054" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4056" pos:column="9">ULONG</name></type> ( <name pos:line="4056" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4056" pos:column="35">*</type:modifier><name pos:line="4056" pos:column="36">AddRef</name> )<parameter_list pos:line="4056" pos:column="44">( 
            <param><decl><type><name pos:line="4057" pos:column="13">IListIVxTrackingSpan</name> <type:modifier pos:line="4057" pos:column="34">*</type:modifier></type> <name pos:line="4057" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4059" pos:column="9">ULONG</name></type> ( <name pos:line="4059" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4059" pos:column="35">*</type:modifier><name pos:line="4059" pos:column="36">Release</name> )<parameter_list pos:line="4059" pos:column="45">( 
            <param><decl><type><name pos:line="4060" pos:column="13">IListIVxTrackingSpan</name> <type:modifier pos:line="4060" pos:column="34">*</type:modifier></type> <name pos:line="4060" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4062" pos:column="9">HRESULT</name></type> ( <name pos:line="4062" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4062" pos:column="37">*</type:modifier><name pos:line="4062" pos:column="38">GetCount</name> )<parameter_list pos:line="4062" pos:column="48">( 
            <param><decl><type><name pos:line="4063" pos:column="13">IListIVxTrackingSpan</name> <type:modifier pos:line="4063" pos:column="34">*</type:modifier></type> <name pos:line="4063" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="4064" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4064" pos:column="33">int</name> <type:modifier pos:line="4064" pos:column="37">*</type:modifier></type><name pos:line="4064" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4066" pos:column="9">HRESULT</name></type> ( <name pos:line="4066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4066" pos:column="37">*</type:modifier><name pos:line="4066" pos:column="38">GetElement</name> )<parameter_list pos:line="4066" pos:column="50">( 
            <param><decl><type><name pos:line="4067" pos:column="13">IListIVxTrackingSpan</name> <type:modifier pos:line="4067" pos:column="34">*</type:modifier></type> <name pos:line="4067" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="4068" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4068" pos:column="24">int</name></type> <name pos:line="4068" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="4069" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4069" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="4069" pos:column="49">*</type:modifier><type:modifier pos:line="4069" pos:column="50">*</type:modifier></type><name pos:line="4069" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4071" pos:column="9">HRESULT</name></type> ( <name pos:line="4071" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4071" pos:column="37">*</type:modifier><name pos:line="4071" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="4071" pos:column="53">( 
            <param><decl><type><name pos:line="4072" pos:column="13">IListIVxTrackingSpan</name> <type:modifier pos:line="4072" pos:column="34">*</type:modifier></type> <name pos:line="4072" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="4073" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4073" pos:column="33">IEnumeratorIVxTrackingSpan</name> <type:modifier pos:line="4073" pos:column="60">*</type:modifier><type:modifier pos:line="4073" pos:column="61">*</type:modifier></type><name pos:line="4073" pos:column="62">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4075" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4076" pos:column="7">IListIVxTrackingSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4078" pos:column="5">interface</name></type> <name pos:line="4078" pos:column="15">IListIVxTrackingSpan</name>
    <argument_list pos:line="4079" pos:column="5">{
        <argument><expr><name pos:line="4080" pos:column="9">CONST_VTBL</name> struct <name pos:line="4080" pos:column="27">IListIVxTrackingSpanVtbl</name> <op:operator pos:line="4080" pos:column="52">*</op:operator><name pos:line="4080" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4085" pos:column="1">#<cpp:directive pos:line="4085" pos:column="2">ifdef</cpp:directive> <name pos:line="4085" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4088" pos:column="1">#<cpp:directive pos:line="4088" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4088" pos:column="9">IListIVxTrackingSpan_QueryInterface</name><parameter_list pos:line="4088" pos:column="44">(<param><type><name pos:line="4088" pos:column="45">This</name></type></param>,<param><type><name pos:line="4088" pos:column="50">riid</name></type></param>,<param><type><name pos:line="4088" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4089" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4091" pos:column="1">#<cpp:directive pos:line="4091" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4091" pos:column="9">IListIVxTrackingSpan_AddRef</name><parameter_list pos:line="4091" pos:column="36">(<param><type><name pos:line="4091" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4092" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4094" pos:column="1">#<cpp:directive pos:line="4094" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4094" pos:column="9">IListIVxTrackingSpan_Release</name><parameter_list pos:line="4094" pos:column="37">(<param><type><name pos:line="4094" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4095" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4098" pos:column="1">#<cpp:directive pos:line="4098" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4098" pos:column="9">IListIVxTrackingSpan_GetCount</name><parameter_list pos:line="4098" pos:column="38">(<param><type><name pos:line="4098" pos:column="39">This</name></type></param>,<param><type><name pos:line="4098" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4099" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4101" pos:column="1">#<cpp:directive pos:line="4101" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4101" pos:column="9">IListIVxTrackingSpan_GetElement</name><parameter_list pos:line="4101" pos:column="40">(<param><type><name pos:line="4101" pos:column="41">This</name></type></param>,<param><type><name pos:line="4101" pos:column="46">index</name></type></param>,<param><type><name pos:line="4101" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4102" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4104" pos:column="1">#<cpp:directive pos:line="4104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4104" pos:column="9">IListIVxTrackingSpan_GetEnumerator</name><parameter_list pos:line="4104" pos:column="43">(<param><type><name pos:line="4104" pos:column="44">This</name></type></param>,<param><type><name pos:line="4104" pos:column="49">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4105" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4107" pos:column="1">#<cpp:directive pos:line="4107" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4107" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4110" pos:column="1">#<cpp:directive pos:line="4110" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4110" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4115" pos:column="1">#<cpp:directive pos:line="4115" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4115" pos:column="9">/* __IListIVxTrackingSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4118" pos:column="1">#<cpp:directive pos:line="4118" pos:column="2">ifndef</cpp:directive> <name pos:line="4118" pos:column="9">__IEnumeratorIVxTextChange_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4119" pos:column="1">#<cpp:directive pos:line="4119" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4119" pos:column="9">__IEnumeratorIVxTextChange_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4121" pos:column="1">/* interface IEnumeratorIVxTextChange */</comment>
<comment type="block" pos:line="4122" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4125" pos:column="1">EXTERN_C</name> <specifier pos:line="4125" pos:column="10">const</specifier> <name pos:line="4125" pos:column="16">IID</name></type> <name pos:line="4125" pos:column="20">IID_IEnumeratorIVxTextChange</name></decl>;</decl_stmt>

<cpp:if pos:line="4127" pos:column="1">#<cpp:directive pos:line="4127" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4127" pos:column="5">defined</name><argument_list pos:line="4127" pos:column="12">(<argument><expr><name pos:line="4127" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4127" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4127" pos:column="29">!</op:operator><call><name pos:line="4127" pos:column="30">defined</name><argument_list pos:line="4127" pos:column="37">(<argument><expr><name pos:line="4127" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4129" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4129" pos:column="19">(<argument pos:line="4129" pos:column="20">"a4728f3b-90ee-4783-a6af-0caeeea73147"</argument>)</argument_list></macro>
    <label><name pos:line="4130" pos:column="5">IEnumeratorIVxTextChange</name> :</label> <expr_stmt><expr pos:line="4130" pos:column="32">public <name pos:line="4130" pos:column="39">IUnknown</name>
    <block pos:line="4131" pos:column="5">{
    <expr pos:line="4132" pos:column="5">public<op:operator pos:line="4132" pos:column="11">:</op:operator>
        virtual <name pos:line="4133" pos:column="17">HRESULT</name> <name pos:line="4133" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4133" pos:column="43">GetCurrent</name><argument_list pos:line="4133" pos:column="53">( 
            <comment type="block" pos:line="4134" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4134" pos:column="33">IVxTextChange</name> <op:operator pos:line="4134" pos:column="47">*</op:operator><op:operator pos:line="4134" pos:column="48">*</op:operator><name pos:line="4134" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4134" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="4134" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="4136" pos:column="9">virtual <name pos:line="4136" pos:column="17">HRESULT</name> <name pos:line="4136" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4136" pos:column="43">MoveNext</name><argument_list pos:line="4136" pos:column="51">( 
            <comment type="block" pos:line="4137" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4137" pos:column="33">BOOL</name> <op:operator pos:line="4137" pos:column="38">*</op:operator><name pos:line="4137" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4137" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4137" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4139" pos:column="9">virtual <name pos:line="4139" pos:column="17">HRESULT</name> <name pos:line="4139" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4139" pos:column="43">Reset</name><argument_list pos:line="4139" pos:column="48">( <argument><expr><name pos:line="4139" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4139" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="4139" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4143" pos:column="1">#<cpp:directive pos:line="4143" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4143" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4145" pos:column="5">typedef <type><struct pos:line="4145" pos:column="13">struct <name pos:line="4145" pos:column="20">IEnumeratorIVxTextChangeVtbl</name>
    <block pos:line="4146" pos:column="5">{<public type="default" pos:line="4146" pos:column="6">
        <function_decl><type><name pos:line="4147" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4149" pos:column="9">HRESULT</name></type> ( <name pos:line="4149" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4149" pos:column="37">*</type:modifier><name pos:line="4149" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4149" pos:column="54">( 
            <param><decl><type><name pos:line="4150" pos:column="13">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4150" pos:column="38">*</type:modifier></type> <name pos:line="4150" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4151" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4151" pos:column="24">REFIID</name></type> <name pos:line="4151" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4152" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4153" pos:column="13">__RPC__deref_out</name>  <name pos:line="4153" pos:column="31">void</name> <type:modifier pos:line="4153" pos:column="36">*</type:modifier><type:modifier pos:line="4153" pos:column="37">*</type:modifier></type><name pos:line="4153" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4155" pos:column="9">ULONG</name></type> ( <name pos:line="4155" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4155" pos:column="35">*</type:modifier><name pos:line="4155" pos:column="36">AddRef</name> )<parameter_list pos:line="4155" pos:column="44">( 
            <param><decl><type><name pos:line="4156" pos:column="13">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4156" pos:column="38">*</type:modifier></type> <name pos:line="4156" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4158" pos:column="9">ULONG</name></type> ( <name pos:line="4158" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4158" pos:column="35">*</type:modifier><name pos:line="4158" pos:column="36">Release</name> )<parameter_list pos:line="4158" pos:column="45">( 
            <param><decl><type><name pos:line="4159" pos:column="13">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4159" pos:column="38">*</type:modifier></type> <name pos:line="4159" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4161" pos:column="9">HRESULT</name></type> ( <name pos:line="4161" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4161" pos:column="37">*</type:modifier><name pos:line="4161" pos:column="38">GetCurrent</name> )<parameter_list pos:line="4161" pos:column="50">( 
            <param><decl><type><name pos:line="4162" pos:column="13">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4162" pos:column="38">*</type:modifier></type> <name pos:line="4162" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4163" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4163" pos:column="33">IVxTextChange</name> <type:modifier pos:line="4163" pos:column="47">*</type:modifier><type:modifier pos:line="4163" pos:column="48">*</type:modifier></type><name pos:line="4163" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4165" pos:column="9">HRESULT</name></type> ( <name pos:line="4165" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4165" pos:column="37">*</type:modifier><name pos:line="4165" pos:column="38">MoveNext</name> )<parameter_list pos:line="4165" pos:column="48">( 
            <param><decl><type><name pos:line="4166" pos:column="13">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4166" pos:column="38">*</type:modifier></type> <name pos:line="4166" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4167" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4167" pos:column="33">BOOL</name> <type:modifier pos:line="4167" pos:column="38">*</type:modifier></type><name pos:line="4167" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4169" pos:column="9">HRESULT</name></type> ( <name pos:line="4169" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4169" pos:column="37">*</type:modifier><name pos:line="4169" pos:column="38">Reset</name> )<parameter_list pos:line="4169" pos:column="45">( 
            <param><decl><type><name pos:line="4170" pos:column="13">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4170" pos:column="38">*</type:modifier></type> <name pos:line="4170" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4172" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4173" pos:column="7">IEnumeratorIVxTextChangeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4175" pos:column="5">interface</name></type> <name pos:line="4175" pos:column="15">IEnumeratorIVxTextChange</name>
    <argument_list pos:line="4176" pos:column="5">{
        <argument><expr><name pos:line="4177" pos:column="9">CONST_VTBL</name> struct <name pos:line="4177" pos:column="27">IEnumeratorIVxTextChangeVtbl</name> <op:operator pos:line="4177" pos:column="56">*</op:operator><name pos:line="4177" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4182" pos:column="1">#<cpp:directive pos:line="4182" pos:column="2">ifdef</cpp:directive> <name pos:line="4182" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4185" pos:column="1">#<cpp:directive pos:line="4185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4185" pos:column="9">IEnumeratorIVxTextChange_QueryInterface</name><parameter_list pos:line="4185" pos:column="48">(<param><type><name pos:line="4185" pos:column="49">This</name></type></param>,<param><type><name pos:line="4185" pos:column="54">riid</name></type></param>,<param><type><name pos:line="4185" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4186" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4188" pos:column="1">#<cpp:directive pos:line="4188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4188" pos:column="9">IEnumeratorIVxTextChange_AddRef</name><parameter_list pos:line="4188" pos:column="40">(<param><type><name pos:line="4188" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4189" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4191" pos:column="1">#<cpp:directive pos:line="4191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4191" pos:column="9">IEnumeratorIVxTextChange_Release</name><parameter_list pos:line="4191" pos:column="41">(<param><type><name pos:line="4191" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4192" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4195" pos:column="1">#<cpp:directive pos:line="4195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4195" pos:column="9">IEnumeratorIVxTextChange_GetCurrent</name><parameter_list pos:line="4195" pos:column="44">(<param><type><name pos:line="4195" pos:column="45">This</name></type></param>,<param><type><name pos:line="4195" pos:column="50">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4196" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrent(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4198" pos:column="1">#<cpp:directive pos:line="4198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4198" pos:column="9">IEnumeratorIVxTextChange_MoveNext</name><parameter_list pos:line="4198" pos:column="42">(<param><type><name pos:line="4198" pos:column="43">This</name></type></param>,<param><type><name pos:line="4198" pos:column="48">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4199" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveNext(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4201" pos:column="1">#<cpp:directive pos:line="4201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4201" pos:column="9">IEnumeratorIVxTextChange_Reset</name><parameter_list pos:line="4201" pos:column="39">(<param><type><name pos:line="4201" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4202" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4204" pos:column="1">#<cpp:directive pos:line="4204" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4204" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4207" pos:column="1">#<cpp:directive pos:line="4207" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4207" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4212" pos:column="1">#<cpp:directive pos:line="4212" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4212" pos:column="9">/* __IEnumeratorIVxTextChange_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4215" pos:column="1">#<cpp:directive pos:line="4215" pos:column="2">ifndef</cpp:directive> <name pos:line="4215" pos:column="9">__IListIVxTextChange_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4216" pos:column="1">#<cpp:directive pos:line="4216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4216" pos:column="9">__IListIVxTextChange_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4218" pos:column="1">/* interface IListIVxTextChange */</comment>
<comment type="block" pos:line="4219" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4222" pos:column="1">EXTERN_C</name> <specifier pos:line="4222" pos:column="10">const</specifier> <name pos:line="4222" pos:column="16">IID</name></type> <name pos:line="4222" pos:column="20">IID_IListIVxTextChange</name></decl>;</decl_stmt>

<cpp:if pos:line="4224" pos:column="1">#<cpp:directive pos:line="4224" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4224" pos:column="5">defined</name><argument_list pos:line="4224" pos:column="12">(<argument><expr><name pos:line="4224" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4224" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4224" pos:column="29">!</op:operator><call><name pos:line="4224" pos:column="30">defined</name><argument_list pos:line="4224" pos:column="37">(<argument><expr><name pos:line="4224" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4226" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4226" pos:column="19">(<argument pos:line="4226" pos:column="20">"7627a97f-187f-428e-bba9-07183f73a088"</argument>)</argument_list></macro>
    <label><name pos:line="4227" pos:column="5">IListIVxTextChange</name> :</label> <expr_stmt><expr pos:line="4227" pos:column="26">public <name pos:line="4227" pos:column="33">IUnknown</name>
    <block pos:line="4228" pos:column="5">{
    <expr pos:line="4229" pos:column="5">public<op:operator pos:line="4229" pos:column="11">:</op:operator>
        virtual <name pos:line="4230" pos:column="17">HRESULT</name> <name pos:line="4230" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4230" pos:column="43">GetCount</name><argument_list pos:line="4230" pos:column="51">( 
            <comment type="block" pos:line="4231" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4231" pos:column="33">int</name> <op:operator pos:line="4231" pos:column="37">*</op:operator><name pos:line="4231" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4231" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="4231" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="4233" pos:column="9">virtual <name pos:line="4233" pos:column="17">HRESULT</name> <name pos:line="4233" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4233" pos:column="43">GetElement</name><argument_list pos:line="4233" pos:column="53">( 
            <comment type="block" pos:line="4234" pos:column="13">/* [in] */</comment> <argument pos:line="4234" pos:column="24">int index</argument>,
            <comment type="block" pos:line="4235" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4235" pos:column="33">IVxTextChange **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="4235" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="4235" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="4237" pos:column="9">virtual <name pos:line="4237" pos:column="17">HRESULT</name> <name pos:line="4237" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4237" pos:column="43">GetEnumerator</name><argument_list pos:line="4237" pos:column="56">( 
            <comment type="block" pos:line="4238" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4238" pos:column="33">IEnumeratorIVxTextChange</name> <op:operator pos:line="4238" pos:column="58">*</op:operator><op:operator pos:line="4238" pos:column="59">*</op:operator><name pos:line="4238" pos:column="60">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4238" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="4238" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4242" pos:column="1">#<cpp:directive pos:line="4242" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4242" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4244" pos:column="5">typedef <type><struct pos:line="4244" pos:column="13">struct <name pos:line="4244" pos:column="20">IListIVxTextChangeVtbl</name>
    <block pos:line="4245" pos:column="5">{<public type="default" pos:line="4245" pos:column="6">
        <function_decl><type><name pos:line="4246" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4248" pos:column="9">HRESULT</name></type> ( <name pos:line="4248" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4248" pos:column="37">*</type:modifier><name pos:line="4248" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4248" pos:column="54">( 
            <param><decl><type><name pos:line="4249" pos:column="13">IListIVxTextChange</name> <type:modifier pos:line="4249" pos:column="32">*</type:modifier></type> <name pos:line="4249" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="4250" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4250" pos:column="24">REFIID</name></type> <name pos:line="4250" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4251" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4252" pos:column="13">__RPC__deref_out</name>  <name pos:line="4252" pos:column="31">void</name> <type:modifier pos:line="4252" pos:column="36">*</type:modifier><type:modifier pos:line="4252" pos:column="37">*</type:modifier></type><name pos:line="4252" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4254" pos:column="9">ULONG</name></type> ( <name pos:line="4254" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4254" pos:column="35">*</type:modifier><name pos:line="4254" pos:column="36">AddRef</name> )<parameter_list pos:line="4254" pos:column="44">( 
            <param><decl><type><name pos:line="4255" pos:column="13">IListIVxTextChange</name> <type:modifier pos:line="4255" pos:column="32">*</type:modifier></type> <name pos:line="4255" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4257" pos:column="9">ULONG</name></type> ( <name pos:line="4257" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4257" pos:column="35">*</type:modifier><name pos:line="4257" pos:column="36">Release</name> )<parameter_list pos:line="4257" pos:column="45">( 
            <param><decl><type><name pos:line="4258" pos:column="13">IListIVxTextChange</name> <type:modifier pos:line="4258" pos:column="32">*</type:modifier></type> <name pos:line="4258" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4260" pos:column="9">HRESULT</name></type> ( <name pos:line="4260" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4260" pos:column="37">*</type:modifier><name pos:line="4260" pos:column="38">GetCount</name> )<parameter_list pos:line="4260" pos:column="48">( 
            <param><decl><type><name pos:line="4261" pos:column="13">IListIVxTextChange</name> <type:modifier pos:line="4261" pos:column="32">*</type:modifier></type> <name pos:line="4261" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="4262" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4262" pos:column="33">int</name> <type:modifier pos:line="4262" pos:column="37">*</type:modifier></type><name pos:line="4262" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4264" pos:column="9">HRESULT</name></type> ( <name pos:line="4264" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4264" pos:column="37">*</type:modifier><name pos:line="4264" pos:column="38">GetElement</name> )<parameter_list pos:line="4264" pos:column="50">( 
            <param><decl><type><name pos:line="4265" pos:column="13">IListIVxTextChange</name> <type:modifier pos:line="4265" pos:column="32">*</type:modifier></type> <name pos:line="4265" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="4266" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4266" pos:column="24">int</name></type> <name pos:line="4266" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="4267" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4267" pos:column="33">IVxTextChange</name> <type:modifier pos:line="4267" pos:column="47">*</type:modifier><type:modifier pos:line="4267" pos:column="48">*</type:modifier></type><name pos:line="4267" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4269" pos:column="9">HRESULT</name></type> ( <name pos:line="4269" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4269" pos:column="37">*</type:modifier><name pos:line="4269" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="4269" pos:column="53">( 
            <param><decl><type><name pos:line="4270" pos:column="13">IListIVxTextChange</name> <type:modifier pos:line="4270" pos:column="32">*</type:modifier></type> <name pos:line="4270" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="4271" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4271" pos:column="33">IEnumeratorIVxTextChange</name> <type:modifier pos:line="4271" pos:column="58">*</type:modifier><type:modifier pos:line="4271" pos:column="59">*</type:modifier></type><name pos:line="4271" pos:column="60">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4273" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4274" pos:column="7">IListIVxTextChangeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4276" pos:column="5">interface</name></type> <name pos:line="4276" pos:column="15">IListIVxTextChange</name>
    <argument_list pos:line="4277" pos:column="5">{
        <argument><expr><name pos:line="4278" pos:column="9">CONST_VTBL</name> struct <name pos:line="4278" pos:column="27">IListIVxTextChangeVtbl</name> <op:operator pos:line="4278" pos:column="50">*</op:operator><name pos:line="4278" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4283" pos:column="1">#<cpp:directive pos:line="4283" pos:column="2">ifdef</cpp:directive> <name pos:line="4283" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4286" pos:column="1">#<cpp:directive pos:line="4286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4286" pos:column="9">IListIVxTextChange_QueryInterface</name><parameter_list pos:line="4286" pos:column="42">(<param><type><name pos:line="4286" pos:column="43">This</name></type></param>,<param><type><name pos:line="4286" pos:column="48">riid</name></type></param>,<param><type><name pos:line="4286" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4287" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4289" pos:column="1">#<cpp:directive pos:line="4289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4289" pos:column="9">IListIVxTextChange_AddRef</name><parameter_list pos:line="4289" pos:column="34">(<param><type><name pos:line="4289" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4290" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4292" pos:column="1">#<cpp:directive pos:line="4292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4292" pos:column="9">IListIVxTextChange_Release</name><parameter_list pos:line="4292" pos:column="35">(<param><type><name pos:line="4292" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4293" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4296" pos:column="1">#<cpp:directive pos:line="4296" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4296" pos:column="9">IListIVxTextChange_GetCount</name><parameter_list pos:line="4296" pos:column="36">(<param><type><name pos:line="4296" pos:column="37">This</name></type></param>,<param><type><name pos:line="4296" pos:column="42">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4297" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4299" pos:column="1">#<cpp:directive pos:line="4299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4299" pos:column="9">IListIVxTextChange_GetElement</name><parameter_list pos:line="4299" pos:column="38">(<param><type><name pos:line="4299" pos:column="39">This</name></type></param>,<param><type><name pos:line="4299" pos:column="44">index</name></type></param>,<param><type><name pos:line="4299" pos:column="50">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4300" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4302" pos:column="1">#<cpp:directive pos:line="4302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4302" pos:column="9">IListIVxTextChange_GetEnumerator</name><parameter_list pos:line="4302" pos:column="41">(<param><type><name pos:line="4302" pos:column="42">This</name></type></param>,<param><type><name pos:line="4302" pos:column="47">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4303" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4305" pos:column="1">#<cpp:directive pos:line="4305" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4305" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4308" pos:column="1">#<cpp:directive pos:line="4308" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4308" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4313" pos:column="1">#<cpp:directive pos:line="4313" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4313" pos:column="9">/* __IListIVxTextChange_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4316" pos:column="1">#<cpp:directive pos:line="4316" pos:column="2">ifndef</cpp:directive> <name pos:line="4316" pos:column="9">__IVxDisposable_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4317" pos:column="1">#<cpp:directive pos:line="4317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4317" pos:column="9">__IVxDisposable_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4319" pos:column="1">/* interface IVxDisposable */</comment>
<comment type="block" pos:line="4320" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4323" pos:column="1">EXTERN_C</name> <specifier pos:line="4323" pos:column="10">const</specifier> <name pos:line="4323" pos:column="16">IID</name></type> <name pos:line="4323" pos:column="20">IID_IVxDisposable</name></decl>;</decl_stmt>

<cpp:if pos:line="4325" pos:column="1">#<cpp:directive pos:line="4325" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4325" pos:column="5">defined</name><argument_list pos:line="4325" pos:column="12">(<argument><expr><name pos:line="4325" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4325" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4325" pos:column="29">!</op:operator><call><name pos:line="4325" pos:column="30">defined</name><argument_list pos:line="4325" pos:column="37">(<argument><expr><name pos:line="4325" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4327" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4327" pos:column="19">(<argument pos:line="4327" pos:column="20">"00c8c1e7-de26-42cf-a058-5ccda2b42beb"</argument>)</argument_list></macro>
    <label><name pos:line="4328" pos:column="5">IVxDisposable</name> :</label> <expr_stmt><expr pos:line="4328" pos:column="21">public <name pos:line="4328" pos:column="28">IUnknown</name>
    <block pos:line="4329" pos:column="5">{
    <expr pos:line="4330" pos:column="5">public<op:operator pos:line="4330" pos:column="11">:</op:operator>
        virtual <name pos:line="4331" pos:column="17">HRESULT</name> <name pos:line="4331" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4331" pos:column="43">Dispose</name><argument_list pos:line="4331" pos:column="50">( <argument><expr><name pos:line="4331" pos:column="52">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4331" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4331" pos:column="60">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4335" pos:column="1">#<cpp:directive pos:line="4335" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4335" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4337" pos:column="5">typedef <type><struct pos:line="4337" pos:column="13">struct <name pos:line="4337" pos:column="20">IVxDisposableVtbl</name>
    <block pos:line="4338" pos:column="5">{<public type="default" pos:line="4338" pos:column="6">
        <function_decl><type><name pos:line="4339" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4341" pos:column="9">HRESULT</name></type> ( <name pos:line="4341" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4341" pos:column="37">*</type:modifier><name pos:line="4341" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4341" pos:column="54">( 
            <param><decl><type><name pos:line="4342" pos:column="13">IVxDisposable</name> <type:modifier pos:line="4342" pos:column="27">*</type:modifier></type> <name pos:line="4342" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4343" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4343" pos:column="24">REFIID</name></type> <name pos:line="4343" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4344" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4345" pos:column="13">__RPC__deref_out</name>  <name pos:line="4345" pos:column="31">void</name> <type:modifier pos:line="4345" pos:column="36">*</type:modifier><type:modifier pos:line="4345" pos:column="37">*</type:modifier></type><name pos:line="4345" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4347" pos:column="9">ULONG</name></type> ( <name pos:line="4347" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4347" pos:column="35">*</type:modifier><name pos:line="4347" pos:column="36">AddRef</name> )<parameter_list pos:line="4347" pos:column="44">( 
            <param><decl><type><name pos:line="4348" pos:column="13">IVxDisposable</name> <type:modifier pos:line="4348" pos:column="27">*</type:modifier></type> <name pos:line="4348" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4350" pos:column="9">ULONG</name></type> ( <name pos:line="4350" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4350" pos:column="35">*</type:modifier><name pos:line="4350" pos:column="36">Release</name> )<parameter_list pos:line="4350" pos:column="45">( 
            <param><decl><type><name pos:line="4351" pos:column="13">IVxDisposable</name> <type:modifier pos:line="4351" pos:column="27">*</type:modifier></type> <name pos:line="4351" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4353" pos:column="9">HRESULT</name></type> ( <name pos:line="4353" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4353" pos:column="37">*</type:modifier><name pos:line="4353" pos:column="38">Dispose</name> )<parameter_list pos:line="4353" pos:column="47">( 
            <param><decl><type><name pos:line="4354" pos:column="13">IVxDisposable</name> <type:modifier pos:line="4354" pos:column="27">*</type:modifier></type> <name pos:line="4354" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4356" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4357" pos:column="7">IVxDisposableVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4359" pos:column="5">interface</name></type> <name pos:line="4359" pos:column="15">IVxDisposable</name>
    <argument_list pos:line="4360" pos:column="5">{
        <argument><expr><name pos:line="4361" pos:column="9">CONST_VTBL</name> struct <name pos:line="4361" pos:column="27">IVxDisposableVtbl</name> <op:operator pos:line="4361" pos:column="45">*</op:operator><name pos:line="4361" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4366" pos:column="1">#<cpp:directive pos:line="4366" pos:column="2">ifdef</cpp:directive> <name pos:line="4366" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4369" pos:column="1">#<cpp:directive pos:line="4369" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4369" pos:column="9">IVxDisposable_QueryInterface</name><parameter_list pos:line="4369" pos:column="37">(<param><type><name pos:line="4369" pos:column="38">This</name></type></param>,<param><type><name pos:line="4369" pos:column="43">riid</name></type></param>,<param><type><name pos:line="4369" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4370" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4372" pos:column="1">#<cpp:directive pos:line="4372" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4372" pos:column="9">IVxDisposable_AddRef</name><parameter_list pos:line="4372" pos:column="29">(<param><type><name pos:line="4372" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4373" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4375" pos:column="1">#<cpp:directive pos:line="4375" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4375" pos:column="9">IVxDisposable_Release</name><parameter_list pos:line="4375" pos:column="30">(<param><type><name pos:line="4375" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4376" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4379" pos:column="1">#<cpp:directive pos:line="4379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4379" pos:column="9">IVxDisposable_Dispose</name><parameter_list pos:line="4379" pos:column="30">(<param><type><name pos:line="4379" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4380" pos:column="5">( (This)-&gt;lpVtbl -&gt; Dispose(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4382" pos:column="1">#<cpp:directive pos:line="4382" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4382" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4385" pos:column="1">#<cpp:directive pos:line="4385" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4385" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4390" pos:column="1">#<cpp:directive pos:line="4390" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4390" pos:column="9">/* __IVxDisposable_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4393" pos:column="1">#<cpp:directive pos:line="4393" pos:column="2">ifndef</cpp:directive> <name pos:line="4393" pos:column="9">__IVxPropertyOwner_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4394" pos:column="1">#<cpp:directive pos:line="4394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4394" pos:column="9">__IVxPropertyOwner_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4396" pos:column="1">/* interface IVxPropertyOwner */</comment>
<comment type="block" pos:line="4397" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4400" pos:column="1">EXTERN_C</name> <specifier pos:line="4400" pos:column="10">const</specifier> <name pos:line="4400" pos:column="16">IID</name></type> <name pos:line="4400" pos:column="20">IID_IVxPropertyOwner</name></decl>;</decl_stmt>

<cpp:if pos:line="4402" pos:column="1">#<cpp:directive pos:line="4402" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4402" pos:column="5">defined</name><argument_list pos:line="4402" pos:column="12">(<argument><expr><name pos:line="4402" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4402" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4402" pos:column="29">!</op:operator><call><name pos:line="4402" pos:column="30">defined</name><argument_list pos:line="4402" pos:column="37">(<argument><expr><name pos:line="4402" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4404" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4404" pos:column="19">(<argument pos:line="4404" pos:column="20">"b7b3e0d6-f9f3-415e-a977-a06cc723aff1"</argument>)</argument_list></macro>
    <label><name pos:line="4405" pos:column="5">IVxPropertyOwner</name> :</label> <expr_stmt><expr pos:line="4405" pos:column="24">public <name pos:line="4405" pos:column="31">IUnknown</name>
    <block pos:line="4406" pos:column="5">{
    <expr pos:line="4407" pos:column="5">public<op:operator pos:line="4407" pos:column="11">:</op:operator>
        virtual <name pos:line="4408" pos:column="17">HRESULT</name> <name pos:line="4408" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4408" pos:column="43">GetProperties</name><argument_list pos:line="4408" pos:column="56">( 
            <comment type="block" pos:line="4409" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4409" pos:column="33">IVxPropertyCollection</name> <op:operator pos:line="4409" pos:column="55">*</op:operator><op:operator pos:line="4409" pos:column="56">*</op:operator><name pos:line="4409" pos:column="57">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4409" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="4409" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4413" pos:column="1">#<cpp:directive pos:line="4413" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4413" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4415" pos:column="5">typedef <type><struct pos:line="4415" pos:column="13">struct <name pos:line="4415" pos:column="20">IVxPropertyOwnerVtbl</name>
    <block pos:line="4416" pos:column="5">{<public type="default" pos:line="4416" pos:column="6">
        <function_decl><type><name pos:line="4417" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4419" pos:column="9">HRESULT</name></type> ( <name pos:line="4419" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4419" pos:column="37">*</type:modifier><name pos:line="4419" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4419" pos:column="54">( 
            <param><decl><type><name pos:line="4420" pos:column="13">IVxPropertyOwner</name> <type:modifier pos:line="4420" pos:column="30">*</type:modifier></type> <name pos:line="4420" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="4421" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4421" pos:column="24">REFIID</name></type> <name pos:line="4421" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4422" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4423" pos:column="13">__RPC__deref_out</name>  <name pos:line="4423" pos:column="31">void</name> <type:modifier pos:line="4423" pos:column="36">*</type:modifier><type:modifier pos:line="4423" pos:column="37">*</type:modifier></type><name pos:line="4423" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4425" pos:column="9">ULONG</name></type> ( <name pos:line="4425" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4425" pos:column="35">*</type:modifier><name pos:line="4425" pos:column="36">AddRef</name> )<parameter_list pos:line="4425" pos:column="44">( 
            <param><decl><type><name pos:line="4426" pos:column="13">IVxPropertyOwner</name> <type:modifier pos:line="4426" pos:column="30">*</type:modifier></type> <name pos:line="4426" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4428" pos:column="9">ULONG</name></type> ( <name pos:line="4428" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4428" pos:column="35">*</type:modifier><name pos:line="4428" pos:column="36">Release</name> )<parameter_list pos:line="4428" pos:column="45">( 
            <param><decl><type><name pos:line="4429" pos:column="13">IVxPropertyOwner</name> <type:modifier pos:line="4429" pos:column="30">*</type:modifier></type> <name pos:line="4429" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4431" pos:column="9">HRESULT</name></type> ( <name pos:line="4431" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4431" pos:column="37">*</type:modifier><name pos:line="4431" pos:column="38">GetProperties</name> )<parameter_list pos:line="4431" pos:column="53">( 
            <param><decl><type><name pos:line="4432" pos:column="13">IVxPropertyOwner</name> <type:modifier pos:line="4432" pos:column="30">*</type:modifier></type> <name pos:line="4432" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="4433" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4433" pos:column="33">IVxPropertyCollection</name> <type:modifier pos:line="4433" pos:column="55">*</type:modifier><type:modifier pos:line="4433" pos:column="56">*</type:modifier></type><name pos:line="4433" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4435" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4436" pos:column="7">IVxPropertyOwnerVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4438" pos:column="5">interface</name></type> <name pos:line="4438" pos:column="15">IVxPropertyOwner</name>
    <argument_list pos:line="4439" pos:column="5">{
        <argument><expr><name pos:line="4440" pos:column="9">CONST_VTBL</name> struct <name pos:line="4440" pos:column="27">IVxPropertyOwnerVtbl</name> <op:operator pos:line="4440" pos:column="48">*</op:operator><name pos:line="4440" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4445" pos:column="1">#<cpp:directive pos:line="4445" pos:column="2">ifdef</cpp:directive> <name pos:line="4445" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4448" pos:column="1">#<cpp:directive pos:line="4448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4448" pos:column="9">IVxPropertyOwner_QueryInterface</name><parameter_list pos:line="4448" pos:column="40">(<param><type><name pos:line="4448" pos:column="41">This</name></type></param>,<param><type><name pos:line="4448" pos:column="46">riid</name></type></param>,<param><type><name pos:line="4448" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4449" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4451" pos:column="1">#<cpp:directive pos:line="4451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4451" pos:column="9">IVxPropertyOwner_AddRef</name><parameter_list pos:line="4451" pos:column="32">(<param><type><name pos:line="4451" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4452" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4454" pos:column="1">#<cpp:directive pos:line="4454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4454" pos:column="9">IVxPropertyOwner_Release</name><parameter_list pos:line="4454" pos:column="33">(<param><type><name pos:line="4454" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4455" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4458" pos:column="1">#<cpp:directive pos:line="4458" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4458" pos:column="9">IVxPropertyOwner_GetProperties</name><parameter_list pos:line="4458" pos:column="39">(<param><type><name pos:line="4458" pos:column="40">This</name></type></param>,<param><type><name pos:line="4458" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4459" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProperties(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4461" pos:column="1">#<cpp:directive pos:line="4461" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4461" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4464" pos:column="1">#<cpp:directive pos:line="4464" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4464" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4469" pos:column="1">#<cpp:directive pos:line="4469" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4469" pos:column="9">/* __IVxPropertyOwner_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4472" pos:column="1">#<cpp:directive pos:line="4472" pos:column="2">ifndef</cpp:directive> <name pos:line="4472" pos:column="9">__IVxPropertyCollection_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4473" pos:column="1">#<cpp:directive pos:line="4473" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4473" pos:column="9">__IVxPropertyCollection_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4475" pos:column="1">/* interface IVxPropertyCollection */</comment>
<comment type="block" pos:line="4476" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4479" pos:column="1">EXTERN_C</name> <specifier pos:line="4479" pos:column="10">const</specifier> <name pos:line="4479" pos:column="16">IID</name></type> <name pos:line="4479" pos:column="20">IID_IVxPropertyCollection</name></decl>;</decl_stmt>

<cpp:if pos:line="4481" pos:column="1">#<cpp:directive pos:line="4481" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4481" pos:column="5">defined</name><argument_list pos:line="4481" pos:column="12">(<argument><expr><name pos:line="4481" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4481" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4481" pos:column="29">!</op:operator><call><name pos:line="4481" pos:column="30">defined</name><argument_list pos:line="4481" pos:column="37">(<argument><expr><name pos:line="4481" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4483" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4483" pos:column="19">(<argument pos:line="4483" pos:column="20">"275f2096-2f87-4886-bff7-a216f6decaab"</argument>)</argument_list></macro>
    <label><name pos:line="4484" pos:column="5">IVxPropertyCollection</name> :</label> <expr_stmt><expr pos:line="4484" pos:column="29">public <name pos:line="4484" pos:column="36">IUnknown</name>
    <block pos:line="4485" pos:column="5">{
    <expr pos:line="4486" pos:column="5">public<op:operator pos:line="4486" pos:column="11">:</op:operator>
        virtual <name pos:line="4487" pos:column="17">HRESULT</name> <name pos:line="4487" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4487" pos:column="43">AddProperty</name><argument_list pos:line="4487" pos:column="54">( 
            <comment type="block" pos:line="4488" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4488" pos:column="24">IUnknown</name> <op:operator pos:line="4488" pos:column="33">*</op:operator><name pos:line="4488" pos:column="34">pKey</name></expr></argument>,
            <comment type="block" pos:line="4489" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4489" pos:column="24">IUnknown</name> <op:operator pos:line="4489" pos:column="33">*</op:operator><name pos:line="4489" pos:column="34">pProperty</name></expr></argument>)</argument_list></call> <op:operator pos:line="4489" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="4489" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="4491" pos:column="9">virtual <name pos:line="4491" pos:column="17">HRESULT</name> <name pos:line="4491" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4491" pos:column="43">RemoveProperty</name><argument_list pos:line="4491" pos:column="57">( 
            <comment type="block" pos:line="4492" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4492" pos:column="24">IUnknown</name> <op:operator pos:line="4492" pos:column="33">*</op:operator><name pos:line="4492" pos:column="34">pKey</name></expr></argument>,
            <comment type="block" pos:line="4493" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4493" pos:column="33">BOOL</name> <op:operator pos:line="4493" pos:column="38">*</op:operator><name pos:line="4493" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4493" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4493" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4495" pos:column="9">virtual <name pos:line="4495" pos:column="17">HRESULT</name> <name pos:line="4495" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4495" pos:column="43">GetProperty_2</name><argument_list pos:line="4495" pos:column="56">( 
            <comment type="block" pos:line="4496" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4496" pos:column="24">IUnknown</name> <op:operator pos:line="4496" pos:column="33">*</op:operator><name pos:line="4496" pos:column="34">pKey</name></expr></argument>,
            <comment type="block" pos:line="4497" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4497" pos:column="33">IUnknown</name> <op:operator pos:line="4497" pos:column="42">*</op:operator><op:operator pos:line="4497" pos:column="43">*</op:operator><name pos:line="4497" pos:column="44">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4497" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="4497" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="4499" pos:column="9">virtual <name pos:line="4499" pos:column="17">HRESULT</name> <name pos:line="4499" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4499" pos:column="43">ContainsProperty</name><argument_list pos:line="4499" pos:column="59">( 
            <comment type="block" pos:line="4500" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4500" pos:column="24">IUnknown</name> <op:operator pos:line="4500" pos:column="33">*</op:operator><name pos:line="4500" pos:column="34">pKey</name></expr></argument>,
            <comment type="block" pos:line="4501" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4501" pos:column="33">BOOL</name> <op:operator pos:line="4501" pos:column="38">*</op:operator><name pos:line="4501" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4501" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4501" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4505" pos:column="1">#<cpp:directive pos:line="4505" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4505" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4507" pos:column="5">typedef <type><struct pos:line="4507" pos:column="13">struct <name pos:line="4507" pos:column="20">IVxPropertyCollectionVtbl</name>
    <block pos:line="4508" pos:column="5">{<public type="default" pos:line="4508" pos:column="6">
        <function_decl><type><name pos:line="4509" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4511" pos:column="9">HRESULT</name></type> ( <name pos:line="4511" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4511" pos:column="37">*</type:modifier><name pos:line="4511" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4511" pos:column="54">( 
            <param><decl><type><name pos:line="4512" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4512" pos:column="35">*</type:modifier></type> <name pos:line="4512" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="4513" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4513" pos:column="24">REFIID</name></type> <name pos:line="4513" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4514" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4515" pos:column="13">__RPC__deref_out</name>  <name pos:line="4515" pos:column="31">void</name> <type:modifier pos:line="4515" pos:column="36">*</type:modifier><type:modifier pos:line="4515" pos:column="37">*</type:modifier></type><name pos:line="4515" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4517" pos:column="9">ULONG</name></type> ( <name pos:line="4517" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4517" pos:column="35">*</type:modifier><name pos:line="4517" pos:column="36">AddRef</name> )<parameter_list pos:line="4517" pos:column="44">( 
            <param><decl><type><name pos:line="4518" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4518" pos:column="35">*</type:modifier></type> <name pos:line="4518" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4520" pos:column="9">ULONG</name></type> ( <name pos:line="4520" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4520" pos:column="35">*</type:modifier><name pos:line="4520" pos:column="36">Release</name> )<parameter_list pos:line="4520" pos:column="45">( 
            <param><decl><type><name pos:line="4521" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4521" pos:column="35">*</type:modifier></type> <name pos:line="4521" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4523" pos:column="9">HRESULT</name></type> ( <name pos:line="4523" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4523" pos:column="37">*</type:modifier><name pos:line="4523" pos:column="38">AddProperty</name> )<parameter_list pos:line="4523" pos:column="51">( 
            <param><decl><type><name pos:line="4524" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4524" pos:column="35">*</type:modifier></type> <name pos:line="4524" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="4525" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4525" pos:column="24">IUnknown</name> <type:modifier pos:line="4525" pos:column="33">*</type:modifier></type><name pos:line="4525" pos:column="34">pKey</name></decl></param>,
            <comment type="block" pos:line="4526" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4526" pos:column="24">IUnknown</name> <type:modifier pos:line="4526" pos:column="33">*</type:modifier></type><name pos:line="4526" pos:column="34">pProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4528" pos:column="9">HRESULT</name></type> ( <name pos:line="4528" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4528" pos:column="37">*</type:modifier><name pos:line="4528" pos:column="38">RemoveProperty</name> )<parameter_list pos:line="4528" pos:column="54">( 
            <param><decl><type><name pos:line="4529" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4529" pos:column="35">*</type:modifier></type> <name pos:line="4529" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="4530" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4530" pos:column="24">IUnknown</name> <type:modifier pos:line="4530" pos:column="33">*</type:modifier></type><name pos:line="4530" pos:column="34">pKey</name></decl></param>,
            <comment type="block" pos:line="4531" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4531" pos:column="33">BOOL</name> <type:modifier pos:line="4531" pos:column="38">*</type:modifier></type><name pos:line="4531" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4533" pos:column="9">HRESULT</name></type> ( <name pos:line="4533" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4533" pos:column="37">*</type:modifier><name pos:line="4533" pos:column="38">GetProperty_2</name> )<parameter_list pos:line="4533" pos:column="53">( 
            <param><decl><type><name pos:line="4534" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4534" pos:column="35">*</type:modifier></type> <name pos:line="4534" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="4535" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4535" pos:column="24">IUnknown</name> <type:modifier pos:line="4535" pos:column="33">*</type:modifier></type><name pos:line="4535" pos:column="34">pKey</name></decl></param>,
            <comment type="block" pos:line="4536" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4536" pos:column="33">IUnknown</name> <type:modifier pos:line="4536" pos:column="42">*</type:modifier><type:modifier pos:line="4536" pos:column="43">*</type:modifier></type><name pos:line="4536" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4538" pos:column="9">HRESULT</name></type> ( <name pos:line="4538" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4538" pos:column="37">*</type:modifier><name pos:line="4538" pos:column="38">ContainsProperty</name> )<parameter_list pos:line="4538" pos:column="56">( 
            <param><decl><type><name pos:line="4539" pos:column="13">IVxPropertyCollection</name> <type:modifier pos:line="4539" pos:column="35">*</type:modifier></type> <name pos:line="4539" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="4540" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4540" pos:column="24">IUnknown</name> <type:modifier pos:line="4540" pos:column="33">*</type:modifier></type><name pos:line="4540" pos:column="34">pKey</name></decl></param>,
            <comment type="block" pos:line="4541" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4541" pos:column="33">BOOL</name> <type:modifier pos:line="4541" pos:column="38">*</type:modifier></type><name pos:line="4541" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4543" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4544" pos:column="7">IVxPropertyCollectionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4546" pos:column="5">interface</name></type> <name pos:line="4546" pos:column="15">IVxPropertyCollection</name>
    <argument_list pos:line="4547" pos:column="5">{
        <argument><expr><name pos:line="4548" pos:column="9">CONST_VTBL</name> struct <name pos:line="4548" pos:column="27">IVxPropertyCollectionVtbl</name> <op:operator pos:line="4548" pos:column="53">*</op:operator><name pos:line="4548" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4553" pos:column="1">#<cpp:directive pos:line="4553" pos:column="2">ifdef</cpp:directive> <name pos:line="4553" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4556" pos:column="1">#<cpp:directive pos:line="4556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4556" pos:column="9">IVxPropertyCollection_QueryInterface</name><parameter_list pos:line="4556" pos:column="45">(<param><type><name pos:line="4556" pos:column="46">This</name></type></param>,<param><type><name pos:line="4556" pos:column="51">riid</name></type></param>,<param><type><name pos:line="4556" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4557" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4559" pos:column="1">#<cpp:directive pos:line="4559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4559" pos:column="9">IVxPropertyCollection_AddRef</name><parameter_list pos:line="4559" pos:column="37">(<param><type><name pos:line="4559" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4560" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4562" pos:column="1">#<cpp:directive pos:line="4562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4562" pos:column="9">IVxPropertyCollection_Release</name><parameter_list pos:line="4562" pos:column="38">(<param><type><name pos:line="4562" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4563" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4566" pos:column="1">#<cpp:directive pos:line="4566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4566" pos:column="9">IVxPropertyCollection_AddProperty</name><parameter_list pos:line="4566" pos:column="42">(<param><type><name pos:line="4566" pos:column="43">This</name></type></param>,<param><type><name pos:line="4566" pos:column="48">pKey</name></type></param>,<param><type><name pos:line="4566" pos:column="53">pProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4567" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddProperty(This,pKey,pProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="4569" pos:column="1">#<cpp:directive pos:line="4569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4569" pos:column="9">IVxPropertyCollection_RemoveProperty</name><parameter_list pos:line="4569" pos:column="45">(<param><type><name pos:line="4569" pos:column="46">This</name></type></param>,<param><type><name pos:line="4569" pos:column="51">pKey</name></type></param>,<param><type><name pos:line="4569" pos:column="56">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4570" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveProperty(This,pKey,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4572" pos:column="1">#<cpp:directive pos:line="4572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4572" pos:column="9">IVxPropertyCollection_GetProperty_2</name><parameter_list pos:line="4572" pos:column="44">(<param><type><name pos:line="4572" pos:column="45">This</name></type></param>,<param><type><name pos:line="4572" pos:column="50">pKey</name></type></param>,<param><type><name pos:line="4572" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4573" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProperty_2(This,pKey,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4575" pos:column="1">#<cpp:directive pos:line="4575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4575" pos:column="9">IVxPropertyCollection_ContainsProperty</name><parameter_list pos:line="4575" pos:column="47">(<param><type><name pos:line="4575" pos:column="48">This</name></type></param>,<param><type><name pos:line="4575" pos:column="53">pKey</name></type></param>,<param><type><name pos:line="4575" pos:column="58">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4576" pos:column="5">( (This)-&gt;lpVtbl -&gt; ContainsProperty(This,pKey,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4578" pos:column="1">#<cpp:directive pos:line="4578" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4578" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4581" pos:column="1">#<cpp:directive pos:line="4581" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4581" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4586" pos:column="1">#<cpp:directive pos:line="4586" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4586" pos:column="9">/* __IVxPropertyCollection_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4589" pos:column="1">#<cpp:directive pos:line="4589" pos:column="2">ifndef</cpp:directive> <name pos:line="4589" pos:column="9">__IVxContentTypeRegistryService_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4590" pos:column="1">#<cpp:directive pos:line="4590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4590" pos:column="9">__IVxContentTypeRegistryService_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4592" pos:column="1">/* interface IVxContentTypeRegistryService */</comment>
<comment type="block" pos:line="4593" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4596" pos:column="1">EXTERN_C</name> <specifier pos:line="4596" pos:column="10">const</specifier> <name pos:line="4596" pos:column="16">IID</name></type> <name pos:line="4596" pos:column="20">IID_IVxContentTypeRegistryService</name></decl>;</decl_stmt>

<cpp:if pos:line="4598" pos:column="1">#<cpp:directive pos:line="4598" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4598" pos:column="5">defined</name><argument_list pos:line="4598" pos:column="12">(<argument><expr><name pos:line="4598" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4598" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4598" pos:column="29">!</op:operator><call><name pos:line="4598" pos:column="30">defined</name><argument_list pos:line="4598" pos:column="37">(<argument><expr><name pos:line="4598" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4600" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4600" pos:column="19">(<argument pos:line="4600" pos:column="20">"aeefbb53-ff73-45d0-a826-4f978725d21e"</argument>)</argument_list></macro>
    <label><name pos:line="4601" pos:column="5">IVxContentTypeRegistryService</name> :</label> <expr_stmt><expr pos:line="4601" pos:column="37">public <name pos:line="4601" pos:column="44">IUnknown</name>
    <block pos:line="4602" pos:column="5">{
    <expr pos:line="4603" pos:column="5">public<op:operator pos:line="4603" pos:column="11">:</op:operator>
        virtual <name pos:line="4604" pos:column="17">HRESULT</name> <name pos:line="4604" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4604" pos:column="43">GetContentType</name><argument_list pos:line="4604" pos:column="57">( 
            <comment type="block" pos:line="4605" pos:column="13">/* [in] */</comment> <argument pos:line="4605" pos:column="24">BSTR typeName</argument>,
            <comment type="block" pos:line="4606" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4606" pos:column="33">IVxContentType **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="4606" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="4606" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="4608" pos:column="9">virtual <name pos:line="4608" pos:column="17">HRESULT</name> <name pos:line="4608" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4608" pos:column="43">AddContentType</name><argument_list pos:line="4608" pos:column="57">( 
            <comment type="block" pos:line="4609" pos:column="13">/* [in] */</comment> <argument pos:line="4609" pos:column="24">BSTR typeName</argument>,
            <comment type="block" pos:line="4610" pos:column="13">/* [in] */</comment> <argument pos:line="4610" pos:column="24">IEnumerableBSTR *pBaseTypeNames</argument>,
            <comment type="block" pos:line="4611" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4611" pos:column="33">IVxContentType **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="4611" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="4611" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="4613" pos:column="9">virtual <name pos:line="4613" pos:column="17">HRESULT</name> <name pos:line="4613" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4613" pos:column="43">RemoveContentType</name><argument_list pos:line="4613" pos:column="60">( 
            <comment type="block" pos:line="4614" pos:column="13">/* [in] */</comment> <argument pos:line="4614" pos:column="24">BSTR typeName</argument>)</argument_list></macro> <op:operator pos:line="4614" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="4614" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="4616" pos:column="9">virtual <name pos:line="4616" pos:column="17">HRESULT</name> <name pos:line="4616" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4616" pos:column="43">GetUnknownContentType</name><argument_list pos:line="4616" pos:column="64">( 
            <comment type="block" pos:line="4617" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4617" pos:column="33">IVxContentType</name> <op:operator pos:line="4617" pos:column="48">*</op:operator><op:operator pos:line="4617" pos:column="49">*</op:operator><name pos:line="4617" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4617" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="4617" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="4619" pos:column="9">virtual <name pos:line="4619" pos:column="17">HRESULT</name> <name pos:line="4619" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4619" pos:column="43">GetContentTypes</name><argument_list pos:line="4619" pos:column="58">( 
            <comment type="block" pos:line="4620" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4620" pos:column="33">IEnumerableIVxContentType</name> <op:operator pos:line="4620" pos:column="59">*</op:operator><op:operator pos:line="4620" pos:column="60">*</op:operator><name pos:line="4620" pos:column="61">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4620" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="4620" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4624" pos:column="1">#<cpp:directive pos:line="4624" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4624" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4626" pos:column="5">typedef <type><struct pos:line="4626" pos:column="13">struct <name pos:line="4626" pos:column="20">IVxContentTypeRegistryServiceVtbl</name>
    <block pos:line="4627" pos:column="5">{<public type="default" pos:line="4627" pos:column="6">
        <function_decl><type><name pos:line="4628" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4630" pos:column="9">HRESULT</name></type> ( <name pos:line="4630" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4630" pos:column="37">*</type:modifier><name pos:line="4630" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4630" pos:column="54">( 
            <param><decl><type><name pos:line="4631" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4631" pos:column="43">*</type:modifier></type> <name pos:line="4631" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="4632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4632" pos:column="24">REFIID</name></type> <name pos:line="4632" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4633" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4634" pos:column="13">__RPC__deref_out</name>  <name pos:line="4634" pos:column="31">void</name> <type:modifier pos:line="4634" pos:column="36">*</type:modifier><type:modifier pos:line="4634" pos:column="37">*</type:modifier></type><name pos:line="4634" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4636" pos:column="9">ULONG</name></type> ( <name pos:line="4636" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4636" pos:column="35">*</type:modifier><name pos:line="4636" pos:column="36">AddRef</name> )<parameter_list pos:line="4636" pos:column="44">( 
            <param><decl><type><name pos:line="4637" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4637" pos:column="43">*</type:modifier></type> <name pos:line="4637" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4639" pos:column="9">ULONG</name></type> ( <name pos:line="4639" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4639" pos:column="35">*</type:modifier><name pos:line="4639" pos:column="36">Release</name> )<parameter_list pos:line="4639" pos:column="45">( 
            <param><decl><type><name pos:line="4640" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4640" pos:column="43">*</type:modifier></type> <name pos:line="4640" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4642" pos:column="9">HRESULT</name></type> ( <name pos:line="4642" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4642" pos:column="37">*</type:modifier><name pos:line="4642" pos:column="38">GetContentType</name> )<parameter_list pos:line="4642" pos:column="54">( 
            <param><decl><type><name pos:line="4643" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4643" pos:column="43">*</type:modifier></type> <name pos:line="4643" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="4644" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4644" pos:column="24">BSTR</name></type> <name pos:line="4644" pos:column="29">typeName</name></decl></param>,
            <comment type="block" pos:line="4645" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4645" pos:column="33">IVxContentType</name> <type:modifier pos:line="4645" pos:column="48">*</type:modifier><type:modifier pos:line="4645" pos:column="49">*</type:modifier></type><name pos:line="4645" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4647" pos:column="9">HRESULT</name></type> ( <name pos:line="4647" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4647" pos:column="37">*</type:modifier><name pos:line="4647" pos:column="38">AddContentType</name> )<parameter_list pos:line="4647" pos:column="54">( 
            <param><decl><type><name pos:line="4648" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4648" pos:column="43">*</type:modifier></type> <name pos:line="4648" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="4649" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4649" pos:column="24">BSTR</name></type> <name pos:line="4649" pos:column="29">typeName</name></decl></param>,
            <comment type="block" pos:line="4650" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4650" pos:column="24">IEnumerableBSTR</name> <type:modifier pos:line="4650" pos:column="40">*</type:modifier></type><name pos:line="4650" pos:column="41">pBaseTypeNames</name></decl></param>,
            <comment type="block" pos:line="4651" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4651" pos:column="33">IVxContentType</name> <type:modifier pos:line="4651" pos:column="48">*</type:modifier><type:modifier pos:line="4651" pos:column="49">*</type:modifier></type><name pos:line="4651" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4653" pos:column="9">HRESULT</name></type> ( <name pos:line="4653" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4653" pos:column="37">*</type:modifier><name pos:line="4653" pos:column="38">RemoveContentType</name> )<parameter_list pos:line="4653" pos:column="57">( 
            <param><decl><type><name pos:line="4654" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4654" pos:column="43">*</type:modifier></type> <name pos:line="4654" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="4655" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4655" pos:column="24">BSTR</name></type> <name pos:line="4655" pos:column="29">typeName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4657" pos:column="9">HRESULT</name></type> ( <name pos:line="4657" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4657" pos:column="37">*</type:modifier><name pos:line="4657" pos:column="38">GetUnknownContentType</name> )<parameter_list pos:line="4657" pos:column="61">( 
            <param><decl><type><name pos:line="4658" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4658" pos:column="43">*</type:modifier></type> <name pos:line="4658" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="4659" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4659" pos:column="33">IVxContentType</name> <type:modifier pos:line="4659" pos:column="48">*</type:modifier><type:modifier pos:line="4659" pos:column="49">*</type:modifier></type><name pos:line="4659" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4661" pos:column="9">HRESULT</name></type> ( <name pos:line="4661" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4661" pos:column="37">*</type:modifier><name pos:line="4661" pos:column="38">GetContentTypes</name> )<parameter_list pos:line="4661" pos:column="55">( 
            <param><decl><type><name pos:line="4662" pos:column="13">IVxContentTypeRegistryService</name> <type:modifier pos:line="4662" pos:column="43">*</type:modifier></type> <name pos:line="4662" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="4663" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4663" pos:column="33">IEnumerableIVxContentType</name> <type:modifier pos:line="4663" pos:column="59">*</type:modifier><type:modifier pos:line="4663" pos:column="60">*</type:modifier></type><name pos:line="4663" pos:column="61">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4665" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4666" pos:column="7">IVxContentTypeRegistryServiceVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4668" pos:column="5">interface</name></type> <name pos:line="4668" pos:column="15">IVxContentTypeRegistryService</name>
    <argument_list pos:line="4669" pos:column="5">{
        <argument><expr><name pos:line="4670" pos:column="9">CONST_VTBL</name> struct <name pos:line="4670" pos:column="27">IVxContentTypeRegistryServiceVtbl</name> <op:operator pos:line="4670" pos:column="61">*</op:operator><name pos:line="4670" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4675" pos:column="1">#<cpp:directive pos:line="4675" pos:column="2">ifdef</cpp:directive> <name pos:line="4675" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4678" pos:column="1">#<cpp:directive pos:line="4678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4678" pos:column="9">IVxContentTypeRegistryService_QueryInterface</name><parameter_list pos:line="4678" pos:column="53">(<param><type><name pos:line="4678" pos:column="54">This</name></type></param>,<param><type><name pos:line="4678" pos:column="59">riid</name></type></param>,<param><type><name pos:line="4678" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4679" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4681" pos:column="1">#<cpp:directive pos:line="4681" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4681" pos:column="9">IVxContentTypeRegistryService_AddRef</name><parameter_list pos:line="4681" pos:column="45">(<param><type><name pos:line="4681" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4682" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4684" pos:column="1">#<cpp:directive pos:line="4684" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4684" pos:column="9">IVxContentTypeRegistryService_Release</name><parameter_list pos:line="4684" pos:column="46">(<param><type><name pos:line="4684" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4685" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4688" pos:column="1">#<cpp:directive pos:line="4688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4688" pos:column="9">IVxContentTypeRegistryService_GetContentType</name><parameter_list pos:line="4688" pos:column="53">(<param><type><name pos:line="4688" pos:column="54">This</name></type></param>,<param><type><name pos:line="4688" pos:column="59">typeName</name></type></param>,<param><type><name pos:line="4688" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4689" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,typeName,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4691" pos:column="1">#<cpp:directive pos:line="4691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4691" pos:column="9">IVxContentTypeRegistryService_AddContentType</name><parameter_list pos:line="4691" pos:column="53">(<param><type><name pos:line="4691" pos:column="54">This</name></type></param>,<param><type><name pos:line="4691" pos:column="59">typeName</name></type></param>,<param><type><name pos:line="4691" pos:column="68">pBaseTypeNames</name></type></param>,<param><type><name pos:line="4691" pos:column="83">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4692" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddContentType(This,typeName,pBaseTypeNames,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4694" pos:column="1">#<cpp:directive pos:line="4694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4694" pos:column="9">IVxContentTypeRegistryService_RemoveContentType</name><parameter_list pos:line="4694" pos:column="56">(<param><type><name pos:line="4694" pos:column="57">This</name></type></param>,<param><type><name pos:line="4694" pos:column="62">typeName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4695" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveContentType(This,typeName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4697" pos:column="1">#<cpp:directive pos:line="4697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4697" pos:column="9">IVxContentTypeRegistryService_GetUnknownContentType</name><parameter_list pos:line="4697" pos:column="60">(<param><type><name pos:line="4697" pos:column="61">This</name></type></param>,<param><type><name pos:line="4697" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4698" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetUnknownContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4700" pos:column="1">#<cpp:directive pos:line="4700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4700" pos:column="9">IVxContentTypeRegistryService_GetContentTypes</name><parameter_list pos:line="4700" pos:column="54">(<param><type><name pos:line="4700" pos:column="55">This</name></type></param>,<param><type><name pos:line="4700" pos:column="60">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4701" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentTypes(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4703" pos:column="1">#<cpp:directive pos:line="4703" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4703" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4706" pos:column="1">#<cpp:directive pos:line="4706" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4706" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4711" pos:column="1">#<cpp:directive pos:line="4711" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4711" pos:column="9">/* __IVxContentTypeRegistryService_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4714" pos:column="1">#<cpp:directive pos:line="4714" pos:column="2">ifndef</cpp:directive> <name pos:line="4714" pos:column="9">__IVxContentType_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4715" pos:column="1">#<cpp:directive pos:line="4715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4715" pos:column="9">__IVxContentType_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4717" pos:column="1">/* interface IVxContentType */</comment>
<comment type="block" pos:line="4718" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4721" pos:column="1">EXTERN_C</name> <specifier pos:line="4721" pos:column="10">const</specifier> <name pos:line="4721" pos:column="16">IID</name></type> <name pos:line="4721" pos:column="20">IID_IVxContentType</name></decl>;</decl_stmt>

<cpp:if pos:line="4723" pos:column="1">#<cpp:directive pos:line="4723" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4723" pos:column="5">defined</name><argument_list pos:line="4723" pos:column="12">(<argument><expr><name pos:line="4723" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4723" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4723" pos:column="29">!</op:operator><call><name pos:line="4723" pos:column="30">defined</name><argument_list pos:line="4723" pos:column="37">(<argument><expr><name pos:line="4723" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4725" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4725" pos:column="19">(<argument pos:line="4725" pos:column="20">"6faa3727-ed8f-4fc0-8032-82ad17394029"</argument>)</argument_list></macro>
    <label><name pos:line="4726" pos:column="5">IVxContentType</name> :</label> <expr_stmt><expr pos:line="4726" pos:column="22">public <name pos:line="4726" pos:column="29">IUnknown</name>
    <block pos:line="4727" pos:column="5">{
    <expr pos:line="4728" pos:column="5">public<op:operator pos:line="4728" pos:column="11">:</op:operator>
        virtual <name pos:line="4729" pos:column="17">HRESULT</name> <name pos:line="4729" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4729" pos:column="43">GetTypeName</name><argument_list pos:line="4729" pos:column="54">( 
            <comment type="block" pos:line="4730" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4730" pos:column="33">BSTR</name> <op:operator pos:line="4730" pos:column="38">*</op:operator><name pos:line="4730" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4730" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4730" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4732" pos:column="9">virtual <name pos:line="4732" pos:column="17">HRESULT</name> <name pos:line="4732" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4732" pos:column="43">GetDisplayName</name><argument_list pos:line="4732" pos:column="57">( 
            <comment type="block" pos:line="4733" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4733" pos:column="33">BSTR</name> <op:operator pos:line="4733" pos:column="38">*</op:operator><name pos:line="4733" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4733" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4733" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4735" pos:column="9">virtual <name pos:line="4735" pos:column="17">HRESULT</name> <name pos:line="4735" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4735" pos:column="43">IsOfType</name><argument_list pos:line="4735" pos:column="51">( 
            <comment type="block" pos:line="4736" pos:column="13">/* [in] */</comment> <argument pos:line="4736" pos:column="24">BSTR type</argument>,
            <comment type="block" pos:line="4737" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4737" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="4737" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4737" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4739" pos:column="9">virtual <name pos:line="4739" pos:column="17">HRESULT</name> <name pos:line="4739" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4739" pos:column="43">GetBaseTypes</name><argument_list pos:line="4739" pos:column="55">( 
            <comment type="block" pos:line="4740" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4740" pos:column="33">IEnumerableIVxContentType</name> <op:operator pos:line="4740" pos:column="59">*</op:operator><op:operator pos:line="4740" pos:column="60">*</op:operator><name pos:line="4740" pos:column="61">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4740" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="4740" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4744" pos:column="1">#<cpp:directive pos:line="4744" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4744" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4746" pos:column="5">typedef <type><struct pos:line="4746" pos:column="13">struct <name pos:line="4746" pos:column="20">IVxContentTypeVtbl</name>
    <block pos:line="4747" pos:column="5">{<public type="default" pos:line="4747" pos:column="6">
        <function_decl><type><name pos:line="4748" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4750" pos:column="9">HRESULT</name></type> ( <name pos:line="4750" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4750" pos:column="37">*</type:modifier><name pos:line="4750" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4750" pos:column="54">( 
            <param><decl><type><name pos:line="4751" pos:column="13">IVxContentType</name> <type:modifier pos:line="4751" pos:column="28">*</type:modifier></type> <name pos:line="4751" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4752" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4752" pos:column="24">REFIID</name></type> <name pos:line="4752" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4753" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4754" pos:column="13">__RPC__deref_out</name>  <name pos:line="4754" pos:column="31">void</name> <type:modifier pos:line="4754" pos:column="36">*</type:modifier><type:modifier pos:line="4754" pos:column="37">*</type:modifier></type><name pos:line="4754" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4756" pos:column="9">ULONG</name></type> ( <name pos:line="4756" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4756" pos:column="35">*</type:modifier><name pos:line="4756" pos:column="36">AddRef</name> )<parameter_list pos:line="4756" pos:column="44">( 
            <param><decl><type><name pos:line="4757" pos:column="13">IVxContentType</name> <type:modifier pos:line="4757" pos:column="28">*</type:modifier></type> <name pos:line="4757" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4759" pos:column="9">ULONG</name></type> ( <name pos:line="4759" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4759" pos:column="35">*</type:modifier><name pos:line="4759" pos:column="36">Release</name> )<parameter_list pos:line="4759" pos:column="45">( 
            <param><decl><type><name pos:line="4760" pos:column="13">IVxContentType</name> <type:modifier pos:line="4760" pos:column="28">*</type:modifier></type> <name pos:line="4760" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4762" pos:column="9">HRESULT</name></type> ( <name pos:line="4762" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4762" pos:column="37">*</type:modifier><name pos:line="4762" pos:column="38">GetTypeName</name> )<parameter_list pos:line="4762" pos:column="51">( 
            <param><decl><type><name pos:line="4763" pos:column="13">IVxContentType</name> <type:modifier pos:line="4763" pos:column="28">*</type:modifier></type> <name pos:line="4763" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4764" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4764" pos:column="33">BSTR</name> <type:modifier pos:line="4764" pos:column="38">*</type:modifier></type><name pos:line="4764" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4766" pos:column="9">HRESULT</name></type> ( <name pos:line="4766" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4766" pos:column="37">*</type:modifier><name pos:line="4766" pos:column="38">GetDisplayName</name> )<parameter_list pos:line="4766" pos:column="54">( 
            <param><decl><type><name pos:line="4767" pos:column="13">IVxContentType</name> <type:modifier pos:line="4767" pos:column="28">*</type:modifier></type> <name pos:line="4767" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4768" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4768" pos:column="33">BSTR</name> <type:modifier pos:line="4768" pos:column="38">*</type:modifier></type><name pos:line="4768" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4770" pos:column="9">HRESULT</name></type> ( <name pos:line="4770" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4770" pos:column="37">*</type:modifier><name pos:line="4770" pos:column="38">IsOfType</name> )<parameter_list pos:line="4770" pos:column="48">( 
            <param><decl><type><name pos:line="4771" pos:column="13">IVxContentType</name> <type:modifier pos:line="4771" pos:column="28">*</type:modifier></type> <name pos:line="4771" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4772" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4772" pos:column="24">BSTR</name></type> <name pos:line="4772" pos:column="29">type</name></decl></param>,
            <comment type="block" pos:line="4773" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4773" pos:column="33">BOOL</name> <type:modifier pos:line="4773" pos:column="38">*</type:modifier></type><name pos:line="4773" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4775" pos:column="9">HRESULT</name></type> ( <name pos:line="4775" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4775" pos:column="37">*</type:modifier><name pos:line="4775" pos:column="38">GetBaseTypes</name> )<parameter_list pos:line="4775" pos:column="52">( 
            <param><decl><type><name pos:line="4776" pos:column="13">IVxContentType</name> <type:modifier pos:line="4776" pos:column="28">*</type:modifier></type> <name pos:line="4776" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4777" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4777" pos:column="33">IEnumerableIVxContentType</name> <type:modifier pos:line="4777" pos:column="59">*</type:modifier><type:modifier pos:line="4777" pos:column="60">*</type:modifier></type><name pos:line="4777" pos:column="61">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4779" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4780" pos:column="7">IVxContentTypeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4782" pos:column="5">interface</name></type> <name pos:line="4782" pos:column="15">IVxContentType</name>
    <argument_list pos:line="4783" pos:column="5">{
        <argument><expr><name pos:line="4784" pos:column="9">CONST_VTBL</name> struct <name pos:line="4784" pos:column="27">IVxContentTypeVtbl</name> <op:operator pos:line="4784" pos:column="46">*</op:operator><name pos:line="4784" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4789" pos:column="1">#<cpp:directive pos:line="4789" pos:column="2">ifdef</cpp:directive> <name pos:line="4789" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4792" pos:column="1">#<cpp:directive pos:line="4792" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4792" pos:column="9">IVxContentType_QueryInterface</name><parameter_list pos:line="4792" pos:column="38">(<param><type><name pos:line="4792" pos:column="39">This</name></type></param>,<param><type><name pos:line="4792" pos:column="44">riid</name></type></param>,<param><type><name pos:line="4792" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4793" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4795" pos:column="1">#<cpp:directive pos:line="4795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4795" pos:column="9">IVxContentType_AddRef</name><parameter_list pos:line="4795" pos:column="30">(<param><type><name pos:line="4795" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4796" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4798" pos:column="1">#<cpp:directive pos:line="4798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4798" pos:column="9">IVxContentType_Release</name><parameter_list pos:line="4798" pos:column="31">(<param><type><name pos:line="4798" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4799" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4802" pos:column="1">#<cpp:directive pos:line="4802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4802" pos:column="9">IVxContentType_GetTypeName</name><parameter_list pos:line="4802" pos:column="35">(<param><type><name pos:line="4802" pos:column="36">This</name></type></param>,<param><type><name pos:line="4802" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4803" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeName(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4805" pos:column="1">#<cpp:directive pos:line="4805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4805" pos:column="9">IVxContentType_GetDisplayName</name><parameter_list pos:line="4805" pos:column="38">(<param><type><name pos:line="4805" pos:column="39">This</name></type></param>,<param><type><name pos:line="4805" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4806" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDisplayName(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4808" pos:column="1">#<cpp:directive pos:line="4808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4808" pos:column="9">IVxContentType_IsOfType</name><parameter_list pos:line="4808" pos:column="32">(<param><type><name pos:line="4808" pos:column="33">This</name></type></param>,<param><type><name pos:line="4808" pos:column="38">type</name></type></param>,<param><type><name pos:line="4808" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4809" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsOfType(This,type,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="4811" pos:column="1">#<cpp:directive pos:line="4811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4811" pos:column="9">IVxContentType_GetBaseTypes</name><parameter_list pos:line="4811" pos:column="36">(<param><type><name pos:line="4811" pos:column="37">This</name></type></param>,<param><type><name pos:line="4811" pos:column="42">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4812" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBaseTypes(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4814" pos:column="1">#<cpp:directive pos:line="4814" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4814" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4817" pos:column="1">#<cpp:directive pos:line="4817" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4817" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4822" pos:column="1">#<cpp:directive pos:line="4822" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4822" pos:column="9">/* __IVxContentType_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4825" pos:column="1">#<cpp:directive pos:line="4825" pos:column="2">ifndef</cpp:directive> <name pos:line="4825" pos:column="9">__IVxTextDocument_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4826" pos:column="1">#<cpp:directive pos:line="4826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4826" pos:column="9">__IVxTextDocument_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4828" pos:column="1">/* interface IVxTextDocument */</comment>
<comment type="block" pos:line="4829" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4832" pos:column="1">EXTERN_C</name> <specifier pos:line="4832" pos:column="10">const</specifier> <name pos:line="4832" pos:column="16">IID</name></type> <name pos:line="4832" pos:column="20">IID_IVxTextDocument</name></decl>;</decl_stmt>

<cpp:if pos:line="4834" pos:column="1">#<cpp:directive pos:line="4834" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4834" pos:column="5">defined</name><argument_list pos:line="4834" pos:column="12">(<argument><expr><name pos:line="4834" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4834" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4834" pos:column="29">!</op:operator><call><name pos:line="4834" pos:column="30">defined</name><argument_list pos:line="4834" pos:column="37">(<argument><expr><name pos:line="4834" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4836" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4836" pos:column="19">(<argument pos:line="4836" pos:column="20">"5498337a-84b2-41bf-ab74-e5b88419079f"</argument>)</argument_list></macro>
    <label><name pos:line="4837" pos:column="5">IVxTextDocument</name> :</label> <expr_stmt><expr pos:line="4837" pos:column="23">public <name pos:line="4837" pos:column="30">IVxDisposable</name>
    <block pos:line="4838" pos:column="5">{
    <expr pos:line="4839" pos:column="5">public<op:operator pos:line="4839" pos:column="11">:</op:operator>
        virtual <name pos:line="4840" pos:column="17">HRESULT</name> <name pos:line="4840" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4840" pos:column="43">GetFilePath</name><argument_list pos:line="4840" pos:column="54">( 
            <comment type="block" pos:line="4841" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4841" pos:column="33">BSTR</name> <op:operator pos:line="4841" pos:column="38">*</op:operator><name pos:line="4841" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4841" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4841" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4843" pos:column="9">virtual <name pos:line="4843" pos:column="17">HRESULT</name> <name pos:line="4843" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4843" pos:column="43">GetTextBuffer</name><argument_list pos:line="4843" pos:column="56">( 
            <comment type="block" pos:line="4844" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4844" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="4844" pos:column="47">*</op:operator><op:operator pos:line="4844" pos:column="48">*</op:operator><name pos:line="4844" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4844" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="4844" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="4846" pos:column="9">virtual <name pos:line="4846" pos:column="17">HRESULT</name> <name pos:line="4846" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4846" pos:column="43">GetIsDirty</name><argument_list pos:line="4846" pos:column="53">( 
            <comment type="block" pos:line="4847" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4847" pos:column="33">BOOL</name> <op:operator pos:line="4847" pos:column="38">*</op:operator><name pos:line="4847" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4847" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4847" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4849" pos:column="9">virtual <name pos:line="4849" pos:column="17">HRESULT</name> <name pos:line="4849" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4849" pos:column="43">AdviseFileActionOccurred</name><argument_list pos:line="4849" pos:column="67">( 
            <comment type="block" pos:line="4850" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4850" pos:column="24">IVxTextDocumentFileActionEvent</name> <op:operator pos:line="4850" pos:column="55">*</op:operator><name pos:line="4850" pos:column="56">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="4850" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="4850" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="4852" pos:column="9">virtual <name pos:line="4852" pos:column="17">HRESULT</name> <name pos:line="4852" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4852" pos:column="43">UnadviseFileActionOccurred</name><argument_list pos:line="4852" pos:column="69">( 
            <comment type="block" pos:line="4853" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4853" pos:column="24">IVxTextDocumentFileActionEvent</name> <op:operator pos:line="4853" pos:column="55">*</op:operator><name pos:line="4853" pos:column="56">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="4853" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="4853" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="4855" pos:column="9">virtual <name pos:line="4855" pos:column="17">HRESULT</name> <name pos:line="4855" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4855" pos:column="43">AdviseDirtyStateChanged</name><argument_list pos:line="4855" pos:column="66">( 
            <comment type="block" pos:line="4856" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4856" pos:column="24">IVxEventArgsEvent</name> <op:operator pos:line="4856" pos:column="42">*</op:operator><name pos:line="4856" pos:column="43">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="4856" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4856" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4858" pos:column="9">virtual <name pos:line="4858" pos:column="17">HRESULT</name> <name pos:line="4858" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4858" pos:column="43">UnadviseDirtyStateChanged</name><argument_list pos:line="4858" pos:column="68">( 
            <comment type="block" pos:line="4859" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="4859" pos:column="24">IVxEventArgsEvent</name> <op:operator pos:line="4859" pos:column="42">*</op:operator><name pos:line="4859" pos:column="43">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="4859" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4859" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4861" pos:column="9">virtual <name pos:line="4861" pos:column="17">HRESULT</name> <name pos:line="4861" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4861" pos:column="43">Rename</name><argument_list pos:line="4861" pos:column="49">( 
            <comment type="block" pos:line="4862" pos:column="13">/* [in] */</comment> <argument pos:line="4862" pos:column="24">BSTR newFilePath</argument>)</argument_list></macro> <op:operator pos:line="4862" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="4862" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="4864" pos:column="9">virtual <name pos:line="4864" pos:column="17">HRESULT</name> <name pos:line="4864" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4864" pos:column="43">Reload</name><argument_list pos:line="4864" pos:column="49">( 
            <comment type="block" pos:line="4865" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4865" pos:column="33">VxReloadResult</name> <op:operator pos:line="4865" pos:column="48">*</op:operator><name pos:line="4865" pos:column="49">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4865" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4865" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="4867" pos:column="9">virtual <name pos:line="4867" pos:column="17">HRESULT</name> <name pos:line="4867" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4867" pos:column="43">Reload_2</name><argument_list pos:line="4867" pos:column="51">( 
            <comment type="block" pos:line="4868" pos:column="13">/* [in] */</comment> <argument pos:line="4868" pos:column="24">VxEditOptions options</argument>,
            <comment type="block" pos:line="4869" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4869" pos:column="33">VxReloadResult *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="4869" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4869" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="4871" pos:column="9">virtual <name pos:line="4871" pos:column="17">HRESULT</name> <name pos:line="4871" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4871" pos:column="43">GetIsReloading</name><argument_list pos:line="4871" pos:column="57">( 
            <comment type="block" pos:line="4872" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="4872" pos:column="33">BOOL</name> <op:operator pos:line="4872" pos:column="38">*</op:operator><name pos:line="4872" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="4872" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4872" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4874" pos:column="9">virtual <name pos:line="4874" pos:column="17">HRESULT</name> <name pos:line="4874" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4874" pos:column="43">Save</name><argument_list pos:line="4874" pos:column="47">( <argument><expr><name pos:line="4874" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4874" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="4874" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="4876" pos:column="9">virtual <name pos:line="4876" pos:column="17">HRESULT</name> <name pos:line="4876" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4876" pos:column="43">SaveAs</name><argument_list pos:line="4876" pos:column="49">( 
            <comment type="block" pos:line="4877" pos:column="13">/* [in] */</comment> <argument pos:line="4877" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="4878" pos:column="13">/* [in] */</comment> <argument pos:line="4878" pos:column="24">BOOL overwrite</argument>)</argument_list></macro> <op:operator pos:line="4878" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="4878" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="4880" pos:column="9">virtual <name pos:line="4880" pos:column="17">HRESULT</name> <name pos:line="4880" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4880" pos:column="43">SaveAs_2</name><argument_list pos:line="4880" pos:column="51">( 
            <comment type="block" pos:line="4881" pos:column="13">/* [in] */</comment> <argument pos:line="4881" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="4882" pos:column="13">/* [in] */</comment> <argument pos:line="4882" pos:column="24">BOOL overwrite</argument>,
            <comment type="block" pos:line="4883" pos:column="13">/* [in] */</comment> <argument pos:line="4883" pos:column="24">BOOL createFolder</argument>)</argument_list></macro> <op:operator pos:line="4883" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4883" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="4885" pos:column="9">virtual <name pos:line="4885" pos:column="17">HRESULT</name> <name pos:line="4885" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4885" pos:column="43">SaveAs_3</name><argument_list pos:line="4885" pos:column="51">( 
            <comment type="block" pos:line="4886" pos:column="13">/* [in] */</comment> <argument pos:line="4886" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="4887" pos:column="13">/* [in] */</comment> <argument pos:line="4887" pos:column="24">BOOL overwrite</argument>,
            <comment type="block" pos:line="4888" pos:column="13">/* [in] */</comment> <argument pos:line="4888" pos:column="24">IVxContentType *pNewContentType</argument>)</argument_list></macro> <op:operator pos:line="4888" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="4888" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="4890" pos:column="9">virtual <name pos:line="4890" pos:column="17">HRESULT</name> <name pos:line="4890" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4890" pos:column="43">SaveAs_4</name><argument_list pos:line="4890" pos:column="51">( 
            <comment type="block" pos:line="4891" pos:column="13">/* [in] */</comment> <argument pos:line="4891" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="4892" pos:column="13">/* [in] */</comment> <argument pos:line="4892" pos:column="24">BOOL overwrite</argument>,
            <comment type="block" pos:line="4893" pos:column="13">/* [in] */</comment> <argument pos:line="4893" pos:column="24">BOOL createFolder</argument>,
            <comment type="block" pos:line="4894" pos:column="13">/* [in] */</comment> <argument pos:line="4894" pos:column="24">IVxContentType *pNewContentType</argument>)</argument_list></macro> <op:operator pos:line="4894" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="4894" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="4896" pos:column="9">virtual <name pos:line="4896" pos:column="17">HRESULT</name> <name pos:line="4896" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4896" pos:column="43">SaveCopy</name><argument_list pos:line="4896" pos:column="51">( 
            <comment type="block" pos:line="4897" pos:column="13">/* [in] */</comment> <argument pos:line="4897" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="4898" pos:column="13">/* [in] */</comment> <argument pos:line="4898" pos:column="24">BOOL overwrite</argument>)</argument_list></macro> <op:operator pos:line="4898" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="4898" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="4900" pos:column="9">virtual <name pos:line="4900" pos:column="17">HRESULT</name> <name pos:line="4900" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4900" pos:column="43">SaveCopy_2</name><argument_list pos:line="4900" pos:column="53">( 
            <comment type="block" pos:line="4901" pos:column="13">/* [in] */</comment> <argument pos:line="4901" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="4902" pos:column="13">/* [in] */</comment> <argument pos:line="4902" pos:column="24">BOOL overwrite</argument>,
            <comment type="block" pos:line="4903" pos:column="13">/* [in] */</comment> <argument pos:line="4903" pos:column="24">BOOL createFolder</argument>)</argument_list></macro> <op:operator pos:line="4903" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4903" pos:column="45">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4907" pos:column="1">#<cpp:directive pos:line="4907" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4907" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4909" pos:column="5">typedef <type><struct pos:line="4909" pos:column="13">struct <name pos:line="4909" pos:column="20">IVxTextDocumentVtbl</name>
    <block pos:line="4910" pos:column="5">{<public type="default" pos:line="4910" pos:column="6">
        <function_decl><type><name pos:line="4911" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4913" pos:column="9">HRESULT</name></type> ( <name pos:line="4913" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4913" pos:column="37">*</type:modifier><name pos:line="4913" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4913" pos:column="54">( 
            <param><decl><type><name pos:line="4914" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4914" pos:column="29">*</type:modifier></type> <name pos:line="4914" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4915" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4915" pos:column="24">REFIID</name></type> <name pos:line="4915" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="4916" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4917" pos:column="13">__RPC__deref_out</name>  <name pos:line="4917" pos:column="31">void</name> <type:modifier pos:line="4917" pos:column="36">*</type:modifier><type:modifier pos:line="4917" pos:column="37">*</type:modifier></type><name pos:line="4917" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4919" pos:column="9">ULONG</name></type> ( <name pos:line="4919" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4919" pos:column="35">*</type:modifier><name pos:line="4919" pos:column="36">AddRef</name> )<parameter_list pos:line="4919" pos:column="44">( 
            <param><decl><type><name pos:line="4920" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4920" pos:column="29">*</type:modifier></type> <name pos:line="4920" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4922" pos:column="9">ULONG</name></type> ( <name pos:line="4922" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4922" pos:column="35">*</type:modifier><name pos:line="4922" pos:column="36">Release</name> )<parameter_list pos:line="4922" pos:column="45">( 
            <param><decl><type><name pos:line="4923" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4923" pos:column="29">*</type:modifier></type> <name pos:line="4923" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4925" pos:column="9">HRESULT</name></type> ( <name pos:line="4925" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4925" pos:column="37">*</type:modifier><name pos:line="4925" pos:column="38">Dispose</name> )<parameter_list pos:line="4925" pos:column="47">( 
            <param><decl><type><name pos:line="4926" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4926" pos:column="29">*</type:modifier></type> <name pos:line="4926" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4928" pos:column="9">HRESULT</name></type> ( <name pos:line="4928" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4928" pos:column="37">*</type:modifier><name pos:line="4928" pos:column="38">GetFilePath</name> )<parameter_list pos:line="4928" pos:column="51">( 
            <param><decl><type><name pos:line="4929" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4929" pos:column="29">*</type:modifier></type> <name pos:line="4929" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4930" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4930" pos:column="33">BSTR</name> <type:modifier pos:line="4930" pos:column="38">*</type:modifier></type><name pos:line="4930" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4932" pos:column="9">HRESULT</name></type> ( <name pos:line="4932" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4932" pos:column="37">*</type:modifier><name pos:line="4932" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="4932" pos:column="53">( 
            <param><decl><type><name pos:line="4933" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4933" pos:column="29">*</type:modifier></type> <name pos:line="4933" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4934" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4934" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="4934" pos:column="47">*</type:modifier><type:modifier pos:line="4934" pos:column="48">*</type:modifier></type><name pos:line="4934" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4936" pos:column="9">HRESULT</name></type> ( <name pos:line="4936" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4936" pos:column="37">*</type:modifier><name pos:line="4936" pos:column="38">GetIsDirty</name> )<parameter_list pos:line="4936" pos:column="50">( 
            <param><decl><type><name pos:line="4937" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4937" pos:column="29">*</type:modifier></type> <name pos:line="4937" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4938" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4938" pos:column="33">BOOL</name> <type:modifier pos:line="4938" pos:column="38">*</type:modifier></type><name pos:line="4938" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4940" pos:column="9">HRESULT</name></type> ( <name pos:line="4940" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4940" pos:column="37">*</type:modifier><name pos:line="4940" pos:column="38">AdviseFileActionOccurred</name> )<parameter_list pos:line="4940" pos:column="64">( 
            <param><decl><type><name pos:line="4941" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4941" pos:column="29">*</type:modifier></type> <name pos:line="4941" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4942" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4942" pos:column="24">IVxTextDocumentFileActionEvent</name> <type:modifier pos:line="4942" pos:column="55">*</type:modifier></type><name pos:line="4942" pos:column="56">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4944" pos:column="9">HRESULT</name></type> ( <name pos:line="4944" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4944" pos:column="37">*</type:modifier><name pos:line="4944" pos:column="38">UnadviseFileActionOccurred</name> )<parameter_list pos:line="4944" pos:column="66">( 
            <param><decl><type><name pos:line="4945" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4945" pos:column="29">*</type:modifier></type> <name pos:line="4945" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4946" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4946" pos:column="24">IVxTextDocumentFileActionEvent</name> <type:modifier pos:line="4946" pos:column="55">*</type:modifier></type><name pos:line="4946" pos:column="56">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4948" pos:column="9">HRESULT</name></type> ( <name pos:line="4948" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4948" pos:column="37">*</type:modifier><name pos:line="4948" pos:column="38">AdviseDirtyStateChanged</name> )<parameter_list pos:line="4948" pos:column="63">( 
            <param><decl><type><name pos:line="4949" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4949" pos:column="29">*</type:modifier></type> <name pos:line="4949" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4950" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4950" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="4950" pos:column="42">*</type:modifier></type><name pos:line="4950" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4952" pos:column="9">HRESULT</name></type> ( <name pos:line="4952" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4952" pos:column="37">*</type:modifier><name pos:line="4952" pos:column="38">UnadviseDirtyStateChanged</name> )<parameter_list pos:line="4952" pos:column="65">( 
            <param><decl><type><name pos:line="4953" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4953" pos:column="29">*</type:modifier></type> <name pos:line="4953" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4954" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4954" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="4954" pos:column="42">*</type:modifier></type><name pos:line="4954" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4956" pos:column="9">HRESULT</name></type> ( <name pos:line="4956" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4956" pos:column="37">*</type:modifier><name pos:line="4956" pos:column="38">Rename</name> )<parameter_list pos:line="4956" pos:column="46">( 
            <param><decl><type><name pos:line="4957" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4957" pos:column="29">*</type:modifier></type> <name pos:line="4957" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4958" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4958" pos:column="24">BSTR</name></type> <name pos:line="4958" pos:column="29">newFilePath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4960" pos:column="9">HRESULT</name></type> ( <name pos:line="4960" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4960" pos:column="37">*</type:modifier><name pos:line="4960" pos:column="38">Reload</name> )<parameter_list pos:line="4960" pos:column="46">( 
            <param><decl><type><name pos:line="4961" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4961" pos:column="29">*</type:modifier></type> <name pos:line="4961" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4962" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4962" pos:column="33">VxReloadResult</name> <type:modifier pos:line="4962" pos:column="48">*</type:modifier></type><name pos:line="4962" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4964" pos:column="9">HRESULT</name></type> ( <name pos:line="4964" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4964" pos:column="37">*</type:modifier><name pos:line="4964" pos:column="38">Reload_2</name> )<parameter_list pos:line="4964" pos:column="48">( 
            <param><decl><type><name pos:line="4965" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4965" pos:column="29">*</type:modifier></type> <name pos:line="4965" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4966" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4966" pos:column="24">VxEditOptions</name></type> <name pos:line="4966" pos:column="38">options</name></decl></param>,
            <comment type="block" pos:line="4967" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4967" pos:column="33">VxReloadResult</name> <type:modifier pos:line="4967" pos:column="48">*</type:modifier></type><name pos:line="4967" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4969" pos:column="9">HRESULT</name></type> ( <name pos:line="4969" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4969" pos:column="37">*</type:modifier><name pos:line="4969" pos:column="38">GetIsReloading</name> )<parameter_list pos:line="4969" pos:column="54">( 
            <param><decl><type><name pos:line="4970" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4970" pos:column="29">*</type:modifier></type> <name pos:line="4970" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4971" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4971" pos:column="33">BOOL</name> <type:modifier pos:line="4971" pos:column="38">*</type:modifier></type><name pos:line="4971" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4973" pos:column="9">HRESULT</name></type> ( <name pos:line="4973" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4973" pos:column="37">*</type:modifier><name pos:line="4973" pos:column="38">Save</name> )<parameter_list pos:line="4973" pos:column="44">( 
            <param><decl><type><name pos:line="4974" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4974" pos:column="29">*</type:modifier></type> <name pos:line="4974" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4976" pos:column="9">HRESULT</name></type> ( <name pos:line="4976" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4976" pos:column="37">*</type:modifier><name pos:line="4976" pos:column="38">SaveAs</name> )<parameter_list pos:line="4976" pos:column="46">( 
            <param><decl><type><name pos:line="4977" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4977" pos:column="29">*</type:modifier></type> <name pos:line="4977" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4978" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4978" pos:column="24">BSTR</name></type> <name pos:line="4978" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="4979" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4979" pos:column="24">BOOL</name></type> <name pos:line="4979" pos:column="29">overwrite</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4981" pos:column="9">HRESULT</name></type> ( <name pos:line="4981" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4981" pos:column="37">*</type:modifier><name pos:line="4981" pos:column="38">SaveAs_2</name> )<parameter_list pos:line="4981" pos:column="48">( 
            <param><decl><type><name pos:line="4982" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4982" pos:column="29">*</type:modifier></type> <name pos:line="4982" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4983" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4983" pos:column="24">BSTR</name></type> <name pos:line="4983" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="4984" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4984" pos:column="24">BOOL</name></type> <name pos:line="4984" pos:column="29">overwrite</name></decl></param>,
            <comment type="block" pos:line="4985" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4985" pos:column="24">BOOL</name></type> <name pos:line="4985" pos:column="29">createFolder</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4987" pos:column="9">HRESULT</name></type> ( <name pos:line="4987" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4987" pos:column="37">*</type:modifier><name pos:line="4987" pos:column="38">SaveAs_3</name> )<parameter_list pos:line="4987" pos:column="48">( 
            <param><decl><type><name pos:line="4988" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4988" pos:column="29">*</type:modifier></type> <name pos:line="4988" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4989" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4989" pos:column="24">BSTR</name></type> <name pos:line="4989" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="4990" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4990" pos:column="24">BOOL</name></type> <name pos:line="4990" pos:column="29">overwrite</name></decl></param>,
            <comment type="block" pos:line="4991" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4991" pos:column="24">IVxContentType</name> <type:modifier pos:line="4991" pos:column="39">*</type:modifier></type><name pos:line="4991" pos:column="40">pNewContentType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4993" pos:column="9">HRESULT</name></type> ( <name pos:line="4993" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4993" pos:column="37">*</type:modifier><name pos:line="4993" pos:column="38">SaveAs_4</name> )<parameter_list pos:line="4993" pos:column="48">( 
            <param><decl><type><name pos:line="4994" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="4994" pos:column="29">*</type:modifier></type> <name pos:line="4994" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="4995" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4995" pos:column="24">BSTR</name></type> <name pos:line="4995" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="4996" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4996" pos:column="24">BOOL</name></type> <name pos:line="4996" pos:column="29">overwrite</name></decl></param>,
            <comment type="block" pos:line="4997" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4997" pos:column="24">BOOL</name></type> <name pos:line="4997" pos:column="29">createFolder</name></decl></param>,
            <comment type="block" pos:line="4998" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4998" pos:column="24">IVxContentType</name> <type:modifier pos:line="4998" pos:column="39">*</type:modifier></type><name pos:line="4998" pos:column="40">pNewContentType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5000" pos:column="9">HRESULT</name></type> ( <name pos:line="5000" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5000" pos:column="37">*</type:modifier><name pos:line="5000" pos:column="38">SaveCopy</name> )<parameter_list pos:line="5000" pos:column="48">( 
            <param><decl><type><name pos:line="5001" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="5001" pos:column="29">*</type:modifier></type> <name pos:line="5001" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5002" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5002" pos:column="24">BSTR</name></type> <name pos:line="5002" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="5003" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5003" pos:column="24">BOOL</name></type> <name pos:line="5003" pos:column="29">overwrite</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5005" pos:column="9">HRESULT</name></type> ( <name pos:line="5005" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5005" pos:column="37">*</type:modifier><name pos:line="5005" pos:column="38">SaveCopy_2</name> )<parameter_list pos:line="5005" pos:column="50">( 
            <param><decl><type><name pos:line="5006" pos:column="13">IVxTextDocument</name> <type:modifier pos:line="5006" pos:column="29">*</type:modifier></type> <name pos:line="5006" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5007" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5007" pos:column="24">BSTR</name></type> <name pos:line="5007" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="5008" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5008" pos:column="24">BOOL</name></type> <name pos:line="5008" pos:column="29">overwrite</name></decl></param>,
            <comment type="block" pos:line="5009" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5009" pos:column="24">BOOL</name></type> <name pos:line="5009" pos:column="29">createFolder</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5011" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5012" pos:column="7">IVxTextDocumentVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5014" pos:column="5">interface</name></type> <name pos:line="5014" pos:column="15">IVxTextDocument</name>
    <argument_list pos:line="5015" pos:column="5">{
        <argument><expr><name pos:line="5016" pos:column="9">CONST_VTBL</name> struct <name pos:line="5016" pos:column="27">IVxTextDocumentVtbl</name> <op:operator pos:line="5016" pos:column="47">*</op:operator><name pos:line="5016" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5021" pos:column="1">#<cpp:directive pos:line="5021" pos:column="2">ifdef</cpp:directive> <name pos:line="5021" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5024" pos:column="1">#<cpp:directive pos:line="5024" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5024" pos:column="9">IVxTextDocument_QueryInterface</name><parameter_list pos:line="5024" pos:column="39">(<param><type><name pos:line="5024" pos:column="40">This</name></type></param>,<param><type><name pos:line="5024" pos:column="45">riid</name></type></param>,<param><type><name pos:line="5024" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5025" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5027" pos:column="1">#<cpp:directive pos:line="5027" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5027" pos:column="9">IVxTextDocument_AddRef</name><parameter_list pos:line="5027" pos:column="31">(<param><type><name pos:line="5027" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5028" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5030" pos:column="1">#<cpp:directive pos:line="5030" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5030" pos:column="9">IVxTextDocument_Release</name><parameter_list pos:line="5030" pos:column="32">(<param><type><name pos:line="5030" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5031" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5034" pos:column="1">#<cpp:directive pos:line="5034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5034" pos:column="9">IVxTextDocument_Dispose</name><parameter_list pos:line="5034" pos:column="32">(<param><type><name pos:line="5034" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5035" pos:column="5">( (This)-&gt;lpVtbl -&gt; Dispose(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5038" pos:column="1">#<cpp:directive pos:line="5038" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5038" pos:column="9">IVxTextDocument_GetFilePath</name><parameter_list pos:line="5038" pos:column="36">(<param><type><name pos:line="5038" pos:column="37">This</name></type></param>,<param><type><name pos:line="5038" pos:column="42">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5039" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFilePath(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5041" pos:column="1">#<cpp:directive pos:line="5041" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5041" pos:column="9">IVxTextDocument_GetTextBuffer</name><parameter_list pos:line="5041" pos:column="38">(<param><type><name pos:line="5041" pos:column="39">This</name></type></param>,<param><type><name pos:line="5041" pos:column="44">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5042" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5044" pos:column="1">#<cpp:directive pos:line="5044" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5044" pos:column="9">IVxTextDocument_GetIsDirty</name><parameter_list pos:line="5044" pos:column="35">(<param><type><name pos:line="5044" pos:column="36">This</name></type></param>,<param><type><name pos:line="5044" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5045" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIsDirty(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5047" pos:column="1">#<cpp:directive pos:line="5047" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5047" pos:column="9">IVxTextDocument_AdviseFileActionOccurred</name><parameter_list pos:line="5047" pos:column="49">(<param><type><name pos:line="5047" pos:column="50">This</name></type></param>,<param><type><name pos:line="5047" pos:column="55">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5048" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseFileActionOccurred(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5050" pos:column="1">#<cpp:directive pos:line="5050" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5050" pos:column="9">IVxTextDocument_UnadviseFileActionOccurred</name><parameter_list pos:line="5050" pos:column="51">(<param><type><name pos:line="5050" pos:column="52">This</name></type></param>,<param><type><name pos:line="5050" pos:column="57">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5051" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseFileActionOccurred(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5053" pos:column="1">#<cpp:directive pos:line="5053" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5053" pos:column="9">IVxTextDocument_AdviseDirtyStateChanged</name><parameter_list pos:line="5053" pos:column="48">(<param><type><name pos:line="5053" pos:column="49">This</name></type></param>,<param><type><name pos:line="5053" pos:column="54">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5054" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseDirtyStateChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5056" pos:column="1">#<cpp:directive pos:line="5056" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5056" pos:column="9">IVxTextDocument_UnadviseDirtyStateChanged</name><parameter_list pos:line="5056" pos:column="50">(<param><type><name pos:line="5056" pos:column="51">This</name></type></param>,<param><type><name pos:line="5056" pos:column="56">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5057" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseDirtyStateChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5059" pos:column="1">#<cpp:directive pos:line="5059" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5059" pos:column="9">IVxTextDocument_Rename</name><parameter_list pos:line="5059" pos:column="31">(<param><type><name pos:line="5059" pos:column="32">This</name></type></param>,<param><type><name pos:line="5059" pos:column="37">newFilePath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5060" pos:column="5">( (This)-&gt;lpVtbl -&gt; Rename(This,newFilePath) )</cpp:value></cpp:define> 

<cpp:define pos:line="5062" pos:column="1">#<cpp:directive pos:line="5062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5062" pos:column="9">IVxTextDocument_Reload</name><parameter_list pos:line="5062" pos:column="31">(<param><type><name pos:line="5062" pos:column="32">This</name></type></param>,<param><type><name pos:line="5062" pos:column="37">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5063" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reload(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5065" pos:column="1">#<cpp:directive pos:line="5065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5065" pos:column="9">IVxTextDocument_Reload_2</name><parameter_list pos:line="5065" pos:column="33">(<param><type><name pos:line="5065" pos:column="34">This</name></type></param>,<param><type><name pos:line="5065" pos:column="39">options</name></type></param>,<param><type><name pos:line="5065" pos:column="47">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5066" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reload_2(This,options,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5068" pos:column="1">#<cpp:directive pos:line="5068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5068" pos:column="9">IVxTextDocument_GetIsReloading</name><parameter_list pos:line="5068" pos:column="39">(<param><type><name pos:line="5068" pos:column="40">This</name></type></param>,<param><type><name pos:line="5068" pos:column="45">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5069" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIsReloading(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5071" pos:column="1">#<cpp:directive pos:line="5071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5071" pos:column="9">IVxTextDocument_Save</name><parameter_list pos:line="5071" pos:column="29">(<param><type><name pos:line="5071" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5072" pos:column="5">( (This)-&gt;lpVtbl -&gt; Save(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5074" pos:column="1">#<cpp:directive pos:line="5074" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5074" pos:column="9">IVxTextDocument_SaveAs</name><parameter_list pos:line="5074" pos:column="31">(<param><type><name pos:line="5074" pos:column="32">This</name></type></param>,<param><type><name pos:line="5074" pos:column="37">filePath</name></type></param>,<param><type><name pos:line="5074" pos:column="46">overwrite</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5075" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveAs(This,filePath,overwrite) )</cpp:value></cpp:define> 

<cpp:define pos:line="5077" pos:column="1">#<cpp:directive pos:line="5077" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5077" pos:column="9">IVxTextDocument_SaveAs_2</name><parameter_list pos:line="5077" pos:column="33">(<param><type><name pos:line="5077" pos:column="34">This</name></type></param>,<param><type><name pos:line="5077" pos:column="39">filePath</name></type></param>,<param><type><name pos:line="5077" pos:column="48">overwrite</name></type></param>,<param><type><name pos:line="5077" pos:column="58">createFolder</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5078" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveAs_2(This,filePath,overwrite,createFolder) )</cpp:value></cpp:define> 

<cpp:define pos:line="5080" pos:column="1">#<cpp:directive pos:line="5080" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5080" pos:column="9">IVxTextDocument_SaveAs_3</name><parameter_list pos:line="5080" pos:column="33">(<param><type><name pos:line="5080" pos:column="34">This</name></type></param>,<param><type><name pos:line="5080" pos:column="39">filePath</name></type></param>,<param><type><name pos:line="5080" pos:column="48">overwrite</name></type></param>,<param><type><name pos:line="5080" pos:column="58">pNewContentType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5081" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveAs_3(This,filePath,overwrite,pNewContentType) )</cpp:value></cpp:define> 

<cpp:define pos:line="5083" pos:column="1">#<cpp:directive pos:line="5083" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5083" pos:column="9">IVxTextDocument_SaveAs_4</name><parameter_list pos:line="5083" pos:column="33">(<param><type><name pos:line="5083" pos:column="34">This</name></type></param>,<param><type><name pos:line="5083" pos:column="39">filePath</name></type></param>,<param><type><name pos:line="5083" pos:column="48">overwrite</name></type></param>,<param><type><name pos:line="5083" pos:column="58">createFolder</name></type></param>,<param><type><name pos:line="5083" pos:column="71">pNewContentType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5084" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveAs_4(This,filePath,overwrite,createFolder,pNewContentType) )</cpp:value></cpp:define> 

<cpp:define pos:line="5086" pos:column="1">#<cpp:directive pos:line="5086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5086" pos:column="9">IVxTextDocument_SaveCopy</name><parameter_list pos:line="5086" pos:column="33">(<param><type><name pos:line="5086" pos:column="34">This</name></type></param>,<param><type><name pos:line="5086" pos:column="39">filePath</name></type></param>,<param><type><name pos:line="5086" pos:column="48">overwrite</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5087" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveCopy(This,filePath,overwrite) )</cpp:value></cpp:define> 

<cpp:define pos:line="5089" pos:column="1">#<cpp:directive pos:line="5089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5089" pos:column="9">IVxTextDocument_SaveCopy_2</name><parameter_list pos:line="5089" pos:column="35">(<param><type><name pos:line="5089" pos:column="36">This</name></type></param>,<param><type><name pos:line="5089" pos:column="41">filePath</name></type></param>,<param><type><name pos:line="5089" pos:column="50">overwrite</name></type></param>,<param><type><name pos:line="5089" pos:column="60">createFolder</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5090" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveCopy_2(This,filePath,overwrite,createFolder) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5092" pos:column="1">#<cpp:directive pos:line="5092" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5092" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5095" pos:column="1">#<cpp:directive pos:line="5095" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5095" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5100" pos:column="1">#<cpp:directive pos:line="5100" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5100" pos:column="9">/* __IVxTextDocument_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5103" pos:column="1">#<cpp:directive pos:line="5103" pos:column="2">ifndef</cpp:directive> <name pos:line="5103" pos:column="9">__IVxTextDocumentFactoryService_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5104" pos:column="1">#<cpp:directive pos:line="5104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5104" pos:column="9">__IVxTextDocumentFactoryService_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5106" pos:column="1">/* interface IVxTextDocumentFactoryService */</comment>
<comment type="block" pos:line="5107" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5110" pos:column="1">EXTERN_C</name> <specifier pos:line="5110" pos:column="10">const</specifier> <name pos:line="5110" pos:column="16">IID</name></type> <name pos:line="5110" pos:column="20">IID_IVxTextDocumentFactoryService</name></decl>;</decl_stmt>

<cpp:if pos:line="5112" pos:column="1">#<cpp:directive pos:line="5112" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5112" pos:column="5">defined</name><argument_list pos:line="5112" pos:column="12">(<argument><expr><name pos:line="5112" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5112" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5112" pos:column="29">!</op:operator><call><name pos:line="5112" pos:column="30">defined</name><argument_list pos:line="5112" pos:column="37">(<argument><expr><name pos:line="5112" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5114" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5114" pos:column="19">(<argument pos:line="5114" pos:column="20">"f4d19c93-7267-4509-9284-88e8c08be615"</argument>)</argument_list></macro>
    <label><name pos:line="5115" pos:column="5">IVxTextDocumentFactoryService</name> :</label> <expr_stmt><expr pos:line="5115" pos:column="37">public <name pos:line="5115" pos:column="44">IUnknown</name>
    <block pos:line="5116" pos:column="5">{
    <expr pos:line="5117" pos:column="5">public<op:operator pos:line="5117" pos:column="11">:</op:operator>
        virtual <name pos:line="5118" pos:column="17">HRESULT</name> <name pos:line="5118" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5118" pos:column="43">CreateAndLoadTextDocument</name><argument_list pos:line="5118" pos:column="68">( 
            <comment type="block" pos:line="5119" pos:column="13">/* [in] */</comment> <argument pos:line="5119" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="5120" pos:column="13">/* [in] */</comment> <argument pos:line="5120" pos:column="24">IVxContentType *pContentType</argument>,
            <comment type="block" pos:line="5121" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5121" pos:column="33">IVxTextDocument **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="5121" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5121" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="5123" pos:column="9">virtual <name pos:line="5123" pos:column="17">HRESULT</name> <name pos:line="5123" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5123" pos:column="43">CreateTextDocument</name><argument_list pos:line="5123" pos:column="61">( 
            <comment type="block" pos:line="5124" pos:column="13">/* [in] */</comment> <argument pos:line="5124" pos:column="24">IVxTextBuffer *pTextBuffer</argument>,
            <comment type="block" pos:line="5125" pos:column="13">/* [in] */</comment> <argument pos:line="5125" pos:column="24">BSTR filePath</argument>,
            <comment type="block" pos:line="5126" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5126" pos:column="33">IVxTextDocument **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="5126" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5126" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="5128" pos:column="9">virtual <name pos:line="5128" pos:column="17">HRESULT</name> <name pos:line="5128" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5128" pos:column="43">TryGetTextDocument</name><argument_list pos:line="5128" pos:column="61">( 
            <comment type="block" pos:line="5129" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5129" pos:column="24">IVxTextBuffer</name> <op:operator pos:line="5129" pos:column="38">*</op:operator><name pos:line="5129" pos:column="39">pTextBuffer</name></expr></argument>,
            <comment type="block" pos:line="5130" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="5130" pos:column="25">IVxTextDocument</name> <op:operator pos:line="5130" pos:column="41">*</op:operator><op:operator pos:line="5130" pos:column="42">*</op:operator><name pos:line="5130" pos:column="43">ppTextDocument</name></expr></argument>,
            <comment type="block" pos:line="5131" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5131" pos:column="33">BOOL</name> <op:operator pos:line="5131" pos:column="38">*</op:operator><name pos:line="5131" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5131" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="5131" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="5133" pos:column="9">virtual <name pos:line="5133" pos:column="17">HRESULT</name> <name pos:line="5133" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5133" pos:column="43">AdviseTextDocumentCreated</name><argument_list pos:line="5133" pos:column="68">( 
            <comment type="block" pos:line="5134" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5134" pos:column="24">IVxTextDocumentEvent</name> <op:operator pos:line="5134" pos:column="45">*</op:operator><name pos:line="5134" pos:column="46">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="5134" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5134" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="5136" pos:column="9">virtual <name pos:line="5136" pos:column="17">HRESULT</name> <name pos:line="5136" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5136" pos:column="43">UnadviseTextDocumentCreated</name><argument_list pos:line="5136" pos:column="70">( 
            <comment type="block" pos:line="5137" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5137" pos:column="24">IVxTextDocumentEvent</name> <op:operator pos:line="5137" pos:column="45">*</op:operator><name pos:line="5137" pos:column="46">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="5137" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5137" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="5139" pos:column="9">virtual <name pos:line="5139" pos:column="17">HRESULT</name> <name pos:line="5139" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5139" pos:column="43">AdviseTextDocumentDisposed</name><argument_list pos:line="5139" pos:column="69">( 
            <comment type="block" pos:line="5140" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5140" pos:column="24">IVxTextDocumentEvent</name> <op:operator pos:line="5140" pos:column="45">*</op:operator><name pos:line="5140" pos:column="46">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="5140" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5140" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="5142" pos:column="9">virtual <name pos:line="5142" pos:column="17">HRESULT</name> <name pos:line="5142" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5142" pos:column="43">UnadviseTextDocumentDisposed</name><argument_list pos:line="5142" pos:column="71">( 
            <comment type="block" pos:line="5143" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5143" pos:column="24">IVxTextDocumentEvent</name> <op:operator pos:line="5143" pos:column="45">*</op:operator><name pos:line="5143" pos:column="46">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="5143" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5143" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5147" pos:column="1">#<cpp:directive pos:line="5147" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5147" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5149" pos:column="5">typedef <type><struct pos:line="5149" pos:column="13">struct <name pos:line="5149" pos:column="20">IVxTextDocumentFactoryServiceVtbl</name>
    <block pos:line="5150" pos:column="5">{<public type="default" pos:line="5150" pos:column="6">
        <function_decl><type><name pos:line="5151" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5153" pos:column="9">HRESULT</name></type> ( <name pos:line="5153" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5153" pos:column="37">*</type:modifier><name pos:line="5153" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5153" pos:column="54">( 
            <param><decl><type><name pos:line="5154" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5154" pos:column="43">*</type:modifier></type> <name pos:line="5154" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5155" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5155" pos:column="24">REFIID</name></type> <name pos:line="5155" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5156" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5157" pos:column="13">__RPC__deref_out</name>  <name pos:line="5157" pos:column="31">void</name> <type:modifier pos:line="5157" pos:column="36">*</type:modifier><type:modifier pos:line="5157" pos:column="37">*</type:modifier></type><name pos:line="5157" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5159" pos:column="9">ULONG</name></type> ( <name pos:line="5159" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5159" pos:column="35">*</type:modifier><name pos:line="5159" pos:column="36">AddRef</name> )<parameter_list pos:line="5159" pos:column="44">( 
            <param><decl><type><name pos:line="5160" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5160" pos:column="43">*</type:modifier></type> <name pos:line="5160" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5162" pos:column="9">ULONG</name></type> ( <name pos:line="5162" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5162" pos:column="35">*</type:modifier><name pos:line="5162" pos:column="36">Release</name> )<parameter_list pos:line="5162" pos:column="45">( 
            <param><decl><type><name pos:line="5163" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5163" pos:column="43">*</type:modifier></type> <name pos:line="5163" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5165" pos:column="9">HRESULT</name></type> ( <name pos:line="5165" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5165" pos:column="37">*</type:modifier><name pos:line="5165" pos:column="38">CreateAndLoadTextDocument</name> )<parameter_list pos:line="5165" pos:column="65">( 
            <param><decl><type><name pos:line="5166" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5166" pos:column="43">*</type:modifier></type> <name pos:line="5166" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5167" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5167" pos:column="24">BSTR</name></type> <name pos:line="5167" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="5168" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5168" pos:column="24">IVxContentType</name> <type:modifier pos:line="5168" pos:column="39">*</type:modifier></type><name pos:line="5168" pos:column="40">pContentType</name></decl></param>,
            <comment type="block" pos:line="5169" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5169" pos:column="33">IVxTextDocument</name> <type:modifier pos:line="5169" pos:column="49">*</type:modifier><type:modifier pos:line="5169" pos:column="50">*</type:modifier></type><name pos:line="5169" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5171" pos:column="9">HRESULT</name></type> ( <name pos:line="5171" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5171" pos:column="37">*</type:modifier><name pos:line="5171" pos:column="38">CreateTextDocument</name> )<parameter_list pos:line="5171" pos:column="58">( 
            <param><decl><type><name pos:line="5172" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5172" pos:column="43">*</type:modifier></type> <name pos:line="5172" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5173" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5173" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="5173" pos:column="38">*</type:modifier></type><name pos:line="5173" pos:column="39">pTextBuffer</name></decl></param>,
            <comment type="block" pos:line="5174" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5174" pos:column="24">BSTR</name></type> <name pos:line="5174" pos:column="29">filePath</name></decl></param>,
            <comment type="block" pos:line="5175" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5175" pos:column="33">IVxTextDocument</name> <type:modifier pos:line="5175" pos:column="49">*</type:modifier><type:modifier pos:line="5175" pos:column="50">*</type:modifier></type><name pos:line="5175" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5177" pos:column="9">HRESULT</name></type> ( <name pos:line="5177" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5177" pos:column="37">*</type:modifier><name pos:line="5177" pos:column="38">TryGetTextDocument</name> )<parameter_list pos:line="5177" pos:column="58">( 
            <param><decl><type><name pos:line="5178" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5178" pos:column="43">*</type:modifier></type> <name pos:line="5178" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5179" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5179" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="5179" pos:column="38">*</type:modifier></type><name pos:line="5179" pos:column="39">pTextBuffer</name></decl></param>,
            <comment type="block" pos:line="5180" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5180" pos:column="25">IVxTextDocument</name> <type:modifier pos:line="5180" pos:column="41">*</type:modifier><type:modifier pos:line="5180" pos:column="42">*</type:modifier></type><name pos:line="5180" pos:column="43">ppTextDocument</name></decl></param>,
            <comment type="block" pos:line="5181" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5181" pos:column="33">BOOL</name> <type:modifier pos:line="5181" pos:column="38">*</type:modifier></type><name pos:line="5181" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5183" pos:column="9">HRESULT</name></type> ( <name pos:line="5183" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5183" pos:column="37">*</type:modifier><name pos:line="5183" pos:column="38">AdviseTextDocumentCreated</name> )<parameter_list pos:line="5183" pos:column="65">( 
            <param><decl><type><name pos:line="5184" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5184" pos:column="43">*</type:modifier></type> <name pos:line="5184" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5185" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5185" pos:column="24">IVxTextDocumentEvent</name> <type:modifier pos:line="5185" pos:column="45">*</type:modifier></type><name pos:line="5185" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5187" pos:column="9">HRESULT</name></type> ( <name pos:line="5187" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5187" pos:column="37">*</type:modifier><name pos:line="5187" pos:column="38">UnadviseTextDocumentCreated</name> )<parameter_list pos:line="5187" pos:column="67">( 
            <param><decl><type><name pos:line="5188" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5188" pos:column="43">*</type:modifier></type> <name pos:line="5188" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5189" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5189" pos:column="24">IVxTextDocumentEvent</name> <type:modifier pos:line="5189" pos:column="45">*</type:modifier></type><name pos:line="5189" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5191" pos:column="9">HRESULT</name></type> ( <name pos:line="5191" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5191" pos:column="37">*</type:modifier><name pos:line="5191" pos:column="38">AdviseTextDocumentDisposed</name> )<parameter_list pos:line="5191" pos:column="66">( 
            <param><decl><type><name pos:line="5192" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5192" pos:column="43">*</type:modifier></type> <name pos:line="5192" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5193" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5193" pos:column="24">IVxTextDocumentEvent</name> <type:modifier pos:line="5193" pos:column="45">*</type:modifier></type><name pos:line="5193" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5195" pos:column="9">HRESULT</name></type> ( <name pos:line="5195" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5195" pos:column="37">*</type:modifier><name pos:line="5195" pos:column="38">UnadviseTextDocumentDisposed</name> )<parameter_list pos:line="5195" pos:column="68">( 
            <param><decl><type><name pos:line="5196" pos:column="13">IVxTextDocumentFactoryService</name> <type:modifier pos:line="5196" pos:column="43">*</type:modifier></type> <name pos:line="5196" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="5197" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5197" pos:column="24">IVxTextDocumentEvent</name> <type:modifier pos:line="5197" pos:column="45">*</type:modifier></type><name pos:line="5197" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5199" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5200" pos:column="7">IVxTextDocumentFactoryServiceVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5202" pos:column="5">interface</name></type> <name pos:line="5202" pos:column="15">IVxTextDocumentFactoryService</name>
    <argument_list pos:line="5203" pos:column="5">{
        <argument><expr><name pos:line="5204" pos:column="9">CONST_VTBL</name> struct <name pos:line="5204" pos:column="27">IVxTextDocumentFactoryServiceVtbl</name> <op:operator pos:line="5204" pos:column="61">*</op:operator><name pos:line="5204" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5209" pos:column="1">#<cpp:directive pos:line="5209" pos:column="2">ifdef</cpp:directive> <name pos:line="5209" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5212" pos:column="1">#<cpp:directive pos:line="5212" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5212" pos:column="9">IVxTextDocumentFactoryService_QueryInterface</name><parameter_list pos:line="5212" pos:column="53">(<param><type><name pos:line="5212" pos:column="54">This</name></type></param>,<param><type><name pos:line="5212" pos:column="59">riid</name></type></param>,<param><type><name pos:line="5212" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5213" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5215" pos:column="1">#<cpp:directive pos:line="5215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5215" pos:column="9">IVxTextDocumentFactoryService_AddRef</name><parameter_list pos:line="5215" pos:column="45">(<param><type><name pos:line="5215" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5216" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5218" pos:column="1">#<cpp:directive pos:line="5218" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5218" pos:column="9">IVxTextDocumentFactoryService_Release</name><parameter_list pos:line="5218" pos:column="46">(<param><type><name pos:line="5218" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5219" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5222" pos:column="1">#<cpp:directive pos:line="5222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5222" pos:column="9">IVxTextDocumentFactoryService_CreateAndLoadTextDocument</name><parameter_list pos:line="5222" pos:column="64">(<param><type><name pos:line="5222" pos:column="65">This</name></type></param>,<param><type><name pos:line="5222" pos:column="70">filePath</name></type></param>,<param><type><name pos:line="5222" pos:column="79">pContentType</name></type></param>,<param><type><name pos:line="5222" pos:column="92">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5223" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateAndLoadTextDocument(This,filePath,pContentType,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5225" pos:column="1">#<cpp:directive pos:line="5225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5225" pos:column="9">IVxTextDocumentFactoryService_CreateTextDocument</name><parameter_list pos:line="5225" pos:column="57">(<param><type><name pos:line="5225" pos:column="58">This</name></type></param>,<param><type><name pos:line="5225" pos:column="63">pTextBuffer</name></type></param>,<param><type><name pos:line="5225" pos:column="75">filePath</name></type></param>,<param><type><name pos:line="5225" pos:column="84">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5226" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextDocument(This,pTextBuffer,filePath,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5228" pos:column="1">#<cpp:directive pos:line="5228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5228" pos:column="9">IVxTextDocumentFactoryService_TryGetTextDocument</name><parameter_list pos:line="5228" pos:column="57">(<param><type><name pos:line="5228" pos:column="58">This</name></type></param>,<param><type><name pos:line="5228" pos:column="63">pTextBuffer</name></type></param>,<param><type><name pos:line="5228" pos:column="75">ppTextDocument</name></type></param>,<param><type><name pos:line="5228" pos:column="90">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5229" pos:column="5">( (This)-&gt;lpVtbl -&gt; TryGetTextDocument(This,pTextBuffer,ppTextDocument,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5231" pos:column="1">#<cpp:directive pos:line="5231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5231" pos:column="9">IVxTextDocumentFactoryService_AdviseTextDocumentCreated</name><parameter_list pos:line="5231" pos:column="64">(<param><type><name pos:line="5231" pos:column="65">This</name></type></param>,<param><type><name pos:line="5231" pos:column="70">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5232" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseTextDocumentCreated(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5234" pos:column="1">#<cpp:directive pos:line="5234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5234" pos:column="9">IVxTextDocumentFactoryService_UnadviseTextDocumentCreated</name><parameter_list pos:line="5234" pos:column="66">(<param><type><name pos:line="5234" pos:column="67">This</name></type></param>,<param><type><name pos:line="5234" pos:column="72">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5235" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseTextDocumentCreated(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5237" pos:column="1">#<cpp:directive pos:line="5237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5237" pos:column="9">IVxTextDocumentFactoryService_AdviseTextDocumentDisposed</name><parameter_list pos:line="5237" pos:column="65">(<param><type><name pos:line="5237" pos:column="66">This</name></type></param>,<param><type><name pos:line="5237" pos:column="71">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5238" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseTextDocumentDisposed(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5240" pos:column="1">#<cpp:directive pos:line="5240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5240" pos:column="9">IVxTextDocumentFactoryService_UnadviseTextDocumentDisposed</name><parameter_list pos:line="5240" pos:column="67">(<param><type><name pos:line="5240" pos:column="68">This</name></type></param>,<param><type><name pos:line="5240" pos:column="73">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5241" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseTextDocumentDisposed(This,pValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5243" pos:column="1">#<cpp:directive pos:line="5243" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5243" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5246" pos:column="1">#<cpp:directive pos:line="5246" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5246" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5251" pos:column="1">#<cpp:directive pos:line="5251" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5251" pos:column="9">/* __IVxTextDocumentFactoryService_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5254" pos:column="1">#<cpp:directive pos:line="5254" pos:column="2">ifndef</cpp:directive> <name pos:line="5254" pos:column="9">__IVxTextDocumentEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5255" pos:column="1">#<cpp:directive pos:line="5255" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5255" pos:column="9">__IVxTextDocumentEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5257" pos:column="1">/* interface IVxTextDocumentEventArgs */</comment>
<comment type="block" pos:line="5258" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5261" pos:column="1">EXTERN_C</name> <specifier pos:line="5261" pos:column="10">const</specifier> <name pos:line="5261" pos:column="16">IID</name></type> <name pos:line="5261" pos:column="20">IID_IVxTextDocumentEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="5263" pos:column="1">#<cpp:directive pos:line="5263" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5263" pos:column="5">defined</name><argument_list pos:line="5263" pos:column="12">(<argument><expr><name pos:line="5263" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5263" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5263" pos:column="29">!</op:operator><call><name pos:line="5263" pos:column="30">defined</name><argument_list pos:line="5263" pos:column="37">(<argument><expr><name pos:line="5263" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5265" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5265" pos:column="19">(<argument pos:line="5265" pos:column="20">"d85f080d-428e-4ac7-b478-dac2f0cb3a4e"</argument>)</argument_list></macro>
    <label><name pos:line="5266" pos:column="5">IVxTextDocumentEventArgs</name> :</label> <expr_stmt><expr pos:line="5266" pos:column="32">public <name pos:line="5266" pos:column="39">IUnknown</name>
    <block pos:line="5267" pos:column="5">{
    <expr pos:line="5268" pos:column="5">public<op:operator pos:line="5268" pos:column="11">:</op:operator>
        virtual <name pos:line="5269" pos:column="17">HRESULT</name> <name pos:line="5269" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5269" pos:column="43">GetTextDocument</name><argument_list pos:line="5269" pos:column="58">( 
            <comment type="block" pos:line="5270" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5270" pos:column="33">IVxTextDocument</name> <op:operator pos:line="5270" pos:column="49">*</op:operator><op:operator pos:line="5270" pos:column="50">*</op:operator><name pos:line="5270" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5270" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5270" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5274" pos:column="1">#<cpp:directive pos:line="5274" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5274" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5276" pos:column="5">typedef <type><struct pos:line="5276" pos:column="13">struct <name pos:line="5276" pos:column="20">IVxTextDocumentEventArgsVtbl</name>
    <block pos:line="5277" pos:column="5">{<public type="default" pos:line="5277" pos:column="6">
        <function_decl><type><name pos:line="5278" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5280" pos:column="9">HRESULT</name></type> ( <name pos:line="5280" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5280" pos:column="37">*</type:modifier><name pos:line="5280" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5280" pos:column="54">( 
            <param><decl><type><name pos:line="5281" pos:column="13">IVxTextDocumentEventArgs</name> <type:modifier pos:line="5281" pos:column="38">*</type:modifier></type> <name pos:line="5281" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="5282" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5282" pos:column="24">REFIID</name></type> <name pos:line="5282" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5283" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5284" pos:column="13">__RPC__deref_out</name>  <name pos:line="5284" pos:column="31">void</name> <type:modifier pos:line="5284" pos:column="36">*</type:modifier><type:modifier pos:line="5284" pos:column="37">*</type:modifier></type><name pos:line="5284" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5286" pos:column="9">ULONG</name></type> ( <name pos:line="5286" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5286" pos:column="35">*</type:modifier><name pos:line="5286" pos:column="36">AddRef</name> )<parameter_list pos:line="5286" pos:column="44">( 
            <param><decl><type><name pos:line="5287" pos:column="13">IVxTextDocumentEventArgs</name> <type:modifier pos:line="5287" pos:column="38">*</type:modifier></type> <name pos:line="5287" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5289" pos:column="9">ULONG</name></type> ( <name pos:line="5289" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5289" pos:column="35">*</type:modifier><name pos:line="5289" pos:column="36">Release</name> )<parameter_list pos:line="5289" pos:column="45">( 
            <param><decl><type><name pos:line="5290" pos:column="13">IVxTextDocumentEventArgs</name> <type:modifier pos:line="5290" pos:column="38">*</type:modifier></type> <name pos:line="5290" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5292" pos:column="9">HRESULT</name></type> ( <name pos:line="5292" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5292" pos:column="37">*</type:modifier><name pos:line="5292" pos:column="38">GetTextDocument</name> )<parameter_list pos:line="5292" pos:column="55">( 
            <param><decl><type><name pos:line="5293" pos:column="13">IVxTextDocumentEventArgs</name> <type:modifier pos:line="5293" pos:column="38">*</type:modifier></type> <name pos:line="5293" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="5294" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5294" pos:column="33">IVxTextDocument</name> <type:modifier pos:line="5294" pos:column="49">*</type:modifier><type:modifier pos:line="5294" pos:column="50">*</type:modifier></type><name pos:line="5294" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5296" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5297" pos:column="7">IVxTextDocumentEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5299" pos:column="5">interface</name></type> <name pos:line="5299" pos:column="15">IVxTextDocumentEventArgs</name>
    <argument_list pos:line="5300" pos:column="5">{
        <argument><expr><name pos:line="5301" pos:column="9">CONST_VTBL</name> struct <name pos:line="5301" pos:column="27">IVxTextDocumentEventArgsVtbl</name> <op:operator pos:line="5301" pos:column="56">*</op:operator><name pos:line="5301" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5306" pos:column="1">#<cpp:directive pos:line="5306" pos:column="2">ifdef</cpp:directive> <name pos:line="5306" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5309" pos:column="1">#<cpp:directive pos:line="5309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5309" pos:column="9">IVxTextDocumentEventArgs_QueryInterface</name><parameter_list pos:line="5309" pos:column="48">(<param><type><name pos:line="5309" pos:column="49">This</name></type></param>,<param><type><name pos:line="5309" pos:column="54">riid</name></type></param>,<param><type><name pos:line="5309" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5310" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5312" pos:column="1">#<cpp:directive pos:line="5312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5312" pos:column="9">IVxTextDocumentEventArgs_AddRef</name><parameter_list pos:line="5312" pos:column="40">(<param><type><name pos:line="5312" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5313" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5315" pos:column="1">#<cpp:directive pos:line="5315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5315" pos:column="9">IVxTextDocumentEventArgs_Release</name><parameter_list pos:line="5315" pos:column="41">(<param><type><name pos:line="5315" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5316" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5319" pos:column="1">#<cpp:directive pos:line="5319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5319" pos:column="9">IVxTextDocumentEventArgs_GetTextDocument</name><parameter_list pos:line="5319" pos:column="49">(<param><type><name pos:line="5319" pos:column="50">This</name></type></param>,<param><type><name pos:line="5319" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5320" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextDocument(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5322" pos:column="1">#<cpp:directive pos:line="5322" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5322" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5325" pos:column="1">#<cpp:directive pos:line="5325" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5325" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5330" pos:column="1">#<cpp:directive pos:line="5330" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5330" pos:column="9">/* __IVxTextDocumentEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5333" pos:column="1">#<cpp:directive pos:line="5333" pos:column="2">ifndef</cpp:directive> <name pos:line="5333" pos:column="9">__IVxTextDocumentFileActionEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5334" pos:column="1">#<cpp:directive pos:line="5334" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5334" pos:column="9">__IVxTextDocumentFileActionEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5336" pos:column="1">/* interface IVxTextDocumentFileActionEventArgs */</comment>
<comment type="block" pos:line="5337" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5340" pos:column="1">EXTERN_C</name> <specifier pos:line="5340" pos:column="10">const</specifier> <name pos:line="5340" pos:column="16">IID</name></type> <name pos:line="5340" pos:column="20">IID_IVxTextDocumentFileActionEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="5342" pos:column="1">#<cpp:directive pos:line="5342" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5342" pos:column="5">defined</name><argument_list pos:line="5342" pos:column="12">(<argument><expr><name pos:line="5342" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5342" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5342" pos:column="29">!</op:operator><call><name pos:line="5342" pos:column="30">defined</name><argument_list pos:line="5342" pos:column="37">(<argument><expr><name pos:line="5342" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5344" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5344" pos:column="19">(<argument pos:line="5344" pos:column="20">"dc0c964d-81ae-4d24-8d4f-9340cc78d6ae"</argument>)</argument_list></macro>
    <label><name pos:line="5345" pos:column="5">IVxTextDocumentFileActionEventArgs</name> :</label> <expr_stmt><expr pos:line="5345" pos:column="42">public <name pos:line="5345" pos:column="49">IUnknown</name>
    <block pos:line="5346" pos:column="5">{
    <expr pos:line="5347" pos:column="5">public<op:operator pos:line="5347" pos:column="11">:</op:operator>
        virtual <name pos:line="5348" pos:column="17">HRESULT</name> <name pos:line="5348" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5348" pos:column="43">GetFilePath</name><argument_list pos:line="5348" pos:column="54">( 
            <comment type="block" pos:line="5349" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5349" pos:column="33">BSTR</name> <op:operator pos:line="5349" pos:column="38">*</op:operator><name pos:line="5349" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5349" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="5349" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="5351" pos:column="9">virtual <name pos:line="5351" pos:column="17">HRESULT</name> <name pos:line="5351" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5351" pos:column="43">GetFileActionType</name><argument_list pos:line="5351" pos:column="60">( 
            <comment type="block" pos:line="5352" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5352" pos:column="33">VxFileActionTypes</name> <op:operator pos:line="5352" pos:column="51">*</op:operator><name pos:line="5352" pos:column="52">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5352" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5352" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5356" pos:column="1">#<cpp:directive pos:line="5356" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5356" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5358" pos:column="5">typedef <type><struct pos:line="5358" pos:column="13">struct <name pos:line="5358" pos:column="20">IVxTextDocumentFileActionEventArgsVtbl</name>
    <block pos:line="5359" pos:column="5">{<public type="default" pos:line="5359" pos:column="6">
        <function_decl><type><name pos:line="5360" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5362" pos:column="9">HRESULT</name></type> ( <name pos:line="5362" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5362" pos:column="37">*</type:modifier><name pos:line="5362" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5362" pos:column="54">( 
            <param><decl><type><name pos:line="5363" pos:column="13">IVxTextDocumentFileActionEventArgs</name> <type:modifier pos:line="5363" pos:column="48">*</type:modifier></type> <name pos:line="5363" pos:column="50">This</name></decl></param>,
            <comment type="block" pos:line="5364" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5364" pos:column="24">REFIID</name></type> <name pos:line="5364" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5365" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5366" pos:column="13">__RPC__deref_out</name>  <name pos:line="5366" pos:column="31">void</name> <type:modifier pos:line="5366" pos:column="36">*</type:modifier><type:modifier pos:line="5366" pos:column="37">*</type:modifier></type><name pos:line="5366" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5368" pos:column="9">ULONG</name></type> ( <name pos:line="5368" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5368" pos:column="35">*</type:modifier><name pos:line="5368" pos:column="36">AddRef</name> )<parameter_list pos:line="5368" pos:column="44">( 
            <param><decl><type><name pos:line="5369" pos:column="13">IVxTextDocumentFileActionEventArgs</name> <type:modifier pos:line="5369" pos:column="48">*</type:modifier></type> <name pos:line="5369" pos:column="50">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5371" pos:column="9">ULONG</name></type> ( <name pos:line="5371" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5371" pos:column="35">*</type:modifier><name pos:line="5371" pos:column="36">Release</name> )<parameter_list pos:line="5371" pos:column="45">( 
            <param><decl><type><name pos:line="5372" pos:column="13">IVxTextDocumentFileActionEventArgs</name> <type:modifier pos:line="5372" pos:column="48">*</type:modifier></type> <name pos:line="5372" pos:column="50">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5374" pos:column="9">HRESULT</name></type> ( <name pos:line="5374" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5374" pos:column="37">*</type:modifier><name pos:line="5374" pos:column="38">GetFilePath</name> )<parameter_list pos:line="5374" pos:column="51">( 
            <param><decl><type><name pos:line="5375" pos:column="13">IVxTextDocumentFileActionEventArgs</name> <type:modifier pos:line="5375" pos:column="48">*</type:modifier></type> <name pos:line="5375" pos:column="50">This</name></decl></param>,
            <comment type="block" pos:line="5376" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5376" pos:column="33">BSTR</name> <type:modifier pos:line="5376" pos:column="38">*</type:modifier></type><name pos:line="5376" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5378" pos:column="9">HRESULT</name></type> ( <name pos:line="5378" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5378" pos:column="37">*</type:modifier><name pos:line="5378" pos:column="38">GetFileActionType</name> )<parameter_list pos:line="5378" pos:column="57">( 
            <param><decl><type><name pos:line="5379" pos:column="13">IVxTextDocumentFileActionEventArgs</name> <type:modifier pos:line="5379" pos:column="48">*</type:modifier></type> <name pos:line="5379" pos:column="50">This</name></decl></param>,
            <comment type="block" pos:line="5380" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5380" pos:column="33">VxFileActionTypes</name> <type:modifier pos:line="5380" pos:column="51">*</type:modifier></type><name pos:line="5380" pos:column="52">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5382" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5383" pos:column="7">IVxTextDocumentFileActionEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5385" pos:column="5">interface</name></type> <name pos:line="5385" pos:column="15">IVxTextDocumentFileActionEventArgs</name>
    <argument_list pos:line="5386" pos:column="5">{
        <argument><expr><name pos:line="5387" pos:column="9">CONST_VTBL</name> struct <name pos:line="5387" pos:column="27">IVxTextDocumentFileActionEventArgsVtbl</name> <op:operator pos:line="5387" pos:column="66">*</op:operator><name pos:line="5387" pos:column="67">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5392" pos:column="1">#<cpp:directive pos:line="5392" pos:column="2">ifdef</cpp:directive> <name pos:line="5392" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5395" pos:column="1">#<cpp:directive pos:line="5395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5395" pos:column="9">IVxTextDocumentFileActionEventArgs_QueryInterface</name><parameter_list pos:line="5395" pos:column="58">(<param><type><name pos:line="5395" pos:column="59">This</name></type></param>,<param><type><name pos:line="5395" pos:column="64">riid</name></type></param>,<param><type><name pos:line="5395" pos:column="69">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5396" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5398" pos:column="1">#<cpp:directive pos:line="5398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5398" pos:column="9">IVxTextDocumentFileActionEventArgs_AddRef</name><parameter_list pos:line="5398" pos:column="50">(<param><type><name pos:line="5398" pos:column="51">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5399" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5401" pos:column="1">#<cpp:directive pos:line="5401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5401" pos:column="9">IVxTextDocumentFileActionEventArgs_Release</name><parameter_list pos:line="5401" pos:column="51">(<param><type><name pos:line="5401" pos:column="52">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5402" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5405" pos:column="1">#<cpp:directive pos:line="5405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5405" pos:column="9">IVxTextDocumentFileActionEventArgs_GetFilePath</name><parameter_list pos:line="5405" pos:column="55">(<param><type><name pos:line="5405" pos:column="56">This</name></type></param>,<param><type><name pos:line="5405" pos:column="61">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5406" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFilePath(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5408" pos:column="1">#<cpp:directive pos:line="5408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5408" pos:column="9">IVxTextDocumentFileActionEventArgs_GetFileActionType</name><parameter_list pos:line="5408" pos:column="61">(<param><type><name pos:line="5408" pos:column="62">This</name></type></param>,<param><type><name pos:line="5408" pos:column="67">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5409" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileActionType(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5411" pos:column="1">#<cpp:directive pos:line="5411" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5411" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5414" pos:column="1">#<cpp:directive pos:line="5414" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5414" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5419" pos:column="1">#<cpp:directive pos:line="5419" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5419" pos:column="9">/* __IVxTextDocumentFileActionEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5422" pos:column="1">#<cpp:directive pos:line="5422" pos:column="2">ifndef</cpp:directive> <name pos:line="5422" pos:column="9">__IVxTextSnapshotChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5423" pos:column="1">#<cpp:directive pos:line="5423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5423" pos:column="9">__IVxTextSnapshotChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5425" pos:column="1">/* interface IVxTextSnapshotChangedEventArgs */</comment>
<comment type="block" pos:line="5426" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5429" pos:column="1">EXTERN_C</name> <specifier pos:line="5429" pos:column="10">const</specifier> <name pos:line="5429" pos:column="16">IID</name></type> <name pos:line="5429" pos:column="20">IID_IVxTextSnapshotChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="5431" pos:column="1">#<cpp:directive pos:line="5431" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5431" pos:column="5">defined</name><argument_list pos:line="5431" pos:column="12">(<argument><expr><name pos:line="5431" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5431" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5431" pos:column="29">!</op:operator><call><name pos:line="5431" pos:column="30">defined</name><argument_list pos:line="5431" pos:column="37">(<argument><expr><name pos:line="5431" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5433" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5433" pos:column="19">(<argument pos:line="5433" pos:column="20">"ab1c7415-f8da-41f3-8262-221a2cf59cc4"</argument>)</argument_list></macro>
    <label><name pos:line="5434" pos:column="5">IVxTextSnapshotChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="5434" pos:column="39">public <name pos:line="5434" pos:column="46">IUnknown</name>
    <block pos:line="5435" pos:column="5">{
    <expr pos:line="5436" pos:column="5">public<op:operator pos:line="5436" pos:column="11">:</op:operator>
        virtual <name pos:line="5437" pos:column="17">HRESULT</name> <name pos:line="5437" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5437" pos:column="43">GetBefore</name><argument_list pos:line="5437" pos:column="52">( 
            <comment type="block" pos:line="5438" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5438" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="5438" pos:column="49">*</op:operator><op:operator pos:line="5438" pos:column="50">*</op:operator><name pos:line="5438" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5438" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5438" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="5440" pos:column="9">virtual <name pos:line="5440" pos:column="17">HRESULT</name> <name pos:line="5440" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5440" pos:column="43">GetAfter</name><argument_list pos:line="5440" pos:column="51">( 
            <comment type="block" pos:line="5441" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5441" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="5441" pos:column="49">*</op:operator><op:operator pos:line="5441" pos:column="50">*</op:operator><name pos:line="5441" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5441" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5441" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="5443" pos:column="9">virtual <name pos:line="5443" pos:column="17">HRESULT</name> <name pos:line="5443" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5443" pos:column="43">GetBeforeVersion</name><argument_list pos:line="5443" pos:column="59">( 
            <comment type="block" pos:line="5444" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5444" pos:column="33">IVxTextVersion</name> <op:operator pos:line="5444" pos:column="48">*</op:operator><op:operator pos:line="5444" pos:column="49">*</op:operator><name pos:line="5444" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5444" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="5444" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="5446" pos:column="9">virtual <name pos:line="5446" pos:column="17">HRESULT</name> <name pos:line="5446" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5446" pos:column="43">GetAfterVersion</name><argument_list pos:line="5446" pos:column="58">( 
            <comment type="block" pos:line="5447" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5447" pos:column="33">IVxTextVersion</name> <op:operator pos:line="5447" pos:column="48">*</op:operator><op:operator pos:line="5447" pos:column="49">*</op:operator><name pos:line="5447" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5447" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="5447" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="5449" pos:column="9">virtual <name pos:line="5449" pos:column="17">HRESULT</name> <name pos:line="5449" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5449" pos:column="43">GetEditTag</name><argument_list pos:line="5449" pos:column="53">( 
            <comment type="block" pos:line="5450" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5450" pos:column="33">IUnknown</name> <op:operator pos:line="5450" pos:column="42">*</op:operator><op:operator pos:line="5450" pos:column="43">*</op:operator><name pos:line="5450" pos:column="44">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5450" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5450" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5454" pos:column="1">#<cpp:directive pos:line="5454" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5454" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5456" pos:column="5">typedef <type><struct pos:line="5456" pos:column="13">struct <name pos:line="5456" pos:column="20">IVxTextSnapshotChangedEventArgsVtbl</name>
    <block pos:line="5457" pos:column="5">{<public type="default" pos:line="5457" pos:column="6">
        <function_decl><type><name pos:line="5458" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5460" pos:column="9">HRESULT</name></type> ( <name pos:line="5460" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5460" pos:column="37">*</type:modifier><name pos:line="5460" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5460" pos:column="54">( 
            <param><decl><type><name pos:line="5461" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5461" pos:column="45">*</type:modifier></type> <name pos:line="5461" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="5462" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5462" pos:column="24">REFIID</name></type> <name pos:line="5462" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5463" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5464" pos:column="13">__RPC__deref_out</name>  <name pos:line="5464" pos:column="31">void</name> <type:modifier pos:line="5464" pos:column="36">*</type:modifier><type:modifier pos:line="5464" pos:column="37">*</type:modifier></type><name pos:line="5464" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5466" pos:column="9">ULONG</name></type> ( <name pos:line="5466" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5466" pos:column="35">*</type:modifier><name pos:line="5466" pos:column="36">AddRef</name> )<parameter_list pos:line="5466" pos:column="44">( 
            <param><decl><type><name pos:line="5467" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5467" pos:column="45">*</type:modifier></type> <name pos:line="5467" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5469" pos:column="9">ULONG</name></type> ( <name pos:line="5469" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5469" pos:column="35">*</type:modifier><name pos:line="5469" pos:column="36">Release</name> )<parameter_list pos:line="5469" pos:column="45">( 
            <param><decl><type><name pos:line="5470" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5470" pos:column="45">*</type:modifier></type> <name pos:line="5470" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5472" pos:column="9">HRESULT</name></type> ( <name pos:line="5472" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5472" pos:column="37">*</type:modifier><name pos:line="5472" pos:column="38">GetBefore</name> )<parameter_list pos:line="5472" pos:column="49">( 
            <param><decl><type><name pos:line="5473" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5473" pos:column="45">*</type:modifier></type> <name pos:line="5473" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="5474" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5474" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="5474" pos:column="49">*</type:modifier><type:modifier pos:line="5474" pos:column="50">*</type:modifier></type><name pos:line="5474" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5476" pos:column="9">HRESULT</name></type> ( <name pos:line="5476" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5476" pos:column="37">*</type:modifier><name pos:line="5476" pos:column="38">GetAfter</name> )<parameter_list pos:line="5476" pos:column="48">( 
            <param><decl><type><name pos:line="5477" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5477" pos:column="45">*</type:modifier></type> <name pos:line="5477" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="5478" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5478" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="5478" pos:column="49">*</type:modifier><type:modifier pos:line="5478" pos:column="50">*</type:modifier></type><name pos:line="5478" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5480" pos:column="9">HRESULT</name></type> ( <name pos:line="5480" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5480" pos:column="37">*</type:modifier><name pos:line="5480" pos:column="38">GetBeforeVersion</name> )<parameter_list pos:line="5480" pos:column="56">( 
            <param><decl><type><name pos:line="5481" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5481" pos:column="45">*</type:modifier></type> <name pos:line="5481" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="5482" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5482" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="5482" pos:column="48">*</type:modifier><type:modifier pos:line="5482" pos:column="49">*</type:modifier></type><name pos:line="5482" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5484" pos:column="9">HRESULT</name></type> ( <name pos:line="5484" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5484" pos:column="37">*</type:modifier><name pos:line="5484" pos:column="38">GetAfterVersion</name> )<parameter_list pos:line="5484" pos:column="55">( 
            <param><decl><type><name pos:line="5485" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5485" pos:column="45">*</type:modifier></type> <name pos:line="5485" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="5486" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5486" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="5486" pos:column="48">*</type:modifier><type:modifier pos:line="5486" pos:column="49">*</type:modifier></type><name pos:line="5486" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5488" pos:column="9">HRESULT</name></type> ( <name pos:line="5488" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5488" pos:column="37">*</type:modifier><name pos:line="5488" pos:column="38">GetEditTag</name> )<parameter_list pos:line="5488" pos:column="50">( 
            <param><decl><type><name pos:line="5489" pos:column="13">IVxTextSnapshotChangedEventArgs</name> <type:modifier pos:line="5489" pos:column="45">*</type:modifier></type> <name pos:line="5489" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="5490" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5490" pos:column="33">IUnknown</name> <type:modifier pos:line="5490" pos:column="42">*</type:modifier><type:modifier pos:line="5490" pos:column="43">*</type:modifier></type><name pos:line="5490" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5492" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5493" pos:column="7">IVxTextSnapshotChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5495" pos:column="5">interface</name></type> <name pos:line="5495" pos:column="15">IVxTextSnapshotChangedEventArgs</name>
    <argument_list pos:line="5496" pos:column="5">{
        <argument><expr><name pos:line="5497" pos:column="9">CONST_VTBL</name> struct <name pos:line="5497" pos:column="27">IVxTextSnapshotChangedEventArgsVtbl</name> <op:operator pos:line="5497" pos:column="63">*</op:operator><name pos:line="5497" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5502" pos:column="1">#<cpp:directive pos:line="5502" pos:column="2">ifdef</cpp:directive> <name pos:line="5502" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5505" pos:column="1">#<cpp:directive pos:line="5505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5505" pos:column="9">IVxTextSnapshotChangedEventArgs_QueryInterface</name><parameter_list pos:line="5505" pos:column="55">(<param><type><name pos:line="5505" pos:column="56">This</name></type></param>,<param><type><name pos:line="5505" pos:column="61">riid</name></type></param>,<param><type><name pos:line="5505" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5506" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5508" pos:column="1">#<cpp:directive pos:line="5508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5508" pos:column="9">IVxTextSnapshotChangedEventArgs_AddRef</name><parameter_list pos:line="5508" pos:column="47">(<param><type><name pos:line="5508" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5509" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5511" pos:column="1">#<cpp:directive pos:line="5511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5511" pos:column="9">IVxTextSnapshotChangedEventArgs_Release</name><parameter_list pos:line="5511" pos:column="48">(<param><type><name pos:line="5511" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5512" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5515" pos:column="1">#<cpp:directive pos:line="5515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5515" pos:column="9">IVxTextSnapshotChangedEventArgs_GetBefore</name><parameter_list pos:line="5515" pos:column="50">(<param><type><name pos:line="5515" pos:column="51">This</name></type></param>,<param><type><name pos:line="5515" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5516" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5518" pos:column="1">#<cpp:directive pos:line="5518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5518" pos:column="9">IVxTextSnapshotChangedEventArgs_GetAfter</name><parameter_list pos:line="5518" pos:column="49">(<param><type><name pos:line="5518" pos:column="50">This</name></type></param>,<param><type><name pos:line="5518" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5519" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5521" pos:column="1">#<cpp:directive pos:line="5521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5521" pos:column="9">IVxTextSnapshotChangedEventArgs_GetBeforeVersion</name><parameter_list pos:line="5521" pos:column="57">(<param><type><name pos:line="5521" pos:column="58">This</name></type></param>,<param><type><name pos:line="5521" pos:column="63">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5522" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5524" pos:column="1">#<cpp:directive pos:line="5524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5524" pos:column="9">IVxTextSnapshotChangedEventArgs_GetAfterVersion</name><parameter_list pos:line="5524" pos:column="56">(<param><type><name pos:line="5524" pos:column="57">This</name></type></param>,<param><type><name pos:line="5524" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5525" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5527" pos:column="1">#<cpp:directive pos:line="5527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5527" pos:column="9">IVxTextSnapshotChangedEventArgs_GetEditTag</name><parameter_list pos:line="5527" pos:column="51">(<param><type><name pos:line="5527" pos:column="52">This</name></type></param>,<param><type><name pos:line="5527" pos:column="57">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5528" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditTag(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5530" pos:column="1">#<cpp:directive pos:line="5530" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5530" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5533" pos:column="1">#<cpp:directive pos:line="5533" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5533" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5538" pos:column="1">#<cpp:directive pos:line="5538" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5538" pos:column="9">/* __IVxTextSnapshotChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5541" pos:column="1">#<cpp:directive pos:line="5541" pos:column="2">ifndef</cpp:directive> <name pos:line="5541" pos:column="9">__IVxContentTypeChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5542" pos:column="1">#<cpp:directive pos:line="5542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5542" pos:column="9">__IVxContentTypeChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5544" pos:column="1">/* interface IVxContentTypeChangedEventArgs */</comment>
<comment type="block" pos:line="5545" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5548" pos:column="1">EXTERN_C</name> <specifier pos:line="5548" pos:column="10">const</specifier> <name pos:line="5548" pos:column="16">IID</name></type> <name pos:line="5548" pos:column="20">IID_IVxContentTypeChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="5550" pos:column="1">#<cpp:directive pos:line="5550" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5550" pos:column="5">defined</name><argument_list pos:line="5550" pos:column="12">(<argument><expr><name pos:line="5550" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5550" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5550" pos:column="29">!</op:operator><call><name pos:line="5550" pos:column="30">defined</name><argument_list pos:line="5550" pos:column="37">(<argument><expr><name pos:line="5550" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5552" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5552" pos:column="19">(<argument pos:line="5552" pos:column="20">"e9ed1827-223d-4cf1-aa25-09c3a0ff6f67"</argument>)</argument_list></macro>
    <label><name pos:line="5553" pos:column="5">IVxContentTypeChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="5553" pos:column="38">public <name pos:line="5553" pos:column="45">IVxTextSnapshotChangedEventArgs</name>
    <block pos:line="5554" pos:column="5">{
    <expr pos:line="5555" pos:column="5">public<op:operator pos:line="5555" pos:column="11">:</op:operator>
        virtual <name pos:line="5556" pos:column="17">HRESULT</name> <name pos:line="5556" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5556" pos:column="43">GetBeforeContentType</name><argument_list pos:line="5556" pos:column="63">( 
            <comment type="block" pos:line="5557" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5557" pos:column="33">IVxContentType</name> <op:operator pos:line="5557" pos:column="48">*</op:operator><op:operator pos:line="5557" pos:column="49">*</op:operator><name pos:line="5557" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5557" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="5557" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="5559" pos:column="9">virtual <name pos:line="5559" pos:column="17">HRESULT</name> <name pos:line="5559" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5559" pos:column="43">GetAfterContentType</name><argument_list pos:line="5559" pos:column="62">( 
            <comment type="block" pos:line="5560" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5560" pos:column="33">IVxContentType</name> <op:operator pos:line="5560" pos:column="48">*</op:operator><op:operator pos:line="5560" pos:column="49">*</op:operator><name pos:line="5560" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5560" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="5560" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5564" pos:column="1">#<cpp:directive pos:line="5564" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5564" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5566" pos:column="5">typedef <type><struct pos:line="5566" pos:column="13">struct <name pos:line="5566" pos:column="20">IVxContentTypeChangedEventArgsVtbl</name>
    <block pos:line="5567" pos:column="5">{<public type="default" pos:line="5567" pos:column="6">
        <function_decl><type><name pos:line="5568" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5570" pos:column="9">HRESULT</name></type> ( <name pos:line="5570" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5570" pos:column="37">*</type:modifier><name pos:line="5570" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5570" pos:column="54">( 
            <param><decl><type><name pos:line="5571" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5571" pos:column="44">*</type:modifier></type> <name pos:line="5571" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5572" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5572" pos:column="24">REFIID</name></type> <name pos:line="5572" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5573" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5574" pos:column="13">__RPC__deref_out</name>  <name pos:line="5574" pos:column="31">void</name> <type:modifier pos:line="5574" pos:column="36">*</type:modifier><type:modifier pos:line="5574" pos:column="37">*</type:modifier></type><name pos:line="5574" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5576" pos:column="9">ULONG</name></type> ( <name pos:line="5576" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5576" pos:column="35">*</type:modifier><name pos:line="5576" pos:column="36">AddRef</name> )<parameter_list pos:line="5576" pos:column="44">( 
            <param><decl><type><name pos:line="5577" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5577" pos:column="44">*</type:modifier></type> <name pos:line="5577" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5579" pos:column="9">ULONG</name></type> ( <name pos:line="5579" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5579" pos:column="35">*</type:modifier><name pos:line="5579" pos:column="36">Release</name> )<parameter_list pos:line="5579" pos:column="45">( 
            <param><decl><type><name pos:line="5580" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5580" pos:column="44">*</type:modifier></type> <name pos:line="5580" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5582" pos:column="9">HRESULT</name></type> ( <name pos:line="5582" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5582" pos:column="37">*</type:modifier><name pos:line="5582" pos:column="38">GetBefore</name> )<parameter_list pos:line="5582" pos:column="49">( 
            <param><decl><type><name pos:line="5583" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5583" pos:column="44">*</type:modifier></type> <name pos:line="5583" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5584" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5584" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="5584" pos:column="49">*</type:modifier><type:modifier pos:line="5584" pos:column="50">*</type:modifier></type><name pos:line="5584" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5586" pos:column="9">HRESULT</name></type> ( <name pos:line="5586" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5586" pos:column="37">*</type:modifier><name pos:line="5586" pos:column="38">GetAfter</name> )<parameter_list pos:line="5586" pos:column="48">( 
            <param><decl><type><name pos:line="5587" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5587" pos:column="44">*</type:modifier></type> <name pos:line="5587" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5588" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5588" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="5588" pos:column="49">*</type:modifier><type:modifier pos:line="5588" pos:column="50">*</type:modifier></type><name pos:line="5588" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5590" pos:column="9">HRESULT</name></type> ( <name pos:line="5590" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5590" pos:column="37">*</type:modifier><name pos:line="5590" pos:column="38">GetBeforeVersion</name> )<parameter_list pos:line="5590" pos:column="56">( 
            <param><decl><type><name pos:line="5591" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5591" pos:column="44">*</type:modifier></type> <name pos:line="5591" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5592" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5592" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="5592" pos:column="48">*</type:modifier><type:modifier pos:line="5592" pos:column="49">*</type:modifier></type><name pos:line="5592" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5594" pos:column="9">HRESULT</name></type> ( <name pos:line="5594" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5594" pos:column="37">*</type:modifier><name pos:line="5594" pos:column="38">GetAfterVersion</name> )<parameter_list pos:line="5594" pos:column="55">( 
            <param><decl><type><name pos:line="5595" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5595" pos:column="44">*</type:modifier></type> <name pos:line="5595" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5596" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5596" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="5596" pos:column="48">*</type:modifier><type:modifier pos:line="5596" pos:column="49">*</type:modifier></type><name pos:line="5596" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5598" pos:column="9">HRESULT</name></type> ( <name pos:line="5598" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5598" pos:column="37">*</type:modifier><name pos:line="5598" pos:column="38">GetEditTag</name> )<parameter_list pos:line="5598" pos:column="50">( 
            <param><decl><type><name pos:line="5599" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5599" pos:column="44">*</type:modifier></type> <name pos:line="5599" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5600" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5600" pos:column="33">IUnknown</name> <type:modifier pos:line="5600" pos:column="42">*</type:modifier><type:modifier pos:line="5600" pos:column="43">*</type:modifier></type><name pos:line="5600" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5602" pos:column="9">HRESULT</name></type> ( <name pos:line="5602" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5602" pos:column="37">*</type:modifier><name pos:line="5602" pos:column="38">GetBeforeContentType</name> )<parameter_list pos:line="5602" pos:column="60">( 
            <param><decl><type><name pos:line="5603" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5603" pos:column="44">*</type:modifier></type> <name pos:line="5603" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5604" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5604" pos:column="33">IVxContentType</name> <type:modifier pos:line="5604" pos:column="48">*</type:modifier><type:modifier pos:line="5604" pos:column="49">*</type:modifier></type><name pos:line="5604" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5606" pos:column="9">HRESULT</name></type> ( <name pos:line="5606" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5606" pos:column="37">*</type:modifier><name pos:line="5606" pos:column="38">GetAfterContentType</name> )<parameter_list pos:line="5606" pos:column="59">( 
            <param><decl><type><name pos:line="5607" pos:column="13">IVxContentTypeChangedEventArgs</name> <type:modifier pos:line="5607" pos:column="44">*</type:modifier></type> <name pos:line="5607" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="5608" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5608" pos:column="33">IVxContentType</name> <type:modifier pos:line="5608" pos:column="48">*</type:modifier><type:modifier pos:line="5608" pos:column="49">*</type:modifier></type><name pos:line="5608" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5610" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5611" pos:column="7">IVxContentTypeChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5613" pos:column="5">interface</name></type> <name pos:line="5613" pos:column="15">IVxContentTypeChangedEventArgs</name>
    <argument_list pos:line="5614" pos:column="5">{
        <argument><expr><name pos:line="5615" pos:column="9">CONST_VTBL</name> struct <name pos:line="5615" pos:column="27">IVxContentTypeChangedEventArgsVtbl</name> <op:operator pos:line="5615" pos:column="62">*</op:operator><name pos:line="5615" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5620" pos:column="1">#<cpp:directive pos:line="5620" pos:column="2">ifdef</cpp:directive> <name pos:line="5620" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5623" pos:column="1">#<cpp:directive pos:line="5623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5623" pos:column="9">IVxContentTypeChangedEventArgs_QueryInterface</name><parameter_list pos:line="5623" pos:column="54">(<param><type><name pos:line="5623" pos:column="55">This</name></type></param>,<param><type><name pos:line="5623" pos:column="60">riid</name></type></param>,<param><type><name pos:line="5623" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5624" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5626" pos:column="1">#<cpp:directive pos:line="5626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5626" pos:column="9">IVxContentTypeChangedEventArgs_AddRef</name><parameter_list pos:line="5626" pos:column="46">(<param><type><name pos:line="5626" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5627" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5629" pos:column="1">#<cpp:directive pos:line="5629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5629" pos:column="9">IVxContentTypeChangedEventArgs_Release</name><parameter_list pos:line="5629" pos:column="47">(<param><type><name pos:line="5629" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5630" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5633" pos:column="1">#<cpp:directive pos:line="5633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5633" pos:column="9">IVxContentTypeChangedEventArgs_GetBefore</name><parameter_list pos:line="5633" pos:column="49">(<param><type><name pos:line="5633" pos:column="50">This</name></type></param>,<param><type><name pos:line="5633" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5634" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5636" pos:column="1">#<cpp:directive pos:line="5636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5636" pos:column="9">IVxContentTypeChangedEventArgs_GetAfter</name><parameter_list pos:line="5636" pos:column="48">(<param><type><name pos:line="5636" pos:column="49">This</name></type></param>,<param><type><name pos:line="5636" pos:column="54">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5637" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5639" pos:column="1">#<cpp:directive pos:line="5639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5639" pos:column="9">IVxContentTypeChangedEventArgs_GetBeforeVersion</name><parameter_list pos:line="5639" pos:column="56">(<param><type><name pos:line="5639" pos:column="57">This</name></type></param>,<param><type><name pos:line="5639" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5640" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5642" pos:column="1">#<cpp:directive pos:line="5642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5642" pos:column="9">IVxContentTypeChangedEventArgs_GetAfterVersion</name><parameter_list pos:line="5642" pos:column="55">(<param><type><name pos:line="5642" pos:column="56">This</name></type></param>,<param><type><name pos:line="5642" pos:column="61">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5643" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5645" pos:column="1">#<cpp:directive pos:line="5645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5645" pos:column="9">IVxContentTypeChangedEventArgs_GetEditTag</name><parameter_list pos:line="5645" pos:column="50">(<param><type><name pos:line="5645" pos:column="51">This</name></type></param>,<param><type><name pos:line="5645" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5646" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditTag(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="5649" pos:column="1">#<cpp:directive pos:line="5649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5649" pos:column="9">IVxContentTypeChangedEventArgs_GetBeforeContentType</name><parameter_list pos:line="5649" pos:column="60">(<param><type><name pos:line="5649" pos:column="61">This</name></type></param>,<param><type><name pos:line="5649" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5650" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5652" pos:column="1">#<cpp:directive pos:line="5652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5652" pos:column="9">IVxContentTypeChangedEventArgs_GetAfterContentType</name><parameter_list pos:line="5652" pos:column="59">(<param><type><name pos:line="5652" pos:column="60">This</name></type></param>,<param><type><name pos:line="5652" pos:column="65">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5653" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5655" pos:column="1">#<cpp:directive pos:line="5655" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5655" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5658" pos:column="1">#<cpp:directive pos:line="5658" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5658" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5663" pos:column="1">#<cpp:directive pos:line="5663" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5663" pos:column="9">/* __IVxContentTypeChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5666" pos:column="1">#<cpp:directive pos:line="5666" pos:column="2">ifndef</cpp:directive> <name pos:line="5666" pos:column="9">__IVxMappingPoint_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5667" pos:column="1">#<cpp:directive pos:line="5667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5667" pos:column="9">__IVxMappingPoint_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5669" pos:column="1">/* interface IVxMappingPoint */</comment>
<comment type="block" pos:line="5670" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5673" pos:column="1">EXTERN_C</name> <specifier pos:line="5673" pos:column="10">const</specifier> <name pos:line="5673" pos:column="16">IID</name></type> <name pos:line="5673" pos:column="20">IID_IVxMappingPoint</name></decl>;</decl_stmt>

<cpp:if pos:line="5675" pos:column="1">#<cpp:directive pos:line="5675" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5675" pos:column="5">defined</name><argument_list pos:line="5675" pos:column="12">(<argument><expr><name pos:line="5675" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5675" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5675" pos:column="29">!</op:operator><call><name pos:line="5675" pos:column="30">defined</name><argument_list pos:line="5675" pos:column="37">(<argument><expr><name pos:line="5675" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5677" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5677" pos:column="19">(<argument pos:line="5677" pos:column="20">"446d7a04-48a5-4721-91a7-bf28c6653192"</argument>)</argument_list></macro>
    <label><name pos:line="5678" pos:column="5">IVxMappingPoint</name> :</label> <expr_stmt><expr pos:line="5678" pos:column="23">public <name pos:line="5678" pos:column="30">IUnknown</name>
    <block pos:line="5679" pos:column="5">{
    <expr pos:line="5680" pos:column="5">public<op:operator pos:line="5680" pos:column="11">:</op:operator>
        virtual <name pos:line="5681" pos:column="17">HRESULT</name> <name pos:line="5681" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5681" pos:column="43">GetPoint</name><argument_list pos:line="5681" pos:column="51">( 
            <comment type="block" pos:line="5682" pos:column="13">/* [in] */</comment> <argument pos:line="5682" pos:column="24">IVxTextBuffer *pTargetBuffer</argument>,
            <comment type="block" pos:line="5683" pos:column="13">/* [in] */</comment> <argument pos:line="5683" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="5684" pos:column="13">/* [out] */</comment> <argument pos:line="5684" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="5685" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5685" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="5685" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="5685" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="5687" pos:column="9">virtual <name pos:line="5687" pos:column="17">HRESULT</name> <name pos:line="5687" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5687" pos:column="43">GetPoint_2</name><argument_list pos:line="5687" pos:column="53">( 
            <comment type="block" pos:line="5688" pos:column="13">/* [in] */</comment> <argument pos:line="5688" pos:column="24">IVxTextSnapshot *pTargetSnapshot</argument>,
            <comment type="block" pos:line="5689" pos:column="13">/* [in] */</comment> <argument pos:line="5689" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="5690" pos:column="13">/* [out] */</comment> <argument pos:line="5690" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="5691" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5691" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="5691" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="5691" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="5693" pos:column="9">virtual <name pos:line="5693" pos:column="17">HRESULT</name> <name pos:line="5693" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5693" pos:column="43">GetAnchorBuffer</name><argument_list pos:line="5693" pos:column="58">( 
            <comment type="block" pos:line="5694" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5694" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="5694" pos:column="47">*</op:operator><op:operator pos:line="5694" pos:column="48">*</op:operator><name pos:line="5694" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5694" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="5694" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="5696" pos:column="9">virtual <name pos:line="5696" pos:column="17">HRESULT</name> <name pos:line="5696" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5696" pos:column="43">GetBufferGraph</name><argument_list pos:line="5696" pos:column="57">( 
            <comment type="block" pos:line="5697" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5697" pos:column="33">IVxBufferGraph</name> <op:operator pos:line="5697" pos:column="48">*</op:operator><op:operator pos:line="5697" pos:column="49">*</op:operator><name pos:line="5697" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5697" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="5697" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5701" pos:column="1">#<cpp:directive pos:line="5701" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5701" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5703" pos:column="5">typedef <type><struct pos:line="5703" pos:column="13">struct <name pos:line="5703" pos:column="20">IVxMappingPointVtbl</name>
    <block pos:line="5704" pos:column="5">{<public type="default" pos:line="5704" pos:column="6">
        <function_decl><type><name pos:line="5705" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5707" pos:column="9">HRESULT</name></type> ( <name pos:line="5707" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5707" pos:column="37">*</type:modifier><name pos:line="5707" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5707" pos:column="54">( 
            <param><decl><type><name pos:line="5708" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5708" pos:column="29">*</type:modifier></type> <name pos:line="5708" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5709" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5709" pos:column="24">REFIID</name></type> <name pos:line="5709" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5710" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5711" pos:column="13">__RPC__deref_out</name>  <name pos:line="5711" pos:column="31">void</name> <type:modifier pos:line="5711" pos:column="36">*</type:modifier><type:modifier pos:line="5711" pos:column="37">*</type:modifier></type><name pos:line="5711" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5713" pos:column="9">ULONG</name></type> ( <name pos:line="5713" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5713" pos:column="35">*</type:modifier><name pos:line="5713" pos:column="36">AddRef</name> )<parameter_list pos:line="5713" pos:column="44">( 
            <param><decl><type><name pos:line="5714" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5714" pos:column="29">*</type:modifier></type> <name pos:line="5714" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5716" pos:column="9">ULONG</name></type> ( <name pos:line="5716" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5716" pos:column="35">*</type:modifier><name pos:line="5716" pos:column="36">Release</name> )<parameter_list pos:line="5716" pos:column="45">( 
            <param><decl><type><name pos:line="5717" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5717" pos:column="29">*</type:modifier></type> <name pos:line="5717" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5719" pos:column="9">HRESULT</name></type> ( <name pos:line="5719" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5719" pos:column="37">*</type:modifier><name pos:line="5719" pos:column="38">GetPoint</name> )<parameter_list pos:line="5719" pos:column="48">( 
            <param><decl><type><name pos:line="5720" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5720" pos:column="29">*</type:modifier></type> <name pos:line="5720" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5721" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="5721" pos:column="38">*</type:modifier></type><name pos:line="5721" pos:column="39">pTargetBuffer</name></decl></param>,
            <comment type="block" pos:line="5722" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5722" pos:column="24">VxPositionAffinity</name></type> <name pos:line="5722" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="5723" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5723" pos:column="25">BOOL</name> <type:modifier pos:line="5723" pos:column="30">*</type:modifier></type><name pos:line="5723" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="5724" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5724" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="5724" pos:column="49">*</type:modifier></type><name pos:line="5724" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5726" pos:column="9">HRESULT</name></type> ( <name pos:line="5726" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5726" pos:column="37">*</type:modifier><name pos:line="5726" pos:column="38">GetPoint_2</name> )<parameter_list pos:line="5726" pos:column="50">( 
            <param><decl><type><name pos:line="5727" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5727" pos:column="29">*</type:modifier></type> <name pos:line="5727" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5728" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5728" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="5728" pos:column="40">*</type:modifier></type><name pos:line="5728" pos:column="41">pTargetSnapshot</name></decl></param>,
            <comment type="block" pos:line="5729" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5729" pos:column="24">VxPositionAffinity</name></type> <name pos:line="5729" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="5730" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5730" pos:column="25">BOOL</name> <type:modifier pos:line="5730" pos:column="30">*</type:modifier></type><name pos:line="5730" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="5731" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5731" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="5731" pos:column="49">*</type:modifier></type><name pos:line="5731" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5733" pos:column="9">HRESULT</name></type> ( <name pos:line="5733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5733" pos:column="37">*</type:modifier><name pos:line="5733" pos:column="38">GetAnchorBuffer</name> )<parameter_list pos:line="5733" pos:column="55">( 
            <param><decl><type><name pos:line="5734" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5734" pos:column="29">*</type:modifier></type> <name pos:line="5734" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5735" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5735" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="5735" pos:column="47">*</type:modifier><type:modifier pos:line="5735" pos:column="48">*</type:modifier></type><name pos:line="5735" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5737" pos:column="9">HRESULT</name></type> ( <name pos:line="5737" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5737" pos:column="37">*</type:modifier><name pos:line="5737" pos:column="38">GetBufferGraph</name> )<parameter_list pos:line="5737" pos:column="54">( 
            <param><decl><type><name pos:line="5738" pos:column="13">IVxMappingPoint</name> <type:modifier pos:line="5738" pos:column="29">*</type:modifier></type> <name pos:line="5738" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="5739" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5739" pos:column="33">IVxBufferGraph</name> <type:modifier pos:line="5739" pos:column="48">*</type:modifier><type:modifier pos:line="5739" pos:column="49">*</type:modifier></type><name pos:line="5739" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5741" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5742" pos:column="7">IVxMappingPointVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5744" pos:column="5">interface</name></type> <name pos:line="5744" pos:column="15">IVxMappingPoint</name>
    <argument_list pos:line="5745" pos:column="5">{
        <argument><expr><name pos:line="5746" pos:column="9">CONST_VTBL</name> struct <name pos:line="5746" pos:column="27">IVxMappingPointVtbl</name> <op:operator pos:line="5746" pos:column="47">*</op:operator><name pos:line="5746" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5751" pos:column="1">#<cpp:directive pos:line="5751" pos:column="2">ifdef</cpp:directive> <name pos:line="5751" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5754" pos:column="1">#<cpp:directive pos:line="5754" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5754" pos:column="9">IVxMappingPoint_QueryInterface</name><parameter_list pos:line="5754" pos:column="39">(<param><type><name pos:line="5754" pos:column="40">This</name></type></param>,<param><type><name pos:line="5754" pos:column="45">riid</name></type></param>,<param><type><name pos:line="5754" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5755" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5757" pos:column="1">#<cpp:directive pos:line="5757" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5757" pos:column="9">IVxMappingPoint_AddRef</name><parameter_list pos:line="5757" pos:column="31">(<param><type><name pos:line="5757" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5758" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5760" pos:column="1">#<cpp:directive pos:line="5760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5760" pos:column="9">IVxMappingPoint_Release</name><parameter_list pos:line="5760" pos:column="32">(<param><type><name pos:line="5760" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5761" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5764" pos:column="1">#<cpp:directive pos:line="5764" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5764" pos:column="9">IVxMappingPoint_GetPoint</name><parameter_list pos:line="5764" pos:column="33">(<param><type><name pos:line="5764" pos:column="34">This</name></type></param>,<param><type><name pos:line="5764" pos:column="39">pTargetBuffer</name></type></param>,<param><type><name pos:line="5764" pos:column="53">affinity</name></type></param>,<param><type><name pos:line="5764" pos:column="62">pRetValHasValue</name></type></param>,<param><type><name pos:line="5764" pos:column="78">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5765" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPoint(This,pTargetBuffer,affinity,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5767" pos:column="1">#<cpp:directive pos:line="5767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5767" pos:column="9">IVxMappingPoint_GetPoint_2</name><parameter_list pos:line="5767" pos:column="35">(<param><type><name pos:line="5767" pos:column="36">This</name></type></param>,<param><type><name pos:line="5767" pos:column="41">pTargetSnapshot</name></type></param>,<param><type><name pos:line="5767" pos:column="57">affinity</name></type></param>,<param><type><name pos:line="5767" pos:column="66">pRetValHasValue</name></type></param>,<param><type><name pos:line="5767" pos:column="82">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5768" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPoint_2(This,pTargetSnapshot,affinity,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5770" pos:column="1">#<cpp:directive pos:line="5770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5770" pos:column="9">IVxMappingPoint_GetAnchorBuffer</name><parameter_list pos:line="5770" pos:column="40">(<param><type><name pos:line="5770" pos:column="41">This</name></type></param>,<param><type><name pos:line="5770" pos:column="46">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5771" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAnchorBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5773" pos:column="1">#<cpp:directive pos:line="5773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5773" pos:column="9">IVxMappingPoint_GetBufferGraph</name><parameter_list pos:line="5773" pos:column="39">(<param><type><name pos:line="5773" pos:column="40">This</name></type></param>,<param><type><name pos:line="5773" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5774" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBufferGraph(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5776" pos:column="1">#<cpp:directive pos:line="5776" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5776" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5779" pos:column="1">#<cpp:directive pos:line="5779" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5779" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5784" pos:column="1">#<cpp:directive pos:line="5784" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5784" pos:column="9">/* __IVxMappingPoint_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5787" pos:column="1">#<cpp:directive pos:line="5787" pos:column="2">ifndef</cpp:directive> <name pos:line="5787" pos:column="9">__IVxMappingSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5788" pos:column="1">#<cpp:directive pos:line="5788" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5788" pos:column="9">__IVxMappingSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5790" pos:column="1">/* interface IVxMappingSpan */</comment>
<comment type="block" pos:line="5791" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5794" pos:column="1">EXTERN_C</name> <specifier pos:line="5794" pos:column="10">const</specifier> <name pos:line="5794" pos:column="16">IID</name></type> <name pos:line="5794" pos:column="20">IID_IVxMappingSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="5796" pos:column="1">#<cpp:directive pos:line="5796" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5796" pos:column="5">defined</name><argument_list pos:line="5796" pos:column="12">(<argument><expr><name pos:line="5796" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5796" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5796" pos:column="29">!</op:operator><call><name pos:line="5796" pos:column="30">defined</name><argument_list pos:line="5796" pos:column="37">(<argument><expr><name pos:line="5796" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5798" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5798" pos:column="19">(<argument pos:line="5798" pos:column="20">"db0e4bfb-1747-494b-a4c6-1eb544fb9df7"</argument>)</argument_list></macro>
    <label><name pos:line="5799" pos:column="5">IVxMappingSpan</name> :</label> <expr_stmt><expr pos:line="5799" pos:column="22">public <name pos:line="5799" pos:column="29">IUnknown</name>
    <block pos:line="5800" pos:column="5">{
    <expr pos:line="5801" pos:column="5">public<op:operator pos:line="5801" pos:column="11">:</op:operator>
        virtual <name pos:line="5802" pos:column="17">HRESULT</name> <name pos:line="5802" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5802" pos:column="43">GetSpans</name><argument_list pos:line="5802" pos:column="51">( 
            <comment type="block" pos:line="5803" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5803" pos:column="24">IVxTextBuffer</name> <op:operator pos:line="5803" pos:column="38">*</op:operator><name pos:line="5803" pos:column="39">pTargetBuffer</name></expr></argument>,
            <comment type="block" pos:line="5804" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5804" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <op:operator pos:line="5804" pos:column="69">*</op:operator><op:operator pos:line="5804" pos:column="70">*</op:operator><name pos:line="5804" pos:column="71">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5804" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="5804" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="5806" pos:column="9">virtual <name pos:line="5806" pos:column="17">HRESULT</name> <name pos:line="5806" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5806" pos:column="43">GetSpans_2</name><argument_list pos:line="5806" pos:column="53">( 
            <comment type="block" pos:line="5807" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="5807" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="5807" pos:column="40">*</op:operator><name pos:line="5807" pos:column="41">pTargetSnapshot</name></expr></argument>,
            <comment type="block" pos:line="5808" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5808" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <op:operator pos:line="5808" pos:column="69">*</op:operator><op:operator pos:line="5808" pos:column="70">*</op:operator><name pos:line="5808" pos:column="71">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5808" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="5808" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="5810" pos:column="9">virtual <name pos:line="5810" pos:column="17">HRESULT</name> <name pos:line="5810" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5810" pos:column="43">GetStart</name><argument_list pos:line="5810" pos:column="51">( 
            <comment type="block" pos:line="5811" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5811" pos:column="33">IVxMappingPoint</name> <op:operator pos:line="5811" pos:column="49">*</op:operator><op:operator pos:line="5811" pos:column="50">*</op:operator><name pos:line="5811" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5811" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5811" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="5813" pos:column="9">virtual <name pos:line="5813" pos:column="17">HRESULT</name> <name pos:line="5813" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5813" pos:column="43">GetEnd</name><argument_list pos:line="5813" pos:column="49">( 
            <comment type="block" pos:line="5814" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5814" pos:column="33">IVxMappingPoint</name> <op:operator pos:line="5814" pos:column="49">*</op:operator><op:operator pos:line="5814" pos:column="50">*</op:operator><name pos:line="5814" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5814" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="5814" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="5816" pos:column="9">virtual <name pos:line="5816" pos:column="17">HRESULT</name> <name pos:line="5816" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5816" pos:column="43">GetAnchorBuffer</name><argument_list pos:line="5816" pos:column="58">( 
            <comment type="block" pos:line="5817" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5817" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="5817" pos:column="47">*</op:operator><op:operator pos:line="5817" pos:column="48">*</op:operator><name pos:line="5817" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5817" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="5817" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="5819" pos:column="9">virtual <name pos:line="5819" pos:column="17">HRESULT</name> <name pos:line="5819" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5819" pos:column="43">GetBufferGraph</name><argument_list pos:line="5819" pos:column="57">( 
            <comment type="block" pos:line="5820" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5820" pos:column="33">IVxBufferGraph</name> <op:operator pos:line="5820" pos:column="48">*</op:operator><op:operator pos:line="5820" pos:column="49">*</op:operator><name pos:line="5820" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5820" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="5820" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5824" pos:column="1">#<cpp:directive pos:line="5824" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5824" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5826" pos:column="5">typedef <type><struct pos:line="5826" pos:column="13">struct <name pos:line="5826" pos:column="20">IVxMappingSpanVtbl</name>
    <block pos:line="5827" pos:column="5">{<public type="default" pos:line="5827" pos:column="6">
        <function_decl><type><name pos:line="5828" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5830" pos:column="9">HRESULT</name></type> ( <name pos:line="5830" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5830" pos:column="37">*</type:modifier><name pos:line="5830" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5830" pos:column="54">( 
            <param><decl><type><name pos:line="5831" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5831" pos:column="28">*</type:modifier></type> <name pos:line="5831" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5832" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5832" pos:column="24">REFIID</name></type> <name pos:line="5832" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5833" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5834" pos:column="13">__RPC__deref_out</name>  <name pos:line="5834" pos:column="31">void</name> <type:modifier pos:line="5834" pos:column="36">*</type:modifier><type:modifier pos:line="5834" pos:column="37">*</type:modifier></type><name pos:line="5834" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5836" pos:column="9">ULONG</name></type> ( <name pos:line="5836" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5836" pos:column="35">*</type:modifier><name pos:line="5836" pos:column="36">AddRef</name> )<parameter_list pos:line="5836" pos:column="44">( 
            <param><decl><type><name pos:line="5837" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5837" pos:column="28">*</type:modifier></type> <name pos:line="5837" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5839" pos:column="9">ULONG</name></type> ( <name pos:line="5839" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5839" pos:column="35">*</type:modifier><name pos:line="5839" pos:column="36">Release</name> )<parameter_list pos:line="5839" pos:column="45">( 
            <param><decl><type><name pos:line="5840" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5840" pos:column="28">*</type:modifier></type> <name pos:line="5840" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5842" pos:column="9">HRESULT</name></type> ( <name pos:line="5842" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5842" pos:column="37">*</type:modifier><name pos:line="5842" pos:column="38">GetSpans</name> )<parameter_list pos:line="5842" pos:column="48">( 
            <param><decl><type><name pos:line="5843" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5843" pos:column="28">*</type:modifier></type> <name pos:line="5843" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5844" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5844" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="5844" pos:column="38">*</type:modifier></type><name pos:line="5844" pos:column="39">pTargetBuffer</name></decl></param>,
            <comment type="block" pos:line="5845" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5845" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="5845" pos:column="69">*</type:modifier><type:modifier pos:line="5845" pos:column="70">*</type:modifier></type><name pos:line="5845" pos:column="71">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5847" pos:column="9">HRESULT</name></type> ( <name pos:line="5847" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5847" pos:column="37">*</type:modifier><name pos:line="5847" pos:column="38">GetSpans_2</name> )<parameter_list pos:line="5847" pos:column="50">( 
            <param><decl><type><name pos:line="5848" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5848" pos:column="28">*</type:modifier></type> <name pos:line="5848" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5849" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5849" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="5849" pos:column="40">*</type:modifier></type><name pos:line="5849" pos:column="41">pTargetSnapshot</name></decl></param>,
            <comment type="block" pos:line="5850" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5850" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="5850" pos:column="69">*</type:modifier><type:modifier pos:line="5850" pos:column="70">*</type:modifier></type><name pos:line="5850" pos:column="71">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5852" pos:column="9">HRESULT</name></type> ( <name pos:line="5852" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5852" pos:column="37">*</type:modifier><name pos:line="5852" pos:column="38">GetStart</name> )<parameter_list pos:line="5852" pos:column="48">( 
            <param><decl><type><name pos:line="5853" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5853" pos:column="28">*</type:modifier></type> <name pos:line="5853" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5854" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5854" pos:column="33">IVxMappingPoint</name> <type:modifier pos:line="5854" pos:column="49">*</type:modifier><type:modifier pos:line="5854" pos:column="50">*</type:modifier></type><name pos:line="5854" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5856" pos:column="9">HRESULT</name></type> ( <name pos:line="5856" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5856" pos:column="37">*</type:modifier><name pos:line="5856" pos:column="38">GetEnd</name> )<parameter_list pos:line="5856" pos:column="46">( 
            <param><decl><type><name pos:line="5857" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5857" pos:column="28">*</type:modifier></type> <name pos:line="5857" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5858" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5858" pos:column="33">IVxMappingPoint</name> <type:modifier pos:line="5858" pos:column="49">*</type:modifier><type:modifier pos:line="5858" pos:column="50">*</type:modifier></type><name pos:line="5858" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5860" pos:column="9">HRESULT</name></type> ( <name pos:line="5860" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5860" pos:column="37">*</type:modifier><name pos:line="5860" pos:column="38">GetAnchorBuffer</name> )<parameter_list pos:line="5860" pos:column="55">( 
            <param><decl><type><name pos:line="5861" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5861" pos:column="28">*</type:modifier></type> <name pos:line="5861" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5862" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5862" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="5862" pos:column="47">*</type:modifier><type:modifier pos:line="5862" pos:column="48">*</type:modifier></type><name pos:line="5862" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5864" pos:column="9">HRESULT</name></type> ( <name pos:line="5864" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5864" pos:column="37">*</type:modifier><name pos:line="5864" pos:column="38">GetBufferGraph</name> )<parameter_list pos:line="5864" pos:column="54">( 
            <param><decl><type><name pos:line="5865" pos:column="13">IVxMappingSpan</name> <type:modifier pos:line="5865" pos:column="28">*</type:modifier></type> <name pos:line="5865" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5866" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5866" pos:column="33">IVxBufferGraph</name> <type:modifier pos:line="5866" pos:column="48">*</type:modifier><type:modifier pos:line="5866" pos:column="49">*</type:modifier></type><name pos:line="5866" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5868" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5869" pos:column="7">IVxMappingSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5871" pos:column="5">interface</name></type> <name pos:line="5871" pos:column="15">IVxMappingSpan</name>
    <argument_list pos:line="5872" pos:column="5">{
        <argument><expr><name pos:line="5873" pos:column="9">CONST_VTBL</name> struct <name pos:line="5873" pos:column="27">IVxMappingSpanVtbl</name> <op:operator pos:line="5873" pos:column="46">*</op:operator><name pos:line="5873" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5878" pos:column="1">#<cpp:directive pos:line="5878" pos:column="2">ifdef</cpp:directive> <name pos:line="5878" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5881" pos:column="1">#<cpp:directive pos:line="5881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5881" pos:column="9">IVxMappingSpan_QueryInterface</name><parameter_list pos:line="5881" pos:column="38">(<param><type><name pos:line="5881" pos:column="39">This</name></type></param>,<param><type><name pos:line="5881" pos:column="44">riid</name></type></param>,<param><type><name pos:line="5881" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5882" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5884" pos:column="1">#<cpp:directive pos:line="5884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5884" pos:column="9">IVxMappingSpan_AddRef</name><parameter_list pos:line="5884" pos:column="30">(<param><type><name pos:line="5884" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5885" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5887" pos:column="1">#<cpp:directive pos:line="5887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5887" pos:column="9">IVxMappingSpan_Release</name><parameter_list pos:line="5887" pos:column="31">(<param><type><name pos:line="5887" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5888" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5891" pos:column="1">#<cpp:directive pos:line="5891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5891" pos:column="9">IVxMappingSpan_GetSpans</name><parameter_list pos:line="5891" pos:column="32">(<param><type><name pos:line="5891" pos:column="33">This</name></type></param>,<param><type><name pos:line="5891" pos:column="38">pTargetBuffer</name></type></param>,<param><type><name pos:line="5891" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5892" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpans(This,pTargetBuffer,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5894" pos:column="1">#<cpp:directive pos:line="5894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5894" pos:column="9">IVxMappingSpan_GetSpans_2</name><parameter_list pos:line="5894" pos:column="34">(<param><type><name pos:line="5894" pos:column="35">This</name></type></param>,<param><type><name pos:line="5894" pos:column="40">pTargetSnapshot</name></type></param>,<param><type><name pos:line="5894" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5895" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpans_2(This,pTargetSnapshot,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5897" pos:column="1">#<cpp:directive pos:line="5897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5897" pos:column="9">IVxMappingSpan_GetStart</name><parameter_list pos:line="5897" pos:column="32">(<param><type><name pos:line="5897" pos:column="33">This</name></type></param>,<param><type><name pos:line="5897" pos:column="38">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5898" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStart(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5900" pos:column="1">#<cpp:directive pos:line="5900" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5900" pos:column="9">IVxMappingSpan_GetEnd</name><parameter_list pos:line="5900" pos:column="30">(<param><type><name pos:line="5900" pos:column="31">This</name></type></param>,<param><type><name pos:line="5900" pos:column="36">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5901" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnd(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5903" pos:column="1">#<cpp:directive pos:line="5903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5903" pos:column="9">IVxMappingSpan_GetAnchorBuffer</name><parameter_list pos:line="5903" pos:column="39">(<param><type><name pos:line="5903" pos:column="40">This</name></type></param>,<param><type><name pos:line="5903" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5904" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAnchorBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="5906" pos:column="1">#<cpp:directive pos:line="5906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5906" pos:column="9">IVxMappingSpan_GetBufferGraph</name><parameter_list pos:line="5906" pos:column="38">(<param><type><name pos:line="5906" pos:column="39">This</name></type></param>,<param><type><name pos:line="5906" pos:column="44">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5907" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBufferGraph(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5909" pos:column="1">#<cpp:directive pos:line="5909" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5909" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5912" pos:column="1">#<cpp:directive pos:line="5912" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5912" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5917" pos:column="1">#<cpp:directive pos:line="5917" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5917" pos:column="9">/* __IVxMappingSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5920" pos:column="1">#<cpp:directive pos:line="5920" pos:column="2">ifndef</cpp:directive> <name pos:line="5920" pos:column="9">__IVxNormalizedTextChangeCollection_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5921" pos:column="1">#<cpp:directive pos:line="5921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5921" pos:column="9">__IVxNormalizedTextChangeCollection_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5923" pos:column="1">/* interface IVxNormalizedTextChangeCollection */</comment>
<comment type="block" pos:line="5924" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5927" pos:column="1">EXTERN_C</name> <specifier pos:line="5927" pos:column="10">const</specifier> <name pos:line="5927" pos:column="16">IID</name></type> <name pos:line="5927" pos:column="20">IID_IVxNormalizedTextChangeCollection</name></decl>;</decl_stmt>

<cpp:if pos:line="5929" pos:column="1">#<cpp:directive pos:line="5929" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5929" pos:column="5">defined</name><argument_list pos:line="5929" pos:column="12">(<argument><expr><name pos:line="5929" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5929" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5929" pos:column="29">!</op:operator><call><name pos:line="5929" pos:column="30">defined</name><argument_list pos:line="5929" pos:column="37">(<argument><expr><name pos:line="5929" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5931" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5931" pos:column="19">(<argument pos:line="5931" pos:column="20">"cab6d7ae-e6a1-411d-ac94-bdc1629bb621"</argument>)</argument_list></macro>
    <label><name pos:line="5932" pos:column="5">IVxNormalizedTextChangeCollection</name> :</label> <expr_stmt><expr pos:line="5932" pos:column="41">public <name pos:line="5932" pos:column="48">IListIVxTextChange</name>
    <block pos:line="5933" pos:column="5">{
    <expr pos:line="5934" pos:column="5">public<op:operator pos:line="5934" pos:column="11">:</op:operator>
        virtual <name pos:line="5935" pos:column="17">HRESULT</name> <name pos:line="5935" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5935" pos:column="43">GetIncludesLineChanges</name><argument_list pos:line="5935" pos:column="65">( 
            <comment type="block" pos:line="5936" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="5936" pos:column="33">BOOL</name> <op:operator pos:line="5936" pos:column="38">*</op:operator><name pos:line="5936" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="5936" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="5936" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5940" pos:column="1">#<cpp:directive pos:line="5940" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5940" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5942" pos:column="5">typedef <type><struct pos:line="5942" pos:column="13">struct <name pos:line="5942" pos:column="20">IVxNormalizedTextChangeCollectionVtbl</name>
    <block pos:line="5943" pos:column="5">{<public type="default" pos:line="5943" pos:column="6">
        <function_decl><type><name pos:line="5944" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5946" pos:column="9">HRESULT</name></type> ( <name pos:line="5946" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5946" pos:column="37">*</type:modifier><name pos:line="5946" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5946" pos:column="54">( 
            <param><decl><type><name pos:line="5947" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5947" pos:column="47">*</type:modifier></type> <name pos:line="5947" pos:column="49">This</name></decl></param>,
            <comment type="block" pos:line="5948" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5948" pos:column="24">REFIID</name></type> <name pos:line="5948" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="5949" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5950" pos:column="13">__RPC__deref_out</name>  <name pos:line="5950" pos:column="31">void</name> <type:modifier pos:line="5950" pos:column="36">*</type:modifier><type:modifier pos:line="5950" pos:column="37">*</type:modifier></type><name pos:line="5950" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5952" pos:column="9">ULONG</name></type> ( <name pos:line="5952" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5952" pos:column="35">*</type:modifier><name pos:line="5952" pos:column="36">AddRef</name> )<parameter_list pos:line="5952" pos:column="44">( 
            <param><decl><type><name pos:line="5953" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5953" pos:column="47">*</type:modifier></type> <name pos:line="5953" pos:column="49">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5955" pos:column="9">ULONG</name></type> ( <name pos:line="5955" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5955" pos:column="35">*</type:modifier><name pos:line="5955" pos:column="36">Release</name> )<parameter_list pos:line="5955" pos:column="45">( 
            <param><decl><type><name pos:line="5956" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5956" pos:column="47">*</type:modifier></type> <name pos:line="5956" pos:column="49">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5958" pos:column="9">HRESULT</name></type> ( <name pos:line="5958" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5958" pos:column="37">*</type:modifier><name pos:line="5958" pos:column="38">GetCount</name> )<parameter_list pos:line="5958" pos:column="48">( 
            <param><decl><type><name pos:line="5959" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5959" pos:column="47">*</type:modifier></type> <name pos:line="5959" pos:column="49">This</name></decl></param>,
            <comment type="block" pos:line="5960" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5960" pos:column="33">int</name> <type:modifier pos:line="5960" pos:column="37">*</type:modifier></type><name pos:line="5960" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5962" pos:column="9">HRESULT</name></type> ( <name pos:line="5962" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5962" pos:column="37">*</type:modifier><name pos:line="5962" pos:column="38">GetElement</name> )<parameter_list pos:line="5962" pos:column="50">( 
            <param><decl><type><name pos:line="5963" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5963" pos:column="47">*</type:modifier></type> <name pos:line="5963" pos:column="49">This</name></decl></param>,
            <comment type="block" pos:line="5964" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5964" pos:column="24">int</name></type> <name pos:line="5964" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="5965" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5965" pos:column="33">IVxTextChange</name> <type:modifier pos:line="5965" pos:column="47">*</type:modifier><type:modifier pos:line="5965" pos:column="48">*</type:modifier></type><name pos:line="5965" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5967" pos:column="9">HRESULT</name></type> ( <name pos:line="5967" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5967" pos:column="37">*</type:modifier><name pos:line="5967" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="5967" pos:column="53">( 
            <param><decl><type><name pos:line="5968" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5968" pos:column="47">*</type:modifier></type> <name pos:line="5968" pos:column="49">This</name></decl></param>,
            <comment type="block" pos:line="5969" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5969" pos:column="33">IEnumeratorIVxTextChange</name> <type:modifier pos:line="5969" pos:column="58">*</type:modifier><type:modifier pos:line="5969" pos:column="59">*</type:modifier></type><name pos:line="5969" pos:column="60">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5971" pos:column="9">HRESULT</name></type> ( <name pos:line="5971" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5971" pos:column="37">*</type:modifier><name pos:line="5971" pos:column="38">GetIncludesLineChanges</name> )<parameter_list pos:line="5971" pos:column="62">( 
            <param><decl><type><name pos:line="5972" pos:column="13">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="5972" pos:column="47">*</type:modifier></type> <name pos:line="5972" pos:column="49">This</name></decl></param>,
            <comment type="block" pos:line="5973" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5973" pos:column="33">BOOL</name> <type:modifier pos:line="5973" pos:column="38">*</type:modifier></type><name pos:line="5973" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5975" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5976" pos:column="7">IVxNormalizedTextChangeCollectionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5978" pos:column="5">interface</name></type> <name pos:line="5978" pos:column="15">IVxNormalizedTextChangeCollection</name>
    <argument_list pos:line="5979" pos:column="5">{
        <argument><expr><name pos:line="5980" pos:column="9">CONST_VTBL</name> struct <name pos:line="5980" pos:column="27">IVxNormalizedTextChangeCollectionVtbl</name> <op:operator pos:line="5980" pos:column="65">*</op:operator><name pos:line="5980" pos:column="66">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5985" pos:column="1">#<cpp:directive pos:line="5985" pos:column="2">ifdef</cpp:directive> <name pos:line="5985" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5988" pos:column="1">#<cpp:directive pos:line="5988" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5988" pos:column="9">IVxNormalizedTextChangeCollection_QueryInterface</name><parameter_list pos:line="5988" pos:column="57">(<param><type><name pos:line="5988" pos:column="58">This</name></type></param>,<param><type><name pos:line="5988" pos:column="63">riid</name></type></param>,<param><type><name pos:line="5988" pos:column="68">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5989" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5991" pos:column="1">#<cpp:directive pos:line="5991" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5991" pos:column="9">IVxNormalizedTextChangeCollection_AddRef</name><parameter_list pos:line="5991" pos:column="49">(<param><type><name pos:line="5991" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5992" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5994" pos:column="1">#<cpp:directive pos:line="5994" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5994" pos:column="9">IVxNormalizedTextChangeCollection_Release</name><parameter_list pos:line="5994" pos:column="50">(<param><type><name pos:line="5994" pos:column="51">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5995" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5998" pos:column="1">#<cpp:directive pos:line="5998" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5998" pos:column="9">IVxNormalizedTextChangeCollection_GetCount</name><parameter_list pos:line="5998" pos:column="51">(<param><type><name pos:line="5998" pos:column="52">This</name></type></param>,<param><type><name pos:line="5998" pos:column="57">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5999" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6001" pos:column="1">#<cpp:directive pos:line="6001" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6001" pos:column="9">IVxNormalizedTextChangeCollection_GetElement</name><parameter_list pos:line="6001" pos:column="53">(<param><type><name pos:line="6001" pos:column="54">This</name></type></param>,<param><type><name pos:line="6001" pos:column="59">index</name></type></param>,<param><type><name pos:line="6001" pos:column="65">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6002" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6004" pos:column="1">#<cpp:directive pos:line="6004" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6004" pos:column="9">IVxNormalizedTextChangeCollection_GetEnumerator</name><parameter_list pos:line="6004" pos:column="56">(<param><type><name pos:line="6004" pos:column="57">This</name></type></param>,<param><type><name pos:line="6004" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6005" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="6008" pos:column="1">#<cpp:directive pos:line="6008" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6008" pos:column="9">IVxNormalizedTextChangeCollection_GetIncludesLineChanges</name><parameter_list pos:line="6008" pos:column="65">(<param><type><name pos:line="6008" pos:column="66">This</name></type></param>,<param><type><name pos:line="6008" pos:column="71">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6009" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIncludesLineChanges(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6011" pos:column="1">#<cpp:directive pos:line="6011" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6011" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6014" pos:column="1">#<cpp:directive pos:line="6014" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6014" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6019" pos:column="1">#<cpp:directive pos:line="6019" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6019" pos:column="9">/* __IVxNormalizedTextChangeCollection_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6022" pos:column="1">#<cpp:directive pos:line="6022" pos:column="2">ifndef</cpp:directive> <name pos:line="6022" pos:column="9">__IVxReadOnlyRegion_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6023" pos:column="1">#<cpp:directive pos:line="6023" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6023" pos:column="9">__IVxReadOnlyRegion_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6025" pos:column="1">/* interface IVxReadOnlyRegion */</comment>
<comment type="block" pos:line="6026" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6029" pos:column="1">EXTERN_C</name> <specifier pos:line="6029" pos:column="10">const</specifier> <name pos:line="6029" pos:column="16">IID</name></type> <name pos:line="6029" pos:column="20">IID_IVxReadOnlyRegion</name></decl>;</decl_stmt>

<cpp:if pos:line="6031" pos:column="1">#<cpp:directive pos:line="6031" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6031" pos:column="5">defined</name><argument_list pos:line="6031" pos:column="12">(<argument><expr><name pos:line="6031" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6031" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6031" pos:column="29">!</op:operator><call><name pos:line="6031" pos:column="30">defined</name><argument_list pos:line="6031" pos:column="37">(<argument><expr><name pos:line="6031" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6033" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6033" pos:column="19">(<argument pos:line="6033" pos:column="20">"ece504c9-946e-4dd0-b929-0315736f86e4"</argument>)</argument_list></macro>
    <label><name pos:line="6034" pos:column="5">IVxReadOnlyRegion</name> :</label> <expr_stmt><expr pos:line="6034" pos:column="25">public <name pos:line="6034" pos:column="32">IUnknown</name>
    <block pos:line="6035" pos:column="5">{
    <expr pos:line="6036" pos:column="5">public<op:operator pos:line="6036" pos:column="11">:</op:operator>
        virtual <name pos:line="6037" pos:column="17">HRESULT</name> <name pos:line="6037" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6037" pos:column="43">GetEdgeInsertionMode</name><argument_list pos:line="6037" pos:column="63">( 
            <comment type="block" pos:line="6038" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6038" pos:column="33">VxEdgeInsertionMode</name> <op:operator pos:line="6038" pos:column="53">*</op:operator><name pos:line="6038" pos:column="54">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6038" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="6038" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="6040" pos:column="9">virtual <name pos:line="6040" pos:column="17">HRESULT</name> <name pos:line="6040" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6040" pos:column="43">GetSpan</name><argument_list pos:line="6040" pos:column="50">( 
            <comment type="block" pos:line="6041" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6041" pos:column="33">IVxTrackingSpan</name> <op:operator pos:line="6041" pos:column="49">*</op:operator><op:operator pos:line="6041" pos:column="50">*</op:operator><name pos:line="6041" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6041" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6041" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6045" pos:column="1">#<cpp:directive pos:line="6045" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6045" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6047" pos:column="5">typedef <type><struct pos:line="6047" pos:column="13">struct <name pos:line="6047" pos:column="20">IVxReadOnlyRegionVtbl</name>
    <block pos:line="6048" pos:column="5">{<public type="default" pos:line="6048" pos:column="6">
        <function_decl><type><name pos:line="6049" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6051" pos:column="9">HRESULT</name></type> ( <name pos:line="6051" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6051" pos:column="37">*</type:modifier><name pos:line="6051" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6051" pos:column="54">( 
            <param><decl><type><name pos:line="6052" pos:column="13">IVxReadOnlyRegion</name> <type:modifier pos:line="6052" pos:column="31">*</type:modifier></type> <name pos:line="6052" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6053" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6053" pos:column="24">REFIID</name></type> <name pos:line="6053" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="6054" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6055" pos:column="13">__RPC__deref_out</name>  <name pos:line="6055" pos:column="31">void</name> <type:modifier pos:line="6055" pos:column="36">*</type:modifier><type:modifier pos:line="6055" pos:column="37">*</type:modifier></type><name pos:line="6055" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6057" pos:column="9">ULONG</name></type> ( <name pos:line="6057" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6057" pos:column="35">*</type:modifier><name pos:line="6057" pos:column="36">AddRef</name> )<parameter_list pos:line="6057" pos:column="44">( 
            <param><decl><type><name pos:line="6058" pos:column="13">IVxReadOnlyRegion</name> <type:modifier pos:line="6058" pos:column="31">*</type:modifier></type> <name pos:line="6058" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6060" pos:column="9">ULONG</name></type> ( <name pos:line="6060" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6060" pos:column="35">*</type:modifier><name pos:line="6060" pos:column="36">Release</name> )<parameter_list pos:line="6060" pos:column="45">( 
            <param><decl><type><name pos:line="6061" pos:column="13">IVxReadOnlyRegion</name> <type:modifier pos:line="6061" pos:column="31">*</type:modifier></type> <name pos:line="6061" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6063" pos:column="9">HRESULT</name></type> ( <name pos:line="6063" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6063" pos:column="37">*</type:modifier><name pos:line="6063" pos:column="38">GetEdgeInsertionMode</name> )<parameter_list pos:line="6063" pos:column="60">( 
            <param><decl><type><name pos:line="6064" pos:column="13">IVxReadOnlyRegion</name> <type:modifier pos:line="6064" pos:column="31">*</type:modifier></type> <name pos:line="6064" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6065" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6065" pos:column="33">VxEdgeInsertionMode</name> <type:modifier pos:line="6065" pos:column="53">*</type:modifier></type><name pos:line="6065" pos:column="54">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6067" pos:column="9">HRESULT</name></type> ( <name pos:line="6067" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6067" pos:column="37">*</type:modifier><name pos:line="6067" pos:column="38">GetSpan</name> )<parameter_list pos:line="6067" pos:column="47">( 
            <param><decl><type><name pos:line="6068" pos:column="13">IVxReadOnlyRegion</name> <type:modifier pos:line="6068" pos:column="31">*</type:modifier></type> <name pos:line="6068" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6069" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6069" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="6069" pos:column="49">*</type:modifier><type:modifier pos:line="6069" pos:column="50">*</type:modifier></type><name pos:line="6069" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6071" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6072" pos:column="7">IVxReadOnlyRegionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6074" pos:column="5">interface</name></type> <name pos:line="6074" pos:column="15">IVxReadOnlyRegion</name>
    <argument_list pos:line="6075" pos:column="5">{
        <argument><expr><name pos:line="6076" pos:column="9">CONST_VTBL</name> struct <name pos:line="6076" pos:column="27">IVxReadOnlyRegionVtbl</name> <op:operator pos:line="6076" pos:column="49">*</op:operator><name pos:line="6076" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6081" pos:column="1">#<cpp:directive pos:line="6081" pos:column="2">ifdef</cpp:directive> <name pos:line="6081" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6084" pos:column="1">#<cpp:directive pos:line="6084" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6084" pos:column="9">IVxReadOnlyRegion_QueryInterface</name><parameter_list pos:line="6084" pos:column="41">(<param><type><name pos:line="6084" pos:column="42">This</name></type></param>,<param><type><name pos:line="6084" pos:column="47">riid</name></type></param>,<param><type><name pos:line="6084" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6085" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6087" pos:column="1">#<cpp:directive pos:line="6087" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6087" pos:column="9">IVxReadOnlyRegion_AddRef</name><parameter_list pos:line="6087" pos:column="33">(<param><type><name pos:line="6087" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6088" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6090" pos:column="1">#<cpp:directive pos:line="6090" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6090" pos:column="9">IVxReadOnlyRegion_Release</name><parameter_list pos:line="6090" pos:column="34">(<param><type><name pos:line="6090" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6091" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6094" pos:column="1">#<cpp:directive pos:line="6094" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6094" pos:column="9">IVxReadOnlyRegion_GetEdgeInsertionMode</name><parameter_list pos:line="6094" pos:column="47">(<param><type><name pos:line="6094" pos:column="48">This</name></type></param>,<param><type><name pos:line="6094" pos:column="53">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6095" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEdgeInsertionMode(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6097" pos:column="1">#<cpp:directive pos:line="6097" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6097" pos:column="9">IVxReadOnlyRegion_GetSpan</name><parameter_list pos:line="6097" pos:column="34">(<param><type><name pos:line="6097" pos:column="35">This</name></type></param>,<param><type><name pos:line="6097" pos:column="40">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6098" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpan(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6100" pos:column="1">#<cpp:directive pos:line="6100" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6100" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6103" pos:column="1">#<cpp:directive pos:line="6103" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6103" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6108" pos:column="1">#<cpp:directive pos:line="6108" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6108" pos:column="9">/* __IVxReadOnlyRegion_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6111" pos:column="1">#<cpp:directive pos:line="6111" pos:column="2">ifndef</cpp:directive> <name pos:line="6111" pos:column="9">__IVxTextBufferEdit_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6112" pos:column="1">#<cpp:directive pos:line="6112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6112" pos:column="9">__IVxTextBufferEdit_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6114" pos:column="1">/* interface IVxTextBufferEdit */</comment>
<comment type="block" pos:line="6115" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6118" pos:column="1">EXTERN_C</name> <specifier pos:line="6118" pos:column="10">const</specifier> <name pos:line="6118" pos:column="16">IID</name></type> <name pos:line="6118" pos:column="20">IID_IVxTextBufferEdit</name></decl>;</decl_stmt>

<cpp:if pos:line="6120" pos:column="1">#<cpp:directive pos:line="6120" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6120" pos:column="5">defined</name><argument_list pos:line="6120" pos:column="12">(<argument><expr><name pos:line="6120" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6120" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6120" pos:column="29">!</op:operator><call><name pos:line="6120" pos:column="30">defined</name><argument_list pos:line="6120" pos:column="37">(<argument><expr><name pos:line="6120" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6122" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6122" pos:column="19">(<argument pos:line="6122" pos:column="20">"ff1f08f7-7447-49e1-af8f-0a0929a21ac9"</argument>)</argument_list></macro>
    <label><name pos:line="6123" pos:column="5">IVxTextBufferEdit</name> :</label> <expr_stmt><expr pos:line="6123" pos:column="25">public <name pos:line="6123" pos:column="32">IUnknown</name>
    <block pos:line="6124" pos:column="5">{
    <expr pos:line="6125" pos:column="5">public<op:operator pos:line="6125" pos:column="11">:</op:operator>
        virtual <name pos:line="6126" pos:column="17">HRESULT</name> <name pos:line="6126" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6126" pos:column="43">GetSnapshot</name><argument_list pos:line="6126" pos:column="54">( 
            <comment type="block" pos:line="6127" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6127" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="6127" pos:column="49">*</op:operator><op:operator pos:line="6127" pos:column="50">*</op:operator><name pos:line="6127" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6127" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6127" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6129" pos:column="9">virtual <name pos:line="6129" pos:column="17">HRESULT</name> <name pos:line="6129" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6129" pos:column="43">Apply</name><argument_list pos:line="6129" pos:column="48">( 
            <comment type="block" pos:line="6130" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6130" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="6130" pos:column="49">*</op:operator><op:operator pos:line="6130" pos:column="50">*</op:operator><name pos:line="6130" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6130" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6130" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6132" pos:column="9">virtual <name pos:line="6132" pos:column="17">HRESULT</name> <name pos:line="6132" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6132" pos:column="43">Cancel</name><argument_list pos:line="6132" pos:column="49">( <argument><expr><name pos:line="6132" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="6132" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="6132" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="6134" pos:column="9">virtual <name pos:line="6134" pos:column="17">HRESULT</name> <name pos:line="6134" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6134" pos:column="43">GetCanceled</name><argument_list pos:line="6134" pos:column="54">( 
            <comment type="block" pos:line="6135" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6135" pos:column="33">BOOL</name> <op:operator pos:line="6135" pos:column="38">*</op:operator><name pos:line="6135" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6135" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6135" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6139" pos:column="1">#<cpp:directive pos:line="6139" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6139" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6141" pos:column="5">typedef <type><struct pos:line="6141" pos:column="13">struct <name pos:line="6141" pos:column="20">IVxTextBufferEditVtbl</name>
    <block pos:line="6142" pos:column="5">{<public type="default" pos:line="6142" pos:column="6">
        <function_decl><type><name pos:line="6143" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6145" pos:column="9">HRESULT</name></type> ( <name pos:line="6145" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6145" pos:column="37">*</type:modifier><name pos:line="6145" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6145" pos:column="54">( 
            <param><decl><type><name pos:line="6146" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6146" pos:column="31">*</type:modifier></type> <name pos:line="6146" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6147" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6147" pos:column="24">REFIID</name></type> <name pos:line="6147" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="6148" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6149" pos:column="13">__RPC__deref_out</name>  <name pos:line="6149" pos:column="31">void</name> <type:modifier pos:line="6149" pos:column="36">*</type:modifier><type:modifier pos:line="6149" pos:column="37">*</type:modifier></type><name pos:line="6149" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6151" pos:column="9">ULONG</name></type> ( <name pos:line="6151" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6151" pos:column="35">*</type:modifier><name pos:line="6151" pos:column="36">AddRef</name> )<parameter_list pos:line="6151" pos:column="44">( 
            <param><decl><type><name pos:line="6152" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6152" pos:column="31">*</type:modifier></type> <name pos:line="6152" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6154" pos:column="9">ULONG</name></type> ( <name pos:line="6154" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6154" pos:column="35">*</type:modifier><name pos:line="6154" pos:column="36">Release</name> )<parameter_list pos:line="6154" pos:column="45">( 
            <param><decl><type><name pos:line="6155" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6155" pos:column="31">*</type:modifier></type> <name pos:line="6155" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6157" pos:column="9">HRESULT</name></type> ( <name pos:line="6157" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6157" pos:column="37">*</type:modifier><name pos:line="6157" pos:column="38">GetSnapshot</name> )<parameter_list pos:line="6157" pos:column="51">( 
            <param><decl><type><name pos:line="6158" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6158" pos:column="31">*</type:modifier></type> <name pos:line="6158" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6159" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6159" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6159" pos:column="49">*</type:modifier><type:modifier pos:line="6159" pos:column="50">*</type:modifier></type><name pos:line="6159" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6161" pos:column="9">HRESULT</name></type> ( <name pos:line="6161" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6161" pos:column="37">*</type:modifier><name pos:line="6161" pos:column="38">Apply</name> )<parameter_list pos:line="6161" pos:column="45">( 
            <param><decl><type><name pos:line="6162" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6162" pos:column="31">*</type:modifier></type> <name pos:line="6162" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6163" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6163" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6163" pos:column="49">*</type:modifier><type:modifier pos:line="6163" pos:column="50">*</type:modifier></type><name pos:line="6163" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6165" pos:column="9">HRESULT</name></type> ( <name pos:line="6165" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6165" pos:column="37">*</type:modifier><name pos:line="6165" pos:column="38">Cancel</name> )<parameter_list pos:line="6165" pos:column="46">( 
            <param><decl><type><name pos:line="6166" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6166" pos:column="31">*</type:modifier></type> <name pos:line="6166" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6168" pos:column="9">HRESULT</name></type> ( <name pos:line="6168" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6168" pos:column="37">*</type:modifier><name pos:line="6168" pos:column="38">GetCanceled</name> )<parameter_list pos:line="6168" pos:column="51">( 
            <param><decl><type><name pos:line="6169" pos:column="13">IVxTextBufferEdit</name> <type:modifier pos:line="6169" pos:column="31">*</type:modifier></type> <name pos:line="6169" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6170" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6170" pos:column="33">BOOL</name> <type:modifier pos:line="6170" pos:column="38">*</type:modifier></type><name pos:line="6170" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6172" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6173" pos:column="7">IVxTextBufferEditVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6175" pos:column="5">interface</name></type> <name pos:line="6175" pos:column="15">IVxTextBufferEdit</name>
    <argument_list pos:line="6176" pos:column="5">{
        <argument><expr><name pos:line="6177" pos:column="9">CONST_VTBL</name> struct <name pos:line="6177" pos:column="27">IVxTextBufferEditVtbl</name> <op:operator pos:line="6177" pos:column="49">*</op:operator><name pos:line="6177" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6182" pos:column="1">#<cpp:directive pos:line="6182" pos:column="2">ifdef</cpp:directive> <name pos:line="6182" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6185" pos:column="1">#<cpp:directive pos:line="6185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6185" pos:column="9">IVxTextBufferEdit_QueryInterface</name><parameter_list pos:line="6185" pos:column="41">(<param><type><name pos:line="6185" pos:column="42">This</name></type></param>,<param><type><name pos:line="6185" pos:column="47">riid</name></type></param>,<param><type><name pos:line="6185" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6186" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6188" pos:column="1">#<cpp:directive pos:line="6188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6188" pos:column="9">IVxTextBufferEdit_AddRef</name><parameter_list pos:line="6188" pos:column="33">(<param><type><name pos:line="6188" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6189" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6191" pos:column="1">#<cpp:directive pos:line="6191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6191" pos:column="9">IVxTextBufferEdit_Release</name><parameter_list pos:line="6191" pos:column="34">(<param><type><name pos:line="6191" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6192" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6195" pos:column="1">#<cpp:directive pos:line="6195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6195" pos:column="9">IVxTextBufferEdit_GetSnapshot</name><parameter_list pos:line="6195" pos:column="38">(<param><type><name pos:line="6195" pos:column="39">This</name></type></param>,<param><type><name pos:line="6195" pos:column="44">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6196" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6198" pos:column="1">#<cpp:directive pos:line="6198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6198" pos:column="9">IVxTextBufferEdit_Apply</name><parameter_list pos:line="6198" pos:column="32">(<param><type><name pos:line="6198" pos:column="33">This</name></type></param>,<param><type><name pos:line="6198" pos:column="38">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6199" pos:column="5">( (This)-&gt;lpVtbl -&gt; Apply(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6201" pos:column="1">#<cpp:directive pos:line="6201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6201" pos:column="9">IVxTextBufferEdit_Cancel</name><parameter_list pos:line="6201" pos:column="33">(<param><type><name pos:line="6201" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6202" pos:column="5">( (This)-&gt;lpVtbl -&gt; Cancel(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6204" pos:column="1">#<cpp:directive pos:line="6204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6204" pos:column="9">IVxTextBufferEdit_GetCanceled</name><parameter_list pos:line="6204" pos:column="38">(<param><type><name pos:line="6204" pos:column="39">This</name></type></param>,<param><type><name pos:line="6204" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6205" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCanceled(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6207" pos:column="1">#<cpp:directive pos:line="6207" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6207" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6210" pos:column="1">#<cpp:directive pos:line="6210" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6210" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6215" pos:column="1">#<cpp:directive pos:line="6215" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6215" pos:column="9">/* __IVxTextBufferEdit_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6218" pos:column="1">#<cpp:directive pos:line="6218" pos:column="2">ifndef</cpp:directive> <name pos:line="6218" pos:column="9">__IVxReadOnlyRegionEdit_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6219" pos:column="1">#<cpp:directive pos:line="6219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6219" pos:column="9">__IVxReadOnlyRegionEdit_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6221" pos:column="1">/* interface IVxReadOnlyRegionEdit */</comment>
<comment type="block" pos:line="6222" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6225" pos:column="1">EXTERN_C</name> <specifier pos:line="6225" pos:column="10">const</specifier> <name pos:line="6225" pos:column="16">IID</name></type> <name pos:line="6225" pos:column="20">IID_IVxReadOnlyRegionEdit</name></decl>;</decl_stmt>

<cpp:if pos:line="6227" pos:column="1">#<cpp:directive pos:line="6227" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6227" pos:column="5">defined</name><argument_list pos:line="6227" pos:column="12">(<argument><expr><name pos:line="6227" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6227" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6227" pos:column="29">!</op:operator><call><name pos:line="6227" pos:column="30">defined</name><argument_list pos:line="6227" pos:column="37">(<argument><expr><name pos:line="6227" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6229" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6229" pos:column="19">(<argument pos:line="6229" pos:column="20">"93a8521c-26ec-44fc-9a8b-3f7af2974eaa"</argument>)</argument_list></macro>
    <label><name pos:line="6230" pos:column="5">IVxReadOnlyRegionEdit</name> :</label> <expr_stmt><expr pos:line="6230" pos:column="29">public <name pos:line="6230" pos:column="36">IVxTextBufferEdit</name>
    <block pos:line="6231" pos:column="5">{
    <expr pos:line="6232" pos:column="5">public<op:operator pos:line="6232" pos:column="11">:</op:operator>
        virtual <name pos:line="6233" pos:column="17">HRESULT</name> <name pos:line="6233" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6233" pos:column="43">CreateReadOnlyRegion</name><argument_list pos:line="6233" pos:column="63">( 
            <comment type="block" pos:line="6234" pos:column="13">/* [in] */</comment> <argument pos:line="6234" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="6235" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6235" pos:column="33">IVxReadOnlyRegion **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6235" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="6235" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="6237" pos:column="9">virtual <name pos:line="6237" pos:column="17">HRESULT</name> <name pos:line="6237" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6237" pos:column="43">CreateReadOnlyRegion_2</name><argument_list pos:line="6237" pos:column="65">( 
            <comment type="block" pos:line="6238" pos:column="13">/* [in] */</comment> <argument pos:line="6238" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="6239" pos:column="13">/* [in] */</comment> <argument pos:line="6239" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="6240" pos:column="13">/* [in] */</comment> <argument pos:line="6240" pos:column="24">VxEdgeInsertionMode edgeInsertionMode</argument>,
            <comment type="block" pos:line="6241" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6241" pos:column="33">IVxReadOnlyRegion **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6241" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="6241" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="6243" pos:column="9">virtual <name pos:line="6243" pos:column="17">HRESULT</name> <name pos:line="6243" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6243" pos:column="43">RemoveReadOnlyRegion</name><argument_list pos:line="6243" pos:column="63">( 
            <comment type="block" pos:line="6244" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6244" pos:column="24">IVxReadOnlyRegion</name> <op:operator pos:line="6244" pos:column="42">*</op:operator><name pos:line="6244" pos:column="43">pReadOnlyRegion</name></expr></argument>)</argument_list></call> <op:operator pos:line="6244" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6244" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6248" pos:column="1">#<cpp:directive pos:line="6248" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6248" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6250" pos:column="5">typedef <type><struct pos:line="6250" pos:column="13">struct <name pos:line="6250" pos:column="20">IVxReadOnlyRegionEditVtbl</name>
    <block pos:line="6251" pos:column="5">{<public type="default" pos:line="6251" pos:column="6">
        <function_decl><type><name pos:line="6252" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6254" pos:column="9">HRESULT</name></type> ( <name pos:line="6254" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6254" pos:column="37">*</type:modifier><name pos:line="6254" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6254" pos:column="54">( 
            <param><decl><type><name pos:line="6255" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6255" pos:column="35">*</type:modifier></type> <name pos:line="6255" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6256" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6256" pos:column="24">REFIID</name></type> <name pos:line="6256" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="6257" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6258" pos:column="13">__RPC__deref_out</name>  <name pos:line="6258" pos:column="31">void</name> <type:modifier pos:line="6258" pos:column="36">*</type:modifier><type:modifier pos:line="6258" pos:column="37">*</type:modifier></type><name pos:line="6258" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6260" pos:column="9">ULONG</name></type> ( <name pos:line="6260" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6260" pos:column="35">*</type:modifier><name pos:line="6260" pos:column="36">AddRef</name> )<parameter_list pos:line="6260" pos:column="44">( 
            <param><decl><type><name pos:line="6261" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6261" pos:column="35">*</type:modifier></type> <name pos:line="6261" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6263" pos:column="9">ULONG</name></type> ( <name pos:line="6263" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6263" pos:column="35">*</type:modifier><name pos:line="6263" pos:column="36">Release</name> )<parameter_list pos:line="6263" pos:column="45">( 
            <param><decl><type><name pos:line="6264" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6264" pos:column="35">*</type:modifier></type> <name pos:line="6264" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6266" pos:column="9">HRESULT</name></type> ( <name pos:line="6266" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6266" pos:column="37">*</type:modifier><name pos:line="6266" pos:column="38">GetSnapshot</name> )<parameter_list pos:line="6266" pos:column="51">( 
            <param><decl><type><name pos:line="6267" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6267" pos:column="35">*</type:modifier></type> <name pos:line="6267" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6268" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6268" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6268" pos:column="49">*</type:modifier><type:modifier pos:line="6268" pos:column="50">*</type:modifier></type><name pos:line="6268" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6270" pos:column="9">HRESULT</name></type> ( <name pos:line="6270" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6270" pos:column="37">*</type:modifier><name pos:line="6270" pos:column="38">Apply</name> )<parameter_list pos:line="6270" pos:column="45">( 
            <param><decl><type><name pos:line="6271" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6271" pos:column="35">*</type:modifier></type> <name pos:line="6271" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6272" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6272" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6272" pos:column="49">*</type:modifier><type:modifier pos:line="6272" pos:column="50">*</type:modifier></type><name pos:line="6272" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6274" pos:column="9">HRESULT</name></type> ( <name pos:line="6274" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6274" pos:column="37">*</type:modifier><name pos:line="6274" pos:column="38">Cancel</name> )<parameter_list pos:line="6274" pos:column="46">( 
            <param><decl><type><name pos:line="6275" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6275" pos:column="35">*</type:modifier></type> <name pos:line="6275" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6277" pos:column="9">HRESULT</name></type> ( <name pos:line="6277" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6277" pos:column="37">*</type:modifier><name pos:line="6277" pos:column="38">GetCanceled</name> )<parameter_list pos:line="6277" pos:column="51">( 
            <param><decl><type><name pos:line="6278" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6278" pos:column="35">*</type:modifier></type> <name pos:line="6278" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6279" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6279" pos:column="33">BOOL</name> <type:modifier pos:line="6279" pos:column="38">*</type:modifier></type><name pos:line="6279" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6281" pos:column="9">HRESULT</name></type> ( <name pos:line="6281" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6281" pos:column="37">*</type:modifier><name pos:line="6281" pos:column="38">CreateReadOnlyRegion</name> )<parameter_list pos:line="6281" pos:column="60">( 
            <param><decl><type><name pos:line="6282" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6282" pos:column="35">*</type:modifier></type> <name pos:line="6282" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6283" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6283" pos:column="24">VxSpan</name></type> <name pos:line="6283" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="6284" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6284" pos:column="33">IVxReadOnlyRegion</name> <type:modifier pos:line="6284" pos:column="51">*</type:modifier><type:modifier pos:line="6284" pos:column="52">*</type:modifier></type><name pos:line="6284" pos:column="53">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6286" pos:column="9">HRESULT</name></type> ( <name pos:line="6286" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6286" pos:column="37">*</type:modifier><name pos:line="6286" pos:column="38">CreateReadOnlyRegion_2</name> )<parameter_list pos:line="6286" pos:column="62">( 
            <param><decl><type><name pos:line="6287" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6287" pos:column="35">*</type:modifier></type> <name pos:line="6287" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6288" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6288" pos:column="24">VxSpan</name></type> <name pos:line="6288" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="6289" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6289" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="6289" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="6290" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6290" pos:column="24">VxEdgeInsertionMode</name></type> <name pos:line="6290" pos:column="44">edgeInsertionMode</name></decl></param>,
            <comment type="block" pos:line="6291" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6291" pos:column="33">IVxReadOnlyRegion</name> <type:modifier pos:line="6291" pos:column="51">*</type:modifier><type:modifier pos:line="6291" pos:column="52">*</type:modifier></type><name pos:line="6291" pos:column="53">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6293" pos:column="9">HRESULT</name></type> ( <name pos:line="6293" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6293" pos:column="37">*</type:modifier><name pos:line="6293" pos:column="38">RemoveReadOnlyRegion</name> )<parameter_list pos:line="6293" pos:column="60">( 
            <param><decl><type><name pos:line="6294" pos:column="13">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6294" pos:column="35">*</type:modifier></type> <name pos:line="6294" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="6295" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6295" pos:column="24">IVxReadOnlyRegion</name> <type:modifier pos:line="6295" pos:column="42">*</type:modifier></type><name pos:line="6295" pos:column="43">pReadOnlyRegion</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6297" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6298" pos:column="7">IVxReadOnlyRegionEditVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6300" pos:column="5">interface</name></type> <name pos:line="6300" pos:column="15">IVxReadOnlyRegionEdit</name>
    <argument_list pos:line="6301" pos:column="5">{
        <argument><expr><name pos:line="6302" pos:column="9">CONST_VTBL</name> struct <name pos:line="6302" pos:column="27">IVxReadOnlyRegionEditVtbl</name> <op:operator pos:line="6302" pos:column="53">*</op:operator><name pos:line="6302" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6307" pos:column="1">#<cpp:directive pos:line="6307" pos:column="2">ifdef</cpp:directive> <name pos:line="6307" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6310" pos:column="1">#<cpp:directive pos:line="6310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6310" pos:column="9">IVxReadOnlyRegionEdit_QueryInterface</name><parameter_list pos:line="6310" pos:column="45">(<param><type><name pos:line="6310" pos:column="46">This</name></type></param>,<param><type><name pos:line="6310" pos:column="51">riid</name></type></param>,<param><type><name pos:line="6310" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6311" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6313" pos:column="1">#<cpp:directive pos:line="6313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6313" pos:column="9">IVxReadOnlyRegionEdit_AddRef</name><parameter_list pos:line="6313" pos:column="37">(<param><type><name pos:line="6313" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6314" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6316" pos:column="1">#<cpp:directive pos:line="6316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6316" pos:column="9">IVxReadOnlyRegionEdit_Release</name><parameter_list pos:line="6316" pos:column="38">(<param><type><name pos:line="6316" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6317" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6320" pos:column="1">#<cpp:directive pos:line="6320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6320" pos:column="9">IVxReadOnlyRegionEdit_GetSnapshot</name><parameter_list pos:line="6320" pos:column="42">(<param><type><name pos:line="6320" pos:column="43">This</name></type></param>,<param><type><name pos:line="6320" pos:column="48">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6321" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6323" pos:column="1">#<cpp:directive pos:line="6323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6323" pos:column="9">IVxReadOnlyRegionEdit_Apply</name><parameter_list pos:line="6323" pos:column="36">(<param><type><name pos:line="6323" pos:column="37">This</name></type></param>,<param><type><name pos:line="6323" pos:column="42">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6324" pos:column="5">( (This)-&gt;lpVtbl -&gt; Apply(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6326" pos:column="1">#<cpp:directive pos:line="6326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6326" pos:column="9">IVxReadOnlyRegionEdit_Cancel</name><parameter_list pos:line="6326" pos:column="37">(<param><type><name pos:line="6326" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6327" pos:column="5">( (This)-&gt;lpVtbl -&gt; Cancel(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6329" pos:column="1">#<cpp:directive pos:line="6329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6329" pos:column="9">IVxReadOnlyRegionEdit_GetCanceled</name><parameter_list pos:line="6329" pos:column="42">(<param><type><name pos:line="6329" pos:column="43">This</name></type></param>,<param><type><name pos:line="6329" pos:column="48">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6330" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCanceled(This,pRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="6333" pos:column="1">#<cpp:directive pos:line="6333" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6333" pos:column="9">IVxReadOnlyRegionEdit_CreateReadOnlyRegion</name><parameter_list pos:line="6333" pos:column="51">(<param><type><name pos:line="6333" pos:column="52">This</name></type></param>,<param><type><name pos:line="6333" pos:column="57">span</name></type></param>,<param><type><name pos:line="6333" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6334" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateReadOnlyRegion(This,span,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6336" pos:column="1">#<cpp:directive pos:line="6336" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6336" pos:column="9">IVxReadOnlyRegionEdit_CreateReadOnlyRegion_2</name><parameter_list pos:line="6336" pos:column="53">(<param><type><name pos:line="6336" pos:column="54">This</name></type></param>,<param><type><name pos:line="6336" pos:column="59">span</name></type></param>,<param><type><name pos:line="6336" pos:column="64">trackingMode</name></type></param>,<param><type><name pos:line="6336" pos:column="77">edgeInsertionMode</name></type></param>,<param><type><name pos:line="6336" pos:column="95">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6337" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateReadOnlyRegion_2(This,span,trackingMode,edgeInsertionMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6339" pos:column="1">#<cpp:directive pos:line="6339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6339" pos:column="9">IVxReadOnlyRegionEdit_RemoveReadOnlyRegion</name><parameter_list pos:line="6339" pos:column="51">(<param><type><name pos:line="6339" pos:column="52">This</name></type></param>,<param><type><name pos:line="6339" pos:column="57">pReadOnlyRegion</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6340" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveReadOnlyRegion(This,pReadOnlyRegion) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6342" pos:column="1">#<cpp:directive pos:line="6342" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6342" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6345" pos:column="1">#<cpp:directive pos:line="6345" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6345" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6350" pos:column="1">#<cpp:directive pos:line="6350" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6350" pos:column="9">/* __IVxReadOnlyRegionEdit_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6353" pos:column="1">#<cpp:directive pos:line="6353" pos:column="2">ifndef</cpp:directive> <name pos:line="6353" pos:column="9">__IVxTextBuffer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6354" pos:column="1">#<cpp:directive pos:line="6354" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6354" pos:column="9">__IVxTextBuffer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6356" pos:column="1">/* interface IVxTextBuffer */</comment>
<comment type="block" pos:line="6357" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6360" pos:column="1">EXTERN_C</name> <specifier pos:line="6360" pos:column="10">const</specifier> <name pos:line="6360" pos:column="16">IID</name></type> <name pos:line="6360" pos:column="20">IID_IVxTextBuffer</name></decl>;</decl_stmt>

<cpp:if pos:line="6362" pos:column="1">#<cpp:directive pos:line="6362" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6362" pos:column="5">defined</name><argument_list pos:line="6362" pos:column="12">(<argument><expr><name pos:line="6362" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6362" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6362" pos:column="29">!</op:operator><call><name pos:line="6362" pos:column="30">defined</name><argument_list pos:line="6362" pos:column="37">(<argument><expr><name pos:line="6362" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6364" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6364" pos:column="19">(<argument pos:line="6364" pos:column="20">"df9ab9af-f07e-43c5-9106-eaf5849760d2"</argument>)</argument_list></macro>
    <label><name pos:line="6365" pos:column="5">IVxTextBuffer</name> :</label> <expr_stmt><expr pos:line="6365" pos:column="21">public <name pos:line="6365" pos:column="28">IVxPropertyOwner</name>
    <block pos:line="6366" pos:column="5">{
    <expr pos:line="6367" pos:column="5">public<op:operator pos:line="6367" pos:column="11">:</op:operator>
        virtual <name pos:line="6368" pos:column="17">HRESULT</name> <name pos:line="6368" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6368" pos:column="43">IsReadOnly</name><argument_list pos:line="6368" pos:column="53">( 
            <comment type="block" pos:line="6369" pos:column="13">/* [in] */</comment> <argument pos:line="6369" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="6370" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6370" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="6370" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6370" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6372" pos:column="9">virtual <name pos:line="6372" pos:column="17">HRESULT</name> <name pos:line="6372" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6372" pos:column="43">IsReadOnly_2</name><argument_list pos:line="6372" pos:column="55">( 
            <comment type="block" pos:line="6373" pos:column="13">/* [in] */</comment> <argument pos:line="6373" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="6374" pos:column="13">/* [in] */</comment> <argument pos:line="6374" pos:column="24">BOOL isEdit</argument>,
            <comment type="block" pos:line="6375" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6375" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="6375" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6375" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6377" pos:column="9">virtual <name pos:line="6377" pos:column="17">HRESULT</name> <name pos:line="6377" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6377" pos:column="43">GetReadOnlyExtents</name><argument_list pos:line="6377" pos:column="61">( 
            <comment type="block" pos:line="6378" pos:column="13">/* [in] */</comment> <argument pos:line="6378" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="6379" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6379" pos:column="33">IVxNormalizedSpanCollection **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6379" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="6379" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="6381" pos:column="9">virtual <name pos:line="6381" pos:column="17">HRESULT</name> <name pos:line="6381" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6381" pos:column="43">GetContentType</name><argument_list pos:line="6381" pos:column="57">( 
            <comment type="block" pos:line="6382" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6382" pos:column="33">IVxContentType</name> <op:operator pos:line="6382" pos:column="48">*</op:operator><op:operator pos:line="6382" pos:column="49">*</op:operator><name pos:line="6382" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6382" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6382" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6384" pos:column="9">virtual <name pos:line="6384" pos:column="17">HRESULT</name> <name pos:line="6384" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6384" pos:column="43">GetCurrentSnapshot</name><argument_list pos:line="6384" pos:column="61">( 
            <comment type="block" pos:line="6385" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6385" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="6385" pos:column="49">*</op:operator><op:operator pos:line="6385" pos:column="50">*</op:operator><name pos:line="6385" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6385" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6385" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6387" pos:column="9">virtual <name pos:line="6387" pos:column="17">HRESULT</name> <name pos:line="6387" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6387" pos:column="43">CreateEdit</name><argument_list pos:line="6387" pos:column="53">( 
            <comment type="block" pos:line="6388" pos:column="13">/* [in] */</comment> <argument pos:line="6388" pos:column="24">VxEditOptions options</argument>,
            <comment type="block" pos:line="6389" pos:column="13">/* [in] */</comment> <argument pos:line="6389" pos:column="24">BOOL reiteratedVersionNumberHasValue</argument>,
            <comment type="block" pos:line="6390" pos:column="13">/* [in] */</comment> <argument pos:line="6390" pos:column="24">int reiteratedVersionNumber</argument>,
            <comment type="block" pos:line="6391" pos:column="13">/* [in] */</comment> <argument pos:line="6391" pos:column="24">IUnknown *pEditTag</argument>,
            <comment type="block" pos:line="6392" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6392" pos:column="33">IVxTextEdit **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6392" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="6392" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="6394" pos:column="9">virtual <name pos:line="6394" pos:column="17">HRESULT</name> <name pos:line="6394" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6394" pos:column="43">CreateEdit_2</name><argument_list pos:line="6394" pos:column="55">( 
            <comment type="block" pos:line="6395" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6395" pos:column="33">IVxTextEdit</name> <op:operator pos:line="6395" pos:column="45">*</op:operator><op:operator pos:line="6395" pos:column="46">*</op:operator><name pos:line="6395" pos:column="47">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6395" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="6395" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="6397" pos:column="9">virtual <name pos:line="6397" pos:column="17">HRESULT</name> <name pos:line="6397" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6397" pos:column="43">CreateReadOnlyRegionEdit</name><argument_list pos:line="6397" pos:column="67">( 
            <comment type="block" pos:line="6398" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6398" pos:column="33">IVxReadOnlyRegionEdit</name> <op:operator pos:line="6398" pos:column="55">*</op:operator><op:operator pos:line="6398" pos:column="56">*</op:operator><name pos:line="6398" pos:column="57">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6398" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="6398" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="6400" pos:column="9">virtual <name pos:line="6400" pos:column="17">HRESULT</name> <name pos:line="6400" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6400" pos:column="43">GetEditInProgress</name><argument_list pos:line="6400" pos:column="60">( 
            <comment type="block" pos:line="6401" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6401" pos:column="33">BOOL</name> <op:operator pos:line="6401" pos:column="38">*</op:operator><name pos:line="6401" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6401" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6401" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6403" pos:column="9">virtual <name pos:line="6403" pos:column="17">HRESULT</name> <name pos:line="6403" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6403" pos:column="43">TakeThreadOwnership</name><argument_list pos:line="6403" pos:column="62">( <argument><expr><name pos:line="6403" pos:column="64">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="6403" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="6403" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="6405" pos:column="9">virtual <name pos:line="6405" pos:column="17">HRESULT</name> <name pos:line="6405" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6405" pos:column="43">CheckEditAccess</name><argument_list pos:line="6405" pos:column="58">( 
            <comment type="block" pos:line="6406" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6406" pos:column="33">BOOL</name> <op:operator pos:line="6406" pos:column="38">*</op:operator><name pos:line="6406" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6406" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6406" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6408" pos:column="9">virtual <name pos:line="6408" pos:column="17">HRESULT</name> <name pos:line="6408" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6408" pos:column="43">AdviseReadOnlyRegionsChanged</name><argument_list pos:line="6408" pos:column="71">( 
            <comment type="block" pos:line="6409" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6409" pos:column="24">IVxSnapshotSpanEvent</name> <op:operator pos:line="6409" pos:column="45">*</op:operator><name pos:line="6409" pos:column="46">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6409" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="6409" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="6411" pos:column="9">virtual <name pos:line="6411" pos:column="17">HRESULT</name> <name pos:line="6411" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6411" pos:column="43">UnadviseReadOnlyRegionsChanged</name><argument_list pos:line="6411" pos:column="73">( 
            <comment type="block" pos:line="6412" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6412" pos:column="24">IVxSnapshotSpanEvent</name> <op:operator pos:line="6412" pos:column="45">*</op:operator><name pos:line="6412" pos:column="46">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6412" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="6412" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="6414" pos:column="9">virtual <name pos:line="6414" pos:column="17">HRESULT</name> <name pos:line="6414" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6414" pos:column="43">AdviseChanged</name><argument_list pos:line="6414" pos:column="56">( 
            <comment type="block" pos:line="6415" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6415" pos:column="24">IVxTextContentChangedEvent</name> <op:operator pos:line="6415" pos:column="51">*</op:operator><name pos:line="6415" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6415" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6415" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6417" pos:column="9">virtual <name pos:line="6417" pos:column="17">HRESULT</name> <name pos:line="6417" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6417" pos:column="43">UnadviseChanged</name><argument_list pos:line="6417" pos:column="58">( 
            <comment type="block" pos:line="6418" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6418" pos:column="24">IVxTextContentChangedEvent</name> <op:operator pos:line="6418" pos:column="51">*</op:operator><name pos:line="6418" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6418" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6418" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6420" pos:column="9">virtual <name pos:line="6420" pos:column="17">HRESULT</name> <name pos:line="6420" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6420" pos:column="43">AdviseChangedLowPriority</name><argument_list pos:line="6420" pos:column="67">( 
            <comment type="block" pos:line="6421" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6421" pos:column="24">IVxTextContentChangedEvent</name> <op:operator pos:line="6421" pos:column="51">*</op:operator><name pos:line="6421" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6421" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6421" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6423" pos:column="9">virtual <name pos:line="6423" pos:column="17">HRESULT</name> <name pos:line="6423" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6423" pos:column="43">UnadviseChangedLowPriority</name><argument_list pos:line="6423" pos:column="69">( 
            <comment type="block" pos:line="6424" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6424" pos:column="24">IVxTextContentChangedEvent</name> <op:operator pos:line="6424" pos:column="51">*</op:operator><name pos:line="6424" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6424" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6424" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6426" pos:column="9">virtual <name pos:line="6426" pos:column="17">HRESULT</name> <name pos:line="6426" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6426" pos:column="43">AdviseChangedHighPriority</name><argument_list pos:line="6426" pos:column="68">( 
            <comment type="block" pos:line="6427" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6427" pos:column="24">IVxTextContentChangedEvent</name> <op:operator pos:line="6427" pos:column="51">*</op:operator><name pos:line="6427" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6427" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6427" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6429" pos:column="9">virtual <name pos:line="6429" pos:column="17">HRESULT</name> <name pos:line="6429" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6429" pos:column="43">UnadviseChangedHighPriority</name><argument_list pos:line="6429" pos:column="70">( 
            <comment type="block" pos:line="6430" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6430" pos:column="24">IVxTextContentChangedEvent</name> <op:operator pos:line="6430" pos:column="51">*</op:operator><name pos:line="6430" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6430" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6430" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6432" pos:column="9">virtual <name pos:line="6432" pos:column="17">HRESULT</name> <name pos:line="6432" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6432" pos:column="43">AdviseChanging</name><argument_list pos:line="6432" pos:column="57">( 
            <comment type="block" pos:line="6433" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6433" pos:column="24">IVxTextContentChangingEvent</name> <op:operator pos:line="6433" pos:column="52">*</op:operator><name pos:line="6433" pos:column="53">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6433" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6433" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6435" pos:column="9">virtual <name pos:line="6435" pos:column="17">HRESULT</name> <name pos:line="6435" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6435" pos:column="43">UnadviseChanging</name><argument_list pos:line="6435" pos:column="59">( 
            <comment type="block" pos:line="6436" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6436" pos:column="24">IVxTextContentChangingEvent</name> <op:operator pos:line="6436" pos:column="52">*</op:operator><name pos:line="6436" pos:column="53">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6436" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6436" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6438" pos:column="9">virtual <name pos:line="6438" pos:column="17">HRESULT</name> <name pos:line="6438" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6438" pos:column="43">AdvisePostChanged</name><argument_list pos:line="6438" pos:column="60">( 
            <comment type="block" pos:line="6439" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6439" pos:column="24">IVxEventArgsEvent</name> <op:operator pos:line="6439" pos:column="42">*</op:operator><name pos:line="6439" pos:column="43">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6439" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="6439" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="6441" pos:column="9">virtual <name pos:line="6441" pos:column="17">HRESULT</name> <name pos:line="6441" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6441" pos:column="43">UnadvisePostChanged</name><argument_list pos:line="6441" pos:column="62">( 
            <comment type="block" pos:line="6442" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6442" pos:column="24">IVxEventArgsEvent</name> <op:operator pos:line="6442" pos:column="42">*</op:operator><name pos:line="6442" pos:column="43">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6442" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="6442" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="6444" pos:column="9">virtual <name pos:line="6444" pos:column="17">HRESULT</name> <name pos:line="6444" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6444" pos:column="43">AdviseContentTypeChanged</name><argument_list pos:line="6444" pos:column="67">( 
            <comment type="block" pos:line="6445" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6445" pos:column="24">IVxContentTypeChangedEvent</name> <op:operator pos:line="6445" pos:column="51">*</op:operator><name pos:line="6445" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6445" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6445" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6447" pos:column="9">virtual <name pos:line="6447" pos:column="17">HRESULT</name> <name pos:line="6447" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6447" pos:column="43">UnadviseContentTypeChanged</name><argument_list pos:line="6447" pos:column="69">( 
            <comment type="block" pos:line="6448" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6448" pos:column="24">IVxContentTypeChangedEvent</name> <op:operator pos:line="6448" pos:column="51">*</op:operator><name pos:line="6448" pos:column="52">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6448" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6448" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6450" pos:column="9">virtual <name pos:line="6450" pos:column="17">HRESULT</name> <name pos:line="6450" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6450" pos:column="43">ChangeContentType</name><argument_list pos:line="6450" pos:column="60">( 
            <comment type="block" pos:line="6451" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6451" pos:column="24">IVxContentType</name> <op:operator pos:line="6451" pos:column="39">*</op:operator><name pos:line="6451" pos:column="40">pNewContentType</name></expr></argument>,
            <comment type="block" pos:line="6452" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6452" pos:column="24">IUnknown</name> <op:operator pos:line="6452" pos:column="33">*</op:operator><name pos:line="6452" pos:column="34">pEditTag</name></expr></argument>)</argument_list></call> <op:operator pos:line="6452" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="6452" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="6454" pos:column="9">virtual <name pos:line="6454" pos:column="17">HRESULT</name> <name pos:line="6454" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6454" pos:column="43">Insert</name><argument_list pos:line="6454" pos:column="49">( 
            <comment type="block" pos:line="6455" pos:column="13">/* [in] */</comment> <argument pos:line="6455" pos:column="24">int position</argument>,
            <comment type="block" pos:line="6456" pos:column="13">/* [in] */</comment> <argument pos:line="6456" pos:column="24">BSTR text</argument>,
            <comment type="block" pos:line="6457" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6457" pos:column="33">IVxTextSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6457" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6457" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6459" pos:column="9">virtual <name pos:line="6459" pos:column="17">HRESULT</name> <name pos:line="6459" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6459" pos:column="43">Delete</name><argument_list pos:line="6459" pos:column="49">( 
            <comment type="block" pos:line="6460" pos:column="13">/* [in] */</comment> <argument pos:line="6460" pos:column="24">VxSpan deleteSpan</argument>,
            <comment type="block" pos:line="6461" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6461" pos:column="33">IVxTextSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6461" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6461" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6463" pos:column="9">virtual <name pos:line="6463" pos:column="17">HRESULT</name> <name pos:line="6463" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6463" pos:column="43">Replace</name><argument_list pos:line="6463" pos:column="50">( 
            <comment type="block" pos:line="6464" pos:column="13">/* [in] */</comment> <argument pos:line="6464" pos:column="24">VxSpan replaceSpan</argument>,
            <comment type="block" pos:line="6465" pos:column="13">/* [in] */</comment> <argument pos:line="6465" pos:column="24">BSTR replaceWith</argument>,
            <comment type="block" pos:line="6466" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6466" pos:column="33">IVxTextSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6466" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="6466" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="6468" pos:column="9">virtual <name pos:line="6468" pos:column="17">HRESULT</name> <name pos:line="6468" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6468" pos:column="43">IsReadOnly_3</name><argument_list pos:line="6468" pos:column="55">( 
            <comment type="block" pos:line="6469" pos:column="13">/* [in] */</comment> <argument pos:line="6469" pos:column="24">int position</argument>,
            <comment type="block" pos:line="6470" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6470" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="6470" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6470" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6472" pos:column="9">virtual <name pos:line="6472" pos:column="17">HRESULT</name> <name pos:line="6472" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6472" pos:column="43">IsReadOnly_4</name><argument_list pos:line="6472" pos:column="55">( 
            <comment type="block" pos:line="6473" pos:column="13">/* [in] */</comment> <argument pos:line="6473" pos:column="24">int position</argument>,
            <comment type="block" pos:line="6474" pos:column="13">/* [in] */</comment> <argument pos:line="6474" pos:column="24">BOOL isEdit</argument>,
            <comment type="block" pos:line="6475" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6475" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="6475" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6475" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6479" pos:column="1">#<cpp:directive pos:line="6479" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6479" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6481" pos:column="5">typedef <type><struct pos:line="6481" pos:column="13">struct <name pos:line="6481" pos:column="20">IVxTextBufferVtbl</name>
    <block pos:line="6482" pos:column="5">{<public type="default" pos:line="6482" pos:column="6">
        <function_decl><type><name pos:line="6483" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6485" pos:column="9">HRESULT</name></type> ( <name pos:line="6485" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6485" pos:column="37">*</type:modifier><name pos:line="6485" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6485" pos:column="54">( 
            <param><decl><type><name pos:line="6486" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6486" pos:column="27">*</type:modifier></type> <name pos:line="6486" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6487" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6487" pos:column="24">REFIID</name></type> <name pos:line="6487" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="6488" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6489" pos:column="13">__RPC__deref_out</name>  <name pos:line="6489" pos:column="31">void</name> <type:modifier pos:line="6489" pos:column="36">*</type:modifier><type:modifier pos:line="6489" pos:column="37">*</type:modifier></type><name pos:line="6489" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6491" pos:column="9">ULONG</name></type> ( <name pos:line="6491" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6491" pos:column="35">*</type:modifier><name pos:line="6491" pos:column="36">AddRef</name> )<parameter_list pos:line="6491" pos:column="44">( 
            <param><decl><type><name pos:line="6492" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6492" pos:column="27">*</type:modifier></type> <name pos:line="6492" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6494" pos:column="9">ULONG</name></type> ( <name pos:line="6494" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6494" pos:column="35">*</type:modifier><name pos:line="6494" pos:column="36">Release</name> )<parameter_list pos:line="6494" pos:column="45">( 
            <param><decl><type><name pos:line="6495" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6495" pos:column="27">*</type:modifier></type> <name pos:line="6495" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6497" pos:column="9">HRESULT</name></type> ( <name pos:line="6497" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6497" pos:column="37">*</type:modifier><name pos:line="6497" pos:column="38">GetProperties</name> )<parameter_list pos:line="6497" pos:column="53">( 
            <param><decl><type><name pos:line="6498" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6498" pos:column="27">*</type:modifier></type> <name pos:line="6498" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6499" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6499" pos:column="33">IVxPropertyCollection</name> <type:modifier pos:line="6499" pos:column="55">*</type:modifier><type:modifier pos:line="6499" pos:column="56">*</type:modifier></type><name pos:line="6499" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6501" pos:column="9">HRESULT</name></type> ( <name pos:line="6501" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6501" pos:column="37">*</type:modifier><name pos:line="6501" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="6501" pos:column="50">( 
            <param><decl><type><name pos:line="6502" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6502" pos:column="27">*</type:modifier></type> <name pos:line="6502" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6503" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6503" pos:column="24">VxSpan</name></type> <name pos:line="6503" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="6504" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6504" pos:column="33">BOOL</name> <type:modifier pos:line="6504" pos:column="38">*</type:modifier></type><name pos:line="6504" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6506" pos:column="9">HRESULT</name></type> ( <name pos:line="6506" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6506" pos:column="37">*</type:modifier><name pos:line="6506" pos:column="38">IsReadOnly_2</name> )<parameter_list pos:line="6506" pos:column="52">( 
            <param><decl><type><name pos:line="6507" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6507" pos:column="27">*</type:modifier></type> <name pos:line="6507" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6508" pos:column="24">VxSpan</name></type> <name pos:line="6508" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="6509" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6509" pos:column="24">BOOL</name></type> <name pos:line="6509" pos:column="29">isEdit</name></decl></param>,
            <comment type="block" pos:line="6510" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6510" pos:column="33">BOOL</name> <type:modifier pos:line="6510" pos:column="38">*</type:modifier></type><name pos:line="6510" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6512" pos:column="9">HRESULT</name></type> ( <name pos:line="6512" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6512" pos:column="37">*</type:modifier><name pos:line="6512" pos:column="38">GetReadOnlyExtents</name> )<parameter_list pos:line="6512" pos:column="58">( 
            <param><decl><type><name pos:line="6513" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6513" pos:column="27">*</type:modifier></type> <name pos:line="6513" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6514" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6514" pos:column="24">VxSpan</name></type> <name pos:line="6514" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="6515" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6515" pos:column="33">IVxNormalizedSpanCollection</name> <type:modifier pos:line="6515" pos:column="61">*</type:modifier><type:modifier pos:line="6515" pos:column="62">*</type:modifier></type><name pos:line="6515" pos:column="63">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6517" pos:column="9">HRESULT</name></type> ( <name pos:line="6517" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6517" pos:column="37">*</type:modifier><name pos:line="6517" pos:column="38">GetContentType</name> )<parameter_list pos:line="6517" pos:column="54">( 
            <param><decl><type><name pos:line="6518" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6518" pos:column="27">*</type:modifier></type> <name pos:line="6518" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6519" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6519" pos:column="33">IVxContentType</name> <type:modifier pos:line="6519" pos:column="48">*</type:modifier><type:modifier pos:line="6519" pos:column="49">*</type:modifier></type><name pos:line="6519" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6521" pos:column="9">HRESULT</name></type> ( <name pos:line="6521" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6521" pos:column="37">*</type:modifier><name pos:line="6521" pos:column="38">GetCurrentSnapshot</name> )<parameter_list pos:line="6521" pos:column="58">( 
            <param><decl><type><name pos:line="6522" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6522" pos:column="27">*</type:modifier></type> <name pos:line="6522" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6523" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6523" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6523" pos:column="49">*</type:modifier><type:modifier pos:line="6523" pos:column="50">*</type:modifier></type><name pos:line="6523" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6525" pos:column="9">HRESULT</name></type> ( <name pos:line="6525" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6525" pos:column="37">*</type:modifier><name pos:line="6525" pos:column="38">CreateEdit</name> )<parameter_list pos:line="6525" pos:column="50">( 
            <param><decl><type><name pos:line="6526" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6526" pos:column="27">*</type:modifier></type> <name pos:line="6526" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6527" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6527" pos:column="24">VxEditOptions</name></type> <name pos:line="6527" pos:column="38">options</name></decl></param>,
            <comment type="block" pos:line="6528" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6528" pos:column="24">BOOL</name></type> <name pos:line="6528" pos:column="29">reiteratedVersionNumberHasValue</name></decl></param>,
            <comment type="block" pos:line="6529" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6529" pos:column="24">int</name></type> <name pos:line="6529" pos:column="28">reiteratedVersionNumber</name></decl></param>,
            <comment type="block" pos:line="6530" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6530" pos:column="24">IUnknown</name> <type:modifier pos:line="6530" pos:column="33">*</type:modifier></type><name pos:line="6530" pos:column="34">pEditTag</name></decl></param>,
            <comment type="block" pos:line="6531" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6531" pos:column="33">IVxTextEdit</name> <type:modifier pos:line="6531" pos:column="45">*</type:modifier><type:modifier pos:line="6531" pos:column="46">*</type:modifier></type><name pos:line="6531" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6533" pos:column="9">HRESULT</name></type> ( <name pos:line="6533" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6533" pos:column="37">*</type:modifier><name pos:line="6533" pos:column="38">CreateEdit_2</name> )<parameter_list pos:line="6533" pos:column="52">( 
            <param><decl><type><name pos:line="6534" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6534" pos:column="27">*</type:modifier></type> <name pos:line="6534" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6535" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6535" pos:column="33">IVxTextEdit</name> <type:modifier pos:line="6535" pos:column="45">*</type:modifier><type:modifier pos:line="6535" pos:column="46">*</type:modifier></type><name pos:line="6535" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6537" pos:column="9">HRESULT</name></type> ( <name pos:line="6537" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6537" pos:column="37">*</type:modifier><name pos:line="6537" pos:column="38">CreateReadOnlyRegionEdit</name> )<parameter_list pos:line="6537" pos:column="64">( 
            <param><decl><type><name pos:line="6538" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6538" pos:column="27">*</type:modifier></type> <name pos:line="6538" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6539" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6539" pos:column="33">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="6539" pos:column="55">*</type:modifier><type:modifier pos:line="6539" pos:column="56">*</type:modifier></type><name pos:line="6539" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6541" pos:column="9">HRESULT</name></type> ( <name pos:line="6541" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6541" pos:column="37">*</type:modifier><name pos:line="6541" pos:column="38">GetEditInProgress</name> )<parameter_list pos:line="6541" pos:column="57">( 
            <param><decl><type><name pos:line="6542" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6542" pos:column="27">*</type:modifier></type> <name pos:line="6542" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6543" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6543" pos:column="33">BOOL</name> <type:modifier pos:line="6543" pos:column="38">*</type:modifier></type><name pos:line="6543" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6545" pos:column="9">HRESULT</name></type> ( <name pos:line="6545" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6545" pos:column="37">*</type:modifier><name pos:line="6545" pos:column="38">TakeThreadOwnership</name> )<parameter_list pos:line="6545" pos:column="59">( 
            <param><decl><type><name pos:line="6546" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6546" pos:column="27">*</type:modifier></type> <name pos:line="6546" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6548" pos:column="9">HRESULT</name></type> ( <name pos:line="6548" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6548" pos:column="37">*</type:modifier><name pos:line="6548" pos:column="38">CheckEditAccess</name> )<parameter_list pos:line="6548" pos:column="55">( 
            <param><decl><type><name pos:line="6549" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6549" pos:column="27">*</type:modifier></type> <name pos:line="6549" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6550" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6550" pos:column="33">BOOL</name> <type:modifier pos:line="6550" pos:column="38">*</type:modifier></type><name pos:line="6550" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6552" pos:column="9">HRESULT</name></type> ( <name pos:line="6552" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6552" pos:column="37">*</type:modifier><name pos:line="6552" pos:column="38">AdviseReadOnlyRegionsChanged</name> )<parameter_list pos:line="6552" pos:column="68">( 
            <param><decl><type><name pos:line="6553" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6553" pos:column="27">*</type:modifier></type> <name pos:line="6553" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6554" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6554" pos:column="24">IVxSnapshotSpanEvent</name> <type:modifier pos:line="6554" pos:column="45">*</type:modifier></type><name pos:line="6554" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6556" pos:column="9">HRESULT</name></type> ( <name pos:line="6556" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6556" pos:column="37">*</type:modifier><name pos:line="6556" pos:column="38">UnadviseReadOnlyRegionsChanged</name> )<parameter_list pos:line="6556" pos:column="70">( 
            <param><decl><type><name pos:line="6557" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6557" pos:column="27">*</type:modifier></type> <name pos:line="6557" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6558" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6558" pos:column="24">IVxSnapshotSpanEvent</name> <type:modifier pos:line="6558" pos:column="45">*</type:modifier></type><name pos:line="6558" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6560" pos:column="9">HRESULT</name></type> ( <name pos:line="6560" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6560" pos:column="37">*</type:modifier><name pos:line="6560" pos:column="38">AdviseChanged</name> )<parameter_list pos:line="6560" pos:column="53">( 
            <param><decl><type><name pos:line="6561" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6561" pos:column="27">*</type:modifier></type> <name pos:line="6561" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6562" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6562" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="6562" pos:column="51">*</type:modifier></type><name pos:line="6562" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6564" pos:column="9">HRESULT</name></type> ( <name pos:line="6564" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6564" pos:column="37">*</type:modifier><name pos:line="6564" pos:column="38">UnadviseChanged</name> )<parameter_list pos:line="6564" pos:column="55">( 
            <param><decl><type><name pos:line="6565" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6565" pos:column="27">*</type:modifier></type> <name pos:line="6565" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6566" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6566" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="6566" pos:column="51">*</type:modifier></type><name pos:line="6566" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6568" pos:column="9">HRESULT</name></type> ( <name pos:line="6568" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6568" pos:column="37">*</type:modifier><name pos:line="6568" pos:column="38">AdviseChangedLowPriority</name> )<parameter_list pos:line="6568" pos:column="64">( 
            <param><decl><type><name pos:line="6569" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6569" pos:column="27">*</type:modifier></type> <name pos:line="6569" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6570" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6570" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="6570" pos:column="51">*</type:modifier></type><name pos:line="6570" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6572" pos:column="9">HRESULT</name></type> ( <name pos:line="6572" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6572" pos:column="37">*</type:modifier><name pos:line="6572" pos:column="38">UnadviseChangedLowPriority</name> )<parameter_list pos:line="6572" pos:column="66">( 
            <param><decl><type><name pos:line="6573" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6573" pos:column="27">*</type:modifier></type> <name pos:line="6573" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6574" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6574" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="6574" pos:column="51">*</type:modifier></type><name pos:line="6574" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6576" pos:column="9">HRESULT</name></type> ( <name pos:line="6576" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6576" pos:column="37">*</type:modifier><name pos:line="6576" pos:column="38">AdviseChangedHighPriority</name> )<parameter_list pos:line="6576" pos:column="65">( 
            <param><decl><type><name pos:line="6577" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6577" pos:column="27">*</type:modifier></type> <name pos:line="6577" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6578" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6578" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="6578" pos:column="51">*</type:modifier></type><name pos:line="6578" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6580" pos:column="9">HRESULT</name></type> ( <name pos:line="6580" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6580" pos:column="37">*</type:modifier><name pos:line="6580" pos:column="38">UnadviseChangedHighPriority</name> )<parameter_list pos:line="6580" pos:column="67">( 
            <param><decl><type><name pos:line="6581" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6581" pos:column="27">*</type:modifier></type> <name pos:line="6581" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6582" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6582" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="6582" pos:column="51">*</type:modifier></type><name pos:line="6582" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6584" pos:column="9">HRESULT</name></type> ( <name pos:line="6584" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6584" pos:column="37">*</type:modifier><name pos:line="6584" pos:column="38">AdviseChanging</name> )<parameter_list pos:line="6584" pos:column="54">( 
            <param><decl><type><name pos:line="6585" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6585" pos:column="27">*</type:modifier></type> <name pos:line="6585" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6586" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6586" pos:column="24">IVxTextContentChangingEvent</name> <type:modifier pos:line="6586" pos:column="52">*</type:modifier></type><name pos:line="6586" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6588" pos:column="9">HRESULT</name></type> ( <name pos:line="6588" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6588" pos:column="37">*</type:modifier><name pos:line="6588" pos:column="38">UnadviseChanging</name> )<parameter_list pos:line="6588" pos:column="56">( 
            <param><decl><type><name pos:line="6589" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6589" pos:column="27">*</type:modifier></type> <name pos:line="6589" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6590" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6590" pos:column="24">IVxTextContentChangingEvent</name> <type:modifier pos:line="6590" pos:column="52">*</type:modifier></type><name pos:line="6590" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6592" pos:column="9">HRESULT</name></type> ( <name pos:line="6592" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6592" pos:column="37">*</type:modifier><name pos:line="6592" pos:column="38">AdvisePostChanged</name> )<parameter_list pos:line="6592" pos:column="57">( 
            <param><decl><type><name pos:line="6593" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6593" pos:column="27">*</type:modifier></type> <name pos:line="6593" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6594" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6594" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="6594" pos:column="42">*</type:modifier></type><name pos:line="6594" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6596" pos:column="9">HRESULT</name></type> ( <name pos:line="6596" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6596" pos:column="37">*</type:modifier><name pos:line="6596" pos:column="38">UnadvisePostChanged</name> )<parameter_list pos:line="6596" pos:column="59">( 
            <param><decl><type><name pos:line="6597" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6597" pos:column="27">*</type:modifier></type> <name pos:line="6597" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6598" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6598" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="6598" pos:column="42">*</type:modifier></type><name pos:line="6598" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6600" pos:column="9">HRESULT</name></type> ( <name pos:line="6600" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6600" pos:column="37">*</type:modifier><name pos:line="6600" pos:column="38">AdviseContentTypeChanged</name> )<parameter_list pos:line="6600" pos:column="64">( 
            <param><decl><type><name pos:line="6601" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6601" pos:column="27">*</type:modifier></type> <name pos:line="6601" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6602" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6602" pos:column="24">IVxContentTypeChangedEvent</name> <type:modifier pos:line="6602" pos:column="51">*</type:modifier></type><name pos:line="6602" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6604" pos:column="9">HRESULT</name></type> ( <name pos:line="6604" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6604" pos:column="37">*</type:modifier><name pos:line="6604" pos:column="38">UnadviseContentTypeChanged</name> )<parameter_list pos:line="6604" pos:column="66">( 
            <param><decl><type><name pos:line="6605" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6605" pos:column="27">*</type:modifier></type> <name pos:line="6605" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6606" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6606" pos:column="24">IVxContentTypeChangedEvent</name> <type:modifier pos:line="6606" pos:column="51">*</type:modifier></type><name pos:line="6606" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6608" pos:column="9">HRESULT</name></type> ( <name pos:line="6608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6608" pos:column="37">*</type:modifier><name pos:line="6608" pos:column="38">ChangeContentType</name> )<parameter_list pos:line="6608" pos:column="57">( 
            <param><decl><type><name pos:line="6609" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6609" pos:column="27">*</type:modifier></type> <name pos:line="6609" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6610" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6610" pos:column="24">IVxContentType</name> <type:modifier pos:line="6610" pos:column="39">*</type:modifier></type><name pos:line="6610" pos:column="40">pNewContentType</name></decl></param>,
            <comment type="block" pos:line="6611" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6611" pos:column="24">IUnknown</name> <type:modifier pos:line="6611" pos:column="33">*</type:modifier></type><name pos:line="6611" pos:column="34">pEditTag</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6613" pos:column="9">HRESULT</name></type> ( <name pos:line="6613" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6613" pos:column="37">*</type:modifier><name pos:line="6613" pos:column="38">Insert</name> )<parameter_list pos:line="6613" pos:column="46">( 
            <param><decl><type><name pos:line="6614" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6614" pos:column="27">*</type:modifier></type> <name pos:line="6614" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6615" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6615" pos:column="24">int</name></type> <name pos:line="6615" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="6616" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6616" pos:column="24">BSTR</name></type> <name pos:line="6616" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="6617" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6617" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6617" pos:column="49">*</type:modifier><type:modifier pos:line="6617" pos:column="50">*</type:modifier></type><name pos:line="6617" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6619" pos:column="9">HRESULT</name></type> ( <name pos:line="6619" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6619" pos:column="37">*</type:modifier><name pos:line="6619" pos:column="38">Delete</name> )<parameter_list pos:line="6619" pos:column="46">( 
            <param><decl><type><name pos:line="6620" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6620" pos:column="27">*</type:modifier></type> <name pos:line="6620" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6621" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6621" pos:column="24">VxSpan</name></type> <name pos:line="6621" pos:column="31">deleteSpan</name></decl></param>,
            <comment type="block" pos:line="6622" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6622" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6622" pos:column="49">*</type:modifier><type:modifier pos:line="6622" pos:column="50">*</type:modifier></type><name pos:line="6622" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6624" pos:column="9">HRESULT</name></type> ( <name pos:line="6624" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6624" pos:column="37">*</type:modifier><name pos:line="6624" pos:column="38">Replace</name> )<parameter_list pos:line="6624" pos:column="47">( 
            <param><decl><type><name pos:line="6625" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6625" pos:column="27">*</type:modifier></type> <name pos:line="6625" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6626" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6626" pos:column="24">VxSpan</name></type> <name pos:line="6626" pos:column="31">replaceSpan</name></decl></param>,
            <comment type="block" pos:line="6627" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6627" pos:column="24">BSTR</name></type> <name pos:line="6627" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="6628" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6628" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="6628" pos:column="49">*</type:modifier><type:modifier pos:line="6628" pos:column="50">*</type:modifier></type><name pos:line="6628" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6630" pos:column="9">HRESULT</name></type> ( <name pos:line="6630" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6630" pos:column="37">*</type:modifier><name pos:line="6630" pos:column="38">IsReadOnly_3</name> )<parameter_list pos:line="6630" pos:column="52">( 
            <param><decl><type><name pos:line="6631" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6631" pos:column="27">*</type:modifier></type> <name pos:line="6631" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6632" pos:column="24">int</name></type> <name pos:line="6632" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="6633" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6633" pos:column="33">BOOL</name> <type:modifier pos:line="6633" pos:column="38">*</type:modifier></type><name pos:line="6633" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6635" pos:column="9">HRESULT</name></type> ( <name pos:line="6635" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6635" pos:column="37">*</type:modifier><name pos:line="6635" pos:column="38">IsReadOnly_4</name> )<parameter_list pos:line="6635" pos:column="52">( 
            <param><decl><type><name pos:line="6636" pos:column="13">IVxTextBuffer</name> <type:modifier pos:line="6636" pos:column="27">*</type:modifier></type> <name pos:line="6636" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6637" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6637" pos:column="24">int</name></type> <name pos:line="6637" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="6638" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6638" pos:column="24">BOOL</name></type> <name pos:line="6638" pos:column="29">isEdit</name></decl></param>,
            <comment type="block" pos:line="6639" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6639" pos:column="33">BOOL</name> <type:modifier pos:line="6639" pos:column="38">*</type:modifier></type><name pos:line="6639" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6641" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6642" pos:column="7">IVxTextBufferVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6644" pos:column="5">interface</name></type> <name pos:line="6644" pos:column="15">IVxTextBuffer</name>
    <argument_list pos:line="6645" pos:column="5">{
        <argument><expr><name pos:line="6646" pos:column="9">CONST_VTBL</name> struct <name pos:line="6646" pos:column="27">IVxTextBufferVtbl</name> <op:operator pos:line="6646" pos:column="45">*</op:operator><name pos:line="6646" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6651" pos:column="1">#<cpp:directive pos:line="6651" pos:column="2">ifdef</cpp:directive> <name pos:line="6651" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6654" pos:column="1">#<cpp:directive pos:line="6654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6654" pos:column="9">IVxTextBuffer_QueryInterface</name><parameter_list pos:line="6654" pos:column="37">(<param><type><name pos:line="6654" pos:column="38">This</name></type></param>,<param><type><name pos:line="6654" pos:column="43">riid</name></type></param>,<param><type><name pos:line="6654" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6655" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6657" pos:column="1">#<cpp:directive pos:line="6657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6657" pos:column="9">IVxTextBuffer_AddRef</name><parameter_list pos:line="6657" pos:column="29">(<param><type><name pos:line="6657" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6658" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6660" pos:column="1">#<cpp:directive pos:line="6660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6660" pos:column="9">IVxTextBuffer_Release</name><parameter_list pos:line="6660" pos:column="30">(<param><type><name pos:line="6660" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6661" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6664" pos:column="1">#<cpp:directive pos:line="6664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6664" pos:column="9">IVxTextBuffer_GetProperties</name><parameter_list pos:line="6664" pos:column="36">(<param><type><name pos:line="6664" pos:column="37">This</name></type></param>,<param><type><name pos:line="6664" pos:column="42">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6665" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProperties(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="6668" pos:column="1">#<cpp:directive pos:line="6668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6668" pos:column="9">IVxTextBuffer_IsReadOnly</name><parameter_list pos:line="6668" pos:column="33">(<param><type><name pos:line="6668" pos:column="34">This</name></type></param>,<param><type><name pos:line="6668" pos:column="39">span</name></type></param>,<param><type><name pos:line="6668" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6669" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,span,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6671" pos:column="1">#<cpp:directive pos:line="6671" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6671" pos:column="9">IVxTextBuffer_IsReadOnly_2</name><parameter_list pos:line="6671" pos:column="35">(<param><type><name pos:line="6671" pos:column="36">This</name></type></param>,<param><type><name pos:line="6671" pos:column="41">span</name></type></param>,<param><type><name pos:line="6671" pos:column="46">isEdit</name></type></param>,<param><type><name pos:line="6671" pos:column="53">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6672" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_2(This,span,isEdit,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6674" pos:column="1">#<cpp:directive pos:line="6674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6674" pos:column="9">IVxTextBuffer_GetReadOnlyExtents</name><parameter_list pos:line="6674" pos:column="41">(<param><type><name pos:line="6674" pos:column="42">This</name></type></param>,<param><type><name pos:line="6674" pos:column="47">span</name></type></param>,<param><type><name pos:line="6674" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6675" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReadOnlyExtents(This,span,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6677" pos:column="1">#<cpp:directive pos:line="6677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6677" pos:column="9">IVxTextBuffer_GetContentType</name><parameter_list pos:line="6677" pos:column="37">(<param><type><name pos:line="6677" pos:column="38">This</name></type></param>,<param><type><name pos:line="6677" pos:column="43">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6678" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6680" pos:column="1">#<cpp:directive pos:line="6680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6680" pos:column="9">IVxTextBuffer_GetCurrentSnapshot</name><parameter_list pos:line="6680" pos:column="41">(<param><type><name pos:line="6680" pos:column="42">This</name></type></param>,<param><type><name pos:line="6680" pos:column="47">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6681" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6683" pos:column="1">#<cpp:directive pos:line="6683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6683" pos:column="9">IVxTextBuffer_CreateEdit</name><parameter_list pos:line="6683" pos:column="33">(<param><type><name pos:line="6683" pos:column="34">This</name></type></param>,<param><type><name pos:line="6683" pos:column="39">options</name></type></param>,<param><type><name pos:line="6683" pos:column="47">reiteratedVersionNumberHasValue</name></type></param>,<param><type><name pos:line="6683" pos:column="79">reiteratedVersionNumber</name></type></param>,<param><type><name pos:line="6683" pos:column="103">pEditTag</name></type></param>,<param><type><name pos:line="6683" pos:column="112">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6684" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEdit(This,options,reiteratedVersionNumberHasValue,reiteratedVersionNumber,pEditTag,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6686" pos:column="1">#<cpp:directive pos:line="6686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6686" pos:column="9">IVxTextBuffer_CreateEdit_2</name><parameter_list pos:line="6686" pos:column="35">(<param><type><name pos:line="6686" pos:column="36">This</name></type></param>,<param><type><name pos:line="6686" pos:column="41">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6687" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEdit_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6689" pos:column="1">#<cpp:directive pos:line="6689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6689" pos:column="9">IVxTextBuffer_CreateReadOnlyRegionEdit</name><parameter_list pos:line="6689" pos:column="47">(<param><type><name pos:line="6689" pos:column="48">This</name></type></param>,<param><type><name pos:line="6689" pos:column="53">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6690" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateReadOnlyRegionEdit(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6692" pos:column="1">#<cpp:directive pos:line="6692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6692" pos:column="9">IVxTextBuffer_GetEditInProgress</name><parameter_list pos:line="6692" pos:column="40">(<param><type><name pos:line="6692" pos:column="41">This</name></type></param>,<param><type><name pos:line="6692" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6693" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditInProgress(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6695" pos:column="1">#<cpp:directive pos:line="6695" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6695" pos:column="9">IVxTextBuffer_TakeThreadOwnership</name><parameter_list pos:line="6695" pos:column="42">(<param><type><name pos:line="6695" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6696" pos:column="5">( (This)-&gt;lpVtbl -&gt; TakeThreadOwnership(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6698" pos:column="1">#<cpp:directive pos:line="6698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6698" pos:column="9">IVxTextBuffer_CheckEditAccess</name><parameter_list pos:line="6698" pos:column="38">(<param><type><name pos:line="6698" pos:column="39">This</name></type></param>,<param><type><name pos:line="6698" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6699" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckEditAccess(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6701" pos:column="1">#<cpp:directive pos:line="6701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6701" pos:column="9">IVxTextBuffer_AdviseReadOnlyRegionsChanged</name><parameter_list pos:line="6701" pos:column="51">(<param><type><name pos:line="6701" pos:column="52">This</name></type></param>,<param><type><name pos:line="6701" pos:column="57">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6702" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseReadOnlyRegionsChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6704" pos:column="1">#<cpp:directive pos:line="6704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6704" pos:column="9">IVxTextBuffer_UnadviseReadOnlyRegionsChanged</name><parameter_list pos:line="6704" pos:column="53">(<param><type><name pos:line="6704" pos:column="54">This</name></type></param>,<param><type><name pos:line="6704" pos:column="59">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6705" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseReadOnlyRegionsChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6707" pos:column="1">#<cpp:directive pos:line="6707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6707" pos:column="9">IVxTextBuffer_AdviseChanged</name><parameter_list pos:line="6707" pos:column="36">(<param><type><name pos:line="6707" pos:column="37">This</name></type></param>,<param><type><name pos:line="6707" pos:column="42">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6708" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6710" pos:column="1">#<cpp:directive pos:line="6710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6710" pos:column="9">IVxTextBuffer_UnadviseChanged</name><parameter_list pos:line="6710" pos:column="38">(<param><type><name pos:line="6710" pos:column="39">This</name></type></param>,<param><type><name pos:line="6710" pos:column="44">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6711" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6713" pos:column="1">#<cpp:directive pos:line="6713" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6713" pos:column="9">IVxTextBuffer_AdviseChangedLowPriority</name><parameter_list pos:line="6713" pos:column="47">(<param><type><name pos:line="6713" pos:column="48">This</name></type></param>,<param><type><name pos:line="6713" pos:column="53">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6714" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChangedLowPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6716" pos:column="1">#<cpp:directive pos:line="6716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6716" pos:column="9">IVxTextBuffer_UnadviseChangedLowPriority</name><parameter_list pos:line="6716" pos:column="49">(<param><type><name pos:line="6716" pos:column="50">This</name></type></param>,<param><type><name pos:line="6716" pos:column="55">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6717" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChangedLowPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6719" pos:column="1">#<cpp:directive pos:line="6719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6719" pos:column="9">IVxTextBuffer_AdviseChangedHighPriority</name><parameter_list pos:line="6719" pos:column="48">(<param><type><name pos:line="6719" pos:column="49">This</name></type></param>,<param><type><name pos:line="6719" pos:column="54">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6720" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChangedHighPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6722" pos:column="1">#<cpp:directive pos:line="6722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6722" pos:column="9">IVxTextBuffer_UnadviseChangedHighPriority</name><parameter_list pos:line="6722" pos:column="50">(<param><type><name pos:line="6722" pos:column="51">This</name></type></param>,<param><type><name pos:line="6722" pos:column="56">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6723" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChangedHighPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6725" pos:column="1">#<cpp:directive pos:line="6725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6725" pos:column="9">IVxTextBuffer_AdviseChanging</name><parameter_list pos:line="6725" pos:column="37">(<param><type><name pos:line="6725" pos:column="38">This</name></type></param>,<param><type><name pos:line="6725" pos:column="43">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6726" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChanging(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6728" pos:column="1">#<cpp:directive pos:line="6728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6728" pos:column="9">IVxTextBuffer_UnadviseChanging</name><parameter_list pos:line="6728" pos:column="39">(<param><type><name pos:line="6728" pos:column="40">This</name></type></param>,<param><type><name pos:line="6728" pos:column="45">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6729" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChanging(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6731" pos:column="1">#<cpp:directive pos:line="6731" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6731" pos:column="9">IVxTextBuffer_AdvisePostChanged</name><parameter_list pos:line="6731" pos:column="40">(<param><type><name pos:line="6731" pos:column="41">This</name></type></param>,<param><type><name pos:line="6731" pos:column="46">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6732" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdvisePostChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6734" pos:column="1">#<cpp:directive pos:line="6734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6734" pos:column="9">IVxTextBuffer_UnadvisePostChanged</name><parameter_list pos:line="6734" pos:column="42">(<param><type><name pos:line="6734" pos:column="43">This</name></type></param>,<param><type><name pos:line="6734" pos:column="48">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6735" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadvisePostChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6737" pos:column="1">#<cpp:directive pos:line="6737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6737" pos:column="9">IVxTextBuffer_AdviseContentTypeChanged</name><parameter_list pos:line="6737" pos:column="47">(<param><type><name pos:line="6737" pos:column="48">This</name></type></param>,<param><type><name pos:line="6737" pos:column="53">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6738" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6740" pos:column="1">#<cpp:directive pos:line="6740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6740" pos:column="9">IVxTextBuffer_UnadviseContentTypeChanged</name><parameter_list pos:line="6740" pos:column="49">(<param><type><name pos:line="6740" pos:column="50">This</name></type></param>,<param><type><name pos:line="6740" pos:column="55">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6741" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6743" pos:column="1">#<cpp:directive pos:line="6743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6743" pos:column="9">IVxTextBuffer_ChangeContentType</name><parameter_list pos:line="6743" pos:column="40">(<param><type><name pos:line="6743" pos:column="41">This</name></type></param>,<param><type><name pos:line="6743" pos:column="46">pNewContentType</name></type></param>,<param><type><name pos:line="6743" pos:column="62">pEditTag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6744" pos:column="5">( (This)-&gt;lpVtbl -&gt; ChangeContentType(This,pNewContentType,pEditTag) )</cpp:value></cpp:define> 

<cpp:define pos:line="6746" pos:column="1">#<cpp:directive pos:line="6746" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6746" pos:column="9">IVxTextBuffer_Insert</name><parameter_list pos:line="6746" pos:column="29">(<param><type><name pos:line="6746" pos:column="30">This</name></type></param>,<param><type><name pos:line="6746" pos:column="35">position</name></type></param>,<param><type><name pos:line="6746" pos:column="44">text</name></type></param>,<param><type><name pos:line="6746" pos:column="49">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6747" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert(This,position,text,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6749" pos:column="1">#<cpp:directive pos:line="6749" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6749" pos:column="9">IVxTextBuffer_Delete</name><parameter_list pos:line="6749" pos:column="29">(<param><type><name pos:line="6749" pos:column="30">This</name></type></param>,<param><type><name pos:line="6749" pos:column="35">deleteSpan</name></type></param>,<param><type><name pos:line="6749" pos:column="46">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6750" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,deleteSpan,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6752" pos:column="1">#<cpp:directive pos:line="6752" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6752" pos:column="9">IVxTextBuffer_Replace</name><parameter_list pos:line="6752" pos:column="30">(<param><type><name pos:line="6752" pos:column="31">This</name></type></param>,<param><type><name pos:line="6752" pos:column="36">replaceSpan</name></type></param>,<param><type><name pos:line="6752" pos:column="48">replaceWith</name></type></param>,<param><type><name pos:line="6752" pos:column="60">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6753" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace(This,replaceSpan,replaceWith,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6755" pos:column="1">#<cpp:directive pos:line="6755" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6755" pos:column="9">IVxTextBuffer_IsReadOnly_3</name><parameter_list pos:line="6755" pos:column="35">(<param><type><name pos:line="6755" pos:column="36">This</name></type></param>,<param><type><name pos:line="6755" pos:column="41">position</name></type></param>,<param><type><name pos:line="6755" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6756" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_3(This,position,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6758" pos:column="1">#<cpp:directive pos:line="6758" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6758" pos:column="9">IVxTextBuffer_IsReadOnly_4</name><parameter_list pos:line="6758" pos:column="35">(<param><type><name pos:line="6758" pos:column="36">This</name></type></param>,<param><type><name pos:line="6758" pos:column="41">position</name></type></param>,<param><type><name pos:line="6758" pos:column="50">isEdit</name></type></param>,<param><type><name pos:line="6758" pos:column="57">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6759" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_4(This,position,isEdit,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6761" pos:column="1">#<cpp:directive pos:line="6761" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6761" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6764" pos:column="1">#<cpp:directive pos:line="6764" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6764" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6769" pos:column="1">#<cpp:directive pos:line="6769" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6769" pos:column="9">/* __IVxTextBuffer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6772" pos:column="1">#<cpp:directive pos:line="6772" pos:column="2">ifndef</cpp:directive> <name pos:line="6772" pos:column="9">__IVxTextBufferFactoryService_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6773" pos:column="1">#<cpp:directive pos:line="6773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6773" pos:column="9">__IVxTextBufferFactoryService_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6775" pos:column="1">/* interface IVxTextBufferFactoryService */</comment>
<comment type="block" pos:line="6776" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6779" pos:column="1">EXTERN_C</name> <specifier pos:line="6779" pos:column="10">const</specifier> <name pos:line="6779" pos:column="16">IID</name></type> <name pos:line="6779" pos:column="20">IID_IVxTextBufferFactoryService</name></decl>;</decl_stmt>

<cpp:if pos:line="6781" pos:column="1">#<cpp:directive pos:line="6781" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6781" pos:column="5">defined</name><argument_list pos:line="6781" pos:column="12">(<argument><expr><name pos:line="6781" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6781" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6781" pos:column="29">!</op:operator><call><name pos:line="6781" pos:column="30">defined</name><argument_list pos:line="6781" pos:column="37">(<argument><expr><name pos:line="6781" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6783" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6783" pos:column="19">(<argument pos:line="6783" pos:column="20">"a8f4abb4-783f-462b-b5ee-384e63e63f5b"</argument>)</argument_list></macro>
    <label><name pos:line="6784" pos:column="5">IVxTextBufferFactoryService</name> :</label> <expr_stmt><expr pos:line="6784" pos:column="35">public <name pos:line="6784" pos:column="42">IUnknown</name>
    <block pos:line="6785" pos:column="5">{
    <expr pos:line="6786" pos:column="5">public<op:operator pos:line="6786" pos:column="11">:</op:operator>
        virtual <name pos:line="6787" pos:column="17">HRESULT</name> <name pos:line="6787" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6787" pos:column="43">GetTextContentType</name><argument_list pos:line="6787" pos:column="61">( 
            <comment type="block" pos:line="6788" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6788" pos:column="33">IVxContentType</name> <op:operator pos:line="6788" pos:column="48">*</op:operator><op:operator pos:line="6788" pos:column="49">*</op:operator><name pos:line="6788" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6788" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6788" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6790" pos:column="9">virtual <name pos:line="6790" pos:column="17">HRESULT</name> <name pos:line="6790" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6790" pos:column="43">GetPlaintextContentType</name><argument_list pos:line="6790" pos:column="66">( 
            <comment type="block" pos:line="6791" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6791" pos:column="33">IVxContentType</name> <op:operator pos:line="6791" pos:column="48">*</op:operator><op:operator pos:line="6791" pos:column="49">*</op:operator><name pos:line="6791" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6791" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6791" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6793" pos:column="9">virtual <name pos:line="6793" pos:column="17">HRESULT</name> <name pos:line="6793" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6793" pos:column="43">GetInertContentType</name><argument_list pos:line="6793" pos:column="62">( 
            <comment type="block" pos:line="6794" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6794" pos:column="33">IVxContentType</name> <op:operator pos:line="6794" pos:column="48">*</op:operator><op:operator pos:line="6794" pos:column="49">*</op:operator><name pos:line="6794" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6794" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="6794" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="6796" pos:column="9">virtual <name pos:line="6796" pos:column="17">HRESULT</name> <name pos:line="6796" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6796" pos:column="43">CreateTextBuffer</name><argument_list pos:line="6796" pos:column="59">( 
            <comment type="block" pos:line="6797" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6797" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="6797" pos:column="47">*</op:operator><op:operator pos:line="6797" pos:column="48">*</op:operator><name pos:line="6797" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6797" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="6797" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="6799" pos:column="9">virtual <name pos:line="6799" pos:column="17">HRESULT</name> <name pos:line="6799" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6799" pos:column="43">CreateTextBuffer_2</name><argument_list pos:line="6799" pos:column="61">( 
            <comment type="block" pos:line="6800" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6800" pos:column="24">IVxContentType</name> <op:operator pos:line="6800" pos:column="39">*</op:operator><name pos:line="6800" pos:column="40">pContentType</name></expr></argument>,
            <comment type="block" pos:line="6801" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6801" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="6801" pos:column="47">*</op:operator><op:operator pos:line="6801" pos:column="48">*</op:operator><name pos:line="6801" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6801" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="6801" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="6803" pos:column="9">virtual <name pos:line="6803" pos:column="17">HRESULT</name> <name pos:line="6803" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6803" pos:column="43">CreateTextBuffer_3</name><argument_list pos:line="6803" pos:column="61">( 
            <comment type="block" pos:line="6804" pos:column="13">/* [in] */</comment> <argument pos:line="6804" pos:column="24">BSTR text</argument>,
            <comment type="block" pos:line="6805" pos:column="13">/* [in] */</comment> <argument pos:line="6805" pos:column="24">IVxContentType *pContentType</argument>,
            <comment type="block" pos:line="6806" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6806" pos:column="33">IVxTextBuffer **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="6806" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="6806" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="6808" pos:column="9">virtual <name pos:line="6808" pos:column="17">HRESULT</name> <name pos:line="6808" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6808" pos:column="43">CreateTextBuffer_4</name><argument_list pos:line="6808" pos:column="61">( 
            <comment type="block" pos:line="6809" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6809" pos:column="24">IUnknown</name> <op:operator pos:line="6809" pos:column="33">*</op:operator><name pos:line="6809" pos:column="34">pReader</name></expr></argument>,
            <comment type="block" pos:line="6810" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6810" pos:column="24">IVxContentType</name> <op:operator pos:line="6810" pos:column="39">*</op:operator><name pos:line="6810" pos:column="40">pContentType</name></expr></argument>,
            <comment type="block" pos:line="6811" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6811" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="6811" pos:column="47">*</op:operator><op:operator pos:line="6811" pos:column="48">*</op:operator><name pos:line="6811" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6811" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="6811" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="6813" pos:column="9">virtual <name pos:line="6813" pos:column="17">HRESULT</name> <name pos:line="6813" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6813" pos:column="43">AdviseTextBufferCreated</name><argument_list pos:line="6813" pos:column="66">( 
            <comment type="block" pos:line="6814" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6814" pos:column="24">IVxTextBufferCreatedEvent</name> <op:operator pos:line="6814" pos:column="50">*</op:operator><name pos:line="6814" pos:column="51">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6814" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="6814" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="6816" pos:column="9">virtual <name pos:line="6816" pos:column="17">HRESULT</name> <name pos:line="6816" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6816" pos:column="43">UnadviseTextBufferCreated</name><argument_list pos:line="6816" pos:column="68">( 
            <comment type="block" pos:line="6817" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="6817" pos:column="24">IVxTextBufferCreatedEvent</name> <op:operator pos:line="6817" pos:column="50">*</op:operator><name pos:line="6817" pos:column="51">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="6817" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="6817" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6821" pos:column="1">#<cpp:directive pos:line="6821" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6821" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6823" pos:column="5">typedef <type><struct pos:line="6823" pos:column="13">struct <name pos:line="6823" pos:column="20">IVxTextBufferFactoryServiceVtbl</name>
    <block pos:line="6824" pos:column="5">{<public type="default" pos:line="6824" pos:column="6">
        <function_decl><type><name pos:line="6825" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6827" pos:column="9">HRESULT</name></type> ( <name pos:line="6827" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6827" pos:column="37">*</type:modifier><name pos:line="6827" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6827" pos:column="54">( 
            <param><decl><type><name pos:line="6828" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6828" pos:column="41">*</type:modifier></type> <name pos:line="6828" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6829" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6829" pos:column="24">REFIID</name></type> <name pos:line="6829" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="6830" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6831" pos:column="13">__RPC__deref_out</name>  <name pos:line="6831" pos:column="31">void</name> <type:modifier pos:line="6831" pos:column="36">*</type:modifier><type:modifier pos:line="6831" pos:column="37">*</type:modifier></type><name pos:line="6831" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6833" pos:column="9">ULONG</name></type> ( <name pos:line="6833" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6833" pos:column="35">*</type:modifier><name pos:line="6833" pos:column="36">AddRef</name> )<parameter_list pos:line="6833" pos:column="44">( 
            <param><decl><type><name pos:line="6834" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6834" pos:column="41">*</type:modifier></type> <name pos:line="6834" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6836" pos:column="9">ULONG</name></type> ( <name pos:line="6836" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6836" pos:column="35">*</type:modifier><name pos:line="6836" pos:column="36">Release</name> )<parameter_list pos:line="6836" pos:column="45">( 
            <param><decl><type><name pos:line="6837" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6837" pos:column="41">*</type:modifier></type> <name pos:line="6837" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6839" pos:column="9">HRESULT</name></type> ( <name pos:line="6839" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6839" pos:column="37">*</type:modifier><name pos:line="6839" pos:column="38">GetTextContentType</name> )<parameter_list pos:line="6839" pos:column="58">( 
            <param><decl><type><name pos:line="6840" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6840" pos:column="41">*</type:modifier></type> <name pos:line="6840" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6841" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6841" pos:column="33">IVxContentType</name> <type:modifier pos:line="6841" pos:column="48">*</type:modifier><type:modifier pos:line="6841" pos:column="49">*</type:modifier></type><name pos:line="6841" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6843" pos:column="9">HRESULT</name></type> ( <name pos:line="6843" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6843" pos:column="37">*</type:modifier><name pos:line="6843" pos:column="38">GetPlaintextContentType</name> )<parameter_list pos:line="6843" pos:column="63">( 
            <param><decl><type><name pos:line="6844" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6844" pos:column="41">*</type:modifier></type> <name pos:line="6844" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6845" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6845" pos:column="33">IVxContentType</name> <type:modifier pos:line="6845" pos:column="48">*</type:modifier><type:modifier pos:line="6845" pos:column="49">*</type:modifier></type><name pos:line="6845" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6847" pos:column="9">HRESULT</name></type> ( <name pos:line="6847" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6847" pos:column="37">*</type:modifier><name pos:line="6847" pos:column="38">GetInertContentType</name> )<parameter_list pos:line="6847" pos:column="59">( 
            <param><decl><type><name pos:line="6848" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6848" pos:column="41">*</type:modifier></type> <name pos:line="6848" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6849" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6849" pos:column="33">IVxContentType</name> <type:modifier pos:line="6849" pos:column="48">*</type:modifier><type:modifier pos:line="6849" pos:column="49">*</type:modifier></type><name pos:line="6849" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6851" pos:column="9">HRESULT</name></type> ( <name pos:line="6851" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6851" pos:column="37">*</type:modifier><name pos:line="6851" pos:column="38">CreateTextBuffer</name> )<parameter_list pos:line="6851" pos:column="56">( 
            <param><decl><type><name pos:line="6852" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6852" pos:column="41">*</type:modifier></type> <name pos:line="6852" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6853" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6853" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="6853" pos:column="47">*</type:modifier><type:modifier pos:line="6853" pos:column="48">*</type:modifier></type><name pos:line="6853" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6855" pos:column="9">HRESULT</name></type> ( <name pos:line="6855" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6855" pos:column="37">*</type:modifier><name pos:line="6855" pos:column="38">CreateTextBuffer_2</name> )<parameter_list pos:line="6855" pos:column="58">( 
            <param><decl><type><name pos:line="6856" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6856" pos:column="41">*</type:modifier></type> <name pos:line="6856" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6857" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6857" pos:column="24">IVxContentType</name> <type:modifier pos:line="6857" pos:column="39">*</type:modifier></type><name pos:line="6857" pos:column="40">pContentType</name></decl></param>,
            <comment type="block" pos:line="6858" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6858" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="6858" pos:column="47">*</type:modifier><type:modifier pos:line="6858" pos:column="48">*</type:modifier></type><name pos:line="6858" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6860" pos:column="9">HRESULT</name></type> ( <name pos:line="6860" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6860" pos:column="37">*</type:modifier><name pos:line="6860" pos:column="38">CreateTextBuffer_3</name> )<parameter_list pos:line="6860" pos:column="58">( 
            <param><decl><type><name pos:line="6861" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6861" pos:column="41">*</type:modifier></type> <name pos:line="6861" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6862" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6862" pos:column="24">BSTR</name></type> <name pos:line="6862" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="6863" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6863" pos:column="24">IVxContentType</name> <type:modifier pos:line="6863" pos:column="39">*</type:modifier></type><name pos:line="6863" pos:column="40">pContentType</name></decl></param>,
            <comment type="block" pos:line="6864" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6864" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="6864" pos:column="47">*</type:modifier><type:modifier pos:line="6864" pos:column="48">*</type:modifier></type><name pos:line="6864" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6866" pos:column="9">HRESULT</name></type> ( <name pos:line="6866" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6866" pos:column="37">*</type:modifier><name pos:line="6866" pos:column="38">CreateTextBuffer_4</name> )<parameter_list pos:line="6866" pos:column="58">( 
            <param><decl><type><name pos:line="6867" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6867" pos:column="41">*</type:modifier></type> <name pos:line="6867" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6868" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6868" pos:column="24">IUnknown</name> <type:modifier pos:line="6868" pos:column="33">*</type:modifier></type><name pos:line="6868" pos:column="34">pReader</name></decl></param>,
            <comment type="block" pos:line="6869" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6869" pos:column="24">IVxContentType</name> <type:modifier pos:line="6869" pos:column="39">*</type:modifier></type><name pos:line="6869" pos:column="40">pContentType</name></decl></param>,
            <comment type="block" pos:line="6870" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6870" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="6870" pos:column="47">*</type:modifier><type:modifier pos:line="6870" pos:column="48">*</type:modifier></type><name pos:line="6870" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6872" pos:column="9">HRESULT</name></type> ( <name pos:line="6872" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6872" pos:column="37">*</type:modifier><name pos:line="6872" pos:column="38">AdviseTextBufferCreated</name> )<parameter_list pos:line="6872" pos:column="63">( 
            <param><decl><type><name pos:line="6873" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6873" pos:column="41">*</type:modifier></type> <name pos:line="6873" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6874" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6874" pos:column="24">IVxTextBufferCreatedEvent</name> <type:modifier pos:line="6874" pos:column="50">*</type:modifier></type><name pos:line="6874" pos:column="51">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6876" pos:column="9">HRESULT</name></type> ( <name pos:line="6876" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6876" pos:column="37">*</type:modifier><name pos:line="6876" pos:column="38">UnadviseTextBufferCreated</name> )<parameter_list pos:line="6876" pos:column="65">( 
            <param><decl><type><name pos:line="6877" pos:column="13">IVxTextBufferFactoryService</name> <type:modifier pos:line="6877" pos:column="41">*</type:modifier></type> <name pos:line="6877" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="6878" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6878" pos:column="24">IVxTextBufferCreatedEvent</name> <type:modifier pos:line="6878" pos:column="50">*</type:modifier></type><name pos:line="6878" pos:column="51">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6880" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6881" pos:column="7">IVxTextBufferFactoryServiceVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6883" pos:column="5">interface</name></type> <name pos:line="6883" pos:column="15">IVxTextBufferFactoryService</name>
    <argument_list pos:line="6884" pos:column="5">{
        <argument><expr><name pos:line="6885" pos:column="9">CONST_VTBL</name> struct <name pos:line="6885" pos:column="27">IVxTextBufferFactoryServiceVtbl</name> <op:operator pos:line="6885" pos:column="59">*</op:operator><name pos:line="6885" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6890" pos:column="1">#<cpp:directive pos:line="6890" pos:column="2">ifdef</cpp:directive> <name pos:line="6890" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6893" pos:column="1">#<cpp:directive pos:line="6893" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6893" pos:column="9">IVxTextBufferFactoryService_QueryInterface</name><parameter_list pos:line="6893" pos:column="51">(<param><type><name pos:line="6893" pos:column="52">This</name></type></param>,<param><type><name pos:line="6893" pos:column="57">riid</name></type></param>,<param><type><name pos:line="6893" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6894" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6896" pos:column="1">#<cpp:directive pos:line="6896" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6896" pos:column="9">IVxTextBufferFactoryService_AddRef</name><parameter_list pos:line="6896" pos:column="43">(<param><type><name pos:line="6896" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6897" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6899" pos:column="1">#<cpp:directive pos:line="6899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6899" pos:column="9">IVxTextBufferFactoryService_Release</name><parameter_list pos:line="6899" pos:column="44">(<param><type><name pos:line="6899" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6900" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6903" pos:column="1">#<cpp:directive pos:line="6903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6903" pos:column="9">IVxTextBufferFactoryService_GetTextContentType</name><parameter_list pos:line="6903" pos:column="55">(<param><type><name pos:line="6903" pos:column="56">This</name></type></param>,<param><type><name pos:line="6903" pos:column="61">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6904" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6906" pos:column="1">#<cpp:directive pos:line="6906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6906" pos:column="9">IVxTextBufferFactoryService_GetPlaintextContentType</name><parameter_list pos:line="6906" pos:column="60">(<param><type><name pos:line="6906" pos:column="61">This</name></type></param>,<param><type><name pos:line="6906" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6907" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPlaintextContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6909" pos:column="1">#<cpp:directive pos:line="6909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6909" pos:column="9">IVxTextBufferFactoryService_GetInertContentType</name><parameter_list pos:line="6909" pos:column="56">(<param><type><name pos:line="6909" pos:column="57">This</name></type></param>,<param><type><name pos:line="6909" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6910" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInertContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6912" pos:column="1">#<cpp:directive pos:line="6912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6912" pos:column="9">IVxTextBufferFactoryService_CreateTextBuffer</name><parameter_list pos:line="6912" pos:column="53">(<param><type><name pos:line="6912" pos:column="54">This</name></type></param>,<param><type><name pos:line="6912" pos:column="59">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6913" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6915" pos:column="1">#<cpp:directive pos:line="6915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6915" pos:column="9">IVxTextBufferFactoryService_CreateTextBuffer_2</name><parameter_list pos:line="6915" pos:column="55">(<param><type><name pos:line="6915" pos:column="56">This</name></type></param>,<param><type><name pos:line="6915" pos:column="61">pContentType</name></type></param>,<param><type><name pos:line="6915" pos:column="74">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6916" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextBuffer_2(This,pContentType,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6918" pos:column="1">#<cpp:directive pos:line="6918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6918" pos:column="9">IVxTextBufferFactoryService_CreateTextBuffer_3</name><parameter_list pos:line="6918" pos:column="55">(<param><type><name pos:line="6918" pos:column="56">This</name></type></param>,<param><type><name pos:line="6918" pos:column="61">text</name></type></param>,<param><type><name pos:line="6918" pos:column="66">pContentType</name></type></param>,<param><type><name pos:line="6918" pos:column="79">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6919" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextBuffer_3(This,text,pContentType,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6921" pos:column="1">#<cpp:directive pos:line="6921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6921" pos:column="9">IVxTextBufferFactoryService_CreateTextBuffer_4</name><parameter_list pos:line="6921" pos:column="55">(<param><type><name pos:line="6921" pos:column="56">This</name></type></param>,<param><type><name pos:line="6921" pos:column="61">pReader</name></type></param>,<param><type><name pos:line="6921" pos:column="69">pContentType</name></type></param>,<param><type><name pos:line="6921" pos:column="82">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6922" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextBuffer_4(This,pReader,pContentType,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="6924" pos:column="1">#<cpp:directive pos:line="6924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6924" pos:column="9">IVxTextBufferFactoryService_AdviseTextBufferCreated</name><parameter_list pos:line="6924" pos:column="60">(<param><type><name pos:line="6924" pos:column="61">This</name></type></param>,<param><type><name pos:line="6924" pos:column="66">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6925" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseTextBufferCreated(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="6927" pos:column="1">#<cpp:directive pos:line="6927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6927" pos:column="9">IVxTextBufferFactoryService_UnadviseTextBufferCreated</name><parameter_list pos:line="6927" pos:column="62">(<param><type><name pos:line="6927" pos:column="63">This</name></type></param>,<param><type><name pos:line="6927" pos:column="68">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6928" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseTextBufferCreated(This,pValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6930" pos:column="1">#<cpp:directive pos:line="6930" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6930" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6933" pos:column="1">#<cpp:directive pos:line="6933" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6933" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6938" pos:column="1">#<cpp:directive pos:line="6938" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6938" pos:column="9">/* __IVxTextBufferFactoryService_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6941" pos:column="1">#<cpp:directive pos:line="6941" pos:column="2">ifndef</cpp:directive> <name pos:line="6941" pos:column="9">__IVxTextChange_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6942" pos:column="1">#<cpp:directive pos:line="6942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6942" pos:column="9">__IVxTextChange_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6944" pos:column="1">/* interface IVxTextChange */</comment>
<comment type="block" pos:line="6945" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6948" pos:column="1">EXTERN_C</name> <specifier pos:line="6948" pos:column="10">const</specifier> <name pos:line="6948" pos:column="16">IID</name></type> <name pos:line="6948" pos:column="20">IID_IVxTextChange</name></decl>;</decl_stmt>

<cpp:if pos:line="6950" pos:column="1">#<cpp:directive pos:line="6950" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6950" pos:column="5">defined</name><argument_list pos:line="6950" pos:column="12">(<argument><expr><name pos:line="6950" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6950" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6950" pos:column="29">!</op:operator><call><name pos:line="6950" pos:column="30">defined</name><argument_list pos:line="6950" pos:column="37">(<argument><expr><name pos:line="6950" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6952" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6952" pos:column="19">(<argument pos:line="6952" pos:column="20">"9b3001b6-bc6d-4dfc-9b7e-0e6f2c776d8e"</argument>)</argument_list></macro>
    <label><name pos:line="6953" pos:column="5">IVxTextChange</name> :</label> <expr_stmt><expr pos:line="6953" pos:column="21">public <name pos:line="6953" pos:column="28">IUnknown</name>
    <block pos:line="6954" pos:column="5">{
    <expr pos:line="6955" pos:column="5">public<op:operator pos:line="6955" pos:column="11">:</op:operator>
        virtual <name pos:line="6956" pos:column="17">HRESULT</name> <name pos:line="6956" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6956" pos:column="43">GetOldSpan</name><argument_list pos:line="6956" pos:column="53">( 
            <comment type="block" pos:line="6957" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6957" pos:column="33">VxSpan</name> <op:operator pos:line="6957" pos:column="40">*</op:operator><name pos:line="6957" pos:column="41">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6957" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="6957" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="6959" pos:column="9">virtual <name pos:line="6959" pos:column="17">HRESULT</name> <name pos:line="6959" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6959" pos:column="43">GetNewSpan</name><argument_list pos:line="6959" pos:column="53">( 
            <comment type="block" pos:line="6960" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6960" pos:column="33">VxSpan</name> <op:operator pos:line="6960" pos:column="40">*</op:operator><name pos:line="6960" pos:column="41">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6960" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="6960" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="6962" pos:column="9">virtual <name pos:line="6962" pos:column="17">HRESULT</name> <name pos:line="6962" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6962" pos:column="43">GetOldPosition</name><argument_list pos:line="6962" pos:column="57">( 
            <comment type="block" pos:line="6963" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6963" pos:column="33">int</name> <op:operator pos:line="6963" pos:column="37">*</op:operator><name pos:line="6963" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6963" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6963" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6965" pos:column="9">virtual <name pos:line="6965" pos:column="17">HRESULT</name> <name pos:line="6965" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6965" pos:column="43">GetNewPosition</name><argument_list pos:line="6965" pos:column="57">( 
            <comment type="block" pos:line="6966" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6966" pos:column="33">int</name> <op:operator pos:line="6966" pos:column="37">*</op:operator><name pos:line="6966" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6966" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6966" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6968" pos:column="9">virtual <name pos:line="6968" pos:column="17">HRESULT</name> <name pos:line="6968" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6968" pos:column="43">GetDelta</name><argument_list pos:line="6968" pos:column="51">( 
            <comment type="block" pos:line="6969" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6969" pos:column="33">int</name> <op:operator pos:line="6969" pos:column="37">*</op:operator><name pos:line="6969" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6969" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6969" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6971" pos:column="9">virtual <name pos:line="6971" pos:column="17">HRESULT</name> <name pos:line="6971" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6971" pos:column="43">GetOldEnd</name><argument_list pos:line="6971" pos:column="52">( 
            <comment type="block" pos:line="6972" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6972" pos:column="33">int</name> <op:operator pos:line="6972" pos:column="37">*</op:operator><name pos:line="6972" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6972" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6972" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6974" pos:column="9">virtual <name pos:line="6974" pos:column="17">HRESULT</name> <name pos:line="6974" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6974" pos:column="43">GetNewEnd</name><argument_list pos:line="6974" pos:column="52">( 
            <comment type="block" pos:line="6975" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6975" pos:column="33">int</name> <op:operator pos:line="6975" pos:column="37">*</op:operator><name pos:line="6975" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6975" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6975" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6977" pos:column="9">virtual <name pos:line="6977" pos:column="17">HRESULT</name> <name pos:line="6977" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6977" pos:column="43">GetOldText</name><argument_list pos:line="6977" pos:column="53">( 
            <comment type="block" pos:line="6978" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6978" pos:column="33">BSTR</name> <op:operator pos:line="6978" pos:column="38">*</op:operator><name pos:line="6978" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6978" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6978" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6980" pos:column="9">virtual <name pos:line="6980" pos:column="17">HRESULT</name> <name pos:line="6980" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6980" pos:column="43">GetNewText</name><argument_list pos:line="6980" pos:column="53">( 
            <comment type="block" pos:line="6981" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6981" pos:column="33">BSTR</name> <op:operator pos:line="6981" pos:column="38">*</op:operator><name pos:line="6981" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6981" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="6981" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="6983" pos:column="9">virtual <name pos:line="6983" pos:column="17">HRESULT</name> <name pos:line="6983" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6983" pos:column="43">GetOldLength</name><argument_list pos:line="6983" pos:column="55">( 
            <comment type="block" pos:line="6984" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6984" pos:column="33">int</name> <op:operator pos:line="6984" pos:column="37">*</op:operator><name pos:line="6984" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6984" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6984" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6986" pos:column="9">virtual <name pos:line="6986" pos:column="17">HRESULT</name> <name pos:line="6986" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6986" pos:column="43">GetNewLength</name><argument_list pos:line="6986" pos:column="55">( 
            <comment type="block" pos:line="6987" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6987" pos:column="33">int</name> <op:operator pos:line="6987" pos:column="37">*</op:operator><name pos:line="6987" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6987" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6987" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="6989" pos:column="9">virtual <name pos:line="6989" pos:column="17">HRESULT</name> <name pos:line="6989" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="6989" pos:column="43">GetLineCountDelta</name><argument_list pos:line="6989" pos:column="60">( 
            <comment type="block" pos:line="6990" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="6990" pos:column="33">int</name> <op:operator pos:line="6990" pos:column="37">*</op:operator><name pos:line="6990" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="6990" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="6990" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6994" pos:column="1">#<cpp:directive pos:line="6994" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6994" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6996" pos:column="5">typedef <type><struct pos:line="6996" pos:column="13">struct <name pos:line="6996" pos:column="20">IVxTextChangeVtbl</name>
    <block pos:line="6997" pos:column="5">{<public type="default" pos:line="6997" pos:column="6">
        <function_decl><type><name pos:line="6998" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7000" pos:column="9">HRESULT</name></type> ( <name pos:line="7000" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7000" pos:column="37">*</type:modifier><name pos:line="7000" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7000" pos:column="54">( 
            <param><decl><type><name pos:line="7001" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7001" pos:column="27">*</type:modifier></type> <name pos:line="7001" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7002" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7002" pos:column="24">REFIID</name></type> <name pos:line="7002" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="7003" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7004" pos:column="13">__RPC__deref_out</name>  <name pos:line="7004" pos:column="31">void</name> <type:modifier pos:line="7004" pos:column="36">*</type:modifier><type:modifier pos:line="7004" pos:column="37">*</type:modifier></type><name pos:line="7004" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7006" pos:column="9">ULONG</name></type> ( <name pos:line="7006" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7006" pos:column="35">*</type:modifier><name pos:line="7006" pos:column="36">AddRef</name> )<parameter_list pos:line="7006" pos:column="44">( 
            <param><decl><type><name pos:line="7007" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7007" pos:column="27">*</type:modifier></type> <name pos:line="7007" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7009" pos:column="9">ULONG</name></type> ( <name pos:line="7009" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7009" pos:column="35">*</type:modifier><name pos:line="7009" pos:column="36">Release</name> )<parameter_list pos:line="7009" pos:column="45">( 
            <param><decl><type><name pos:line="7010" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7010" pos:column="27">*</type:modifier></type> <name pos:line="7010" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7012" pos:column="9">HRESULT</name></type> ( <name pos:line="7012" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7012" pos:column="37">*</type:modifier><name pos:line="7012" pos:column="38">GetOldSpan</name> )<parameter_list pos:line="7012" pos:column="50">( 
            <param><decl><type><name pos:line="7013" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7013" pos:column="27">*</type:modifier></type> <name pos:line="7013" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7014" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7014" pos:column="33">VxSpan</name> <type:modifier pos:line="7014" pos:column="40">*</type:modifier></type><name pos:line="7014" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7016" pos:column="9">HRESULT</name></type> ( <name pos:line="7016" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7016" pos:column="37">*</type:modifier><name pos:line="7016" pos:column="38">GetNewSpan</name> )<parameter_list pos:line="7016" pos:column="50">( 
            <param><decl><type><name pos:line="7017" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7017" pos:column="27">*</type:modifier></type> <name pos:line="7017" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7018" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7018" pos:column="33">VxSpan</name> <type:modifier pos:line="7018" pos:column="40">*</type:modifier></type><name pos:line="7018" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7020" pos:column="9">HRESULT</name></type> ( <name pos:line="7020" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7020" pos:column="37">*</type:modifier><name pos:line="7020" pos:column="38">GetOldPosition</name> )<parameter_list pos:line="7020" pos:column="54">( 
            <param><decl><type><name pos:line="7021" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7021" pos:column="27">*</type:modifier></type> <name pos:line="7021" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7022" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7022" pos:column="33">int</name> <type:modifier pos:line="7022" pos:column="37">*</type:modifier></type><name pos:line="7022" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7024" pos:column="9">HRESULT</name></type> ( <name pos:line="7024" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7024" pos:column="37">*</type:modifier><name pos:line="7024" pos:column="38">GetNewPosition</name> )<parameter_list pos:line="7024" pos:column="54">( 
            <param><decl><type><name pos:line="7025" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7025" pos:column="27">*</type:modifier></type> <name pos:line="7025" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7026" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7026" pos:column="33">int</name> <type:modifier pos:line="7026" pos:column="37">*</type:modifier></type><name pos:line="7026" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7028" pos:column="9">HRESULT</name></type> ( <name pos:line="7028" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7028" pos:column="37">*</type:modifier><name pos:line="7028" pos:column="38">GetDelta</name> )<parameter_list pos:line="7028" pos:column="48">( 
            <param><decl><type><name pos:line="7029" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7029" pos:column="27">*</type:modifier></type> <name pos:line="7029" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7030" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7030" pos:column="33">int</name> <type:modifier pos:line="7030" pos:column="37">*</type:modifier></type><name pos:line="7030" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7032" pos:column="9">HRESULT</name></type> ( <name pos:line="7032" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7032" pos:column="37">*</type:modifier><name pos:line="7032" pos:column="38">GetOldEnd</name> )<parameter_list pos:line="7032" pos:column="49">( 
            <param><decl><type><name pos:line="7033" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7033" pos:column="27">*</type:modifier></type> <name pos:line="7033" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7034" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7034" pos:column="33">int</name> <type:modifier pos:line="7034" pos:column="37">*</type:modifier></type><name pos:line="7034" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7036" pos:column="9">HRESULT</name></type> ( <name pos:line="7036" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7036" pos:column="37">*</type:modifier><name pos:line="7036" pos:column="38">GetNewEnd</name> )<parameter_list pos:line="7036" pos:column="49">( 
            <param><decl><type><name pos:line="7037" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7037" pos:column="27">*</type:modifier></type> <name pos:line="7037" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7038" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7038" pos:column="33">int</name> <type:modifier pos:line="7038" pos:column="37">*</type:modifier></type><name pos:line="7038" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7040" pos:column="9">HRESULT</name></type> ( <name pos:line="7040" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7040" pos:column="37">*</type:modifier><name pos:line="7040" pos:column="38">GetOldText</name> )<parameter_list pos:line="7040" pos:column="50">( 
            <param><decl><type><name pos:line="7041" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7041" pos:column="27">*</type:modifier></type> <name pos:line="7041" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7042" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7042" pos:column="33">BSTR</name> <type:modifier pos:line="7042" pos:column="38">*</type:modifier></type><name pos:line="7042" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7044" pos:column="9">HRESULT</name></type> ( <name pos:line="7044" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7044" pos:column="37">*</type:modifier><name pos:line="7044" pos:column="38">GetNewText</name> )<parameter_list pos:line="7044" pos:column="50">( 
            <param><decl><type><name pos:line="7045" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7045" pos:column="27">*</type:modifier></type> <name pos:line="7045" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7046" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7046" pos:column="33">BSTR</name> <type:modifier pos:line="7046" pos:column="38">*</type:modifier></type><name pos:line="7046" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7048" pos:column="9">HRESULT</name></type> ( <name pos:line="7048" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7048" pos:column="37">*</type:modifier><name pos:line="7048" pos:column="38">GetOldLength</name> )<parameter_list pos:line="7048" pos:column="52">( 
            <param><decl><type><name pos:line="7049" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7049" pos:column="27">*</type:modifier></type> <name pos:line="7049" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7050" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7050" pos:column="33">int</name> <type:modifier pos:line="7050" pos:column="37">*</type:modifier></type><name pos:line="7050" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7052" pos:column="9">HRESULT</name></type> ( <name pos:line="7052" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7052" pos:column="37">*</type:modifier><name pos:line="7052" pos:column="38">GetNewLength</name> )<parameter_list pos:line="7052" pos:column="52">( 
            <param><decl><type><name pos:line="7053" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7053" pos:column="27">*</type:modifier></type> <name pos:line="7053" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7054" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7054" pos:column="33">int</name> <type:modifier pos:line="7054" pos:column="37">*</type:modifier></type><name pos:line="7054" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7056" pos:column="9">HRESULT</name></type> ( <name pos:line="7056" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7056" pos:column="37">*</type:modifier><name pos:line="7056" pos:column="38">GetLineCountDelta</name> )<parameter_list pos:line="7056" pos:column="57">( 
            <param><decl><type><name pos:line="7057" pos:column="13">IVxTextChange</name> <type:modifier pos:line="7057" pos:column="27">*</type:modifier></type> <name pos:line="7057" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7058" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7058" pos:column="33">int</name> <type:modifier pos:line="7058" pos:column="37">*</type:modifier></type><name pos:line="7058" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7060" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7061" pos:column="7">IVxTextChangeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7063" pos:column="5">interface</name></type> <name pos:line="7063" pos:column="15">IVxTextChange</name>
    <argument_list pos:line="7064" pos:column="5">{
        <argument><expr><name pos:line="7065" pos:column="9">CONST_VTBL</name> struct <name pos:line="7065" pos:column="27">IVxTextChangeVtbl</name> <op:operator pos:line="7065" pos:column="45">*</op:operator><name pos:line="7065" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7070" pos:column="1">#<cpp:directive pos:line="7070" pos:column="2">ifdef</cpp:directive> <name pos:line="7070" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7073" pos:column="1">#<cpp:directive pos:line="7073" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7073" pos:column="9">IVxTextChange_QueryInterface</name><parameter_list pos:line="7073" pos:column="37">(<param><type><name pos:line="7073" pos:column="38">This</name></type></param>,<param><type><name pos:line="7073" pos:column="43">riid</name></type></param>,<param><type><name pos:line="7073" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7074" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7076" pos:column="1">#<cpp:directive pos:line="7076" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7076" pos:column="9">IVxTextChange_AddRef</name><parameter_list pos:line="7076" pos:column="29">(<param><type><name pos:line="7076" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7077" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7079" pos:column="1">#<cpp:directive pos:line="7079" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7079" pos:column="9">IVxTextChange_Release</name><parameter_list pos:line="7079" pos:column="30">(<param><type><name pos:line="7079" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7080" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7083" pos:column="1">#<cpp:directive pos:line="7083" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7083" pos:column="9">IVxTextChange_GetOldSpan</name><parameter_list pos:line="7083" pos:column="33">(<param><type><name pos:line="7083" pos:column="34">This</name></type></param>,<param><type><name pos:line="7083" pos:column="39">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7084" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOldSpan(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7086" pos:column="1">#<cpp:directive pos:line="7086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7086" pos:column="9">IVxTextChange_GetNewSpan</name><parameter_list pos:line="7086" pos:column="33">(<param><type><name pos:line="7086" pos:column="34">This</name></type></param>,<param><type><name pos:line="7086" pos:column="39">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7087" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNewSpan(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7089" pos:column="1">#<cpp:directive pos:line="7089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7089" pos:column="9">IVxTextChange_GetOldPosition</name><parameter_list pos:line="7089" pos:column="37">(<param><type><name pos:line="7089" pos:column="38">This</name></type></param>,<param><type><name pos:line="7089" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7090" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOldPosition(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7092" pos:column="1">#<cpp:directive pos:line="7092" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7092" pos:column="9">IVxTextChange_GetNewPosition</name><parameter_list pos:line="7092" pos:column="37">(<param><type><name pos:line="7092" pos:column="38">This</name></type></param>,<param><type><name pos:line="7092" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7093" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNewPosition(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7095" pos:column="1">#<cpp:directive pos:line="7095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7095" pos:column="9">IVxTextChange_GetDelta</name><parameter_list pos:line="7095" pos:column="31">(<param><type><name pos:line="7095" pos:column="32">This</name></type></param>,<param><type><name pos:line="7095" pos:column="37">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7096" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDelta(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7098" pos:column="1">#<cpp:directive pos:line="7098" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7098" pos:column="9">IVxTextChange_GetOldEnd</name><parameter_list pos:line="7098" pos:column="32">(<param><type><name pos:line="7098" pos:column="33">This</name></type></param>,<param><type><name pos:line="7098" pos:column="38">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7099" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOldEnd(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7101" pos:column="1">#<cpp:directive pos:line="7101" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7101" pos:column="9">IVxTextChange_GetNewEnd</name><parameter_list pos:line="7101" pos:column="32">(<param><type><name pos:line="7101" pos:column="33">This</name></type></param>,<param><type><name pos:line="7101" pos:column="38">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7102" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNewEnd(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7104" pos:column="1">#<cpp:directive pos:line="7104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7104" pos:column="9">IVxTextChange_GetOldText</name><parameter_list pos:line="7104" pos:column="33">(<param><type><name pos:line="7104" pos:column="34">This</name></type></param>,<param><type><name pos:line="7104" pos:column="39">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7105" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOldText(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7107" pos:column="1">#<cpp:directive pos:line="7107" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7107" pos:column="9">IVxTextChange_GetNewText</name><parameter_list pos:line="7107" pos:column="33">(<param><type><name pos:line="7107" pos:column="34">This</name></type></param>,<param><type><name pos:line="7107" pos:column="39">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7108" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNewText(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7110" pos:column="1">#<cpp:directive pos:line="7110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7110" pos:column="9">IVxTextChange_GetOldLength</name><parameter_list pos:line="7110" pos:column="35">(<param><type><name pos:line="7110" pos:column="36">This</name></type></param>,<param><type><name pos:line="7110" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7111" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOldLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7113" pos:column="1">#<cpp:directive pos:line="7113" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7113" pos:column="9">IVxTextChange_GetNewLength</name><parameter_list pos:line="7113" pos:column="35">(<param><type><name pos:line="7113" pos:column="36">This</name></type></param>,<param><type><name pos:line="7113" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7114" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNewLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7116" pos:column="1">#<cpp:directive pos:line="7116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7116" pos:column="9">IVxTextChange_GetLineCountDelta</name><parameter_list pos:line="7116" pos:column="40">(<param><type><name pos:line="7116" pos:column="41">This</name></type></param>,<param><type><name pos:line="7116" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7117" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineCountDelta(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7119" pos:column="1">#<cpp:directive pos:line="7119" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7119" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7122" pos:column="1">#<cpp:directive pos:line="7122" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7122" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7127" pos:column="1">#<cpp:directive pos:line="7127" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7127" pos:column="9">/* __IVxTextChange_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7130" pos:column="1">#<cpp:directive pos:line="7130" pos:column="2">ifndef</cpp:directive> <name pos:line="7130" pos:column="9">__IVxTextEdit_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7131" pos:column="1">#<cpp:directive pos:line="7131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7131" pos:column="9">__IVxTextEdit_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7133" pos:column="1">/* interface IVxTextEdit */</comment>
<comment type="block" pos:line="7134" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7137" pos:column="1">EXTERN_C</name> <specifier pos:line="7137" pos:column="10">const</specifier> <name pos:line="7137" pos:column="16">IID</name></type> <name pos:line="7137" pos:column="20">IID_IVxTextEdit</name></decl>;</decl_stmt>

<cpp:if pos:line="7139" pos:column="1">#<cpp:directive pos:line="7139" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7139" pos:column="5">defined</name><argument_list pos:line="7139" pos:column="12">(<argument><expr><name pos:line="7139" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7139" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7139" pos:column="29">!</op:operator><call><name pos:line="7139" pos:column="30">defined</name><argument_list pos:line="7139" pos:column="37">(<argument><expr><name pos:line="7139" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7141" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7141" pos:column="19">(<argument pos:line="7141" pos:column="20">"aaaa0268-3374-4d81-8c09-c130688ab1e8"</argument>)</argument_list></macro>
    <label><name pos:line="7142" pos:column="5">IVxTextEdit</name> :</label> <expr_stmt><expr pos:line="7142" pos:column="19">public <name pos:line="7142" pos:column="26">IVxTextBufferEdit</name>
    <block pos:line="7143" pos:column="5">{
    <expr pos:line="7144" pos:column="5">public<op:operator pos:line="7144" pos:column="11">:</op:operator>
        virtual <name pos:line="7145" pos:column="17">HRESULT</name> <name pos:line="7145" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7145" pos:column="43">Insert</name><argument_list pos:line="7145" pos:column="49">( 
            <comment type="block" pos:line="7146" pos:column="13">/* [in] */</comment> <argument pos:line="7146" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7147" pos:column="13">/* [in] */</comment> <argument pos:line="7147" pos:column="24">BSTR text</argument>,
            <comment type="block" pos:line="7148" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7148" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7148" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7148" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7150" pos:column="9">virtual <name pos:line="7150" pos:column="17">HRESULT</name> <name pos:line="7150" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7150" pos:column="43">Delete</name><argument_list pos:line="7150" pos:column="49">( 
            <comment type="block" pos:line="7151" pos:column="13">/* [in] */</comment> <argument pos:line="7151" pos:column="24">VxSpan deleteSpan</argument>,
            <comment type="block" pos:line="7152" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7152" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7152" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7152" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7154" pos:column="9">virtual <name pos:line="7154" pos:column="17">HRESULT</name> <name pos:line="7154" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7154" pos:column="43">Delete_2</name><argument_list pos:line="7154" pos:column="51">( 
            <comment type="block" pos:line="7155" pos:column="13">/* [in] */</comment> <argument pos:line="7155" pos:column="24">int startPosition</argument>,
            <comment type="block" pos:line="7156" pos:column="13">/* [in] */</comment> <argument pos:line="7156" pos:column="24">int charsToDelete</argument>,
            <comment type="block" pos:line="7157" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7157" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7157" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7157" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7159" pos:column="9">virtual <name pos:line="7159" pos:column="17">HRESULT</name> <name pos:line="7159" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7159" pos:column="43">Replace</name><argument_list pos:line="7159" pos:column="50">( 
            <comment type="block" pos:line="7160" pos:column="13">/* [in] */</comment> <argument pos:line="7160" pos:column="24">VxSpan replaceSpan</argument>,
            <comment type="block" pos:line="7161" pos:column="13">/* [in] */</comment> <argument pos:line="7161" pos:column="24">BSTR replaceWith</argument>,
            <comment type="block" pos:line="7162" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7162" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7162" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7162" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7164" pos:column="9">virtual <name pos:line="7164" pos:column="17">HRESULT</name> <name pos:line="7164" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7164" pos:column="43">Replace_2</name><argument_list pos:line="7164" pos:column="52">( 
            <comment type="block" pos:line="7165" pos:column="13">/* [in] */</comment> <argument pos:line="7165" pos:column="24">int startPosition</argument>,
            <comment type="block" pos:line="7166" pos:column="13">/* [in] */</comment> <argument pos:line="7166" pos:column="24">int charsToReplace</argument>,
            <comment type="block" pos:line="7167" pos:column="13">/* [in] */</comment> <argument pos:line="7167" pos:column="24">BSTR replaceWith</argument>,
            <comment type="block" pos:line="7168" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7168" pos:column="33">BOOL *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7168" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7168" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7170" pos:column="9">virtual <name pos:line="7170" pos:column="17">HRESULT</name> <name pos:line="7170" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7170" pos:column="43">GetHasEffectiveChanges</name><argument_list pos:line="7170" pos:column="65">( 
            <comment type="block" pos:line="7171" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7171" pos:column="33">BOOL</name> <op:operator pos:line="7171" pos:column="38">*</op:operator><name pos:line="7171" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7171" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7171" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7173" pos:column="9">virtual <name pos:line="7173" pos:column="17">HRESULT</name> <name pos:line="7173" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7173" pos:column="43">GetHasFailedChanges</name><argument_list pos:line="7173" pos:column="62">( 
            <comment type="block" pos:line="7174" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7174" pos:column="33">BOOL</name> <op:operator pos:line="7174" pos:column="38">*</op:operator><name pos:line="7174" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7174" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7174" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7178" pos:column="1">#<cpp:directive pos:line="7178" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7178" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7180" pos:column="5">typedef <type><struct pos:line="7180" pos:column="13">struct <name pos:line="7180" pos:column="20">IVxTextEditVtbl</name>
    <block pos:line="7181" pos:column="5">{<public type="default" pos:line="7181" pos:column="6">
        <function_decl><type><name pos:line="7182" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7184" pos:column="9">HRESULT</name></type> ( <name pos:line="7184" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7184" pos:column="37">*</type:modifier><name pos:line="7184" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7184" pos:column="54">( 
            <param><decl><type><name pos:line="7185" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7185" pos:column="25">*</type:modifier></type> <name pos:line="7185" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7186" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7186" pos:column="24">REFIID</name></type> <name pos:line="7186" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="7187" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7188" pos:column="13">__RPC__deref_out</name>  <name pos:line="7188" pos:column="31">void</name> <type:modifier pos:line="7188" pos:column="36">*</type:modifier><type:modifier pos:line="7188" pos:column="37">*</type:modifier></type><name pos:line="7188" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7190" pos:column="9">ULONG</name></type> ( <name pos:line="7190" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7190" pos:column="35">*</type:modifier><name pos:line="7190" pos:column="36">AddRef</name> )<parameter_list pos:line="7190" pos:column="44">( 
            <param><decl><type><name pos:line="7191" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7191" pos:column="25">*</type:modifier></type> <name pos:line="7191" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7193" pos:column="9">ULONG</name></type> ( <name pos:line="7193" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7193" pos:column="35">*</type:modifier><name pos:line="7193" pos:column="36">Release</name> )<parameter_list pos:line="7193" pos:column="45">( 
            <param><decl><type><name pos:line="7194" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7194" pos:column="25">*</type:modifier></type> <name pos:line="7194" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7196" pos:column="9">HRESULT</name></type> ( <name pos:line="7196" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7196" pos:column="37">*</type:modifier><name pos:line="7196" pos:column="38">GetSnapshot</name> )<parameter_list pos:line="7196" pos:column="51">( 
            <param><decl><type><name pos:line="7197" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7197" pos:column="25">*</type:modifier></type> <name pos:line="7197" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7198" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7198" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="7198" pos:column="49">*</type:modifier><type:modifier pos:line="7198" pos:column="50">*</type:modifier></type><name pos:line="7198" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7200" pos:column="9">HRESULT</name></type> ( <name pos:line="7200" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7200" pos:column="37">*</type:modifier><name pos:line="7200" pos:column="38">Apply</name> )<parameter_list pos:line="7200" pos:column="45">( 
            <param><decl><type><name pos:line="7201" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7201" pos:column="25">*</type:modifier></type> <name pos:line="7201" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7202" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7202" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="7202" pos:column="49">*</type:modifier><type:modifier pos:line="7202" pos:column="50">*</type:modifier></type><name pos:line="7202" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7204" pos:column="9">HRESULT</name></type> ( <name pos:line="7204" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7204" pos:column="37">*</type:modifier><name pos:line="7204" pos:column="38">Cancel</name> )<parameter_list pos:line="7204" pos:column="46">( 
            <param><decl><type><name pos:line="7205" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7205" pos:column="25">*</type:modifier></type> <name pos:line="7205" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7207" pos:column="9">HRESULT</name></type> ( <name pos:line="7207" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7207" pos:column="37">*</type:modifier><name pos:line="7207" pos:column="38">GetCanceled</name> )<parameter_list pos:line="7207" pos:column="51">( 
            <param><decl><type><name pos:line="7208" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7208" pos:column="25">*</type:modifier></type> <name pos:line="7208" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7209" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7209" pos:column="33">BOOL</name> <type:modifier pos:line="7209" pos:column="38">*</type:modifier></type><name pos:line="7209" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7211" pos:column="9">HRESULT</name></type> ( <name pos:line="7211" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7211" pos:column="37">*</type:modifier><name pos:line="7211" pos:column="38">Insert</name> )<parameter_list pos:line="7211" pos:column="46">( 
            <param><decl><type><name pos:line="7212" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7212" pos:column="25">*</type:modifier></type> <name pos:line="7212" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7213" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7213" pos:column="24">int</name></type> <name pos:line="7213" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7214" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7214" pos:column="24">BSTR</name></type> <name pos:line="7214" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="7215" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7215" pos:column="33">BOOL</name> <type:modifier pos:line="7215" pos:column="38">*</type:modifier></type><name pos:line="7215" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7217" pos:column="9">HRESULT</name></type> ( <name pos:line="7217" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7217" pos:column="37">*</type:modifier><name pos:line="7217" pos:column="38">Delete</name> )<parameter_list pos:line="7217" pos:column="46">( 
            <param><decl><type><name pos:line="7218" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7218" pos:column="25">*</type:modifier></type> <name pos:line="7218" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7219" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7219" pos:column="24">VxSpan</name></type> <name pos:line="7219" pos:column="31">deleteSpan</name></decl></param>,
            <comment type="block" pos:line="7220" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7220" pos:column="33">BOOL</name> <type:modifier pos:line="7220" pos:column="38">*</type:modifier></type><name pos:line="7220" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7222" pos:column="9">HRESULT</name></type> ( <name pos:line="7222" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7222" pos:column="37">*</type:modifier><name pos:line="7222" pos:column="38">Delete_2</name> )<parameter_list pos:line="7222" pos:column="48">( 
            <param><decl><type><name pos:line="7223" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7223" pos:column="25">*</type:modifier></type> <name pos:line="7223" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7224" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7224" pos:column="24">int</name></type> <name pos:line="7224" pos:column="28">startPosition</name></decl></param>,
            <comment type="block" pos:line="7225" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7225" pos:column="24">int</name></type> <name pos:line="7225" pos:column="28">charsToDelete</name></decl></param>,
            <comment type="block" pos:line="7226" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7226" pos:column="33">BOOL</name> <type:modifier pos:line="7226" pos:column="38">*</type:modifier></type><name pos:line="7226" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7228" pos:column="9">HRESULT</name></type> ( <name pos:line="7228" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7228" pos:column="37">*</type:modifier><name pos:line="7228" pos:column="38">Replace</name> )<parameter_list pos:line="7228" pos:column="47">( 
            <param><decl><type><name pos:line="7229" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7229" pos:column="25">*</type:modifier></type> <name pos:line="7229" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7230" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7230" pos:column="24">VxSpan</name></type> <name pos:line="7230" pos:column="31">replaceSpan</name></decl></param>,
            <comment type="block" pos:line="7231" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7231" pos:column="24">BSTR</name></type> <name pos:line="7231" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="7232" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7232" pos:column="33">BOOL</name> <type:modifier pos:line="7232" pos:column="38">*</type:modifier></type><name pos:line="7232" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7234" pos:column="9">HRESULT</name></type> ( <name pos:line="7234" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7234" pos:column="37">*</type:modifier><name pos:line="7234" pos:column="38">Replace_2</name> )<parameter_list pos:line="7234" pos:column="49">( 
            <param><decl><type><name pos:line="7235" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7235" pos:column="25">*</type:modifier></type> <name pos:line="7235" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7236" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7236" pos:column="24">int</name></type> <name pos:line="7236" pos:column="28">startPosition</name></decl></param>,
            <comment type="block" pos:line="7237" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7237" pos:column="24">int</name></type> <name pos:line="7237" pos:column="28">charsToReplace</name></decl></param>,
            <comment type="block" pos:line="7238" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7238" pos:column="24">BSTR</name></type> <name pos:line="7238" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="7239" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7239" pos:column="33">BOOL</name> <type:modifier pos:line="7239" pos:column="38">*</type:modifier></type><name pos:line="7239" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7241" pos:column="9">HRESULT</name></type> ( <name pos:line="7241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7241" pos:column="37">*</type:modifier><name pos:line="7241" pos:column="38">GetHasEffectiveChanges</name> )<parameter_list pos:line="7241" pos:column="62">( 
            <param><decl><type><name pos:line="7242" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7242" pos:column="25">*</type:modifier></type> <name pos:line="7242" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7243" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7243" pos:column="33">BOOL</name> <type:modifier pos:line="7243" pos:column="38">*</type:modifier></type><name pos:line="7243" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7245" pos:column="9">HRESULT</name></type> ( <name pos:line="7245" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7245" pos:column="37">*</type:modifier><name pos:line="7245" pos:column="38">GetHasFailedChanges</name> )<parameter_list pos:line="7245" pos:column="59">( 
            <param><decl><type><name pos:line="7246" pos:column="13">IVxTextEdit</name> <type:modifier pos:line="7246" pos:column="25">*</type:modifier></type> <name pos:line="7246" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="7247" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7247" pos:column="33">BOOL</name> <type:modifier pos:line="7247" pos:column="38">*</type:modifier></type><name pos:line="7247" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7249" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7250" pos:column="7">IVxTextEditVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7252" pos:column="5">interface</name></type> <name pos:line="7252" pos:column="15">IVxTextEdit</name>
    <argument_list pos:line="7253" pos:column="5">{
        <argument><expr><name pos:line="7254" pos:column="9">CONST_VTBL</name> struct <name pos:line="7254" pos:column="27">IVxTextEditVtbl</name> <op:operator pos:line="7254" pos:column="43">*</op:operator><name pos:line="7254" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7259" pos:column="1">#<cpp:directive pos:line="7259" pos:column="2">ifdef</cpp:directive> <name pos:line="7259" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7262" pos:column="1">#<cpp:directive pos:line="7262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7262" pos:column="9">IVxTextEdit_QueryInterface</name><parameter_list pos:line="7262" pos:column="35">(<param><type><name pos:line="7262" pos:column="36">This</name></type></param>,<param><type><name pos:line="7262" pos:column="41">riid</name></type></param>,<param><type><name pos:line="7262" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7263" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7265" pos:column="1">#<cpp:directive pos:line="7265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7265" pos:column="9">IVxTextEdit_AddRef</name><parameter_list pos:line="7265" pos:column="27">(<param><type><name pos:line="7265" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7266" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7268" pos:column="1">#<cpp:directive pos:line="7268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7268" pos:column="9">IVxTextEdit_Release</name><parameter_list pos:line="7268" pos:column="28">(<param><type><name pos:line="7268" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7269" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7272" pos:column="1">#<cpp:directive pos:line="7272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7272" pos:column="9">IVxTextEdit_GetSnapshot</name><parameter_list pos:line="7272" pos:column="32">(<param><type><name pos:line="7272" pos:column="33">This</name></type></param>,<param><type><name pos:line="7272" pos:column="38">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7273" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7275" pos:column="1">#<cpp:directive pos:line="7275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7275" pos:column="9">IVxTextEdit_Apply</name><parameter_list pos:line="7275" pos:column="26">(<param><type><name pos:line="7275" pos:column="27">This</name></type></param>,<param><type><name pos:line="7275" pos:column="32">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7276" pos:column="5">( (This)-&gt;lpVtbl -&gt; Apply(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7278" pos:column="1">#<cpp:directive pos:line="7278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7278" pos:column="9">IVxTextEdit_Cancel</name><parameter_list pos:line="7278" pos:column="27">(<param><type><name pos:line="7278" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7279" pos:column="5">( (This)-&gt;lpVtbl -&gt; Cancel(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7281" pos:column="1">#<cpp:directive pos:line="7281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7281" pos:column="9">IVxTextEdit_GetCanceled</name><parameter_list pos:line="7281" pos:column="32">(<param><type><name pos:line="7281" pos:column="33">This</name></type></param>,<param><type><name pos:line="7281" pos:column="38">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7282" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCanceled(This,pRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="7285" pos:column="1">#<cpp:directive pos:line="7285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7285" pos:column="9">IVxTextEdit_Insert</name><parameter_list pos:line="7285" pos:column="27">(<param><type><name pos:line="7285" pos:column="28">This</name></type></param>,<param><type><name pos:line="7285" pos:column="33">position</name></type></param>,<param><type><name pos:line="7285" pos:column="42">text</name></type></param>,<param><type><name pos:line="7285" pos:column="47">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7286" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert(This,position,text,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7288" pos:column="1">#<cpp:directive pos:line="7288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7288" pos:column="9">IVxTextEdit_Delete</name><parameter_list pos:line="7288" pos:column="27">(<param><type><name pos:line="7288" pos:column="28">This</name></type></param>,<param><type><name pos:line="7288" pos:column="33">deleteSpan</name></type></param>,<param><type><name pos:line="7288" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7289" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,deleteSpan,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7291" pos:column="1">#<cpp:directive pos:line="7291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7291" pos:column="9">IVxTextEdit_Delete_2</name><parameter_list pos:line="7291" pos:column="29">(<param><type><name pos:line="7291" pos:column="30">This</name></type></param>,<param><type><name pos:line="7291" pos:column="35">startPosition</name></type></param>,<param><type><name pos:line="7291" pos:column="49">charsToDelete</name></type></param>,<param><type><name pos:line="7291" pos:column="63">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7292" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete_2(This,startPosition,charsToDelete,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7294" pos:column="1">#<cpp:directive pos:line="7294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7294" pos:column="9">IVxTextEdit_Replace</name><parameter_list pos:line="7294" pos:column="28">(<param><type><name pos:line="7294" pos:column="29">This</name></type></param>,<param><type><name pos:line="7294" pos:column="34">replaceSpan</name></type></param>,<param><type><name pos:line="7294" pos:column="46">replaceWith</name></type></param>,<param><type><name pos:line="7294" pos:column="58">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7295" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace(This,replaceSpan,replaceWith,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7297" pos:column="1">#<cpp:directive pos:line="7297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7297" pos:column="9">IVxTextEdit_Replace_2</name><parameter_list pos:line="7297" pos:column="30">(<param><type><name pos:line="7297" pos:column="31">This</name></type></param>,<param><type><name pos:line="7297" pos:column="36">startPosition</name></type></param>,<param><type><name pos:line="7297" pos:column="50">charsToReplace</name></type></param>,<param><type><name pos:line="7297" pos:column="65">replaceWith</name></type></param>,<param><type><name pos:line="7297" pos:column="77">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7298" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace_2(This,startPosition,charsToReplace,replaceWith,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7300" pos:column="1">#<cpp:directive pos:line="7300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7300" pos:column="9">IVxTextEdit_GetHasEffectiveChanges</name><parameter_list pos:line="7300" pos:column="43">(<param><type><name pos:line="7300" pos:column="44">This</name></type></param>,<param><type><name pos:line="7300" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7301" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHasEffectiveChanges(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7303" pos:column="1">#<cpp:directive pos:line="7303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7303" pos:column="9">IVxTextEdit_GetHasFailedChanges</name><parameter_list pos:line="7303" pos:column="40">(<param><type><name pos:line="7303" pos:column="41">This</name></type></param>,<param><type><name pos:line="7303" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7304" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHasFailedChanges(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7306" pos:column="1">#<cpp:directive pos:line="7306" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7306" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7309" pos:column="1">#<cpp:directive pos:line="7309" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7309" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7314" pos:column="1">#<cpp:directive pos:line="7314" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7314" pos:column="9">/* __IVxTextEdit_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7317" pos:column="1">#<cpp:directive pos:line="7317" pos:column="2">ifndef</cpp:directive> <name pos:line="7317" pos:column="9">__IVxTextSnapshot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7318" pos:column="1">#<cpp:directive pos:line="7318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7318" pos:column="9">__IVxTextSnapshot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7320" pos:column="1">/* interface IVxTextSnapshot */</comment>
<comment type="block" pos:line="7321" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7324" pos:column="1">EXTERN_C</name> <specifier pos:line="7324" pos:column="10">const</specifier> <name pos:line="7324" pos:column="16">IID</name></type> <name pos:line="7324" pos:column="20">IID_IVxTextSnapshot</name></decl>;</decl_stmt>

<cpp:if pos:line="7326" pos:column="1">#<cpp:directive pos:line="7326" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7326" pos:column="5">defined</name><argument_list pos:line="7326" pos:column="12">(<argument><expr><name pos:line="7326" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7326" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7326" pos:column="29">!</op:operator><call><name pos:line="7326" pos:column="30">defined</name><argument_list pos:line="7326" pos:column="37">(<argument><expr><name pos:line="7326" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7328" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7328" pos:column="19">(<argument pos:line="7328" pos:column="20">"f989d547-f569-495c-819b-9810e2bb6dd3"</argument>)</argument_list></macro>
    <label><name pos:line="7329" pos:column="5">IVxTextSnapshot</name> :</label> <expr_stmt><expr pos:line="7329" pos:column="23">public <name pos:line="7329" pos:column="30">IUnknown</name>
    <block pos:line="7330" pos:column="5">{
    <expr pos:line="7331" pos:column="5">public<op:operator pos:line="7331" pos:column="11">:</op:operator>
        virtual <name pos:line="7332" pos:column="17">HRESULT</name> <name pos:line="7332" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7332" pos:column="43">GetTextBuffer</name><argument_list pos:line="7332" pos:column="56">( 
            <comment type="block" pos:line="7333" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7333" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="7333" pos:column="47">*</op:operator><op:operator pos:line="7333" pos:column="48">*</op:operator><name pos:line="7333" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7333" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="7333" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="7335" pos:column="9">virtual <name pos:line="7335" pos:column="17">HRESULT</name> <name pos:line="7335" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7335" pos:column="43">GetContentType</name><argument_list pos:line="7335" pos:column="57">( 
            <comment type="block" pos:line="7336" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7336" pos:column="33">IVxContentType</name> <op:operator pos:line="7336" pos:column="48">*</op:operator><op:operator pos:line="7336" pos:column="49">*</op:operator><name pos:line="7336" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7336" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="7336" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="7338" pos:column="9">virtual <name pos:line="7338" pos:column="17">HRESULT</name> <name pos:line="7338" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7338" pos:column="43">GetVersion</name><argument_list pos:line="7338" pos:column="53">( 
            <comment type="block" pos:line="7339" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7339" pos:column="33">IVxTextVersion</name> <op:operator pos:line="7339" pos:column="48">*</op:operator><op:operator pos:line="7339" pos:column="49">*</op:operator><name pos:line="7339" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7339" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="7339" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="7341" pos:column="9">virtual <name pos:line="7341" pos:column="17">HRESULT</name> <name pos:line="7341" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7341" pos:column="43">GetLength</name><argument_list pos:line="7341" pos:column="52">( 
            <comment type="block" pos:line="7342" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7342" pos:column="33">int</name> <op:operator pos:line="7342" pos:column="37">*</op:operator><name pos:line="7342" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7342" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7342" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7344" pos:column="9">virtual <name pos:line="7344" pos:column="17">HRESULT</name> <name pos:line="7344" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7344" pos:column="43">GetLineCount</name><argument_list pos:line="7344" pos:column="55">( 
            <comment type="block" pos:line="7345" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7345" pos:column="33">int</name> <op:operator pos:line="7345" pos:column="37">*</op:operator><name pos:line="7345" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7345" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7345" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7347" pos:column="9">virtual <name pos:line="7347" pos:column="17">HRESULT</name> <name pos:line="7347" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7347" pos:column="43">GetText</name><argument_list pos:line="7347" pos:column="50">( 
            <comment type="block" pos:line="7348" pos:column="13">/* [in] */</comment> <argument pos:line="7348" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="7349" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7349" pos:column="33">BSTR *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7349" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7349" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7351" pos:column="9">virtual <name pos:line="7351" pos:column="17">HRESULT</name> <name pos:line="7351" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7351" pos:column="43">GetText_2</name><argument_list pos:line="7351" pos:column="52">( 
            <comment type="block" pos:line="7352" pos:column="13">/* [in] */</comment> <argument pos:line="7352" pos:column="24">int startIndex</argument>,
            <comment type="block" pos:line="7353" pos:column="13">/* [in] */</comment> <argument pos:line="7353" pos:column="24">int length</argument>,
            <comment type="block" pos:line="7354" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7354" pos:column="33">BSTR *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7354" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7354" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7356" pos:column="9">virtual <name pos:line="7356" pos:column="17">HRESULT</name> <name pos:line="7356" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7356" pos:column="43">GetText_3</name><argument_list pos:line="7356" pos:column="52">( 
            <comment type="block" pos:line="7357" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7357" pos:column="33">BSTR</name> <op:operator pos:line="7357" pos:column="38">*</op:operator><name pos:line="7357" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7357" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7357" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7359" pos:column="9">virtual <name pos:line="7359" pos:column="17">HRESULT</name> <name pos:line="7359" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7359" pos:column="43">CreateTrackingPoint</name><argument_list pos:line="7359" pos:column="62">( 
            <comment type="block" pos:line="7360" pos:column="13">/* [in] */</comment> <argument pos:line="7360" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7361" pos:column="13">/* [in] */</comment> <argument pos:line="7361" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7362" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7362" pos:column="33">IVxTrackingPoint **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7362" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="7362" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="7364" pos:column="9">virtual <name pos:line="7364" pos:column="17">HRESULT</name> <name pos:line="7364" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7364" pos:column="43">CreateTrackingPoint_2</name><argument_list pos:line="7364" pos:column="64">( 
            <comment type="block" pos:line="7365" pos:column="13">/* [in] */</comment> <argument pos:line="7365" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7366" pos:column="13">/* [in] */</comment> <argument pos:line="7366" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7367" pos:column="13">/* [in] */</comment> <argument pos:line="7367" pos:column="24">VxTrackingFidelityMode trackingFidelity</argument>,
            <comment type="block" pos:line="7368" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7368" pos:column="33">IVxTrackingPoint **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7368" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="7368" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="7370" pos:column="9">virtual <name pos:line="7370" pos:column="17">HRESULT</name> <name pos:line="7370" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7370" pos:column="43">CreateTrackingSpan</name><argument_list pos:line="7370" pos:column="61">( 
            <comment type="block" pos:line="7371" pos:column="13">/* [in] */</comment> <argument pos:line="7371" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="7372" pos:column="13">/* [in] */</comment> <argument pos:line="7372" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7373" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7373" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7373" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7373" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7375" pos:column="9">virtual <name pos:line="7375" pos:column="17">HRESULT</name> <name pos:line="7375" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7375" pos:column="43">CreateTrackingSpan_2</name><argument_list pos:line="7375" pos:column="63">( 
            <comment type="block" pos:line="7376" pos:column="13">/* [in] */</comment> <argument pos:line="7376" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="7377" pos:column="13">/* [in] */</comment> <argument pos:line="7377" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7378" pos:column="13">/* [in] */</comment> <argument pos:line="7378" pos:column="24">VxTrackingFidelityMode trackingFidelity</argument>,
            <comment type="block" pos:line="7379" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7379" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7379" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7379" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7381" pos:column="9">virtual <name pos:line="7381" pos:column="17">HRESULT</name> <name pos:line="7381" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7381" pos:column="43">CreateTrackingSpan_3</name><argument_list pos:line="7381" pos:column="63">( 
            <comment type="block" pos:line="7382" pos:column="13">/* [in] */</comment> <argument pos:line="7382" pos:column="24">int start</argument>,
            <comment type="block" pos:line="7383" pos:column="13">/* [in] */</comment> <argument pos:line="7383" pos:column="24">int length</argument>,
            <comment type="block" pos:line="7384" pos:column="13">/* [in] */</comment> <argument pos:line="7384" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7385" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7385" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7385" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7385" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7387" pos:column="9">virtual <name pos:line="7387" pos:column="17">HRESULT</name> <name pos:line="7387" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7387" pos:column="43">CreateTrackingSpan_4</name><argument_list pos:line="7387" pos:column="63">( 
            <comment type="block" pos:line="7388" pos:column="13">/* [in] */</comment> <argument pos:line="7388" pos:column="24">int start</argument>,
            <comment type="block" pos:line="7389" pos:column="13">/* [in] */</comment> <argument pos:line="7389" pos:column="24">int length</argument>,
            <comment type="block" pos:line="7390" pos:column="13">/* [in] */</comment> <argument pos:line="7390" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7391" pos:column="13">/* [in] */</comment> <argument pos:line="7391" pos:column="24">VxTrackingFidelityMode trackingFidelity</argument>,
            <comment type="block" pos:line="7392" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7392" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7392" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7392" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7394" pos:column="9">virtual <name pos:line="7394" pos:column="17">HRESULT</name> <name pos:line="7394" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7394" pos:column="43">GetLineFromLineNumber</name><argument_list pos:line="7394" pos:column="64">( 
            <comment type="block" pos:line="7395" pos:column="13">/* [in] */</comment> <argument pos:line="7395" pos:column="24">int lineNumber</argument>,
            <comment type="block" pos:line="7396" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7396" pos:column="33">IVxTextSnapshotLine **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7396" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="7396" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="7398" pos:column="9">virtual <name pos:line="7398" pos:column="17">HRESULT</name> <name pos:line="7398" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7398" pos:column="43">GetLineFromPosition</name><argument_list pos:line="7398" pos:column="62">( 
            <comment type="block" pos:line="7399" pos:column="13">/* [in] */</comment> <argument pos:line="7399" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7400" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7400" pos:column="33">IVxTextSnapshotLine **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7400" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="7400" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="7402" pos:column="9">virtual <name pos:line="7402" pos:column="17">HRESULT</name> <name pos:line="7402" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7402" pos:column="43">GetLineNumberFromPosition</name><argument_list pos:line="7402" pos:column="68">( 
            <comment type="block" pos:line="7403" pos:column="13">/* [in] */</comment> <argument pos:line="7403" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7404" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7404" pos:column="33">int *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="7404" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7404" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7406" pos:column="9">virtual <name pos:line="7406" pos:column="17">HRESULT</name> <name pos:line="7406" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7406" pos:column="43">GetLines</name><argument_list pos:line="7406" pos:column="51">( 
            <comment type="block" pos:line="7407" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7407" pos:column="33">IEnumerableIVxTextSnapshotLine</name> <op:operator pos:line="7407" pos:column="64">*</op:operator><op:operator pos:line="7407" pos:column="65">*</op:operator><name pos:line="7407" pos:column="66">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7407" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="7407" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="7409" pos:column="9">virtual <name pos:line="7409" pos:column="17">HRESULT</name> <name pos:line="7409" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7409" pos:column="43">Write</name><argument_list pos:line="7409" pos:column="48">( 
            <comment type="block" pos:line="7410" pos:column="13">/* [in] */</comment> <argument pos:line="7410" pos:column="24">IUnknown *pWriter</argument>,
            <comment type="block" pos:line="7411" pos:column="13">/* [in] */</comment> <argument pos:line="7411" pos:column="24">VxSpan span</argument>)</argument_list></macro> <op:operator pos:line="7411" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="7411" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="7413" pos:column="9">virtual <name pos:line="7413" pos:column="17">HRESULT</name> <name pos:line="7413" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7413" pos:column="43">Write_2</name><argument_list pos:line="7413" pos:column="50">( 
            <comment type="block" pos:line="7414" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="7414" pos:column="24">IUnknown</name> <op:operator pos:line="7414" pos:column="33">*</op:operator><name pos:line="7414" pos:column="34">pWriter</name></expr></argument>)</argument_list></call> <op:operator pos:line="7414" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="7414" pos:column="45">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7418" pos:column="1">#<cpp:directive pos:line="7418" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7418" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7420" pos:column="5">typedef <type><struct pos:line="7420" pos:column="13">struct <name pos:line="7420" pos:column="20">IVxTextSnapshotVtbl</name>
    <block pos:line="7421" pos:column="5">{<public type="default" pos:line="7421" pos:column="6">
        <function_decl><type><name pos:line="7422" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7424" pos:column="9">HRESULT</name></type> ( <name pos:line="7424" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7424" pos:column="37">*</type:modifier><name pos:line="7424" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7424" pos:column="54">( 
            <param><decl><type><name pos:line="7425" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7425" pos:column="29">*</type:modifier></type> <name pos:line="7425" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7426" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7426" pos:column="24">REFIID</name></type> <name pos:line="7426" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="7427" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7428" pos:column="13">__RPC__deref_out</name>  <name pos:line="7428" pos:column="31">void</name> <type:modifier pos:line="7428" pos:column="36">*</type:modifier><type:modifier pos:line="7428" pos:column="37">*</type:modifier></type><name pos:line="7428" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7430" pos:column="9">ULONG</name></type> ( <name pos:line="7430" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7430" pos:column="35">*</type:modifier><name pos:line="7430" pos:column="36">AddRef</name> )<parameter_list pos:line="7430" pos:column="44">( 
            <param><decl><type><name pos:line="7431" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7431" pos:column="29">*</type:modifier></type> <name pos:line="7431" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7433" pos:column="9">ULONG</name></type> ( <name pos:line="7433" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7433" pos:column="35">*</type:modifier><name pos:line="7433" pos:column="36">Release</name> )<parameter_list pos:line="7433" pos:column="45">( 
            <param><decl><type><name pos:line="7434" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7434" pos:column="29">*</type:modifier></type> <name pos:line="7434" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7436" pos:column="9">HRESULT</name></type> ( <name pos:line="7436" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7436" pos:column="37">*</type:modifier><name pos:line="7436" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="7436" pos:column="53">( 
            <param><decl><type><name pos:line="7437" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7437" pos:column="29">*</type:modifier></type> <name pos:line="7437" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7438" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7438" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="7438" pos:column="47">*</type:modifier><type:modifier pos:line="7438" pos:column="48">*</type:modifier></type><name pos:line="7438" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7440" pos:column="9">HRESULT</name></type> ( <name pos:line="7440" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7440" pos:column="37">*</type:modifier><name pos:line="7440" pos:column="38">GetContentType</name> )<parameter_list pos:line="7440" pos:column="54">( 
            <param><decl><type><name pos:line="7441" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7441" pos:column="29">*</type:modifier></type> <name pos:line="7441" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7442" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7442" pos:column="33">IVxContentType</name> <type:modifier pos:line="7442" pos:column="48">*</type:modifier><type:modifier pos:line="7442" pos:column="49">*</type:modifier></type><name pos:line="7442" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7444" pos:column="9">HRESULT</name></type> ( <name pos:line="7444" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7444" pos:column="37">*</type:modifier><name pos:line="7444" pos:column="38">GetVersion</name> )<parameter_list pos:line="7444" pos:column="50">( 
            <param><decl><type><name pos:line="7445" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7445" pos:column="29">*</type:modifier></type> <name pos:line="7445" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7446" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7446" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="7446" pos:column="48">*</type:modifier><type:modifier pos:line="7446" pos:column="49">*</type:modifier></type><name pos:line="7446" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7448" pos:column="9">HRESULT</name></type> ( <name pos:line="7448" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7448" pos:column="37">*</type:modifier><name pos:line="7448" pos:column="38">GetLength</name> )<parameter_list pos:line="7448" pos:column="49">( 
            <param><decl><type><name pos:line="7449" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7449" pos:column="29">*</type:modifier></type> <name pos:line="7449" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7450" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7450" pos:column="33">int</name> <type:modifier pos:line="7450" pos:column="37">*</type:modifier></type><name pos:line="7450" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7452" pos:column="9">HRESULT</name></type> ( <name pos:line="7452" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7452" pos:column="37">*</type:modifier><name pos:line="7452" pos:column="38">GetLineCount</name> )<parameter_list pos:line="7452" pos:column="52">( 
            <param><decl><type><name pos:line="7453" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7453" pos:column="29">*</type:modifier></type> <name pos:line="7453" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7454" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7454" pos:column="33">int</name> <type:modifier pos:line="7454" pos:column="37">*</type:modifier></type><name pos:line="7454" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7456" pos:column="9">HRESULT</name></type> ( <name pos:line="7456" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7456" pos:column="37">*</type:modifier><name pos:line="7456" pos:column="38">GetText</name> )<parameter_list pos:line="7456" pos:column="47">( 
            <param><decl><type><name pos:line="7457" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7457" pos:column="29">*</type:modifier></type> <name pos:line="7457" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7458" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7458" pos:column="24">VxSpan</name></type> <name pos:line="7458" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="7459" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7459" pos:column="33">BSTR</name> <type:modifier pos:line="7459" pos:column="38">*</type:modifier></type><name pos:line="7459" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7461" pos:column="9">HRESULT</name></type> ( <name pos:line="7461" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7461" pos:column="37">*</type:modifier><name pos:line="7461" pos:column="38">GetText_2</name> )<parameter_list pos:line="7461" pos:column="49">( 
            <param><decl><type><name pos:line="7462" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7462" pos:column="29">*</type:modifier></type> <name pos:line="7462" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7463" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7463" pos:column="24">int</name></type> <name pos:line="7463" pos:column="28">startIndex</name></decl></param>,
            <comment type="block" pos:line="7464" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7464" pos:column="24">int</name></type> <name pos:line="7464" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="7465" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7465" pos:column="33">BSTR</name> <type:modifier pos:line="7465" pos:column="38">*</type:modifier></type><name pos:line="7465" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7467" pos:column="9">HRESULT</name></type> ( <name pos:line="7467" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7467" pos:column="37">*</type:modifier><name pos:line="7467" pos:column="38">GetText_3</name> )<parameter_list pos:line="7467" pos:column="49">( 
            <param><decl><type><name pos:line="7468" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7468" pos:column="29">*</type:modifier></type> <name pos:line="7468" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7469" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7469" pos:column="33">BSTR</name> <type:modifier pos:line="7469" pos:column="38">*</type:modifier></type><name pos:line="7469" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7471" pos:column="9">HRESULT</name></type> ( <name pos:line="7471" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7471" pos:column="37">*</type:modifier><name pos:line="7471" pos:column="38">CreateTrackingPoint</name> )<parameter_list pos:line="7471" pos:column="59">( 
            <param><decl><type><name pos:line="7472" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7472" pos:column="29">*</type:modifier></type> <name pos:line="7472" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7473" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7473" pos:column="24">int</name></type> <name pos:line="7473" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7474" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7474" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="7474" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7475" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7475" pos:column="33">IVxTrackingPoint</name> <type:modifier pos:line="7475" pos:column="50">*</type:modifier><type:modifier pos:line="7475" pos:column="51">*</type:modifier></type><name pos:line="7475" pos:column="52">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7477" pos:column="9">HRESULT</name></type> ( <name pos:line="7477" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7477" pos:column="37">*</type:modifier><name pos:line="7477" pos:column="38">CreateTrackingPoint_2</name> )<parameter_list pos:line="7477" pos:column="61">( 
            <param><decl><type><name pos:line="7478" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7478" pos:column="29">*</type:modifier></type> <name pos:line="7478" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7479" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7479" pos:column="24">int</name></type> <name pos:line="7479" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7480" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7480" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="7480" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7481" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7481" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="7481" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="7482" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7482" pos:column="33">IVxTrackingPoint</name> <type:modifier pos:line="7482" pos:column="50">*</type:modifier><type:modifier pos:line="7482" pos:column="51">*</type:modifier></type><name pos:line="7482" pos:column="52">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7484" pos:column="9">HRESULT</name></type> ( <name pos:line="7484" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7484" pos:column="37">*</type:modifier><name pos:line="7484" pos:column="38">CreateTrackingSpan</name> )<parameter_list pos:line="7484" pos:column="58">( 
            <param><decl><type><name pos:line="7485" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7485" pos:column="29">*</type:modifier></type> <name pos:line="7485" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7486" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7486" pos:column="24">VxSpan</name></type> <name pos:line="7486" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="7487" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7487" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7487" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7488" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7488" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7488" pos:column="49">*</type:modifier><type:modifier pos:line="7488" pos:column="50">*</type:modifier></type><name pos:line="7488" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7490" pos:column="9">HRESULT</name></type> ( <name pos:line="7490" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7490" pos:column="37">*</type:modifier><name pos:line="7490" pos:column="38">CreateTrackingSpan_2</name> )<parameter_list pos:line="7490" pos:column="60">( 
            <param><decl><type><name pos:line="7491" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7491" pos:column="29">*</type:modifier></type> <name pos:line="7491" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7492" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7492" pos:column="24">VxSpan</name></type> <name pos:line="7492" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="7493" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7493" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7493" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7494" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7494" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="7494" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="7495" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7495" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7495" pos:column="49">*</type:modifier><type:modifier pos:line="7495" pos:column="50">*</type:modifier></type><name pos:line="7495" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7497" pos:column="9">HRESULT</name></type> ( <name pos:line="7497" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7497" pos:column="37">*</type:modifier><name pos:line="7497" pos:column="38">CreateTrackingSpan_3</name> )<parameter_list pos:line="7497" pos:column="60">( 
            <param><decl><type><name pos:line="7498" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7498" pos:column="29">*</type:modifier></type> <name pos:line="7498" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7499" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7499" pos:column="24">int</name></type> <name pos:line="7499" pos:column="28">start</name></decl></param>,
            <comment type="block" pos:line="7500" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7500" pos:column="24">int</name></type> <name pos:line="7500" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="7501" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7501" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7501" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7502" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7502" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7502" pos:column="49">*</type:modifier><type:modifier pos:line="7502" pos:column="50">*</type:modifier></type><name pos:line="7502" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7504" pos:column="9">HRESULT</name></type> ( <name pos:line="7504" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7504" pos:column="37">*</type:modifier><name pos:line="7504" pos:column="38">CreateTrackingSpan_4</name> )<parameter_list pos:line="7504" pos:column="60">( 
            <param><decl><type><name pos:line="7505" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7505" pos:column="29">*</type:modifier></type> <name pos:line="7505" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7506" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7506" pos:column="24">int</name></type> <name pos:line="7506" pos:column="28">start</name></decl></param>,
            <comment type="block" pos:line="7507" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7507" pos:column="24">int</name></type> <name pos:line="7507" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="7508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7508" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7508" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7509" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7509" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="7509" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="7510" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7510" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7510" pos:column="49">*</type:modifier><type:modifier pos:line="7510" pos:column="50">*</type:modifier></type><name pos:line="7510" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7512" pos:column="9">HRESULT</name></type> ( <name pos:line="7512" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7512" pos:column="37">*</type:modifier><name pos:line="7512" pos:column="38">GetLineFromLineNumber</name> )<parameter_list pos:line="7512" pos:column="61">( 
            <param><decl><type><name pos:line="7513" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7513" pos:column="29">*</type:modifier></type> <name pos:line="7513" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7514" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7514" pos:column="24">int</name></type> <name pos:line="7514" pos:column="28">lineNumber</name></decl></param>,
            <comment type="block" pos:line="7515" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7515" pos:column="33">IVxTextSnapshotLine</name> <type:modifier pos:line="7515" pos:column="53">*</type:modifier><type:modifier pos:line="7515" pos:column="54">*</type:modifier></type><name pos:line="7515" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7517" pos:column="9">HRESULT</name></type> ( <name pos:line="7517" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7517" pos:column="37">*</type:modifier><name pos:line="7517" pos:column="38">GetLineFromPosition</name> )<parameter_list pos:line="7517" pos:column="59">( 
            <param><decl><type><name pos:line="7518" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7518" pos:column="29">*</type:modifier></type> <name pos:line="7518" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7519" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7519" pos:column="24">int</name></type> <name pos:line="7519" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7520" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7520" pos:column="33">IVxTextSnapshotLine</name> <type:modifier pos:line="7520" pos:column="53">*</type:modifier><type:modifier pos:line="7520" pos:column="54">*</type:modifier></type><name pos:line="7520" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7522" pos:column="9">HRESULT</name></type> ( <name pos:line="7522" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7522" pos:column="37">*</type:modifier><name pos:line="7522" pos:column="38">GetLineNumberFromPosition</name> )<parameter_list pos:line="7522" pos:column="65">( 
            <param><decl><type><name pos:line="7523" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7523" pos:column="29">*</type:modifier></type> <name pos:line="7523" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7524" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7524" pos:column="24">int</name></type> <name pos:line="7524" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7525" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7525" pos:column="33">int</name> <type:modifier pos:line="7525" pos:column="37">*</type:modifier></type><name pos:line="7525" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7527" pos:column="9">HRESULT</name></type> ( <name pos:line="7527" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7527" pos:column="37">*</type:modifier><name pos:line="7527" pos:column="38">GetLines</name> )<parameter_list pos:line="7527" pos:column="48">( 
            <param><decl><type><name pos:line="7528" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7528" pos:column="29">*</type:modifier></type> <name pos:line="7528" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7529" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7529" pos:column="33">IEnumerableIVxTextSnapshotLine</name> <type:modifier pos:line="7529" pos:column="64">*</type:modifier><type:modifier pos:line="7529" pos:column="65">*</type:modifier></type><name pos:line="7529" pos:column="66">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7531" pos:column="9">HRESULT</name></type> ( <name pos:line="7531" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7531" pos:column="37">*</type:modifier><name pos:line="7531" pos:column="38">Write</name> )<parameter_list pos:line="7531" pos:column="45">( 
            <param><decl><type><name pos:line="7532" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7532" pos:column="29">*</type:modifier></type> <name pos:line="7532" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7533" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7533" pos:column="24">IUnknown</name> <type:modifier pos:line="7533" pos:column="33">*</type:modifier></type><name pos:line="7533" pos:column="34">pWriter</name></decl></param>,
            <comment type="block" pos:line="7534" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7534" pos:column="24">VxSpan</name></type> <name pos:line="7534" pos:column="31">span</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7536" pos:column="9">HRESULT</name></type> ( <name pos:line="7536" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7536" pos:column="37">*</type:modifier><name pos:line="7536" pos:column="38">Write_2</name> )<parameter_list pos:line="7536" pos:column="47">( 
            <param><decl><type><name pos:line="7537" pos:column="13">IVxTextSnapshot</name> <type:modifier pos:line="7537" pos:column="29">*</type:modifier></type> <name pos:line="7537" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="7538" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7538" pos:column="24">IUnknown</name> <type:modifier pos:line="7538" pos:column="33">*</type:modifier></type><name pos:line="7538" pos:column="34">pWriter</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7540" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7541" pos:column="7">IVxTextSnapshotVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7543" pos:column="5">interface</name></type> <name pos:line="7543" pos:column="15">IVxTextSnapshot</name>
    <argument_list pos:line="7544" pos:column="5">{
        <argument><expr><name pos:line="7545" pos:column="9">CONST_VTBL</name> struct <name pos:line="7545" pos:column="27">IVxTextSnapshotVtbl</name> <op:operator pos:line="7545" pos:column="47">*</op:operator><name pos:line="7545" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7550" pos:column="1">#<cpp:directive pos:line="7550" pos:column="2">ifdef</cpp:directive> <name pos:line="7550" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7553" pos:column="1">#<cpp:directive pos:line="7553" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7553" pos:column="9">IVxTextSnapshot_QueryInterface</name><parameter_list pos:line="7553" pos:column="39">(<param><type><name pos:line="7553" pos:column="40">This</name></type></param>,<param><type><name pos:line="7553" pos:column="45">riid</name></type></param>,<param><type><name pos:line="7553" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7554" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7556" pos:column="1">#<cpp:directive pos:line="7556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7556" pos:column="9">IVxTextSnapshot_AddRef</name><parameter_list pos:line="7556" pos:column="31">(<param><type><name pos:line="7556" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7557" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7559" pos:column="1">#<cpp:directive pos:line="7559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7559" pos:column="9">IVxTextSnapshot_Release</name><parameter_list pos:line="7559" pos:column="32">(<param><type><name pos:line="7559" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7560" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7563" pos:column="1">#<cpp:directive pos:line="7563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7563" pos:column="9">IVxTextSnapshot_GetTextBuffer</name><parameter_list pos:line="7563" pos:column="38">(<param><type><name pos:line="7563" pos:column="39">This</name></type></param>,<param><type><name pos:line="7563" pos:column="44">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7564" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7566" pos:column="1">#<cpp:directive pos:line="7566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7566" pos:column="9">IVxTextSnapshot_GetContentType</name><parameter_list pos:line="7566" pos:column="39">(<param><type><name pos:line="7566" pos:column="40">This</name></type></param>,<param><type><name pos:line="7566" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7567" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7569" pos:column="1">#<cpp:directive pos:line="7569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7569" pos:column="9">IVxTextSnapshot_GetVersion</name><parameter_list pos:line="7569" pos:column="35">(<param><type><name pos:line="7569" pos:column="36">This</name></type></param>,<param><type><name pos:line="7569" pos:column="41">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7570" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7572" pos:column="1">#<cpp:directive pos:line="7572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7572" pos:column="9">IVxTextSnapshot_GetLength</name><parameter_list pos:line="7572" pos:column="34">(<param><type><name pos:line="7572" pos:column="35">This</name></type></param>,<param><type><name pos:line="7572" pos:column="40">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7573" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7575" pos:column="1">#<cpp:directive pos:line="7575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7575" pos:column="9">IVxTextSnapshot_GetLineCount</name><parameter_list pos:line="7575" pos:column="37">(<param><type><name pos:line="7575" pos:column="38">This</name></type></param>,<param><type><name pos:line="7575" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7576" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7578" pos:column="1">#<cpp:directive pos:line="7578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7578" pos:column="9">IVxTextSnapshot_GetText</name><parameter_list pos:line="7578" pos:column="32">(<param><type><name pos:line="7578" pos:column="33">This</name></type></param>,<param><type><name pos:line="7578" pos:column="38">span</name></type></param>,<param><type><name pos:line="7578" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7579" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,span,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7581" pos:column="1">#<cpp:directive pos:line="7581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7581" pos:column="9">IVxTextSnapshot_GetText_2</name><parameter_list pos:line="7581" pos:column="34">(<param><type><name pos:line="7581" pos:column="35">This</name></type></param>,<param><type><name pos:line="7581" pos:column="40">startIndex</name></type></param>,<param><type><name pos:line="7581" pos:column="51">length</name></type></param>,<param><type><name pos:line="7581" pos:column="58">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7582" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText_2(This,startIndex,length,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7584" pos:column="1">#<cpp:directive pos:line="7584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7584" pos:column="9">IVxTextSnapshot_GetText_3</name><parameter_list pos:line="7584" pos:column="34">(<param><type><name pos:line="7584" pos:column="35">This</name></type></param>,<param><type><name pos:line="7584" pos:column="40">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7585" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText_3(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7587" pos:column="1">#<cpp:directive pos:line="7587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7587" pos:column="9">IVxTextSnapshot_CreateTrackingPoint</name><parameter_list pos:line="7587" pos:column="44">(<param><type><name pos:line="7587" pos:column="45">This</name></type></param>,<param><type><name pos:line="7587" pos:column="50">position</name></type></param>,<param><type><name pos:line="7587" pos:column="59">trackingMode</name></type></param>,<param><type><name pos:line="7587" pos:column="72">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7588" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingPoint(This,position,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7590" pos:column="1">#<cpp:directive pos:line="7590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7590" pos:column="9">IVxTextSnapshot_CreateTrackingPoint_2</name><parameter_list pos:line="7590" pos:column="46">(<param><type><name pos:line="7590" pos:column="47">This</name></type></param>,<param><type><name pos:line="7590" pos:column="52">position</name></type></param>,<param><type><name pos:line="7590" pos:column="61">trackingMode</name></type></param>,<param><type><name pos:line="7590" pos:column="74">trackingFidelity</name></type></param>,<param><type><name pos:line="7590" pos:column="91">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7591" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingPoint_2(This,position,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7593" pos:column="1">#<cpp:directive pos:line="7593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7593" pos:column="9">IVxTextSnapshot_CreateTrackingSpan</name><parameter_list pos:line="7593" pos:column="43">(<param><type><name pos:line="7593" pos:column="44">This</name></type></param>,<param><type><name pos:line="7593" pos:column="49">span</name></type></param>,<param><type><name pos:line="7593" pos:column="54">trackingMode</name></type></param>,<param><type><name pos:line="7593" pos:column="67">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7594" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan(This,span,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7596" pos:column="1">#<cpp:directive pos:line="7596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7596" pos:column="9">IVxTextSnapshot_CreateTrackingSpan_2</name><parameter_list pos:line="7596" pos:column="45">(<param><type><name pos:line="7596" pos:column="46">This</name></type></param>,<param><type><name pos:line="7596" pos:column="51">span</name></type></param>,<param><type><name pos:line="7596" pos:column="56">trackingMode</name></type></param>,<param><type><name pos:line="7596" pos:column="69">trackingFidelity</name></type></param>,<param><type><name pos:line="7596" pos:column="86">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7597" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_2(This,span,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7599" pos:column="1">#<cpp:directive pos:line="7599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7599" pos:column="9">IVxTextSnapshot_CreateTrackingSpan_3</name><parameter_list pos:line="7599" pos:column="45">(<param><type><name pos:line="7599" pos:column="46">This</name></type></param>,<param><type><name pos:line="7599" pos:column="51">start</name></type></param>,<param><type><name pos:line="7599" pos:column="57">length</name></type></param>,<param><type><name pos:line="7599" pos:column="64">trackingMode</name></type></param>,<param><type><name pos:line="7599" pos:column="77">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7600" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_3(This,start,length,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7602" pos:column="1">#<cpp:directive pos:line="7602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7602" pos:column="9">IVxTextSnapshot_CreateTrackingSpan_4</name><parameter_list pos:line="7602" pos:column="45">(<param><type><name pos:line="7602" pos:column="46">This</name></type></param>,<param><type><name pos:line="7602" pos:column="51">start</name></type></param>,<param><type><name pos:line="7602" pos:column="57">length</name></type></param>,<param><type><name pos:line="7602" pos:column="64">trackingMode</name></type></param>,<param><type><name pos:line="7602" pos:column="77">trackingFidelity</name></type></param>,<param><type><name pos:line="7602" pos:column="94">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7603" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_4(This,start,length,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7605" pos:column="1">#<cpp:directive pos:line="7605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7605" pos:column="9">IVxTextSnapshot_GetLineFromLineNumber</name><parameter_list pos:line="7605" pos:column="46">(<param><type><name pos:line="7605" pos:column="47">This</name></type></param>,<param><type><name pos:line="7605" pos:column="52">lineNumber</name></type></param>,<param><type><name pos:line="7605" pos:column="63">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7606" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineFromLineNumber(This,lineNumber,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7608" pos:column="1">#<cpp:directive pos:line="7608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7608" pos:column="9">IVxTextSnapshot_GetLineFromPosition</name><parameter_list pos:line="7608" pos:column="44">(<param><type><name pos:line="7608" pos:column="45">This</name></type></param>,<param><type><name pos:line="7608" pos:column="50">position</name></type></param>,<param><type><name pos:line="7608" pos:column="59">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7609" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineFromPosition(This,position,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7611" pos:column="1">#<cpp:directive pos:line="7611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7611" pos:column="9">IVxTextSnapshot_GetLineNumberFromPosition</name><parameter_list pos:line="7611" pos:column="50">(<param><type><name pos:line="7611" pos:column="51">This</name></type></param>,<param><type><name pos:line="7611" pos:column="56">position</name></type></param>,<param><type><name pos:line="7611" pos:column="65">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7612" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineNumberFromPosition(This,position,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7614" pos:column="1">#<cpp:directive pos:line="7614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7614" pos:column="9">IVxTextSnapshot_GetLines</name><parameter_list pos:line="7614" pos:column="33">(<param><type><name pos:line="7614" pos:column="34">This</name></type></param>,<param><type><name pos:line="7614" pos:column="39">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7615" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLines(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7617" pos:column="1">#<cpp:directive pos:line="7617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7617" pos:column="9">IVxTextSnapshot_Write</name><parameter_list pos:line="7617" pos:column="30">(<param><type><name pos:line="7617" pos:column="31">This</name></type></param>,<param><type><name pos:line="7617" pos:column="36">pWriter</name></type></param>,<param><type><name pos:line="7617" pos:column="44">span</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7618" pos:column="5">( (This)-&gt;lpVtbl -&gt; Write(This,pWriter,span) )</cpp:value></cpp:define> 

<cpp:define pos:line="7620" pos:column="1">#<cpp:directive pos:line="7620" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7620" pos:column="9">IVxTextSnapshot_Write_2</name><parameter_list pos:line="7620" pos:column="32">(<param><type><name pos:line="7620" pos:column="33">This</name></type></param>,<param><type><name pos:line="7620" pos:column="38">pWriter</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7621" pos:column="5">( (This)-&gt;lpVtbl -&gt; Write_2(This,pWriter) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7623" pos:column="1">#<cpp:directive pos:line="7623" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7623" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7626" pos:column="1">#<cpp:directive pos:line="7626" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7626" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7631" pos:column="1">#<cpp:directive pos:line="7631" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7631" pos:column="9">/* __IVxTextSnapshot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7634" pos:column="1">#<cpp:directive pos:line="7634" pos:column="2">ifndef</cpp:directive> <name pos:line="7634" pos:column="9">__IVxTextSnapshotLine_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7635" pos:column="1">#<cpp:directive pos:line="7635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7635" pos:column="9">__IVxTextSnapshotLine_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7637" pos:column="1">/* interface IVxTextSnapshotLine */</comment>
<comment type="block" pos:line="7638" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7641" pos:column="1">EXTERN_C</name> <specifier pos:line="7641" pos:column="10">const</specifier> <name pos:line="7641" pos:column="16">IID</name></type> <name pos:line="7641" pos:column="20">IID_IVxTextSnapshotLine</name></decl>;</decl_stmt>

<cpp:if pos:line="7643" pos:column="1">#<cpp:directive pos:line="7643" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7643" pos:column="5">defined</name><argument_list pos:line="7643" pos:column="12">(<argument><expr><name pos:line="7643" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7643" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7643" pos:column="29">!</op:operator><call><name pos:line="7643" pos:column="30">defined</name><argument_list pos:line="7643" pos:column="37">(<argument><expr><name pos:line="7643" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7645" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7645" pos:column="19">(<argument pos:line="7645" pos:column="20">"7b15e2bd-277b-42e8-869f-71b9fb79f962"</argument>)</argument_list></macro>
    <label><name pos:line="7646" pos:column="5">IVxTextSnapshotLine</name> :</label> <expr_stmt><expr pos:line="7646" pos:column="27">public <name pos:line="7646" pos:column="34">IUnknown</name>
    <block pos:line="7647" pos:column="5">{
    <expr pos:line="7648" pos:column="5">public<op:operator pos:line="7648" pos:column="11">:</op:operator>
        virtual <name pos:line="7649" pos:column="17">HRESULT</name> <name pos:line="7649" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7649" pos:column="43">GetSnapshot</name><argument_list pos:line="7649" pos:column="54">( 
            <comment type="block" pos:line="7650" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7650" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="7650" pos:column="49">*</op:operator><op:operator pos:line="7650" pos:column="50">*</op:operator><name pos:line="7650" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7650" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7650" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7652" pos:column="9">virtual <name pos:line="7652" pos:column="17">HRESULT</name> <name pos:line="7652" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7652" pos:column="43">GetExtent</name><argument_list pos:line="7652" pos:column="52">( 
            <comment type="block" pos:line="7653" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7653" pos:column="33">VxSnapshotSpan</name> <op:operator pos:line="7653" pos:column="48">*</op:operator><name pos:line="7653" pos:column="49">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7653" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="7653" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="7655" pos:column="9">virtual <name pos:line="7655" pos:column="17">HRESULT</name> <name pos:line="7655" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7655" pos:column="43">GetExtentIncludingLineBreak</name><argument_list pos:line="7655" pos:column="70">( 
            <comment type="block" pos:line="7656" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7656" pos:column="33">VxSnapshotSpan</name> <op:operator pos:line="7656" pos:column="48">*</op:operator><name pos:line="7656" pos:column="49">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7656" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="7656" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="7658" pos:column="9">virtual <name pos:line="7658" pos:column="17">HRESULT</name> <name pos:line="7658" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7658" pos:column="43">GetLineNumber</name><argument_list pos:line="7658" pos:column="56">( 
            <comment type="block" pos:line="7659" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7659" pos:column="33">int</name> <op:operator pos:line="7659" pos:column="37">*</op:operator><name pos:line="7659" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7659" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7659" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7661" pos:column="9">virtual <name pos:line="7661" pos:column="17">HRESULT</name> <name pos:line="7661" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7661" pos:column="43">GetStart</name><argument_list pos:line="7661" pos:column="51">( 
            <comment type="block" pos:line="7662" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7662" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="7662" pos:column="49">*</op:operator><name pos:line="7662" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7662" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="7662" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="7664" pos:column="9">virtual <name pos:line="7664" pos:column="17">HRESULT</name> <name pos:line="7664" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7664" pos:column="43">GetLength</name><argument_list pos:line="7664" pos:column="52">( 
            <comment type="block" pos:line="7665" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7665" pos:column="33">int</name> <op:operator pos:line="7665" pos:column="37">*</op:operator><name pos:line="7665" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7665" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7665" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7667" pos:column="9">virtual <name pos:line="7667" pos:column="17">HRESULT</name> <name pos:line="7667" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7667" pos:column="43">GetLengthIncludingLineBreak</name><argument_list pos:line="7667" pos:column="70">( 
            <comment type="block" pos:line="7668" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7668" pos:column="33">int</name> <op:operator pos:line="7668" pos:column="37">*</op:operator><name pos:line="7668" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7668" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7668" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7670" pos:column="9">virtual <name pos:line="7670" pos:column="17">HRESULT</name> <name pos:line="7670" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7670" pos:column="43">GetEnd</name><argument_list pos:line="7670" pos:column="49">( 
            <comment type="block" pos:line="7671" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7671" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="7671" pos:column="49">*</op:operator><name pos:line="7671" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7671" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="7671" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="7673" pos:column="9">virtual <name pos:line="7673" pos:column="17">HRESULT</name> <name pos:line="7673" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7673" pos:column="43">GetEndIncludingLineBreak</name><argument_list pos:line="7673" pos:column="67">( 
            <comment type="block" pos:line="7674" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7674" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="7674" pos:column="49">*</op:operator><name pos:line="7674" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7674" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="7674" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="7676" pos:column="9">virtual <name pos:line="7676" pos:column="17">HRESULT</name> <name pos:line="7676" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7676" pos:column="43">GetLineBreakLength</name><argument_list pos:line="7676" pos:column="61">( 
            <comment type="block" pos:line="7677" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7677" pos:column="33">int</name> <op:operator pos:line="7677" pos:column="37">*</op:operator><name pos:line="7677" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7677" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7677" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7679" pos:column="9">virtual <name pos:line="7679" pos:column="17">HRESULT</name> <name pos:line="7679" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7679" pos:column="43">GetText</name><argument_list pos:line="7679" pos:column="50">( 
            <comment type="block" pos:line="7680" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7680" pos:column="33">BSTR</name> <op:operator pos:line="7680" pos:column="38">*</op:operator><name pos:line="7680" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7680" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7680" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7682" pos:column="9">virtual <name pos:line="7682" pos:column="17">HRESULT</name> <name pos:line="7682" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7682" pos:column="43">GetTextIncludingLineBreak</name><argument_list pos:line="7682" pos:column="68">( 
            <comment type="block" pos:line="7683" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7683" pos:column="33">BSTR</name> <op:operator pos:line="7683" pos:column="38">*</op:operator><name pos:line="7683" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7683" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7683" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="7685" pos:column="9">virtual <name pos:line="7685" pos:column="17">HRESULT</name> <name pos:line="7685" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7685" pos:column="43">GetLineBreakText</name><argument_list pos:line="7685" pos:column="59">( 
            <comment type="block" pos:line="7686" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7686" pos:column="33">BSTR</name> <op:operator pos:line="7686" pos:column="38">*</op:operator><name pos:line="7686" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7686" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="7686" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7690" pos:column="1">#<cpp:directive pos:line="7690" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7690" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7692" pos:column="5">typedef <type><struct pos:line="7692" pos:column="13">struct <name pos:line="7692" pos:column="20">IVxTextSnapshotLineVtbl</name>
    <block pos:line="7693" pos:column="5">{<public type="default" pos:line="7693" pos:column="6">
        <function_decl><type><name pos:line="7694" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7696" pos:column="9">HRESULT</name></type> ( <name pos:line="7696" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7696" pos:column="37">*</type:modifier><name pos:line="7696" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7696" pos:column="54">( 
            <param><decl><type><name pos:line="7697" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7697" pos:column="33">*</type:modifier></type> <name pos:line="7697" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7698" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7698" pos:column="24">REFIID</name></type> <name pos:line="7698" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="7699" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7700" pos:column="13">__RPC__deref_out</name>  <name pos:line="7700" pos:column="31">void</name> <type:modifier pos:line="7700" pos:column="36">*</type:modifier><type:modifier pos:line="7700" pos:column="37">*</type:modifier></type><name pos:line="7700" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7702" pos:column="9">ULONG</name></type> ( <name pos:line="7702" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7702" pos:column="35">*</type:modifier><name pos:line="7702" pos:column="36">AddRef</name> )<parameter_list pos:line="7702" pos:column="44">( 
            <param><decl><type><name pos:line="7703" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7703" pos:column="33">*</type:modifier></type> <name pos:line="7703" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7705" pos:column="9">ULONG</name></type> ( <name pos:line="7705" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7705" pos:column="35">*</type:modifier><name pos:line="7705" pos:column="36">Release</name> )<parameter_list pos:line="7705" pos:column="45">( 
            <param><decl><type><name pos:line="7706" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7706" pos:column="33">*</type:modifier></type> <name pos:line="7706" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7708" pos:column="9">HRESULT</name></type> ( <name pos:line="7708" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7708" pos:column="37">*</type:modifier><name pos:line="7708" pos:column="38">GetSnapshot</name> )<parameter_list pos:line="7708" pos:column="51">( 
            <param><decl><type><name pos:line="7709" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7709" pos:column="33">*</type:modifier></type> <name pos:line="7709" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7710" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7710" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="7710" pos:column="49">*</type:modifier><type:modifier pos:line="7710" pos:column="50">*</type:modifier></type><name pos:line="7710" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7712" pos:column="9">HRESULT</name></type> ( <name pos:line="7712" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7712" pos:column="37">*</type:modifier><name pos:line="7712" pos:column="38">GetExtent</name> )<parameter_list pos:line="7712" pos:column="49">( 
            <param><decl><type><name pos:line="7713" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7713" pos:column="33">*</type:modifier></type> <name pos:line="7713" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7714" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7714" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="7714" pos:column="48">*</type:modifier></type><name pos:line="7714" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7716" pos:column="9">HRESULT</name></type> ( <name pos:line="7716" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7716" pos:column="37">*</type:modifier><name pos:line="7716" pos:column="38">GetExtentIncludingLineBreak</name> )<parameter_list pos:line="7716" pos:column="67">( 
            <param><decl><type><name pos:line="7717" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7717" pos:column="33">*</type:modifier></type> <name pos:line="7717" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7718" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7718" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="7718" pos:column="48">*</type:modifier></type><name pos:line="7718" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7720" pos:column="9">HRESULT</name></type> ( <name pos:line="7720" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7720" pos:column="37">*</type:modifier><name pos:line="7720" pos:column="38">GetLineNumber</name> )<parameter_list pos:line="7720" pos:column="53">( 
            <param><decl><type><name pos:line="7721" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7721" pos:column="33">*</type:modifier></type> <name pos:line="7721" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7722" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7722" pos:column="33">int</name> <type:modifier pos:line="7722" pos:column="37">*</type:modifier></type><name pos:line="7722" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7724" pos:column="9">HRESULT</name></type> ( <name pos:line="7724" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7724" pos:column="37">*</type:modifier><name pos:line="7724" pos:column="38">GetStart</name> )<parameter_list pos:line="7724" pos:column="48">( 
            <param><decl><type><name pos:line="7725" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7725" pos:column="33">*</type:modifier></type> <name pos:line="7725" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7726" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7726" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="7726" pos:column="49">*</type:modifier></type><name pos:line="7726" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7728" pos:column="9">HRESULT</name></type> ( <name pos:line="7728" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7728" pos:column="37">*</type:modifier><name pos:line="7728" pos:column="38">GetLength</name> )<parameter_list pos:line="7728" pos:column="49">( 
            <param><decl><type><name pos:line="7729" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7729" pos:column="33">*</type:modifier></type> <name pos:line="7729" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7730" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7730" pos:column="33">int</name> <type:modifier pos:line="7730" pos:column="37">*</type:modifier></type><name pos:line="7730" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7732" pos:column="9">HRESULT</name></type> ( <name pos:line="7732" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7732" pos:column="37">*</type:modifier><name pos:line="7732" pos:column="38">GetLengthIncludingLineBreak</name> )<parameter_list pos:line="7732" pos:column="67">( 
            <param><decl><type><name pos:line="7733" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7733" pos:column="33">*</type:modifier></type> <name pos:line="7733" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7734" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7734" pos:column="33">int</name> <type:modifier pos:line="7734" pos:column="37">*</type:modifier></type><name pos:line="7734" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7736" pos:column="9">HRESULT</name></type> ( <name pos:line="7736" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7736" pos:column="37">*</type:modifier><name pos:line="7736" pos:column="38">GetEnd</name> )<parameter_list pos:line="7736" pos:column="46">( 
            <param><decl><type><name pos:line="7737" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7737" pos:column="33">*</type:modifier></type> <name pos:line="7737" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7738" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7738" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="7738" pos:column="49">*</type:modifier></type><name pos:line="7738" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7740" pos:column="9">HRESULT</name></type> ( <name pos:line="7740" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7740" pos:column="37">*</type:modifier><name pos:line="7740" pos:column="38">GetEndIncludingLineBreak</name> )<parameter_list pos:line="7740" pos:column="64">( 
            <param><decl><type><name pos:line="7741" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7741" pos:column="33">*</type:modifier></type> <name pos:line="7741" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7742" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7742" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="7742" pos:column="49">*</type:modifier></type><name pos:line="7742" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7744" pos:column="9">HRESULT</name></type> ( <name pos:line="7744" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7744" pos:column="37">*</type:modifier><name pos:line="7744" pos:column="38">GetLineBreakLength</name> )<parameter_list pos:line="7744" pos:column="58">( 
            <param><decl><type><name pos:line="7745" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7745" pos:column="33">*</type:modifier></type> <name pos:line="7745" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7746" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7746" pos:column="33">int</name> <type:modifier pos:line="7746" pos:column="37">*</type:modifier></type><name pos:line="7746" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7748" pos:column="9">HRESULT</name></type> ( <name pos:line="7748" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7748" pos:column="37">*</type:modifier><name pos:line="7748" pos:column="38">GetText</name> )<parameter_list pos:line="7748" pos:column="47">( 
            <param><decl><type><name pos:line="7749" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7749" pos:column="33">*</type:modifier></type> <name pos:line="7749" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7750" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7750" pos:column="33">BSTR</name> <type:modifier pos:line="7750" pos:column="38">*</type:modifier></type><name pos:line="7750" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7752" pos:column="9">HRESULT</name></type> ( <name pos:line="7752" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7752" pos:column="37">*</type:modifier><name pos:line="7752" pos:column="38">GetTextIncludingLineBreak</name> )<parameter_list pos:line="7752" pos:column="65">( 
            <param><decl><type><name pos:line="7753" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7753" pos:column="33">*</type:modifier></type> <name pos:line="7753" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7754" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7754" pos:column="33">BSTR</name> <type:modifier pos:line="7754" pos:column="38">*</type:modifier></type><name pos:line="7754" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7756" pos:column="9">HRESULT</name></type> ( <name pos:line="7756" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7756" pos:column="37">*</type:modifier><name pos:line="7756" pos:column="38">GetLineBreakText</name> )<parameter_list pos:line="7756" pos:column="56">( 
            <param><decl><type><name pos:line="7757" pos:column="13">IVxTextSnapshotLine</name> <type:modifier pos:line="7757" pos:column="33">*</type:modifier></type> <name pos:line="7757" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="7758" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7758" pos:column="33">BSTR</name> <type:modifier pos:line="7758" pos:column="38">*</type:modifier></type><name pos:line="7758" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7760" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7761" pos:column="7">IVxTextSnapshotLineVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7763" pos:column="5">interface</name></type> <name pos:line="7763" pos:column="15">IVxTextSnapshotLine</name>
    <argument_list pos:line="7764" pos:column="5">{
        <argument><expr><name pos:line="7765" pos:column="9">CONST_VTBL</name> struct <name pos:line="7765" pos:column="27">IVxTextSnapshotLineVtbl</name> <op:operator pos:line="7765" pos:column="51">*</op:operator><name pos:line="7765" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7770" pos:column="1">#<cpp:directive pos:line="7770" pos:column="2">ifdef</cpp:directive> <name pos:line="7770" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7773" pos:column="1">#<cpp:directive pos:line="7773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7773" pos:column="9">IVxTextSnapshotLine_QueryInterface</name><parameter_list pos:line="7773" pos:column="43">(<param><type><name pos:line="7773" pos:column="44">This</name></type></param>,<param><type><name pos:line="7773" pos:column="49">riid</name></type></param>,<param><type><name pos:line="7773" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7774" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7776" pos:column="1">#<cpp:directive pos:line="7776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7776" pos:column="9">IVxTextSnapshotLine_AddRef</name><parameter_list pos:line="7776" pos:column="35">(<param><type><name pos:line="7776" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7777" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7779" pos:column="1">#<cpp:directive pos:line="7779" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7779" pos:column="9">IVxTextSnapshotLine_Release</name><parameter_list pos:line="7779" pos:column="36">(<param><type><name pos:line="7779" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7780" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7783" pos:column="1">#<cpp:directive pos:line="7783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7783" pos:column="9">IVxTextSnapshotLine_GetSnapshot</name><parameter_list pos:line="7783" pos:column="40">(<param><type><name pos:line="7783" pos:column="41">This</name></type></param>,<param><type><name pos:line="7783" pos:column="46">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7784" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7786" pos:column="1">#<cpp:directive pos:line="7786" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7786" pos:column="9">IVxTextSnapshotLine_GetExtent</name><parameter_list pos:line="7786" pos:column="38">(<param><type><name pos:line="7786" pos:column="39">This</name></type></param>,<param><type><name pos:line="7786" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7787" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtent(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7789" pos:column="1">#<cpp:directive pos:line="7789" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7789" pos:column="9">IVxTextSnapshotLine_GetExtentIncludingLineBreak</name><parameter_list pos:line="7789" pos:column="56">(<param><type><name pos:line="7789" pos:column="57">This</name></type></param>,<param><type><name pos:line="7789" pos:column="62">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7790" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtentIncludingLineBreak(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7792" pos:column="1">#<cpp:directive pos:line="7792" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7792" pos:column="9">IVxTextSnapshotLine_GetLineNumber</name><parameter_list pos:line="7792" pos:column="42">(<param><type><name pos:line="7792" pos:column="43">This</name></type></param>,<param><type><name pos:line="7792" pos:column="48">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7793" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineNumber(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7795" pos:column="1">#<cpp:directive pos:line="7795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7795" pos:column="9">IVxTextSnapshotLine_GetStart</name><parameter_list pos:line="7795" pos:column="37">(<param><type><name pos:line="7795" pos:column="38">This</name></type></param>,<param><type><name pos:line="7795" pos:column="43">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7796" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStart(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7798" pos:column="1">#<cpp:directive pos:line="7798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7798" pos:column="9">IVxTextSnapshotLine_GetLength</name><parameter_list pos:line="7798" pos:column="38">(<param><type><name pos:line="7798" pos:column="39">This</name></type></param>,<param><type><name pos:line="7798" pos:column="44">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7799" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7801" pos:column="1">#<cpp:directive pos:line="7801" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7801" pos:column="9">IVxTextSnapshotLine_GetLengthIncludingLineBreak</name><parameter_list pos:line="7801" pos:column="56">(<param><type><name pos:line="7801" pos:column="57">This</name></type></param>,<param><type><name pos:line="7801" pos:column="62">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7802" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLengthIncludingLineBreak(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7804" pos:column="1">#<cpp:directive pos:line="7804" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7804" pos:column="9">IVxTextSnapshotLine_GetEnd</name><parameter_list pos:line="7804" pos:column="35">(<param><type><name pos:line="7804" pos:column="36">This</name></type></param>,<param><type><name pos:line="7804" pos:column="41">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7805" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnd(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7807" pos:column="1">#<cpp:directive pos:line="7807" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7807" pos:column="9">IVxTextSnapshotLine_GetEndIncludingLineBreak</name><parameter_list pos:line="7807" pos:column="53">(<param><type><name pos:line="7807" pos:column="54">This</name></type></param>,<param><type><name pos:line="7807" pos:column="59">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7808" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndIncludingLineBreak(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7810" pos:column="1">#<cpp:directive pos:line="7810" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7810" pos:column="9">IVxTextSnapshotLine_GetLineBreakLength</name><parameter_list pos:line="7810" pos:column="47">(<param><type><name pos:line="7810" pos:column="48">This</name></type></param>,<param><type><name pos:line="7810" pos:column="53">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7811" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineBreakLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7813" pos:column="1">#<cpp:directive pos:line="7813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7813" pos:column="9">IVxTextSnapshotLine_GetText</name><parameter_list pos:line="7813" pos:column="36">(<param><type><name pos:line="7813" pos:column="37">This</name></type></param>,<param><type><name pos:line="7813" pos:column="42">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7814" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7816" pos:column="1">#<cpp:directive pos:line="7816" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7816" pos:column="9">IVxTextSnapshotLine_GetTextIncludingLineBreak</name><parameter_list pos:line="7816" pos:column="54">(<param><type><name pos:line="7816" pos:column="55">This</name></type></param>,<param><type><name pos:line="7816" pos:column="60">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7817" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextIncludingLineBreak(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="7819" pos:column="1">#<cpp:directive pos:line="7819" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7819" pos:column="9">IVxTextSnapshotLine_GetLineBreakText</name><parameter_list pos:line="7819" pos:column="45">(<param><type><name pos:line="7819" pos:column="46">This</name></type></param>,<param><type><name pos:line="7819" pos:column="51">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7820" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineBreakText(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7822" pos:column="1">#<cpp:directive pos:line="7822" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7822" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7825" pos:column="1">#<cpp:directive pos:line="7825" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7825" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7830" pos:column="1">#<cpp:directive pos:line="7830" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7830" pos:column="9">/* __IVxTextSnapshotLine_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7833" pos:column="1">#<cpp:directive pos:line="7833" pos:column="2">ifndef</cpp:directive> <name pos:line="7833" pos:column="9">__IVxTextVersion_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7834" pos:column="1">#<cpp:directive pos:line="7834" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7834" pos:column="9">__IVxTextVersion_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7836" pos:column="1">/* interface IVxTextVersion */</comment>
<comment type="block" pos:line="7837" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7840" pos:column="1">EXTERN_C</name> <specifier pos:line="7840" pos:column="10">const</specifier> <name pos:line="7840" pos:column="16">IID</name></type> <name pos:line="7840" pos:column="20">IID_IVxTextVersion</name></decl>;</decl_stmt>

<cpp:if pos:line="7842" pos:column="1">#<cpp:directive pos:line="7842" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7842" pos:column="5">defined</name><argument_list pos:line="7842" pos:column="12">(<argument><expr><name pos:line="7842" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7842" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7842" pos:column="29">!</op:operator><call><name pos:line="7842" pos:column="30">defined</name><argument_list pos:line="7842" pos:column="37">(<argument><expr><name pos:line="7842" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7844" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7844" pos:column="19">(<argument pos:line="7844" pos:column="20">"dc22e98b-dee1-4836-8fcc-ae137a47b89e"</argument>)</argument_list></macro>
    <label><name pos:line="7845" pos:column="5">IVxTextVersion</name> :</label> <expr_stmt><expr pos:line="7845" pos:column="22">public <name pos:line="7845" pos:column="29">IUnknown</name>
    <block pos:line="7846" pos:column="5">{
    <expr pos:line="7847" pos:column="5">public<op:operator pos:line="7847" pos:column="11">:</op:operator>
        virtual <name pos:line="7848" pos:column="17">HRESULT</name> <name pos:line="7848" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7848" pos:column="43">GetNext</name><argument_list pos:line="7848" pos:column="50">( 
            <comment type="block" pos:line="7849" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7849" pos:column="33">IVxTextVersion</name> <op:operator pos:line="7849" pos:column="48">*</op:operator><op:operator pos:line="7849" pos:column="49">*</op:operator><name pos:line="7849" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7849" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="7849" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="7851" pos:column="9">virtual <name pos:line="7851" pos:column="17">HRESULT</name> <name pos:line="7851" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7851" pos:column="43">GetLength</name><argument_list pos:line="7851" pos:column="52">( 
            <comment type="block" pos:line="7852" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7852" pos:column="33">int</name> <op:operator pos:line="7852" pos:column="37">*</op:operator><name pos:line="7852" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7852" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7852" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7854" pos:column="9">virtual <name pos:line="7854" pos:column="17">HRESULT</name> <name pos:line="7854" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7854" pos:column="43">GetChanges</name><argument_list pos:line="7854" pos:column="53">( 
            <comment type="block" pos:line="7855" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7855" pos:column="33">IVxNormalizedTextChangeCollection</name> <op:operator pos:line="7855" pos:column="67">*</op:operator><op:operator pos:line="7855" pos:column="68">*</op:operator><name pos:line="7855" pos:column="69">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7855" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="7855" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="7857" pos:column="9">virtual <name pos:line="7857" pos:column="17">HRESULT</name> <name pos:line="7857" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7857" pos:column="43">CreateTrackingPoint</name><argument_list pos:line="7857" pos:column="62">( 
            <comment type="block" pos:line="7858" pos:column="13">/* [in] */</comment> <argument pos:line="7858" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7859" pos:column="13">/* [in] */</comment> <argument pos:line="7859" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7860" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7860" pos:column="33">IVxTrackingPoint **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7860" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="7860" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="7862" pos:column="9">virtual <name pos:line="7862" pos:column="17">HRESULT</name> <name pos:line="7862" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7862" pos:column="43">CreateTrackingPoint_2</name><argument_list pos:line="7862" pos:column="64">( 
            <comment type="block" pos:line="7863" pos:column="13">/* [in] */</comment> <argument pos:line="7863" pos:column="24">int position</argument>,
            <comment type="block" pos:line="7864" pos:column="13">/* [in] */</comment> <argument pos:line="7864" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7865" pos:column="13">/* [in] */</comment> <argument pos:line="7865" pos:column="24">VxTrackingFidelityMode trackingFidelity</argument>,
            <comment type="block" pos:line="7866" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7866" pos:column="33">IVxTrackingPoint **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7866" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="7866" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="7868" pos:column="9">virtual <name pos:line="7868" pos:column="17">HRESULT</name> <name pos:line="7868" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7868" pos:column="43">CreateTrackingSpan</name><argument_list pos:line="7868" pos:column="61">( 
            <comment type="block" pos:line="7869" pos:column="13">/* [in] */</comment> <argument pos:line="7869" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="7870" pos:column="13">/* [in] */</comment> <argument pos:line="7870" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7871" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7871" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7871" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7871" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7873" pos:column="9">virtual <name pos:line="7873" pos:column="17">HRESULT</name> <name pos:line="7873" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7873" pos:column="43">CreateTrackingSpan_2</name><argument_list pos:line="7873" pos:column="63">( 
            <comment type="block" pos:line="7874" pos:column="13">/* [in] */</comment> <argument pos:line="7874" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="7875" pos:column="13">/* [in] */</comment> <argument pos:line="7875" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7876" pos:column="13">/* [in] */</comment> <argument pos:line="7876" pos:column="24">VxTrackingFidelityMode trackingFidelity</argument>,
            <comment type="block" pos:line="7877" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7877" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7877" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7877" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7879" pos:column="9">virtual <name pos:line="7879" pos:column="17">HRESULT</name> <name pos:line="7879" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7879" pos:column="43">CreateTrackingSpan_3</name><argument_list pos:line="7879" pos:column="63">( 
            <comment type="block" pos:line="7880" pos:column="13">/* [in] */</comment> <argument pos:line="7880" pos:column="24">int start</argument>,
            <comment type="block" pos:line="7881" pos:column="13">/* [in] */</comment> <argument pos:line="7881" pos:column="24">int length</argument>,
            <comment type="block" pos:line="7882" pos:column="13">/* [in] */</comment> <argument pos:line="7882" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7883" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7883" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7883" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7883" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7885" pos:column="9">virtual <name pos:line="7885" pos:column="17">HRESULT</name> <name pos:line="7885" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7885" pos:column="43">CreateTrackingSpan_4</name><argument_list pos:line="7885" pos:column="63">( 
            <comment type="block" pos:line="7886" pos:column="13">/* [in] */</comment> <argument pos:line="7886" pos:column="24">int start</argument>,
            <comment type="block" pos:line="7887" pos:column="13">/* [in] */</comment> <argument pos:line="7887" pos:column="24">int length</argument>,
            <comment type="block" pos:line="7888" pos:column="13">/* [in] */</comment> <argument pos:line="7888" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="7889" pos:column="13">/* [in] */</comment> <argument pos:line="7889" pos:column="24">VxTrackingFidelityMode trackingFidelity</argument>,
            <comment type="block" pos:line="7890" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7890" pos:column="33">IVxTrackingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="7890" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="7890" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="7892" pos:column="9">virtual <name pos:line="7892" pos:column="17">HRESULT</name> <name pos:line="7892" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7892" pos:column="43">GetTextBuffer</name><argument_list pos:line="7892" pos:column="56">( 
            <comment type="block" pos:line="7893" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7893" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="7893" pos:column="47">*</op:operator><op:operator pos:line="7893" pos:column="48">*</op:operator><name pos:line="7893" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7893" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="7893" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="7895" pos:column="9">virtual <name pos:line="7895" pos:column="17">HRESULT</name> <name pos:line="7895" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7895" pos:column="43">GetVersionNumber</name><argument_list pos:line="7895" pos:column="59">( 
            <comment type="block" pos:line="7896" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7896" pos:column="33">int</name> <op:operator pos:line="7896" pos:column="37">*</op:operator><name pos:line="7896" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7896" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7896" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="7898" pos:column="9">virtual <name pos:line="7898" pos:column="17">HRESULT</name> <name pos:line="7898" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7898" pos:column="43">GetReiteratedVersionNumber</name><argument_list pos:line="7898" pos:column="69">( 
            <comment type="block" pos:line="7899" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="7899" pos:column="33">int</name> <op:operator pos:line="7899" pos:column="37">*</op:operator><name pos:line="7899" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="7899" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="7899" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7903" pos:column="1">#<cpp:directive pos:line="7903" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7903" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7905" pos:column="5">typedef <type><struct pos:line="7905" pos:column="13">struct <name pos:line="7905" pos:column="20">IVxTextVersionVtbl</name>
    <block pos:line="7906" pos:column="5">{<public type="default" pos:line="7906" pos:column="6">
        <function_decl><type><name pos:line="7907" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7909" pos:column="9">HRESULT</name></type> ( <name pos:line="7909" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7909" pos:column="37">*</type:modifier><name pos:line="7909" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7909" pos:column="54">( 
            <param><decl><type><name pos:line="7910" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7910" pos:column="28">*</type:modifier></type> <name pos:line="7910" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7911" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7911" pos:column="24">REFIID</name></type> <name pos:line="7911" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="7912" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7913" pos:column="13">__RPC__deref_out</name>  <name pos:line="7913" pos:column="31">void</name> <type:modifier pos:line="7913" pos:column="36">*</type:modifier><type:modifier pos:line="7913" pos:column="37">*</type:modifier></type><name pos:line="7913" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7915" pos:column="9">ULONG</name></type> ( <name pos:line="7915" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7915" pos:column="35">*</type:modifier><name pos:line="7915" pos:column="36">AddRef</name> )<parameter_list pos:line="7915" pos:column="44">( 
            <param><decl><type><name pos:line="7916" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7916" pos:column="28">*</type:modifier></type> <name pos:line="7916" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7918" pos:column="9">ULONG</name></type> ( <name pos:line="7918" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7918" pos:column="35">*</type:modifier><name pos:line="7918" pos:column="36">Release</name> )<parameter_list pos:line="7918" pos:column="45">( 
            <param><decl><type><name pos:line="7919" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7919" pos:column="28">*</type:modifier></type> <name pos:line="7919" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7921" pos:column="9">HRESULT</name></type> ( <name pos:line="7921" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7921" pos:column="37">*</type:modifier><name pos:line="7921" pos:column="38">GetNext</name> )<parameter_list pos:line="7921" pos:column="47">( 
            <param><decl><type><name pos:line="7922" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7922" pos:column="28">*</type:modifier></type> <name pos:line="7922" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7923" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7923" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="7923" pos:column="48">*</type:modifier><type:modifier pos:line="7923" pos:column="49">*</type:modifier></type><name pos:line="7923" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7925" pos:column="9">HRESULT</name></type> ( <name pos:line="7925" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7925" pos:column="37">*</type:modifier><name pos:line="7925" pos:column="38">GetLength</name> )<parameter_list pos:line="7925" pos:column="49">( 
            <param><decl><type><name pos:line="7926" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7926" pos:column="28">*</type:modifier></type> <name pos:line="7926" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7927" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7927" pos:column="33">int</name> <type:modifier pos:line="7927" pos:column="37">*</type:modifier></type><name pos:line="7927" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7929" pos:column="9">HRESULT</name></type> ( <name pos:line="7929" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7929" pos:column="37">*</type:modifier><name pos:line="7929" pos:column="38">GetChanges</name> )<parameter_list pos:line="7929" pos:column="50">( 
            <param><decl><type><name pos:line="7930" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7930" pos:column="28">*</type:modifier></type> <name pos:line="7930" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7931" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7931" pos:column="33">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="7931" pos:column="67">*</type:modifier><type:modifier pos:line="7931" pos:column="68">*</type:modifier></type><name pos:line="7931" pos:column="69">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7933" pos:column="9">HRESULT</name></type> ( <name pos:line="7933" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7933" pos:column="37">*</type:modifier><name pos:line="7933" pos:column="38">CreateTrackingPoint</name> )<parameter_list pos:line="7933" pos:column="59">( 
            <param><decl><type><name pos:line="7934" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7934" pos:column="28">*</type:modifier></type> <name pos:line="7934" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7935" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7935" pos:column="24">int</name></type> <name pos:line="7935" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7936" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7936" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="7936" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7937" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7937" pos:column="33">IVxTrackingPoint</name> <type:modifier pos:line="7937" pos:column="50">*</type:modifier><type:modifier pos:line="7937" pos:column="51">*</type:modifier></type><name pos:line="7937" pos:column="52">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7939" pos:column="9">HRESULT</name></type> ( <name pos:line="7939" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7939" pos:column="37">*</type:modifier><name pos:line="7939" pos:column="38">CreateTrackingPoint_2</name> )<parameter_list pos:line="7939" pos:column="61">( 
            <param><decl><type><name pos:line="7940" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7940" pos:column="28">*</type:modifier></type> <name pos:line="7940" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7941" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7941" pos:column="24">int</name></type> <name pos:line="7941" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="7942" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7942" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="7942" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7943" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7943" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="7943" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="7944" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7944" pos:column="33">IVxTrackingPoint</name> <type:modifier pos:line="7944" pos:column="50">*</type:modifier><type:modifier pos:line="7944" pos:column="51">*</type:modifier></type><name pos:line="7944" pos:column="52">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7946" pos:column="9">HRESULT</name></type> ( <name pos:line="7946" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7946" pos:column="37">*</type:modifier><name pos:line="7946" pos:column="38">CreateTrackingSpan</name> )<parameter_list pos:line="7946" pos:column="58">( 
            <param><decl><type><name pos:line="7947" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7947" pos:column="28">*</type:modifier></type> <name pos:line="7947" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7948" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7948" pos:column="24">VxSpan</name></type> <name pos:line="7948" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="7949" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7949" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7949" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7950" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7950" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7950" pos:column="49">*</type:modifier><type:modifier pos:line="7950" pos:column="50">*</type:modifier></type><name pos:line="7950" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7952" pos:column="9">HRESULT</name></type> ( <name pos:line="7952" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7952" pos:column="37">*</type:modifier><name pos:line="7952" pos:column="38">CreateTrackingSpan_2</name> )<parameter_list pos:line="7952" pos:column="60">( 
            <param><decl><type><name pos:line="7953" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7953" pos:column="28">*</type:modifier></type> <name pos:line="7953" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7954" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7954" pos:column="24">VxSpan</name></type> <name pos:line="7954" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="7955" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7955" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7955" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7956" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7956" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="7956" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="7957" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7957" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7957" pos:column="49">*</type:modifier><type:modifier pos:line="7957" pos:column="50">*</type:modifier></type><name pos:line="7957" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7959" pos:column="9">HRESULT</name></type> ( <name pos:line="7959" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7959" pos:column="37">*</type:modifier><name pos:line="7959" pos:column="38">CreateTrackingSpan_3</name> )<parameter_list pos:line="7959" pos:column="60">( 
            <param><decl><type><name pos:line="7960" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7960" pos:column="28">*</type:modifier></type> <name pos:line="7960" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7961" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7961" pos:column="24">int</name></type> <name pos:line="7961" pos:column="28">start</name></decl></param>,
            <comment type="block" pos:line="7962" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7962" pos:column="24">int</name></type> <name pos:line="7962" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="7963" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7963" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7963" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7964" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7964" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7964" pos:column="49">*</type:modifier><type:modifier pos:line="7964" pos:column="50">*</type:modifier></type><name pos:line="7964" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7966" pos:column="9">HRESULT</name></type> ( <name pos:line="7966" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7966" pos:column="37">*</type:modifier><name pos:line="7966" pos:column="38">CreateTrackingSpan_4</name> )<parameter_list pos:line="7966" pos:column="60">( 
            <param><decl><type><name pos:line="7967" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7967" pos:column="28">*</type:modifier></type> <name pos:line="7967" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7968" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7968" pos:column="24">int</name></type> <name pos:line="7968" pos:column="28">start</name></decl></param>,
            <comment type="block" pos:line="7969" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7969" pos:column="24">int</name></type> <name pos:line="7969" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="7970" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7970" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="7970" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="7971" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7971" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="7971" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="7972" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7972" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="7972" pos:column="49">*</type:modifier><type:modifier pos:line="7972" pos:column="50">*</type:modifier></type><name pos:line="7972" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7974" pos:column="9">HRESULT</name></type> ( <name pos:line="7974" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7974" pos:column="37">*</type:modifier><name pos:line="7974" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="7974" pos:column="53">( 
            <param><decl><type><name pos:line="7975" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7975" pos:column="28">*</type:modifier></type> <name pos:line="7975" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7976" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7976" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="7976" pos:column="47">*</type:modifier><type:modifier pos:line="7976" pos:column="48">*</type:modifier></type><name pos:line="7976" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7978" pos:column="9">HRESULT</name></type> ( <name pos:line="7978" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7978" pos:column="37">*</type:modifier><name pos:line="7978" pos:column="38">GetVersionNumber</name> )<parameter_list pos:line="7978" pos:column="56">( 
            <param><decl><type><name pos:line="7979" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7979" pos:column="28">*</type:modifier></type> <name pos:line="7979" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7980" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7980" pos:column="33">int</name> <type:modifier pos:line="7980" pos:column="37">*</type:modifier></type><name pos:line="7980" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7982" pos:column="9">HRESULT</name></type> ( <name pos:line="7982" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7982" pos:column="37">*</type:modifier><name pos:line="7982" pos:column="38">GetReiteratedVersionNumber</name> )<parameter_list pos:line="7982" pos:column="66">( 
            <param><decl><type><name pos:line="7983" pos:column="13">IVxTextVersion</name> <type:modifier pos:line="7983" pos:column="28">*</type:modifier></type> <name pos:line="7983" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7984" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7984" pos:column="33">int</name> <type:modifier pos:line="7984" pos:column="37">*</type:modifier></type><name pos:line="7984" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7986" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7987" pos:column="7">IVxTextVersionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7989" pos:column="5">interface</name></type> <name pos:line="7989" pos:column="15">IVxTextVersion</name>
    <argument_list pos:line="7990" pos:column="5">{
        <argument><expr><name pos:line="7991" pos:column="9">CONST_VTBL</name> struct <name pos:line="7991" pos:column="27">IVxTextVersionVtbl</name> <op:operator pos:line="7991" pos:column="46">*</op:operator><name pos:line="7991" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7996" pos:column="1">#<cpp:directive pos:line="7996" pos:column="2">ifdef</cpp:directive> <name pos:line="7996" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7999" pos:column="1">#<cpp:directive pos:line="7999" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7999" pos:column="9">IVxTextVersion_QueryInterface</name><parameter_list pos:line="7999" pos:column="38">(<param><type><name pos:line="7999" pos:column="39">This</name></type></param>,<param><type><name pos:line="7999" pos:column="44">riid</name></type></param>,<param><type><name pos:line="7999" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8000" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8002" pos:column="1">#<cpp:directive pos:line="8002" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8002" pos:column="9">IVxTextVersion_AddRef</name><parameter_list pos:line="8002" pos:column="30">(<param><type><name pos:line="8002" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8003" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8005" pos:column="1">#<cpp:directive pos:line="8005" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8005" pos:column="9">IVxTextVersion_Release</name><parameter_list pos:line="8005" pos:column="31">(<param><type><name pos:line="8005" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8006" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8009" pos:column="1">#<cpp:directive pos:line="8009" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8009" pos:column="9">IVxTextVersion_GetNext</name><parameter_list pos:line="8009" pos:column="31">(<param><type><name pos:line="8009" pos:column="32">This</name></type></param>,<param><type><name pos:line="8009" pos:column="37">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8010" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNext(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8012" pos:column="1">#<cpp:directive pos:line="8012" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8012" pos:column="9">IVxTextVersion_GetLength</name><parameter_list pos:line="8012" pos:column="33">(<param><type><name pos:line="8012" pos:column="34">This</name></type></param>,<param><type><name pos:line="8012" pos:column="39">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8013" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8015" pos:column="1">#<cpp:directive pos:line="8015" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8015" pos:column="9">IVxTextVersion_GetChanges</name><parameter_list pos:line="8015" pos:column="34">(<param><type><name pos:line="8015" pos:column="35">This</name></type></param>,<param><type><name pos:line="8015" pos:column="40">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8016" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetChanges(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8018" pos:column="1">#<cpp:directive pos:line="8018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8018" pos:column="9">IVxTextVersion_CreateTrackingPoint</name><parameter_list pos:line="8018" pos:column="43">(<param><type><name pos:line="8018" pos:column="44">This</name></type></param>,<param><type><name pos:line="8018" pos:column="49">position</name></type></param>,<param><type><name pos:line="8018" pos:column="58">trackingMode</name></type></param>,<param><type><name pos:line="8018" pos:column="71">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8019" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingPoint(This,position,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8021" pos:column="1">#<cpp:directive pos:line="8021" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8021" pos:column="9">IVxTextVersion_CreateTrackingPoint_2</name><parameter_list pos:line="8021" pos:column="45">(<param><type><name pos:line="8021" pos:column="46">This</name></type></param>,<param><type><name pos:line="8021" pos:column="51">position</name></type></param>,<param><type><name pos:line="8021" pos:column="60">trackingMode</name></type></param>,<param><type><name pos:line="8021" pos:column="73">trackingFidelity</name></type></param>,<param><type><name pos:line="8021" pos:column="90">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8022" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingPoint_2(This,position,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8024" pos:column="1">#<cpp:directive pos:line="8024" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8024" pos:column="9">IVxTextVersion_CreateTrackingSpan</name><parameter_list pos:line="8024" pos:column="42">(<param><type><name pos:line="8024" pos:column="43">This</name></type></param>,<param><type><name pos:line="8024" pos:column="48">span</name></type></param>,<param><type><name pos:line="8024" pos:column="53">trackingMode</name></type></param>,<param><type><name pos:line="8024" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8025" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan(This,span,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8027" pos:column="1">#<cpp:directive pos:line="8027" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8027" pos:column="9">IVxTextVersion_CreateTrackingSpan_2</name><parameter_list pos:line="8027" pos:column="44">(<param><type><name pos:line="8027" pos:column="45">This</name></type></param>,<param><type><name pos:line="8027" pos:column="50">span</name></type></param>,<param><type><name pos:line="8027" pos:column="55">trackingMode</name></type></param>,<param><type><name pos:line="8027" pos:column="68">trackingFidelity</name></type></param>,<param><type><name pos:line="8027" pos:column="85">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8028" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_2(This,span,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8030" pos:column="1">#<cpp:directive pos:line="8030" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8030" pos:column="9">IVxTextVersion_CreateTrackingSpan_3</name><parameter_list pos:line="8030" pos:column="44">(<param><type><name pos:line="8030" pos:column="45">This</name></type></param>,<param><type><name pos:line="8030" pos:column="50">start</name></type></param>,<param><type><name pos:line="8030" pos:column="56">length</name></type></param>,<param><type><name pos:line="8030" pos:column="63">trackingMode</name></type></param>,<param><type><name pos:line="8030" pos:column="76">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8031" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_3(This,start,length,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8033" pos:column="1">#<cpp:directive pos:line="8033" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8033" pos:column="9">IVxTextVersion_CreateTrackingSpan_4</name><parameter_list pos:line="8033" pos:column="44">(<param><type><name pos:line="8033" pos:column="45">This</name></type></param>,<param><type><name pos:line="8033" pos:column="50">start</name></type></param>,<param><type><name pos:line="8033" pos:column="56">length</name></type></param>,<param><type><name pos:line="8033" pos:column="63">trackingMode</name></type></param>,<param><type><name pos:line="8033" pos:column="76">trackingFidelity</name></type></param>,<param><type><name pos:line="8033" pos:column="93">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8034" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_4(This,start,length,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8036" pos:column="1">#<cpp:directive pos:line="8036" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8036" pos:column="9">IVxTextVersion_GetTextBuffer</name><parameter_list pos:line="8036" pos:column="37">(<param><type><name pos:line="8036" pos:column="38">This</name></type></param>,<param><type><name pos:line="8036" pos:column="43">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8037" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8039" pos:column="1">#<cpp:directive pos:line="8039" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8039" pos:column="9">IVxTextVersion_GetVersionNumber</name><parameter_list pos:line="8039" pos:column="40">(<param><type><name pos:line="8039" pos:column="41">This</name></type></param>,<param><type><name pos:line="8039" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8040" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetVersionNumber(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8042" pos:column="1">#<cpp:directive pos:line="8042" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8042" pos:column="9">IVxTextVersion_GetReiteratedVersionNumber</name><parameter_list pos:line="8042" pos:column="50">(<param><type><name pos:line="8042" pos:column="51">This</name></type></param>,<param><type><name pos:line="8042" pos:column="56">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8043" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReiteratedVersionNumber(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8045" pos:column="1">#<cpp:directive pos:line="8045" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8045" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8048" pos:column="1">#<cpp:directive pos:line="8048" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8048" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8053" pos:column="1">#<cpp:directive pos:line="8053" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8053" pos:column="9">/* __IVxTextVersion_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8056" pos:column="1">#<cpp:directive pos:line="8056" pos:column="2">ifndef</cpp:directive> <name pos:line="8056" pos:column="9">__IVxTrackingPoint_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8057" pos:column="1">#<cpp:directive pos:line="8057" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8057" pos:column="9">__IVxTrackingPoint_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8059" pos:column="1">/* interface IVxTrackingPoint */</comment>
<comment type="block" pos:line="8060" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8063" pos:column="1">EXTERN_C</name> <specifier pos:line="8063" pos:column="10">const</specifier> <name pos:line="8063" pos:column="16">IID</name></type> <name pos:line="8063" pos:column="20">IID_IVxTrackingPoint</name></decl>;</decl_stmt>

<cpp:if pos:line="8065" pos:column="1">#<cpp:directive pos:line="8065" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8065" pos:column="5">defined</name><argument_list pos:line="8065" pos:column="12">(<argument><expr><name pos:line="8065" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8065" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8065" pos:column="29">!</op:operator><call><name pos:line="8065" pos:column="30">defined</name><argument_list pos:line="8065" pos:column="37">(<argument><expr><name pos:line="8065" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8067" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8067" pos:column="19">(<argument pos:line="8067" pos:column="20">"d59ac777-8bb7-4634-a566-2d812970f5f6"</argument>)</argument_list></macro>
    <label><name pos:line="8068" pos:column="5">IVxTrackingPoint</name> :</label> <expr_stmt><expr pos:line="8068" pos:column="24">public <name pos:line="8068" pos:column="31">IUnknown</name>
    <block pos:line="8069" pos:column="5">{
    <expr pos:line="8070" pos:column="5">public<op:operator pos:line="8070" pos:column="11">:</op:operator>
        virtual <name pos:line="8071" pos:column="17">HRESULT</name> <name pos:line="8071" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8071" pos:column="43">GetTextBuffer</name><argument_list pos:line="8071" pos:column="56">( 
            <comment type="block" pos:line="8072" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8072" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="8072" pos:column="47">*</op:operator><op:operator pos:line="8072" pos:column="48">*</op:operator><name pos:line="8072" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8072" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8072" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8074" pos:column="9">virtual <name pos:line="8074" pos:column="17">HRESULT</name> <name pos:line="8074" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8074" pos:column="43">GetTrackingMode</name><argument_list pos:line="8074" pos:column="58">( 
            <comment type="block" pos:line="8075" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8075" pos:column="33">VxPointTrackingMode</name> <op:operator pos:line="8075" pos:column="53">*</op:operator><name pos:line="8075" pos:column="54">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8075" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="8075" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="8077" pos:column="9">virtual <name pos:line="8077" pos:column="17">HRESULT</name> <name pos:line="8077" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8077" pos:column="43">GetTrackingFidelity</name><argument_list pos:line="8077" pos:column="62">( 
            <comment type="block" pos:line="8078" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8078" pos:column="33">VxTrackingFidelityMode</name> <op:operator pos:line="8078" pos:column="56">*</op:operator><name pos:line="8078" pos:column="57">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8078" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="8078" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="8080" pos:column="9">virtual <name pos:line="8080" pos:column="17">HRESULT</name> <name pos:line="8080" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8080" pos:column="43">GetPoint</name><argument_list pos:line="8080" pos:column="51">( 
            <comment type="block" pos:line="8081" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8081" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8081" pos:column="40">*</op:operator><name pos:line="8081" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8082" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8082" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="8082" pos:column="49">*</op:operator><name pos:line="8082" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8082" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8082" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8084" pos:column="9">virtual <name pos:line="8084" pos:column="17">HRESULT</name> <name pos:line="8084" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8084" pos:column="43">GetPosition</name><argument_list pos:line="8084" pos:column="54">( 
            <comment type="block" pos:line="8085" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8085" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8085" pos:column="40">*</op:operator><name pos:line="8085" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8086" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8086" pos:column="33">int</name> <op:operator pos:line="8086" pos:column="37">*</op:operator><name pos:line="8086" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8086" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="8086" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="8088" pos:column="9">virtual <name pos:line="8088" pos:column="17">HRESULT</name> <name pos:line="8088" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8088" pos:column="43">GetPosition_2</name><argument_list pos:line="8088" pos:column="56">( 
            <comment type="block" pos:line="8089" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8089" pos:column="24">IVxTextVersion</name> <op:operator pos:line="8089" pos:column="39">*</op:operator><name pos:line="8089" pos:column="40">pVersion</name></expr></argument>,
            <comment type="block" pos:line="8090" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8090" pos:column="33">int</name> <op:operator pos:line="8090" pos:column="37">*</op:operator><name pos:line="8090" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8090" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="8090" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="8092" pos:column="9">virtual <name pos:line="8092" pos:column="17">HRESULT</name> <name pos:line="8092" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8092" pos:column="43">GetCharacter</name><argument_list pos:line="8092" pos:column="55">( 
            <comment type="block" pos:line="8093" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8093" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8093" pos:column="40">*</op:operator><name pos:line="8093" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8094" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8094" pos:column="33">USHORT</name> <op:operator pos:line="8094" pos:column="40">*</op:operator><name pos:line="8094" pos:column="41">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8094" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="8094" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8098" pos:column="1">#<cpp:directive pos:line="8098" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8098" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8100" pos:column="5">typedef <type><struct pos:line="8100" pos:column="13">struct <name pos:line="8100" pos:column="20">IVxTrackingPointVtbl</name>
    <block pos:line="8101" pos:column="5">{<public type="default" pos:line="8101" pos:column="6">
        <function_decl><type><name pos:line="8102" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8104" pos:column="9">HRESULT</name></type> ( <name pos:line="8104" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8104" pos:column="37">*</type:modifier><name pos:line="8104" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8104" pos:column="54">( 
            <param><decl><type><name pos:line="8105" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8105" pos:column="30">*</type:modifier></type> <name pos:line="8105" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8106" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8106" pos:column="24">REFIID</name></type> <name pos:line="8106" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8107" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8108" pos:column="13">__RPC__deref_out</name>  <name pos:line="8108" pos:column="31">void</name> <type:modifier pos:line="8108" pos:column="36">*</type:modifier><type:modifier pos:line="8108" pos:column="37">*</type:modifier></type><name pos:line="8108" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8110" pos:column="9">ULONG</name></type> ( <name pos:line="8110" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8110" pos:column="35">*</type:modifier><name pos:line="8110" pos:column="36">AddRef</name> )<parameter_list pos:line="8110" pos:column="44">( 
            <param><decl><type><name pos:line="8111" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8111" pos:column="30">*</type:modifier></type> <name pos:line="8111" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8113" pos:column="9">ULONG</name></type> ( <name pos:line="8113" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8113" pos:column="35">*</type:modifier><name pos:line="8113" pos:column="36">Release</name> )<parameter_list pos:line="8113" pos:column="45">( 
            <param><decl><type><name pos:line="8114" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8114" pos:column="30">*</type:modifier></type> <name pos:line="8114" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8116" pos:column="9">HRESULT</name></type> ( <name pos:line="8116" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8116" pos:column="37">*</type:modifier><name pos:line="8116" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="8116" pos:column="53">( 
            <param><decl><type><name pos:line="8117" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8117" pos:column="30">*</type:modifier></type> <name pos:line="8117" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8118" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8118" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="8118" pos:column="47">*</type:modifier><type:modifier pos:line="8118" pos:column="48">*</type:modifier></type><name pos:line="8118" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8120" pos:column="9">HRESULT</name></type> ( <name pos:line="8120" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8120" pos:column="37">*</type:modifier><name pos:line="8120" pos:column="38">GetTrackingMode</name> )<parameter_list pos:line="8120" pos:column="55">( 
            <param><decl><type><name pos:line="8121" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8121" pos:column="30">*</type:modifier></type> <name pos:line="8121" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8122" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8122" pos:column="33">VxPointTrackingMode</name> <type:modifier pos:line="8122" pos:column="53">*</type:modifier></type><name pos:line="8122" pos:column="54">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8124" pos:column="9">HRESULT</name></type> ( <name pos:line="8124" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8124" pos:column="37">*</type:modifier><name pos:line="8124" pos:column="38">GetTrackingFidelity</name> )<parameter_list pos:line="8124" pos:column="59">( 
            <param><decl><type><name pos:line="8125" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8125" pos:column="30">*</type:modifier></type> <name pos:line="8125" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8126" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8126" pos:column="33">VxTrackingFidelityMode</name> <type:modifier pos:line="8126" pos:column="56">*</type:modifier></type><name pos:line="8126" pos:column="57">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8128" pos:column="9">HRESULT</name></type> ( <name pos:line="8128" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8128" pos:column="37">*</type:modifier><name pos:line="8128" pos:column="38">GetPoint</name> )<parameter_list pos:line="8128" pos:column="48">( 
            <param><decl><type><name pos:line="8129" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8129" pos:column="30">*</type:modifier></type> <name pos:line="8129" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8130" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8130" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8130" pos:column="40">*</type:modifier></type><name pos:line="8130" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8131" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8131" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="8131" pos:column="49">*</type:modifier></type><name pos:line="8131" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8133" pos:column="9">HRESULT</name></type> ( <name pos:line="8133" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8133" pos:column="37">*</type:modifier><name pos:line="8133" pos:column="38">GetPosition</name> )<parameter_list pos:line="8133" pos:column="51">( 
            <param><decl><type><name pos:line="8134" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8134" pos:column="30">*</type:modifier></type> <name pos:line="8134" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8135" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8135" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8135" pos:column="40">*</type:modifier></type><name pos:line="8135" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8136" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8136" pos:column="33">int</name> <type:modifier pos:line="8136" pos:column="37">*</type:modifier></type><name pos:line="8136" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8138" pos:column="9">HRESULT</name></type> ( <name pos:line="8138" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8138" pos:column="37">*</type:modifier><name pos:line="8138" pos:column="38">GetPosition_2</name> )<parameter_list pos:line="8138" pos:column="53">( 
            <param><decl><type><name pos:line="8139" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8139" pos:column="30">*</type:modifier></type> <name pos:line="8139" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8140" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8140" pos:column="24">IVxTextVersion</name> <type:modifier pos:line="8140" pos:column="39">*</type:modifier></type><name pos:line="8140" pos:column="40">pVersion</name></decl></param>,
            <comment type="block" pos:line="8141" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8141" pos:column="33">int</name> <type:modifier pos:line="8141" pos:column="37">*</type:modifier></type><name pos:line="8141" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8143" pos:column="9">HRESULT</name></type> ( <name pos:line="8143" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8143" pos:column="37">*</type:modifier><name pos:line="8143" pos:column="38">GetCharacter</name> )<parameter_list pos:line="8143" pos:column="52">( 
            <param><decl><type><name pos:line="8144" pos:column="13">IVxTrackingPoint</name> <type:modifier pos:line="8144" pos:column="30">*</type:modifier></type> <name pos:line="8144" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8145" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8145" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8145" pos:column="40">*</type:modifier></type><name pos:line="8145" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8146" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8146" pos:column="33">USHORT</name> <type:modifier pos:line="8146" pos:column="40">*</type:modifier></type><name pos:line="8146" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8148" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8149" pos:column="7">IVxTrackingPointVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8151" pos:column="5">interface</name></type> <name pos:line="8151" pos:column="15">IVxTrackingPoint</name>
    <argument_list pos:line="8152" pos:column="5">{
        <argument><expr><name pos:line="8153" pos:column="9">CONST_VTBL</name> struct <name pos:line="8153" pos:column="27">IVxTrackingPointVtbl</name> <op:operator pos:line="8153" pos:column="48">*</op:operator><name pos:line="8153" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8158" pos:column="1">#<cpp:directive pos:line="8158" pos:column="2">ifdef</cpp:directive> <name pos:line="8158" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8161" pos:column="1">#<cpp:directive pos:line="8161" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8161" pos:column="9">IVxTrackingPoint_QueryInterface</name><parameter_list pos:line="8161" pos:column="40">(<param><type><name pos:line="8161" pos:column="41">This</name></type></param>,<param><type><name pos:line="8161" pos:column="46">riid</name></type></param>,<param><type><name pos:line="8161" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8162" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8164" pos:column="1">#<cpp:directive pos:line="8164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8164" pos:column="9">IVxTrackingPoint_AddRef</name><parameter_list pos:line="8164" pos:column="32">(<param><type><name pos:line="8164" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8165" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8167" pos:column="1">#<cpp:directive pos:line="8167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8167" pos:column="9">IVxTrackingPoint_Release</name><parameter_list pos:line="8167" pos:column="33">(<param><type><name pos:line="8167" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8168" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8171" pos:column="1">#<cpp:directive pos:line="8171" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8171" pos:column="9">IVxTrackingPoint_GetTextBuffer</name><parameter_list pos:line="8171" pos:column="39">(<param><type><name pos:line="8171" pos:column="40">This</name></type></param>,<param><type><name pos:line="8171" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8172" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8174" pos:column="1">#<cpp:directive pos:line="8174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8174" pos:column="9">IVxTrackingPoint_GetTrackingMode</name><parameter_list pos:line="8174" pos:column="41">(<param><type><name pos:line="8174" pos:column="42">This</name></type></param>,<param><type><name pos:line="8174" pos:column="47">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8175" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTrackingMode(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8177" pos:column="1">#<cpp:directive pos:line="8177" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8177" pos:column="9">IVxTrackingPoint_GetTrackingFidelity</name><parameter_list pos:line="8177" pos:column="45">(<param><type><name pos:line="8177" pos:column="46">This</name></type></param>,<param><type><name pos:line="8177" pos:column="51">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8178" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTrackingFidelity(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8180" pos:column="1">#<cpp:directive pos:line="8180" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8180" pos:column="9">IVxTrackingPoint_GetPoint</name><parameter_list pos:line="8180" pos:column="34">(<param><type><name pos:line="8180" pos:column="35">This</name></type></param>,<param><type><name pos:line="8180" pos:column="40">pSnapshot</name></type></param>,<param><type><name pos:line="8180" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8181" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPoint(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8183" pos:column="1">#<cpp:directive pos:line="8183" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8183" pos:column="9">IVxTrackingPoint_GetPosition</name><parameter_list pos:line="8183" pos:column="37">(<param><type><name pos:line="8183" pos:column="38">This</name></type></param>,<param><type><name pos:line="8183" pos:column="43">pSnapshot</name></type></param>,<param><type><name pos:line="8183" pos:column="53">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8184" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPosition(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8186" pos:column="1">#<cpp:directive pos:line="8186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8186" pos:column="9">IVxTrackingPoint_GetPosition_2</name><parameter_list pos:line="8186" pos:column="39">(<param><type><name pos:line="8186" pos:column="40">This</name></type></param>,<param><type><name pos:line="8186" pos:column="45">pVersion</name></type></param>,<param><type><name pos:line="8186" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8187" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPosition_2(This,pVersion,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8189" pos:column="1">#<cpp:directive pos:line="8189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8189" pos:column="9">IVxTrackingPoint_GetCharacter</name><parameter_list pos:line="8189" pos:column="38">(<param><type><name pos:line="8189" pos:column="39">This</name></type></param>,<param><type><name pos:line="8189" pos:column="44">pSnapshot</name></type></param>,<param><type><name pos:line="8189" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8190" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCharacter(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8192" pos:column="1">#<cpp:directive pos:line="8192" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8192" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8195" pos:column="1">#<cpp:directive pos:line="8195" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8195" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8200" pos:column="1">#<cpp:directive pos:line="8200" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8200" pos:column="9">/* __IVxTrackingPoint_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8203" pos:column="1">#<cpp:directive pos:line="8203" pos:column="2">ifndef</cpp:directive> <name pos:line="8203" pos:column="9">__IVxTrackingSpan_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8204" pos:column="1">#<cpp:directive pos:line="8204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8204" pos:column="9">__IVxTrackingSpan_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8206" pos:column="1">/* interface IVxTrackingSpan */</comment>
<comment type="block" pos:line="8207" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8210" pos:column="1">EXTERN_C</name> <specifier pos:line="8210" pos:column="10">const</specifier> <name pos:line="8210" pos:column="16">IID</name></type> <name pos:line="8210" pos:column="20">IID_IVxTrackingSpan</name></decl>;</decl_stmt>

<cpp:if pos:line="8212" pos:column="1">#<cpp:directive pos:line="8212" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8212" pos:column="5">defined</name><argument_list pos:line="8212" pos:column="12">(<argument><expr><name pos:line="8212" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8212" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8212" pos:column="29">!</op:operator><call><name pos:line="8212" pos:column="30">defined</name><argument_list pos:line="8212" pos:column="37">(<argument><expr><name pos:line="8212" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8214" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8214" pos:column="19">(<argument pos:line="8214" pos:column="20">"1ed17a9a-cc3f-4c10-aefb-92a19fee5abc"</argument>)</argument_list></macro>
    <label><name pos:line="8215" pos:column="5">IVxTrackingSpan</name> :</label> <expr_stmt><expr pos:line="8215" pos:column="23">public <name pos:line="8215" pos:column="30">IUnknown</name>
    <block pos:line="8216" pos:column="5">{
    <expr pos:line="8217" pos:column="5">public<op:operator pos:line="8217" pos:column="11">:</op:operator>
        virtual <name pos:line="8218" pos:column="17">HRESULT</name> <name pos:line="8218" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8218" pos:column="43">GetTextBuffer</name><argument_list pos:line="8218" pos:column="56">( 
            <comment type="block" pos:line="8219" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8219" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="8219" pos:column="47">*</op:operator><op:operator pos:line="8219" pos:column="48">*</op:operator><name pos:line="8219" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8219" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8219" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8221" pos:column="9">virtual <name pos:line="8221" pos:column="17">HRESULT</name> <name pos:line="8221" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8221" pos:column="43">GetTrackingMode</name><argument_list pos:line="8221" pos:column="58">( 
            <comment type="block" pos:line="8222" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8222" pos:column="33">VxSpanTrackingMode</name> <op:operator pos:line="8222" pos:column="52">*</op:operator><name pos:line="8222" pos:column="53">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8222" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="8222" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="8224" pos:column="9">virtual <name pos:line="8224" pos:column="17">HRESULT</name> <name pos:line="8224" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8224" pos:column="43">GetTrackingFidelity</name><argument_list pos:line="8224" pos:column="62">( 
            <comment type="block" pos:line="8225" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8225" pos:column="33">VxTrackingFidelityMode</name> <op:operator pos:line="8225" pos:column="56">*</op:operator><name pos:line="8225" pos:column="57">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8225" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="8225" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="8227" pos:column="9">virtual <name pos:line="8227" pos:column="17">HRESULT</name> <name pos:line="8227" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8227" pos:column="43">GetSpan</name><argument_list pos:line="8227" pos:column="50">( 
            <comment type="block" pos:line="8228" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8228" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8228" pos:column="40">*</op:operator><name pos:line="8228" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8229" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8229" pos:column="33">VxSnapshotSpan</name> <op:operator pos:line="8229" pos:column="48">*</op:operator><name pos:line="8229" pos:column="49">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8229" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="8229" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="8231" pos:column="9">virtual <name pos:line="8231" pos:column="17">HRESULT</name> <name pos:line="8231" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8231" pos:column="43">GetSpan_2</name><argument_list pos:line="8231" pos:column="52">( 
            <comment type="block" pos:line="8232" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8232" pos:column="24">IVxTextVersion</name> <op:operator pos:line="8232" pos:column="39">*</op:operator><name pos:line="8232" pos:column="40">pVersion</name></expr></argument>,
            <comment type="block" pos:line="8233" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8233" pos:column="33">VxSpan</name> <op:operator pos:line="8233" pos:column="40">*</op:operator><name pos:line="8233" pos:column="41">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8233" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="8233" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="8235" pos:column="9">virtual <name pos:line="8235" pos:column="17">HRESULT</name> <name pos:line="8235" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8235" pos:column="43">GetText</name><argument_list pos:line="8235" pos:column="50">( 
            <comment type="block" pos:line="8236" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8236" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8236" pos:column="40">*</op:operator><name pos:line="8236" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8237" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8237" pos:column="33">BSTR</name> <op:operator pos:line="8237" pos:column="38">*</op:operator><name pos:line="8237" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8237" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8237" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="8239" pos:column="9">virtual <name pos:line="8239" pos:column="17">HRESULT</name> <name pos:line="8239" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8239" pos:column="43">GetStartPoint</name><argument_list pos:line="8239" pos:column="56">( 
            <comment type="block" pos:line="8240" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8240" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8240" pos:column="40">*</op:operator><name pos:line="8240" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8241" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8241" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="8241" pos:column="49">*</op:operator><name pos:line="8241" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8241" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8241" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8243" pos:column="9">virtual <name pos:line="8243" pos:column="17">HRESULT</name> <name pos:line="8243" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8243" pos:column="43">GetEndPoint</name><argument_list pos:line="8243" pos:column="54">( 
            <comment type="block" pos:line="8244" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8244" pos:column="24">IVxTextSnapshot</name> <op:operator pos:line="8244" pos:column="40">*</op:operator><name pos:line="8244" pos:column="41">pSnapshot</name></expr></argument>,
            <comment type="block" pos:line="8245" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8245" pos:column="33">VxSnapshotPoint</name> <op:operator pos:line="8245" pos:column="49">*</op:operator><name pos:line="8245" pos:column="50">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8245" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8245" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8249" pos:column="1">#<cpp:directive pos:line="8249" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8249" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8251" pos:column="5">typedef <type><struct pos:line="8251" pos:column="13">struct <name pos:line="8251" pos:column="20">IVxTrackingSpanVtbl</name>
    <block pos:line="8252" pos:column="5">{<public type="default" pos:line="8252" pos:column="6">
        <function_decl><type><name pos:line="8253" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8255" pos:column="9">HRESULT</name></type> ( <name pos:line="8255" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8255" pos:column="37">*</type:modifier><name pos:line="8255" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8255" pos:column="54">( 
            <param><decl><type><name pos:line="8256" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8256" pos:column="29">*</type:modifier></type> <name pos:line="8256" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8257" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8257" pos:column="24">REFIID</name></type> <name pos:line="8257" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8258" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8259" pos:column="13">__RPC__deref_out</name>  <name pos:line="8259" pos:column="31">void</name> <type:modifier pos:line="8259" pos:column="36">*</type:modifier><type:modifier pos:line="8259" pos:column="37">*</type:modifier></type><name pos:line="8259" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8261" pos:column="9">ULONG</name></type> ( <name pos:line="8261" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8261" pos:column="35">*</type:modifier><name pos:line="8261" pos:column="36">AddRef</name> )<parameter_list pos:line="8261" pos:column="44">( 
            <param><decl><type><name pos:line="8262" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8262" pos:column="29">*</type:modifier></type> <name pos:line="8262" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8264" pos:column="9">ULONG</name></type> ( <name pos:line="8264" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8264" pos:column="35">*</type:modifier><name pos:line="8264" pos:column="36">Release</name> )<parameter_list pos:line="8264" pos:column="45">( 
            <param><decl><type><name pos:line="8265" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8265" pos:column="29">*</type:modifier></type> <name pos:line="8265" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8267" pos:column="9">HRESULT</name></type> ( <name pos:line="8267" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8267" pos:column="37">*</type:modifier><name pos:line="8267" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="8267" pos:column="53">( 
            <param><decl><type><name pos:line="8268" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8268" pos:column="29">*</type:modifier></type> <name pos:line="8268" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8269" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8269" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="8269" pos:column="47">*</type:modifier><type:modifier pos:line="8269" pos:column="48">*</type:modifier></type><name pos:line="8269" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8271" pos:column="9">HRESULT</name></type> ( <name pos:line="8271" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8271" pos:column="37">*</type:modifier><name pos:line="8271" pos:column="38">GetTrackingMode</name> )<parameter_list pos:line="8271" pos:column="55">( 
            <param><decl><type><name pos:line="8272" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8272" pos:column="29">*</type:modifier></type> <name pos:line="8272" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8273" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8273" pos:column="33">VxSpanTrackingMode</name> <type:modifier pos:line="8273" pos:column="52">*</type:modifier></type><name pos:line="8273" pos:column="53">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8275" pos:column="9">HRESULT</name></type> ( <name pos:line="8275" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8275" pos:column="37">*</type:modifier><name pos:line="8275" pos:column="38">GetTrackingFidelity</name> )<parameter_list pos:line="8275" pos:column="59">( 
            <param><decl><type><name pos:line="8276" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8276" pos:column="29">*</type:modifier></type> <name pos:line="8276" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8277" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8277" pos:column="33">VxTrackingFidelityMode</name> <type:modifier pos:line="8277" pos:column="56">*</type:modifier></type><name pos:line="8277" pos:column="57">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8279" pos:column="9">HRESULT</name></type> ( <name pos:line="8279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8279" pos:column="37">*</type:modifier><name pos:line="8279" pos:column="38">GetSpan</name> )<parameter_list pos:line="8279" pos:column="47">( 
            <param><decl><type><name pos:line="8280" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8280" pos:column="29">*</type:modifier></type> <name pos:line="8280" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8281" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8281" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8281" pos:column="40">*</type:modifier></type><name pos:line="8281" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8282" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8282" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="8282" pos:column="48">*</type:modifier></type><name pos:line="8282" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8284" pos:column="9">HRESULT</name></type> ( <name pos:line="8284" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8284" pos:column="37">*</type:modifier><name pos:line="8284" pos:column="38">GetSpan_2</name> )<parameter_list pos:line="8284" pos:column="49">( 
            <param><decl><type><name pos:line="8285" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8285" pos:column="29">*</type:modifier></type> <name pos:line="8285" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8286" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8286" pos:column="24">IVxTextVersion</name> <type:modifier pos:line="8286" pos:column="39">*</type:modifier></type><name pos:line="8286" pos:column="40">pVersion</name></decl></param>,
            <comment type="block" pos:line="8287" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8287" pos:column="33">VxSpan</name> <type:modifier pos:line="8287" pos:column="40">*</type:modifier></type><name pos:line="8287" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8289" pos:column="9">HRESULT</name></type> ( <name pos:line="8289" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8289" pos:column="37">*</type:modifier><name pos:line="8289" pos:column="38">GetText</name> )<parameter_list pos:line="8289" pos:column="47">( 
            <param><decl><type><name pos:line="8290" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8290" pos:column="29">*</type:modifier></type> <name pos:line="8290" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8291" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8291" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8291" pos:column="40">*</type:modifier></type><name pos:line="8291" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8292" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8292" pos:column="33">BSTR</name> <type:modifier pos:line="8292" pos:column="38">*</type:modifier></type><name pos:line="8292" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8294" pos:column="9">HRESULT</name></type> ( <name pos:line="8294" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8294" pos:column="37">*</type:modifier><name pos:line="8294" pos:column="38">GetStartPoint</name> )<parameter_list pos:line="8294" pos:column="53">( 
            <param><decl><type><name pos:line="8295" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8295" pos:column="29">*</type:modifier></type> <name pos:line="8295" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8296" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8296" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8296" pos:column="40">*</type:modifier></type><name pos:line="8296" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8297" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8297" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="8297" pos:column="49">*</type:modifier></type><name pos:line="8297" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8299" pos:column="9">HRESULT</name></type> ( <name pos:line="8299" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8299" pos:column="37">*</type:modifier><name pos:line="8299" pos:column="38">GetEndPoint</name> )<parameter_list pos:line="8299" pos:column="51">( 
            <param><decl><type><name pos:line="8300" pos:column="13">IVxTrackingSpan</name> <type:modifier pos:line="8300" pos:column="29">*</type:modifier></type> <name pos:line="8300" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="8301" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8301" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="8301" pos:column="40">*</type:modifier></type><name pos:line="8301" pos:column="41">pSnapshot</name></decl></param>,
            <comment type="block" pos:line="8302" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8302" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="8302" pos:column="49">*</type:modifier></type><name pos:line="8302" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8304" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8305" pos:column="7">IVxTrackingSpanVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8307" pos:column="5">interface</name></type> <name pos:line="8307" pos:column="15">IVxTrackingSpan</name>
    <argument_list pos:line="8308" pos:column="5">{
        <argument><expr><name pos:line="8309" pos:column="9">CONST_VTBL</name> struct <name pos:line="8309" pos:column="27">IVxTrackingSpanVtbl</name> <op:operator pos:line="8309" pos:column="47">*</op:operator><name pos:line="8309" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8314" pos:column="1">#<cpp:directive pos:line="8314" pos:column="2">ifdef</cpp:directive> <name pos:line="8314" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8317" pos:column="1">#<cpp:directive pos:line="8317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8317" pos:column="9">IVxTrackingSpan_QueryInterface</name><parameter_list pos:line="8317" pos:column="39">(<param><type><name pos:line="8317" pos:column="40">This</name></type></param>,<param><type><name pos:line="8317" pos:column="45">riid</name></type></param>,<param><type><name pos:line="8317" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8318" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8320" pos:column="1">#<cpp:directive pos:line="8320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8320" pos:column="9">IVxTrackingSpan_AddRef</name><parameter_list pos:line="8320" pos:column="31">(<param><type><name pos:line="8320" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8321" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8323" pos:column="1">#<cpp:directive pos:line="8323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8323" pos:column="9">IVxTrackingSpan_Release</name><parameter_list pos:line="8323" pos:column="32">(<param><type><name pos:line="8323" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8324" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8327" pos:column="1">#<cpp:directive pos:line="8327" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8327" pos:column="9">IVxTrackingSpan_GetTextBuffer</name><parameter_list pos:line="8327" pos:column="38">(<param><type><name pos:line="8327" pos:column="39">This</name></type></param>,<param><type><name pos:line="8327" pos:column="44">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8328" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8330" pos:column="1">#<cpp:directive pos:line="8330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8330" pos:column="9">IVxTrackingSpan_GetTrackingMode</name><parameter_list pos:line="8330" pos:column="40">(<param><type><name pos:line="8330" pos:column="41">This</name></type></param>,<param><type><name pos:line="8330" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8331" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTrackingMode(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8333" pos:column="1">#<cpp:directive pos:line="8333" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8333" pos:column="9">IVxTrackingSpan_GetTrackingFidelity</name><parameter_list pos:line="8333" pos:column="44">(<param><type><name pos:line="8333" pos:column="45">This</name></type></param>,<param><type><name pos:line="8333" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8334" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTrackingFidelity(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8336" pos:column="1">#<cpp:directive pos:line="8336" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8336" pos:column="9">IVxTrackingSpan_GetSpan</name><parameter_list pos:line="8336" pos:column="32">(<param><type><name pos:line="8336" pos:column="33">This</name></type></param>,<param><type><name pos:line="8336" pos:column="38">pSnapshot</name></type></param>,<param><type><name pos:line="8336" pos:column="48">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8337" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpan(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8339" pos:column="1">#<cpp:directive pos:line="8339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8339" pos:column="9">IVxTrackingSpan_GetSpan_2</name><parameter_list pos:line="8339" pos:column="34">(<param><type><name pos:line="8339" pos:column="35">This</name></type></param>,<param><type><name pos:line="8339" pos:column="40">pVersion</name></type></param>,<param><type><name pos:line="8339" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8340" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpan_2(This,pVersion,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8342" pos:column="1">#<cpp:directive pos:line="8342" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8342" pos:column="9">IVxTrackingSpan_GetText</name><parameter_list pos:line="8342" pos:column="32">(<param><type><name pos:line="8342" pos:column="33">This</name></type></param>,<param><type><name pos:line="8342" pos:column="38">pSnapshot</name></type></param>,<param><type><name pos:line="8342" pos:column="48">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8343" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8345" pos:column="1">#<cpp:directive pos:line="8345" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8345" pos:column="9">IVxTrackingSpan_GetStartPoint</name><parameter_list pos:line="8345" pos:column="38">(<param><type><name pos:line="8345" pos:column="39">This</name></type></param>,<param><type><name pos:line="8345" pos:column="44">pSnapshot</name></type></param>,<param><type><name pos:line="8345" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8346" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8348" pos:column="1">#<cpp:directive pos:line="8348" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8348" pos:column="9">IVxTrackingSpan_GetEndPoint</name><parameter_list pos:line="8348" pos:column="36">(<param><type><name pos:line="8348" pos:column="37">This</name></type></param>,<param><type><name pos:line="8348" pos:column="42">pSnapshot</name></type></param>,<param><type><name pos:line="8348" pos:column="52">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8349" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,pSnapshot,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8351" pos:column="1">#<cpp:directive pos:line="8351" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8351" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8354" pos:column="1">#<cpp:directive pos:line="8354" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8354" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8359" pos:column="1">#<cpp:directive pos:line="8359" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8359" pos:column="9">/* __IVxTrackingSpan_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8362" pos:column="1">#<cpp:directive pos:line="8362" pos:column="2">ifndef</cpp:directive> <name pos:line="8362" pos:column="9">__IVxNormalizedSnapshotSpanCollection_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8363" pos:column="1">#<cpp:directive pos:line="8363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8363" pos:column="9">__IVxNormalizedSnapshotSpanCollection_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8365" pos:column="1">/* interface IVxNormalizedSnapshotSpanCollection */</comment>
<comment type="block" pos:line="8366" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8369" pos:column="1">EXTERN_C</name> <specifier pos:line="8369" pos:column="10">const</specifier> <name pos:line="8369" pos:column="16">IID</name></type> <name pos:line="8369" pos:column="20">IID_IVxNormalizedSnapshotSpanCollection</name></decl>;</decl_stmt>

<cpp:if pos:line="8371" pos:column="1">#<cpp:directive pos:line="8371" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8371" pos:column="5">defined</name><argument_list pos:line="8371" pos:column="12">(<argument><expr><name pos:line="8371" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8371" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8371" pos:column="29">!</op:operator><call><name pos:line="8371" pos:column="30">defined</name><argument_list pos:line="8371" pos:column="37">(<argument><expr><name pos:line="8371" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8373" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8373" pos:column="19">(<argument pos:line="8373" pos:column="20">"df81e2df-b253-4859-9429-bb9712cf7f2b"</argument>)</argument_list></macro>
    <label><name pos:line="8374" pos:column="5">IVxNormalizedSnapshotSpanCollection</name> :</label> <expr_stmt><expr pos:line="8374" pos:column="43">public <name pos:line="8374" pos:column="50">IListVxSnapshotSpan</name>
    <block pos:line="8375" pos:column="5">{
    <expr pos:line="8376" pos:column="5">public<op:operator pos:line="8376" pos:column="11">:</op:operator>
        virtual <name pos:line="8377" pos:column="17">HRESULT</name> <name pos:line="8377" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8377" pos:column="43">OverlapsWith</name><argument_list pos:line="8377" pos:column="55">( 
            <comment type="block" pos:line="8378" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8378" pos:column="24">IVxNormalizedSnapshotSpanCollection</name> <op:operator pos:line="8378" pos:column="60">*</op:operator><name pos:line="8378" pos:column="61">pSet</name></expr></argument>,
            <comment type="block" pos:line="8379" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8379" pos:column="33">BOOL</name> <op:operator pos:line="8379" pos:column="38">*</op:operator><name pos:line="8379" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8379" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8379" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="8381" pos:column="9">virtual <name pos:line="8381" pos:column="17">HRESULT</name> <name pos:line="8381" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8381" pos:column="43">IntersectsWith</name><argument_list pos:line="8381" pos:column="57">( 
            <comment type="block" pos:line="8382" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8382" pos:column="24">IVxNormalizedSnapshotSpanCollection</name> <op:operator pos:line="8382" pos:column="60">*</op:operator><name pos:line="8382" pos:column="61">pSet</name></expr></argument>,
            <comment type="block" pos:line="8383" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8383" pos:column="33">BOOL</name> <op:operator pos:line="8383" pos:column="38">*</op:operator><name pos:line="8383" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8383" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8383" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8387" pos:column="1">#<cpp:directive pos:line="8387" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8387" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8389" pos:column="5">typedef <type><struct pos:line="8389" pos:column="13">struct <name pos:line="8389" pos:column="20">IVxNormalizedSnapshotSpanCollectionVtbl</name>
    <block pos:line="8390" pos:column="5">{<public type="default" pos:line="8390" pos:column="6">
        <function_decl><type><name pos:line="8391" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8393" pos:column="9">HRESULT</name></type> ( <name pos:line="8393" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8393" pos:column="37">*</type:modifier><name pos:line="8393" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8393" pos:column="54">( 
            <param><decl><type><name pos:line="8394" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8394" pos:column="49">*</type:modifier></type> <name pos:line="8394" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="8395" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8395" pos:column="24">REFIID</name></type> <name pos:line="8395" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8396" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8397" pos:column="13">__RPC__deref_out</name>  <name pos:line="8397" pos:column="31">void</name> <type:modifier pos:line="8397" pos:column="36">*</type:modifier><type:modifier pos:line="8397" pos:column="37">*</type:modifier></type><name pos:line="8397" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8399" pos:column="9">ULONG</name></type> ( <name pos:line="8399" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8399" pos:column="35">*</type:modifier><name pos:line="8399" pos:column="36">AddRef</name> )<parameter_list pos:line="8399" pos:column="44">( 
            <param><decl><type><name pos:line="8400" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8400" pos:column="49">*</type:modifier></type> <name pos:line="8400" pos:column="51">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8402" pos:column="9">ULONG</name></type> ( <name pos:line="8402" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8402" pos:column="35">*</type:modifier><name pos:line="8402" pos:column="36">Release</name> )<parameter_list pos:line="8402" pos:column="45">( 
            <param><decl><type><name pos:line="8403" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8403" pos:column="49">*</type:modifier></type> <name pos:line="8403" pos:column="51">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8405" pos:column="9">HRESULT</name></type> ( <name pos:line="8405" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8405" pos:column="37">*</type:modifier><name pos:line="8405" pos:column="38">GetCount</name> )<parameter_list pos:line="8405" pos:column="48">( 
            <param><decl><type><name pos:line="8406" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8406" pos:column="49">*</type:modifier></type> <name pos:line="8406" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="8407" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8407" pos:column="33">int</name> <type:modifier pos:line="8407" pos:column="37">*</type:modifier></type><name pos:line="8407" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8409" pos:column="9">HRESULT</name></type> ( <name pos:line="8409" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8409" pos:column="37">*</type:modifier><name pos:line="8409" pos:column="38">GetElement</name> )<parameter_list pos:line="8409" pos:column="50">( 
            <param><decl><type><name pos:line="8410" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8410" pos:column="49">*</type:modifier></type> <name pos:line="8410" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="8411" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8411" pos:column="24">int</name></type> <name pos:line="8411" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="8412" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8412" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="8412" pos:column="48">*</type:modifier></type><name pos:line="8412" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8414" pos:column="9">HRESULT</name></type> ( <name pos:line="8414" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8414" pos:column="37">*</type:modifier><name pos:line="8414" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="8414" pos:column="53">( 
            <param><decl><type><name pos:line="8415" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8415" pos:column="49">*</type:modifier></type> <name pos:line="8415" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="8416" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8416" pos:column="33">IEnumeratorVxSnapshotSpan</name> <type:modifier pos:line="8416" pos:column="59">*</type:modifier><type:modifier pos:line="8416" pos:column="60">*</type:modifier></type><name pos:line="8416" pos:column="61">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8418" pos:column="9">HRESULT</name></type> ( <name pos:line="8418" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8418" pos:column="37">*</type:modifier><name pos:line="8418" pos:column="38">OverlapsWith</name> )<parameter_list pos:line="8418" pos:column="52">( 
            <param><decl><type><name pos:line="8419" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8419" pos:column="49">*</type:modifier></type> <name pos:line="8419" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="8420" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8420" pos:column="24">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8420" pos:column="60">*</type:modifier></type><name pos:line="8420" pos:column="61">pSet</name></decl></param>,
            <comment type="block" pos:line="8421" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8421" pos:column="33">BOOL</name> <type:modifier pos:line="8421" pos:column="38">*</type:modifier></type><name pos:line="8421" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8423" pos:column="9">HRESULT</name></type> ( <name pos:line="8423" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8423" pos:column="37">*</type:modifier><name pos:line="8423" pos:column="38">IntersectsWith</name> )<parameter_list pos:line="8423" pos:column="54">( 
            <param><decl><type><name pos:line="8424" pos:column="13">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8424" pos:column="49">*</type:modifier></type> <name pos:line="8424" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="8425" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8425" pos:column="24">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="8425" pos:column="60">*</type:modifier></type><name pos:line="8425" pos:column="61">pSet</name></decl></param>,
            <comment type="block" pos:line="8426" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8426" pos:column="33">BOOL</name> <type:modifier pos:line="8426" pos:column="38">*</type:modifier></type><name pos:line="8426" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8428" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8429" pos:column="7">IVxNormalizedSnapshotSpanCollectionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8431" pos:column="5">interface</name></type> <name pos:line="8431" pos:column="15">IVxNormalizedSnapshotSpanCollection</name>
    <argument_list pos:line="8432" pos:column="5">{
        <argument><expr><name pos:line="8433" pos:column="9">CONST_VTBL</name> struct <name pos:line="8433" pos:column="27">IVxNormalizedSnapshotSpanCollectionVtbl</name> <op:operator pos:line="8433" pos:column="67">*</op:operator><name pos:line="8433" pos:column="68">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8438" pos:column="1">#<cpp:directive pos:line="8438" pos:column="2">ifdef</cpp:directive> <name pos:line="8438" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8441" pos:column="1">#<cpp:directive pos:line="8441" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8441" pos:column="9">IVxNormalizedSnapshotSpanCollection_QueryInterface</name><parameter_list pos:line="8441" pos:column="59">(<param><type><name pos:line="8441" pos:column="60">This</name></type></param>,<param><type><name pos:line="8441" pos:column="65">riid</name></type></param>,<param><type><name pos:line="8441" pos:column="70">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8442" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8444" pos:column="1">#<cpp:directive pos:line="8444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8444" pos:column="9">IVxNormalizedSnapshotSpanCollection_AddRef</name><parameter_list pos:line="8444" pos:column="51">(<param><type><name pos:line="8444" pos:column="52">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8445" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8447" pos:column="1">#<cpp:directive pos:line="8447" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8447" pos:column="9">IVxNormalizedSnapshotSpanCollection_Release</name><parameter_list pos:line="8447" pos:column="52">(<param><type><name pos:line="8447" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8448" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8451" pos:column="1">#<cpp:directive pos:line="8451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8451" pos:column="9">IVxNormalizedSnapshotSpanCollection_GetCount</name><parameter_list pos:line="8451" pos:column="53">(<param><type><name pos:line="8451" pos:column="54">This</name></type></param>,<param><type><name pos:line="8451" pos:column="59">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8452" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8454" pos:column="1">#<cpp:directive pos:line="8454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8454" pos:column="9">IVxNormalizedSnapshotSpanCollection_GetElement</name><parameter_list pos:line="8454" pos:column="55">(<param><type><name pos:line="8454" pos:column="56">This</name></type></param>,<param><type><name pos:line="8454" pos:column="61">index</name></type></param>,<param><type><name pos:line="8454" pos:column="67">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8455" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8457" pos:column="1">#<cpp:directive pos:line="8457" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8457" pos:column="9">IVxNormalizedSnapshotSpanCollection_GetEnumerator</name><parameter_list pos:line="8457" pos:column="58">(<param><type><name pos:line="8457" pos:column="59">This</name></type></param>,<param><type><name pos:line="8457" pos:column="64">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8458" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="8461" pos:column="1">#<cpp:directive pos:line="8461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8461" pos:column="9">IVxNormalizedSnapshotSpanCollection_OverlapsWith</name><parameter_list pos:line="8461" pos:column="57">(<param><type><name pos:line="8461" pos:column="58">This</name></type></param>,<param><type><name pos:line="8461" pos:column="63">pSet</name></type></param>,<param><type><name pos:line="8461" pos:column="68">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8462" pos:column="5">( (This)-&gt;lpVtbl -&gt; OverlapsWith(This,pSet,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8464" pos:column="1">#<cpp:directive pos:line="8464" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8464" pos:column="9">IVxNormalizedSnapshotSpanCollection_IntersectsWith</name><parameter_list pos:line="8464" pos:column="59">(<param><type><name pos:line="8464" pos:column="60">This</name></type></param>,<param><type><name pos:line="8464" pos:column="65">pSet</name></type></param>,<param><type><name pos:line="8464" pos:column="70">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8465" pos:column="5">( (This)-&gt;lpVtbl -&gt; IntersectsWith(This,pSet,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8467" pos:column="1">#<cpp:directive pos:line="8467" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8467" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8470" pos:column="1">#<cpp:directive pos:line="8470" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8470" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8475" pos:column="1">#<cpp:directive pos:line="8475" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8475" pos:column="9">/* __IVxNormalizedSnapshotSpanCollection_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8478" pos:column="1">#<cpp:directive pos:line="8478" pos:column="2">ifndef</cpp:directive> <name pos:line="8478" pos:column="9">__IVxNormalizedSpanCollection_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8479" pos:column="1">#<cpp:directive pos:line="8479" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8479" pos:column="9">__IVxNormalizedSpanCollection_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8481" pos:column="1">/* interface IVxNormalizedSpanCollection */</comment>
<comment type="block" pos:line="8482" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8485" pos:column="1">EXTERN_C</name> <specifier pos:line="8485" pos:column="10">const</specifier> <name pos:line="8485" pos:column="16">IID</name></type> <name pos:line="8485" pos:column="20">IID_IVxNormalizedSpanCollection</name></decl>;</decl_stmt>

<cpp:if pos:line="8487" pos:column="1">#<cpp:directive pos:line="8487" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8487" pos:column="5">defined</name><argument_list pos:line="8487" pos:column="12">(<argument><expr><name pos:line="8487" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8487" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8487" pos:column="29">!</op:operator><call><name pos:line="8487" pos:column="30">defined</name><argument_list pos:line="8487" pos:column="37">(<argument><expr><name pos:line="8487" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8489" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8489" pos:column="19">(<argument pos:line="8489" pos:column="20">"f12c3b51-b3c2-42ea-86b0-6185c6f712a8"</argument>)</argument_list></macro>
    <label><name pos:line="8490" pos:column="5">IVxNormalizedSpanCollection</name> :</label> <expr_stmt><expr pos:line="8490" pos:column="35">public <name pos:line="8490" pos:column="42">IListVxSpan</name>
    <block pos:line="8491" pos:column="5">{
    <expr pos:line="8492" pos:column="5">public<op:operator pos:line="8492" pos:column="11">:</op:operator>
        virtual <name pos:line="8493" pos:column="17">HRESULT</name> <name pos:line="8493" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8493" pos:column="43">OverlapsWith</name><argument_list pos:line="8493" pos:column="55">( 
            <comment type="block" pos:line="8494" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8494" pos:column="24">IVxNormalizedSpanCollection</name> <op:operator pos:line="8494" pos:column="52">*</op:operator><name pos:line="8494" pos:column="53">pSet</name></expr></argument>,
            <comment type="block" pos:line="8495" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8495" pos:column="33">BOOL</name> <op:operator pos:line="8495" pos:column="38">*</op:operator><name pos:line="8495" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8495" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8495" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="8497" pos:column="9">virtual <name pos:line="8497" pos:column="17">HRESULT</name> <name pos:line="8497" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8497" pos:column="43">IntersectsWith</name><argument_list pos:line="8497" pos:column="57">( 
            <comment type="block" pos:line="8498" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8498" pos:column="24">IVxNormalizedSpanCollection</name> <op:operator pos:line="8498" pos:column="52">*</op:operator><name pos:line="8498" pos:column="53">pSet</name></expr></argument>,
            <comment type="block" pos:line="8499" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8499" pos:column="33">BOOL</name> <op:operator pos:line="8499" pos:column="38">*</op:operator><name pos:line="8499" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8499" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8499" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="8501" pos:column="9">virtual <name pos:line="8501" pos:column="17">HRESULT</name> <name pos:line="8501" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8501" pos:column="43">GetHashCode</name><argument_list pos:line="8501" pos:column="54">( 
            <comment type="block" pos:line="8502" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8502" pos:column="33">int</name> <op:operator pos:line="8502" pos:column="37">*</op:operator><name pos:line="8502" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8502" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="8502" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="8504" pos:column="9">virtual <name pos:line="8504" pos:column="17">HRESULT</name> <name pos:line="8504" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8504" pos:column="43">Equals</name><argument_list pos:line="8504" pos:column="49">( 
            <comment type="block" pos:line="8505" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="8505" pos:column="24">IUnknown</name> <op:operator pos:line="8505" pos:column="33">*</op:operator><name pos:line="8505" pos:column="34">pObj</name></expr></argument>,
            <comment type="block" pos:line="8506" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8506" pos:column="33">BOOL</name> <op:operator pos:line="8506" pos:column="38">*</op:operator><name pos:line="8506" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8506" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8506" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="8508" pos:column="9">virtual <name pos:line="8508" pos:column="17">HRESULT</name> <name pos:line="8508" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8508" pos:column="43">ToString</name><argument_list pos:line="8508" pos:column="51">( 
            <comment type="block" pos:line="8509" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8509" pos:column="33">BSTR</name> <op:operator pos:line="8509" pos:column="38">*</op:operator><name pos:line="8509" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8509" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="8509" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8513" pos:column="1">#<cpp:directive pos:line="8513" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8513" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8515" pos:column="5">typedef <type><struct pos:line="8515" pos:column="13">struct <name pos:line="8515" pos:column="20">IVxNormalizedSpanCollectionVtbl</name>
    <block pos:line="8516" pos:column="5">{<public type="default" pos:line="8516" pos:column="6">
        <function_decl><type><name pos:line="8517" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8519" pos:column="9">HRESULT</name></type> ( <name pos:line="8519" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8519" pos:column="37">*</type:modifier><name pos:line="8519" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8519" pos:column="54">( 
            <param><decl><type><name pos:line="8520" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8520" pos:column="41">*</type:modifier></type> <name pos:line="8520" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8521" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8521" pos:column="24">REFIID</name></type> <name pos:line="8521" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8522" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8523" pos:column="13">__RPC__deref_out</name>  <name pos:line="8523" pos:column="31">void</name> <type:modifier pos:line="8523" pos:column="36">*</type:modifier><type:modifier pos:line="8523" pos:column="37">*</type:modifier></type><name pos:line="8523" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8525" pos:column="9">ULONG</name></type> ( <name pos:line="8525" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8525" pos:column="35">*</type:modifier><name pos:line="8525" pos:column="36">AddRef</name> )<parameter_list pos:line="8525" pos:column="44">( 
            <param><decl><type><name pos:line="8526" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8526" pos:column="41">*</type:modifier></type> <name pos:line="8526" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8528" pos:column="9">ULONG</name></type> ( <name pos:line="8528" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8528" pos:column="35">*</type:modifier><name pos:line="8528" pos:column="36">Release</name> )<parameter_list pos:line="8528" pos:column="45">( 
            <param><decl><type><name pos:line="8529" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8529" pos:column="41">*</type:modifier></type> <name pos:line="8529" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8531" pos:column="9">HRESULT</name></type> ( <name pos:line="8531" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8531" pos:column="37">*</type:modifier><name pos:line="8531" pos:column="38">GetCount</name> )<parameter_list pos:line="8531" pos:column="48">( 
            <param><decl><type><name pos:line="8532" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8532" pos:column="41">*</type:modifier></type> <name pos:line="8532" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8533" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8533" pos:column="33">int</name> <type:modifier pos:line="8533" pos:column="37">*</type:modifier></type><name pos:line="8533" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8535" pos:column="9">HRESULT</name></type> ( <name pos:line="8535" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8535" pos:column="37">*</type:modifier><name pos:line="8535" pos:column="38">GetElement</name> )<parameter_list pos:line="8535" pos:column="50">( 
            <param><decl><type><name pos:line="8536" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8536" pos:column="41">*</type:modifier></type> <name pos:line="8536" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8537" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8537" pos:column="24">int</name></type> <name pos:line="8537" pos:column="28">index</name></decl></param>,
            <comment type="block" pos:line="8538" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8538" pos:column="33">VxSpan</name> <type:modifier pos:line="8538" pos:column="40">*</type:modifier></type><name pos:line="8538" pos:column="41">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8540" pos:column="9">HRESULT</name></type> ( <name pos:line="8540" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8540" pos:column="37">*</type:modifier><name pos:line="8540" pos:column="38">GetEnumerator</name> )<parameter_list pos:line="8540" pos:column="53">( 
            <param><decl><type><name pos:line="8541" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8541" pos:column="41">*</type:modifier></type> <name pos:line="8541" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8542" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8542" pos:column="33">IEnumeratorVxSpan</name> <type:modifier pos:line="8542" pos:column="51">*</type:modifier><type:modifier pos:line="8542" pos:column="52">*</type:modifier></type><name pos:line="8542" pos:column="53">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8544" pos:column="9">HRESULT</name></type> ( <name pos:line="8544" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8544" pos:column="37">*</type:modifier><name pos:line="8544" pos:column="38">OverlapsWith</name> )<parameter_list pos:line="8544" pos:column="52">( 
            <param><decl><type><name pos:line="8545" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8545" pos:column="41">*</type:modifier></type> <name pos:line="8545" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8546" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8546" pos:column="24">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8546" pos:column="52">*</type:modifier></type><name pos:line="8546" pos:column="53">pSet</name></decl></param>,
            <comment type="block" pos:line="8547" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8547" pos:column="33">BOOL</name> <type:modifier pos:line="8547" pos:column="38">*</type:modifier></type><name pos:line="8547" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8549" pos:column="9">HRESULT</name></type> ( <name pos:line="8549" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8549" pos:column="37">*</type:modifier><name pos:line="8549" pos:column="38">IntersectsWith</name> )<parameter_list pos:line="8549" pos:column="54">( 
            <param><decl><type><name pos:line="8550" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8550" pos:column="41">*</type:modifier></type> <name pos:line="8550" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8551" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8551" pos:column="24">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8551" pos:column="52">*</type:modifier></type><name pos:line="8551" pos:column="53">pSet</name></decl></param>,
            <comment type="block" pos:line="8552" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8552" pos:column="33">BOOL</name> <type:modifier pos:line="8552" pos:column="38">*</type:modifier></type><name pos:line="8552" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8554" pos:column="9">HRESULT</name></type> ( <name pos:line="8554" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8554" pos:column="37">*</type:modifier><name pos:line="8554" pos:column="38">GetHashCode</name> )<parameter_list pos:line="8554" pos:column="51">( 
            <param><decl><type><name pos:line="8555" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8555" pos:column="41">*</type:modifier></type> <name pos:line="8555" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8556" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8556" pos:column="33">int</name> <type:modifier pos:line="8556" pos:column="37">*</type:modifier></type><name pos:line="8556" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8558" pos:column="9">HRESULT</name></type> ( <name pos:line="8558" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8558" pos:column="37">*</type:modifier><name pos:line="8558" pos:column="38">Equals</name> )<parameter_list pos:line="8558" pos:column="46">( 
            <param><decl><type><name pos:line="8559" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8559" pos:column="41">*</type:modifier></type> <name pos:line="8559" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8560" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8560" pos:column="24">IUnknown</name> <type:modifier pos:line="8560" pos:column="33">*</type:modifier></type><name pos:line="8560" pos:column="34">pObj</name></decl></param>,
            <comment type="block" pos:line="8561" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8561" pos:column="33">BOOL</name> <type:modifier pos:line="8561" pos:column="38">*</type:modifier></type><name pos:line="8561" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8563" pos:column="9">HRESULT</name></type> ( <name pos:line="8563" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8563" pos:column="37">*</type:modifier><name pos:line="8563" pos:column="38">ToString</name> )<parameter_list pos:line="8563" pos:column="48">( 
            <param><decl><type><name pos:line="8564" pos:column="13">IVxNormalizedSpanCollection</name> <type:modifier pos:line="8564" pos:column="41">*</type:modifier></type> <name pos:line="8564" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8565" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8565" pos:column="33">BSTR</name> <type:modifier pos:line="8565" pos:column="38">*</type:modifier></type><name pos:line="8565" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8567" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8568" pos:column="7">IVxNormalizedSpanCollectionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8570" pos:column="5">interface</name></type> <name pos:line="8570" pos:column="15">IVxNormalizedSpanCollection</name>
    <argument_list pos:line="8571" pos:column="5">{
        <argument><expr><name pos:line="8572" pos:column="9">CONST_VTBL</name> struct <name pos:line="8572" pos:column="27">IVxNormalizedSpanCollectionVtbl</name> <op:operator pos:line="8572" pos:column="59">*</op:operator><name pos:line="8572" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8577" pos:column="1">#<cpp:directive pos:line="8577" pos:column="2">ifdef</cpp:directive> <name pos:line="8577" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8580" pos:column="1">#<cpp:directive pos:line="8580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8580" pos:column="9">IVxNormalizedSpanCollection_QueryInterface</name><parameter_list pos:line="8580" pos:column="51">(<param><type><name pos:line="8580" pos:column="52">This</name></type></param>,<param><type><name pos:line="8580" pos:column="57">riid</name></type></param>,<param><type><name pos:line="8580" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8581" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8583" pos:column="1">#<cpp:directive pos:line="8583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8583" pos:column="9">IVxNormalizedSpanCollection_AddRef</name><parameter_list pos:line="8583" pos:column="43">(<param><type><name pos:line="8583" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8584" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8586" pos:column="1">#<cpp:directive pos:line="8586" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8586" pos:column="9">IVxNormalizedSpanCollection_Release</name><parameter_list pos:line="8586" pos:column="44">(<param><type><name pos:line="8586" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8587" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8590" pos:column="1">#<cpp:directive pos:line="8590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8590" pos:column="9">IVxNormalizedSpanCollection_GetCount</name><parameter_list pos:line="8590" pos:column="45">(<param><type><name pos:line="8590" pos:column="46">This</name></type></param>,<param><type><name pos:line="8590" pos:column="51">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8591" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8593" pos:column="1">#<cpp:directive pos:line="8593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8593" pos:column="9">IVxNormalizedSpanCollection_GetElement</name><parameter_list pos:line="8593" pos:column="47">(<param><type><name pos:line="8593" pos:column="48">This</name></type></param>,<param><type><name pos:line="8593" pos:column="53">index</name></type></param>,<param><type><name pos:line="8593" pos:column="59">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8594" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,index,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8596" pos:column="1">#<cpp:directive pos:line="8596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8596" pos:column="9">IVxNormalizedSpanCollection_GetEnumerator</name><parameter_list pos:line="8596" pos:column="50">(<param><type><name pos:line="8596" pos:column="51">This</name></type></param>,<param><type><name pos:line="8596" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8597" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEnumerator(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="8600" pos:column="1">#<cpp:directive pos:line="8600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8600" pos:column="9">IVxNormalizedSpanCollection_OverlapsWith</name><parameter_list pos:line="8600" pos:column="49">(<param><type><name pos:line="8600" pos:column="50">This</name></type></param>,<param><type><name pos:line="8600" pos:column="55">pSet</name></type></param>,<param><type><name pos:line="8600" pos:column="60">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8601" pos:column="5">( (This)-&gt;lpVtbl -&gt; OverlapsWith(This,pSet,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8603" pos:column="1">#<cpp:directive pos:line="8603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8603" pos:column="9">IVxNormalizedSpanCollection_IntersectsWith</name><parameter_list pos:line="8603" pos:column="51">(<param><type><name pos:line="8603" pos:column="52">This</name></type></param>,<param><type><name pos:line="8603" pos:column="57">pSet</name></type></param>,<param><type><name pos:line="8603" pos:column="62">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8604" pos:column="5">( (This)-&gt;lpVtbl -&gt; IntersectsWith(This,pSet,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8606" pos:column="1">#<cpp:directive pos:line="8606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8606" pos:column="9">IVxNormalizedSpanCollection_GetHashCode</name><parameter_list pos:line="8606" pos:column="48">(<param><type><name pos:line="8606" pos:column="49">This</name></type></param>,<param><type><name pos:line="8606" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8607" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHashCode(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8609" pos:column="1">#<cpp:directive pos:line="8609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8609" pos:column="9">IVxNormalizedSpanCollection_Equals</name><parameter_list pos:line="8609" pos:column="43">(<param><type><name pos:line="8609" pos:column="44">This</name></type></param>,<param><type><name pos:line="8609" pos:column="49">pObj</name></type></param>,<param><type><name pos:line="8609" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8610" pos:column="5">( (This)-&gt;lpVtbl -&gt; Equals(This,pObj,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8612" pos:column="1">#<cpp:directive pos:line="8612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8612" pos:column="9">IVxNormalizedSpanCollection_ToString</name><parameter_list pos:line="8612" pos:column="45">(<param><type><name pos:line="8612" pos:column="46">This</name></type></param>,<param><type><name pos:line="8612" pos:column="51">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8613" pos:column="5">( (This)-&gt;lpVtbl -&gt; ToString(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8615" pos:column="1">#<cpp:directive pos:line="8615" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8615" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8618" pos:column="1">#<cpp:directive pos:line="8618" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8618" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8623" pos:column="1">#<cpp:directive pos:line="8623" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8623" pos:column="9">/* __IVxNormalizedSpanCollection_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8626" pos:column="1">#<cpp:directive pos:line="8626" pos:column="2">ifndef</cpp:directive> <name pos:line="8626" pos:column="9">__IVxTextContentChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8627" pos:column="1">#<cpp:directive pos:line="8627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8627" pos:column="9">__IVxTextContentChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8629" pos:column="1">/* interface IVxTextContentChangedEventArgs */</comment>
<comment type="block" pos:line="8630" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8633" pos:column="1">EXTERN_C</name> <specifier pos:line="8633" pos:column="10">const</specifier> <name pos:line="8633" pos:column="16">IID</name></type> <name pos:line="8633" pos:column="20">IID_IVxTextContentChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="8635" pos:column="1">#<cpp:directive pos:line="8635" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8635" pos:column="5">defined</name><argument_list pos:line="8635" pos:column="12">(<argument><expr><name pos:line="8635" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8635" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8635" pos:column="29">!</op:operator><call><name pos:line="8635" pos:column="30">defined</name><argument_list pos:line="8635" pos:column="37">(<argument><expr><name pos:line="8635" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8637" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8637" pos:column="19">(<argument pos:line="8637" pos:column="20">"0fe2e653-3d0b-43db-b76f-12c5e04db756"</argument>)</argument_list></macro>
    <label><name pos:line="8638" pos:column="5">IVxTextContentChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="8638" pos:column="38">public <name pos:line="8638" pos:column="45">IVxTextSnapshotChangedEventArgs</name>
    <block pos:line="8639" pos:column="5">{
    <expr pos:line="8640" pos:column="5">public<op:operator pos:line="8640" pos:column="11">:</op:operator>
        virtual <name pos:line="8641" pos:column="17">HRESULT</name> <name pos:line="8641" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8641" pos:column="43">GetChanges</name><argument_list pos:line="8641" pos:column="53">( 
            <comment type="block" pos:line="8642" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8642" pos:column="33">IVxNormalizedTextChangeCollection</name> <op:operator pos:line="8642" pos:column="67">*</op:operator><op:operator pos:line="8642" pos:column="68">*</op:operator><name pos:line="8642" pos:column="69">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8642" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="8642" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="8644" pos:column="9">virtual <name pos:line="8644" pos:column="17">HRESULT</name> <name pos:line="8644" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8644" pos:column="43">GetOptions</name><argument_list pos:line="8644" pos:column="53">( 
            <comment type="block" pos:line="8645" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8645" pos:column="33">VxEditOptions</name> <op:operator pos:line="8645" pos:column="47">*</op:operator><name pos:line="8645" pos:column="48">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8645" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="8645" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8649" pos:column="1">#<cpp:directive pos:line="8649" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8649" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8651" pos:column="5">typedef <type><struct pos:line="8651" pos:column="13">struct <name pos:line="8651" pos:column="20">IVxTextContentChangedEventArgsVtbl</name>
    <block pos:line="8652" pos:column="5">{<public type="default" pos:line="8652" pos:column="6">
        <function_decl><type><name pos:line="8653" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8655" pos:column="9">HRESULT</name></type> ( <name pos:line="8655" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8655" pos:column="37">*</type:modifier><name pos:line="8655" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8655" pos:column="54">( 
            <param><decl><type><name pos:line="8656" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8656" pos:column="44">*</type:modifier></type> <name pos:line="8656" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8657" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8657" pos:column="24">REFIID</name></type> <name pos:line="8657" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8658" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8659" pos:column="13">__RPC__deref_out</name>  <name pos:line="8659" pos:column="31">void</name> <type:modifier pos:line="8659" pos:column="36">*</type:modifier><type:modifier pos:line="8659" pos:column="37">*</type:modifier></type><name pos:line="8659" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8661" pos:column="9">ULONG</name></type> ( <name pos:line="8661" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8661" pos:column="35">*</type:modifier><name pos:line="8661" pos:column="36">AddRef</name> )<parameter_list pos:line="8661" pos:column="44">( 
            <param><decl><type><name pos:line="8662" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8662" pos:column="44">*</type:modifier></type> <name pos:line="8662" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8664" pos:column="9">ULONG</name></type> ( <name pos:line="8664" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8664" pos:column="35">*</type:modifier><name pos:line="8664" pos:column="36">Release</name> )<parameter_list pos:line="8664" pos:column="45">( 
            <param><decl><type><name pos:line="8665" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8665" pos:column="44">*</type:modifier></type> <name pos:line="8665" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8667" pos:column="9">HRESULT</name></type> ( <name pos:line="8667" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8667" pos:column="37">*</type:modifier><name pos:line="8667" pos:column="38">GetBefore</name> )<parameter_list pos:line="8667" pos:column="49">( 
            <param><decl><type><name pos:line="8668" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8668" pos:column="44">*</type:modifier></type> <name pos:line="8668" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8669" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8669" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="8669" pos:column="49">*</type:modifier><type:modifier pos:line="8669" pos:column="50">*</type:modifier></type><name pos:line="8669" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8671" pos:column="9">HRESULT</name></type> ( <name pos:line="8671" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8671" pos:column="37">*</type:modifier><name pos:line="8671" pos:column="38">GetAfter</name> )<parameter_list pos:line="8671" pos:column="48">( 
            <param><decl><type><name pos:line="8672" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8672" pos:column="44">*</type:modifier></type> <name pos:line="8672" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8673" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8673" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="8673" pos:column="49">*</type:modifier><type:modifier pos:line="8673" pos:column="50">*</type:modifier></type><name pos:line="8673" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8675" pos:column="9">HRESULT</name></type> ( <name pos:line="8675" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8675" pos:column="37">*</type:modifier><name pos:line="8675" pos:column="38">GetBeforeVersion</name> )<parameter_list pos:line="8675" pos:column="56">( 
            <param><decl><type><name pos:line="8676" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8676" pos:column="44">*</type:modifier></type> <name pos:line="8676" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8677" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8677" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="8677" pos:column="48">*</type:modifier><type:modifier pos:line="8677" pos:column="49">*</type:modifier></type><name pos:line="8677" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8679" pos:column="9">HRESULT</name></type> ( <name pos:line="8679" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8679" pos:column="37">*</type:modifier><name pos:line="8679" pos:column="38">GetAfterVersion</name> )<parameter_list pos:line="8679" pos:column="55">( 
            <param><decl><type><name pos:line="8680" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8680" pos:column="44">*</type:modifier></type> <name pos:line="8680" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8681" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8681" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="8681" pos:column="48">*</type:modifier><type:modifier pos:line="8681" pos:column="49">*</type:modifier></type><name pos:line="8681" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8683" pos:column="9">HRESULT</name></type> ( <name pos:line="8683" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8683" pos:column="37">*</type:modifier><name pos:line="8683" pos:column="38">GetEditTag</name> )<parameter_list pos:line="8683" pos:column="50">( 
            <param><decl><type><name pos:line="8684" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8684" pos:column="44">*</type:modifier></type> <name pos:line="8684" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8685" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8685" pos:column="33">IUnknown</name> <type:modifier pos:line="8685" pos:column="42">*</type:modifier><type:modifier pos:line="8685" pos:column="43">*</type:modifier></type><name pos:line="8685" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8687" pos:column="9">HRESULT</name></type> ( <name pos:line="8687" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8687" pos:column="37">*</type:modifier><name pos:line="8687" pos:column="38">GetChanges</name> )<parameter_list pos:line="8687" pos:column="50">( 
            <param><decl><type><name pos:line="8688" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8688" pos:column="44">*</type:modifier></type> <name pos:line="8688" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8689" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8689" pos:column="33">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="8689" pos:column="67">*</type:modifier><type:modifier pos:line="8689" pos:column="68">*</type:modifier></type><name pos:line="8689" pos:column="69">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8691" pos:column="9">HRESULT</name></type> ( <name pos:line="8691" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8691" pos:column="37">*</type:modifier><name pos:line="8691" pos:column="38">GetOptions</name> )<parameter_list pos:line="8691" pos:column="50">( 
            <param><decl><type><name pos:line="8692" pos:column="13">IVxTextContentChangedEventArgs</name> <type:modifier pos:line="8692" pos:column="44">*</type:modifier></type> <name pos:line="8692" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8693" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8693" pos:column="33">VxEditOptions</name> <type:modifier pos:line="8693" pos:column="47">*</type:modifier></type><name pos:line="8693" pos:column="48">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8695" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8696" pos:column="7">IVxTextContentChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8698" pos:column="5">interface</name></type> <name pos:line="8698" pos:column="15">IVxTextContentChangedEventArgs</name>
    <argument_list pos:line="8699" pos:column="5">{
        <argument><expr><name pos:line="8700" pos:column="9">CONST_VTBL</name> struct <name pos:line="8700" pos:column="27">IVxTextContentChangedEventArgsVtbl</name> <op:operator pos:line="8700" pos:column="62">*</op:operator><name pos:line="8700" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8705" pos:column="1">#<cpp:directive pos:line="8705" pos:column="2">ifdef</cpp:directive> <name pos:line="8705" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8708" pos:column="1">#<cpp:directive pos:line="8708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8708" pos:column="9">IVxTextContentChangedEventArgs_QueryInterface</name><parameter_list pos:line="8708" pos:column="54">(<param><type><name pos:line="8708" pos:column="55">This</name></type></param>,<param><type><name pos:line="8708" pos:column="60">riid</name></type></param>,<param><type><name pos:line="8708" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8709" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8711" pos:column="1">#<cpp:directive pos:line="8711" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8711" pos:column="9">IVxTextContentChangedEventArgs_AddRef</name><parameter_list pos:line="8711" pos:column="46">(<param><type><name pos:line="8711" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8712" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8714" pos:column="1">#<cpp:directive pos:line="8714" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8714" pos:column="9">IVxTextContentChangedEventArgs_Release</name><parameter_list pos:line="8714" pos:column="47">(<param><type><name pos:line="8714" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8715" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8718" pos:column="1">#<cpp:directive pos:line="8718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8718" pos:column="9">IVxTextContentChangedEventArgs_GetBefore</name><parameter_list pos:line="8718" pos:column="49">(<param><type><name pos:line="8718" pos:column="50">This</name></type></param>,<param><type><name pos:line="8718" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8719" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8721" pos:column="1">#<cpp:directive pos:line="8721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8721" pos:column="9">IVxTextContentChangedEventArgs_GetAfter</name><parameter_list pos:line="8721" pos:column="48">(<param><type><name pos:line="8721" pos:column="49">This</name></type></param>,<param><type><name pos:line="8721" pos:column="54">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8722" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8724" pos:column="1">#<cpp:directive pos:line="8724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8724" pos:column="9">IVxTextContentChangedEventArgs_GetBeforeVersion</name><parameter_list pos:line="8724" pos:column="56">(<param><type><name pos:line="8724" pos:column="57">This</name></type></param>,<param><type><name pos:line="8724" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8725" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8727" pos:column="1">#<cpp:directive pos:line="8727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8727" pos:column="9">IVxTextContentChangedEventArgs_GetAfterVersion</name><parameter_list pos:line="8727" pos:column="55">(<param><type><name pos:line="8727" pos:column="56">This</name></type></param>,<param><type><name pos:line="8727" pos:column="61">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8728" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8730" pos:column="1">#<cpp:directive pos:line="8730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8730" pos:column="9">IVxTextContentChangedEventArgs_GetEditTag</name><parameter_list pos:line="8730" pos:column="50">(<param><type><name pos:line="8730" pos:column="51">This</name></type></param>,<param><type><name pos:line="8730" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8731" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditTag(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="8734" pos:column="1">#<cpp:directive pos:line="8734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8734" pos:column="9">IVxTextContentChangedEventArgs_GetChanges</name><parameter_list pos:line="8734" pos:column="50">(<param><type><name pos:line="8734" pos:column="51">This</name></type></param>,<param><type><name pos:line="8734" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8735" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetChanges(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8737" pos:column="1">#<cpp:directive pos:line="8737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8737" pos:column="9">IVxTextContentChangedEventArgs_GetOptions</name><parameter_list pos:line="8737" pos:column="50">(<param><type><name pos:line="8737" pos:column="51">This</name></type></param>,<param><type><name pos:line="8737" pos:column="56">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8738" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOptions(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8740" pos:column="1">#<cpp:directive pos:line="8740" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8740" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8743" pos:column="1">#<cpp:directive pos:line="8743" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8743" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8748" pos:column="1">#<cpp:directive pos:line="8748" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8748" pos:column="9">/* __IVxTextContentChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8751" pos:column="1">#<cpp:directive pos:line="8751" pos:column="2">ifndef</cpp:directive> <name pos:line="8751" pos:column="9">__IVxGraphBufferContentTypeChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8752" pos:column="1">#<cpp:directive pos:line="8752" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8752" pos:column="9">__IVxGraphBufferContentTypeChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8754" pos:column="1">/* interface IVxGraphBufferContentTypeChangedEventArgs */</comment>
<comment type="block" pos:line="8755" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8758" pos:column="1">EXTERN_C</name> <specifier pos:line="8758" pos:column="10">const</specifier> <name pos:line="8758" pos:column="16">IID</name></type> <name pos:line="8758" pos:column="20">IID_IVxGraphBufferContentTypeChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="8760" pos:column="1">#<cpp:directive pos:line="8760" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8760" pos:column="5">defined</name><argument_list pos:line="8760" pos:column="12">(<argument><expr><name pos:line="8760" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8760" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8760" pos:column="29">!</op:operator><call><name pos:line="8760" pos:column="30">defined</name><argument_list pos:line="8760" pos:column="37">(<argument><expr><name pos:line="8760" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8762" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8762" pos:column="19">(<argument pos:line="8762" pos:column="20">"020c7be6-00fe-43e1-ba03-e62fb81eb8f9"</argument>)</argument_list></macro>
    <label><name pos:line="8763" pos:column="5">IVxGraphBufferContentTypeChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="8763" pos:column="49">public <name pos:line="8763" pos:column="56">IUnknown</name>
    <block pos:line="8764" pos:column="5">{
    <expr pos:line="8765" pos:column="5">public<op:operator pos:line="8765" pos:column="11">:</op:operator>
        virtual <name pos:line="8766" pos:column="17">HRESULT</name> <name pos:line="8766" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8766" pos:column="43">GetTextBuffer</name><argument_list pos:line="8766" pos:column="56">( 
            <comment type="block" pos:line="8767" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8767" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="8767" pos:column="47">*</op:operator><op:operator pos:line="8767" pos:column="48">*</op:operator><name pos:line="8767" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8767" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8767" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8769" pos:column="9">virtual <name pos:line="8769" pos:column="17">HRESULT</name> <name pos:line="8769" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8769" pos:column="43">GetBeforeContentType</name><argument_list pos:line="8769" pos:column="63">( 
            <comment type="block" pos:line="8770" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8770" pos:column="33">IVxContentType</name> <op:operator pos:line="8770" pos:column="48">*</op:operator><op:operator pos:line="8770" pos:column="49">*</op:operator><name pos:line="8770" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8770" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="8770" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="8772" pos:column="9">virtual <name pos:line="8772" pos:column="17">HRESULT</name> <name pos:line="8772" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8772" pos:column="43">GetAfterContentType</name><argument_list pos:line="8772" pos:column="62">( 
            <comment type="block" pos:line="8773" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8773" pos:column="33">IVxContentType</name> <op:operator pos:line="8773" pos:column="48">*</op:operator><op:operator pos:line="8773" pos:column="49">*</op:operator><name pos:line="8773" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8773" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="8773" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8777" pos:column="1">#<cpp:directive pos:line="8777" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8777" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8779" pos:column="5">typedef <type><struct pos:line="8779" pos:column="13">struct <name pos:line="8779" pos:column="20">IVxGraphBufferContentTypeChangedEventArgsVtbl</name>
    <block pos:line="8780" pos:column="5">{<public type="default" pos:line="8780" pos:column="6">
        <function_decl><type><name pos:line="8781" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8783" pos:column="9">HRESULT</name></type> ( <name pos:line="8783" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8783" pos:column="37">*</type:modifier><name pos:line="8783" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8783" pos:column="54">( 
            <param><decl><type><name pos:line="8784" pos:column="13">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="8784" pos:column="55">*</type:modifier></type> <name pos:line="8784" pos:column="57">This</name></decl></param>,
            <comment type="block" pos:line="8785" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8785" pos:column="24">REFIID</name></type> <name pos:line="8785" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8786" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8787" pos:column="13">__RPC__deref_out</name>  <name pos:line="8787" pos:column="31">void</name> <type:modifier pos:line="8787" pos:column="36">*</type:modifier><type:modifier pos:line="8787" pos:column="37">*</type:modifier></type><name pos:line="8787" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8789" pos:column="9">ULONG</name></type> ( <name pos:line="8789" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8789" pos:column="35">*</type:modifier><name pos:line="8789" pos:column="36">AddRef</name> )<parameter_list pos:line="8789" pos:column="44">( 
            <param><decl><type><name pos:line="8790" pos:column="13">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="8790" pos:column="55">*</type:modifier></type> <name pos:line="8790" pos:column="57">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8792" pos:column="9">ULONG</name></type> ( <name pos:line="8792" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8792" pos:column="35">*</type:modifier><name pos:line="8792" pos:column="36">Release</name> )<parameter_list pos:line="8792" pos:column="45">( 
            <param><decl><type><name pos:line="8793" pos:column="13">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="8793" pos:column="55">*</type:modifier></type> <name pos:line="8793" pos:column="57">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8795" pos:column="9">HRESULT</name></type> ( <name pos:line="8795" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8795" pos:column="37">*</type:modifier><name pos:line="8795" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="8795" pos:column="53">( 
            <param><decl><type><name pos:line="8796" pos:column="13">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="8796" pos:column="55">*</type:modifier></type> <name pos:line="8796" pos:column="57">This</name></decl></param>,
            <comment type="block" pos:line="8797" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8797" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="8797" pos:column="47">*</type:modifier><type:modifier pos:line="8797" pos:column="48">*</type:modifier></type><name pos:line="8797" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8799" pos:column="9">HRESULT</name></type> ( <name pos:line="8799" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8799" pos:column="37">*</type:modifier><name pos:line="8799" pos:column="38">GetBeforeContentType</name> )<parameter_list pos:line="8799" pos:column="60">( 
            <param><decl><type><name pos:line="8800" pos:column="13">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="8800" pos:column="55">*</type:modifier></type> <name pos:line="8800" pos:column="57">This</name></decl></param>,
            <comment type="block" pos:line="8801" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8801" pos:column="33">IVxContentType</name> <type:modifier pos:line="8801" pos:column="48">*</type:modifier><type:modifier pos:line="8801" pos:column="49">*</type:modifier></type><name pos:line="8801" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8803" pos:column="9">HRESULT</name></type> ( <name pos:line="8803" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8803" pos:column="37">*</type:modifier><name pos:line="8803" pos:column="38">GetAfterContentType</name> )<parameter_list pos:line="8803" pos:column="59">( 
            <param><decl><type><name pos:line="8804" pos:column="13">IVxGraphBufferContentTypeChangedEventArgs</name> <type:modifier pos:line="8804" pos:column="55">*</type:modifier></type> <name pos:line="8804" pos:column="57">This</name></decl></param>,
            <comment type="block" pos:line="8805" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8805" pos:column="33">IVxContentType</name> <type:modifier pos:line="8805" pos:column="48">*</type:modifier><type:modifier pos:line="8805" pos:column="49">*</type:modifier></type><name pos:line="8805" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8807" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8808" pos:column="7">IVxGraphBufferContentTypeChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8810" pos:column="5">interface</name></type> <name pos:line="8810" pos:column="15">IVxGraphBufferContentTypeChangedEventArgs</name>
    <argument_list pos:line="8811" pos:column="5">{
        <argument><expr><name pos:line="8812" pos:column="9">CONST_VTBL</name> struct <name pos:line="8812" pos:column="27">IVxGraphBufferContentTypeChangedEventArgsVtbl</name> <op:operator pos:line="8812" pos:column="73">*</op:operator><name pos:line="8812" pos:column="74">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8817" pos:column="1">#<cpp:directive pos:line="8817" pos:column="2">ifdef</cpp:directive> <name pos:line="8817" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8820" pos:column="1">#<cpp:directive pos:line="8820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8820" pos:column="9">IVxGraphBufferContentTypeChangedEventArgs_QueryInterface</name><parameter_list pos:line="8820" pos:column="65">(<param><type><name pos:line="8820" pos:column="66">This</name></type></param>,<param><type><name pos:line="8820" pos:column="71">riid</name></type></param>,<param><type><name pos:line="8820" pos:column="76">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8821" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8823" pos:column="1">#<cpp:directive pos:line="8823" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8823" pos:column="9">IVxGraphBufferContentTypeChangedEventArgs_AddRef</name><parameter_list pos:line="8823" pos:column="57">(<param><type><name pos:line="8823" pos:column="58">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8824" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8826" pos:column="1">#<cpp:directive pos:line="8826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8826" pos:column="9">IVxGraphBufferContentTypeChangedEventArgs_Release</name><parameter_list pos:line="8826" pos:column="58">(<param><type><name pos:line="8826" pos:column="59">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8827" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8830" pos:column="1">#<cpp:directive pos:line="8830" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8830" pos:column="9">IVxGraphBufferContentTypeChangedEventArgs_GetTextBuffer</name><parameter_list pos:line="8830" pos:column="64">(<param><type><name pos:line="8830" pos:column="65">This</name></type></param>,<param><type><name pos:line="8830" pos:column="70">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8831" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8833" pos:column="1">#<cpp:directive pos:line="8833" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8833" pos:column="9">IVxGraphBufferContentTypeChangedEventArgs_GetBeforeContentType</name><parameter_list pos:line="8833" pos:column="71">(<param><type><name pos:line="8833" pos:column="72">This</name></type></param>,<param><type><name pos:line="8833" pos:column="77">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8834" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8836" pos:column="1">#<cpp:directive pos:line="8836" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8836" pos:column="9">IVxGraphBufferContentTypeChangedEventArgs_GetAfterContentType</name><parameter_list pos:line="8836" pos:column="70">(<param><type><name pos:line="8836" pos:column="71">This</name></type></param>,<param><type><name pos:line="8836" pos:column="76">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8837" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8839" pos:column="1">#<cpp:directive pos:line="8839" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8839" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8842" pos:column="1">#<cpp:directive pos:line="8842" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8842" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8847" pos:column="1">#<cpp:directive pos:line="8847" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8847" pos:column="9">/* __IVxGraphBufferContentTypeChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8850" pos:column="1">#<cpp:directive pos:line="8850" pos:column="2">ifndef</cpp:directive> <name pos:line="8850" pos:column="9">__IVxGraphBuffersChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8851" pos:column="1">#<cpp:directive pos:line="8851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8851" pos:column="9">__IVxGraphBuffersChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8853" pos:column="1">/* interface IVxGraphBuffersChangedEventArgs */</comment>
<comment type="block" pos:line="8854" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8857" pos:column="1">EXTERN_C</name> <specifier pos:line="8857" pos:column="10">const</specifier> <name pos:line="8857" pos:column="16">IID</name></type> <name pos:line="8857" pos:column="20">IID_IVxGraphBuffersChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="8859" pos:column="1">#<cpp:directive pos:line="8859" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8859" pos:column="5">defined</name><argument_list pos:line="8859" pos:column="12">(<argument><expr><name pos:line="8859" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8859" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8859" pos:column="29">!</op:operator><call><name pos:line="8859" pos:column="30">defined</name><argument_list pos:line="8859" pos:column="37">(<argument><expr><name pos:line="8859" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8861" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8861" pos:column="19">(<argument pos:line="8861" pos:column="20">"395bd869-ffa5-4eea-97bf-8ce42a7b3fcd"</argument>)</argument_list></macro>
    <label><name pos:line="8862" pos:column="5">IVxGraphBuffersChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="8862" pos:column="39">public <name pos:line="8862" pos:column="46">IUnknown</name>
    <block pos:line="8863" pos:column="5">{
    <expr pos:line="8864" pos:column="5">public<op:operator pos:line="8864" pos:column="11">:</op:operator>
        virtual <name pos:line="8865" pos:column="17">HRESULT</name> <name pos:line="8865" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8865" pos:column="43">GetAddedBuffers</name><argument_list pos:line="8865" pos:column="58">( 
            <comment type="block" pos:line="8866" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8866" pos:column="33">IListIVxTextBuffer</name> <op:operator pos:line="8866" pos:column="52">*</op:operator><op:operator pos:line="8866" pos:column="53">*</op:operator><name pos:line="8866" pos:column="54">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8866" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="8866" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="8868" pos:column="9">virtual <name pos:line="8868" pos:column="17">HRESULT</name> <name pos:line="8868" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8868" pos:column="43">GetRemovedBuffers</name><argument_list pos:line="8868" pos:column="60">( 
            <comment type="block" pos:line="8869" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8869" pos:column="33">IListIVxTextBuffer</name> <op:operator pos:line="8869" pos:column="52">*</op:operator><op:operator pos:line="8869" pos:column="53">*</op:operator><name pos:line="8869" pos:column="54">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8869" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="8869" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8873" pos:column="1">#<cpp:directive pos:line="8873" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8873" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8875" pos:column="5">typedef <type><struct pos:line="8875" pos:column="13">struct <name pos:line="8875" pos:column="20">IVxGraphBuffersChangedEventArgsVtbl</name>
    <block pos:line="8876" pos:column="5">{<public type="default" pos:line="8876" pos:column="6">
        <function_decl><type><name pos:line="8877" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8879" pos:column="9">HRESULT</name></type> ( <name pos:line="8879" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8879" pos:column="37">*</type:modifier><name pos:line="8879" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8879" pos:column="54">( 
            <param><decl><type><name pos:line="8880" pos:column="13">IVxGraphBuffersChangedEventArgs</name> <type:modifier pos:line="8880" pos:column="45">*</type:modifier></type> <name pos:line="8880" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="8881" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8881" pos:column="24">REFIID</name></type> <name pos:line="8881" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8882" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8883" pos:column="13">__RPC__deref_out</name>  <name pos:line="8883" pos:column="31">void</name> <type:modifier pos:line="8883" pos:column="36">*</type:modifier><type:modifier pos:line="8883" pos:column="37">*</type:modifier></type><name pos:line="8883" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8885" pos:column="9">ULONG</name></type> ( <name pos:line="8885" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8885" pos:column="35">*</type:modifier><name pos:line="8885" pos:column="36">AddRef</name> )<parameter_list pos:line="8885" pos:column="44">( 
            <param><decl><type><name pos:line="8886" pos:column="13">IVxGraphBuffersChangedEventArgs</name> <type:modifier pos:line="8886" pos:column="45">*</type:modifier></type> <name pos:line="8886" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8888" pos:column="9">ULONG</name></type> ( <name pos:line="8888" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8888" pos:column="35">*</type:modifier><name pos:line="8888" pos:column="36">Release</name> )<parameter_list pos:line="8888" pos:column="45">( 
            <param><decl><type><name pos:line="8889" pos:column="13">IVxGraphBuffersChangedEventArgs</name> <type:modifier pos:line="8889" pos:column="45">*</type:modifier></type> <name pos:line="8889" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8891" pos:column="9">HRESULT</name></type> ( <name pos:line="8891" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8891" pos:column="37">*</type:modifier><name pos:line="8891" pos:column="38">GetAddedBuffers</name> )<parameter_list pos:line="8891" pos:column="55">( 
            <param><decl><type><name pos:line="8892" pos:column="13">IVxGraphBuffersChangedEventArgs</name> <type:modifier pos:line="8892" pos:column="45">*</type:modifier></type> <name pos:line="8892" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="8893" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8893" pos:column="33">IListIVxTextBuffer</name> <type:modifier pos:line="8893" pos:column="52">*</type:modifier><type:modifier pos:line="8893" pos:column="53">*</type:modifier></type><name pos:line="8893" pos:column="54">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8895" pos:column="9">HRESULT</name></type> ( <name pos:line="8895" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8895" pos:column="37">*</type:modifier><name pos:line="8895" pos:column="38">GetRemovedBuffers</name> )<parameter_list pos:line="8895" pos:column="57">( 
            <param><decl><type><name pos:line="8896" pos:column="13">IVxGraphBuffersChangedEventArgs</name> <type:modifier pos:line="8896" pos:column="45">*</type:modifier></type> <name pos:line="8896" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="8897" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8897" pos:column="33">IListIVxTextBuffer</name> <type:modifier pos:line="8897" pos:column="52">*</type:modifier><type:modifier pos:line="8897" pos:column="53">*</type:modifier></type><name pos:line="8897" pos:column="54">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8899" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8900" pos:column="7">IVxGraphBuffersChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8902" pos:column="5">interface</name></type> <name pos:line="8902" pos:column="15">IVxGraphBuffersChangedEventArgs</name>
    <argument_list pos:line="8903" pos:column="5">{
        <argument><expr><name pos:line="8904" pos:column="9">CONST_VTBL</name> struct <name pos:line="8904" pos:column="27">IVxGraphBuffersChangedEventArgsVtbl</name> <op:operator pos:line="8904" pos:column="63">*</op:operator><name pos:line="8904" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8909" pos:column="1">#<cpp:directive pos:line="8909" pos:column="2">ifdef</cpp:directive> <name pos:line="8909" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8912" pos:column="1">#<cpp:directive pos:line="8912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8912" pos:column="9">IVxGraphBuffersChangedEventArgs_QueryInterface</name><parameter_list pos:line="8912" pos:column="55">(<param><type><name pos:line="8912" pos:column="56">This</name></type></param>,<param><type><name pos:line="8912" pos:column="61">riid</name></type></param>,<param><type><name pos:line="8912" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8913" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8915" pos:column="1">#<cpp:directive pos:line="8915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8915" pos:column="9">IVxGraphBuffersChangedEventArgs_AddRef</name><parameter_list pos:line="8915" pos:column="47">(<param><type><name pos:line="8915" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8916" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8918" pos:column="1">#<cpp:directive pos:line="8918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8918" pos:column="9">IVxGraphBuffersChangedEventArgs_Release</name><parameter_list pos:line="8918" pos:column="48">(<param><type><name pos:line="8918" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8919" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8922" pos:column="1">#<cpp:directive pos:line="8922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8922" pos:column="9">IVxGraphBuffersChangedEventArgs_GetAddedBuffers</name><parameter_list pos:line="8922" pos:column="56">(<param><type><name pos:line="8922" pos:column="57">This</name></type></param>,<param><type><name pos:line="8922" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8923" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAddedBuffers(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="8925" pos:column="1">#<cpp:directive pos:line="8925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8925" pos:column="9">IVxGraphBuffersChangedEventArgs_GetRemovedBuffers</name><parameter_list pos:line="8925" pos:column="58">(<param><type><name pos:line="8925" pos:column="59">This</name></type></param>,<param><type><name pos:line="8925" pos:column="64">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8926" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemovedBuffers(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8928" pos:column="1">#<cpp:directive pos:line="8928" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8928" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8931" pos:column="1">#<cpp:directive pos:line="8931" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8931" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8936" pos:column="1">#<cpp:directive pos:line="8936" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8936" pos:column="9">/* __IVxGraphBuffersChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8939" pos:column="1">#<cpp:directive pos:line="8939" pos:column="2">ifndef</cpp:directive> <name pos:line="8939" pos:column="9">__IVxBufferGraph_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8940" pos:column="1">#<cpp:directive pos:line="8940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8940" pos:column="9">__IVxBufferGraph_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8942" pos:column="1">/* interface IVxBufferGraph */</comment>
<comment type="block" pos:line="8943" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8946" pos:column="1">EXTERN_C</name> <specifier pos:line="8946" pos:column="10">const</specifier> <name pos:line="8946" pos:column="16">IID</name></type> <name pos:line="8946" pos:column="20">IID_IVxBufferGraph</name></decl>;</decl_stmt>

<cpp:if pos:line="8948" pos:column="1">#<cpp:directive pos:line="8948" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8948" pos:column="5">defined</name><argument_list pos:line="8948" pos:column="12">(<argument><expr><name pos:line="8948" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8948" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8948" pos:column="29">!</op:operator><call><name pos:line="8948" pos:column="30">defined</name><argument_list pos:line="8948" pos:column="37">(<argument><expr><name pos:line="8948" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8950" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8950" pos:column="19">(<argument pos:line="8950" pos:column="20">"125ae4f6-7cca-4756-a175-a2ca5e7f60da"</argument>)</argument_list></macro>
    <label><name pos:line="8951" pos:column="5">IVxBufferGraph</name> :</label> <expr_stmt><expr pos:line="8951" pos:column="22">public <name pos:line="8951" pos:column="29">IUnknown</name>
    <block pos:line="8952" pos:column="5">{
    <expr pos:line="8953" pos:column="5">public<op:operator pos:line="8953" pos:column="11">:</op:operator>
        virtual <name pos:line="8954" pos:column="17">HRESULT</name> <name pos:line="8954" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="8954" pos:column="43">GetTopBuffer</name><argument_list pos:line="8954" pos:column="55">( 
            <comment type="block" pos:line="8955" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="8955" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="8955" pos:column="47">*</op:operator><op:operator pos:line="8955" pos:column="48">*</op:operator><name pos:line="8955" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="8955" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8955" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8957" pos:column="9">virtual <name pos:line="8957" pos:column="17">HRESULT</name> <name pos:line="8957" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8957" pos:column="43">CreateMappingPoint</name><argument_list pos:line="8957" pos:column="61">( 
            <comment type="block" pos:line="8958" pos:column="13">/* [in] */</comment> <argument pos:line="8958" pos:column="24">VxSnapshotPoint point</argument>,
            <comment type="block" pos:line="8959" pos:column="13">/* [in] */</comment> <argument pos:line="8959" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8960" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8960" pos:column="33">IVxMappingPoint **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="8960" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="8960" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="8962" pos:column="9">virtual <name pos:line="8962" pos:column="17">HRESULT</name> <name pos:line="8962" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8962" pos:column="43">CreateMappingSpan</name><argument_list pos:line="8962" pos:column="60">( 
            <comment type="block" pos:line="8963" pos:column="13">/* [in] */</comment> <argument pos:line="8963" pos:column="24">VxSnapshotSpan span</argument>,
            <comment type="block" pos:line="8964" pos:column="13">/* [in] */</comment> <argument pos:line="8964" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8965" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8965" pos:column="33">IVxMappingSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="8965" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="8965" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="8967" pos:column="9">virtual <name pos:line="8967" pos:column="17">HRESULT</name> <name pos:line="8967" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8967" pos:column="43">MapDownToBuffer</name><argument_list pos:line="8967" pos:column="58">( 
            <comment type="block" pos:line="8968" pos:column="13">/* [in] */</comment> <argument pos:line="8968" pos:column="24">VxSnapshotPoint position</argument>,
            <comment type="block" pos:line="8969" pos:column="13">/* [in] */</comment> <argument pos:line="8969" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8970" pos:column="13">/* [in] */</comment> <argument pos:line="8970" pos:column="24">IVxTextBuffer *pTargetBuffer</argument>,
            <comment type="block" pos:line="8971" pos:column="13">/* [in] */</comment> <argument pos:line="8971" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="8972" pos:column="13">/* [out] */</comment> <argument pos:line="8972" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="8973" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8973" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="8973" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8973" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8975" pos:column="9">virtual <name pos:line="8975" pos:column="17">HRESULT</name> <name pos:line="8975" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8975" pos:column="43">MapDownToSnapshot</name><argument_list pos:line="8975" pos:column="60">( 
            <comment type="block" pos:line="8976" pos:column="13">/* [in] */</comment> <argument pos:line="8976" pos:column="24">VxSnapshotPoint position</argument>,
            <comment type="block" pos:line="8977" pos:column="13">/* [in] */</comment> <argument pos:line="8977" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8978" pos:column="13">/* [in] */</comment> <argument pos:line="8978" pos:column="24">IVxTextSnapshot *pTargetSnapshot</argument>,
            <comment type="block" pos:line="8979" pos:column="13">/* [in] */</comment> <argument pos:line="8979" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="8980" pos:column="13">/* [out] */</comment> <argument pos:line="8980" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="8981" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8981" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="8981" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="8981" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="8983" pos:column="9">virtual <name pos:line="8983" pos:column="17">HRESULT</name> <name pos:line="8983" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8983" pos:column="43">MapDownToBuffer_2</name><argument_list pos:line="8983" pos:column="60">( 
            <comment type="block" pos:line="8984" pos:column="13">/* [in] */</comment> <argument pos:line="8984" pos:column="24">VxSnapshotSpan span</argument>,
            <comment type="block" pos:line="8985" pos:column="13">/* [in] */</comment> <argument pos:line="8985" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8986" pos:column="13">/* [in] */</comment> <argument pos:line="8986" pos:column="24">IVxTextBuffer *pTargetBuffer</argument>,
            <comment type="block" pos:line="8987" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8987" pos:column="33">IVxNormalizedSnapshotSpanCollection **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="8987" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="8987" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="8989" pos:column="9">virtual <name pos:line="8989" pos:column="17">HRESULT</name> <name pos:line="8989" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8989" pos:column="43">MapDownToSnapshot_2</name><argument_list pos:line="8989" pos:column="62">( 
            <comment type="block" pos:line="8990" pos:column="13">/* [in] */</comment> <argument pos:line="8990" pos:column="24">VxSnapshotSpan span</argument>,
            <comment type="block" pos:line="8991" pos:column="13">/* [in] */</comment> <argument pos:line="8991" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8992" pos:column="13">/* [in] */</comment> <argument pos:line="8992" pos:column="24">IVxTextSnapshot *pTargetSnapshot</argument>,
            <comment type="block" pos:line="8993" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8993" pos:column="33">IVxNormalizedSnapshotSpanCollection **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="8993" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="8993" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="8995" pos:column="9">virtual <name pos:line="8995" pos:column="17">HRESULT</name> <name pos:line="8995" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8995" pos:column="43">MapUpToBuffer</name><argument_list pos:line="8995" pos:column="56">( 
            <comment type="block" pos:line="8996" pos:column="13">/* [in] */</comment> <argument pos:line="8996" pos:column="24">VxSnapshotPoint point</argument>,
            <comment type="block" pos:line="8997" pos:column="13">/* [in] */</comment> <argument pos:line="8997" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="8998" pos:column="13">/* [in] */</comment> <argument pos:line="8998" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="8999" pos:column="13">/* [in] */</comment> <argument pos:line="8999" pos:column="24">IVxTextBuffer *pTargetBuffer</argument>,
            <comment type="block" pos:line="9000" pos:column="13">/* [out] */</comment> <argument pos:line="9000" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="9001" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9001" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="9001" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="9001" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="9003" pos:column="9">virtual <name pos:line="9003" pos:column="17">HRESULT</name> <name pos:line="9003" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9003" pos:column="43">MapUpToSnapshot</name><argument_list pos:line="9003" pos:column="58">( 
            <comment type="block" pos:line="9004" pos:column="13">/* [in] */</comment> <argument pos:line="9004" pos:column="24">VxSnapshotPoint point</argument>,
            <comment type="block" pos:line="9005" pos:column="13">/* [in] */</comment> <argument pos:line="9005" pos:column="24">VxPointTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="9006" pos:column="13">/* [in] */</comment> <argument pos:line="9006" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="9007" pos:column="13">/* [in] */</comment> <argument pos:line="9007" pos:column="24">IVxTextSnapshot *pTargetSnapshot</argument>,
            <comment type="block" pos:line="9008" pos:column="13">/* [out] */</comment> <argument pos:line="9008" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="9009" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9009" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="9009" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="9009" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="9011" pos:column="9">virtual <name pos:line="9011" pos:column="17">HRESULT</name> <name pos:line="9011" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9011" pos:column="43">MapUpToBuffer_2</name><argument_list pos:line="9011" pos:column="58">( 
            <comment type="block" pos:line="9012" pos:column="13">/* [in] */</comment> <argument pos:line="9012" pos:column="24">VxSnapshotSpan span</argument>,
            <comment type="block" pos:line="9013" pos:column="13">/* [in] */</comment> <argument pos:line="9013" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="9014" pos:column="13">/* [in] */</comment> <argument pos:line="9014" pos:column="24">IVxTextBuffer *pTargetBuffer</argument>,
            <comment type="block" pos:line="9015" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9015" pos:column="33">IVxNormalizedSnapshotSpanCollection **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9015" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="9015" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="9017" pos:column="9">virtual <name pos:line="9017" pos:column="17">HRESULT</name> <name pos:line="9017" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9017" pos:column="43">MapUpToSnapshot_2</name><argument_list pos:line="9017" pos:column="60">( 
            <comment type="block" pos:line="9018" pos:column="13">/* [in] */</comment> <argument pos:line="9018" pos:column="24">VxSnapshotSpan span</argument>,
            <comment type="block" pos:line="9019" pos:column="13">/* [in] */</comment> <argument pos:line="9019" pos:column="24">VxSpanTrackingMode trackingMode</argument>,
            <comment type="block" pos:line="9020" pos:column="13">/* [in] */</comment> <argument pos:line="9020" pos:column="24">IVxTextSnapshot *pTargetSnapshot</argument>,
            <comment type="block" pos:line="9021" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9021" pos:column="33">IVxNormalizedSnapshotSpanCollection **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9021" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="9021" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="9023" pos:column="9">virtual <name pos:line="9023" pos:column="17">HRESULT</name> <name pos:line="9023" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9023" pos:column="43">AdviseGraphBuffersChanged</name><argument_list pos:line="9023" pos:column="68">( 
            <comment type="block" pos:line="9024" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="9024" pos:column="24">IVxGraphBuffersChangedEvent</name> <op:operator pos:line="9024" pos:column="52">*</op:operator><name pos:line="9024" pos:column="53">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="9024" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="9024" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="9026" pos:column="9">virtual <name pos:line="9026" pos:column="17">HRESULT</name> <name pos:line="9026" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9026" pos:column="43">UnadviseGraphBuffersChanged</name><argument_list pos:line="9026" pos:column="70">( 
            <comment type="block" pos:line="9027" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="9027" pos:column="24">IVxGraphBuffersChangedEvent</name> <op:operator pos:line="9027" pos:column="52">*</op:operator><name pos:line="9027" pos:column="53">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="9027" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="9027" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="9029" pos:column="9">virtual <name pos:line="9029" pos:column="17">HRESULT</name> <name pos:line="9029" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9029" pos:column="43">AdviseGraphBufferContentTypeChanged</name><argument_list pos:line="9029" pos:column="78">( 
            <comment type="block" pos:line="9030" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="9030" pos:column="24">IVxGraphBufferContentTypeChangedEvent</name> <op:operator pos:line="9030" pos:column="62">*</op:operator><name pos:line="9030" pos:column="63">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="9030" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="9030" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="9032" pos:column="9">virtual <name pos:line="9032" pos:column="17">HRESULT</name> <name pos:line="9032" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9032" pos:column="43">UnadviseGraphBufferContentTypeChanged</name><argument_list pos:line="9032" pos:column="80">( 
            <comment type="block" pos:line="9033" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="9033" pos:column="24">IVxGraphBufferContentTypeChangedEvent</name> <op:operator pos:line="9033" pos:column="62">*</op:operator><name pos:line="9033" pos:column="63">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="9033" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="9033" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9037" pos:column="1">#<cpp:directive pos:line="9037" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9037" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9039" pos:column="5">typedef <type><struct pos:line="9039" pos:column="13">struct <name pos:line="9039" pos:column="20">IVxBufferGraphVtbl</name>
    <block pos:line="9040" pos:column="5">{<public type="default" pos:line="9040" pos:column="6">
        <function_decl><type><name pos:line="9041" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9043" pos:column="9">HRESULT</name></type> ( <name pos:line="9043" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9043" pos:column="37">*</type:modifier><name pos:line="9043" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9043" pos:column="54">( 
            <param><decl><type><name pos:line="9044" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9044" pos:column="28">*</type:modifier></type> <name pos:line="9044" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9045" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9045" pos:column="24">REFIID</name></type> <name pos:line="9045" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="9046" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9047" pos:column="13">__RPC__deref_out</name>  <name pos:line="9047" pos:column="31">void</name> <type:modifier pos:line="9047" pos:column="36">*</type:modifier><type:modifier pos:line="9047" pos:column="37">*</type:modifier></type><name pos:line="9047" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9049" pos:column="9">ULONG</name></type> ( <name pos:line="9049" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9049" pos:column="35">*</type:modifier><name pos:line="9049" pos:column="36">AddRef</name> )<parameter_list pos:line="9049" pos:column="44">( 
            <param><decl><type><name pos:line="9050" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9050" pos:column="28">*</type:modifier></type> <name pos:line="9050" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9052" pos:column="9">ULONG</name></type> ( <name pos:line="9052" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9052" pos:column="35">*</type:modifier><name pos:line="9052" pos:column="36">Release</name> )<parameter_list pos:line="9052" pos:column="45">( 
            <param><decl><type><name pos:line="9053" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9053" pos:column="28">*</type:modifier></type> <name pos:line="9053" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9055" pos:column="9">HRESULT</name></type> ( <name pos:line="9055" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9055" pos:column="37">*</type:modifier><name pos:line="9055" pos:column="38">GetTopBuffer</name> )<parameter_list pos:line="9055" pos:column="52">( 
            <param><decl><type><name pos:line="9056" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9056" pos:column="28">*</type:modifier></type> <name pos:line="9056" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9057" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9057" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="9057" pos:column="47">*</type:modifier><type:modifier pos:line="9057" pos:column="48">*</type:modifier></type><name pos:line="9057" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9059" pos:column="9">HRESULT</name></type> ( <name pos:line="9059" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9059" pos:column="37">*</type:modifier><name pos:line="9059" pos:column="38">CreateMappingPoint</name> )<parameter_list pos:line="9059" pos:column="58">( 
            <param><decl><type><name pos:line="9060" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9060" pos:column="28">*</type:modifier></type> <name pos:line="9060" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9061" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9061" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="9061" pos:column="40">point</name></decl></param>,
            <comment type="block" pos:line="9062" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9062" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9062" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9063" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9063" pos:column="33">IVxMappingPoint</name> <type:modifier pos:line="9063" pos:column="49">*</type:modifier><type:modifier pos:line="9063" pos:column="50">*</type:modifier></type><name pos:line="9063" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9065" pos:column="9">HRESULT</name></type> ( <name pos:line="9065" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9065" pos:column="37">*</type:modifier><name pos:line="9065" pos:column="38">CreateMappingSpan</name> )<parameter_list pos:line="9065" pos:column="57">( 
            <param><decl><type><name pos:line="9066" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9066" pos:column="28">*</type:modifier></type> <name pos:line="9066" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9067" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9067" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="9067" pos:column="39">span</name></decl></param>,
            <comment type="block" pos:line="9068" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9068" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9068" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9069" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9069" pos:column="33">IVxMappingSpan</name> <type:modifier pos:line="9069" pos:column="48">*</type:modifier><type:modifier pos:line="9069" pos:column="49">*</type:modifier></type><name pos:line="9069" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9071" pos:column="9">HRESULT</name></type> ( <name pos:line="9071" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9071" pos:column="37">*</type:modifier><name pos:line="9071" pos:column="38">MapDownToBuffer</name> )<parameter_list pos:line="9071" pos:column="55">( 
            <param><decl><type><name pos:line="9072" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9072" pos:column="28">*</type:modifier></type> <name pos:line="9072" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9073" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9073" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="9073" pos:column="40">position</name></decl></param>,
            <comment type="block" pos:line="9074" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9074" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9074" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9075" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9075" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="9075" pos:column="38">*</type:modifier></type><name pos:line="9075" pos:column="39">pTargetBuffer</name></decl></param>,
            <comment type="block" pos:line="9076" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9076" pos:column="24">VxPositionAffinity</name></type> <name pos:line="9076" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="9077" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9077" pos:column="25">BOOL</name> <type:modifier pos:line="9077" pos:column="30">*</type:modifier></type><name pos:line="9077" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="9078" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9078" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9078" pos:column="49">*</type:modifier></type><name pos:line="9078" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9080" pos:column="9">HRESULT</name></type> ( <name pos:line="9080" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9080" pos:column="37">*</type:modifier><name pos:line="9080" pos:column="38">MapDownToSnapshot</name> )<parameter_list pos:line="9080" pos:column="57">( 
            <param><decl><type><name pos:line="9081" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9081" pos:column="28">*</type:modifier></type> <name pos:line="9081" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9082" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9082" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="9082" pos:column="40">position</name></decl></param>,
            <comment type="block" pos:line="9083" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9083" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9083" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9084" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9084" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="9084" pos:column="40">*</type:modifier></type><name pos:line="9084" pos:column="41">pTargetSnapshot</name></decl></param>,
            <comment type="block" pos:line="9085" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9085" pos:column="24">VxPositionAffinity</name></type> <name pos:line="9085" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="9086" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9086" pos:column="25">BOOL</name> <type:modifier pos:line="9086" pos:column="30">*</type:modifier></type><name pos:line="9086" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="9087" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9087" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9087" pos:column="49">*</type:modifier></type><name pos:line="9087" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9089" pos:column="9">HRESULT</name></type> ( <name pos:line="9089" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9089" pos:column="37">*</type:modifier><name pos:line="9089" pos:column="38">MapDownToBuffer_2</name> )<parameter_list pos:line="9089" pos:column="57">( 
            <param><decl><type><name pos:line="9090" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9090" pos:column="28">*</type:modifier></type> <name pos:line="9090" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9091" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9091" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="9091" pos:column="39">span</name></decl></param>,
            <comment type="block" pos:line="9092" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9092" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9092" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9093" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9093" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="9093" pos:column="38">*</type:modifier></type><name pos:line="9093" pos:column="39">pTargetBuffer</name></decl></param>,
            <comment type="block" pos:line="9094" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9094" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="9094" pos:column="69">*</type:modifier><type:modifier pos:line="9094" pos:column="70">*</type:modifier></type><name pos:line="9094" pos:column="71">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9096" pos:column="9">HRESULT</name></type> ( <name pos:line="9096" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9096" pos:column="37">*</type:modifier><name pos:line="9096" pos:column="38">MapDownToSnapshot_2</name> )<parameter_list pos:line="9096" pos:column="59">( 
            <param><decl><type><name pos:line="9097" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9097" pos:column="28">*</type:modifier></type> <name pos:line="9097" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9098" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9098" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="9098" pos:column="39">span</name></decl></param>,
            <comment type="block" pos:line="9099" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9099" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9099" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9100" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9100" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="9100" pos:column="40">*</type:modifier></type><name pos:line="9100" pos:column="41">pTargetSnapshot</name></decl></param>,
            <comment type="block" pos:line="9101" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9101" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="9101" pos:column="69">*</type:modifier><type:modifier pos:line="9101" pos:column="70">*</type:modifier></type><name pos:line="9101" pos:column="71">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9103" pos:column="9">HRESULT</name></type> ( <name pos:line="9103" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9103" pos:column="37">*</type:modifier><name pos:line="9103" pos:column="38">MapUpToBuffer</name> )<parameter_list pos:line="9103" pos:column="53">( 
            <param><decl><type><name pos:line="9104" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9104" pos:column="28">*</type:modifier></type> <name pos:line="9104" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9105" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9105" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="9105" pos:column="40">point</name></decl></param>,
            <comment type="block" pos:line="9106" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9106" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9106" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9107" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9107" pos:column="24">VxPositionAffinity</name></type> <name pos:line="9107" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="9108" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9108" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="9108" pos:column="38">*</type:modifier></type><name pos:line="9108" pos:column="39">pTargetBuffer</name></decl></param>,
            <comment type="block" pos:line="9109" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9109" pos:column="25">BOOL</name> <type:modifier pos:line="9109" pos:column="30">*</type:modifier></type><name pos:line="9109" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="9110" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9110" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9110" pos:column="49">*</type:modifier></type><name pos:line="9110" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9112" pos:column="9">HRESULT</name></type> ( <name pos:line="9112" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9112" pos:column="37">*</type:modifier><name pos:line="9112" pos:column="38">MapUpToSnapshot</name> )<parameter_list pos:line="9112" pos:column="55">( 
            <param><decl><type><name pos:line="9113" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9113" pos:column="28">*</type:modifier></type> <name pos:line="9113" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9114" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9114" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="9114" pos:column="40">point</name></decl></param>,
            <comment type="block" pos:line="9115" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9115" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9115" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9116" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9116" pos:column="24">VxPositionAffinity</name></type> <name pos:line="9116" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="9117" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9117" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="9117" pos:column="40">*</type:modifier></type><name pos:line="9117" pos:column="41">pTargetSnapshot</name></decl></param>,
            <comment type="block" pos:line="9118" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9118" pos:column="25">BOOL</name> <type:modifier pos:line="9118" pos:column="30">*</type:modifier></type><name pos:line="9118" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="9119" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9119" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9119" pos:column="49">*</type:modifier></type><name pos:line="9119" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9121" pos:column="9">HRESULT</name></type> ( <name pos:line="9121" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9121" pos:column="37">*</type:modifier><name pos:line="9121" pos:column="38">MapUpToBuffer_2</name> )<parameter_list pos:line="9121" pos:column="55">( 
            <param><decl><type><name pos:line="9122" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9122" pos:column="28">*</type:modifier></type> <name pos:line="9122" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9123" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9123" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="9123" pos:column="39">span</name></decl></param>,
            <comment type="block" pos:line="9124" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9124" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9124" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9125" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9125" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="9125" pos:column="38">*</type:modifier></type><name pos:line="9125" pos:column="39">pTargetBuffer</name></decl></param>,
            <comment type="block" pos:line="9126" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9126" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="9126" pos:column="69">*</type:modifier><type:modifier pos:line="9126" pos:column="70">*</type:modifier></type><name pos:line="9126" pos:column="71">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9128" pos:column="9">HRESULT</name></type> ( <name pos:line="9128" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9128" pos:column="37">*</type:modifier><name pos:line="9128" pos:column="38">MapUpToSnapshot_2</name> )<parameter_list pos:line="9128" pos:column="57">( 
            <param><decl><type><name pos:line="9129" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9129" pos:column="28">*</type:modifier></type> <name pos:line="9129" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9130" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9130" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="9130" pos:column="39">span</name></decl></param>,
            <comment type="block" pos:line="9131" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9131" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9131" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9132" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9132" pos:column="24">IVxTextSnapshot</name> <type:modifier pos:line="9132" pos:column="40">*</type:modifier></type><name pos:line="9132" pos:column="41">pTargetSnapshot</name></decl></param>,
            <comment type="block" pos:line="9133" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9133" pos:column="33">IVxNormalizedSnapshotSpanCollection</name> <type:modifier pos:line="9133" pos:column="69">*</type:modifier><type:modifier pos:line="9133" pos:column="70">*</type:modifier></type><name pos:line="9133" pos:column="71">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9135" pos:column="9">HRESULT</name></type> ( <name pos:line="9135" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9135" pos:column="37">*</type:modifier><name pos:line="9135" pos:column="38">AdviseGraphBuffersChanged</name> )<parameter_list pos:line="9135" pos:column="65">( 
            <param><decl><type><name pos:line="9136" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9136" pos:column="28">*</type:modifier></type> <name pos:line="9136" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9137" pos:column="24">IVxGraphBuffersChangedEvent</name> <type:modifier pos:line="9137" pos:column="52">*</type:modifier></type><name pos:line="9137" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9139" pos:column="9">HRESULT</name></type> ( <name pos:line="9139" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9139" pos:column="37">*</type:modifier><name pos:line="9139" pos:column="38">UnadviseGraphBuffersChanged</name> )<parameter_list pos:line="9139" pos:column="67">( 
            <param><decl><type><name pos:line="9140" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9140" pos:column="28">*</type:modifier></type> <name pos:line="9140" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9141" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9141" pos:column="24">IVxGraphBuffersChangedEvent</name> <type:modifier pos:line="9141" pos:column="52">*</type:modifier></type><name pos:line="9141" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9143" pos:column="9">HRESULT</name></type> ( <name pos:line="9143" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9143" pos:column="37">*</type:modifier><name pos:line="9143" pos:column="38">AdviseGraphBufferContentTypeChanged</name> )<parameter_list pos:line="9143" pos:column="75">( 
            <param><decl><type><name pos:line="9144" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9144" pos:column="28">*</type:modifier></type> <name pos:line="9144" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9145" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9145" pos:column="24">IVxGraphBufferContentTypeChangedEvent</name> <type:modifier pos:line="9145" pos:column="62">*</type:modifier></type><name pos:line="9145" pos:column="63">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9147" pos:column="9">HRESULT</name></type> ( <name pos:line="9147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9147" pos:column="37">*</type:modifier><name pos:line="9147" pos:column="38">UnadviseGraphBufferContentTypeChanged</name> )<parameter_list pos:line="9147" pos:column="77">( 
            <param><decl><type><name pos:line="9148" pos:column="13">IVxBufferGraph</name> <type:modifier pos:line="9148" pos:column="28">*</type:modifier></type> <name pos:line="9148" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9149" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9149" pos:column="24">IVxGraphBufferContentTypeChangedEvent</name> <type:modifier pos:line="9149" pos:column="62">*</type:modifier></type><name pos:line="9149" pos:column="63">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9151" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9152" pos:column="7">IVxBufferGraphVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9154" pos:column="5">interface</name></type> <name pos:line="9154" pos:column="15">IVxBufferGraph</name>
    <argument_list pos:line="9155" pos:column="5">{
        <argument><expr><name pos:line="9156" pos:column="9">CONST_VTBL</name> struct <name pos:line="9156" pos:column="27">IVxBufferGraphVtbl</name> <op:operator pos:line="9156" pos:column="46">*</op:operator><name pos:line="9156" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9161" pos:column="1">#<cpp:directive pos:line="9161" pos:column="2">ifdef</cpp:directive> <name pos:line="9161" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9164" pos:column="1">#<cpp:directive pos:line="9164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9164" pos:column="9">IVxBufferGraph_QueryInterface</name><parameter_list pos:line="9164" pos:column="38">(<param><type><name pos:line="9164" pos:column="39">This</name></type></param>,<param><type><name pos:line="9164" pos:column="44">riid</name></type></param>,<param><type><name pos:line="9164" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9165" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9167" pos:column="1">#<cpp:directive pos:line="9167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9167" pos:column="9">IVxBufferGraph_AddRef</name><parameter_list pos:line="9167" pos:column="30">(<param><type><name pos:line="9167" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9168" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9170" pos:column="1">#<cpp:directive pos:line="9170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9170" pos:column="9">IVxBufferGraph_Release</name><parameter_list pos:line="9170" pos:column="31">(<param><type><name pos:line="9170" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9171" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9174" pos:column="1">#<cpp:directive pos:line="9174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9174" pos:column="9">IVxBufferGraph_GetTopBuffer</name><parameter_list pos:line="9174" pos:column="36">(<param><type><name pos:line="9174" pos:column="37">This</name></type></param>,<param><type><name pos:line="9174" pos:column="42">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9175" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTopBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9177" pos:column="1">#<cpp:directive pos:line="9177" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9177" pos:column="9">IVxBufferGraph_CreateMappingPoint</name><parameter_list pos:line="9177" pos:column="42">(<param><type><name pos:line="9177" pos:column="43">This</name></type></param>,<param><type><name pos:line="9177" pos:column="48">point</name></type></param>,<param><type><name pos:line="9177" pos:column="54">trackingMode</name></type></param>,<param><type><name pos:line="9177" pos:column="67">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9178" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateMappingPoint(This,point,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9180" pos:column="1">#<cpp:directive pos:line="9180" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9180" pos:column="9">IVxBufferGraph_CreateMappingSpan</name><parameter_list pos:line="9180" pos:column="41">(<param><type><name pos:line="9180" pos:column="42">This</name></type></param>,<param><type><name pos:line="9180" pos:column="47">span</name></type></param>,<param><type><name pos:line="9180" pos:column="52">trackingMode</name></type></param>,<param><type><name pos:line="9180" pos:column="65">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9181" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateMappingSpan(This,span,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9183" pos:column="1">#<cpp:directive pos:line="9183" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9183" pos:column="9">IVxBufferGraph_MapDownToBuffer</name><parameter_list pos:line="9183" pos:column="39">(<param><type><name pos:line="9183" pos:column="40">This</name></type></param>,<param><type><name pos:line="9183" pos:column="45">position</name></type></param>,<param><type><name pos:line="9183" pos:column="54">trackingMode</name></type></param>,<param><type><name pos:line="9183" pos:column="67">pTargetBuffer</name></type></param>,<param><type><name pos:line="9183" pos:column="81">affinity</name></type></param>,<param><type><name pos:line="9183" pos:column="90">pRetValHasValue</name></type></param>,<param><type><name pos:line="9183" pos:column="106">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9184" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapDownToBuffer(This,position,trackingMode,pTargetBuffer,affinity,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9186" pos:column="1">#<cpp:directive pos:line="9186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9186" pos:column="9">IVxBufferGraph_MapDownToSnapshot</name><parameter_list pos:line="9186" pos:column="41">(<param><type><name pos:line="9186" pos:column="42">This</name></type></param>,<param><type><name pos:line="9186" pos:column="47">position</name></type></param>,<param><type><name pos:line="9186" pos:column="56">trackingMode</name></type></param>,<param><type><name pos:line="9186" pos:column="69">pTargetSnapshot</name></type></param>,<param><type><name pos:line="9186" pos:column="85">affinity</name></type></param>,<param><type><name pos:line="9186" pos:column="94">pRetValHasValue</name></type></param>,<param><type><name pos:line="9186" pos:column="110">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9187" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapDownToSnapshot(This,position,trackingMode,pTargetSnapshot,affinity,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9189" pos:column="1">#<cpp:directive pos:line="9189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9189" pos:column="9">IVxBufferGraph_MapDownToBuffer_2</name><parameter_list pos:line="9189" pos:column="41">(<param><type><name pos:line="9189" pos:column="42">This</name></type></param>,<param><type><name pos:line="9189" pos:column="47">span</name></type></param>,<param><type><name pos:line="9189" pos:column="52">trackingMode</name></type></param>,<param><type><name pos:line="9189" pos:column="65">pTargetBuffer</name></type></param>,<param><type><name pos:line="9189" pos:column="79">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9190" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapDownToBuffer_2(This,span,trackingMode,pTargetBuffer,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9192" pos:column="1">#<cpp:directive pos:line="9192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9192" pos:column="9">IVxBufferGraph_MapDownToSnapshot_2</name><parameter_list pos:line="9192" pos:column="43">(<param><type><name pos:line="9192" pos:column="44">This</name></type></param>,<param><type><name pos:line="9192" pos:column="49">span</name></type></param>,<param><type><name pos:line="9192" pos:column="54">trackingMode</name></type></param>,<param><type><name pos:line="9192" pos:column="67">pTargetSnapshot</name></type></param>,<param><type><name pos:line="9192" pos:column="83">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9193" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapDownToSnapshot_2(This,span,trackingMode,pTargetSnapshot,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9195" pos:column="1">#<cpp:directive pos:line="9195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9195" pos:column="9">IVxBufferGraph_MapUpToBuffer</name><parameter_list pos:line="9195" pos:column="37">(<param><type><name pos:line="9195" pos:column="38">This</name></type></param>,<param><type><name pos:line="9195" pos:column="43">point</name></type></param>,<param><type><name pos:line="9195" pos:column="49">trackingMode</name></type></param>,<param><type><name pos:line="9195" pos:column="62">affinity</name></type></param>,<param><type><name pos:line="9195" pos:column="71">pTargetBuffer</name></type></param>,<param><type><name pos:line="9195" pos:column="85">pRetValHasValue</name></type></param>,<param><type><name pos:line="9195" pos:column="101">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9196" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapUpToBuffer(This,point,trackingMode,affinity,pTargetBuffer,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9198" pos:column="1">#<cpp:directive pos:line="9198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9198" pos:column="9">IVxBufferGraph_MapUpToSnapshot</name><parameter_list pos:line="9198" pos:column="39">(<param><type><name pos:line="9198" pos:column="40">This</name></type></param>,<param><type><name pos:line="9198" pos:column="45">point</name></type></param>,<param><type><name pos:line="9198" pos:column="51">trackingMode</name></type></param>,<param><type><name pos:line="9198" pos:column="64">affinity</name></type></param>,<param><type><name pos:line="9198" pos:column="73">pTargetSnapshot</name></type></param>,<param><type><name pos:line="9198" pos:column="89">pRetValHasValue</name></type></param>,<param><type><name pos:line="9198" pos:column="105">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9199" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapUpToSnapshot(This,point,trackingMode,affinity,pTargetSnapshot,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9201" pos:column="1">#<cpp:directive pos:line="9201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9201" pos:column="9">IVxBufferGraph_MapUpToBuffer_2</name><parameter_list pos:line="9201" pos:column="39">(<param><type><name pos:line="9201" pos:column="40">This</name></type></param>,<param><type><name pos:line="9201" pos:column="45">span</name></type></param>,<param><type><name pos:line="9201" pos:column="50">trackingMode</name></type></param>,<param><type><name pos:line="9201" pos:column="63">pTargetBuffer</name></type></param>,<param><type><name pos:line="9201" pos:column="77">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9202" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapUpToBuffer_2(This,span,trackingMode,pTargetBuffer,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9204" pos:column="1">#<cpp:directive pos:line="9204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9204" pos:column="9">IVxBufferGraph_MapUpToSnapshot_2</name><parameter_list pos:line="9204" pos:column="41">(<param><type><name pos:line="9204" pos:column="42">This</name></type></param>,<param><type><name pos:line="9204" pos:column="47">span</name></type></param>,<param><type><name pos:line="9204" pos:column="52">trackingMode</name></type></param>,<param><type><name pos:line="9204" pos:column="65">pTargetSnapshot</name></type></param>,<param><type><name pos:line="9204" pos:column="81">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9205" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapUpToSnapshot_2(This,span,trackingMode,pTargetSnapshot,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9207" pos:column="1">#<cpp:directive pos:line="9207" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9207" pos:column="9">IVxBufferGraph_AdviseGraphBuffersChanged</name><parameter_list pos:line="9207" pos:column="49">(<param><type><name pos:line="9207" pos:column="50">This</name></type></param>,<param><type><name pos:line="9207" pos:column="55">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9208" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseGraphBuffersChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9210" pos:column="1">#<cpp:directive pos:line="9210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9210" pos:column="9">IVxBufferGraph_UnadviseGraphBuffersChanged</name><parameter_list pos:line="9210" pos:column="51">(<param><type><name pos:line="9210" pos:column="52">This</name></type></param>,<param><type><name pos:line="9210" pos:column="57">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9211" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseGraphBuffersChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9213" pos:column="1">#<cpp:directive pos:line="9213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9213" pos:column="9">IVxBufferGraph_AdviseGraphBufferContentTypeChanged</name><parameter_list pos:line="9213" pos:column="59">(<param><type><name pos:line="9213" pos:column="60">This</name></type></param>,<param><type><name pos:line="9213" pos:column="65">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9214" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseGraphBufferContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9216" pos:column="1">#<cpp:directive pos:line="9216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9216" pos:column="9">IVxBufferGraph_UnadviseGraphBufferContentTypeChanged</name><parameter_list pos:line="9216" pos:column="61">(<param><type><name pos:line="9216" pos:column="62">This</name></type></param>,<param><type><name pos:line="9216" pos:column="67">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9217" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseGraphBufferContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9219" pos:column="1">#<cpp:directive pos:line="9219" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9219" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9222" pos:column="1">#<cpp:directive pos:line="9222" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9222" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9227" pos:column="1">#<cpp:directive pos:line="9227" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9227" pos:column="9">/* __IVxBufferGraph_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9230" pos:column="1">#<cpp:directive pos:line="9230" pos:column="2">ifndef</cpp:directive> <name pos:line="9230" pos:column="9">__IVxProjectionBufferBase_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9231" pos:column="1">#<cpp:directive pos:line="9231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9231" pos:column="9">__IVxProjectionBufferBase_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9233" pos:column="1">/* interface IVxProjectionBufferBase */</comment>
<comment type="block" pos:line="9234" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9237" pos:column="1">EXTERN_C</name> <specifier pos:line="9237" pos:column="10">const</specifier> <name pos:line="9237" pos:column="16">IID</name></type> <name pos:line="9237" pos:column="20">IID_IVxProjectionBufferBase</name></decl>;</decl_stmt>

<cpp:if pos:line="9239" pos:column="1">#<cpp:directive pos:line="9239" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9239" pos:column="5">defined</name><argument_list pos:line="9239" pos:column="12">(<argument><expr><name pos:line="9239" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9239" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9239" pos:column="29">!</op:operator><call><name pos:line="9239" pos:column="30">defined</name><argument_list pos:line="9239" pos:column="37">(<argument><expr><name pos:line="9239" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9241" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9241" pos:column="19">(<argument pos:line="9241" pos:column="20">"dc35621d-2318-46d3-88cd-ca026f95b9c1"</argument>)</argument_list></macro>
    <label><name pos:line="9242" pos:column="5">IVxProjectionBufferBase</name> :</label> <expr_stmt><expr pos:line="9242" pos:column="31">public <name pos:line="9242" pos:column="38">IVxTextBuffer</name>
    <block pos:line="9243" pos:column="5">{
    <expr pos:line="9244" pos:column="5">public<op:operator pos:line="9244" pos:column="11">:</op:operator>
        virtual <name pos:line="9245" pos:column="17">HRESULT</name> <name pos:line="9245" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9245" pos:column="43">GetCurrentSnapshot_2</name><argument_list pos:line="9245" pos:column="63">( 
            <comment type="block" pos:line="9246" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9246" pos:column="33">IVxProjectionSnapshot</name> <op:operator pos:line="9246" pos:column="55">*</op:operator><op:operator pos:line="9246" pos:column="56">*</op:operator><name pos:line="9246" pos:column="57">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9246" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9246" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="9248" pos:column="9">virtual <name pos:line="9248" pos:column="17">HRESULT</name> <name pos:line="9248" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9248" pos:column="43">GetSourceBuffers</name><argument_list pos:line="9248" pos:column="59">( 
            <comment type="block" pos:line="9249" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9249" pos:column="33">IListIVxTextBuffer</name> <op:operator pos:line="9249" pos:column="52">*</op:operator><op:operator pos:line="9249" pos:column="53">*</op:operator><name pos:line="9249" pos:column="54">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9249" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="9249" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="9251" pos:column="9">virtual <name pos:line="9251" pos:column="17">HRESULT</name> <name pos:line="9251" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9251" pos:column="43">Insert_2</name><argument_list pos:line="9251" pos:column="51">( 
            <comment type="block" pos:line="9252" pos:column="13">/* [in] */</comment> <argument pos:line="9252" pos:column="24">int position</argument>,
            <comment type="block" pos:line="9253" pos:column="13">/* [in] */</comment> <argument pos:line="9253" pos:column="24">BSTR text</argument>,
            <comment type="block" pos:line="9254" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9254" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9254" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9254" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="9256" pos:column="9">virtual <name pos:line="9256" pos:column="17">HRESULT</name> <name pos:line="9256" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9256" pos:column="43">Delete_2</name><argument_list pos:line="9256" pos:column="51">( 
            <comment type="block" pos:line="9257" pos:column="13">/* [in] */</comment> <argument pos:line="9257" pos:column="24">VxSpan deleteSpan</argument>,
            <comment type="block" pos:line="9258" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9258" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9258" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9258" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="9260" pos:column="9">virtual <name pos:line="9260" pos:column="17">HRESULT</name> <name pos:line="9260" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9260" pos:column="43">Replace_2</name><argument_list pos:line="9260" pos:column="52">( 
            <comment type="block" pos:line="9261" pos:column="13">/* [in] */</comment> <argument pos:line="9261" pos:column="24">VxSpan replaceSpan</argument>,
            <comment type="block" pos:line="9262" pos:column="13">/* [in] */</comment> <argument pos:line="9262" pos:column="24">BSTR replaceWith</argument>,
            <comment type="block" pos:line="9263" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9263" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9263" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9263" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9267" pos:column="1">#<cpp:directive pos:line="9267" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9267" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9269" pos:column="5">typedef <type><struct pos:line="9269" pos:column="13">struct <name pos:line="9269" pos:column="20">IVxProjectionBufferBaseVtbl</name>
    <block pos:line="9270" pos:column="5">{<public type="default" pos:line="9270" pos:column="6">
        <function_decl><type><name pos:line="9271" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9273" pos:column="9">HRESULT</name></type> ( <name pos:line="9273" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9273" pos:column="37">*</type:modifier><name pos:line="9273" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9273" pos:column="54">( 
            <param><decl><type><name pos:line="9274" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9274" pos:column="37">*</type:modifier></type> <name pos:line="9274" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9275" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9275" pos:column="24">REFIID</name></type> <name pos:line="9275" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="9276" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9277" pos:column="13">__RPC__deref_out</name>  <name pos:line="9277" pos:column="31">void</name> <type:modifier pos:line="9277" pos:column="36">*</type:modifier><type:modifier pos:line="9277" pos:column="37">*</type:modifier></type><name pos:line="9277" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9279" pos:column="9">ULONG</name></type> ( <name pos:line="9279" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9279" pos:column="35">*</type:modifier><name pos:line="9279" pos:column="36">AddRef</name> )<parameter_list pos:line="9279" pos:column="44">( 
            <param><decl><type><name pos:line="9280" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9280" pos:column="37">*</type:modifier></type> <name pos:line="9280" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9282" pos:column="9">ULONG</name></type> ( <name pos:line="9282" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9282" pos:column="35">*</type:modifier><name pos:line="9282" pos:column="36">Release</name> )<parameter_list pos:line="9282" pos:column="45">( 
            <param><decl><type><name pos:line="9283" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9283" pos:column="37">*</type:modifier></type> <name pos:line="9283" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9285" pos:column="9">HRESULT</name></type> ( <name pos:line="9285" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9285" pos:column="37">*</type:modifier><name pos:line="9285" pos:column="38">GetProperties</name> )<parameter_list pos:line="9285" pos:column="53">( 
            <param><decl><type><name pos:line="9286" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9286" pos:column="37">*</type:modifier></type> <name pos:line="9286" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9287" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9287" pos:column="33">IVxPropertyCollection</name> <type:modifier pos:line="9287" pos:column="55">*</type:modifier><type:modifier pos:line="9287" pos:column="56">*</type:modifier></type><name pos:line="9287" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9289" pos:column="9">HRESULT</name></type> ( <name pos:line="9289" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9289" pos:column="37">*</type:modifier><name pos:line="9289" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="9289" pos:column="50">( 
            <param><decl><type><name pos:line="9290" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9290" pos:column="37">*</type:modifier></type> <name pos:line="9290" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9291" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9291" pos:column="24">VxSpan</name></type> <name pos:line="9291" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9292" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9292" pos:column="33">BOOL</name> <type:modifier pos:line="9292" pos:column="38">*</type:modifier></type><name pos:line="9292" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9294" pos:column="9">HRESULT</name></type> ( <name pos:line="9294" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9294" pos:column="37">*</type:modifier><name pos:line="9294" pos:column="38">IsReadOnly_2</name> )<parameter_list pos:line="9294" pos:column="52">( 
            <param><decl><type><name pos:line="9295" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9295" pos:column="37">*</type:modifier></type> <name pos:line="9295" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9296" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9296" pos:column="24">VxSpan</name></type> <name pos:line="9296" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9297" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9297" pos:column="24">BOOL</name></type> <name pos:line="9297" pos:column="29">isEdit</name></decl></param>,
            <comment type="block" pos:line="9298" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9298" pos:column="33">BOOL</name> <type:modifier pos:line="9298" pos:column="38">*</type:modifier></type><name pos:line="9298" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9300" pos:column="9">HRESULT</name></type> ( <name pos:line="9300" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9300" pos:column="37">*</type:modifier><name pos:line="9300" pos:column="38">GetReadOnlyExtents</name> )<parameter_list pos:line="9300" pos:column="58">( 
            <param><decl><type><name pos:line="9301" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9301" pos:column="37">*</type:modifier></type> <name pos:line="9301" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9302" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9302" pos:column="24">VxSpan</name></type> <name pos:line="9302" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9303" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9303" pos:column="33">IVxNormalizedSpanCollection</name> <type:modifier pos:line="9303" pos:column="61">*</type:modifier><type:modifier pos:line="9303" pos:column="62">*</type:modifier></type><name pos:line="9303" pos:column="63">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9305" pos:column="9">HRESULT</name></type> ( <name pos:line="9305" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9305" pos:column="37">*</type:modifier><name pos:line="9305" pos:column="38">GetContentType</name> )<parameter_list pos:line="9305" pos:column="54">( 
            <param><decl><type><name pos:line="9306" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9306" pos:column="37">*</type:modifier></type> <name pos:line="9306" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9307" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9307" pos:column="33">IVxContentType</name> <type:modifier pos:line="9307" pos:column="48">*</type:modifier><type:modifier pos:line="9307" pos:column="49">*</type:modifier></type><name pos:line="9307" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9309" pos:column="9">HRESULT</name></type> ( <name pos:line="9309" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9309" pos:column="37">*</type:modifier><name pos:line="9309" pos:column="38">GetCurrentSnapshot</name> )<parameter_list pos:line="9309" pos:column="58">( 
            <param><decl><type><name pos:line="9310" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9310" pos:column="37">*</type:modifier></type> <name pos:line="9310" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9311" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9311" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="9311" pos:column="49">*</type:modifier><type:modifier pos:line="9311" pos:column="50">*</type:modifier></type><name pos:line="9311" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9313" pos:column="9">HRESULT</name></type> ( <name pos:line="9313" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9313" pos:column="37">*</type:modifier><name pos:line="9313" pos:column="38">CreateEdit</name> )<parameter_list pos:line="9313" pos:column="50">( 
            <param><decl><type><name pos:line="9314" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9314" pos:column="37">*</type:modifier></type> <name pos:line="9314" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9315" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9315" pos:column="24">VxEditOptions</name></type> <name pos:line="9315" pos:column="38">options</name></decl></param>,
            <comment type="block" pos:line="9316" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9316" pos:column="24">BOOL</name></type> <name pos:line="9316" pos:column="29">reiteratedVersionNumberHasValue</name></decl></param>,
            <comment type="block" pos:line="9317" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9317" pos:column="24">int</name></type> <name pos:line="9317" pos:column="28">reiteratedVersionNumber</name></decl></param>,
            <comment type="block" pos:line="9318" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9318" pos:column="24">IUnknown</name> <type:modifier pos:line="9318" pos:column="33">*</type:modifier></type><name pos:line="9318" pos:column="34">pEditTag</name></decl></param>,
            <comment type="block" pos:line="9319" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9319" pos:column="33">IVxTextEdit</name> <type:modifier pos:line="9319" pos:column="45">*</type:modifier><type:modifier pos:line="9319" pos:column="46">*</type:modifier></type><name pos:line="9319" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9321" pos:column="9">HRESULT</name></type> ( <name pos:line="9321" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9321" pos:column="37">*</type:modifier><name pos:line="9321" pos:column="38">CreateEdit_2</name> )<parameter_list pos:line="9321" pos:column="52">( 
            <param><decl><type><name pos:line="9322" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9322" pos:column="37">*</type:modifier></type> <name pos:line="9322" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9323" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9323" pos:column="33">IVxTextEdit</name> <type:modifier pos:line="9323" pos:column="45">*</type:modifier><type:modifier pos:line="9323" pos:column="46">*</type:modifier></type><name pos:line="9323" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9325" pos:column="9">HRESULT</name></type> ( <name pos:line="9325" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9325" pos:column="37">*</type:modifier><name pos:line="9325" pos:column="38">CreateReadOnlyRegionEdit</name> )<parameter_list pos:line="9325" pos:column="64">( 
            <param><decl><type><name pos:line="9326" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9326" pos:column="37">*</type:modifier></type> <name pos:line="9326" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9327" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9327" pos:column="33">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="9327" pos:column="55">*</type:modifier><type:modifier pos:line="9327" pos:column="56">*</type:modifier></type><name pos:line="9327" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9329" pos:column="9">HRESULT</name></type> ( <name pos:line="9329" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9329" pos:column="37">*</type:modifier><name pos:line="9329" pos:column="38">GetEditInProgress</name> )<parameter_list pos:line="9329" pos:column="57">( 
            <param><decl><type><name pos:line="9330" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9330" pos:column="37">*</type:modifier></type> <name pos:line="9330" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9331" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9331" pos:column="33">BOOL</name> <type:modifier pos:line="9331" pos:column="38">*</type:modifier></type><name pos:line="9331" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9333" pos:column="9">HRESULT</name></type> ( <name pos:line="9333" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9333" pos:column="37">*</type:modifier><name pos:line="9333" pos:column="38">TakeThreadOwnership</name> )<parameter_list pos:line="9333" pos:column="59">( 
            <param><decl><type><name pos:line="9334" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9334" pos:column="37">*</type:modifier></type> <name pos:line="9334" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9336" pos:column="9">HRESULT</name></type> ( <name pos:line="9336" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9336" pos:column="37">*</type:modifier><name pos:line="9336" pos:column="38">CheckEditAccess</name> )<parameter_list pos:line="9336" pos:column="55">( 
            <param><decl><type><name pos:line="9337" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9337" pos:column="37">*</type:modifier></type> <name pos:line="9337" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9338" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9338" pos:column="33">BOOL</name> <type:modifier pos:line="9338" pos:column="38">*</type:modifier></type><name pos:line="9338" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9340" pos:column="9">HRESULT</name></type> ( <name pos:line="9340" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9340" pos:column="37">*</type:modifier><name pos:line="9340" pos:column="38">AdviseReadOnlyRegionsChanged</name> )<parameter_list pos:line="9340" pos:column="68">( 
            <param><decl><type><name pos:line="9341" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9341" pos:column="37">*</type:modifier></type> <name pos:line="9341" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9342" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9342" pos:column="24">IVxSnapshotSpanEvent</name> <type:modifier pos:line="9342" pos:column="45">*</type:modifier></type><name pos:line="9342" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9344" pos:column="9">HRESULT</name></type> ( <name pos:line="9344" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9344" pos:column="37">*</type:modifier><name pos:line="9344" pos:column="38">UnadviseReadOnlyRegionsChanged</name> )<parameter_list pos:line="9344" pos:column="70">( 
            <param><decl><type><name pos:line="9345" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9345" pos:column="37">*</type:modifier></type> <name pos:line="9345" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9346" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9346" pos:column="24">IVxSnapshotSpanEvent</name> <type:modifier pos:line="9346" pos:column="45">*</type:modifier></type><name pos:line="9346" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9348" pos:column="9">HRESULT</name></type> ( <name pos:line="9348" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9348" pos:column="37">*</type:modifier><name pos:line="9348" pos:column="38">AdviseChanged</name> )<parameter_list pos:line="9348" pos:column="53">( 
            <param><decl><type><name pos:line="9349" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9349" pos:column="37">*</type:modifier></type> <name pos:line="9349" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9350" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9350" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="9350" pos:column="51">*</type:modifier></type><name pos:line="9350" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9352" pos:column="9">HRESULT</name></type> ( <name pos:line="9352" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9352" pos:column="37">*</type:modifier><name pos:line="9352" pos:column="38">UnadviseChanged</name> )<parameter_list pos:line="9352" pos:column="55">( 
            <param><decl><type><name pos:line="9353" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9353" pos:column="37">*</type:modifier></type> <name pos:line="9353" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9354" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9354" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="9354" pos:column="51">*</type:modifier></type><name pos:line="9354" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9356" pos:column="9">HRESULT</name></type> ( <name pos:line="9356" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9356" pos:column="37">*</type:modifier><name pos:line="9356" pos:column="38">AdviseChangedLowPriority</name> )<parameter_list pos:line="9356" pos:column="64">( 
            <param><decl><type><name pos:line="9357" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9357" pos:column="37">*</type:modifier></type> <name pos:line="9357" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9358" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9358" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="9358" pos:column="51">*</type:modifier></type><name pos:line="9358" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9360" pos:column="9">HRESULT</name></type> ( <name pos:line="9360" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9360" pos:column="37">*</type:modifier><name pos:line="9360" pos:column="38">UnadviseChangedLowPriority</name> )<parameter_list pos:line="9360" pos:column="66">( 
            <param><decl><type><name pos:line="9361" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9361" pos:column="37">*</type:modifier></type> <name pos:line="9361" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9362" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9362" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="9362" pos:column="51">*</type:modifier></type><name pos:line="9362" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9364" pos:column="9">HRESULT</name></type> ( <name pos:line="9364" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9364" pos:column="37">*</type:modifier><name pos:line="9364" pos:column="38">AdviseChangedHighPriority</name> )<parameter_list pos:line="9364" pos:column="65">( 
            <param><decl><type><name pos:line="9365" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9365" pos:column="37">*</type:modifier></type> <name pos:line="9365" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9366" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9366" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="9366" pos:column="51">*</type:modifier></type><name pos:line="9366" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9368" pos:column="9">HRESULT</name></type> ( <name pos:line="9368" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9368" pos:column="37">*</type:modifier><name pos:line="9368" pos:column="38">UnadviseChangedHighPriority</name> )<parameter_list pos:line="9368" pos:column="67">( 
            <param><decl><type><name pos:line="9369" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9369" pos:column="37">*</type:modifier></type> <name pos:line="9369" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9370" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9370" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="9370" pos:column="51">*</type:modifier></type><name pos:line="9370" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9372" pos:column="9">HRESULT</name></type> ( <name pos:line="9372" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9372" pos:column="37">*</type:modifier><name pos:line="9372" pos:column="38">AdviseChanging</name> )<parameter_list pos:line="9372" pos:column="54">( 
            <param><decl><type><name pos:line="9373" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9373" pos:column="37">*</type:modifier></type> <name pos:line="9373" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9374" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9374" pos:column="24">IVxTextContentChangingEvent</name> <type:modifier pos:line="9374" pos:column="52">*</type:modifier></type><name pos:line="9374" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9376" pos:column="9">HRESULT</name></type> ( <name pos:line="9376" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9376" pos:column="37">*</type:modifier><name pos:line="9376" pos:column="38">UnadviseChanging</name> )<parameter_list pos:line="9376" pos:column="56">( 
            <param><decl><type><name pos:line="9377" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9377" pos:column="37">*</type:modifier></type> <name pos:line="9377" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9378" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9378" pos:column="24">IVxTextContentChangingEvent</name> <type:modifier pos:line="9378" pos:column="52">*</type:modifier></type><name pos:line="9378" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9380" pos:column="9">HRESULT</name></type> ( <name pos:line="9380" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9380" pos:column="37">*</type:modifier><name pos:line="9380" pos:column="38">AdvisePostChanged</name> )<parameter_list pos:line="9380" pos:column="57">( 
            <param><decl><type><name pos:line="9381" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9381" pos:column="37">*</type:modifier></type> <name pos:line="9381" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9382" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9382" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="9382" pos:column="42">*</type:modifier></type><name pos:line="9382" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9384" pos:column="9">HRESULT</name></type> ( <name pos:line="9384" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9384" pos:column="37">*</type:modifier><name pos:line="9384" pos:column="38">UnadvisePostChanged</name> )<parameter_list pos:line="9384" pos:column="59">( 
            <param><decl><type><name pos:line="9385" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9385" pos:column="37">*</type:modifier></type> <name pos:line="9385" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9386" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9386" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="9386" pos:column="42">*</type:modifier></type><name pos:line="9386" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9388" pos:column="9">HRESULT</name></type> ( <name pos:line="9388" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9388" pos:column="37">*</type:modifier><name pos:line="9388" pos:column="38">AdviseContentTypeChanged</name> )<parameter_list pos:line="9388" pos:column="64">( 
            <param><decl><type><name pos:line="9389" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9389" pos:column="37">*</type:modifier></type> <name pos:line="9389" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9390" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9390" pos:column="24">IVxContentTypeChangedEvent</name> <type:modifier pos:line="9390" pos:column="51">*</type:modifier></type><name pos:line="9390" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9392" pos:column="9">HRESULT</name></type> ( <name pos:line="9392" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9392" pos:column="37">*</type:modifier><name pos:line="9392" pos:column="38">UnadviseContentTypeChanged</name> )<parameter_list pos:line="9392" pos:column="66">( 
            <param><decl><type><name pos:line="9393" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9393" pos:column="37">*</type:modifier></type> <name pos:line="9393" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9394" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9394" pos:column="24">IVxContentTypeChangedEvent</name> <type:modifier pos:line="9394" pos:column="51">*</type:modifier></type><name pos:line="9394" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9396" pos:column="9">HRESULT</name></type> ( <name pos:line="9396" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9396" pos:column="37">*</type:modifier><name pos:line="9396" pos:column="38">ChangeContentType</name> )<parameter_list pos:line="9396" pos:column="57">( 
            <param><decl><type><name pos:line="9397" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9397" pos:column="37">*</type:modifier></type> <name pos:line="9397" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9398" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9398" pos:column="24">IVxContentType</name> <type:modifier pos:line="9398" pos:column="39">*</type:modifier></type><name pos:line="9398" pos:column="40">pNewContentType</name></decl></param>,
            <comment type="block" pos:line="9399" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9399" pos:column="24">IUnknown</name> <type:modifier pos:line="9399" pos:column="33">*</type:modifier></type><name pos:line="9399" pos:column="34">pEditTag</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9401" pos:column="9">HRESULT</name></type> ( <name pos:line="9401" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9401" pos:column="37">*</type:modifier><name pos:line="9401" pos:column="38">Insert</name> )<parameter_list pos:line="9401" pos:column="46">( 
            <param><decl><type><name pos:line="9402" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9402" pos:column="37">*</type:modifier></type> <name pos:line="9402" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9403" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9403" pos:column="24">int</name></type> <name pos:line="9403" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9404" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9404" pos:column="24">BSTR</name></type> <name pos:line="9404" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="9405" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9405" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="9405" pos:column="49">*</type:modifier><type:modifier pos:line="9405" pos:column="50">*</type:modifier></type><name pos:line="9405" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9407" pos:column="9">HRESULT</name></type> ( <name pos:line="9407" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9407" pos:column="37">*</type:modifier><name pos:line="9407" pos:column="38">Delete</name> )<parameter_list pos:line="9407" pos:column="46">( 
            <param><decl><type><name pos:line="9408" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9408" pos:column="37">*</type:modifier></type> <name pos:line="9408" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9409" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9409" pos:column="24">VxSpan</name></type> <name pos:line="9409" pos:column="31">deleteSpan</name></decl></param>,
            <comment type="block" pos:line="9410" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9410" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="9410" pos:column="49">*</type:modifier><type:modifier pos:line="9410" pos:column="50">*</type:modifier></type><name pos:line="9410" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9412" pos:column="9">HRESULT</name></type> ( <name pos:line="9412" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9412" pos:column="37">*</type:modifier><name pos:line="9412" pos:column="38">Replace</name> )<parameter_list pos:line="9412" pos:column="47">( 
            <param><decl><type><name pos:line="9413" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9413" pos:column="37">*</type:modifier></type> <name pos:line="9413" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9414" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9414" pos:column="24">VxSpan</name></type> <name pos:line="9414" pos:column="31">replaceSpan</name></decl></param>,
            <comment type="block" pos:line="9415" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9415" pos:column="24">BSTR</name></type> <name pos:line="9415" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="9416" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9416" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="9416" pos:column="49">*</type:modifier><type:modifier pos:line="9416" pos:column="50">*</type:modifier></type><name pos:line="9416" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9418" pos:column="9">HRESULT</name></type> ( <name pos:line="9418" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9418" pos:column="37">*</type:modifier><name pos:line="9418" pos:column="38">IsReadOnly_3</name> )<parameter_list pos:line="9418" pos:column="52">( 
            <param><decl><type><name pos:line="9419" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9419" pos:column="37">*</type:modifier></type> <name pos:line="9419" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9420" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9420" pos:column="24">int</name></type> <name pos:line="9420" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9421" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9421" pos:column="33">BOOL</name> <type:modifier pos:line="9421" pos:column="38">*</type:modifier></type><name pos:line="9421" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9423" pos:column="9">HRESULT</name></type> ( <name pos:line="9423" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9423" pos:column="37">*</type:modifier><name pos:line="9423" pos:column="38">IsReadOnly_4</name> )<parameter_list pos:line="9423" pos:column="52">( 
            <param><decl><type><name pos:line="9424" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9424" pos:column="37">*</type:modifier></type> <name pos:line="9424" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9425" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9425" pos:column="24">int</name></type> <name pos:line="9425" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9426" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9426" pos:column="24">BOOL</name></type> <name pos:line="9426" pos:column="29">isEdit</name></decl></param>,
            <comment type="block" pos:line="9427" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9427" pos:column="33">BOOL</name> <type:modifier pos:line="9427" pos:column="38">*</type:modifier></type><name pos:line="9427" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9429" pos:column="9">HRESULT</name></type> ( <name pos:line="9429" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9429" pos:column="37">*</type:modifier><name pos:line="9429" pos:column="38">GetCurrentSnapshot_2</name> )<parameter_list pos:line="9429" pos:column="60">( 
            <param><decl><type><name pos:line="9430" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9430" pos:column="37">*</type:modifier></type> <name pos:line="9430" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9431" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9431" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="9431" pos:column="55">*</type:modifier><type:modifier pos:line="9431" pos:column="56">*</type:modifier></type><name pos:line="9431" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9433" pos:column="9">HRESULT</name></type> ( <name pos:line="9433" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9433" pos:column="37">*</type:modifier><name pos:line="9433" pos:column="38">GetSourceBuffers</name> )<parameter_list pos:line="9433" pos:column="56">( 
            <param><decl><type><name pos:line="9434" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9434" pos:column="37">*</type:modifier></type> <name pos:line="9434" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9435" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9435" pos:column="33">IListIVxTextBuffer</name> <type:modifier pos:line="9435" pos:column="52">*</type:modifier><type:modifier pos:line="9435" pos:column="53">*</type:modifier></type><name pos:line="9435" pos:column="54">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9437" pos:column="9">HRESULT</name></type> ( <name pos:line="9437" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9437" pos:column="37">*</type:modifier><name pos:line="9437" pos:column="38">Insert_2</name> )<parameter_list pos:line="9437" pos:column="48">( 
            <param><decl><type><name pos:line="9438" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9438" pos:column="37">*</type:modifier></type> <name pos:line="9438" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9439" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9439" pos:column="24">int</name></type> <name pos:line="9439" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9440" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9440" pos:column="24">BSTR</name></type> <name pos:line="9440" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="9441" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9441" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="9441" pos:column="55">*</type:modifier><type:modifier pos:line="9441" pos:column="56">*</type:modifier></type><name pos:line="9441" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9443" pos:column="9">HRESULT</name></type> ( <name pos:line="9443" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9443" pos:column="37">*</type:modifier><name pos:line="9443" pos:column="38">Delete_2</name> )<parameter_list pos:line="9443" pos:column="48">( 
            <param><decl><type><name pos:line="9444" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9444" pos:column="37">*</type:modifier></type> <name pos:line="9444" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9445" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9445" pos:column="24">VxSpan</name></type> <name pos:line="9445" pos:column="31">deleteSpan</name></decl></param>,
            <comment type="block" pos:line="9446" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9446" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="9446" pos:column="55">*</type:modifier><type:modifier pos:line="9446" pos:column="56">*</type:modifier></type><name pos:line="9446" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9448" pos:column="9">HRESULT</name></type> ( <name pos:line="9448" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9448" pos:column="37">*</type:modifier><name pos:line="9448" pos:column="38">Replace_2</name> )<parameter_list pos:line="9448" pos:column="49">( 
            <param><decl><type><name pos:line="9449" pos:column="13">IVxProjectionBufferBase</name> <type:modifier pos:line="9449" pos:column="37">*</type:modifier></type> <name pos:line="9449" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="9450" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9450" pos:column="24">VxSpan</name></type> <name pos:line="9450" pos:column="31">replaceSpan</name></decl></param>,
            <comment type="block" pos:line="9451" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9451" pos:column="24">BSTR</name></type> <name pos:line="9451" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="9452" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9452" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="9452" pos:column="55">*</type:modifier><type:modifier pos:line="9452" pos:column="56">*</type:modifier></type><name pos:line="9452" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9454" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9455" pos:column="7">IVxProjectionBufferBaseVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9457" pos:column="5">interface</name></type> <name pos:line="9457" pos:column="15">IVxProjectionBufferBase</name>
    <argument_list pos:line="9458" pos:column="5">{
        <argument><expr><name pos:line="9459" pos:column="9">CONST_VTBL</name> struct <name pos:line="9459" pos:column="27">IVxProjectionBufferBaseVtbl</name> <op:operator pos:line="9459" pos:column="55">*</op:operator><name pos:line="9459" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9464" pos:column="1">#<cpp:directive pos:line="9464" pos:column="2">ifdef</cpp:directive> <name pos:line="9464" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9467" pos:column="1">#<cpp:directive pos:line="9467" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9467" pos:column="9">IVxProjectionBufferBase_QueryInterface</name><parameter_list pos:line="9467" pos:column="47">(<param><type><name pos:line="9467" pos:column="48">This</name></type></param>,<param><type><name pos:line="9467" pos:column="53">riid</name></type></param>,<param><type><name pos:line="9467" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9468" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9470" pos:column="1">#<cpp:directive pos:line="9470" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9470" pos:column="9">IVxProjectionBufferBase_AddRef</name><parameter_list pos:line="9470" pos:column="39">(<param><type><name pos:line="9470" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9471" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9473" pos:column="1">#<cpp:directive pos:line="9473" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9473" pos:column="9">IVxProjectionBufferBase_Release</name><parameter_list pos:line="9473" pos:column="40">(<param><type><name pos:line="9473" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9474" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9477" pos:column="1">#<cpp:directive pos:line="9477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9477" pos:column="9">IVxProjectionBufferBase_GetProperties</name><parameter_list pos:line="9477" pos:column="46">(<param><type><name pos:line="9477" pos:column="47">This</name></type></param>,<param><type><name pos:line="9477" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9478" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProperties(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="9481" pos:column="1">#<cpp:directive pos:line="9481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9481" pos:column="9">IVxProjectionBufferBase_IsReadOnly</name><parameter_list pos:line="9481" pos:column="43">(<param><type><name pos:line="9481" pos:column="44">This</name></type></param>,<param><type><name pos:line="9481" pos:column="49">span</name></type></param>,<param><type><name pos:line="9481" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9482" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,span,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9484" pos:column="1">#<cpp:directive pos:line="9484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9484" pos:column="9">IVxProjectionBufferBase_IsReadOnly_2</name><parameter_list pos:line="9484" pos:column="45">(<param><type><name pos:line="9484" pos:column="46">This</name></type></param>,<param><type><name pos:line="9484" pos:column="51">span</name></type></param>,<param><type><name pos:line="9484" pos:column="56">isEdit</name></type></param>,<param><type><name pos:line="9484" pos:column="63">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9485" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_2(This,span,isEdit,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9487" pos:column="1">#<cpp:directive pos:line="9487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9487" pos:column="9">IVxProjectionBufferBase_GetReadOnlyExtents</name><parameter_list pos:line="9487" pos:column="51">(<param><type><name pos:line="9487" pos:column="52">This</name></type></param>,<param><type><name pos:line="9487" pos:column="57">span</name></type></param>,<param><type><name pos:line="9487" pos:column="62">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9488" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReadOnlyExtents(This,span,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9490" pos:column="1">#<cpp:directive pos:line="9490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9490" pos:column="9">IVxProjectionBufferBase_GetContentType</name><parameter_list pos:line="9490" pos:column="47">(<param><type><name pos:line="9490" pos:column="48">This</name></type></param>,<param><type><name pos:line="9490" pos:column="53">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9491" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9493" pos:column="1">#<cpp:directive pos:line="9493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9493" pos:column="9">IVxProjectionBufferBase_GetCurrentSnapshot</name><parameter_list pos:line="9493" pos:column="51">(<param><type><name pos:line="9493" pos:column="52">This</name></type></param>,<param><type><name pos:line="9493" pos:column="57">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9494" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9496" pos:column="1">#<cpp:directive pos:line="9496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9496" pos:column="9">IVxProjectionBufferBase_CreateEdit</name><parameter_list pos:line="9496" pos:column="43">(<param><type><name pos:line="9496" pos:column="44">This</name></type></param>,<param><type><name pos:line="9496" pos:column="49">options</name></type></param>,<param><type><name pos:line="9496" pos:column="57">reiteratedVersionNumberHasValue</name></type></param>,<param><type><name pos:line="9496" pos:column="89">reiteratedVersionNumber</name></type></param>,<param><type><name pos:line="9496" pos:column="113">pEditTag</name></type></param>,<param><type><name pos:line="9496" pos:column="122">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9497" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEdit(This,options,reiteratedVersionNumberHasValue,reiteratedVersionNumber,pEditTag,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9499" pos:column="1">#<cpp:directive pos:line="9499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9499" pos:column="9">IVxProjectionBufferBase_CreateEdit_2</name><parameter_list pos:line="9499" pos:column="45">(<param><type><name pos:line="9499" pos:column="46">This</name></type></param>,<param><type><name pos:line="9499" pos:column="51">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9500" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEdit_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9502" pos:column="1">#<cpp:directive pos:line="9502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9502" pos:column="9">IVxProjectionBufferBase_CreateReadOnlyRegionEdit</name><parameter_list pos:line="9502" pos:column="57">(<param><type><name pos:line="9502" pos:column="58">This</name></type></param>,<param><type><name pos:line="9502" pos:column="63">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9503" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateReadOnlyRegionEdit(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9505" pos:column="1">#<cpp:directive pos:line="9505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9505" pos:column="9">IVxProjectionBufferBase_GetEditInProgress</name><parameter_list pos:line="9505" pos:column="50">(<param><type><name pos:line="9505" pos:column="51">This</name></type></param>,<param><type><name pos:line="9505" pos:column="56">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9506" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditInProgress(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9508" pos:column="1">#<cpp:directive pos:line="9508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9508" pos:column="9">IVxProjectionBufferBase_TakeThreadOwnership</name><parameter_list pos:line="9508" pos:column="52">(<param><type><name pos:line="9508" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9509" pos:column="5">( (This)-&gt;lpVtbl -&gt; TakeThreadOwnership(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9511" pos:column="1">#<cpp:directive pos:line="9511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9511" pos:column="9">IVxProjectionBufferBase_CheckEditAccess</name><parameter_list pos:line="9511" pos:column="48">(<param><type><name pos:line="9511" pos:column="49">This</name></type></param>,<param><type><name pos:line="9511" pos:column="54">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9512" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckEditAccess(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9514" pos:column="1">#<cpp:directive pos:line="9514" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9514" pos:column="9">IVxProjectionBufferBase_AdviseReadOnlyRegionsChanged</name><parameter_list pos:line="9514" pos:column="61">(<param><type><name pos:line="9514" pos:column="62">This</name></type></param>,<param><type><name pos:line="9514" pos:column="67">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9515" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseReadOnlyRegionsChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9517" pos:column="1">#<cpp:directive pos:line="9517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9517" pos:column="9">IVxProjectionBufferBase_UnadviseReadOnlyRegionsChanged</name><parameter_list pos:line="9517" pos:column="63">(<param><type><name pos:line="9517" pos:column="64">This</name></type></param>,<param><type><name pos:line="9517" pos:column="69">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9518" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseReadOnlyRegionsChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9520" pos:column="1">#<cpp:directive pos:line="9520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9520" pos:column="9">IVxProjectionBufferBase_AdviseChanged</name><parameter_list pos:line="9520" pos:column="46">(<param><type><name pos:line="9520" pos:column="47">This</name></type></param>,<param><type><name pos:line="9520" pos:column="52">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9521" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9523" pos:column="1">#<cpp:directive pos:line="9523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9523" pos:column="9">IVxProjectionBufferBase_UnadviseChanged</name><parameter_list pos:line="9523" pos:column="48">(<param><type><name pos:line="9523" pos:column="49">This</name></type></param>,<param><type><name pos:line="9523" pos:column="54">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9524" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9526" pos:column="1">#<cpp:directive pos:line="9526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9526" pos:column="9">IVxProjectionBufferBase_AdviseChangedLowPriority</name><parameter_list pos:line="9526" pos:column="57">(<param><type><name pos:line="9526" pos:column="58">This</name></type></param>,<param><type><name pos:line="9526" pos:column="63">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9527" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChangedLowPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9529" pos:column="1">#<cpp:directive pos:line="9529" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9529" pos:column="9">IVxProjectionBufferBase_UnadviseChangedLowPriority</name><parameter_list pos:line="9529" pos:column="59">(<param><type><name pos:line="9529" pos:column="60">This</name></type></param>,<param><type><name pos:line="9529" pos:column="65">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9530" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChangedLowPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9532" pos:column="1">#<cpp:directive pos:line="9532" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9532" pos:column="9">IVxProjectionBufferBase_AdviseChangedHighPriority</name><parameter_list pos:line="9532" pos:column="58">(<param><type><name pos:line="9532" pos:column="59">This</name></type></param>,<param><type><name pos:line="9532" pos:column="64">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9533" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChangedHighPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9535" pos:column="1">#<cpp:directive pos:line="9535" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9535" pos:column="9">IVxProjectionBufferBase_UnadviseChangedHighPriority</name><parameter_list pos:line="9535" pos:column="60">(<param><type><name pos:line="9535" pos:column="61">This</name></type></param>,<param><type><name pos:line="9535" pos:column="66">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9536" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChangedHighPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9538" pos:column="1">#<cpp:directive pos:line="9538" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9538" pos:column="9">IVxProjectionBufferBase_AdviseChanging</name><parameter_list pos:line="9538" pos:column="47">(<param><type><name pos:line="9538" pos:column="48">This</name></type></param>,<param><type><name pos:line="9538" pos:column="53">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9539" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChanging(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9541" pos:column="1">#<cpp:directive pos:line="9541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9541" pos:column="9">IVxProjectionBufferBase_UnadviseChanging</name><parameter_list pos:line="9541" pos:column="49">(<param><type><name pos:line="9541" pos:column="50">This</name></type></param>,<param><type><name pos:line="9541" pos:column="55">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9542" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChanging(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9544" pos:column="1">#<cpp:directive pos:line="9544" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9544" pos:column="9">IVxProjectionBufferBase_AdvisePostChanged</name><parameter_list pos:line="9544" pos:column="50">(<param><type><name pos:line="9544" pos:column="51">This</name></type></param>,<param><type><name pos:line="9544" pos:column="56">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9545" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdvisePostChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9547" pos:column="1">#<cpp:directive pos:line="9547" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9547" pos:column="9">IVxProjectionBufferBase_UnadvisePostChanged</name><parameter_list pos:line="9547" pos:column="52">(<param><type><name pos:line="9547" pos:column="53">This</name></type></param>,<param><type><name pos:line="9547" pos:column="58">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9548" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadvisePostChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9550" pos:column="1">#<cpp:directive pos:line="9550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9550" pos:column="9">IVxProjectionBufferBase_AdviseContentTypeChanged</name><parameter_list pos:line="9550" pos:column="57">(<param><type><name pos:line="9550" pos:column="58">This</name></type></param>,<param><type><name pos:line="9550" pos:column="63">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9551" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9553" pos:column="1">#<cpp:directive pos:line="9553" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9553" pos:column="9">IVxProjectionBufferBase_UnadviseContentTypeChanged</name><parameter_list pos:line="9553" pos:column="59">(<param><type><name pos:line="9553" pos:column="60">This</name></type></param>,<param><type><name pos:line="9553" pos:column="65">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9554" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="9556" pos:column="1">#<cpp:directive pos:line="9556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9556" pos:column="9">IVxProjectionBufferBase_ChangeContentType</name><parameter_list pos:line="9556" pos:column="50">(<param><type><name pos:line="9556" pos:column="51">This</name></type></param>,<param><type><name pos:line="9556" pos:column="56">pNewContentType</name></type></param>,<param><type><name pos:line="9556" pos:column="72">pEditTag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9557" pos:column="5">( (This)-&gt;lpVtbl -&gt; ChangeContentType(This,pNewContentType,pEditTag) )</cpp:value></cpp:define> 

<cpp:define pos:line="9559" pos:column="1">#<cpp:directive pos:line="9559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9559" pos:column="9">IVxProjectionBufferBase_Insert</name><parameter_list pos:line="9559" pos:column="39">(<param><type><name pos:line="9559" pos:column="40">This</name></type></param>,<param><type><name pos:line="9559" pos:column="45">position</name></type></param>,<param><type><name pos:line="9559" pos:column="54">text</name></type></param>,<param><type><name pos:line="9559" pos:column="59">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9560" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert(This,position,text,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9562" pos:column="1">#<cpp:directive pos:line="9562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9562" pos:column="9">IVxProjectionBufferBase_Delete</name><parameter_list pos:line="9562" pos:column="39">(<param><type><name pos:line="9562" pos:column="40">This</name></type></param>,<param><type><name pos:line="9562" pos:column="45">deleteSpan</name></type></param>,<param><type><name pos:line="9562" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9563" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,deleteSpan,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9565" pos:column="1">#<cpp:directive pos:line="9565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9565" pos:column="9">IVxProjectionBufferBase_Replace</name><parameter_list pos:line="9565" pos:column="40">(<param><type><name pos:line="9565" pos:column="41">This</name></type></param>,<param><type><name pos:line="9565" pos:column="46">replaceSpan</name></type></param>,<param><type><name pos:line="9565" pos:column="58">replaceWith</name></type></param>,<param><type><name pos:line="9565" pos:column="70">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9566" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace(This,replaceSpan,replaceWith,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9568" pos:column="1">#<cpp:directive pos:line="9568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9568" pos:column="9">IVxProjectionBufferBase_IsReadOnly_3</name><parameter_list pos:line="9568" pos:column="45">(<param><type><name pos:line="9568" pos:column="46">This</name></type></param>,<param><type><name pos:line="9568" pos:column="51">position</name></type></param>,<param><type><name pos:line="9568" pos:column="60">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9569" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_3(This,position,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9571" pos:column="1">#<cpp:directive pos:line="9571" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9571" pos:column="9">IVxProjectionBufferBase_IsReadOnly_4</name><parameter_list pos:line="9571" pos:column="45">(<param><type><name pos:line="9571" pos:column="46">This</name></type></param>,<param><type><name pos:line="9571" pos:column="51">position</name></type></param>,<param><type><name pos:line="9571" pos:column="60">isEdit</name></type></param>,<param><type><name pos:line="9571" pos:column="67">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9572" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_4(This,position,isEdit,pRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="9575" pos:column="1">#<cpp:directive pos:line="9575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9575" pos:column="9">IVxProjectionBufferBase_GetCurrentSnapshot_2</name><parameter_list pos:line="9575" pos:column="53">(<param><type><name pos:line="9575" pos:column="54">This</name></type></param>,<param><type><name pos:line="9575" pos:column="59">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9576" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentSnapshot_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9578" pos:column="1">#<cpp:directive pos:line="9578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9578" pos:column="9">IVxProjectionBufferBase_GetSourceBuffers</name><parameter_list pos:line="9578" pos:column="49">(<param><type><name pos:line="9578" pos:column="50">This</name></type></param>,<param><type><name pos:line="9578" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9579" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceBuffers(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9581" pos:column="1">#<cpp:directive pos:line="9581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9581" pos:column="9">IVxProjectionBufferBase_Insert_2</name><parameter_list pos:line="9581" pos:column="41">(<param><type><name pos:line="9581" pos:column="42">This</name></type></param>,<param><type><name pos:line="9581" pos:column="47">position</name></type></param>,<param><type><name pos:line="9581" pos:column="56">text</name></type></param>,<param><type><name pos:line="9581" pos:column="61">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9582" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert_2(This,position,text,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9584" pos:column="1">#<cpp:directive pos:line="9584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9584" pos:column="9">IVxProjectionBufferBase_Delete_2</name><parameter_list pos:line="9584" pos:column="41">(<param><type><name pos:line="9584" pos:column="42">This</name></type></param>,<param><type><name pos:line="9584" pos:column="47">deleteSpan</name></type></param>,<param><type><name pos:line="9584" pos:column="58">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9585" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete_2(This,deleteSpan,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9587" pos:column="1">#<cpp:directive pos:line="9587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9587" pos:column="9">IVxProjectionBufferBase_Replace_2</name><parameter_list pos:line="9587" pos:column="42">(<param><type><name pos:line="9587" pos:column="43">This</name></type></param>,<param><type><name pos:line="9587" pos:column="48">replaceSpan</name></type></param>,<param><type><name pos:line="9587" pos:column="60">replaceWith</name></type></param>,<param><type><name pos:line="9587" pos:column="72">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9588" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace_2(This,replaceSpan,replaceWith,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9590" pos:column="1">#<cpp:directive pos:line="9590" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9590" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9593" pos:column="1">#<cpp:directive pos:line="9593" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9593" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9598" pos:column="1">#<cpp:directive pos:line="9598" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9598" pos:column="9">/* __IVxProjectionBufferBase_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9601" pos:column="1">#<cpp:directive pos:line="9601" pos:column="2">ifndef</cpp:directive> <name pos:line="9601" pos:column="9">__IVxProjectionSnapshot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9602" pos:column="1">#<cpp:directive pos:line="9602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9602" pos:column="9">__IVxProjectionSnapshot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9604" pos:column="1">/* interface IVxProjectionSnapshot */</comment>
<comment type="block" pos:line="9605" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9608" pos:column="1">EXTERN_C</name> <specifier pos:line="9608" pos:column="10">const</specifier> <name pos:line="9608" pos:column="16">IID</name></type> <name pos:line="9608" pos:column="20">IID_IVxProjectionSnapshot</name></decl>;</decl_stmt>

<cpp:if pos:line="9610" pos:column="1">#<cpp:directive pos:line="9610" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9610" pos:column="5">defined</name><argument_list pos:line="9610" pos:column="12">(<argument><expr><name pos:line="9610" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9610" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9610" pos:column="29">!</op:operator><call><name pos:line="9610" pos:column="30">defined</name><argument_list pos:line="9610" pos:column="37">(<argument><expr><name pos:line="9610" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9612" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9612" pos:column="19">(<argument pos:line="9612" pos:column="20">"ea74bbf4-8acb-4c36-a3ef-f05d9e14ca9e"</argument>)</argument_list></macro>
    <label><name pos:line="9613" pos:column="5">IVxProjectionSnapshot</name> :</label> <expr_stmt><expr pos:line="9613" pos:column="29">public <name pos:line="9613" pos:column="36">IVxTextSnapshot</name>
    <block pos:line="9614" pos:column="5">{
    <expr pos:line="9615" pos:column="5">public<op:operator pos:line="9615" pos:column="11">:</op:operator>
        virtual <name pos:line="9616" pos:column="17">HRESULT</name> <name pos:line="9616" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9616" pos:column="43">GetTextBuffer_2</name><argument_list pos:line="9616" pos:column="58">( 
            <comment type="block" pos:line="9617" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9617" pos:column="33">IVxProjectionBufferBase</name> <op:operator pos:line="9617" pos:column="57">*</op:operator><op:operator pos:line="9617" pos:column="58">*</op:operator><name pos:line="9617" pos:column="59">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9617" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="9617" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="9619" pos:column="9">virtual <name pos:line="9619" pos:column="17">HRESULT</name> <name pos:line="9619" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9619" pos:column="43">GetSpanCount</name><argument_list pos:line="9619" pos:column="55">( 
            <comment type="block" pos:line="9620" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9620" pos:column="33">int</name> <op:operator pos:line="9620" pos:column="37">*</op:operator><name pos:line="9620" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9620" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="9620" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="9622" pos:column="9">virtual <name pos:line="9622" pos:column="17">HRESULT</name> <name pos:line="9622" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9622" pos:column="43">GetSourceSnapshots</name><argument_list pos:line="9622" pos:column="61">( 
            <comment type="block" pos:line="9623" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9623" pos:column="33">IListIVxTextSnapshot</name> <op:operator pos:line="9623" pos:column="54">*</op:operator><op:operator pos:line="9623" pos:column="55">*</op:operator><name pos:line="9623" pos:column="56">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9623" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="9623" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="9625" pos:column="9">virtual <name pos:line="9625" pos:column="17">HRESULT</name> <name pos:line="9625" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9625" pos:column="43">GetMatchingSnapshot</name><argument_list pos:line="9625" pos:column="62">( 
            <comment type="block" pos:line="9626" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="9626" pos:column="24">IVxTextBuffer</name> <op:operator pos:line="9626" pos:column="38">*</op:operator><name pos:line="9626" pos:column="39">pTextBuffer</name></expr></argument>,
            <comment type="block" pos:line="9627" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9627" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="9627" pos:column="49">*</op:operator><op:operator pos:line="9627" pos:column="50">*</op:operator><name pos:line="9627" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9627" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="9627" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="9629" pos:column="9">virtual <name pos:line="9629" pos:column="17">HRESULT</name> <name pos:line="9629" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9629" pos:column="43">GetSourceSpans</name><argument_list pos:line="9629" pos:column="57">( 
            <comment type="block" pos:line="9630" pos:column="13">/* [in] */</comment> <argument pos:line="9630" pos:column="24">int startSpanIndex</argument>,
            <comment type="block" pos:line="9631" pos:column="13">/* [in] */</comment> <argument pos:line="9631" pos:column="24">int count</argument>,
            <comment type="block" pos:line="9632" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9632" pos:column="33">IListVxSnapshotSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9632" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="9632" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="9634" pos:column="9">virtual <name pos:line="9634" pos:column="17">HRESULT</name> <name pos:line="9634" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9634" pos:column="43">GetSourceSpans_2</name><argument_list pos:line="9634" pos:column="59">( 
            <comment type="block" pos:line="9635" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="9635" pos:column="33">IListVxSnapshotSpan</name> <op:operator pos:line="9635" pos:column="53">*</op:operator><op:operator pos:line="9635" pos:column="54">*</op:operator><name pos:line="9635" pos:column="55">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="9635" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="9635" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="9637" pos:column="9">virtual <name pos:line="9637" pos:column="17">HRESULT</name> <name pos:line="9637" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9637" pos:column="43">MapToSourceSnapshot</name><argument_list pos:line="9637" pos:column="62">( 
            <comment type="block" pos:line="9638" pos:column="13">/* [in] */</comment> <argument pos:line="9638" pos:column="24">int position</argument>,
            <comment type="block" pos:line="9639" pos:column="13">/* [in] */</comment> <argument pos:line="9639" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="9640" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9640" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="9640" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="9640" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="9642" pos:column="9">virtual <name pos:line="9642" pos:column="17">HRESULT</name> <name pos:line="9642" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9642" pos:column="43">MapToSourceSnapshots</name><argument_list pos:line="9642" pos:column="63">( 
            <comment type="block" pos:line="9643" pos:column="13">/* [in] */</comment> <argument pos:line="9643" pos:column="24">int position</argument>,
            <comment type="block" pos:line="9644" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9644" pos:column="33">IListVxSnapshotPoint **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9644" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="9644" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="9646" pos:column="9">virtual <name pos:line="9646" pos:column="17">HRESULT</name> <name pos:line="9646" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9646" pos:column="43">MapToSourceSnapshot_2</name><argument_list pos:line="9646" pos:column="64">( 
            <comment type="block" pos:line="9647" pos:column="13">/* [in] */</comment> <argument pos:line="9647" pos:column="24">int position</argument>,
            <comment type="block" pos:line="9648" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9648" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="9648" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="9648" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="9650" pos:column="9">virtual <name pos:line="9650" pos:column="17">HRESULT</name> <name pos:line="9650" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9650" pos:column="43">MapFromSourceSnapshot</name><argument_list pos:line="9650" pos:column="64">( 
            <comment type="block" pos:line="9651" pos:column="13">/* [in] */</comment> <argument pos:line="9651" pos:column="24">VxSnapshotPoint point</argument>,
            <comment type="block" pos:line="9652" pos:column="13">/* [in] */</comment> <argument pos:line="9652" pos:column="24">VxPositionAffinity affinity</argument>,
            <comment type="block" pos:line="9653" pos:column="13">/* [out] */</comment> <argument pos:line="9653" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="9654" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9654" pos:column="33">VxSnapshotPoint *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="9654" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="9654" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="9656" pos:column="9">virtual <name pos:line="9656" pos:column="17">HRESULT</name> <name pos:line="9656" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9656" pos:column="43">MapToSourceSnapshots_2</name><argument_list pos:line="9656" pos:column="65">( 
            <comment type="block" pos:line="9657" pos:column="13">/* [in] */</comment> <argument pos:line="9657" pos:column="24">VxSpan span</argument>,
            <comment type="block" pos:line="9658" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9658" pos:column="33">IListVxSnapshotSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9658" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="9658" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="9660" pos:column="9">virtual <name pos:line="9660" pos:column="17">HRESULT</name> <name pos:line="9660" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9660" pos:column="43">MapFromSourceSnapshot_2</name><argument_list pos:line="9660" pos:column="66">( 
            <comment type="block" pos:line="9661" pos:column="13">/* [in] */</comment> <argument pos:line="9661" pos:column="24">VxSnapshotSpan span</argument>,
            <comment type="block" pos:line="9662" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9662" pos:column="33">IListVxSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9662" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="9662" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9666" pos:column="1">#<cpp:directive pos:line="9666" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9666" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9668" pos:column="5">typedef <type><struct pos:line="9668" pos:column="13">struct <name pos:line="9668" pos:column="20">IVxProjectionSnapshotVtbl</name>
    <block pos:line="9669" pos:column="5">{<public type="default" pos:line="9669" pos:column="6">
        <function_decl><type><name pos:line="9670" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9672" pos:column="9">HRESULT</name></type> ( <name pos:line="9672" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9672" pos:column="37">*</type:modifier><name pos:line="9672" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9672" pos:column="54">( 
            <param><decl><type><name pos:line="9673" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9673" pos:column="35">*</type:modifier></type> <name pos:line="9673" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9674" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9674" pos:column="24">REFIID</name></type> <name pos:line="9674" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="9675" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9676" pos:column="13">__RPC__deref_out</name>  <name pos:line="9676" pos:column="31">void</name> <type:modifier pos:line="9676" pos:column="36">*</type:modifier><type:modifier pos:line="9676" pos:column="37">*</type:modifier></type><name pos:line="9676" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9678" pos:column="9">ULONG</name></type> ( <name pos:line="9678" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9678" pos:column="35">*</type:modifier><name pos:line="9678" pos:column="36">AddRef</name> )<parameter_list pos:line="9678" pos:column="44">( 
            <param><decl><type><name pos:line="9679" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9679" pos:column="35">*</type:modifier></type> <name pos:line="9679" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9681" pos:column="9">ULONG</name></type> ( <name pos:line="9681" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9681" pos:column="35">*</type:modifier><name pos:line="9681" pos:column="36">Release</name> )<parameter_list pos:line="9681" pos:column="45">( 
            <param><decl><type><name pos:line="9682" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9682" pos:column="35">*</type:modifier></type> <name pos:line="9682" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9684" pos:column="9">HRESULT</name></type> ( <name pos:line="9684" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9684" pos:column="37">*</type:modifier><name pos:line="9684" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="9684" pos:column="53">( 
            <param><decl><type><name pos:line="9685" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9685" pos:column="35">*</type:modifier></type> <name pos:line="9685" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9686" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9686" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="9686" pos:column="47">*</type:modifier><type:modifier pos:line="9686" pos:column="48">*</type:modifier></type><name pos:line="9686" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9688" pos:column="9">HRESULT</name></type> ( <name pos:line="9688" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9688" pos:column="37">*</type:modifier><name pos:line="9688" pos:column="38">GetContentType</name> )<parameter_list pos:line="9688" pos:column="54">( 
            <param><decl><type><name pos:line="9689" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9689" pos:column="35">*</type:modifier></type> <name pos:line="9689" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9690" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9690" pos:column="33">IVxContentType</name> <type:modifier pos:line="9690" pos:column="48">*</type:modifier><type:modifier pos:line="9690" pos:column="49">*</type:modifier></type><name pos:line="9690" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9692" pos:column="9">HRESULT</name></type> ( <name pos:line="9692" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9692" pos:column="37">*</type:modifier><name pos:line="9692" pos:column="38">GetVersion</name> )<parameter_list pos:line="9692" pos:column="50">( 
            <param><decl><type><name pos:line="9693" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9693" pos:column="35">*</type:modifier></type> <name pos:line="9693" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9694" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9694" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="9694" pos:column="48">*</type:modifier><type:modifier pos:line="9694" pos:column="49">*</type:modifier></type><name pos:line="9694" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9696" pos:column="9">HRESULT</name></type> ( <name pos:line="9696" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9696" pos:column="37">*</type:modifier><name pos:line="9696" pos:column="38">GetLength</name> )<parameter_list pos:line="9696" pos:column="49">( 
            <param><decl><type><name pos:line="9697" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9697" pos:column="35">*</type:modifier></type> <name pos:line="9697" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9698" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9698" pos:column="33">int</name> <type:modifier pos:line="9698" pos:column="37">*</type:modifier></type><name pos:line="9698" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9700" pos:column="9">HRESULT</name></type> ( <name pos:line="9700" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9700" pos:column="37">*</type:modifier><name pos:line="9700" pos:column="38">GetLineCount</name> )<parameter_list pos:line="9700" pos:column="52">( 
            <param><decl><type><name pos:line="9701" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9701" pos:column="35">*</type:modifier></type> <name pos:line="9701" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9702" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9702" pos:column="33">int</name> <type:modifier pos:line="9702" pos:column="37">*</type:modifier></type><name pos:line="9702" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9704" pos:column="9">HRESULT</name></type> ( <name pos:line="9704" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9704" pos:column="37">*</type:modifier><name pos:line="9704" pos:column="38">GetText</name> )<parameter_list pos:line="9704" pos:column="47">( 
            <param><decl><type><name pos:line="9705" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9705" pos:column="35">*</type:modifier></type> <name pos:line="9705" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9706" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9706" pos:column="24">VxSpan</name></type> <name pos:line="9706" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9707" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9707" pos:column="33">BSTR</name> <type:modifier pos:line="9707" pos:column="38">*</type:modifier></type><name pos:line="9707" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9709" pos:column="9">HRESULT</name></type> ( <name pos:line="9709" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9709" pos:column="37">*</type:modifier><name pos:line="9709" pos:column="38">GetText_2</name> )<parameter_list pos:line="9709" pos:column="49">( 
            <param><decl><type><name pos:line="9710" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9710" pos:column="35">*</type:modifier></type> <name pos:line="9710" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9711" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9711" pos:column="24">int</name></type> <name pos:line="9711" pos:column="28">startIndex</name></decl></param>,
            <comment type="block" pos:line="9712" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9712" pos:column="24">int</name></type> <name pos:line="9712" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="9713" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9713" pos:column="33">BSTR</name> <type:modifier pos:line="9713" pos:column="38">*</type:modifier></type><name pos:line="9713" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9715" pos:column="9">HRESULT</name></type> ( <name pos:line="9715" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9715" pos:column="37">*</type:modifier><name pos:line="9715" pos:column="38">GetText_3</name> )<parameter_list pos:line="9715" pos:column="49">( 
            <param><decl><type><name pos:line="9716" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9716" pos:column="35">*</type:modifier></type> <name pos:line="9716" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9717" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9717" pos:column="33">BSTR</name> <type:modifier pos:line="9717" pos:column="38">*</type:modifier></type><name pos:line="9717" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9719" pos:column="9">HRESULT</name></type> ( <name pos:line="9719" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9719" pos:column="37">*</type:modifier><name pos:line="9719" pos:column="38">CreateTrackingPoint</name> )<parameter_list pos:line="9719" pos:column="59">( 
            <param><decl><type><name pos:line="9720" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9720" pos:column="35">*</type:modifier></type> <name pos:line="9720" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9721" pos:column="24">int</name></type> <name pos:line="9721" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9722" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9722" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9722" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9723" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9723" pos:column="33">IVxTrackingPoint</name> <type:modifier pos:line="9723" pos:column="50">*</type:modifier><type:modifier pos:line="9723" pos:column="51">*</type:modifier></type><name pos:line="9723" pos:column="52">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9725" pos:column="9">HRESULT</name></type> ( <name pos:line="9725" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9725" pos:column="37">*</type:modifier><name pos:line="9725" pos:column="38">CreateTrackingPoint_2</name> )<parameter_list pos:line="9725" pos:column="61">( 
            <param><decl><type><name pos:line="9726" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9726" pos:column="35">*</type:modifier></type> <name pos:line="9726" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9727" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9727" pos:column="24">int</name></type> <name pos:line="9727" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9728" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9728" pos:column="24">VxPointTrackingMode</name></type> <name pos:line="9728" pos:column="44">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9729" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9729" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="9729" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="9730" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9730" pos:column="33">IVxTrackingPoint</name> <type:modifier pos:line="9730" pos:column="50">*</type:modifier><type:modifier pos:line="9730" pos:column="51">*</type:modifier></type><name pos:line="9730" pos:column="52">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9732" pos:column="9">HRESULT</name></type> ( <name pos:line="9732" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9732" pos:column="37">*</type:modifier><name pos:line="9732" pos:column="38">CreateTrackingSpan</name> )<parameter_list pos:line="9732" pos:column="58">( 
            <param><decl><type><name pos:line="9733" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9733" pos:column="35">*</type:modifier></type> <name pos:line="9733" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9734" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9734" pos:column="24">VxSpan</name></type> <name pos:line="9734" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9735" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9735" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9735" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9736" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9736" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="9736" pos:column="49">*</type:modifier><type:modifier pos:line="9736" pos:column="50">*</type:modifier></type><name pos:line="9736" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9738" pos:column="9">HRESULT</name></type> ( <name pos:line="9738" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9738" pos:column="37">*</type:modifier><name pos:line="9738" pos:column="38">CreateTrackingSpan_2</name> )<parameter_list pos:line="9738" pos:column="60">( 
            <param><decl><type><name pos:line="9739" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9739" pos:column="35">*</type:modifier></type> <name pos:line="9739" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9740" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9740" pos:column="24">VxSpan</name></type> <name pos:line="9740" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9741" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9741" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9741" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9742" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9742" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="9742" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="9743" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9743" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="9743" pos:column="49">*</type:modifier><type:modifier pos:line="9743" pos:column="50">*</type:modifier></type><name pos:line="9743" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9745" pos:column="9">HRESULT</name></type> ( <name pos:line="9745" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9745" pos:column="37">*</type:modifier><name pos:line="9745" pos:column="38">CreateTrackingSpan_3</name> )<parameter_list pos:line="9745" pos:column="60">( 
            <param><decl><type><name pos:line="9746" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9746" pos:column="35">*</type:modifier></type> <name pos:line="9746" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9747" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9747" pos:column="24">int</name></type> <name pos:line="9747" pos:column="28">start</name></decl></param>,
            <comment type="block" pos:line="9748" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9748" pos:column="24">int</name></type> <name pos:line="9748" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="9749" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9749" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9749" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9750" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9750" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="9750" pos:column="49">*</type:modifier><type:modifier pos:line="9750" pos:column="50">*</type:modifier></type><name pos:line="9750" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9752" pos:column="9">HRESULT</name></type> ( <name pos:line="9752" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9752" pos:column="37">*</type:modifier><name pos:line="9752" pos:column="38">CreateTrackingSpan_4</name> )<parameter_list pos:line="9752" pos:column="60">( 
            <param><decl><type><name pos:line="9753" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9753" pos:column="35">*</type:modifier></type> <name pos:line="9753" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9754" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9754" pos:column="24">int</name></type> <name pos:line="9754" pos:column="28">start</name></decl></param>,
            <comment type="block" pos:line="9755" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9755" pos:column="24">int</name></type> <name pos:line="9755" pos:column="28">length</name></decl></param>,
            <comment type="block" pos:line="9756" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9756" pos:column="24">VxSpanTrackingMode</name></type> <name pos:line="9756" pos:column="43">trackingMode</name></decl></param>,
            <comment type="block" pos:line="9757" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9757" pos:column="24">VxTrackingFidelityMode</name></type> <name pos:line="9757" pos:column="47">trackingFidelity</name></decl></param>,
            <comment type="block" pos:line="9758" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9758" pos:column="33">IVxTrackingSpan</name> <type:modifier pos:line="9758" pos:column="49">*</type:modifier><type:modifier pos:line="9758" pos:column="50">*</type:modifier></type><name pos:line="9758" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9760" pos:column="9">HRESULT</name></type> ( <name pos:line="9760" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9760" pos:column="37">*</type:modifier><name pos:line="9760" pos:column="38">GetLineFromLineNumber</name> )<parameter_list pos:line="9760" pos:column="61">( 
            <param><decl><type><name pos:line="9761" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9761" pos:column="35">*</type:modifier></type> <name pos:line="9761" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9762" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9762" pos:column="24">int</name></type> <name pos:line="9762" pos:column="28">lineNumber</name></decl></param>,
            <comment type="block" pos:line="9763" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9763" pos:column="33">IVxTextSnapshotLine</name> <type:modifier pos:line="9763" pos:column="53">*</type:modifier><type:modifier pos:line="9763" pos:column="54">*</type:modifier></type><name pos:line="9763" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9765" pos:column="9">HRESULT</name></type> ( <name pos:line="9765" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9765" pos:column="37">*</type:modifier><name pos:line="9765" pos:column="38">GetLineFromPosition</name> )<parameter_list pos:line="9765" pos:column="59">( 
            <param><decl><type><name pos:line="9766" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9766" pos:column="35">*</type:modifier></type> <name pos:line="9766" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9767" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9767" pos:column="24">int</name></type> <name pos:line="9767" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9768" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9768" pos:column="33">IVxTextSnapshotLine</name> <type:modifier pos:line="9768" pos:column="53">*</type:modifier><type:modifier pos:line="9768" pos:column="54">*</type:modifier></type><name pos:line="9768" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9770" pos:column="9">HRESULT</name></type> ( <name pos:line="9770" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9770" pos:column="37">*</type:modifier><name pos:line="9770" pos:column="38">GetLineNumberFromPosition</name> )<parameter_list pos:line="9770" pos:column="65">( 
            <param><decl><type><name pos:line="9771" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9771" pos:column="35">*</type:modifier></type> <name pos:line="9771" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9772" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9772" pos:column="24">int</name></type> <name pos:line="9772" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9773" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9773" pos:column="33">int</name> <type:modifier pos:line="9773" pos:column="37">*</type:modifier></type><name pos:line="9773" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9775" pos:column="9">HRESULT</name></type> ( <name pos:line="9775" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9775" pos:column="37">*</type:modifier><name pos:line="9775" pos:column="38">GetLines</name> )<parameter_list pos:line="9775" pos:column="48">( 
            <param><decl><type><name pos:line="9776" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9776" pos:column="35">*</type:modifier></type> <name pos:line="9776" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9777" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9777" pos:column="33">IEnumerableIVxTextSnapshotLine</name> <type:modifier pos:line="9777" pos:column="64">*</type:modifier><type:modifier pos:line="9777" pos:column="65">*</type:modifier></type><name pos:line="9777" pos:column="66">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9779" pos:column="9">HRESULT</name></type> ( <name pos:line="9779" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9779" pos:column="37">*</type:modifier><name pos:line="9779" pos:column="38">Write</name> )<parameter_list pos:line="9779" pos:column="45">( 
            <param><decl><type><name pos:line="9780" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9780" pos:column="35">*</type:modifier></type> <name pos:line="9780" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9781" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9781" pos:column="24">IUnknown</name> <type:modifier pos:line="9781" pos:column="33">*</type:modifier></type><name pos:line="9781" pos:column="34">pWriter</name></decl></param>,
            <comment type="block" pos:line="9782" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9782" pos:column="24">VxSpan</name></type> <name pos:line="9782" pos:column="31">span</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9784" pos:column="9">HRESULT</name></type> ( <name pos:line="9784" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9784" pos:column="37">*</type:modifier><name pos:line="9784" pos:column="38">Write_2</name> )<parameter_list pos:line="9784" pos:column="47">( 
            <param><decl><type><name pos:line="9785" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9785" pos:column="35">*</type:modifier></type> <name pos:line="9785" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9786" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9786" pos:column="24">IUnknown</name> <type:modifier pos:line="9786" pos:column="33">*</type:modifier></type><name pos:line="9786" pos:column="34">pWriter</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9788" pos:column="9">HRESULT</name></type> ( <name pos:line="9788" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9788" pos:column="37">*</type:modifier><name pos:line="9788" pos:column="38">GetTextBuffer_2</name> )<parameter_list pos:line="9788" pos:column="55">( 
            <param><decl><type><name pos:line="9789" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9789" pos:column="35">*</type:modifier></type> <name pos:line="9789" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9790" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9790" pos:column="33">IVxProjectionBufferBase</name> <type:modifier pos:line="9790" pos:column="57">*</type:modifier><type:modifier pos:line="9790" pos:column="58">*</type:modifier></type><name pos:line="9790" pos:column="59">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9792" pos:column="9">HRESULT</name></type> ( <name pos:line="9792" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9792" pos:column="37">*</type:modifier><name pos:line="9792" pos:column="38">GetSpanCount</name> )<parameter_list pos:line="9792" pos:column="52">( 
            <param><decl><type><name pos:line="9793" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9793" pos:column="35">*</type:modifier></type> <name pos:line="9793" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9794" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9794" pos:column="33">int</name> <type:modifier pos:line="9794" pos:column="37">*</type:modifier></type><name pos:line="9794" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9796" pos:column="9">HRESULT</name></type> ( <name pos:line="9796" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9796" pos:column="37">*</type:modifier><name pos:line="9796" pos:column="38">GetSourceSnapshots</name> )<parameter_list pos:line="9796" pos:column="58">( 
            <param><decl><type><name pos:line="9797" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9797" pos:column="35">*</type:modifier></type> <name pos:line="9797" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9798" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9798" pos:column="33">IListIVxTextSnapshot</name> <type:modifier pos:line="9798" pos:column="54">*</type:modifier><type:modifier pos:line="9798" pos:column="55">*</type:modifier></type><name pos:line="9798" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9800" pos:column="9">HRESULT</name></type> ( <name pos:line="9800" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9800" pos:column="37">*</type:modifier><name pos:line="9800" pos:column="38">GetMatchingSnapshot</name> )<parameter_list pos:line="9800" pos:column="59">( 
            <param><decl><type><name pos:line="9801" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9801" pos:column="35">*</type:modifier></type> <name pos:line="9801" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9802" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9802" pos:column="24">IVxTextBuffer</name> <type:modifier pos:line="9802" pos:column="38">*</type:modifier></type><name pos:line="9802" pos:column="39">pTextBuffer</name></decl></param>,
            <comment type="block" pos:line="9803" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9803" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="9803" pos:column="49">*</type:modifier><type:modifier pos:line="9803" pos:column="50">*</type:modifier></type><name pos:line="9803" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9805" pos:column="9">HRESULT</name></type> ( <name pos:line="9805" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9805" pos:column="37">*</type:modifier><name pos:line="9805" pos:column="38">GetSourceSpans</name> )<parameter_list pos:line="9805" pos:column="54">( 
            <param><decl><type><name pos:line="9806" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9806" pos:column="35">*</type:modifier></type> <name pos:line="9806" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9807" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9807" pos:column="24">int</name></type> <name pos:line="9807" pos:column="28">startSpanIndex</name></decl></param>,
            <comment type="block" pos:line="9808" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9808" pos:column="24">int</name></type> <name pos:line="9808" pos:column="28">count</name></decl></param>,
            <comment type="block" pos:line="9809" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9809" pos:column="33">IListVxSnapshotSpan</name> <type:modifier pos:line="9809" pos:column="53">*</type:modifier><type:modifier pos:line="9809" pos:column="54">*</type:modifier></type><name pos:line="9809" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9811" pos:column="9">HRESULT</name></type> ( <name pos:line="9811" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9811" pos:column="37">*</type:modifier><name pos:line="9811" pos:column="38">GetSourceSpans_2</name> )<parameter_list pos:line="9811" pos:column="56">( 
            <param><decl><type><name pos:line="9812" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9812" pos:column="35">*</type:modifier></type> <name pos:line="9812" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9813" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9813" pos:column="33">IListVxSnapshotSpan</name> <type:modifier pos:line="9813" pos:column="53">*</type:modifier><type:modifier pos:line="9813" pos:column="54">*</type:modifier></type><name pos:line="9813" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9815" pos:column="9">HRESULT</name></type> ( <name pos:line="9815" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9815" pos:column="37">*</type:modifier><name pos:line="9815" pos:column="38">MapToSourceSnapshot</name> )<parameter_list pos:line="9815" pos:column="59">( 
            <param><decl><type><name pos:line="9816" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9816" pos:column="35">*</type:modifier></type> <name pos:line="9816" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9817" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9817" pos:column="24">int</name></type> <name pos:line="9817" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9818" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9818" pos:column="24">VxPositionAffinity</name></type> <name pos:line="9818" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="9819" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9819" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9819" pos:column="49">*</type:modifier></type><name pos:line="9819" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9821" pos:column="9">HRESULT</name></type> ( <name pos:line="9821" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9821" pos:column="37">*</type:modifier><name pos:line="9821" pos:column="38">MapToSourceSnapshots</name> )<parameter_list pos:line="9821" pos:column="60">( 
            <param><decl><type><name pos:line="9822" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9822" pos:column="35">*</type:modifier></type> <name pos:line="9822" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9823" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9823" pos:column="24">int</name></type> <name pos:line="9823" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9824" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9824" pos:column="33">IListVxSnapshotPoint</name> <type:modifier pos:line="9824" pos:column="54">*</type:modifier><type:modifier pos:line="9824" pos:column="55">*</type:modifier></type><name pos:line="9824" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9826" pos:column="9">HRESULT</name></type> ( <name pos:line="9826" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9826" pos:column="37">*</type:modifier><name pos:line="9826" pos:column="38">MapToSourceSnapshot_2</name> )<parameter_list pos:line="9826" pos:column="61">( 
            <param><decl><type><name pos:line="9827" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9827" pos:column="35">*</type:modifier></type> <name pos:line="9827" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9828" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9828" pos:column="24">int</name></type> <name pos:line="9828" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="9829" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9829" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9829" pos:column="49">*</type:modifier></type><name pos:line="9829" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9831" pos:column="9">HRESULT</name></type> ( <name pos:line="9831" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9831" pos:column="37">*</type:modifier><name pos:line="9831" pos:column="38">MapFromSourceSnapshot</name> )<parameter_list pos:line="9831" pos:column="61">( 
            <param><decl><type><name pos:line="9832" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9832" pos:column="35">*</type:modifier></type> <name pos:line="9832" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9833" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9833" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="9833" pos:column="40">point</name></decl></param>,
            <comment type="block" pos:line="9834" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9834" pos:column="24">VxPositionAffinity</name></type> <name pos:line="9834" pos:column="43">affinity</name></decl></param>,
            <comment type="block" pos:line="9835" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9835" pos:column="25">BOOL</name> <type:modifier pos:line="9835" pos:column="30">*</type:modifier></type><name pos:line="9835" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="9836" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9836" pos:column="33">VxSnapshotPoint</name> <type:modifier pos:line="9836" pos:column="49">*</type:modifier></type><name pos:line="9836" pos:column="50">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9838" pos:column="9">HRESULT</name></type> ( <name pos:line="9838" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9838" pos:column="37">*</type:modifier><name pos:line="9838" pos:column="38">MapToSourceSnapshots_2</name> )<parameter_list pos:line="9838" pos:column="62">( 
            <param><decl><type><name pos:line="9839" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9839" pos:column="35">*</type:modifier></type> <name pos:line="9839" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9840" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9840" pos:column="24">VxSpan</name></type> <name pos:line="9840" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="9841" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9841" pos:column="33">IListVxSnapshotSpan</name> <type:modifier pos:line="9841" pos:column="53">*</type:modifier><type:modifier pos:line="9841" pos:column="54">*</type:modifier></type><name pos:line="9841" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9843" pos:column="9">HRESULT</name></type> ( <name pos:line="9843" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9843" pos:column="37">*</type:modifier><name pos:line="9843" pos:column="38">MapFromSourceSnapshot_2</name> )<parameter_list pos:line="9843" pos:column="63">( 
            <param><decl><type><name pos:line="9844" pos:column="13">IVxProjectionSnapshot</name> <type:modifier pos:line="9844" pos:column="35">*</type:modifier></type> <name pos:line="9844" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="9845" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9845" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="9845" pos:column="39">span</name></decl></param>,
            <comment type="block" pos:line="9846" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9846" pos:column="33">IListVxSpan</name> <type:modifier pos:line="9846" pos:column="45">*</type:modifier><type:modifier pos:line="9846" pos:column="46">*</type:modifier></type><name pos:line="9846" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9848" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9849" pos:column="7">IVxProjectionSnapshotVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9851" pos:column="5">interface</name></type> <name pos:line="9851" pos:column="15">IVxProjectionSnapshot</name>
    <argument_list pos:line="9852" pos:column="5">{
        <argument><expr><name pos:line="9853" pos:column="9">CONST_VTBL</name> struct <name pos:line="9853" pos:column="27">IVxProjectionSnapshotVtbl</name> <op:operator pos:line="9853" pos:column="53">*</op:operator><name pos:line="9853" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9858" pos:column="1">#<cpp:directive pos:line="9858" pos:column="2">ifdef</cpp:directive> <name pos:line="9858" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9861" pos:column="1">#<cpp:directive pos:line="9861" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9861" pos:column="9">IVxProjectionSnapshot_QueryInterface</name><parameter_list pos:line="9861" pos:column="45">(<param><type><name pos:line="9861" pos:column="46">This</name></type></param>,<param><type><name pos:line="9861" pos:column="51">riid</name></type></param>,<param><type><name pos:line="9861" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9862" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9864" pos:column="1">#<cpp:directive pos:line="9864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9864" pos:column="9">IVxProjectionSnapshot_AddRef</name><parameter_list pos:line="9864" pos:column="37">(<param><type><name pos:line="9864" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9865" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9867" pos:column="1">#<cpp:directive pos:line="9867" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9867" pos:column="9">IVxProjectionSnapshot_Release</name><parameter_list pos:line="9867" pos:column="38">(<param><type><name pos:line="9867" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9868" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9871" pos:column="1">#<cpp:directive pos:line="9871" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9871" pos:column="9">IVxProjectionSnapshot_GetTextBuffer</name><parameter_list pos:line="9871" pos:column="44">(<param><type><name pos:line="9871" pos:column="45">This</name></type></param>,<param><type><name pos:line="9871" pos:column="50">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9872" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9874" pos:column="1">#<cpp:directive pos:line="9874" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9874" pos:column="9">IVxProjectionSnapshot_GetContentType</name><parameter_list pos:line="9874" pos:column="45">(<param><type><name pos:line="9874" pos:column="46">This</name></type></param>,<param><type><name pos:line="9874" pos:column="51">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9875" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9877" pos:column="1">#<cpp:directive pos:line="9877" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9877" pos:column="9">IVxProjectionSnapshot_GetVersion</name><parameter_list pos:line="9877" pos:column="41">(<param><type><name pos:line="9877" pos:column="42">This</name></type></param>,<param><type><name pos:line="9877" pos:column="47">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9878" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9880" pos:column="1">#<cpp:directive pos:line="9880" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9880" pos:column="9">IVxProjectionSnapshot_GetLength</name><parameter_list pos:line="9880" pos:column="40">(<param><type><name pos:line="9880" pos:column="41">This</name></type></param>,<param><type><name pos:line="9880" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9881" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLength(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9883" pos:column="1">#<cpp:directive pos:line="9883" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9883" pos:column="9">IVxProjectionSnapshot_GetLineCount</name><parameter_list pos:line="9883" pos:column="43">(<param><type><name pos:line="9883" pos:column="44">This</name></type></param>,<param><type><name pos:line="9883" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9884" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9886" pos:column="1">#<cpp:directive pos:line="9886" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9886" pos:column="9">IVxProjectionSnapshot_GetText</name><parameter_list pos:line="9886" pos:column="38">(<param><type><name pos:line="9886" pos:column="39">This</name></type></param>,<param><type><name pos:line="9886" pos:column="44">span</name></type></param>,<param><type><name pos:line="9886" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9887" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,span,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9889" pos:column="1">#<cpp:directive pos:line="9889" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9889" pos:column="9">IVxProjectionSnapshot_GetText_2</name><parameter_list pos:line="9889" pos:column="40">(<param><type><name pos:line="9889" pos:column="41">This</name></type></param>,<param><type><name pos:line="9889" pos:column="46">startIndex</name></type></param>,<param><type><name pos:line="9889" pos:column="57">length</name></type></param>,<param><type><name pos:line="9889" pos:column="64">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9890" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText_2(This,startIndex,length,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9892" pos:column="1">#<cpp:directive pos:line="9892" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9892" pos:column="9">IVxProjectionSnapshot_GetText_3</name><parameter_list pos:line="9892" pos:column="40">(<param><type><name pos:line="9892" pos:column="41">This</name></type></param>,<param><type><name pos:line="9892" pos:column="46">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9893" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText_3(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9895" pos:column="1">#<cpp:directive pos:line="9895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9895" pos:column="9">IVxProjectionSnapshot_CreateTrackingPoint</name><parameter_list pos:line="9895" pos:column="50">(<param><type><name pos:line="9895" pos:column="51">This</name></type></param>,<param><type><name pos:line="9895" pos:column="56">position</name></type></param>,<param><type><name pos:line="9895" pos:column="65">trackingMode</name></type></param>,<param><type><name pos:line="9895" pos:column="78">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9896" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingPoint(This,position,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9898" pos:column="1">#<cpp:directive pos:line="9898" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9898" pos:column="9">IVxProjectionSnapshot_CreateTrackingPoint_2</name><parameter_list pos:line="9898" pos:column="52">(<param><type><name pos:line="9898" pos:column="53">This</name></type></param>,<param><type><name pos:line="9898" pos:column="58">position</name></type></param>,<param><type><name pos:line="9898" pos:column="67">trackingMode</name></type></param>,<param><type><name pos:line="9898" pos:column="80">trackingFidelity</name></type></param>,<param><type><name pos:line="9898" pos:column="97">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9899" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingPoint_2(This,position,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9901" pos:column="1">#<cpp:directive pos:line="9901" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9901" pos:column="9">IVxProjectionSnapshot_CreateTrackingSpan</name><parameter_list pos:line="9901" pos:column="49">(<param><type><name pos:line="9901" pos:column="50">This</name></type></param>,<param><type><name pos:line="9901" pos:column="55">span</name></type></param>,<param><type><name pos:line="9901" pos:column="60">trackingMode</name></type></param>,<param><type><name pos:line="9901" pos:column="73">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9902" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan(This,span,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9904" pos:column="1">#<cpp:directive pos:line="9904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9904" pos:column="9">IVxProjectionSnapshot_CreateTrackingSpan_2</name><parameter_list pos:line="9904" pos:column="51">(<param><type><name pos:line="9904" pos:column="52">This</name></type></param>,<param><type><name pos:line="9904" pos:column="57">span</name></type></param>,<param><type><name pos:line="9904" pos:column="62">trackingMode</name></type></param>,<param><type><name pos:line="9904" pos:column="75">trackingFidelity</name></type></param>,<param><type><name pos:line="9904" pos:column="92">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9905" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_2(This,span,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9907" pos:column="1">#<cpp:directive pos:line="9907" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9907" pos:column="9">IVxProjectionSnapshot_CreateTrackingSpan_3</name><parameter_list pos:line="9907" pos:column="51">(<param><type><name pos:line="9907" pos:column="52">This</name></type></param>,<param><type><name pos:line="9907" pos:column="57">start</name></type></param>,<param><type><name pos:line="9907" pos:column="63">length</name></type></param>,<param><type><name pos:line="9907" pos:column="70">trackingMode</name></type></param>,<param><type><name pos:line="9907" pos:column="83">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9908" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_3(This,start,length,trackingMode,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9910" pos:column="1">#<cpp:directive pos:line="9910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9910" pos:column="9">IVxProjectionSnapshot_CreateTrackingSpan_4</name><parameter_list pos:line="9910" pos:column="51">(<param><type><name pos:line="9910" pos:column="52">This</name></type></param>,<param><type><name pos:line="9910" pos:column="57">start</name></type></param>,<param><type><name pos:line="9910" pos:column="63">length</name></type></param>,<param><type><name pos:line="9910" pos:column="70">trackingMode</name></type></param>,<param><type><name pos:line="9910" pos:column="83">trackingFidelity</name></type></param>,<param><type><name pos:line="9910" pos:column="100">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9911" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTrackingSpan_4(This,start,length,trackingMode,trackingFidelity,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9913" pos:column="1">#<cpp:directive pos:line="9913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9913" pos:column="9">IVxProjectionSnapshot_GetLineFromLineNumber</name><parameter_list pos:line="9913" pos:column="52">(<param><type><name pos:line="9913" pos:column="53">This</name></type></param>,<param><type><name pos:line="9913" pos:column="58">lineNumber</name></type></param>,<param><type><name pos:line="9913" pos:column="69">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9914" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineFromLineNumber(This,lineNumber,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9916" pos:column="1">#<cpp:directive pos:line="9916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9916" pos:column="9">IVxProjectionSnapshot_GetLineFromPosition</name><parameter_list pos:line="9916" pos:column="50">(<param><type><name pos:line="9916" pos:column="51">This</name></type></param>,<param><type><name pos:line="9916" pos:column="56">position</name></type></param>,<param><type><name pos:line="9916" pos:column="65">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9917" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineFromPosition(This,position,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9919" pos:column="1">#<cpp:directive pos:line="9919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9919" pos:column="9">IVxProjectionSnapshot_GetLineNumberFromPosition</name><parameter_list pos:line="9919" pos:column="56">(<param><type><name pos:line="9919" pos:column="57">This</name></type></param>,<param><type><name pos:line="9919" pos:column="62">position</name></type></param>,<param><type><name pos:line="9919" pos:column="71">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9920" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineNumberFromPosition(This,position,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9922" pos:column="1">#<cpp:directive pos:line="9922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9922" pos:column="9">IVxProjectionSnapshot_GetLines</name><parameter_list pos:line="9922" pos:column="39">(<param><type><name pos:line="9922" pos:column="40">This</name></type></param>,<param><type><name pos:line="9922" pos:column="45">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9923" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLines(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9925" pos:column="1">#<cpp:directive pos:line="9925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9925" pos:column="9">IVxProjectionSnapshot_Write</name><parameter_list pos:line="9925" pos:column="36">(<param><type><name pos:line="9925" pos:column="37">This</name></type></param>,<param><type><name pos:line="9925" pos:column="42">pWriter</name></type></param>,<param><type><name pos:line="9925" pos:column="50">span</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9926" pos:column="5">( (This)-&gt;lpVtbl -&gt; Write(This,pWriter,span) )</cpp:value></cpp:define> 

<cpp:define pos:line="9928" pos:column="1">#<cpp:directive pos:line="9928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9928" pos:column="9">IVxProjectionSnapshot_Write_2</name><parameter_list pos:line="9928" pos:column="38">(<param><type><name pos:line="9928" pos:column="39">This</name></type></param>,<param><type><name pos:line="9928" pos:column="44">pWriter</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9929" pos:column="5">( (This)-&gt;lpVtbl -&gt; Write_2(This,pWriter) )</cpp:value></cpp:define> 


<cpp:define pos:line="9932" pos:column="1">#<cpp:directive pos:line="9932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9932" pos:column="9">IVxProjectionSnapshot_GetTextBuffer_2</name><parameter_list pos:line="9932" pos:column="46">(<param><type><name pos:line="9932" pos:column="47">This</name></type></param>,<param><type><name pos:line="9932" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9933" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9935" pos:column="1">#<cpp:directive pos:line="9935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9935" pos:column="9">IVxProjectionSnapshot_GetSpanCount</name><parameter_list pos:line="9935" pos:column="43">(<param><type><name pos:line="9935" pos:column="44">This</name></type></param>,<param><type><name pos:line="9935" pos:column="49">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9936" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanCount(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9938" pos:column="1">#<cpp:directive pos:line="9938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9938" pos:column="9">IVxProjectionSnapshot_GetSourceSnapshots</name><parameter_list pos:line="9938" pos:column="49">(<param><type><name pos:line="9938" pos:column="50">This</name></type></param>,<param><type><name pos:line="9938" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9939" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceSnapshots(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9941" pos:column="1">#<cpp:directive pos:line="9941" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9941" pos:column="9">IVxProjectionSnapshot_GetMatchingSnapshot</name><parameter_list pos:line="9941" pos:column="50">(<param><type><name pos:line="9941" pos:column="51">This</name></type></param>,<param><type><name pos:line="9941" pos:column="56">pTextBuffer</name></type></param>,<param><type><name pos:line="9941" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9942" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMatchingSnapshot(This,pTextBuffer,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9944" pos:column="1">#<cpp:directive pos:line="9944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9944" pos:column="9">IVxProjectionSnapshot_GetSourceSpans</name><parameter_list pos:line="9944" pos:column="45">(<param><type><name pos:line="9944" pos:column="46">This</name></type></param>,<param><type><name pos:line="9944" pos:column="51">startSpanIndex</name></type></param>,<param><type><name pos:line="9944" pos:column="66">count</name></type></param>,<param><type><name pos:line="9944" pos:column="72">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9945" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceSpans(This,startSpanIndex,count,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9947" pos:column="1">#<cpp:directive pos:line="9947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9947" pos:column="9">IVxProjectionSnapshot_GetSourceSpans_2</name><parameter_list pos:line="9947" pos:column="47">(<param><type><name pos:line="9947" pos:column="48">This</name></type></param>,<param><type><name pos:line="9947" pos:column="53">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9948" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceSpans_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9950" pos:column="1">#<cpp:directive pos:line="9950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9950" pos:column="9">IVxProjectionSnapshot_MapToSourceSnapshot</name><parameter_list pos:line="9950" pos:column="50">(<param><type><name pos:line="9950" pos:column="51">This</name></type></param>,<param><type><name pos:line="9950" pos:column="56">position</name></type></param>,<param><type><name pos:line="9950" pos:column="65">affinity</name></type></param>,<param><type><name pos:line="9950" pos:column="74">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9951" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToSourceSnapshot(This,position,affinity,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9953" pos:column="1">#<cpp:directive pos:line="9953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9953" pos:column="9">IVxProjectionSnapshot_MapToSourceSnapshots</name><parameter_list pos:line="9953" pos:column="51">(<param><type><name pos:line="9953" pos:column="52">This</name></type></param>,<param><type><name pos:line="9953" pos:column="57">position</name></type></param>,<param><type><name pos:line="9953" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9954" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToSourceSnapshots(This,position,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9956" pos:column="1">#<cpp:directive pos:line="9956" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9956" pos:column="9">IVxProjectionSnapshot_MapToSourceSnapshot_2</name><parameter_list pos:line="9956" pos:column="52">(<param><type><name pos:line="9956" pos:column="53">This</name></type></param>,<param><type><name pos:line="9956" pos:column="58">position</name></type></param>,<param><type><name pos:line="9956" pos:column="67">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9957" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToSourceSnapshot_2(This,position,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9959" pos:column="1">#<cpp:directive pos:line="9959" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9959" pos:column="9">IVxProjectionSnapshot_MapFromSourceSnapshot</name><parameter_list pos:line="9959" pos:column="52">(<param><type><name pos:line="9959" pos:column="53">This</name></type></param>,<param><type><name pos:line="9959" pos:column="58">point</name></type></param>,<param><type><name pos:line="9959" pos:column="64">affinity</name></type></param>,<param><type><name pos:line="9959" pos:column="73">pRetValHasValue</name></type></param>,<param><type><name pos:line="9959" pos:column="89">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9960" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapFromSourceSnapshot(This,point,affinity,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9962" pos:column="1">#<cpp:directive pos:line="9962" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9962" pos:column="9">IVxProjectionSnapshot_MapToSourceSnapshots_2</name><parameter_list pos:line="9962" pos:column="53">(<param><type><name pos:line="9962" pos:column="54">This</name></type></param>,<param><type><name pos:line="9962" pos:column="59">span</name></type></param>,<param><type><name pos:line="9962" pos:column="64">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9963" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToSourceSnapshots_2(This,span,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="9965" pos:column="1">#<cpp:directive pos:line="9965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9965" pos:column="9">IVxProjectionSnapshot_MapFromSourceSnapshot_2</name><parameter_list pos:line="9965" pos:column="54">(<param><type><name pos:line="9965" pos:column="55">This</name></type></param>,<param><type><name pos:line="9965" pos:column="60">span</name></type></param>,<param><type><name pos:line="9965" pos:column="65">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9966" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapFromSourceSnapshot_2(This,span,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9968" pos:column="1">#<cpp:directive pos:line="9968" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9968" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9971" pos:column="1">#<cpp:directive pos:line="9971" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9971" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9976" pos:column="1">#<cpp:directive pos:line="9976" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9976" pos:column="9">/* __IVxProjectionSnapshot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9979" pos:column="1">#<cpp:directive pos:line="9979" pos:column="2">ifndef</cpp:directive> <name pos:line="9979" pos:column="9">__IVxProjectionBuffer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9980" pos:column="1">#<cpp:directive pos:line="9980" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9980" pos:column="9">__IVxProjectionBuffer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9982" pos:column="1">/* interface IVxProjectionBuffer */</comment>
<comment type="block" pos:line="9983" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9986" pos:column="1">EXTERN_C</name> <specifier pos:line="9986" pos:column="10">const</specifier> <name pos:line="9986" pos:column="16">IID</name></type> <name pos:line="9986" pos:column="20">IID_IVxProjectionBuffer</name></decl>;</decl_stmt>

<cpp:if pos:line="9988" pos:column="1">#<cpp:directive pos:line="9988" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9988" pos:column="5">defined</name><argument_list pos:line="9988" pos:column="12">(<argument><expr><name pos:line="9988" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9988" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9988" pos:column="29">!</op:operator><call><name pos:line="9988" pos:column="30">defined</name><argument_list pos:line="9988" pos:column="37">(<argument><expr><name pos:line="9988" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9990" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9990" pos:column="19">(<argument pos:line="9990" pos:column="20">"d8a38847-94af-4919-aa4e-be760e66905d"</argument>)</argument_list></macro>
    <label><name pos:line="9991" pos:column="5">IVxProjectionBuffer</name> :</label> <expr_stmt><expr pos:line="9991" pos:column="27">public <name pos:line="9991" pos:column="34">IVxProjectionBufferBase</name>
    <block pos:line="9992" pos:column="5">{
    <expr pos:line="9993" pos:column="5">public<op:operator pos:line="9993" pos:column="11">:</op:operator>
        virtual <name pos:line="9994" pos:column="17">HRESULT</name> <name pos:line="9994" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9994" pos:column="43">InsertSpan</name><argument_list pos:line="9994" pos:column="53">( 
            <comment type="block" pos:line="9995" pos:column="13">/* [in] */</comment> <argument pos:line="9995" pos:column="24">int position</argument>,
            <comment type="block" pos:line="9996" pos:column="13">/* [in] */</comment> <argument pos:line="9996" pos:column="24">IVxTrackingSpan *pSpanToInsert</argument>,
            <comment type="block" pos:line="9997" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9997" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="9997" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9997" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="9999" pos:column="9">virtual <name pos:line="9999" pos:column="17">HRESULT</name> <name pos:line="9999" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9999" pos:column="43">InsertSpan_2</name><argument_list pos:line="9999" pos:column="55">( 
            <comment type="block" pos:line="10000" pos:column="13">/* [in] */</comment> <argument pos:line="10000" pos:column="24">int position</argument>,
            <comment type="block" pos:line="10001" pos:column="13">/* [in] */</comment> <argument pos:line="10001" pos:column="24">BSTR literalSpanToInsert</argument>,
            <comment type="block" pos:line="10002" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10002" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="10002" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10002" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10004" pos:column="9">virtual <name pos:line="10004" pos:column="17">HRESULT</name> <name pos:line="10004" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10004" pos:column="43">InsertSpans</name><argument_list pos:line="10004" pos:column="54">( 
            <comment type="block" pos:line="10005" pos:column="13">/* [in] */</comment> <argument pos:line="10005" pos:column="24">int position</argument>,
            <comment type="block" pos:line="10006" pos:column="13">/* [in] */</comment> <argument pos:line="10006" pos:column="24">IListIUnknown *pSpansToInsert</argument>,
            <comment type="block" pos:line="10007" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10007" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="10007" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10007" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10009" pos:column="9">virtual <name pos:line="10009" pos:column="17">HRESULT</name> <name pos:line="10009" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10009" pos:column="43">DeleteSpans</name><argument_list pos:line="10009" pos:column="54">( 
            <comment type="block" pos:line="10010" pos:column="13">/* [in] */</comment> <argument pos:line="10010" pos:column="24">int position</argument>,
            <comment type="block" pos:line="10011" pos:column="13">/* [in] */</comment> <argument pos:line="10011" pos:column="24">int spansToDelete</argument>,
            <comment type="block" pos:line="10012" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10012" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="10012" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10012" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10014" pos:column="9">virtual <name pos:line="10014" pos:column="17">HRESULT</name> <name pos:line="10014" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10014" pos:column="43">ReplaceSpans</name><argument_list pos:line="10014" pos:column="55">( 
            <comment type="block" pos:line="10015" pos:column="13">/* [in] */</comment> <argument pos:line="10015" pos:column="24">int position</argument>,
            <comment type="block" pos:line="10016" pos:column="13">/* [in] */</comment> <argument pos:line="10016" pos:column="24">int spansToReplace</argument>,
            <comment type="block" pos:line="10017" pos:column="13">/* [in] */</comment> <argument pos:line="10017" pos:column="24">IListIUnknown *pSpansToInsert</argument>,
            <comment type="block" pos:line="10018" pos:column="13">/* [in] */</comment> <argument pos:line="10018" pos:column="24">VxEditOptions options</argument>,
            <comment type="block" pos:line="10019" pos:column="13">/* [in] */</comment> <argument pos:line="10019" pos:column="24">IUnknown *pEditTag</argument>,
            <comment type="block" pos:line="10020" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10020" pos:column="33">IVxProjectionSnapshot **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="10020" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10020" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10022" pos:column="9">virtual <name pos:line="10022" pos:column="17">HRESULT</name> <name pos:line="10022" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10022" pos:column="43">AdviseSourceSpansChanged</name><argument_list pos:line="10022" pos:column="67">( 
            <comment type="block" pos:line="10023" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="10023" pos:column="24">IVxProjectionSourceSpansChangedEvent</name> <op:operator pos:line="10023" pos:column="61">*</op:operator><name pos:line="10023" pos:column="62">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="10023" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="10023" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="10025" pos:column="9">virtual <name pos:line="10025" pos:column="17">HRESULT</name> <name pos:line="10025" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10025" pos:column="43">UnadviseSourceSpansChanged</name><argument_list pos:line="10025" pos:column="69">( 
            <comment type="block" pos:line="10026" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="10026" pos:column="24">IVxProjectionSourceSpansChangedEvent</name> <op:operator pos:line="10026" pos:column="61">*</op:operator><name pos:line="10026" pos:column="62">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="10026" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="10026" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="10028" pos:column="9">virtual <name pos:line="10028" pos:column="17">HRESULT</name> <name pos:line="10028" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10028" pos:column="43">AdviseSourceBuffersChanged</name><argument_list pos:line="10028" pos:column="69">( 
            <comment type="block" pos:line="10029" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="10029" pos:column="24">IVxProjectionSourceBuffersChangedEvent</name> <op:operator pos:line="10029" pos:column="63">*</op:operator><name pos:line="10029" pos:column="64">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="10029" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="10029" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="10031" pos:column="9">virtual <name pos:line="10031" pos:column="17">HRESULT</name> <name pos:line="10031" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10031" pos:column="43">UnadviseSourceBuffersChanged</name><argument_list pos:line="10031" pos:column="71">( 
            <comment type="block" pos:line="10032" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="10032" pos:column="24">IVxProjectionSourceBuffersChangedEvent</name> <op:operator pos:line="10032" pos:column="63">*</op:operator><name pos:line="10032" pos:column="64">pValue</name></expr></argument>)</argument_list></call> <op:operator pos:line="10032" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="10032" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10036" pos:column="1">#<cpp:directive pos:line="10036" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10036" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10038" pos:column="5">typedef <type><struct pos:line="10038" pos:column="13">struct <name pos:line="10038" pos:column="20">IVxProjectionBufferVtbl</name>
    <block pos:line="10039" pos:column="5">{<public type="default" pos:line="10039" pos:column="6">
        <function_decl><type><name pos:line="10040" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10042" pos:column="9">HRESULT</name></type> ( <name pos:line="10042" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10042" pos:column="37">*</type:modifier><name pos:line="10042" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10042" pos:column="54">( 
            <param><decl><type><name pos:line="10043" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10043" pos:column="33">*</type:modifier></type> <name pos:line="10043" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10044" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10044" pos:column="24">REFIID</name></type> <name pos:line="10044" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10045" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10046" pos:column="13">__RPC__deref_out</name>  <name pos:line="10046" pos:column="31">void</name> <type:modifier pos:line="10046" pos:column="36">*</type:modifier><type:modifier pos:line="10046" pos:column="37">*</type:modifier></type><name pos:line="10046" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10048" pos:column="9">ULONG</name></type> ( <name pos:line="10048" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10048" pos:column="35">*</type:modifier><name pos:line="10048" pos:column="36">AddRef</name> )<parameter_list pos:line="10048" pos:column="44">( 
            <param><decl><type><name pos:line="10049" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10049" pos:column="33">*</type:modifier></type> <name pos:line="10049" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10051" pos:column="9">ULONG</name></type> ( <name pos:line="10051" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10051" pos:column="35">*</type:modifier><name pos:line="10051" pos:column="36">Release</name> )<parameter_list pos:line="10051" pos:column="45">( 
            <param><decl><type><name pos:line="10052" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10052" pos:column="33">*</type:modifier></type> <name pos:line="10052" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10054" pos:column="9">HRESULT</name></type> ( <name pos:line="10054" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10054" pos:column="37">*</type:modifier><name pos:line="10054" pos:column="38">GetProperties</name> )<parameter_list pos:line="10054" pos:column="53">( 
            <param><decl><type><name pos:line="10055" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10055" pos:column="33">*</type:modifier></type> <name pos:line="10055" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10056" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10056" pos:column="33">IVxPropertyCollection</name> <type:modifier pos:line="10056" pos:column="55">*</type:modifier><type:modifier pos:line="10056" pos:column="56">*</type:modifier></type><name pos:line="10056" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10058" pos:column="9">HRESULT</name></type> ( <name pos:line="10058" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10058" pos:column="37">*</type:modifier><name pos:line="10058" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="10058" pos:column="50">( 
            <param><decl><type><name pos:line="10059" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10059" pos:column="33">*</type:modifier></type> <name pos:line="10059" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10060" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10060" pos:column="24">VxSpan</name></type> <name pos:line="10060" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="10061" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10061" pos:column="33">BOOL</name> <type:modifier pos:line="10061" pos:column="38">*</type:modifier></type><name pos:line="10061" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10063" pos:column="9">HRESULT</name></type> ( <name pos:line="10063" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10063" pos:column="37">*</type:modifier><name pos:line="10063" pos:column="38">IsReadOnly_2</name> )<parameter_list pos:line="10063" pos:column="52">( 
            <param><decl><type><name pos:line="10064" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10064" pos:column="33">*</type:modifier></type> <name pos:line="10064" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10065" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10065" pos:column="24">VxSpan</name></type> <name pos:line="10065" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="10066" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10066" pos:column="24">BOOL</name></type> <name pos:line="10066" pos:column="29">isEdit</name></decl></param>,
            <comment type="block" pos:line="10067" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10067" pos:column="33">BOOL</name> <type:modifier pos:line="10067" pos:column="38">*</type:modifier></type><name pos:line="10067" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10069" pos:column="9">HRESULT</name></type> ( <name pos:line="10069" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10069" pos:column="37">*</type:modifier><name pos:line="10069" pos:column="38">GetReadOnlyExtents</name> )<parameter_list pos:line="10069" pos:column="58">( 
            <param><decl><type><name pos:line="10070" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10070" pos:column="33">*</type:modifier></type> <name pos:line="10070" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10071" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10071" pos:column="24">VxSpan</name></type> <name pos:line="10071" pos:column="31">span</name></decl></param>,
            <comment type="block" pos:line="10072" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10072" pos:column="33">IVxNormalizedSpanCollection</name> <type:modifier pos:line="10072" pos:column="61">*</type:modifier><type:modifier pos:line="10072" pos:column="62">*</type:modifier></type><name pos:line="10072" pos:column="63">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10074" pos:column="9">HRESULT</name></type> ( <name pos:line="10074" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10074" pos:column="37">*</type:modifier><name pos:line="10074" pos:column="38">GetContentType</name> )<parameter_list pos:line="10074" pos:column="54">( 
            <param><decl><type><name pos:line="10075" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10075" pos:column="33">*</type:modifier></type> <name pos:line="10075" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10076" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10076" pos:column="33">IVxContentType</name> <type:modifier pos:line="10076" pos:column="48">*</type:modifier><type:modifier pos:line="10076" pos:column="49">*</type:modifier></type><name pos:line="10076" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10078" pos:column="9">HRESULT</name></type> ( <name pos:line="10078" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10078" pos:column="37">*</type:modifier><name pos:line="10078" pos:column="38">GetCurrentSnapshot</name> )<parameter_list pos:line="10078" pos:column="58">( 
            <param><decl><type><name pos:line="10079" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10079" pos:column="33">*</type:modifier></type> <name pos:line="10079" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10080" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10080" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10080" pos:column="49">*</type:modifier><type:modifier pos:line="10080" pos:column="50">*</type:modifier></type><name pos:line="10080" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10082" pos:column="9">HRESULT</name></type> ( <name pos:line="10082" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10082" pos:column="37">*</type:modifier><name pos:line="10082" pos:column="38">CreateEdit</name> )<parameter_list pos:line="10082" pos:column="50">( 
            <param><decl><type><name pos:line="10083" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10083" pos:column="33">*</type:modifier></type> <name pos:line="10083" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10084" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10084" pos:column="24">VxEditOptions</name></type> <name pos:line="10084" pos:column="38">options</name></decl></param>,
            <comment type="block" pos:line="10085" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10085" pos:column="24">BOOL</name></type> <name pos:line="10085" pos:column="29">reiteratedVersionNumberHasValue</name></decl></param>,
            <comment type="block" pos:line="10086" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10086" pos:column="24">int</name></type> <name pos:line="10086" pos:column="28">reiteratedVersionNumber</name></decl></param>,
            <comment type="block" pos:line="10087" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10087" pos:column="24">IUnknown</name> <type:modifier pos:line="10087" pos:column="33">*</type:modifier></type><name pos:line="10087" pos:column="34">pEditTag</name></decl></param>,
            <comment type="block" pos:line="10088" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10088" pos:column="33">IVxTextEdit</name> <type:modifier pos:line="10088" pos:column="45">*</type:modifier><type:modifier pos:line="10088" pos:column="46">*</type:modifier></type><name pos:line="10088" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10090" pos:column="9">HRESULT</name></type> ( <name pos:line="10090" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10090" pos:column="37">*</type:modifier><name pos:line="10090" pos:column="38">CreateEdit_2</name> )<parameter_list pos:line="10090" pos:column="52">( 
            <param><decl><type><name pos:line="10091" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10091" pos:column="33">*</type:modifier></type> <name pos:line="10091" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10092" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10092" pos:column="33">IVxTextEdit</name> <type:modifier pos:line="10092" pos:column="45">*</type:modifier><type:modifier pos:line="10092" pos:column="46">*</type:modifier></type><name pos:line="10092" pos:column="47">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10094" pos:column="9">HRESULT</name></type> ( <name pos:line="10094" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10094" pos:column="37">*</type:modifier><name pos:line="10094" pos:column="38">CreateReadOnlyRegionEdit</name> )<parameter_list pos:line="10094" pos:column="64">( 
            <param><decl><type><name pos:line="10095" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10095" pos:column="33">*</type:modifier></type> <name pos:line="10095" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10096" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10096" pos:column="33">IVxReadOnlyRegionEdit</name> <type:modifier pos:line="10096" pos:column="55">*</type:modifier><type:modifier pos:line="10096" pos:column="56">*</type:modifier></type><name pos:line="10096" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10098" pos:column="9">HRESULT</name></type> ( <name pos:line="10098" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10098" pos:column="37">*</type:modifier><name pos:line="10098" pos:column="38">GetEditInProgress</name> )<parameter_list pos:line="10098" pos:column="57">( 
            <param><decl><type><name pos:line="10099" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10099" pos:column="33">*</type:modifier></type> <name pos:line="10099" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10100" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10100" pos:column="33">BOOL</name> <type:modifier pos:line="10100" pos:column="38">*</type:modifier></type><name pos:line="10100" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10102" pos:column="9">HRESULT</name></type> ( <name pos:line="10102" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10102" pos:column="37">*</type:modifier><name pos:line="10102" pos:column="38">TakeThreadOwnership</name> )<parameter_list pos:line="10102" pos:column="59">( 
            <param><decl><type><name pos:line="10103" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10103" pos:column="33">*</type:modifier></type> <name pos:line="10103" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10105" pos:column="9">HRESULT</name></type> ( <name pos:line="10105" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10105" pos:column="37">*</type:modifier><name pos:line="10105" pos:column="38">CheckEditAccess</name> )<parameter_list pos:line="10105" pos:column="55">( 
            <param><decl><type><name pos:line="10106" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10106" pos:column="33">*</type:modifier></type> <name pos:line="10106" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10107" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10107" pos:column="33">BOOL</name> <type:modifier pos:line="10107" pos:column="38">*</type:modifier></type><name pos:line="10107" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10109" pos:column="9">HRESULT</name></type> ( <name pos:line="10109" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10109" pos:column="37">*</type:modifier><name pos:line="10109" pos:column="38">AdviseReadOnlyRegionsChanged</name> )<parameter_list pos:line="10109" pos:column="68">( 
            <param><decl><type><name pos:line="10110" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10110" pos:column="33">*</type:modifier></type> <name pos:line="10110" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10111" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10111" pos:column="24">IVxSnapshotSpanEvent</name> <type:modifier pos:line="10111" pos:column="45">*</type:modifier></type><name pos:line="10111" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10113" pos:column="9">HRESULT</name></type> ( <name pos:line="10113" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10113" pos:column="37">*</type:modifier><name pos:line="10113" pos:column="38">UnadviseReadOnlyRegionsChanged</name> )<parameter_list pos:line="10113" pos:column="70">( 
            <param><decl><type><name pos:line="10114" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10114" pos:column="33">*</type:modifier></type> <name pos:line="10114" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10115" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10115" pos:column="24">IVxSnapshotSpanEvent</name> <type:modifier pos:line="10115" pos:column="45">*</type:modifier></type><name pos:line="10115" pos:column="46">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10117" pos:column="9">HRESULT</name></type> ( <name pos:line="10117" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10117" pos:column="37">*</type:modifier><name pos:line="10117" pos:column="38">AdviseChanged</name> )<parameter_list pos:line="10117" pos:column="53">( 
            <param><decl><type><name pos:line="10118" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10118" pos:column="33">*</type:modifier></type> <name pos:line="10118" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10119" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10119" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="10119" pos:column="51">*</type:modifier></type><name pos:line="10119" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10121" pos:column="9">HRESULT</name></type> ( <name pos:line="10121" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10121" pos:column="37">*</type:modifier><name pos:line="10121" pos:column="38">UnadviseChanged</name> )<parameter_list pos:line="10121" pos:column="55">( 
            <param><decl><type><name pos:line="10122" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10122" pos:column="33">*</type:modifier></type> <name pos:line="10122" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10123" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10123" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="10123" pos:column="51">*</type:modifier></type><name pos:line="10123" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10125" pos:column="9">HRESULT</name></type> ( <name pos:line="10125" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10125" pos:column="37">*</type:modifier><name pos:line="10125" pos:column="38">AdviseChangedLowPriority</name> )<parameter_list pos:line="10125" pos:column="64">( 
            <param><decl><type><name pos:line="10126" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10126" pos:column="33">*</type:modifier></type> <name pos:line="10126" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10127" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10127" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="10127" pos:column="51">*</type:modifier></type><name pos:line="10127" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10129" pos:column="9">HRESULT</name></type> ( <name pos:line="10129" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10129" pos:column="37">*</type:modifier><name pos:line="10129" pos:column="38">UnadviseChangedLowPriority</name> )<parameter_list pos:line="10129" pos:column="66">( 
            <param><decl><type><name pos:line="10130" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10130" pos:column="33">*</type:modifier></type> <name pos:line="10130" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10131" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10131" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="10131" pos:column="51">*</type:modifier></type><name pos:line="10131" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10133" pos:column="9">HRESULT</name></type> ( <name pos:line="10133" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10133" pos:column="37">*</type:modifier><name pos:line="10133" pos:column="38">AdviseChangedHighPriority</name> )<parameter_list pos:line="10133" pos:column="65">( 
            <param><decl><type><name pos:line="10134" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10134" pos:column="33">*</type:modifier></type> <name pos:line="10134" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10135" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10135" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="10135" pos:column="51">*</type:modifier></type><name pos:line="10135" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10137" pos:column="9">HRESULT</name></type> ( <name pos:line="10137" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10137" pos:column="37">*</type:modifier><name pos:line="10137" pos:column="38">UnadviseChangedHighPriority</name> )<parameter_list pos:line="10137" pos:column="67">( 
            <param><decl><type><name pos:line="10138" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10138" pos:column="33">*</type:modifier></type> <name pos:line="10138" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10139" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10139" pos:column="24">IVxTextContentChangedEvent</name> <type:modifier pos:line="10139" pos:column="51">*</type:modifier></type><name pos:line="10139" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10141" pos:column="9">HRESULT</name></type> ( <name pos:line="10141" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10141" pos:column="37">*</type:modifier><name pos:line="10141" pos:column="38">AdviseChanging</name> )<parameter_list pos:line="10141" pos:column="54">( 
            <param><decl><type><name pos:line="10142" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10142" pos:column="33">*</type:modifier></type> <name pos:line="10142" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10143" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10143" pos:column="24">IVxTextContentChangingEvent</name> <type:modifier pos:line="10143" pos:column="52">*</type:modifier></type><name pos:line="10143" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10145" pos:column="9">HRESULT</name></type> ( <name pos:line="10145" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10145" pos:column="37">*</type:modifier><name pos:line="10145" pos:column="38">UnadviseChanging</name> )<parameter_list pos:line="10145" pos:column="56">( 
            <param><decl><type><name pos:line="10146" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10146" pos:column="33">*</type:modifier></type> <name pos:line="10146" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10147" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10147" pos:column="24">IVxTextContentChangingEvent</name> <type:modifier pos:line="10147" pos:column="52">*</type:modifier></type><name pos:line="10147" pos:column="53">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10149" pos:column="9">HRESULT</name></type> ( <name pos:line="10149" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10149" pos:column="37">*</type:modifier><name pos:line="10149" pos:column="38">AdvisePostChanged</name> )<parameter_list pos:line="10149" pos:column="57">( 
            <param><decl><type><name pos:line="10150" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10150" pos:column="33">*</type:modifier></type> <name pos:line="10150" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10151" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10151" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="10151" pos:column="42">*</type:modifier></type><name pos:line="10151" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10153" pos:column="9">HRESULT</name></type> ( <name pos:line="10153" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10153" pos:column="37">*</type:modifier><name pos:line="10153" pos:column="38">UnadvisePostChanged</name> )<parameter_list pos:line="10153" pos:column="59">( 
            <param><decl><type><name pos:line="10154" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10154" pos:column="33">*</type:modifier></type> <name pos:line="10154" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10155" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10155" pos:column="24">IVxEventArgsEvent</name> <type:modifier pos:line="10155" pos:column="42">*</type:modifier></type><name pos:line="10155" pos:column="43">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10157" pos:column="9">HRESULT</name></type> ( <name pos:line="10157" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10157" pos:column="37">*</type:modifier><name pos:line="10157" pos:column="38">AdviseContentTypeChanged</name> )<parameter_list pos:line="10157" pos:column="64">( 
            <param><decl><type><name pos:line="10158" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10158" pos:column="33">*</type:modifier></type> <name pos:line="10158" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10159" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10159" pos:column="24">IVxContentTypeChangedEvent</name> <type:modifier pos:line="10159" pos:column="51">*</type:modifier></type><name pos:line="10159" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10161" pos:column="9">HRESULT</name></type> ( <name pos:line="10161" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10161" pos:column="37">*</type:modifier><name pos:line="10161" pos:column="38">UnadviseContentTypeChanged</name> )<parameter_list pos:line="10161" pos:column="66">( 
            <param><decl><type><name pos:line="10162" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10162" pos:column="33">*</type:modifier></type> <name pos:line="10162" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10163" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10163" pos:column="24">IVxContentTypeChangedEvent</name> <type:modifier pos:line="10163" pos:column="51">*</type:modifier></type><name pos:line="10163" pos:column="52">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10165" pos:column="9">HRESULT</name></type> ( <name pos:line="10165" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10165" pos:column="37">*</type:modifier><name pos:line="10165" pos:column="38">ChangeContentType</name> )<parameter_list pos:line="10165" pos:column="57">( 
            <param><decl><type><name pos:line="10166" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10166" pos:column="33">*</type:modifier></type> <name pos:line="10166" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10167" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10167" pos:column="24">IVxContentType</name> <type:modifier pos:line="10167" pos:column="39">*</type:modifier></type><name pos:line="10167" pos:column="40">pNewContentType</name></decl></param>,
            <comment type="block" pos:line="10168" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10168" pos:column="24">IUnknown</name> <type:modifier pos:line="10168" pos:column="33">*</type:modifier></type><name pos:line="10168" pos:column="34">pEditTag</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10170" pos:column="9">HRESULT</name></type> ( <name pos:line="10170" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10170" pos:column="37">*</type:modifier><name pos:line="10170" pos:column="38">Insert</name> )<parameter_list pos:line="10170" pos:column="46">( 
            <param><decl><type><name pos:line="10171" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10171" pos:column="33">*</type:modifier></type> <name pos:line="10171" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10172" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10172" pos:column="24">int</name></type> <name pos:line="10172" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10173" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10173" pos:column="24">BSTR</name></type> <name pos:line="10173" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="10174" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10174" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10174" pos:column="49">*</type:modifier><type:modifier pos:line="10174" pos:column="50">*</type:modifier></type><name pos:line="10174" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10176" pos:column="9">HRESULT</name></type> ( <name pos:line="10176" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10176" pos:column="37">*</type:modifier><name pos:line="10176" pos:column="38">Delete</name> )<parameter_list pos:line="10176" pos:column="46">( 
            <param><decl><type><name pos:line="10177" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10177" pos:column="33">*</type:modifier></type> <name pos:line="10177" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10178" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10178" pos:column="24">VxSpan</name></type> <name pos:line="10178" pos:column="31">deleteSpan</name></decl></param>,
            <comment type="block" pos:line="10179" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10179" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10179" pos:column="49">*</type:modifier><type:modifier pos:line="10179" pos:column="50">*</type:modifier></type><name pos:line="10179" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10181" pos:column="9">HRESULT</name></type> ( <name pos:line="10181" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10181" pos:column="37">*</type:modifier><name pos:line="10181" pos:column="38">Replace</name> )<parameter_list pos:line="10181" pos:column="47">( 
            <param><decl><type><name pos:line="10182" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10182" pos:column="33">*</type:modifier></type> <name pos:line="10182" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10183" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10183" pos:column="24">VxSpan</name></type> <name pos:line="10183" pos:column="31">replaceSpan</name></decl></param>,
            <comment type="block" pos:line="10184" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10184" pos:column="24">BSTR</name></type> <name pos:line="10184" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="10185" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10185" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10185" pos:column="49">*</type:modifier><type:modifier pos:line="10185" pos:column="50">*</type:modifier></type><name pos:line="10185" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10187" pos:column="9">HRESULT</name></type> ( <name pos:line="10187" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10187" pos:column="37">*</type:modifier><name pos:line="10187" pos:column="38">IsReadOnly_3</name> )<parameter_list pos:line="10187" pos:column="52">( 
            <param><decl><type><name pos:line="10188" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10188" pos:column="33">*</type:modifier></type> <name pos:line="10188" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10189" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10189" pos:column="24">int</name></type> <name pos:line="10189" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10190" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10190" pos:column="33">BOOL</name> <type:modifier pos:line="10190" pos:column="38">*</type:modifier></type><name pos:line="10190" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10192" pos:column="9">HRESULT</name></type> ( <name pos:line="10192" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10192" pos:column="37">*</type:modifier><name pos:line="10192" pos:column="38">IsReadOnly_4</name> )<parameter_list pos:line="10192" pos:column="52">( 
            <param><decl><type><name pos:line="10193" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10193" pos:column="33">*</type:modifier></type> <name pos:line="10193" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10194" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10194" pos:column="24">int</name></type> <name pos:line="10194" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10195" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10195" pos:column="24">BOOL</name></type> <name pos:line="10195" pos:column="29">isEdit</name></decl></param>,
            <comment type="block" pos:line="10196" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10196" pos:column="33">BOOL</name> <type:modifier pos:line="10196" pos:column="38">*</type:modifier></type><name pos:line="10196" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10198" pos:column="9">HRESULT</name></type> ( <name pos:line="10198" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10198" pos:column="37">*</type:modifier><name pos:line="10198" pos:column="38">GetCurrentSnapshot_2</name> )<parameter_list pos:line="10198" pos:column="60">( 
            <param><decl><type><name pos:line="10199" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10199" pos:column="33">*</type:modifier></type> <name pos:line="10199" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10200" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10200" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10200" pos:column="55">*</type:modifier><type:modifier pos:line="10200" pos:column="56">*</type:modifier></type><name pos:line="10200" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10202" pos:column="9">HRESULT</name></type> ( <name pos:line="10202" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10202" pos:column="37">*</type:modifier><name pos:line="10202" pos:column="38">GetSourceBuffers</name> )<parameter_list pos:line="10202" pos:column="56">( 
            <param><decl><type><name pos:line="10203" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10203" pos:column="33">*</type:modifier></type> <name pos:line="10203" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10204" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10204" pos:column="33">IListIVxTextBuffer</name> <type:modifier pos:line="10204" pos:column="52">*</type:modifier><type:modifier pos:line="10204" pos:column="53">*</type:modifier></type><name pos:line="10204" pos:column="54">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10206" pos:column="9">HRESULT</name></type> ( <name pos:line="10206" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10206" pos:column="37">*</type:modifier><name pos:line="10206" pos:column="38">Insert_2</name> )<parameter_list pos:line="10206" pos:column="48">( 
            <param><decl><type><name pos:line="10207" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10207" pos:column="33">*</type:modifier></type> <name pos:line="10207" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10208" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10208" pos:column="24">int</name></type> <name pos:line="10208" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10209" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10209" pos:column="24">BSTR</name></type> <name pos:line="10209" pos:column="29">text</name></decl></param>,
            <comment type="block" pos:line="10210" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10210" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10210" pos:column="55">*</type:modifier><type:modifier pos:line="10210" pos:column="56">*</type:modifier></type><name pos:line="10210" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10212" pos:column="9">HRESULT</name></type> ( <name pos:line="10212" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10212" pos:column="37">*</type:modifier><name pos:line="10212" pos:column="38">Delete_2</name> )<parameter_list pos:line="10212" pos:column="48">( 
            <param><decl><type><name pos:line="10213" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10213" pos:column="33">*</type:modifier></type> <name pos:line="10213" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10214" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10214" pos:column="24">VxSpan</name></type> <name pos:line="10214" pos:column="31">deleteSpan</name></decl></param>,
            <comment type="block" pos:line="10215" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10215" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10215" pos:column="55">*</type:modifier><type:modifier pos:line="10215" pos:column="56">*</type:modifier></type><name pos:line="10215" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10217" pos:column="9">HRESULT</name></type> ( <name pos:line="10217" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10217" pos:column="37">*</type:modifier><name pos:line="10217" pos:column="38">Replace_2</name> )<parameter_list pos:line="10217" pos:column="49">( 
            <param><decl><type><name pos:line="10218" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10218" pos:column="33">*</type:modifier></type> <name pos:line="10218" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10219" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10219" pos:column="24">VxSpan</name></type> <name pos:line="10219" pos:column="31">replaceSpan</name></decl></param>,
            <comment type="block" pos:line="10220" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10220" pos:column="24">BSTR</name></type> <name pos:line="10220" pos:column="29">replaceWith</name></decl></param>,
            <comment type="block" pos:line="10221" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10221" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10221" pos:column="55">*</type:modifier><type:modifier pos:line="10221" pos:column="56">*</type:modifier></type><name pos:line="10221" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10223" pos:column="9">HRESULT</name></type> ( <name pos:line="10223" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10223" pos:column="37">*</type:modifier><name pos:line="10223" pos:column="38">InsertSpan</name> )<parameter_list pos:line="10223" pos:column="50">( 
            <param><decl><type><name pos:line="10224" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10224" pos:column="33">*</type:modifier></type> <name pos:line="10224" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10225" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10225" pos:column="24">int</name></type> <name pos:line="10225" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10226" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10226" pos:column="24">IVxTrackingSpan</name> <type:modifier pos:line="10226" pos:column="40">*</type:modifier></type><name pos:line="10226" pos:column="41">pSpanToInsert</name></decl></param>,
            <comment type="block" pos:line="10227" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10227" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10227" pos:column="55">*</type:modifier><type:modifier pos:line="10227" pos:column="56">*</type:modifier></type><name pos:line="10227" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10229" pos:column="9">HRESULT</name></type> ( <name pos:line="10229" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10229" pos:column="37">*</type:modifier><name pos:line="10229" pos:column="38">InsertSpan_2</name> )<parameter_list pos:line="10229" pos:column="52">( 
            <param><decl><type><name pos:line="10230" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10230" pos:column="33">*</type:modifier></type> <name pos:line="10230" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10231" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10231" pos:column="24">int</name></type> <name pos:line="10231" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10232" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10232" pos:column="24">BSTR</name></type> <name pos:line="10232" pos:column="29">literalSpanToInsert</name></decl></param>,
            <comment type="block" pos:line="10233" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10233" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10233" pos:column="55">*</type:modifier><type:modifier pos:line="10233" pos:column="56">*</type:modifier></type><name pos:line="10233" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10235" pos:column="9">HRESULT</name></type> ( <name pos:line="10235" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10235" pos:column="37">*</type:modifier><name pos:line="10235" pos:column="38">InsertSpans</name> )<parameter_list pos:line="10235" pos:column="51">( 
            <param><decl><type><name pos:line="10236" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10236" pos:column="33">*</type:modifier></type> <name pos:line="10236" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10237" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10237" pos:column="24">int</name></type> <name pos:line="10237" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10238" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10238" pos:column="24">IListIUnknown</name> <type:modifier pos:line="10238" pos:column="38">*</type:modifier></type><name pos:line="10238" pos:column="39">pSpansToInsert</name></decl></param>,
            <comment type="block" pos:line="10239" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10239" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10239" pos:column="55">*</type:modifier><type:modifier pos:line="10239" pos:column="56">*</type:modifier></type><name pos:line="10239" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10241" pos:column="9">HRESULT</name></type> ( <name pos:line="10241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10241" pos:column="37">*</type:modifier><name pos:line="10241" pos:column="38">DeleteSpans</name> )<parameter_list pos:line="10241" pos:column="51">( 
            <param><decl><type><name pos:line="10242" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10242" pos:column="33">*</type:modifier></type> <name pos:line="10242" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10243" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10243" pos:column="24">int</name></type> <name pos:line="10243" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10244" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10244" pos:column="24">int</name></type> <name pos:line="10244" pos:column="28">spansToDelete</name></decl></param>,
            <comment type="block" pos:line="10245" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10245" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10245" pos:column="55">*</type:modifier><type:modifier pos:line="10245" pos:column="56">*</type:modifier></type><name pos:line="10245" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10247" pos:column="9">HRESULT</name></type> ( <name pos:line="10247" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10247" pos:column="37">*</type:modifier><name pos:line="10247" pos:column="38">ReplaceSpans</name> )<parameter_list pos:line="10247" pos:column="52">( 
            <param><decl><type><name pos:line="10248" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10248" pos:column="33">*</type:modifier></type> <name pos:line="10248" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10249" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10249" pos:column="24">int</name></type> <name pos:line="10249" pos:column="28">position</name></decl></param>,
            <comment type="block" pos:line="10250" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10250" pos:column="24">int</name></type> <name pos:line="10250" pos:column="28">spansToReplace</name></decl></param>,
            <comment type="block" pos:line="10251" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10251" pos:column="24">IListIUnknown</name> <type:modifier pos:line="10251" pos:column="38">*</type:modifier></type><name pos:line="10251" pos:column="39">pSpansToInsert</name></decl></param>,
            <comment type="block" pos:line="10252" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10252" pos:column="24">VxEditOptions</name></type> <name pos:line="10252" pos:column="38">options</name></decl></param>,
            <comment type="block" pos:line="10253" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10253" pos:column="24">IUnknown</name> <type:modifier pos:line="10253" pos:column="33">*</type:modifier></type><name pos:line="10253" pos:column="34">pEditTag</name></decl></param>,
            <comment type="block" pos:line="10254" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10254" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10254" pos:column="55">*</type:modifier><type:modifier pos:line="10254" pos:column="56">*</type:modifier></type><name pos:line="10254" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10256" pos:column="9">HRESULT</name></type> ( <name pos:line="10256" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10256" pos:column="37">*</type:modifier><name pos:line="10256" pos:column="38">AdviseSourceSpansChanged</name> )<parameter_list pos:line="10256" pos:column="64">( 
            <param><decl><type><name pos:line="10257" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10257" pos:column="33">*</type:modifier></type> <name pos:line="10257" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10258" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10258" pos:column="24">IVxProjectionSourceSpansChangedEvent</name> <type:modifier pos:line="10258" pos:column="61">*</type:modifier></type><name pos:line="10258" pos:column="62">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10260" pos:column="9">HRESULT</name></type> ( <name pos:line="10260" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10260" pos:column="37">*</type:modifier><name pos:line="10260" pos:column="38">UnadviseSourceSpansChanged</name> )<parameter_list pos:line="10260" pos:column="66">( 
            <param><decl><type><name pos:line="10261" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10261" pos:column="33">*</type:modifier></type> <name pos:line="10261" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10262" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10262" pos:column="24">IVxProjectionSourceSpansChangedEvent</name> <type:modifier pos:line="10262" pos:column="61">*</type:modifier></type><name pos:line="10262" pos:column="62">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10264" pos:column="9">HRESULT</name></type> ( <name pos:line="10264" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10264" pos:column="37">*</type:modifier><name pos:line="10264" pos:column="38">AdviseSourceBuffersChanged</name> )<parameter_list pos:line="10264" pos:column="66">( 
            <param><decl><type><name pos:line="10265" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10265" pos:column="33">*</type:modifier></type> <name pos:line="10265" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10266" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10266" pos:column="24">IVxProjectionSourceBuffersChangedEvent</name> <type:modifier pos:line="10266" pos:column="63">*</type:modifier></type><name pos:line="10266" pos:column="64">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10268" pos:column="9">HRESULT</name></type> ( <name pos:line="10268" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10268" pos:column="37">*</type:modifier><name pos:line="10268" pos:column="38">UnadviseSourceBuffersChanged</name> )<parameter_list pos:line="10268" pos:column="68">( 
            <param><decl><type><name pos:line="10269" pos:column="13">IVxProjectionBuffer</name> <type:modifier pos:line="10269" pos:column="33">*</type:modifier></type> <name pos:line="10269" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="10270" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10270" pos:column="24">IVxProjectionSourceBuffersChangedEvent</name> <type:modifier pos:line="10270" pos:column="63">*</type:modifier></type><name pos:line="10270" pos:column="64">pValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10272" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10273" pos:column="7">IVxProjectionBufferVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10275" pos:column="5">interface</name></type> <name pos:line="10275" pos:column="15">IVxProjectionBuffer</name>
    <argument_list pos:line="10276" pos:column="5">{
        <argument><expr><name pos:line="10277" pos:column="9">CONST_VTBL</name> struct <name pos:line="10277" pos:column="27">IVxProjectionBufferVtbl</name> <op:operator pos:line="10277" pos:column="51">*</op:operator><name pos:line="10277" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10282" pos:column="1">#<cpp:directive pos:line="10282" pos:column="2">ifdef</cpp:directive> <name pos:line="10282" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10285" pos:column="1">#<cpp:directive pos:line="10285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10285" pos:column="9">IVxProjectionBuffer_QueryInterface</name><parameter_list pos:line="10285" pos:column="43">(<param><type><name pos:line="10285" pos:column="44">This</name></type></param>,<param><type><name pos:line="10285" pos:column="49">riid</name></type></param>,<param><type><name pos:line="10285" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10286" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10288" pos:column="1">#<cpp:directive pos:line="10288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10288" pos:column="9">IVxProjectionBuffer_AddRef</name><parameter_list pos:line="10288" pos:column="35">(<param><type><name pos:line="10288" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10289" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10291" pos:column="1">#<cpp:directive pos:line="10291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10291" pos:column="9">IVxProjectionBuffer_Release</name><parameter_list pos:line="10291" pos:column="36">(<param><type><name pos:line="10291" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10292" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10295" pos:column="1">#<cpp:directive pos:line="10295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10295" pos:column="9">IVxProjectionBuffer_GetProperties</name><parameter_list pos:line="10295" pos:column="42">(<param><type><name pos:line="10295" pos:column="43">This</name></type></param>,<param><type><name pos:line="10295" pos:column="48">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10296" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProperties(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10299" pos:column="1">#<cpp:directive pos:line="10299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10299" pos:column="9">IVxProjectionBuffer_IsReadOnly</name><parameter_list pos:line="10299" pos:column="39">(<param><type><name pos:line="10299" pos:column="40">This</name></type></param>,<param><type><name pos:line="10299" pos:column="45">span</name></type></param>,<param><type><name pos:line="10299" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10300" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,span,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10302" pos:column="1">#<cpp:directive pos:line="10302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10302" pos:column="9">IVxProjectionBuffer_IsReadOnly_2</name><parameter_list pos:line="10302" pos:column="41">(<param><type><name pos:line="10302" pos:column="42">This</name></type></param>,<param><type><name pos:line="10302" pos:column="47">span</name></type></param>,<param><type><name pos:line="10302" pos:column="52">isEdit</name></type></param>,<param><type><name pos:line="10302" pos:column="59">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10303" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_2(This,span,isEdit,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10305" pos:column="1">#<cpp:directive pos:line="10305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10305" pos:column="9">IVxProjectionBuffer_GetReadOnlyExtents</name><parameter_list pos:line="10305" pos:column="47">(<param><type><name pos:line="10305" pos:column="48">This</name></type></param>,<param><type><name pos:line="10305" pos:column="53">span</name></type></param>,<param><type><name pos:line="10305" pos:column="58">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10306" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReadOnlyExtents(This,span,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10308" pos:column="1">#<cpp:directive pos:line="10308" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10308" pos:column="9">IVxProjectionBuffer_GetContentType</name><parameter_list pos:line="10308" pos:column="43">(<param><type><name pos:line="10308" pos:column="44">This</name></type></param>,<param><type><name pos:line="10308" pos:column="49">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10309" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10311" pos:column="1">#<cpp:directive pos:line="10311" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10311" pos:column="9">IVxProjectionBuffer_GetCurrentSnapshot</name><parameter_list pos:line="10311" pos:column="47">(<param><type><name pos:line="10311" pos:column="48">This</name></type></param>,<param><type><name pos:line="10311" pos:column="53">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10312" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentSnapshot(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10314" pos:column="1">#<cpp:directive pos:line="10314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10314" pos:column="9">IVxProjectionBuffer_CreateEdit</name><parameter_list pos:line="10314" pos:column="39">(<param><type><name pos:line="10314" pos:column="40">This</name></type></param>,<param><type><name pos:line="10314" pos:column="45">options</name></type></param>,<param><type><name pos:line="10314" pos:column="53">reiteratedVersionNumberHasValue</name></type></param>,<param><type><name pos:line="10314" pos:column="85">reiteratedVersionNumber</name></type></param>,<param><type><name pos:line="10314" pos:column="109">pEditTag</name></type></param>,<param><type><name pos:line="10314" pos:column="118">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10315" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEdit(This,options,reiteratedVersionNumberHasValue,reiteratedVersionNumber,pEditTag,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10317" pos:column="1">#<cpp:directive pos:line="10317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10317" pos:column="9">IVxProjectionBuffer_CreateEdit_2</name><parameter_list pos:line="10317" pos:column="41">(<param><type><name pos:line="10317" pos:column="42">This</name></type></param>,<param><type><name pos:line="10317" pos:column="47">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10318" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEdit_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10320" pos:column="1">#<cpp:directive pos:line="10320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10320" pos:column="9">IVxProjectionBuffer_CreateReadOnlyRegionEdit</name><parameter_list pos:line="10320" pos:column="53">(<param><type><name pos:line="10320" pos:column="54">This</name></type></param>,<param><type><name pos:line="10320" pos:column="59">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10321" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateReadOnlyRegionEdit(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10323" pos:column="1">#<cpp:directive pos:line="10323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10323" pos:column="9">IVxProjectionBuffer_GetEditInProgress</name><parameter_list pos:line="10323" pos:column="46">(<param><type><name pos:line="10323" pos:column="47">This</name></type></param>,<param><type><name pos:line="10323" pos:column="52">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10324" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditInProgress(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10326" pos:column="1">#<cpp:directive pos:line="10326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10326" pos:column="9">IVxProjectionBuffer_TakeThreadOwnership</name><parameter_list pos:line="10326" pos:column="48">(<param><type><name pos:line="10326" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10327" pos:column="5">( (This)-&gt;lpVtbl -&gt; TakeThreadOwnership(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10329" pos:column="1">#<cpp:directive pos:line="10329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10329" pos:column="9">IVxProjectionBuffer_CheckEditAccess</name><parameter_list pos:line="10329" pos:column="44">(<param><type><name pos:line="10329" pos:column="45">This</name></type></param>,<param><type><name pos:line="10329" pos:column="50">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10330" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckEditAccess(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10332" pos:column="1">#<cpp:directive pos:line="10332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10332" pos:column="9">IVxProjectionBuffer_AdviseReadOnlyRegionsChanged</name><parameter_list pos:line="10332" pos:column="57">(<param><type><name pos:line="10332" pos:column="58">This</name></type></param>,<param><type><name pos:line="10332" pos:column="63">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10333" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseReadOnlyRegionsChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10335" pos:column="1">#<cpp:directive pos:line="10335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10335" pos:column="9">IVxProjectionBuffer_UnadviseReadOnlyRegionsChanged</name><parameter_list pos:line="10335" pos:column="59">(<param><type><name pos:line="10335" pos:column="60">This</name></type></param>,<param><type><name pos:line="10335" pos:column="65">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10336" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseReadOnlyRegionsChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10338" pos:column="1">#<cpp:directive pos:line="10338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10338" pos:column="9">IVxProjectionBuffer_AdviseChanged</name><parameter_list pos:line="10338" pos:column="42">(<param><type><name pos:line="10338" pos:column="43">This</name></type></param>,<param><type><name pos:line="10338" pos:column="48">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10339" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10341" pos:column="1">#<cpp:directive pos:line="10341" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10341" pos:column="9">IVxProjectionBuffer_UnadviseChanged</name><parameter_list pos:line="10341" pos:column="44">(<param><type><name pos:line="10341" pos:column="45">This</name></type></param>,<param><type><name pos:line="10341" pos:column="50">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10342" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10344" pos:column="1">#<cpp:directive pos:line="10344" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10344" pos:column="9">IVxProjectionBuffer_AdviseChangedLowPriority</name><parameter_list pos:line="10344" pos:column="53">(<param><type><name pos:line="10344" pos:column="54">This</name></type></param>,<param><type><name pos:line="10344" pos:column="59">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10345" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChangedLowPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10347" pos:column="1">#<cpp:directive pos:line="10347" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10347" pos:column="9">IVxProjectionBuffer_UnadviseChangedLowPriority</name><parameter_list pos:line="10347" pos:column="55">(<param><type><name pos:line="10347" pos:column="56">This</name></type></param>,<param><type><name pos:line="10347" pos:column="61">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10348" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChangedLowPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10350" pos:column="1">#<cpp:directive pos:line="10350" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10350" pos:column="9">IVxProjectionBuffer_AdviseChangedHighPriority</name><parameter_list pos:line="10350" pos:column="54">(<param><type><name pos:line="10350" pos:column="55">This</name></type></param>,<param><type><name pos:line="10350" pos:column="60">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10351" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChangedHighPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10353" pos:column="1">#<cpp:directive pos:line="10353" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10353" pos:column="9">IVxProjectionBuffer_UnadviseChangedHighPriority</name><parameter_list pos:line="10353" pos:column="56">(<param><type><name pos:line="10353" pos:column="57">This</name></type></param>,<param><type><name pos:line="10353" pos:column="62">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10354" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChangedHighPriority(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10356" pos:column="1">#<cpp:directive pos:line="10356" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10356" pos:column="9">IVxProjectionBuffer_AdviseChanging</name><parameter_list pos:line="10356" pos:column="43">(<param><type><name pos:line="10356" pos:column="44">This</name></type></param>,<param><type><name pos:line="10356" pos:column="49">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10357" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseChanging(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10359" pos:column="1">#<cpp:directive pos:line="10359" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10359" pos:column="9">IVxProjectionBuffer_UnadviseChanging</name><parameter_list pos:line="10359" pos:column="45">(<param><type><name pos:line="10359" pos:column="46">This</name></type></param>,<param><type><name pos:line="10359" pos:column="51">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10360" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseChanging(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10362" pos:column="1">#<cpp:directive pos:line="10362" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10362" pos:column="9">IVxProjectionBuffer_AdvisePostChanged</name><parameter_list pos:line="10362" pos:column="46">(<param><type><name pos:line="10362" pos:column="47">This</name></type></param>,<param><type><name pos:line="10362" pos:column="52">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10363" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdvisePostChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10365" pos:column="1">#<cpp:directive pos:line="10365" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10365" pos:column="9">IVxProjectionBuffer_UnadvisePostChanged</name><parameter_list pos:line="10365" pos:column="48">(<param><type><name pos:line="10365" pos:column="49">This</name></type></param>,<param><type><name pos:line="10365" pos:column="54">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10366" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadvisePostChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10368" pos:column="1">#<cpp:directive pos:line="10368" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10368" pos:column="9">IVxProjectionBuffer_AdviseContentTypeChanged</name><parameter_list pos:line="10368" pos:column="53">(<param><type><name pos:line="10368" pos:column="54">This</name></type></param>,<param><type><name pos:line="10368" pos:column="59">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10369" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10371" pos:column="1">#<cpp:directive pos:line="10371" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10371" pos:column="9">IVxProjectionBuffer_UnadviseContentTypeChanged</name><parameter_list pos:line="10371" pos:column="55">(<param><type><name pos:line="10371" pos:column="56">This</name></type></param>,<param><type><name pos:line="10371" pos:column="61">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10372" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseContentTypeChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10374" pos:column="1">#<cpp:directive pos:line="10374" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10374" pos:column="9">IVxProjectionBuffer_ChangeContentType</name><parameter_list pos:line="10374" pos:column="46">(<param><type><name pos:line="10374" pos:column="47">This</name></type></param>,<param><type><name pos:line="10374" pos:column="52">pNewContentType</name></type></param>,<param><type><name pos:line="10374" pos:column="68">pEditTag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10375" pos:column="5">( (This)-&gt;lpVtbl -&gt; ChangeContentType(This,pNewContentType,pEditTag) )</cpp:value></cpp:define> 

<cpp:define pos:line="10377" pos:column="1">#<cpp:directive pos:line="10377" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10377" pos:column="9">IVxProjectionBuffer_Insert</name><parameter_list pos:line="10377" pos:column="35">(<param><type><name pos:line="10377" pos:column="36">This</name></type></param>,<param><type><name pos:line="10377" pos:column="41">position</name></type></param>,<param><type><name pos:line="10377" pos:column="50">text</name></type></param>,<param><type><name pos:line="10377" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10378" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert(This,position,text,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10380" pos:column="1">#<cpp:directive pos:line="10380" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10380" pos:column="9">IVxProjectionBuffer_Delete</name><parameter_list pos:line="10380" pos:column="35">(<param><type><name pos:line="10380" pos:column="36">This</name></type></param>,<param><type><name pos:line="10380" pos:column="41">deleteSpan</name></type></param>,<param><type><name pos:line="10380" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10381" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,deleteSpan,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10383" pos:column="1">#<cpp:directive pos:line="10383" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10383" pos:column="9">IVxProjectionBuffer_Replace</name><parameter_list pos:line="10383" pos:column="36">(<param><type><name pos:line="10383" pos:column="37">This</name></type></param>,<param><type><name pos:line="10383" pos:column="42">replaceSpan</name></type></param>,<param><type><name pos:line="10383" pos:column="54">replaceWith</name></type></param>,<param><type><name pos:line="10383" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10384" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace(This,replaceSpan,replaceWith,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10386" pos:column="1">#<cpp:directive pos:line="10386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10386" pos:column="9">IVxProjectionBuffer_IsReadOnly_3</name><parameter_list pos:line="10386" pos:column="41">(<param><type><name pos:line="10386" pos:column="42">This</name></type></param>,<param><type><name pos:line="10386" pos:column="47">position</name></type></param>,<param><type><name pos:line="10386" pos:column="56">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10387" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_3(This,position,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10389" pos:column="1">#<cpp:directive pos:line="10389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10389" pos:column="9">IVxProjectionBuffer_IsReadOnly_4</name><parameter_list pos:line="10389" pos:column="41">(<param><type><name pos:line="10389" pos:column="42">This</name></type></param>,<param><type><name pos:line="10389" pos:column="47">position</name></type></param>,<param><type><name pos:line="10389" pos:column="56">isEdit</name></type></param>,<param><type><name pos:line="10389" pos:column="63">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10390" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly_4(This,position,isEdit,pRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10393" pos:column="1">#<cpp:directive pos:line="10393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10393" pos:column="9">IVxProjectionBuffer_GetCurrentSnapshot_2</name><parameter_list pos:line="10393" pos:column="49">(<param><type><name pos:line="10393" pos:column="50">This</name></type></param>,<param><type><name pos:line="10393" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10394" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentSnapshot_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10396" pos:column="1">#<cpp:directive pos:line="10396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10396" pos:column="9">IVxProjectionBuffer_GetSourceBuffers</name><parameter_list pos:line="10396" pos:column="45">(<param><type><name pos:line="10396" pos:column="46">This</name></type></param>,<param><type><name pos:line="10396" pos:column="51">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10397" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceBuffers(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10399" pos:column="1">#<cpp:directive pos:line="10399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10399" pos:column="9">IVxProjectionBuffer_Insert_2</name><parameter_list pos:line="10399" pos:column="37">(<param><type><name pos:line="10399" pos:column="38">This</name></type></param>,<param><type><name pos:line="10399" pos:column="43">position</name></type></param>,<param><type><name pos:line="10399" pos:column="52">text</name></type></param>,<param><type><name pos:line="10399" pos:column="57">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10400" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert_2(This,position,text,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10402" pos:column="1">#<cpp:directive pos:line="10402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10402" pos:column="9">IVxProjectionBuffer_Delete_2</name><parameter_list pos:line="10402" pos:column="37">(<param><type><name pos:line="10402" pos:column="38">This</name></type></param>,<param><type><name pos:line="10402" pos:column="43">deleteSpan</name></type></param>,<param><type><name pos:line="10402" pos:column="54">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10403" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete_2(This,deleteSpan,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10405" pos:column="1">#<cpp:directive pos:line="10405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10405" pos:column="9">IVxProjectionBuffer_Replace_2</name><parameter_list pos:line="10405" pos:column="38">(<param><type><name pos:line="10405" pos:column="39">This</name></type></param>,<param><type><name pos:line="10405" pos:column="44">replaceSpan</name></type></param>,<param><type><name pos:line="10405" pos:column="56">replaceWith</name></type></param>,<param><type><name pos:line="10405" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10406" pos:column="5">( (This)-&gt;lpVtbl -&gt; Replace_2(This,replaceSpan,replaceWith,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10409" pos:column="1">#<cpp:directive pos:line="10409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10409" pos:column="9">IVxProjectionBuffer_InsertSpan</name><parameter_list pos:line="10409" pos:column="39">(<param><type><name pos:line="10409" pos:column="40">This</name></type></param>,<param><type><name pos:line="10409" pos:column="45">position</name></type></param>,<param><type><name pos:line="10409" pos:column="54">pSpanToInsert</name></type></param>,<param><type><name pos:line="10409" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10410" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertSpan(This,position,pSpanToInsert,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10412" pos:column="1">#<cpp:directive pos:line="10412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10412" pos:column="9">IVxProjectionBuffer_InsertSpan_2</name><parameter_list pos:line="10412" pos:column="41">(<param><type><name pos:line="10412" pos:column="42">This</name></type></param>,<param><type><name pos:line="10412" pos:column="47">position</name></type></param>,<param><type><name pos:line="10412" pos:column="56">literalSpanToInsert</name></type></param>,<param><type><name pos:line="10412" pos:column="76">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10413" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertSpan_2(This,position,literalSpanToInsert,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10415" pos:column="1">#<cpp:directive pos:line="10415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10415" pos:column="9">IVxProjectionBuffer_InsertSpans</name><parameter_list pos:line="10415" pos:column="40">(<param><type><name pos:line="10415" pos:column="41">This</name></type></param>,<param><type><name pos:line="10415" pos:column="46">position</name></type></param>,<param><type><name pos:line="10415" pos:column="55">pSpansToInsert</name></type></param>,<param><type><name pos:line="10415" pos:column="70">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10416" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertSpans(This,position,pSpansToInsert,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10418" pos:column="1">#<cpp:directive pos:line="10418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10418" pos:column="9">IVxProjectionBuffer_DeleteSpans</name><parameter_list pos:line="10418" pos:column="40">(<param><type><name pos:line="10418" pos:column="41">This</name></type></param>,<param><type><name pos:line="10418" pos:column="46">position</name></type></param>,<param><type><name pos:line="10418" pos:column="55">spansToDelete</name></type></param>,<param><type><name pos:line="10418" pos:column="69">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10419" pos:column="5">( (This)-&gt;lpVtbl -&gt; DeleteSpans(This,position,spansToDelete,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10421" pos:column="1">#<cpp:directive pos:line="10421" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10421" pos:column="9">IVxProjectionBuffer_ReplaceSpans</name><parameter_list pos:line="10421" pos:column="41">(<param><type><name pos:line="10421" pos:column="42">This</name></type></param>,<param><type><name pos:line="10421" pos:column="47">position</name></type></param>,<param><type><name pos:line="10421" pos:column="56">spansToReplace</name></type></param>,<param><type><name pos:line="10421" pos:column="71">pSpansToInsert</name></type></param>,<param><type><name pos:line="10421" pos:column="86">options</name></type></param>,<param><type><name pos:line="10421" pos:column="94">pEditTag</name></type></param>,<param><type><name pos:line="10421" pos:column="103">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10422" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReplaceSpans(This,position,spansToReplace,pSpansToInsert,options,pEditTag,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10424" pos:column="1">#<cpp:directive pos:line="10424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10424" pos:column="9">IVxProjectionBuffer_AdviseSourceSpansChanged</name><parameter_list pos:line="10424" pos:column="53">(<param><type><name pos:line="10424" pos:column="54">This</name></type></param>,<param><type><name pos:line="10424" pos:column="59">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10425" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseSourceSpansChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10427" pos:column="1">#<cpp:directive pos:line="10427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10427" pos:column="9">IVxProjectionBuffer_UnadviseSourceSpansChanged</name><parameter_list pos:line="10427" pos:column="55">(<param><type><name pos:line="10427" pos:column="56">This</name></type></param>,<param><type><name pos:line="10427" pos:column="61">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10428" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseSourceSpansChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10430" pos:column="1">#<cpp:directive pos:line="10430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10430" pos:column="9">IVxProjectionBuffer_AdviseSourceBuffersChanged</name><parameter_list pos:line="10430" pos:column="55">(<param><type><name pos:line="10430" pos:column="56">This</name></type></param>,<param><type><name pos:line="10430" pos:column="61">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10431" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseSourceBuffersChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="10433" pos:column="1">#<cpp:directive pos:line="10433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10433" pos:column="9">IVxProjectionBuffer_UnadviseSourceBuffersChanged</name><parameter_list pos:line="10433" pos:column="57">(<param><type><name pos:line="10433" pos:column="58">This</name></type></param>,<param><type><name pos:line="10433" pos:column="63">pValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10434" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseSourceBuffersChanged(This,pValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10436" pos:column="1">#<cpp:directive pos:line="10436" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10436" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10439" pos:column="1">#<cpp:directive pos:line="10439" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10439" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10444" pos:column="1">#<cpp:directive pos:line="10444" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10444" pos:column="9">/* __IVxProjectionBuffer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10447" pos:column="1">#<cpp:directive pos:line="10447" pos:column="2">ifndef</cpp:directive> <name pos:line="10447" pos:column="9">__IVxProjectionSourceSpansChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10448" pos:column="1">#<cpp:directive pos:line="10448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10448" pos:column="9">__IVxProjectionSourceSpansChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10450" pos:column="1">/* interface IVxProjectionSourceSpansChangedEventArgs */</comment>
<comment type="block" pos:line="10451" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10454" pos:column="1">EXTERN_C</name> <specifier pos:line="10454" pos:column="10">const</specifier> <name pos:line="10454" pos:column="16">IID</name></type> <name pos:line="10454" pos:column="20">IID_IVxProjectionSourceSpansChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="10456" pos:column="1">#<cpp:directive pos:line="10456" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10456" pos:column="5">defined</name><argument_list pos:line="10456" pos:column="12">(<argument><expr><name pos:line="10456" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10456" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10456" pos:column="29">!</op:operator><call><name pos:line="10456" pos:column="30">defined</name><argument_list pos:line="10456" pos:column="37">(<argument><expr><name pos:line="10456" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10458" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10458" pos:column="19">(<argument pos:line="10458" pos:column="20">"9ef0e53c-b564-46d9-8616-d28034ac48c9"</argument>)</argument_list></macro>
    <label><name pos:line="10459" pos:column="5">IVxProjectionSourceSpansChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="10459" pos:column="48">public <name pos:line="10459" pos:column="55">IVxTextContentChangedEventArgs</name>
    <block pos:line="10460" pos:column="5">{
    <expr pos:line="10461" pos:column="5">public<op:operator pos:line="10461" pos:column="11">:</op:operator>
        virtual <name pos:line="10462" pos:column="17">HRESULT</name> <name pos:line="10462" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10462" pos:column="43">GetSpanPosition</name><argument_list pos:line="10462" pos:column="58">( 
            <comment type="block" pos:line="10463" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10463" pos:column="33">int</name> <op:operator pos:line="10463" pos:column="37">*</op:operator><name pos:line="10463" pos:column="38">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10463" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="10463" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="10465" pos:column="9">virtual <name pos:line="10465" pos:column="17">HRESULT</name> <name pos:line="10465" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10465" pos:column="43">GetInsertedSpans</name><argument_list pos:line="10465" pos:column="59">( 
            <comment type="block" pos:line="10466" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10466" pos:column="33">IListIVxTrackingSpan</name> <op:operator pos:line="10466" pos:column="54">*</op:operator><op:operator pos:line="10466" pos:column="55">*</op:operator><name pos:line="10466" pos:column="56">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10466" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="10466" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="10468" pos:column="9">virtual <name pos:line="10468" pos:column="17">HRESULT</name> <name pos:line="10468" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10468" pos:column="43">GetDeletedSpans</name><argument_list pos:line="10468" pos:column="58">( 
            <comment type="block" pos:line="10469" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10469" pos:column="33">IListIVxTrackingSpan</name> <op:operator pos:line="10469" pos:column="54">*</op:operator><op:operator pos:line="10469" pos:column="55">*</op:operator><name pos:line="10469" pos:column="56">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10469" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="10469" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="10471" pos:column="9">virtual <name pos:line="10471" pos:column="17">HRESULT</name> <name pos:line="10471" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10471" pos:column="43">GetBefore_2</name><argument_list pos:line="10471" pos:column="54">( 
            <comment type="block" pos:line="10472" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10472" pos:column="33">IVxProjectionSnapshot</name> <op:operator pos:line="10472" pos:column="55">*</op:operator><op:operator pos:line="10472" pos:column="56">*</op:operator><name pos:line="10472" pos:column="57">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10472" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10472" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10474" pos:column="9">virtual <name pos:line="10474" pos:column="17">HRESULT</name> <name pos:line="10474" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10474" pos:column="43">GetAfter_2</name><argument_list pos:line="10474" pos:column="53">( 
            <comment type="block" pos:line="10475" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10475" pos:column="33">IVxProjectionSnapshot</name> <op:operator pos:line="10475" pos:column="55">*</op:operator><op:operator pos:line="10475" pos:column="56">*</op:operator><name pos:line="10475" pos:column="57">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10475" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10475" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10479" pos:column="1">#<cpp:directive pos:line="10479" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10479" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10481" pos:column="5">typedef <type><struct pos:line="10481" pos:column="13">struct <name pos:line="10481" pos:column="20">IVxProjectionSourceSpansChangedEventArgsVtbl</name>
    <block pos:line="10482" pos:column="5">{<public type="default" pos:line="10482" pos:column="6">
        <function_decl><type><name pos:line="10483" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10485" pos:column="9">HRESULT</name></type> ( <name pos:line="10485" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10485" pos:column="37">*</type:modifier><name pos:line="10485" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10485" pos:column="54">( 
            <param><decl><type><name pos:line="10486" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10486" pos:column="54">*</type:modifier></type> <name pos:line="10486" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10487" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10487" pos:column="24">REFIID</name></type> <name pos:line="10487" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10488" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10489" pos:column="13">__RPC__deref_out</name>  <name pos:line="10489" pos:column="31">void</name> <type:modifier pos:line="10489" pos:column="36">*</type:modifier><type:modifier pos:line="10489" pos:column="37">*</type:modifier></type><name pos:line="10489" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10491" pos:column="9">ULONG</name></type> ( <name pos:line="10491" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10491" pos:column="35">*</type:modifier><name pos:line="10491" pos:column="36">AddRef</name> )<parameter_list pos:line="10491" pos:column="44">( 
            <param><decl><type><name pos:line="10492" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10492" pos:column="54">*</type:modifier></type> <name pos:line="10492" pos:column="56">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10494" pos:column="9">ULONG</name></type> ( <name pos:line="10494" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10494" pos:column="35">*</type:modifier><name pos:line="10494" pos:column="36">Release</name> )<parameter_list pos:line="10494" pos:column="45">( 
            <param><decl><type><name pos:line="10495" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10495" pos:column="54">*</type:modifier></type> <name pos:line="10495" pos:column="56">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10497" pos:column="9">HRESULT</name></type> ( <name pos:line="10497" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10497" pos:column="37">*</type:modifier><name pos:line="10497" pos:column="38">GetBefore</name> )<parameter_list pos:line="10497" pos:column="49">( 
            <param><decl><type><name pos:line="10498" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10498" pos:column="54">*</type:modifier></type> <name pos:line="10498" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10499" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10499" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10499" pos:column="49">*</type:modifier><type:modifier pos:line="10499" pos:column="50">*</type:modifier></type><name pos:line="10499" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10501" pos:column="9">HRESULT</name></type> ( <name pos:line="10501" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10501" pos:column="37">*</type:modifier><name pos:line="10501" pos:column="38">GetAfter</name> )<parameter_list pos:line="10501" pos:column="48">( 
            <param><decl><type><name pos:line="10502" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10502" pos:column="54">*</type:modifier></type> <name pos:line="10502" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10503" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10503" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10503" pos:column="49">*</type:modifier><type:modifier pos:line="10503" pos:column="50">*</type:modifier></type><name pos:line="10503" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10505" pos:column="9">HRESULT</name></type> ( <name pos:line="10505" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10505" pos:column="37">*</type:modifier><name pos:line="10505" pos:column="38">GetBeforeVersion</name> )<parameter_list pos:line="10505" pos:column="56">( 
            <param><decl><type><name pos:line="10506" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10506" pos:column="54">*</type:modifier></type> <name pos:line="10506" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10507" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10507" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="10507" pos:column="48">*</type:modifier><type:modifier pos:line="10507" pos:column="49">*</type:modifier></type><name pos:line="10507" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10509" pos:column="9">HRESULT</name></type> ( <name pos:line="10509" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10509" pos:column="37">*</type:modifier><name pos:line="10509" pos:column="38">GetAfterVersion</name> )<parameter_list pos:line="10509" pos:column="55">( 
            <param><decl><type><name pos:line="10510" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10510" pos:column="54">*</type:modifier></type> <name pos:line="10510" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10511" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10511" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="10511" pos:column="48">*</type:modifier><type:modifier pos:line="10511" pos:column="49">*</type:modifier></type><name pos:line="10511" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10513" pos:column="9">HRESULT</name></type> ( <name pos:line="10513" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10513" pos:column="37">*</type:modifier><name pos:line="10513" pos:column="38">GetEditTag</name> )<parameter_list pos:line="10513" pos:column="50">( 
            <param><decl><type><name pos:line="10514" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10514" pos:column="54">*</type:modifier></type> <name pos:line="10514" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10515" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10515" pos:column="33">IUnknown</name> <type:modifier pos:line="10515" pos:column="42">*</type:modifier><type:modifier pos:line="10515" pos:column="43">*</type:modifier></type><name pos:line="10515" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10517" pos:column="9">HRESULT</name></type> ( <name pos:line="10517" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10517" pos:column="37">*</type:modifier><name pos:line="10517" pos:column="38">GetChanges</name> )<parameter_list pos:line="10517" pos:column="50">( 
            <param><decl><type><name pos:line="10518" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10518" pos:column="54">*</type:modifier></type> <name pos:line="10518" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10519" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10519" pos:column="33">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="10519" pos:column="67">*</type:modifier><type:modifier pos:line="10519" pos:column="68">*</type:modifier></type><name pos:line="10519" pos:column="69">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10521" pos:column="9">HRESULT</name></type> ( <name pos:line="10521" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10521" pos:column="37">*</type:modifier><name pos:line="10521" pos:column="38">GetOptions</name> )<parameter_list pos:line="10521" pos:column="50">( 
            <param><decl><type><name pos:line="10522" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10522" pos:column="54">*</type:modifier></type> <name pos:line="10522" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10523" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10523" pos:column="33">VxEditOptions</name> <type:modifier pos:line="10523" pos:column="47">*</type:modifier></type><name pos:line="10523" pos:column="48">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10525" pos:column="9">HRESULT</name></type> ( <name pos:line="10525" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10525" pos:column="37">*</type:modifier><name pos:line="10525" pos:column="38">GetSpanPosition</name> )<parameter_list pos:line="10525" pos:column="55">( 
            <param><decl><type><name pos:line="10526" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10526" pos:column="54">*</type:modifier></type> <name pos:line="10526" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10527" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10527" pos:column="33">int</name> <type:modifier pos:line="10527" pos:column="37">*</type:modifier></type><name pos:line="10527" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10529" pos:column="9">HRESULT</name></type> ( <name pos:line="10529" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10529" pos:column="37">*</type:modifier><name pos:line="10529" pos:column="38">GetInsertedSpans</name> )<parameter_list pos:line="10529" pos:column="56">( 
            <param><decl><type><name pos:line="10530" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10530" pos:column="54">*</type:modifier></type> <name pos:line="10530" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10531" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10531" pos:column="33">IListIVxTrackingSpan</name> <type:modifier pos:line="10531" pos:column="54">*</type:modifier><type:modifier pos:line="10531" pos:column="55">*</type:modifier></type><name pos:line="10531" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10533" pos:column="9">HRESULT</name></type> ( <name pos:line="10533" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10533" pos:column="37">*</type:modifier><name pos:line="10533" pos:column="38">GetDeletedSpans</name> )<parameter_list pos:line="10533" pos:column="55">( 
            <param><decl><type><name pos:line="10534" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10534" pos:column="54">*</type:modifier></type> <name pos:line="10534" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10535" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10535" pos:column="33">IListIVxTrackingSpan</name> <type:modifier pos:line="10535" pos:column="54">*</type:modifier><type:modifier pos:line="10535" pos:column="55">*</type:modifier></type><name pos:line="10535" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10537" pos:column="9">HRESULT</name></type> ( <name pos:line="10537" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10537" pos:column="37">*</type:modifier><name pos:line="10537" pos:column="38">GetBefore_2</name> )<parameter_list pos:line="10537" pos:column="51">( 
            <param><decl><type><name pos:line="10538" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10538" pos:column="54">*</type:modifier></type> <name pos:line="10538" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10539" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10539" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10539" pos:column="55">*</type:modifier><type:modifier pos:line="10539" pos:column="56">*</type:modifier></type><name pos:line="10539" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10541" pos:column="9">HRESULT</name></type> ( <name pos:line="10541" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10541" pos:column="37">*</type:modifier><name pos:line="10541" pos:column="38">GetAfter_2</name> )<parameter_list pos:line="10541" pos:column="50">( 
            <param><decl><type><name pos:line="10542" pos:column="13">IVxProjectionSourceSpansChangedEventArgs</name> <type:modifier pos:line="10542" pos:column="54">*</type:modifier></type> <name pos:line="10542" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="10543" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10543" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10543" pos:column="55">*</type:modifier><type:modifier pos:line="10543" pos:column="56">*</type:modifier></type><name pos:line="10543" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10545" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10546" pos:column="7">IVxProjectionSourceSpansChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10548" pos:column="5">interface</name></type> <name pos:line="10548" pos:column="15">IVxProjectionSourceSpansChangedEventArgs</name>
    <argument_list pos:line="10549" pos:column="5">{
        <argument><expr><name pos:line="10550" pos:column="9">CONST_VTBL</name> struct <name pos:line="10550" pos:column="27">IVxProjectionSourceSpansChangedEventArgsVtbl</name> <op:operator pos:line="10550" pos:column="72">*</op:operator><name pos:line="10550" pos:column="73">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10555" pos:column="1">#<cpp:directive pos:line="10555" pos:column="2">ifdef</cpp:directive> <name pos:line="10555" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10558" pos:column="1">#<cpp:directive pos:line="10558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10558" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_QueryInterface</name><parameter_list pos:line="10558" pos:column="64">(<param><type><name pos:line="10558" pos:column="65">This</name></type></param>,<param><type><name pos:line="10558" pos:column="70">riid</name></type></param>,<param><type><name pos:line="10558" pos:column="75">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10559" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10561" pos:column="1">#<cpp:directive pos:line="10561" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10561" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_AddRef</name><parameter_list pos:line="10561" pos:column="56">(<param><type><name pos:line="10561" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10562" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10564" pos:column="1">#<cpp:directive pos:line="10564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10564" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_Release</name><parameter_list pos:line="10564" pos:column="57">(<param><type><name pos:line="10564" pos:column="58">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10565" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10568" pos:column="1">#<cpp:directive pos:line="10568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10568" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetBefore</name><parameter_list pos:line="10568" pos:column="59">(<param><type><name pos:line="10568" pos:column="60">This</name></type></param>,<param><type><name pos:line="10568" pos:column="65">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10569" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10571" pos:column="1">#<cpp:directive pos:line="10571" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10571" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetAfter</name><parameter_list pos:line="10571" pos:column="58">(<param><type><name pos:line="10571" pos:column="59">This</name></type></param>,<param><type><name pos:line="10571" pos:column="64">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10572" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10574" pos:column="1">#<cpp:directive pos:line="10574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10574" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetBeforeVersion</name><parameter_list pos:line="10574" pos:column="66">(<param><type><name pos:line="10574" pos:column="67">This</name></type></param>,<param><type><name pos:line="10574" pos:column="72">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10575" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10577" pos:column="1">#<cpp:directive pos:line="10577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10577" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetAfterVersion</name><parameter_list pos:line="10577" pos:column="65">(<param><type><name pos:line="10577" pos:column="66">This</name></type></param>,<param><type><name pos:line="10577" pos:column="71">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10578" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10580" pos:column="1">#<cpp:directive pos:line="10580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10580" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetEditTag</name><parameter_list pos:line="10580" pos:column="60">(<param><type><name pos:line="10580" pos:column="61">This</name></type></param>,<param><type><name pos:line="10580" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10581" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditTag(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10584" pos:column="1">#<cpp:directive pos:line="10584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10584" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetChanges</name><parameter_list pos:line="10584" pos:column="60">(<param><type><name pos:line="10584" pos:column="61">This</name></type></param>,<param><type><name pos:line="10584" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10585" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetChanges(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10587" pos:column="1">#<cpp:directive pos:line="10587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10587" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetOptions</name><parameter_list pos:line="10587" pos:column="60">(<param><type><name pos:line="10587" pos:column="61">This</name></type></param>,<param><type><name pos:line="10587" pos:column="66">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10588" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOptions(This,pRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10591" pos:column="1">#<cpp:directive pos:line="10591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10591" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetSpanPosition</name><parameter_list pos:line="10591" pos:column="65">(<param><type><name pos:line="10591" pos:column="66">This</name></type></param>,<param><type><name pos:line="10591" pos:column="71">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10592" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanPosition(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10594" pos:column="1">#<cpp:directive pos:line="10594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10594" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetInsertedSpans</name><parameter_list pos:line="10594" pos:column="66">(<param><type><name pos:line="10594" pos:column="67">This</name></type></param>,<param><type><name pos:line="10594" pos:column="72">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10595" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInsertedSpans(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10597" pos:column="1">#<cpp:directive pos:line="10597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10597" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetDeletedSpans</name><parameter_list pos:line="10597" pos:column="65">(<param><type><name pos:line="10597" pos:column="66">This</name></type></param>,<param><type><name pos:line="10597" pos:column="71">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10598" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDeletedSpans(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10600" pos:column="1">#<cpp:directive pos:line="10600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10600" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetBefore_2</name><parameter_list pos:line="10600" pos:column="61">(<param><type><name pos:line="10600" pos:column="62">This</name></type></param>,<param><type><name pos:line="10600" pos:column="67">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10601" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10603" pos:column="1">#<cpp:directive pos:line="10603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10603" pos:column="9">IVxProjectionSourceSpansChangedEventArgs_GetAfter_2</name><parameter_list pos:line="10603" pos:column="60">(<param><type><name pos:line="10603" pos:column="61">This</name></type></param>,<param><type><name pos:line="10603" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10604" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10606" pos:column="1">#<cpp:directive pos:line="10606" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10606" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10609" pos:column="1">#<cpp:directive pos:line="10609" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10609" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10614" pos:column="1">#<cpp:directive pos:line="10614" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10614" pos:column="9">/* __IVxProjectionSourceSpansChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10617" pos:column="1">#<cpp:directive pos:line="10617" pos:column="2">ifndef</cpp:directive> <name pos:line="10617" pos:column="9">__IVxProjectionSourceBuffersChangedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10618" pos:column="1">#<cpp:directive pos:line="10618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10618" pos:column="9">__IVxProjectionSourceBuffersChangedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10620" pos:column="1">/* interface IVxProjectionSourceBuffersChangedEventArgs */</comment>
<comment type="block" pos:line="10621" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10624" pos:column="1">EXTERN_C</name> <specifier pos:line="10624" pos:column="10">const</specifier> <name pos:line="10624" pos:column="16">IID</name></type> <name pos:line="10624" pos:column="20">IID_IVxProjectionSourceBuffersChangedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="10626" pos:column="1">#<cpp:directive pos:line="10626" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10626" pos:column="5">defined</name><argument_list pos:line="10626" pos:column="12">(<argument><expr><name pos:line="10626" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10626" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10626" pos:column="29">!</op:operator><call><name pos:line="10626" pos:column="30">defined</name><argument_list pos:line="10626" pos:column="37">(<argument><expr><name pos:line="10626" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10628" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10628" pos:column="19">(<argument pos:line="10628" pos:column="20">"d058cf17-7aa6-41da-8816-90b93250e998"</argument>)</argument_list></macro>
    <label><name pos:line="10629" pos:column="5">IVxProjectionSourceBuffersChangedEventArgs</name> :</label> <expr_stmt><expr pos:line="10629" pos:column="50">public <name pos:line="10629" pos:column="57">IVxProjectionSourceSpansChangedEventArgs</name>
    <block pos:line="10630" pos:column="5">{
    <expr pos:line="10631" pos:column="5">public<op:operator pos:line="10631" pos:column="11">:</op:operator>
        virtual <name pos:line="10632" pos:column="17">HRESULT</name> <name pos:line="10632" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10632" pos:column="43">GetAddedBuffers</name><argument_list pos:line="10632" pos:column="58">( 
            <comment type="block" pos:line="10633" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10633" pos:column="33">IListIVxTextBuffer</name> <op:operator pos:line="10633" pos:column="52">*</op:operator><op:operator pos:line="10633" pos:column="53">*</op:operator><name pos:line="10633" pos:column="54">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10633" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="10633" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="10635" pos:column="9">virtual <name pos:line="10635" pos:column="17">HRESULT</name> <name pos:line="10635" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10635" pos:column="43">GetRemovedBuffers</name><argument_list pos:line="10635" pos:column="60">( 
            <comment type="block" pos:line="10636" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10636" pos:column="33">IListIVxTextBuffer</name> <op:operator pos:line="10636" pos:column="52">*</op:operator><op:operator pos:line="10636" pos:column="53">*</op:operator><name pos:line="10636" pos:column="54">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10636" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="10636" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10640" pos:column="1">#<cpp:directive pos:line="10640" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10640" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10642" pos:column="5">typedef <type><struct pos:line="10642" pos:column="13">struct <name pos:line="10642" pos:column="20">IVxProjectionSourceBuffersChangedEventArgsVtbl</name>
    <block pos:line="10643" pos:column="5">{<public type="default" pos:line="10643" pos:column="6">
        <function_decl><type><name pos:line="10644" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10646" pos:column="9">HRESULT</name></type> ( <name pos:line="10646" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10646" pos:column="37">*</type:modifier><name pos:line="10646" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10646" pos:column="54">( 
            <param><decl><type><name pos:line="10647" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10647" pos:column="56">*</type:modifier></type> <name pos:line="10647" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10648" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10648" pos:column="24">REFIID</name></type> <name pos:line="10648" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10649" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10650" pos:column="13">__RPC__deref_out</name>  <name pos:line="10650" pos:column="31">void</name> <type:modifier pos:line="10650" pos:column="36">*</type:modifier><type:modifier pos:line="10650" pos:column="37">*</type:modifier></type><name pos:line="10650" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10652" pos:column="9">ULONG</name></type> ( <name pos:line="10652" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10652" pos:column="35">*</type:modifier><name pos:line="10652" pos:column="36">AddRef</name> )<parameter_list pos:line="10652" pos:column="44">( 
            <param><decl><type><name pos:line="10653" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10653" pos:column="56">*</type:modifier></type> <name pos:line="10653" pos:column="58">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10655" pos:column="9">ULONG</name></type> ( <name pos:line="10655" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10655" pos:column="35">*</type:modifier><name pos:line="10655" pos:column="36">Release</name> )<parameter_list pos:line="10655" pos:column="45">( 
            <param><decl><type><name pos:line="10656" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10656" pos:column="56">*</type:modifier></type> <name pos:line="10656" pos:column="58">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10658" pos:column="9">HRESULT</name></type> ( <name pos:line="10658" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10658" pos:column="37">*</type:modifier><name pos:line="10658" pos:column="38">GetBefore</name> )<parameter_list pos:line="10658" pos:column="49">( 
            <param><decl><type><name pos:line="10659" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10659" pos:column="56">*</type:modifier></type> <name pos:line="10659" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10660" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10660" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10660" pos:column="49">*</type:modifier><type:modifier pos:line="10660" pos:column="50">*</type:modifier></type><name pos:line="10660" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10662" pos:column="9">HRESULT</name></type> ( <name pos:line="10662" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10662" pos:column="37">*</type:modifier><name pos:line="10662" pos:column="38">GetAfter</name> )<parameter_list pos:line="10662" pos:column="48">( 
            <param><decl><type><name pos:line="10663" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10663" pos:column="56">*</type:modifier></type> <name pos:line="10663" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10664" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10664" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="10664" pos:column="49">*</type:modifier><type:modifier pos:line="10664" pos:column="50">*</type:modifier></type><name pos:line="10664" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10666" pos:column="9">HRESULT</name></type> ( <name pos:line="10666" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10666" pos:column="37">*</type:modifier><name pos:line="10666" pos:column="38">GetBeforeVersion</name> )<parameter_list pos:line="10666" pos:column="56">( 
            <param><decl><type><name pos:line="10667" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10667" pos:column="56">*</type:modifier></type> <name pos:line="10667" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10668" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10668" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="10668" pos:column="48">*</type:modifier><type:modifier pos:line="10668" pos:column="49">*</type:modifier></type><name pos:line="10668" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10670" pos:column="9">HRESULT</name></type> ( <name pos:line="10670" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10670" pos:column="37">*</type:modifier><name pos:line="10670" pos:column="38">GetAfterVersion</name> )<parameter_list pos:line="10670" pos:column="55">( 
            <param><decl><type><name pos:line="10671" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10671" pos:column="56">*</type:modifier></type> <name pos:line="10671" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10672" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10672" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="10672" pos:column="48">*</type:modifier><type:modifier pos:line="10672" pos:column="49">*</type:modifier></type><name pos:line="10672" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10674" pos:column="9">HRESULT</name></type> ( <name pos:line="10674" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10674" pos:column="37">*</type:modifier><name pos:line="10674" pos:column="38">GetEditTag</name> )<parameter_list pos:line="10674" pos:column="50">( 
            <param><decl><type><name pos:line="10675" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10675" pos:column="56">*</type:modifier></type> <name pos:line="10675" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10676" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10676" pos:column="33">IUnknown</name> <type:modifier pos:line="10676" pos:column="42">*</type:modifier><type:modifier pos:line="10676" pos:column="43">*</type:modifier></type><name pos:line="10676" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10678" pos:column="9">HRESULT</name></type> ( <name pos:line="10678" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10678" pos:column="37">*</type:modifier><name pos:line="10678" pos:column="38">GetChanges</name> )<parameter_list pos:line="10678" pos:column="50">( 
            <param><decl><type><name pos:line="10679" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10679" pos:column="56">*</type:modifier></type> <name pos:line="10679" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10680" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10680" pos:column="33">IVxNormalizedTextChangeCollection</name> <type:modifier pos:line="10680" pos:column="67">*</type:modifier><type:modifier pos:line="10680" pos:column="68">*</type:modifier></type><name pos:line="10680" pos:column="69">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10682" pos:column="9">HRESULT</name></type> ( <name pos:line="10682" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10682" pos:column="37">*</type:modifier><name pos:line="10682" pos:column="38">GetOptions</name> )<parameter_list pos:line="10682" pos:column="50">( 
            <param><decl><type><name pos:line="10683" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10683" pos:column="56">*</type:modifier></type> <name pos:line="10683" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10684" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10684" pos:column="33">VxEditOptions</name> <type:modifier pos:line="10684" pos:column="47">*</type:modifier></type><name pos:line="10684" pos:column="48">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10686" pos:column="9">HRESULT</name></type> ( <name pos:line="10686" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10686" pos:column="37">*</type:modifier><name pos:line="10686" pos:column="38">GetSpanPosition</name> )<parameter_list pos:line="10686" pos:column="55">( 
            <param><decl><type><name pos:line="10687" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10687" pos:column="56">*</type:modifier></type> <name pos:line="10687" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10688" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10688" pos:column="33">int</name> <type:modifier pos:line="10688" pos:column="37">*</type:modifier></type><name pos:line="10688" pos:column="38">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10690" pos:column="9">HRESULT</name></type> ( <name pos:line="10690" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10690" pos:column="37">*</type:modifier><name pos:line="10690" pos:column="38">GetInsertedSpans</name> )<parameter_list pos:line="10690" pos:column="56">( 
            <param><decl><type><name pos:line="10691" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10691" pos:column="56">*</type:modifier></type> <name pos:line="10691" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10692" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10692" pos:column="33">IListIVxTrackingSpan</name> <type:modifier pos:line="10692" pos:column="54">*</type:modifier><type:modifier pos:line="10692" pos:column="55">*</type:modifier></type><name pos:line="10692" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10694" pos:column="9">HRESULT</name></type> ( <name pos:line="10694" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10694" pos:column="37">*</type:modifier><name pos:line="10694" pos:column="38">GetDeletedSpans</name> )<parameter_list pos:line="10694" pos:column="55">( 
            <param><decl><type><name pos:line="10695" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10695" pos:column="56">*</type:modifier></type> <name pos:line="10695" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10696" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10696" pos:column="33">IListIVxTrackingSpan</name> <type:modifier pos:line="10696" pos:column="54">*</type:modifier><type:modifier pos:line="10696" pos:column="55">*</type:modifier></type><name pos:line="10696" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10698" pos:column="9">HRESULT</name></type> ( <name pos:line="10698" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10698" pos:column="37">*</type:modifier><name pos:line="10698" pos:column="38">GetBefore_2</name> )<parameter_list pos:line="10698" pos:column="51">( 
            <param><decl><type><name pos:line="10699" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10699" pos:column="56">*</type:modifier></type> <name pos:line="10699" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10700" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10700" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10700" pos:column="55">*</type:modifier><type:modifier pos:line="10700" pos:column="56">*</type:modifier></type><name pos:line="10700" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10702" pos:column="9">HRESULT</name></type> ( <name pos:line="10702" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10702" pos:column="37">*</type:modifier><name pos:line="10702" pos:column="38">GetAfter_2</name> )<parameter_list pos:line="10702" pos:column="50">( 
            <param><decl><type><name pos:line="10703" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10703" pos:column="56">*</type:modifier></type> <name pos:line="10703" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10704" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10704" pos:column="33">IVxProjectionSnapshot</name> <type:modifier pos:line="10704" pos:column="55">*</type:modifier><type:modifier pos:line="10704" pos:column="56">*</type:modifier></type><name pos:line="10704" pos:column="57">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10706" pos:column="9">HRESULT</name></type> ( <name pos:line="10706" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10706" pos:column="37">*</type:modifier><name pos:line="10706" pos:column="38">GetAddedBuffers</name> )<parameter_list pos:line="10706" pos:column="55">( 
            <param><decl><type><name pos:line="10707" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10707" pos:column="56">*</type:modifier></type> <name pos:line="10707" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10708" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10708" pos:column="33">IListIVxTextBuffer</name> <type:modifier pos:line="10708" pos:column="52">*</type:modifier><type:modifier pos:line="10708" pos:column="53">*</type:modifier></type><name pos:line="10708" pos:column="54">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10710" pos:column="9">HRESULT</name></type> ( <name pos:line="10710" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10710" pos:column="37">*</type:modifier><name pos:line="10710" pos:column="38">GetRemovedBuffers</name> )<parameter_list pos:line="10710" pos:column="57">( 
            <param><decl><type><name pos:line="10711" pos:column="13">IVxProjectionSourceBuffersChangedEventArgs</name> <type:modifier pos:line="10711" pos:column="56">*</type:modifier></type> <name pos:line="10711" pos:column="58">This</name></decl></param>,
            <comment type="block" pos:line="10712" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10712" pos:column="33">IListIVxTextBuffer</name> <type:modifier pos:line="10712" pos:column="52">*</type:modifier><type:modifier pos:line="10712" pos:column="53">*</type:modifier></type><name pos:line="10712" pos:column="54">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10714" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10715" pos:column="7">IVxProjectionSourceBuffersChangedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10717" pos:column="5">interface</name></type> <name pos:line="10717" pos:column="15">IVxProjectionSourceBuffersChangedEventArgs</name>
    <argument_list pos:line="10718" pos:column="5">{
        <argument><expr><name pos:line="10719" pos:column="9">CONST_VTBL</name> struct <name pos:line="10719" pos:column="27">IVxProjectionSourceBuffersChangedEventArgsVtbl</name> <op:operator pos:line="10719" pos:column="74">*</op:operator><name pos:line="10719" pos:column="75">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10724" pos:column="1">#<cpp:directive pos:line="10724" pos:column="2">ifdef</cpp:directive> <name pos:line="10724" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10727" pos:column="1">#<cpp:directive pos:line="10727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10727" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_QueryInterface</name><parameter_list pos:line="10727" pos:column="66">(<param><type><name pos:line="10727" pos:column="67">This</name></type></param>,<param><type><name pos:line="10727" pos:column="72">riid</name></type></param>,<param><type><name pos:line="10727" pos:column="77">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10728" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10730" pos:column="1">#<cpp:directive pos:line="10730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10730" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_AddRef</name><parameter_list pos:line="10730" pos:column="58">(<param><type><name pos:line="10730" pos:column="59">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10731" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10733" pos:column="1">#<cpp:directive pos:line="10733" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10733" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_Release</name><parameter_list pos:line="10733" pos:column="59">(<param><type><name pos:line="10733" pos:column="60">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10734" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10737" pos:column="1">#<cpp:directive pos:line="10737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10737" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetBefore</name><parameter_list pos:line="10737" pos:column="61">(<param><type><name pos:line="10737" pos:column="62">This</name></type></param>,<param><type><name pos:line="10737" pos:column="67">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10738" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10740" pos:column="1">#<cpp:directive pos:line="10740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10740" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetAfter</name><parameter_list pos:line="10740" pos:column="60">(<param><type><name pos:line="10740" pos:column="61">This</name></type></param>,<param><type><name pos:line="10740" pos:column="66">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10741" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10743" pos:column="1">#<cpp:directive pos:line="10743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10743" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetBeforeVersion</name><parameter_list pos:line="10743" pos:column="68">(<param><type><name pos:line="10743" pos:column="69">This</name></type></param>,<param><type><name pos:line="10743" pos:column="74">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10744" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10746" pos:column="1">#<cpp:directive pos:line="10746" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10746" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetAfterVersion</name><parameter_list pos:line="10746" pos:column="67">(<param><type><name pos:line="10746" pos:column="68">This</name></type></param>,<param><type><name pos:line="10746" pos:column="73">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10747" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfterVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10749" pos:column="1">#<cpp:directive pos:line="10749" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10749" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetEditTag</name><parameter_list pos:line="10749" pos:column="62">(<param><type><name pos:line="10749" pos:column="63">This</name></type></param>,<param><type><name pos:line="10749" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10750" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditTag(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10753" pos:column="1">#<cpp:directive pos:line="10753" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10753" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetChanges</name><parameter_list pos:line="10753" pos:column="62">(<param><type><name pos:line="10753" pos:column="63">This</name></type></param>,<param><type><name pos:line="10753" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10754" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetChanges(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10756" pos:column="1">#<cpp:directive pos:line="10756" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10756" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetOptions</name><parameter_list pos:line="10756" pos:column="62">(<param><type><name pos:line="10756" pos:column="63">This</name></type></param>,<param><type><name pos:line="10756" pos:column="68">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10757" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOptions(This,pRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10760" pos:column="1">#<cpp:directive pos:line="10760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10760" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetSpanPosition</name><parameter_list pos:line="10760" pos:column="67">(<param><type><name pos:line="10760" pos:column="68">This</name></type></param>,<param><type><name pos:line="10760" pos:column="73">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10761" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanPosition(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10763" pos:column="1">#<cpp:directive pos:line="10763" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10763" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetInsertedSpans</name><parameter_list pos:line="10763" pos:column="68">(<param><type><name pos:line="10763" pos:column="69">This</name></type></param>,<param><type><name pos:line="10763" pos:column="74">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10764" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInsertedSpans(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10766" pos:column="1">#<cpp:directive pos:line="10766" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10766" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetDeletedSpans</name><parameter_list pos:line="10766" pos:column="67">(<param><type><name pos:line="10766" pos:column="68">This</name></type></param>,<param><type><name pos:line="10766" pos:column="73">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10767" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDeletedSpans(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10769" pos:column="1">#<cpp:directive pos:line="10769" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10769" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetBefore_2</name><parameter_list pos:line="10769" pos:column="63">(<param><type><name pos:line="10769" pos:column="64">This</name></type></param>,<param><type><name pos:line="10769" pos:column="69">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10770" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore_2(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10772" pos:column="1">#<cpp:directive pos:line="10772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10772" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetAfter_2</name><parameter_list pos:line="10772" pos:column="62">(<param><type><name pos:line="10772" pos:column="63">This</name></type></param>,<param><type><name pos:line="10772" pos:column="68">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10773" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAfter_2(This,ppRetVal) )</cpp:value></cpp:define> 


<cpp:define pos:line="10776" pos:column="1">#<cpp:directive pos:line="10776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10776" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetAddedBuffers</name><parameter_list pos:line="10776" pos:column="67">(<param><type><name pos:line="10776" pos:column="68">This</name></type></param>,<param><type><name pos:line="10776" pos:column="73">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10777" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAddedBuffers(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="10779" pos:column="1">#<cpp:directive pos:line="10779" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10779" pos:column="9">IVxProjectionSourceBuffersChangedEventArgs_GetRemovedBuffers</name><parameter_list pos:line="10779" pos:column="69">(<param><type><name pos:line="10779" pos:column="70">This</name></type></param>,<param><type><name pos:line="10779" pos:column="75">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10780" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemovedBuffers(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10782" pos:column="1">#<cpp:directive pos:line="10782" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10782" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10785" pos:column="1">#<cpp:directive pos:line="10785" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10785" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10790" pos:column="1">#<cpp:directive pos:line="10790" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10790" pos:column="9">/* __IVxProjectionSourceBuffersChangedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10793" pos:column="1">#<cpp:directive pos:line="10793" pos:column="2">ifndef</cpp:directive> <name pos:line="10793" pos:column="9">__IVxSnapshotSpanEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10794" pos:column="1">#<cpp:directive pos:line="10794" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10794" pos:column="9">__IVxSnapshotSpanEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10796" pos:column="1">/* interface IVxSnapshotSpanEventArgs */</comment>
<comment type="block" pos:line="10797" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10800" pos:column="1">EXTERN_C</name> <specifier pos:line="10800" pos:column="10">const</specifier> <name pos:line="10800" pos:column="16">IID</name></type> <name pos:line="10800" pos:column="20">IID_IVxSnapshotSpanEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="10802" pos:column="1">#<cpp:directive pos:line="10802" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10802" pos:column="5">defined</name><argument_list pos:line="10802" pos:column="12">(<argument><expr><name pos:line="10802" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10802" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10802" pos:column="29">!</op:operator><call><name pos:line="10802" pos:column="30">defined</name><argument_list pos:line="10802" pos:column="37">(<argument><expr><name pos:line="10802" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10804" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10804" pos:column="19">(<argument pos:line="10804" pos:column="20">"521a6cf3-58c3-4f05-be86-64871c7e7787"</argument>)</argument_list></macro>
    <label><name pos:line="10805" pos:column="5">IVxSnapshotSpanEventArgs</name> :</label> <expr_stmt><expr pos:line="10805" pos:column="32">public <name pos:line="10805" pos:column="39">IUnknown</name>
    <block pos:line="10806" pos:column="5">{
    <expr pos:line="10807" pos:column="5">public<op:operator pos:line="10807" pos:column="11">:</op:operator>
        virtual <name pos:line="10808" pos:column="17">HRESULT</name> <name pos:line="10808" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10808" pos:column="43">GetSpan</name><argument_list pos:line="10808" pos:column="50">( 
            <comment type="block" pos:line="10809" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10809" pos:column="33">VxSnapshotSpan</name> <op:operator pos:line="10809" pos:column="48">*</op:operator><name pos:line="10809" pos:column="49">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10809" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="10809" pos:column="60">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10813" pos:column="1">#<cpp:directive pos:line="10813" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10813" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10815" pos:column="5">typedef <type><struct pos:line="10815" pos:column="13">struct <name pos:line="10815" pos:column="20">IVxSnapshotSpanEventArgsVtbl</name>
    <block pos:line="10816" pos:column="5">{<public type="default" pos:line="10816" pos:column="6">
        <function_decl><type><name pos:line="10817" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10819" pos:column="9">HRESULT</name></type> ( <name pos:line="10819" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10819" pos:column="37">*</type:modifier><name pos:line="10819" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10819" pos:column="54">( 
            <param><decl><type><name pos:line="10820" pos:column="13">IVxSnapshotSpanEventArgs</name> <type:modifier pos:line="10820" pos:column="38">*</type:modifier></type> <name pos:line="10820" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="10821" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10821" pos:column="24">REFIID</name></type> <name pos:line="10821" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10822" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10823" pos:column="13">__RPC__deref_out</name>  <name pos:line="10823" pos:column="31">void</name> <type:modifier pos:line="10823" pos:column="36">*</type:modifier><type:modifier pos:line="10823" pos:column="37">*</type:modifier></type><name pos:line="10823" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10825" pos:column="9">ULONG</name></type> ( <name pos:line="10825" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10825" pos:column="35">*</type:modifier><name pos:line="10825" pos:column="36">AddRef</name> )<parameter_list pos:line="10825" pos:column="44">( 
            <param><decl><type><name pos:line="10826" pos:column="13">IVxSnapshotSpanEventArgs</name> <type:modifier pos:line="10826" pos:column="38">*</type:modifier></type> <name pos:line="10826" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10828" pos:column="9">ULONG</name></type> ( <name pos:line="10828" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10828" pos:column="35">*</type:modifier><name pos:line="10828" pos:column="36">Release</name> )<parameter_list pos:line="10828" pos:column="45">( 
            <param><decl><type><name pos:line="10829" pos:column="13">IVxSnapshotSpanEventArgs</name> <type:modifier pos:line="10829" pos:column="38">*</type:modifier></type> <name pos:line="10829" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10831" pos:column="9">HRESULT</name></type> ( <name pos:line="10831" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10831" pos:column="37">*</type:modifier><name pos:line="10831" pos:column="38">GetSpan</name> )<parameter_list pos:line="10831" pos:column="47">( 
            <param><decl><type><name pos:line="10832" pos:column="13">IVxSnapshotSpanEventArgs</name> <type:modifier pos:line="10832" pos:column="38">*</type:modifier></type> <name pos:line="10832" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="10833" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10833" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="10833" pos:column="48">*</type:modifier></type><name pos:line="10833" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10835" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10836" pos:column="7">IVxSnapshotSpanEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10838" pos:column="5">interface</name></type> <name pos:line="10838" pos:column="15">IVxSnapshotSpanEventArgs</name>
    <argument_list pos:line="10839" pos:column="5">{
        <argument><expr><name pos:line="10840" pos:column="9">CONST_VTBL</name> struct <name pos:line="10840" pos:column="27">IVxSnapshotSpanEventArgsVtbl</name> <op:operator pos:line="10840" pos:column="56">*</op:operator><name pos:line="10840" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10845" pos:column="1">#<cpp:directive pos:line="10845" pos:column="2">ifdef</cpp:directive> <name pos:line="10845" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10848" pos:column="1">#<cpp:directive pos:line="10848" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10848" pos:column="9">IVxSnapshotSpanEventArgs_QueryInterface</name><parameter_list pos:line="10848" pos:column="48">(<param><type><name pos:line="10848" pos:column="49">This</name></type></param>,<param><type><name pos:line="10848" pos:column="54">riid</name></type></param>,<param><type><name pos:line="10848" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10849" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10851" pos:column="1">#<cpp:directive pos:line="10851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10851" pos:column="9">IVxSnapshotSpanEventArgs_AddRef</name><parameter_list pos:line="10851" pos:column="40">(<param><type><name pos:line="10851" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10852" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10854" pos:column="1">#<cpp:directive pos:line="10854" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10854" pos:column="9">IVxSnapshotSpanEventArgs_Release</name><parameter_list pos:line="10854" pos:column="41">(<param><type><name pos:line="10854" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10855" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10858" pos:column="1">#<cpp:directive pos:line="10858" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10858" pos:column="9">IVxSnapshotSpanEventArgs_GetSpan</name><parameter_list pos:line="10858" pos:column="41">(<param><type><name pos:line="10858" pos:column="42">This</name></type></param>,<param><type><name pos:line="10858" pos:column="47">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10859" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpan(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10861" pos:column="1">#<cpp:directive pos:line="10861" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10861" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10864" pos:column="1">#<cpp:directive pos:line="10864" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10864" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10869" pos:column="1">#<cpp:directive pos:line="10869" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10869" pos:column="9">/* __IVxSnapshotSpanEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10872" pos:column="1">#<cpp:directive pos:line="10872" pos:column="2">ifndef</cpp:directive> <name pos:line="10872" pos:column="9">__IVxTextBufferCreatedEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10873" pos:column="1">#<cpp:directive pos:line="10873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10873" pos:column="9">__IVxTextBufferCreatedEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10875" pos:column="1">/* interface IVxTextBufferCreatedEventArgs */</comment>
<comment type="block" pos:line="10876" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10879" pos:column="1">EXTERN_C</name> <specifier pos:line="10879" pos:column="10">const</specifier> <name pos:line="10879" pos:column="16">IID</name></type> <name pos:line="10879" pos:column="20">IID_IVxTextBufferCreatedEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="10881" pos:column="1">#<cpp:directive pos:line="10881" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10881" pos:column="5">defined</name><argument_list pos:line="10881" pos:column="12">(<argument><expr><name pos:line="10881" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10881" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10881" pos:column="29">!</op:operator><call><name pos:line="10881" pos:column="30">defined</name><argument_list pos:line="10881" pos:column="37">(<argument><expr><name pos:line="10881" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10883" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10883" pos:column="19">(<argument pos:line="10883" pos:column="20">"318855de-0da5-4d1d-9cce-481d99b75f16"</argument>)</argument_list></macro>
    <label><name pos:line="10884" pos:column="5">IVxTextBufferCreatedEventArgs</name> :</label> <expr_stmt><expr pos:line="10884" pos:column="37">public <name pos:line="10884" pos:column="44">IUnknown</name>
    <block pos:line="10885" pos:column="5">{
    <expr pos:line="10886" pos:column="5">public<op:operator pos:line="10886" pos:column="11">:</op:operator>
        virtual <name pos:line="10887" pos:column="17">HRESULT</name> <name pos:line="10887" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10887" pos:column="43">GetTextBuffer</name><argument_list pos:line="10887" pos:column="56">( 
            <comment type="block" pos:line="10888" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10888" pos:column="33">IVxTextBuffer</name> <op:operator pos:line="10888" pos:column="47">*</op:operator><op:operator pos:line="10888" pos:column="48">*</op:operator><name pos:line="10888" pos:column="49">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10888" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="10888" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10892" pos:column="1">#<cpp:directive pos:line="10892" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10892" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10894" pos:column="5">typedef <type><struct pos:line="10894" pos:column="13">struct <name pos:line="10894" pos:column="20">IVxTextBufferCreatedEventArgsVtbl</name>
    <block pos:line="10895" pos:column="5">{<public type="default" pos:line="10895" pos:column="6">
        <function_decl><type><name pos:line="10896" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10898" pos:column="9">HRESULT</name></type> ( <name pos:line="10898" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10898" pos:column="37">*</type:modifier><name pos:line="10898" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10898" pos:column="54">( 
            <param><decl><type><name pos:line="10899" pos:column="13">IVxTextBufferCreatedEventArgs</name> <type:modifier pos:line="10899" pos:column="43">*</type:modifier></type> <name pos:line="10899" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="10900" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10900" pos:column="24">REFIID</name></type> <name pos:line="10900" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10901" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10902" pos:column="13">__RPC__deref_out</name>  <name pos:line="10902" pos:column="31">void</name> <type:modifier pos:line="10902" pos:column="36">*</type:modifier><type:modifier pos:line="10902" pos:column="37">*</type:modifier></type><name pos:line="10902" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10904" pos:column="9">ULONG</name></type> ( <name pos:line="10904" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10904" pos:column="35">*</type:modifier><name pos:line="10904" pos:column="36">AddRef</name> )<parameter_list pos:line="10904" pos:column="44">( 
            <param><decl><type><name pos:line="10905" pos:column="13">IVxTextBufferCreatedEventArgs</name> <type:modifier pos:line="10905" pos:column="43">*</type:modifier></type> <name pos:line="10905" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10907" pos:column="9">ULONG</name></type> ( <name pos:line="10907" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10907" pos:column="35">*</type:modifier><name pos:line="10907" pos:column="36">Release</name> )<parameter_list pos:line="10907" pos:column="45">( 
            <param><decl><type><name pos:line="10908" pos:column="13">IVxTextBufferCreatedEventArgs</name> <type:modifier pos:line="10908" pos:column="43">*</type:modifier></type> <name pos:line="10908" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10910" pos:column="9">HRESULT</name></type> ( <name pos:line="10910" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10910" pos:column="37">*</type:modifier><name pos:line="10910" pos:column="38">GetTextBuffer</name> )<parameter_list pos:line="10910" pos:column="53">( 
            <param><decl><type><name pos:line="10911" pos:column="13">IVxTextBufferCreatedEventArgs</name> <type:modifier pos:line="10911" pos:column="43">*</type:modifier></type> <name pos:line="10911" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="10912" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10912" pos:column="33">IVxTextBuffer</name> <type:modifier pos:line="10912" pos:column="47">*</type:modifier><type:modifier pos:line="10912" pos:column="48">*</type:modifier></type><name pos:line="10912" pos:column="49">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10914" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10915" pos:column="7">IVxTextBufferCreatedEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10917" pos:column="5">interface</name></type> <name pos:line="10917" pos:column="15">IVxTextBufferCreatedEventArgs</name>
    <argument_list pos:line="10918" pos:column="5">{
        <argument><expr><name pos:line="10919" pos:column="9">CONST_VTBL</name> struct <name pos:line="10919" pos:column="27">IVxTextBufferCreatedEventArgsVtbl</name> <op:operator pos:line="10919" pos:column="61">*</op:operator><name pos:line="10919" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10924" pos:column="1">#<cpp:directive pos:line="10924" pos:column="2">ifdef</cpp:directive> <name pos:line="10924" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10927" pos:column="1">#<cpp:directive pos:line="10927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10927" pos:column="9">IVxTextBufferCreatedEventArgs_QueryInterface</name><parameter_list pos:line="10927" pos:column="53">(<param><type><name pos:line="10927" pos:column="54">This</name></type></param>,<param><type><name pos:line="10927" pos:column="59">riid</name></type></param>,<param><type><name pos:line="10927" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10928" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10930" pos:column="1">#<cpp:directive pos:line="10930" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10930" pos:column="9">IVxTextBufferCreatedEventArgs_AddRef</name><parameter_list pos:line="10930" pos:column="45">(<param><type><name pos:line="10930" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10931" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10933" pos:column="1">#<cpp:directive pos:line="10933" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10933" pos:column="9">IVxTextBufferCreatedEventArgs_Release</name><parameter_list pos:line="10933" pos:column="46">(<param><type><name pos:line="10933" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10934" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10937" pos:column="1">#<cpp:directive pos:line="10937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10937" pos:column="9">IVxTextBufferCreatedEventArgs_GetTextBuffer</name><parameter_list pos:line="10937" pos:column="52">(<param><type><name pos:line="10937" pos:column="53">This</name></type></param>,<param><type><name pos:line="10937" pos:column="58">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10938" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextBuffer(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10940" pos:column="1">#<cpp:directive pos:line="10940" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10940" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10943" pos:column="1">#<cpp:directive pos:line="10943" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10943" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10948" pos:column="1">#<cpp:directive pos:line="10948" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10948" pos:column="9">/* __IVxTextBufferCreatedEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10951" pos:column="1">#<cpp:directive pos:line="10951" pos:column="2">ifndef</cpp:directive> <name pos:line="10951" pos:column="9">__IVxTextContentChangingEventArgs_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10952" pos:column="1">#<cpp:directive pos:line="10952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10952" pos:column="9">__IVxTextContentChangingEventArgs_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10954" pos:column="1">/* interface IVxTextContentChangingEventArgs */</comment>
<comment type="block" pos:line="10955" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10958" pos:column="1">EXTERN_C</name> <specifier pos:line="10958" pos:column="10">const</specifier> <name pos:line="10958" pos:column="16">IID</name></type> <name pos:line="10958" pos:column="20">IID_IVxTextContentChangingEventArgs</name></decl>;</decl_stmt>

<cpp:if pos:line="10960" pos:column="1">#<cpp:directive pos:line="10960" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10960" pos:column="5">defined</name><argument_list pos:line="10960" pos:column="12">(<argument><expr><name pos:line="10960" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10960" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10960" pos:column="29">!</op:operator><call><name pos:line="10960" pos:column="30">defined</name><argument_list pos:line="10960" pos:column="37">(<argument><expr><name pos:line="10960" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10962" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10962" pos:column="19">(<argument pos:line="10962" pos:column="20">"f26e15b3-89f8-4d5e-9bff-3d95c0101499"</argument>)</argument_list></macro>
    <label><name pos:line="10963" pos:column="5">IVxTextContentChangingEventArgs</name> :</label> <expr_stmt><expr pos:line="10963" pos:column="39">public <name pos:line="10963" pos:column="46">IUnknown</name>
    <block pos:line="10964" pos:column="5">{
    <expr pos:line="10965" pos:column="5">public<op:operator pos:line="10965" pos:column="11">:</op:operator>
        virtual <name pos:line="10966" pos:column="17">HRESULT</name> <name pos:line="10966" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10966" pos:column="43">GetCanceled</name><argument_list pos:line="10966" pos:column="54">( 
            <comment type="block" pos:line="10967" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10967" pos:column="33">BOOL</name> <op:operator pos:line="10967" pos:column="38">*</op:operator><name pos:line="10967" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10967" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="10967" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="10969" pos:column="9">virtual <name pos:line="10969" pos:column="17">HRESULT</name> <name pos:line="10969" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10969" pos:column="43">GetBefore</name><argument_list pos:line="10969" pos:column="52">( 
            <comment type="block" pos:line="10970" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10970" pos:column="33">IVxTextSnapshot</name> <op:operator pos:line="10970" pos:column="49">*</op:operator><op:operator pos:line="10970" pos:column="50">*</op:operator><name pos:line="10970" pos:column="51">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10970" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="10970" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="10972" pos:column="9">virtual <name pos:line="10972" pos:column="17">HRESULT</name> <name pos:line="10972" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10972" pos:column="43">GetEditTag</name><argument_list pos:line="10972" pos:column="53">( 
            <comment type="block" pos:line="10973" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10973" pos:column="33">IUnknown</name> <op:operator pos:line="10973" pos:column="42">*</op:operator><op:operator pos:line="10973" pos:column="43">*</op:operator><name pos:line="10973" pos:column="44">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10973" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="10973" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="10975" pos:column="9">virtual <name pos:line="10975" pos:column="17">HRESULT</name> <name pos:line="10975" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10975" pos:column="43">Cancel</name><argument_list pos:line="10975" pos:column="49">( <argument><expr><name pos:line="10975" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="10975" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="10975" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="10977" pos:column="9">virtual <name pos:line="10977" pos:column="17">HRESULT</name> <name pos:line="10977" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10977" pos:column="43">GetBeforeVersion</name><argument_list pos:line="10977" pos:column="59">( 
            <comment type="block" pos:line="10978" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="10978" pos:column="33">IVxTextVersion</name> <op:operator pos:line="10978" pos:column="48">*</op:operator><op:operator pos:line="10978" pos:column="49">*</op:operator><name pos:line="10978" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="10978" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="10978" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10982" pos:column="1">#<cpp:directive pos:line="10982" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10982" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10984" pos:column="5">typedef <type><struct pos:line="10984" pos:column="13">struct <name pos:line="10984" pos:column="20">IVxTextContentChangingEventArgsVtbl</name>
    <block pos:line="10985" pos:column="5">{<public type="default" pos:line="10985" pos:column="6">
        <function_decl><type><name pos:line="10986" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10988" pos:column="9">HRESULT</name></type> ( <name pos:line="10988" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10988" pos:column="37">*</type:modifier><name pos:line="10988" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10988" pos:column="54">( 
            <param><decl><type><name pos:line="10989" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="10989" pos:column="45">*</type:modifier></type> <name pos:line="10989" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="10990" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10990" pos:column="24">REFIID</name></type> <name pos:line="10990" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10991" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10992" pos:column="13">__RPC__deref_out</name>  <name pos:line="10992" pos:column="31">void</name> <type:modifier pos:line="10992" pos:column="36">*</type:modifier><type:modifier pos:line="10992" pos:column="37">*</type:modifier></type><name pos:line="10992" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10994" pos:column="9">ULONG</name></type> ( <name pos:line="10994" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10994" pos:column="35">*</type:modifier><name pos:line="10994" pos:column="36">AddRef</name> )<parameter_list pos:line="10994" pos:column="44">( 
            <param><decl><type><name pos:line="10995" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="10995" pos:column="45">*</type:modifier></type> <name pos:line="10995" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10997" pos:column="9">ULONG</name></type> ( <name pos:line="10997" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10997" pos:column="35">*</type:modifier><name pos:line="10997" pos:column="36">Release</name> )<parameter_list pos:line="10997" pos:column="45">( 
            <param><decl><type><name pos:line="10998" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="10998" pos:column="45">*</type:modifier></type> <name pos:line="10998" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11000" pos:column="9">HRESULT</name></type> ( <name pos:line="11000" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11000" pos:column="37">*</type:modifier><name pos:line="11000" pos:column="38">GetCanceled</name> )<parameter_list pos:line="11000" pos:column="51">( 
            <param><decl><type><name pos:line="11001" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="11001" pos:column="45">*</type:modifier></type> <name pos:line="11001" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="11002" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11002" pos:column="33">BOOL</name> <type:modifier pos:line="11002" pos:column="38">*</type:modifier></type><name pos:line="11002" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11004" pos:column="9">HRESULT</name></type> ( <name pos:line="11004" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11004" pos:column="37">*</type:modifier><name pos:line="11004" pos:column="38">GetBefore</name> )<parameter_list pos:line="11004" pos:column="49">( 
            <param><decl><type><name pos:line="11005" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="11005" pos:column="45">*</type:modifier></type> <name pos:line="11005" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="11006" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11006" pos:column="33">IVxTextSnapshot</name> <type:modifier pos:line="11006" pos:column="49">*</type:modifier><type:modifier pos:line="11006" pos:column="50">*</type:modifier></type><name pos:line="11006" pos:column="51">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11008" pos:column="9">HRESULT</name></type> ( <name pos:line="11008" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11008" pos:column="37">*</type:modifier><name pos:line="11008" pos:column="38">GetEditTag</name> )<parameter_list pos:line="11008" pos:column="50">( 
            <param><decl><type><name pos:line="11009" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="11009" pos:column="45">*</type:modifier></type> <name pos:line="11009" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="11010" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11010" pos:column="33">IUnknown</name> <type:modifier pos:line="11010" pos:column="42">*</type:modifier><type:modifier pos:line="11010" pos:column="43">*</type:modifier></type><name pos:line="11010" pos:column="44">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11012" pos:column="9">HRESULT</name></type> ( <name pos:line="11012" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11012" pos:column="37">*</type:modifier><name pos:line="11012" pos:column="38">Cancel</name> )<parameter_list pos:line="11012" pos:column="46">( 
            <param><decl><type><name pos:line="11013" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="11013" pos:column="45">*</type:modifier></type> <name pos:line="11013" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11015" pos:column="9">HRESULT</name></type> ( <name pos:line="11015" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11015" pos:column="37">*</type:modifier><name pos:line="11015" pos:column="38">GetBeforeVersion</name> )<parameter_list pos:line="11015" pos:column="56">( 
            <param><decl><type><name pos:line="11016" pos:column="13">IVxTextContentChangingEventArgs</name> <type:modifier pos:line="11016" pos:column="45">*</type:modifier></type> <name pos:line="11016" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="11017" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11017" pos:column="33">IVxTextVersion</name> <type:modifier pos:line="11017" pos:column="48">*</type:modifier><type:modifier pos:line="11017" pos:column="49">*</type:modifier></type><name pos:line="11017" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11019" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11020" pos:column="7">IVxTextContentChangingEventArgsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11022" pos:column="5">interface</name></type> <name pos:line="11022" pos:column="15">IVxTextContentChangingEventArgs</name>
    <argument_list pos:line="11023" pos:column="5">{
        <argument><expr><name pos:line="11024" pos:column="9">CONST_VTBL</name> struct <name pos:line="11024" pos:column="27">IVxTextContentChangingEventArgsVtbl</name> <op:operator pos:line="11024" pos:column="63">*</op:operator><name pos:line="11024" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11029" pos:column="1">#<cpp:directive pos:line="11029" pos:column="2">ifdef</cpp:directive> <name pos:line="11029" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11032" pos:column="1">#<cpp:directive pos:line="11032" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11032" pos:column="9">IVxTextContentChangingEventArgs_QueryInterface</name><parameter_list pos:line="11032" pos:column="55">(<param><type><name pos:line="11032" pos:column="56">This</name></type></param>,<param><type><name pos:line="11032" pos:column="61">riid</name></type></param>,<param><type><name pos:line="11032" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11033" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11035" pos:column="1">#<cpp:directive pos:line="11035" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11035" pos:column="9">IVxTextContentChangingEventArgs_AddRef</name><parameter_list pos:line="11035" pos:column="47">(<param><type><name pos:line="11035" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11036" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11038" pos:column="1">#<cpp:directive pos:line="11038" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11038" pos:column="9">IVxTextContentChangingEventArgs_Release</name><parameter_list pos:line="11038" pos:column="48">(<param><type><name pos:line="11038" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11039" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11042" pos:column="1">#<cpp:directive pos:line="11042" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11042" pos:column="9">IVxTextContentChangingEventArgs_GetCanceled</name><parameter_list pos:line="11042" pos:column="52">(<param><type><name pos:line="11042" pos:column="53">This</name></type></param>,<param><type><name pos:line="11042" pos:column="58">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11043" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCanceled(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11045" pos:column="1">#<cpp:directive pos:line="11045" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11045" pos:column="9">IVxTextContentChangingEventArgs_GetBefore</name><parameter_list pos:line="11045" pos:column="50">(<param><type><name pos:line="11045" pos:column="51">This</name></type></param>,<param><type><name pos:line="11045" pos:column="56">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11046" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBefore(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11048" pos:column="1">#<cpp:directive pos:line="11048" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11048" pos:column="9">IVxTextContentChangingEventArgs_GetEditTag</name><parameter_list pos:line="11048" pos:column="51">(<param><type><name pos:line="11048" pos:column="52">This</name></type></param>,<param><type><name pos:line="11048" pos:column="57">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11049" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditTag(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11051" pos:column="1">#<cpp:directive pos:line="11051" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11051" pos:column="9">IVxTextContentChangingEventArgs_Cancel</name><parameter_list pos:line="11051" pos:column="47">(<param><type><name pos:line="11051" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11052" pos:column="5">( (This)-&gt;lpVtbl -&gt; Cancel(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11054" pos:column="1">#<cpp:directive pos:line="11054" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11054" pos:column="9">IVxTextContentChangingEventArgs_GetBeforeVersion</name><parameter_list pos:line="11054" pos:column="57">(<param><type><name pos:line="11054" pos:column="58">This</name></type></param>,<param><type><name pos:line="11054" pos:column="63">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11055" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBeforeVersion(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11057" pos:column="1">#<cpp:directive pos:line="11057" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11057" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11060" pos:column="1">#<cpp:directive pos:line="11060" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11060" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11065" pos:column="1">#<cpp:directive pos:line="11065" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11065" pos:column="9">/* __IVxTextContentChangingEventArgs_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11068" pos:column="1">#<cpp:directive pos:line="11068" pos:column="2">ifndef</cpp:directive> <name pos:line="11068" pos:column="9">__IVxTextSearchService_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11069" pos:column="1">#<cpp:directive pos:line="11069" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11069" pos:column="9">__IVxTextSearchService_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11071" pos:column="1">/* interface IVxTextSearchService */</comment>
<comment type="block" pos:line="11072" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11075" pos:column="1">EXTERN_C</name> <specifier pos:line="11075" pos:column="10">const</specifier> <name pos:line="11075" pos:column="16">IID</name></type> <name pos:line="11075" pos:column="20">IID_IVxTextSearchService</name></decl>;</decl_stmt>

<cpp:if pos:line="11077" pos:column="1">#<cpp:directive pos:line="11077" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11077" pos:column="5">defined</name><argument_list pos:line="11077" pos:column="12">(<argument><expr><name pos:line="11077" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11077" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11077" pos:column="29">!</op:operator><call><name pos:line="11077" pos:column="30">defined</name><argument_list pos:line="11077" pos:column="37">(<argument><expr><name pos:line="11077" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11079" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11079" pos:column="19">(<argument pos:line="11079" pos:column="20">"30d6bd3f-c415-42a6-b6e2-fad40ba8ab35"</argument>)</argument_list></macro>
    <label><name pos:line="11080" pos:column="5">IVxTextSearchService</name> :</label> <expr_stmt><expr pos:line="11080" pos:column="28">public <name pos:line="11080" pos:column="35">IUnknown</name>
    <block pos:line="11081" pos:column="5">{
    <expr pos:line="11082" pos:column="5">public<op:operator pos:line="11082" pos:column="11">:</op:operator>
        virtual <name pos:line="11083" pos:column="17">HRESULT</name> <name pos:line="11083" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11083" pos:column="43">FindNext</name><argument_list pos:line="11083" pos:column="51">( 
            <comment type="block" pos:line="11084" pos:column="13">/* [in] */</comment> <argument pos:line="11084" pos:column="24">int startIndex</argument>,
            <comment type="block" pos:line="11085" pos:column="13">/* [in] */</comment> <argument pos:line="11085" pos:column="24">BOOL wraparound</argument>,
            <comment type="block" pos:line="11086" pos:column="13">/* [in] */</comment> <argument pos:line="11086" pos:column="24">VxFindData findData</argument>,
            <comment type="block" pos:line="11087" pos:column="13">/* [out] */</comment> <argument pos:line="11087" pos:column="25">BOOL *pRetValHasValue</argument>,
            <comment type="block" pos:line="11088" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11088" pos:column="33">VxSnapshotSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="11088" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="11088" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="11090" pos:column="9">virtual <name pos:line="11090" pos:column="17">HRESULT</name> <name pos:line="11090" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11090" pos:column="43">FindAll</name><argument_list pos:line="11090" pos:column="50">( 
            <comment type="block" pos:line="11091" pos:column="13">/* [in] */</comment> <argument pos:line="11091" pos:column="24">VxFindData findData</argument>,
            <comment type="block" pos:line="11092" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11092" pos:column="33">IListVxSnapshotSpan **ppRetVal</argument>)</argument_list></macro> <op:operator pos:line="11092" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="11092" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11096" pos:column="1">#<cpp:directive pos:line="11096" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11096" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11098" pos:column="5">typedef <type><struct pos:line="11098" pos:column="13">struct <name pos:line="11098" pos:column="20">IVxTextSearchServiceVtbl</name>
    <block pos:line="11099" pos:column="5">{<public type="default" pos:line="11099" pos:column="6">
        <function_decl><type><name pos:line="11100" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11102" pos:column="9">HRESULT</name></type> ( <name pos:line="11102" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11102" pos:column="37">*</type:modifier><name pos:line="11102" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11102" pos:column="54">( 
            <param><decl><type><name pos:line="11103" pos:column="13">IVxTextSearchService</name> <type:modifier pos:line="11103" pos:column="34">*</type:modifier></type> <name pos:line="11103" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="11104" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11104" pos:column="24">REFIID</name></type> <name pos:line="11104" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="11105" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11106" pos:column="13">__RPC__deref_out</name>  <name pos:line="11106" pos:column="31">void</name> <type:modifier pos:line="11106" pos:column="36">*</type:modifier><type:modifier pos:line="11106" pos:column="37">*</type:modifier></type><name pos:line="11106" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11108" pos:column="9">ULONG</name></type> ( <name pos:line="11108" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11108" pos:column="35">*</type:modifier><name pos:line="11108" pos:column="36">AddRef</name> )<parameter_list pos:line="11108" pos:column="44">( 
            <param><decl><type><name pos:line="11109" pos:column="13">IVxTextSearchService</name> <type:modifier pos:line="11109" pos:column="34">*</type:modifier></type> <name pos:line="11109" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11111" pos:column="9">ULONG</name></type> ( <name pos:line="11111" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11111" pos:column="35">*</type:modifier><name pos:line="11111" pos:column="36">Release</name> )<parameter_list pos:line="11111" pos:column="45">( 
            <param><decl><type><name pos:line="11112" pos:column="13">IVxTextSearchService</name> <type:modifier pos:line="11112" pos:column="34">*</type:modifier></type> <name pos:line="11112" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11114" pos:column="9">HRESULT</name></type> ( <name pos:line="11114" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11114" pos:column="37">*</type:modifier><name pos:line="11114" pos:column="38">FindNext</name> )<parameter_list pos:line="11114" pos:column="48">( 
            <param><decl><type><name pos:line="11115" pos:column="13">IVxTextSearchService</name> <type:modifier pos:line="11115" pos:column="34">*</type:modifier></type> <name pos:line="11115" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="11116" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11116" pos:column="24">int</name></type> <name pos:line="11116" pos:column="28">startIndex</name></decl></param>,
            <comment type="block" pos:line="11117" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11117" pos:column="24">BOOL</name></type> <name pos:line="11117" pos:column="29">wraparound</name></decl></param>,
            <comment type="block" pos:line="11118" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11118" pos:column="24">VxFindData</name></type> <name pos:line="11118" pos:column="35">findData</name></decl></param>,
            <comment type="block" pos:line="11119" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11119" pos:column="25">BOOL</name> <type:modifier pos:line="11119" pos:column="30">*</type:modifier></type><name pos:line="11119" pos:column="31">pRetValHasValue</name></decl></param>,
            <comment type="block" pos:line="11120" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11120" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="11120" pos:column="48">*</type:modifier></type><name pos:line="11120" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11122" pos:column="9">HRESULT</name></type> ( <name pos:line="11122" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11122" pos:column="37">*</type:modifier><name pos:line="11122" pos:column="38">FindAll</name> )<parameter_list pos:line="11122" pos:column="47">( 
            <param><decl><type><name pos:line="11123" pos:column="13">IVxTextSearchService</name> <type:modifier pos:line="11123" pos:column="34">*</type:modifier></type> <name pos:line="11123" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="11124" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11124" pos:column="24">VxFindData</name></type> <name pos:line="11124" pos:column="35">findData</name></decl></param>,
            <comment type="block" pos:line="11125" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11125" pos:column="33">IListVxSnapshotSpan</name> <type:modifier pos:line="11125" pos:column="53">*</type:modifier><type:modifier pos:line="11125" pos:column="54">*</type:modifier></type><name pos:line="11125" pos:column="55">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11127" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11128" pos:column="7">IVxTextSearchServiceVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11130" pos:column="5">interface</name></type> <name pos:line="11130" pos:column="15">IVxTextSearchService</name>
    <argument_list pos:line="11131" pos:column="5">{
        <argument><expr><name pos:line="11132" pos:column="9">CONST_VTBL</name> struct <name pos:line="11132" pos:column="27">IVxTextSearchServiceVtbl</name> <op:operator pos:line="11132" pos:column="52">*</op:operator><name pos:line="11132" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11137" pos:column="1">#<cpp:directive pos:line="11137" pos:column="2">ifdef</cpp:directive> <name pos:line="11137" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11140" pos:column="1">#<cpp:directive pos:line="11140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11140" pos:column="9">IVxTextSearchService_QueryInterface</name><parameter_list pos:line="11140" pos:column="44">(<param><type><name pos:line="11140" pos:column="45">This</name></type></param>,<param><type><name pos:line="11140" pos:column="50">riid</name></type></param>,<param><type><name pos:line="11140" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11141" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11143" pos:column="1">#<cpp:directive pos:line="11143" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11143" pos:column="9">IVxTextSearchService_AddRef</name><parameter_list pos:line="11143" pos:column="36">(<param><type><name pos:line="11143" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11144" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11146" pos:column="1">#<cpp:directive pos:line="11146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11146" pos:column="9">IVxTextSearchService_Release</name><parameter_list pos:line="11146" pos:column="37">(<param><type><name pos:line="11146" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11147" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11150" pos:column="1">#<cpp:directive pos:line="11150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11150" pos:column="9">IVxTextSearchService_FindNext</name><parameter_list pos:line="11150" pos:column="38">(<param><type><name pos:line="11150" pos:column="39">This</name></type></param>,<param><type><name pos:line="11150" pos:column="44">startIndex</name></type></param>,<param><type><name pos:line="11150" pos:column="55">wraparound</name></type></param>,<param><type><name pos:line="11150" pos:column="66">findData</name></type></param>,<param><type><name pos:line="11150" pos:column="75">pRetValHasValue</name></type></param>,<param><type><name pos:line="11150" pos:column="91">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11151" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindNext(This,startIndex,wraparound,findData,pRetValHasValue,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11153" pos:column="1">#<cpp:directive pos:line="11153" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11153" pos:column="9">IVxTextSearchService_FindAll</name><parameter_list pos:line="11153" pos:column="37">(<param><type><name pos:line="11153" pos:column="38">This</name></type></param>,<param><type><name pos:line="11153" pos:column="43">findData</name></type></param>,<param><type><name pos:line="11153" pos:column="52">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11154" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindAll(This,findData,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11156" pos:column="1">#<cpp:directive pos:line="11156" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11156" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11159" pos:column="1">#<cpp:directive pos:line="11159" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11159" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11164" pos:column="1">#<cpp:directive pos:line="11164" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11164" pos:column="9">/* __IVxTextSearchService_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11167" pos:column="1">#<cpp:directive pos:line="11167" pos:column="2">ifndef</cpp:directive> <name pos:line="11167" pos:column="9">__IVxTextStructureNavigator_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11168" pos:column="1">#<cpp:directive pos:line="11168" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11168" pos:column="9">__IVxTextStructureNavigator_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11170" pos:column="1">/* interface IVxTextStructureNavigator */</comment>
<comment type="block" pos:line="11171" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11174" pos:column="1">EXTERN_C</name> <specifier pos:line="11174" pos:column="10">const</specifier> <name pos:line="11174" pos:column="16">IID</name></type> <name pos:line="11174" pos:column="20">IID_IVxTextStructureNavigator</name></decl>;</decl_stmt>

<cpp:if pos:line="11176" pos:column="1">#<cpp:directive pos:line="11176" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11176" pos:column="5">defined</name><argument_list pos:line="11176" pos:column="12">(<argument><expr><name pos:line="11176" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11176" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11176" pos:column="29">!</op:operator><call><name pos:line="11176" pos:column="30">defined</name><argument_list pos:line="11176" pos:column="37">(<argument><expr><name pos:line="11176" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11178" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11178" pos:column="19">(<argument pos:line="11178" pos:column="20">"112990cb-72c0-43a9-ab89-bca935c4806f"</argument>)</argument_list></macro>
    <label><name pos:line="11179" pos:column="5">IVxTextStructureNavigator</name> :</label> <expr_stmt><expr pos:line="11179" pos:column="33">public <name pos:line="11179" pos:column="40">IUnknown</name>
    <block pos:line="11180" pos:column="5">{
    <expr pos:line="11181" pos:column="5">public<op:operator pos:line="11181" pos:column="11">:</op:operator>
        virtual <name pos:line="11182" pos:column="17">HRESULT</name> <name pos:line="11182" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11182" pos:column="43">GetExtentOfWord</name><argument_list pos:line="11182" pos:column="58">( 
            <comment type="block" pos:line="11183" pos:column="13">/* [in] */</comment> <argument pos:line="11183" pos:column="24">VxSnapshotPoint currentPosition</argument>,
            <comment type="block" pos:line="11184" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11184" pos:column="33">VxTextExtent *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="11184" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="11184" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="11186" pos:column="9">virtual <name pos:line="11186" pos:column="17">HRESULT</name> <name pos:line="11186" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11186" pos:column="43">GetSpanOfEnclosing</name><argument_list pos:line="11186" pos:column="61">( 
            <comment type="block" pos:line="11187" pos:column="13">/* [in] */</comment> <argument pos:line="11187" pos:column="24">VxSnapshotSpan activeSpan</argument>,
            <comment type="block" pos:line="11188" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11188" pos:column="33">VxSnapshotSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="11188" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="11188" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="11190" pos:column="9">virtual <name pos:line="11190" pos:column="17">HRESULT</name> <name pos:line="11190" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11190" pos:column="43">GetSpanOfFirstChild</name><argument_list pos:line="11190" pos:column="62">( 
            <comment type="block" pos:line="11191" pos:column="13">/* [in] */</comment> <argument pos:line="11191" pos:column="24">VxSnapshotSpan activeSpan</argument>,
            <comment type="block" pos:line="11192" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11192" pos:column="33">VxSnapshotSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="11192" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="11192" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="11194" pos:column="9">virtual <name pos:line="11194" pos:column="17">HRESULT</name> <name pos:line="11194" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11194" pos:column="43">GetSpanOfNextSibling</name><argument_list pos:line="11194" pos:column="63">( 
            <comment type="block" pos:line="11195" pos:column="13">/* [in] */</comment> <argument pos:line="11195" pos:column="24">VxSnapshotSpan activeSpan</argument>,
            <comment type="block" pos:line="11196" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11196" pos:column="33">VxSnapshotSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="11196" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="11196" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="11198" pos:column="9">virtual <name pos:line="11198" pos:column="17">HRESULT</name> <name pos:line="11198" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11198" pos:column="43">GetSpanOfPreviousSibling</name><argument_list pos:line="11198" pos:column="67">( 
            <comment type="block" pos:line="11199" pos:column="13">/* [in] */</comment> <argument pos:line="11199" pos:column="24">VxSnapshotSpan activeSpan</argument>,
            <comment type="block" pos:line="11200" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11200" pos:column="33">VxSnapshotSpan *pRetVal</argument>)</argument_list></macro> <op:operator pos:line="11200" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="11200" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="11202" pos:column="9">virtual <name pos:line="11202" pos:column="17">HRESULT</name> <name pos:line="11202" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11202" pos:column="43">GetContentType</name><argument_list pos:line="11202" pos:column="57">( 
            <comment type="block" pos:line="11203" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="11203" pos:column="33">IVxContentType</name> <op:operator pos:line="11203" pos:column="48">*</op:operator><op:operator pos:line="11203" pos:column="49">*</op:operator><name pos:line="11203" pos:column="50">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="11203" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="11203" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11207" pos:column="1">#<cpp:directive pos:line="11207" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11207" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11209" pos:column="5">typedef <type><struct pos:line="11209" pos:column="13">struct <name pos:line="11209" pos:column="20">IVxTextStructureNavigatorVtbl</name>
    <block pos:line="11210" pos:column="5">{<public type="default" pos:line="11210" pos:column="6">
        <function_decl><type><name pos:line="11211" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11213" pos:column="9">HRESULT</name></type> ( <name pos:line="11213" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11213" pos:column="37">*</type:modifier><name pos:line="11213" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11213" pos:column="54">( 
            <param><decl><type><name pos:line="11214" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11214" pos:column="39">*</type:modifier></type> <name pos:line="11214" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11215" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11215" pos:column="24">REFIID</name></type> <name pos:line="11215" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="11216" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11217" pos:column="13">__RPC__deref_out</name>  <name pos:line="11217" pos:column="31">void</name> <type:modifier pos:line="11217" pos:column="36">*</type:modifier><type:modifier pos:line="11217" pos:column="37">*</type:modifier></type><name pos:line="11217" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11219" pos:column="9">ULONG</name></type> ( <name pos:line="11219" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11219" pos:column="35">*</type:modifier><name pos:line="11219" pos:column="36">AddRef</name> )<parameter_list pos:line="11219" pos:column="44">( 
            <param><decl><type><name pos:line="11220" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11220" pos:column="39">*</type:modifier></type> <name pos:line="11220" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11222" pos:column="9">ULONG</name></type> ( <name pos:line="11222" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11222" pos:column="35">*</type:modifier><name pos:line="11222" pos:column="36">Release</name> )<parameter_list pos:line="11222" pos:column="45">( 
            <param><decl><type><name pos:line="11223" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11223" pos:column="39">*</type:modifier></type> <name pos:line="11223" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11225" pos:column="9">HRESULT</name></type> ( <name pos:line="11225" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11225" pos:column="37">*</type:modifier><name pos:line="11225" pos:column="38">GetExtentOfWord</name> )<parameter_list pos:line="11225" pos:column="55">( 
            <param><decl><type><name pos:line="11226" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11226" pos:column="39">*</type:modifier></type> <name pos:line="11226" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11227" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11227" pos:column="24">VxSnapshotPoint</name></type> <name pos:line="11227" pos:column="40">currentPosition</name></decl></param>,
            <comment type="block" pos:line="11228" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11228" pos:column="33">VxTextExtent</name> <type:modifier pos:line="11228" pos:column="46">*</type:modifier></type><name pos:line="11228" pos:column="47">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11230" pos:column="9">HRESULT</name></type> ( <name pos:line="11230" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11230" pos:column="37">*</type:modifier><name pos:line="11230" pos:column="38">GetSpanOfEnclosing</name> )<parameter_list pos:line="11230" pos:column="58">( 
            <param><decl><type><name pos:line="11231" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11231" pos:column="39">*</type:modifier></type> <name pos:line="11231" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11232" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11232" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="11232" pos:column="39">activeSpan</name></decl></param>,
            <comment type="block" pos:line="11233" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11233" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="11233" pos:column="48">*</type:modifier></type><name pos:line="11233" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11235" pos:column="9">HRESULT</name></type> ( <name pos:line="11235" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11235" pos:column="37">*</type:modifier><name pos:line="11235" pos:column="38">GetSpanOfFirstChild</name> )<parameter_list pos:line="11235" pos:column="59">( 
            <param><decl><type><name pos:line="11236" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11236" pos:column="39">*</type:modifier></type> <name pos:line="11236" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11237" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11237" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="11237" pos:column="39">activeSpan</name></decl></param>,
            <comment type="block" pos:line="11238" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11238" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="11238" pos:column="48">*</type:modifier></type><name pos:line="11238" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11240" pos:column="9">HRESULT</name></type> ( <name pos:line="11240" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11240" pos:column="37">*</type:modifier><name pos:line="11240" pos:column="38">GetSpanOfNextSibling</name> )<parameter_list pos:line="11240" pos:column="60">( 
            <param><decl><type><name pos:line="11241" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11241" pos:column="39">*</type:modifier></type> <name pos:line="11241" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11242" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11242" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="11242" pos:column="39">activeSpan</name></decl></param>,
            <comment type="block" pos:line="11243" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11243" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="11243" pos:column="48">*</type:modifier></type><name pos:line="11243" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11245" pos:column="9">HRESULT</name></type> ( <name pos:line="11245" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11245" pos:column="37">*</type:modifier><name pos:line="11245" pos:column="38">GetSpanOfPreviousSibling</name> )<parameter_list pos:line="11245" pos:column="64">( 
            <param><decl><type><name pos:line="11246" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11246" pos:column="39">*</type:modifier></type> <name pos:line="11246" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11247" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11247" pos:column="24">VxSnapshotSpan</name></type> <name pos:line="11247" pos:column="39">activeSpan</name></decl></param>,
            <comment type="block" pos:line="11248" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11248" pos:column="33">VxSnapshotSpan</name> <type:modifier pos:line="11248" pos:column="48">*</type:modifier></type><name pos:line="11248" pos:column="49">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11250" pos:column="9">HRESULT</name></type> ( <name pos:line="11250" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11250" pos:column="37">*</type:modifier><name pos:line="11250" pos:column="38">GetContentType</name> )<parameter_list pos:line="11250" pos:column="54">( 
            <param><decl><type><name pos:line="11251" pos:column="13">IVxTextStructureNavigator</name> <type:modifier pos:line="11251" pos:column="39">*</type:modifier></type> <name pos:line="11251" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11252" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11252" pos:column="33">IVxContentType</name> <type:modifier pos:line="11252" pos:column="48">*</type:modifier><type:modifier pos:line="11252" pos:column="49">*</type:modifier></type><name pos:line="11252" pos:column="50">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11254" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11255" pos:column="7">IVxTextStructureNavigatorVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11257" pos:column="5">interface</name></type> <name pos:line="11257" pos:column="15">IVxTextStructureNavigator</name>
    <argument_list pos:line="11258" pos:column="5">{
        <argument><expr><name pos:line="11259" pos:column="9">CONST_VTBL</name> struct <name pos:line="11259" pos:column="27">IVxTextStructureNavigatorVtbl</name> <op:operator pos:line="11259" pos:column="57">*</op:operator><name pos:line="11259" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11264" pos:column="1">#<cpp:directive pos:line="11264" pos:column="2">ifdef</cpp:directive> <name pos:line="11264" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11267" pos:column="1">#<cpp:directive pos:line="11267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11267" pos:column="9">IVxTextStructureNavigator_QueryInterface</name><parameter_list pos:line="11267" pos:column="49">(<param><type><name pos:line="11267" pos:column="50">This</name></type></param>,<param><type><name pos:line="11267" pos:column="55">riid</name></type></param>,<param><type><name pos:line="11267" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11268" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11270" pos:column="1">#<cpp:directive pos:line="11270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11270" pos:column="9">IVxTextStructureNavigator_AddRef</name><parameter_list pos:line="11270" pos:column="41">(<param><type><name pos:line="11270" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11271" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11273" pos:column="1">#<cpp:directive pos:line="11273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11273" pos:column="9">IVxTextStructureNavigator_Release</name><parameter_list pos:line="11273" pos:column="42">(<param><type><name pos:line="11273" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11274" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11277" pos:column="1">#<cpp:directive pos:line="11277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11277" pos:column="9">IVxTextStructureNavigator_GetExtentOfWord</name><parameter_list pos:line="11277" pos:column="50">(<param><type><name pos:line="11277" pos:column="51">This</name></type></param>,<param><type><name pos:line="11277" pos:column="56">currentPosition</name></type></param>,<param><type><name pos:line="11277" pos:column="72">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11278" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtentOfWord(This,currentPosition,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11280" pos:column="1">#<cpp:directive pos:line="11280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11280" pos:column="9">IVxTextStructureNavigator_GetSpanOfEnclosing</name><parameter_list pos:line="11280" pos:column="53">(<param><type><name pos:line="11280" pos:column="54">This</name></type></param>,<param><type><name pos:line="11280" pos:column="59">activeSpan</name></type></param>,<param><type><name pos:line="11280" pos:column="70">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11281" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanOfEnclosing(This,activeSpan,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11283" pos:column="1">#<cpp:directive pos:line="11283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11283" pos:column="9">IVxTextStructureNavigator_GetSpanOfFirstChild</name><parameter_list pos:line="11283" pos:column="54">(<param><type><name pos:line="11283" pos:column="55">This</name></type></param>,<param><type><name pos:line="11283" pos:column="60">activeSpan</name></type></param>,<param><type><name pos:line="11283" pos:column="71">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11284" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanOfFirstChild(This,activeSpan,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11286" pos:column="1">#<cpp:directive pos:line="11286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11286" pos:column="9">IVxTextStructureNavigator_GetSpanOfNextSibling</name><parameter_list pos:line="11286" pos:column="55">(<param><type><name pos:line="11286" pos:column="56">This</name></type></param>,<param><type><name pos:line="11286" pos:column="61">activeSpan</name></type></param>,<param><type><name pos:line="11286" pos:column="72">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11287" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanOfNextSibling(This,activeSpan,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11289" pos:column="1">#<cpp:directive pos:line="11289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11289" pos:column="9">IVxTextStructureNavigator_GetSpanOfPreviousSibling</name><parameter_list pos:line="11289" pos:column="59">(<param><type><name pos:line="11289" pos:column="60">This</name></type></param>,<param><type><name pos:line="11289" pos:column="65">activeSpan</name></type></param>,<param><type><name pos:line="11289" pos:column="76">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11290" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSpanOfPreviousSibling(This,activeSpan,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11292" pos:column="1">#<cpp:directive pos:line="11292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11292" pos:column="9">IVxTextStructureNavigator_GetContentType</name><parameter_list pos:line="11292" pos:column="49">(<param><type><name pos:line="11292" pos:column="50">This</name></type></param>,<param><type><name pos:line="11292" pos:column="55">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11293" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContentType(This,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11295" pos:column="1">#<cpp:directive pos:line="11295" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11295" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11298" pos:column="1">#<cpp:directive pos:line="11298" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11298" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11303" pos:column="1">#<cpp:directive pos:line="11303" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11303" pos:column="9">/* __IVxTextStructureNavigator_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11306" pos:column="1">#<cpp:directive pos:line="11306" pos:column="2">ifndef</cpp:directive> <name pos:line="11306" pos:column="9">__IVxPlatformFactory_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11307" pos:column="1">#<cpp:directive pos:line="11307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11307" pos:column="9">__IVxPlatformFactory_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11309" pos:column="1">/* interface IVxPlatformFactory */</comment>
<comment type="block" pos:line="11310" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11313" pos:column="1">EXTERN_C</name> <specifier pos:line="11313" pos:column="10">const</specifier> <name pos:line="11313" pos:column="16">IID</name></type> <name pos:line="11313" pos:column="20">IID_IVxPlatformFactory</name></decl>;</decl_stmt>

<cpp:if pos:line="11315" pos:column="1">#<cpp:directive pos:line="11315" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11315" pos:column="5">defined</name><argument_list pos:line="11315" pos:column="12">(<argument><expr><name pos:line="11315" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11315" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11315" pos:column="29">!</op:operator><call><name pos:line="11315" pos:column="30">defined</name><argument_list pos:line="11315" pos:column="37">(<argument><expr><name pos:line="11315" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11317" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11317" pos:column="19">(<argument pos:line="11317" pos:column="20">"a5596e43-5f0e-4dec-83e9-45f8fe64c64f"</argument>)</argument_list></macro>
    <label><name pos:line="11318" pos:column="5">IVxPlatformFactory</name> :</label> <expr_stmt><expr pos:line="11318" pos:column="26">public <name pos:line="11318" pos:column="33">IUnknown</name>
    <block pos:line="11319" pos:column="5">{
    <expr pos:line="11320" pos:column="5">public<op:operator pos:line="11320" pos:column="11">:</op:operator>
        virtual <name pos:line="11321" pos:column="17">HRESULT</name> <name pos:line="11321" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11321" pos:column="43">CreateTextBufferFactoryService</name><argument_list pos:line="11321" pos:column="73">( 
            <comment type="block" pos:line="11322" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="11322" pos:column="24">IUnknown</name> <op:operator pos:line="11322" pos:column="33">*</op:operator><name pos:line="11322" pos:column="34">pServiceProvider</name></expr></argument>,
            <comment type="block" pos:line="11323" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="11323" pos:column="33">IVxTextBufferFactoryService</name> <op:operator pos:line="11323" pos:column="61">*</op:operator><op:operator pos:line="11323" pos:column="62">*</op:operator><name pos:line="11323" pos:column="63">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="11323" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="11323" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="11325" pos:column="9">virtual <name pos:line="11325" pos:column="17">HRESULT</name> <name pos:line="11325" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11325" pos:column="43">CreateTextDocumentFactoryService</name><argument_list pos:line="11325" pos:column="75">( 
            <comment type="block" pos:line="11326" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="11326" pos:column="24">IUnknown</name> <op:operator pos:line="11326" pos:column="33">*</op:operator><name pos:line="11326" pos:column="34">pServiceProvider</name></expr></argument>,
            <comment type="block" pos:line="11327" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="11327" pos:column="33">IVxTextDocumentFactoryService</name> <op:operator pos:line="11327" pos:column="63">*</op:operator><op:operator pos:line="11327" pos:column="64">*</op:operator><name pos:line="11327" pos:column="65">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="11327" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="11327" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="11329" pos:column="9">virtual <name pos:line="11329" pos:column="17">HRESULT</name> <name pos:line="11329" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11329" pos:column="43">CreateContentTypeRegistryService</name><argument_list pos:line="11329" pos:column="75">( 
            <comment type="block" pos:line="11330" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="11330" pos:column="24">IUnknown</name> <op:operator pos:line="11330" pos:column="33">*</op:operator><name pos:line="11330" pos:column="34">pServiceProvider</name></expr></argument>,
            <comment type="block" pos:line="11331" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="11331" pos:column="33">IVxContentTypeRegistryService</name> <op:operator pos:line="11331" pos:column="63">*</op:operator><op:operator pos:line="11331" pos:column="64">*</op:operator><name pos:line="11331" pos:column="65">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="11331" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="11331" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="11333" pos:column="9">virtual <name pos:line="11333" pos:column="17">HRESULT</name> <name pos:line="11333" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11333" pos:column="43">CreateTextSearchService</name><argument_list pos:line="11333" pos:column="66">( 
            <comment type="block" pos:line="11334" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="11334" pos:column="24">IUnknown</name> <op:operator pos:line="11334" pos:column="33">*</op:operator><name pos:line="11334" pos:column="34">pServiceProvider</name></expr></argument>,
            <comment type="block" pos:line="11335" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="11335" pos:column="33">IVxTextSearchService</name> <op:operator pos:line="11335" pos:column="54">*</op:operator><op:operator pos:line="11335" pos:column="55">*</op:operator><name pos:line="11335" pos:column="56">ppRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="11335" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="11335" pos:column="68">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11339" pos:column="1">#<cpp:directive pos:line="11339" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11339" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11341" pos:column="5">typedef <type><struct pos:line="11341" pos:column="13">struct <name pos:line="11341" pos:column="20">IVxPlatformFactoryVtbl</name>
    <block pos:line="11342" pos:column="5">{<public type="default" pos:line="11342" pos:column="6">
        <function_decl><type><name pos:line="11343" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11345" pos:column="9">HRESULT</name></type> ( <name pos:line="11345" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11345" pos:column="37">*</type:modifier><name pos:line="11345" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11345" pos:column="54">( 
            <param><decl><type><name pos:line="11346" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11346" pos:column="32">*</type:modifier></type> <name pos:line="11346" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="11347" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11347" pos:column="24">REFIID</name></type> <name pos:line="11347" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="11348" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11349" pos:column="13">__RPC__deref_out</name>  <name pos:line="11349" pos:column="31">void</name> <type:modifier pos:line="11349" pos:column="36">*</type:modifier><type:modifier pos:line="11349" pos:column="37">*</type:modifier></type><name pos:line="11349" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11351" pos:column="9">ULONG</name></type> ( <name pos:line="11351" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11351" pos:column="35">*</type:modifier><name pos:line="11351" pos:column="36">AddRef</name> )<parameter_list pos:line="11351" pos:column="44">( 
            <param><decl><type><name pos:line="11352" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11352" pos:column="32">*</type:modifier></type> <name pos:line="11352" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11354" pos:column="9">ULONG</name></type> ( <name pos:line="11354" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11354" pos:column="35">*</type:modifier><name pos:line="11354" pos:column="36">Release</name> )<parameter_list pos:line="11354" pos:column="45">( 
            <param><decl><type><name pos:line="11355" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11355" pos:column="32">*</type:modifier></type> <name pos:line="11355" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11357" pos:column="9">HRESULT</name></type> ( <name pos:line="11357" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11357" pos:column="37">*</type:modifier><name pos:line="11357" pos:column="38">CreateTextBufferFactoryService</name> )<parameter_list pos:line="11357" pos:column="70">( 
            <param><decl><type><name pos:line="11358" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11358" pos:column="32">*</type:modifier></type> <name pos:line="11358" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="11359" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11359" pos:column="24">IUnknown</name> <type:modifier pos:line="11359" pos:column="33">*</type:modifier></type><name pos:line="11359" pos:column="34">pServiceProvider</name></decl></param>,
            <comment type="block" pos:line="11360" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11360" pos:column="33">IVxTextBufferFactoryService</name> <type:modifier pos:line="11360" pos:column="61">*</type:modifier><type:modifier pos:line="11360" pos:column="62">*</type:modifier></type><name pos:line="11360" pos:column="63">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11362" pos:column="9">HRESULT</name></type> ( <name pos:line="11362" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11362" pos:column="37">*</type:modifier><name pos:line="11362" pos:column="38">CreateTextDocumentFactoryService</name> )<parameter_list pos:line="11362" pos:column="72">( 
            <param><decl><type><name pos:line="11363" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11363" pos:column="32">*</type:modifier></type> <name pos:line="11363" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="11364" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11364" pos:column="24">IUnknown</name> <type:modifier pos:line="11364" pos:column="33">*</type:modifier></type><name pos:line="11364" pos:column="34">pServiceProvider</name></decl></param>,
            <comment type="block" pos:line="11365" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11365" pos:column="33">IVxTextDocumentFactoryService</name> <type:modifier pos:line="11365" pos:column="63">*</type:modifier><type:modifier pos:line="11365" pos:column="64">*</type:modifier></type><name pos:line="11365" pos:column="65">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11367" pos:column="9">HRESULT</name></type> ( <name pos:line="11367" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11367" pos:column="37">*</type:modifier><name pos:line="11367" pos:column="38">CreateContentTypeRegistryService</name> )<parameter_list pos:line="11367" pos:column="72">( 
            <param><decl><type><name pos:line="11368" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11368" pos:column="32">*</type:modifier></type> <name pos:line="11368" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="11369" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11369" pos:column="24">IUnknown</name> <type:modifier pos:line="11369" pos:column="33">*</type:modifier></type><name pos:line="11369" pos:column="34">pServiceProvider</name></decl></param>,
            <comment type="block" pos:line="11370" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11370" pos:column="33">IVxContentTypeRegistryService</name> <type:modifier pos:line="11370" pos:column="63">*</type:modifier><type:modifier pos:line="11370" pos:column="64">*</type:modifier></type><name pos:line="11370" pos:column="65">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11372" pos:column="9">HRESULT</name></type> ( <name pos:line="11372" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11372" pos:column="37">*</type:modifier><name pos:line="11372" pos:column="38">CreateTextSearchService</name> )<parameter_list pos:line="11372" pos:column="63">( 
            <param><decl><type><name pos:line="11373" pos:column="13">IVxPlatformFactory</name> <type:modifier pos:line="11373" pos:column="32">*</type:modifier></type> <name pos:line="11373" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="11374" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11374" pos:column="24">IUnknown</name> <type:modifier pos:line="11374" pos:column="33">*</type:modifier></type><name pos:line="11374" pos:column="34">pServiceProvider</name></decl></param>,
            <comment type="block" pos:line="11375" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11375" pos:column="33">IVxTextSearchService</name> <type:modifier pos:line="11375" pos:column="54">*</type:modifier><type:modifier pos:line="11375" pos:column="55">*</type:modifier></type><name pos:line="11375" pos:column="56">ppRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11377" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11378" pos:column="7">IVxPlatformFactoryVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11380" pos:column="5">interface</name></type> <name pos:line="11380" pos:column="15">IVxPlatformFactory</name>
    <argument_list pos:line="11381" pos:column="5">{
        <argument><expr><name pos:line="11382" pos:column="9">CONST_VTBL</name> struct <name pos:line="11382" pos:column="27">IVxPlatformFactoryVtbl</name> <op:operator pos:line="11382" pos:column="50">*</op:operator><name pos:line="11382" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11387" pos:column="1">#<cpp:directive pos:line="11387" pos:column="2">ifdef</cpp:directive> <name pos:line="11387" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11390" pos:column="1">#<cpp:directive pos:line="11390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11390" pos:column="9">IVxPlatformFactory_QueryInterface</name><parameter_list pos:line="11390" pos:column="42">(<param><type><name pos:line="11390" pos:column="43">This</name></type></param>,<param><type><name pos:line="11390" pos:column="48">riid</name></type></param>,<param><type><name pos:line="11390" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11391" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11393" pos:column="1">#<cpp:directive pos:line="11393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11393" pos:column="9">IVxPlatformFactory_AddRef</name><parameter_list pos:line="11393" pos:column="34">(<param><type><name pos:line="11393" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11394" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11396" pos:column="1">#<cpp:directive pos:line="11396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11396" pos:column="9">IVxPlatformFactory_Release</name><parameter_list pos:line="11396" pos:column="35">(<param><type><name pos:line="11396" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11397" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11400" pos:column="1">#<cpp:directive pos:line="11400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11400" pos:column="9">IVxPlatformFactory_CreateTextBufferFactoryService</name><parameter_list pos:line="11400" pos:column="58">(<param><type><name pos:line="11400" pos:column="59">This</name></type></param>,<param><type><name pos:line="11400" pos:column="64">pServiceProvider</name></type></param>,<param><type><name pos:line="11400" pos:column="81">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11401" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextBufferFactoryService(This,pServiceProvider,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11403" pos:column="1">#<cpp:directive pos:line="11403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11403" pos:column="9">IVxPlatformFactory_CreateTextDocumentFactoryService</name><parameter_list pos:line="11403" pos:column="60">(<param><type><name pos:line="11403" pos:column="61">This</name></type></param>,<param><type><name pos:line="11403" pos:column="66">pServiceProvider</name></type></param>,<param><type><name pos:line="11403" pos:column="83">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11404" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextDocumentFactoryService(This,pServiceProvider,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11406" pos:column="1">#<cpp:directive pos:line="11406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11406" pos:column="9">IVxPlatformFactory_CreateContentTypeRegistryService</name><parameter_list pos:line="11406" pos:column="60">(<param><type><name pos:line="11406" pos:column="61">This</name></type></param>,<param><type><name pos:line="11406" pos:column="66">pServiceProvider</name></type></param>,<param><type><name pos:line="11406" pos:column="83">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11407" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateContentTypeRegistryService(This,pServiceProvider,ppRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11409" pos:column="1">#<cpp:directive pos:line="11409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11409" pos:column="9">IVxPlatformFactory_CreateTextSearchService</name><parameter_list pos:line="11409" pos:column="51">(<param><type><name pos:line="11409" pos:column="52">This</name></type></param>,<param><type><name pos:line="11409" pos:column="57">pServiceProvider</name></type></param>,<param><type><name pos:line="11409" pos:column="74">ppRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11410" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateTextSearchService(This,pServiceProvider,ppRetVal) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11412" pos:column="1">#<cpp:directive pos:line="11412" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11412" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11415" pos:column="1">#<cpp:directive pos:line="11415" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11415" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11420" pos:column="1">#<cpp:directive pos:line="11420" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11420" pos:column="9">/* __IVxPlatformFactory_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11423" pos:column="1">#<cpp:directive pos:line="11423" pos:column="2">ifndef</cpp:directive> <name pos:line="11423" pos:column="9">__IVxThumbnailSupport_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11424" pos:column="1">#<cpp:directive pos:line="11424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11424" pos:column="9">__IVxThumbnailSupport_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11426" pos:column="1">/* interface IVxThumbnailSupport */</comment>
<comment type="block" pos:line="11427" pos:column="1">/* [uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11430" pos:column="1">EXTERN_C</name> <specifier pos:line="11430" pos:column="10">const</specifier> <name pos:line="11430" pos:column="16">IID</name></type> <name pos:line="11430" pos:column="20">IID_IVxThumbnailSupport</name></decl>;</decl_stmt>

<cpp:if pos:line="11432" pos:column="1">#<cpp:directive pos:line="11432" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11432" pos:column="5">defined</name><argument_list pos:line="11432" pos:column="12">(<argument><expr><name pos:line="11432" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11432" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11432" pos:column="29">!</op:operator><call><name pos:line="11432" pos:column="30">defined</name><argument_list pos:line="11432" pos:column="37">(<argument><expr><name pos:line="11432" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11434" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11434" pos:column="19">(<argument pos:line="11434" pos:column="20">"d83723ad-977d-4bf0-8534-1f1f72f5ac00"</argument>)</argument_list></macro>
    <label><name pos:line="11435" pos:column="5">IVxThumbnailSupport</name> :</label> <expr_stmt><expr pos:line="11435" pos:column="27">public <name pos:line="11435" pos:column="34">IUnknown</name>
    <block pos:line="11436" pos:column="5">{
    <expr pos:line="11437" pos:column="5">public<op:operator pos:line="11437" pos:column="11">:</op:operator>
        virtual <name pos:line="11438" pos:column="17">HRESULT</name> <name pos:line="11438" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11438" pos:column="43">GetRemoveVisualsWhenHidden</name><argument_list pos:line="11438" pos:column="69">( 
            <comment type="block" pos:line="11439" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="11439" pos:column="33">BOOL</name> <op:operator pos:line="11439" pos:column="38">*</op:operator><name pos:line="11439" pos:column="39">pRetVal</name></expr></argument>)</argument_list></call> <op:operator pos:line="11439" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="11439" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="11441" pos:column="9">virtual <name pos:line="11441" pos:column="17">HRESULT</name> <name pos:line="11441" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11441" pos:column="43">SetRemoveVisualsWhenHidden</name><argument_list pos:line="11441" pos:column="69">( 
            <comment type="block" pos:line="11442" pos:column="13">/* [in] */</comment> <argument pos:line="11442" pos:column="24">BOOL value</argument>)</argument_list></macro> <op:operator pos:line="11442" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="11442" pos:column="38">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11446" pos:column="1">#<cpp:directive pos:line="11446" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11446" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11448" pos:column="5">typedef <type><struct pos:line="11448" pos:column="13">struct <name pos:line="11448" pos:column="20">IVxThumbnailSupportVtbl</name>
    <block pos:line="11449" pos:column="5">{<public type="default" pos:line="11449" pos:column="6">
        <function_decl><type><name pos:line="11450" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11452" pos:column="9">HRESULT</name></type> ( <name pos:line="11452" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11452" pos:column="37">*</type:modifier><name pos:line="11452" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11452" pos:column="54">( 
            <param><decl><type><name pos:line="11453" pos:column="13">IVxThumbnailSupport</name> <type:modifier pos:line="11453" pos:column="33">*</type:modifier></type> <name pos:line="11453" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="11454" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11454" pos:column="24">REFIID</name></type> <name pos:line="11454" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="11455" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11456" pos:column="13">__RPC__deref_out</name>  <name pos:line="11456" pos:column="31">void</name> <type:modifier pos:line="11456" pos:column="36">*</type:modifier><type:modifier pos:line="11456" pos:column="37">*</type:modifier></type><name pos:line="11456" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11458" pos:column="9">ULONG</name></type> ( <name pos:line="11458" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11458" pos:column="35">*</type:modifier><name pos:line="11458" pos:column="36">AddRef</name> )<parameter_list pos:line="11458" pos:column="44">( 
            <param><decl><type><name pos:line="11459" pos:column="13">IVxThumbnailSupport</name> <type:modifier pos:line="11459" pos:column="33">*</type:modifier></type> <name pos:line="11459" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11461" pos:column="9">ULONG</name></type> ( <name pos:line="11461" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11461" pos:column="35">*</type:modifier><name pos:line="11461" pos:column="36">Release</name> )<parameter_list pos:line="11461" pos:column="45">( 
            <param><decl><type><name pos:line="11462" pos:column="13">IVxThumbnailSupport</name> <type:modifier pos:line="11462" pos:column="33">*</type:modifier></type> <name pos:line="11462" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11464" pos:column="9">HRESULT</name></type> ( <name pos:line="11464" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11464" pos:column="37">*</type:modifier><name pos:line="11464" pos:column="38">GetRemoveVisualsWhenHidden</name> )<parameter_list pos:line="11464" pos:column="66">( 
            <param><decl><type><name pos:line="11465" pos:column="13">IVxThumbnailSupport</name> <type:modifier pos:line="11465" pos:column="33">*</type:modifier></type> <name pos:line="11465" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="11466" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11466" pos:column="33">BOOL</name> <type:modifier pos:line="11466" pos:column="38">*</type:modifier></type><name pos:line="11466" pos:column="39">pRetVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11468" pos:column="9">HRESULT</name></type> ( <name pos:line="11468" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11468" pos:column="37">*</type:modifier><name pos:line="11468" pos:column="38">SetRemoveVisualsWhenHidden</name> )<parameter_list pos:line="11468" pos:column="66">( 
            <param><decl><type><name pos:line="11469" pos:column="13">IVxThumbnailSupport</name> <type:modifier pos:line="11469" pos:column="33">*</type:modifier></type> <name pos:line="11469" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="11470" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11470" pos:column="24">BOOL</name></type> <name pos:line="11470" pos:column="29">value</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11472" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11473" pos:column="7">IVxThumbnailSupportVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11475" pos:column="5">interface</name></type> <name pos:line="11475" pos:column="15">IVxThumbnailSupport</name>
    <argument_list pos:line="11476" pos:column="5">{
        <argument><expr><name pos:line="11477" pos:column="9">CONST_VTBL</name> struct <name pos:line="11477" pos:column="27">IVxThumbnailSupportVtbl</name> <op:operator pos:line="11477" pos:column="51">*</op:operator><name pos:line="11477" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11482" pos:column="1">#<cpp:directive pos:line="11482" pos:column="2">ifdef</cpp:directive> <name pos:line="11482" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11485" pos:column="1">#<cpp:directive pos:line="11485" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11485" pos:column="9">IVxThumbnailSupport_QueryInterface</name><parameter_list pos:line="11485" pos:column="43">(<param><type><name pos:line="11485" pos:column="44">This</name></type></param>,<param><type><name pos:line="11485" pos:column="49">riid</name></type></param>,<param><type><name pos:line="11485" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11486" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11488" pos:column="1">#<cpp:directive pos:line="11488" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11488" pos:column="9">IVxThumbnailSupport_AddRef</name><parameter_list pos:line="11488" pos:column="35">(<param><type><name pos:line="11488" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11489" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11491" pos:column="1">#<cpp:directive pos:line="11491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11491" pos:column="9">IVxThumbnailSupport_Release</name><parameter_list pos:line="11491" pos:column="36">(<param><type><name pos:line="11491" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11492" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11495" pos:column="1">#<cpp:directive pos:line="11495" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11495" pos:column="9">IVxThumbnailSupport_GetRemoveVisualsWhenHidden</name><parameter_list pos:line="11495" pos:column="55">(<param><type><name pos:line="11495" pos:column="56">This</name></type></param>,<param><type><name pos:line="11495" pos:column="61">pRetVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11496" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemoveVisualsWhenHidden(This,pRetVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="11498" pos:column="1">#<cpp:directive pos:line="11498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11498" pos:column="9">IVxThumbnailSupport_SetRemoveVisualsWhenHidden</name><parameter_list pos:line="11498" pos:column="55">(<param><type><name pos:line="11498" pos:column="56">This</name></type></param>,<param><type><name pos:line="11498" pos:column="61">value</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11499" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRemoveVisualsWhenHidden(This,value) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11501" pos:column="1">#<cpp:directive pos:line="11501" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11501" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11504" pos:column="1">#<cpp:directive pos:line="11504" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11504" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11509" pos:column="1">#<cpp:directive pos:line="11509" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11509" pos:column="9">/* __IVxThumbnailSupport_INTERFACE_DEFINED__ */</comment>

<cpp:endif pos:line="11511" pos:column="1">#<cpp:directive pos:line="11511" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11511" pos:column="8">/* __VSEditorLibrary_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="11513" pos:column="1">/* interface __MIDL_itf_VSEditor_0001_0141 */</comment>
<comment type="block" pos:line="11514" pos:column="1">/* [local] */</comment> 

<struct pos:line="11516" pos:column="1">struct <name pos:line="11516" pos:column="8">CVxStringDifferenceOptions</name> <super pos:line="11516" pos:column="35">: <specifier pos:line="11516" pos:column="37">public</specifier> <name pos:line="11516" pos:column="44">VxStringDifferenceOptions</name></super>
<block pos:line="11517" pos:column="1">{<public type="default" pos:line="11517" pos:column="2">
    <constructor><name pos:line="11518" pos:column="5">CVxStringDifferenceOptions</name><parameter_list pos:line="11518" pos:column="31">()</parameter_list>
    <block pos:line="11519" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11520" pos:column="9">Init</name><argument_list pos:line="11520" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11522" pos:column="5">CVxStringDifferenceOptions</name><parameter_list pos:line="11522" pos:column="31">(<param><decl><type><specifier pos:line="11522" pos:column="32">const</specifier> <name pos:line="11522" pos:column="38">VxStringDifferenceOptions</name> <type:modifier pos:line="11522" pos:column="64">&amp;</type:modifier></type><name pos:line="11522" pos:column="65">source</name></decl></param>)</parameter_list>
    <block pos:line="11523" pos:column="5">{
        <expr_stmt><expr><op:operator pos:line="11524" pos:column="9">*</op:operator><name pos:line="11524" pos:column="10">this</name> <op:operator pos:line="11524" pos:column="15">=</op:operator> <name pos:line="11524" pos:column="17">source</name></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11526" pos:column="5">CVxStringDifferenceOptions</name><parameter_list pos:line="11526" pos:column="31">(<param><decl><type><name pos:line="11526" pos:column="32">VxStringDifferenceTypes</name></type> <name pos:line="11526" pos:column="56">_differenceType</name></decl></param>, <param><decl><type><name pos:line="11526" pos:column="73">int</name></type> <name pos:line="11526" pos:column="77">_locality</name></decl></param>, <param><decl><type><name pos:line="11526" pos:column="88">BOOL</name></type> <name pos:line="11526" pos:column="93">_ignoreTrimWhiteSpace</name></decl></param>)</parameter_list>
    <block pos:line="11527" pos:column="5">{
        <expr_stmt><expr><name pos:line="11528" pos:column="9">differenceType</name> <op:operator pos:line="11528" pos:column="24">=</op:operator> <name pos:line="11528" pos:column="26">_differenceType</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11529" pos:column="9">locality</name> <op:operator pos:line="11529" pos:column="18">=</op:operator> <name pos:line="11529" pos:column="20">_locality</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11530" pos:column="9">ignoreTrimWhiteSpace</name> <op:operator pos:line="11530" pos:column="30">=</op:operator> <name pos:line="11530" pos:column="32">_ignoreTrimWhiteSpace</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11532" pos:column="5">void</name></type> <name pos:line="11532" pos:column="10">Init</name><parameter_list pos:line="11532" pos:column="14">()</parameter_list>
    <block pos:line="11533" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11534" pos:column="9">CVxStringDifferenceOptions</name><op:operator pos:line="11534" pos:column="35">::</op:operator><name pos:line="11534" pos:column="37">Init</name></name><argument_list pos:line="11534" pos:column="41">(<argument><expr><op:operator pos:line="11534" pos:column="42">*</op:operator><name pos:line="11534" pos:column="43">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11536" pos:column="5">static</specifier> <name pos:line="11536" pos:column="12">void</name></type> <name pos:line="11536" pos:column="17">Init</name><parameter_list pos:line="11536" pos:column="21">(<param><decl><type><name pos:line="11536" pos:column="22">VxStringDifferenceOptions</name> <type:modifier pos:line="11536" pos:column="48">&amp;</type:modifier></type><name pos:line="11536" pos:column="49">obj</name></decl></param>)</parameter_list>
    <block pos:line="11537" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="11538" pos:column="9">obj</name><op:operator pos:line="11538" pos:column="12">.</op:operator><name pos:line="11538" pos:column="13">differenceType</name></name> <op:operator pos:line="11538" pos:column="28">=</op:operator> <call><name><name pos:line="11538" pos:column="30">static_cast</name><argument_list pos:line="11538" pos:column="41">&lt;<argument><expr><name pos:line="11538" pos:column="42">VxStringDifferenceTypes</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="11538" pos:column="66">(<argument><expr><lit:literal type="number" pos:line="11538" pos:column="67">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11539" pos:column="9">obj</name><op:operator pos:line="11539" pos:column="12">.</op:operator><name pos:line="11539" pos:column="13">locality</name></name> <op:operator pos:line="11539" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="11539" pos:column="24">0</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11540" pos:column="9">obj</name><op:operator pos:line="11540" pos:column="12">.</op:operator><name pos:line="11540" pos:column="13">ignoreTrimWhiteSpace</name></name> <op:operator pos:line="11540" pos:column="34">=</op:operator> <name pos:line="11540" pos:column="36">FALSE</name></expr>;</expr_stmt>
    }</block></function>
</public>}</block>;</struct>
<struct pos:line="11543" pos:column="1">struct <name pos:line="11543" pos:column="8">CVxEditOptions</name> <super pos:line="11543" pos:column="23">: <specifier pos:line="11543" pos:column="25">public</specifier> <name pos:line="11543" pos:column="32">VxEditOptions</name></super>
<block pos:line="11544" pos:column="1">{<public type="default" pos:line="11544" pos:column="2">
    <constructor><name pos:line="11545" pos:column="5">CVxEditOptions</name><parameter_list pos:line="11545" pos:column="19">()</parameter_list>
    <block pos:line="11546" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11547" pos:column="9">Init</name><argument_list pos:line="11547" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11549" pos:column="5">CVxEditOptions</name><parameter_list pos:line="11549" pos:column="19">(<param><decl><type><specifier pos:line="11549" pos:column="20">const</specifier> <name pos:line="11549" pos:column="26">VxEditOptions</name> <type:modifier pos:line="11549" pos:column="40">&amp;</type:modifier></type><name pos:line="11549" pos:column="41">source</name></decl></param>)</parameter_list>
    <block pos:line="11550" pos:column="5">{
        <expr_stmt><expr><op:operator pos:line="11551" pos:column="9">*</op:operator><name pos:line="11551" pos:column="10">this</name> <op:operator pos:line="11551" pos:column="15">=</op:operator> <name pos:line="11551" pos:column="17">source</name></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11553" pos:column="5">CVxEditOptions</name><parameter_list pos:line="11553" pos:column="19">(<param><decl><type><name pos:line="11553" pos:column="20">BOOL</name></type> <name pos:line="11553" pos:column="25">_computeMinimalChange</name></decl></param>, <param><decl><type><specifier pos:line="11553" pos:column="48">const</specifier> <name pos:line="11553" pos:column="54">CVxStringDifferenceOptions</name> <type:modifier pos:line="11553" pos:column="81">&amp;</type:modifier></type><name pos:line="11553" pos:column="82">_differenceOptions</name></decl></param>)</parameter_list>
    <block pos:line="11554" pos:column="5">{
        <expr_stmt><expr><name pos:line="11555" pos:column="9">computeMinimalChange</name> <op:operator pos:line="11555" pos:column="30">=</op:operator> <name pos:line="11555" pos:column="32">_computeMinimalChange</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11556" pos:column="9">differenceOptions</name> <op:operator pos:line="11556" pos:column="27">=</op:operator> <name pos:line="11556" pos:column="29">_differenceOptions</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11558" pos:column="5">void</name></type> <name pos:line="11558" pos:column="10">Init</name><parameter_list pos:line="11558" pos:column="14">()</parameter_list>
    <block pos:line="11559" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11560" pos:column="9">CVxEditOptions</name><op:operator pos:line="11560" pos:column="23">::</op:operator><name pos:line="11560" pos:column="25">Init</name></name><argument_list pos:line="11560" pos:column="29">(<argument><expr><op:operator pos:line="11560" pos:column="30">*</op:operator><name pos:line="11560" pos:column="31">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11562" pos:column="5">static</specifier> <name pos:line="11562" pos:column="12">void</name></type> <name pos:line="11562" pos:column="17">Init</name><parameter_list pos:line="11562" pos:column="21">(<param><decl><type><name pos:line="11562" pos:column="22">VxEditOptions</name> <type:modifier pos:line="11562" pos:column="36">&amp;</type:modifier></type><name pos:line="11562" pos:column="37">obj</name></decl></param>)</parameter_list>
    <block pos:line="11563" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="11564" pos:column="9">obj</name><op:operator pos:line="11564" pos:column="12">.</op:operator><name pos:line="11564" pos:column="13">computeMinimalChange</name></name> <op:operator pos:line="11564" pos:column="34">=</op:operator> <name pos:line="11564" pos:column="36">FALSE</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11565" pos:column="9">CVxStringDifferenceOptions</name><op:operator pos:line="11565" pos:column="35">::</op:operator><name pos:line="11565" pos:column="37">Init</name></name><argument_list pos:line="11565" pos:column="41">(<argument><expr><name><name pos:line="11565" pos:column="42">obj</name><op:operator pos:line="11565" pos:column="45">.</op:operator><name pos:line="11565" pos:column="46">differenceOptions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
</public>}</block>;</struct>
<struct pos:line="11568" pos:column="1">struct <name pos:line="11568" pos:column="8">CVxSnapshotPoint</name> <super pos:line="11568" pos:column="25">: <specifier pos:line="11568" pos:column="27">public</specifier> <name pos:line="11568" pos:column="34">VxSnapshotPoint</name></super>
<block pos:line="11569" pos:column="1">{<public type="default" pos:line="11569" pos:column="2">
    <constructor><name pos:line="11570" pos:column="5">CVxSnapshotPoint</name><parameter_list pos:line="11570" pos:column="21">()</parameter_list>
    <block pos:line="11571" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11572" pos:column="9">Init</name><argument_list pos:line="11572" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11574" pos:column="5">CVxSnapshotPoint</name><parameter_list pos:line="11574" pos:column="21">(<param><decl><type><specifier pos:line="11574" pos:column="22">const</specifier> <name pos:line="11574" pos:column="28">VxSnapshotPoint</name> <type:modifier pos:line="11574" pos:column="44">&amp;</type:modifier></type><name pos:line="11574" pos:column="45">source</name></decl></param>)</parameter_list>
    <block pos:line="11575" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11576" pos:column="9">InitFrom</name><argument_list pos:line="11576" pos:column="17">(<argument><expr><name pos:line="11576" pos:column="18">source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11578" pos:column="5">CVxSnapshotPoint</name><parameter_list pos:line="11578" pos:column="21">(<param><decl><type><name pos:line="11578" pos:column="22">IVxTextSnapshot</name><type:modifier pos:line="11578" pos:column="37">*</type:modifier></type> <name pos:line="11578" pos:column="39">_snapshot</name></decl></param>, <param><decl><type><name pos:line="11578" pos:column="50">int</name></type> <name pos:line="11578" pos:column="54">_position</name></decl></param>)</parameter_list>
    <block pos:line="11579" pos:column="5">{
        <if pos:line="11580" pos:column="9">if <condition pos:line="11580" pos:column="12">(<expr><name pos:line="11580" pos:column="13">_snapshot</name> <op:operator pos:line="11580" pos:column="23">!=</op:operator> <name pos:line="11580" pos:column="26">NULL</name></expr>)</condition><then pos:line="11580" pos:column="31">
            <expr_stmt><expr><call><name><name pos:line="11581" pos:column="13">_snapshot</name><op:operator pos:line="11581" pos:column="22">-&gt;</op:operator><name pos:line="11581" pos:column="24">AddRef</name></name><argument_list pos:line="11581" pos:column="30">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="11582" pos:column="9">snapshot</name> <op:operator pos:line="11582" pos:column="18">=</op:operator> <name pos:line="11582" pos:column="20">_snapshot</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11583" pos:column="9">position</name> <op:operator pos:line="11583" pos:column="18">=</op:operator> <name pos:line="11583" pos:column="20">_position</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11585" pos:column="5">void</name></type> <name pos:line="11585" pos:column="10">Init</name><parameter_list pos:line="11585" pos:column="14">()</parameter_list>
    <block pos:line="11586" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11587" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11587" pos:column="25">::</op:operator><name pos:line="11587" pos:column="27">Init</name></name><argument_list pos:line="11587" pos:column="31">(<argument><expr><op:operator pos:line="11587" pos:column="32">*</op:operator><name pos:line="11587" pos:column="33">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11589" pos:column="5">static</specifier> <name pos:line="11589" pos:column="12">void</name></type> <name pos:line="11589" pos:column="17">Init</name><parameter_list pos:line="11589" pos:column="21">(<param><decl><type><name pos:line="11589" pos:column="22">VxSnapshotPoint</name> <type:modifier pos:line="11589" pos:column="38">&amp;</type:modifier></type><name pos:line="11589" pos:column="39">obj</name></decl></param>)</parameter_list>
    <block pos:line="11590" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="11591" pos:column="9">obj</name><op:operator pos:line="11591" pos:column="12">.</op:operator><name pos:line="11591" pos:column="13">snapshot</name></name> <op:operator pos:line="11591" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="11591" pos:column="24">0</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11592" pos:column="9">obj</name><op:operator pos:line="11592" pos:column="12">.</op:operator><name pos:line="11592" pos:column="13">position</name></name> <op:operator pos:line="11592" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="11592" pos:column="24">0</lit:literal></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11594" pos:column="5">void</name></type> <name pos:line="11594" pos:column="10">InitFrom</name><parameter_list pos:line="11594" pos:column="18">(<param><decl><type><specifier pos:line="11594" pos:column="19">const</specifier> <name pos:line="11594" pos:column="25">VxSnapshotPoint</name> <type:modifier pos:line="11594" pos:column="41">&amp;</type:modifier></type><name pos:line="11594" pos:column="42">dest</name></decl></param>)</parameter_list>
    <block pos:line="11595" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11596" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11596" pos:column="25">::</op:operator><name pos:line="11596" pos:column="27">InitFrom</name></name><argument_list pos:line="11596" pos:column="35">(<argument><expr><op:operator pos:line="11596" pos:column="36">*</op:operator><name pos:line="11596" pos:column="37">this</name></expr></argument>, <argument><expr><name pos:line="11596" pos:column="43">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11598" pos:column="5">static</specifier> <name pos:line="11598" pos:column="12">void</name></type> <name pos:line="11598" pos:column="17">InitFrom</name><parameter_list pos:line="11598" pos:column="25">(<param><decl><type><name pos:line="11598" pos:column="26">VxSnapshotPoint</name> <type:modifier pos:line="11598" pos:column="42">&amp;</type:modifier></type><name pos:line="11598" pos:column="43">dest</name></decl></param>, <param><decl><type><specifier pos:line="11598" pos:column="49">const</specifier> <name pos:line="11598" pos:column="55">CVxSnapshotPoint</name> <type:modifier pos:line="11598" pos:column="72">&amp;</type:modifier></type><name pos:line="11598" pos:column="73">source</name></decl></param>)</parameter_list>
    <block pos:line="11599" pos:column="5">{
        <if pos:line="11600" pos:column="9">if <condition pos:line="11600" pos:column="12">(<expr><name><name pos:line="11600" pos:column="13">source</name><op:operator pos:line="11600" pos:column="19">.</op:operator><name pos:line="11600" pos:column="20">snapshot</name></name> <op:operator pos:line="11600" pos:column="29">!=</op:operator> <name pos:line="11600" pos:column="32">NULL</name></expr>)</condition><then pos:line="11600" pos:column="37">
            <expr_stmt><expr><call><name><name pos:line="11601" pos:column="13">source</name><op:operator pos:line="11601" pos:column="19">.</op:operator><name pos:line="11601" pos:column="20">snapshot</name><op:operator pos:line="11601" pos:column="28">-&gt;</op:operator><name pos:line="11601" pos:column="30">AddRef</name></name><argument_list pos:line="11601" pos:column="36">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name><name pos:line="11602" pos:column="9">dest</name><op:operator pos:line="11602" pos:column="13">.</op:operator><name pos:line="11602" pos:column="14">snapshot</name></name> <op:operator pos:line="11602" pos:column="23">=</op:operator> <name><name pos:line="11602" pos:column="25">source</name><op:operator pos:line="11602" pos:column="31">.</op:operator><name pos:line="11602" pos:column="32">snapshot</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11603" pos:column="9">dest</name><op:operator pos:line="11603" pos:column="13">.</op:operator><name pos:line="11603" pos:column="14">position</name></name> <op:operator pos:line="11603" pos:column="23">=</op:operator> <name><name pos:line="11603" pos:column="25">source</name><op:operator pos:line="11603" pos:column="31">.</op:operator><name pos:line="11603" pos:column="32">position</name></name></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11605" pos:column="5">CVxSnapshotPoint</name><type:modifier pos:line="11605" pos:column="21">*</type:modifier></type> <name pos:line="11605" pos:column="23">operator&amp;</name><parameter_list pos:line="11605" pos:column="32">()</parameter_list>
    <block pos:line="11606" pos:column="5">{
<cpp:ifdef pos:line="11607" pos:column="1">#<cpp:directive pos:line="11607" pos:column="2">ifdef</cpp:directive> <name pos:line="11607" pos:column="8">_DEBUG</name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="11608" pos:column="9">AssertIsReleased</name><argument_list pos:line="11608" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="11609" pos:column="1">#<cpp:directive pos:line="11609" pos:column="2">endif</cpp:directive></cpp:endif>
        <return pos:line="11610" pos:column="9">return <expr><name pos:line="11610" pos:column="16">this</name></expr>;</return>
    }</block></function>
    <destructor><name pos:line="11612" pos:column="5">~<name pos:line="11612" pos:column="6">CVxSnapshotPoint</name></name><parameter_list pos:line="11612" pos:column="22">()</parameter_list>
    <block pos:line="11613" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11614" pos:column="9">Release</name><argument_list pos:line="11614" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
    }</block></destructor>
    <function><type><name pos:line="11616" pos:column="5">CVxSnapshotPoint</name><type:modifier pos:line="11616" pos:column="21">&amp;</type:modifier></type> <name pos:line="11616" pos:column="23">operator=</name><parameter_list pos:line="11616" pos:column="32">(<param><decl><type><specifier pos:line="11616" pos:column="33">const</specifier> <name pos:line="11616" pos:column="39">VxSnapshotPoint</name> <type:modifier pos:line="11616" pos:column="55">&amp;</type:modifier></type><name pos:line="11616" pos:column="56">source</name></decl></param>)</parameter_list>
    <block pos:line="11617" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11618" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11618" pos:column="25">::</op:operator><name pos:line="11618" pos:column="27">CopyTo</name></name><argument_list pos:line="11618" pos:column="33">(<argument><expr><name pos:line="11618" pos:column="34">source</name></expr></argument>, <argument><expr><op:operator pos:line="11618" pos:column="42">*</op:operator><name pos:line="11618" pos:column="43">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="11619" pos:column="9">return <expr><op:operator pos:line="11619" pos:column="16">*</op:operator><name pos:line="11619" pos:column="17">this</name></expr>;</return>
    }</block></function>
    <function><type><name pos:line="11621" pos:column="5">void</name></type> <name pos:line="11621" pos:column="10">CopyTo</name><parameter_list pos:line="11621" pos:column="16">(<param><decl><type><name pos:line="11621" pos:column="17">VxSnapshotPoint</name> <type:modifier pos:line="11621" pos:column="33">&amp;</type:modifier></type><name pos:line="11621" pos:column="34">dest</name></decl></param>)</parameter_list> <specifier pos:line="11621" pos:column="40">const</specifier>
    <block pos:line="11622" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11623" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11623" pos:column="25">::</op:operator><name pos:line="11623" pos:column="27">CopyTo</name></name><argument_list pos:line="11623" pos:column="33">(<argument><expr><op:operator pos:line="11623" pos:column="34">*</op:operator><name pos:line="11623" pos:column="35">this</name></expr></argument>, <argument><expr><name pos:line="11623" pos:column="41">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11625" pos:column="5">static</specifier> <name pos:line="11625" pos:column="12">void</name></type> <name pos:line="11625" pos:column="17">CopyTo</name><parameter_list pos:line="11625" pos:column="23">(<param><decl><type><specifier pos:line="11625" pos:column="24">const</specifier> <name pos:line="11625" pos:column="30">CVxSnapshotPoint</name> <type:modifier pos:line="11625" pos:column="47">&amp;</type:modifier></type><name pos:line="11625" pos:column="48">source</name></decl></param>, <param><decl><type><name pos:line="11625" pos:column="56">VxSnapshotPoint</name> <type:modifier pos:line="11625" pos:column="72">&amp;</type:modifier></type><name pos:line="11625" pos:column="73">dest</name></decl></param>)</parameter_list>
    <block pos:line="11626" pos:column="5">{
        <if pos:line="11627" pos:column="9">if <condition pos:line="11627" pos:column="12">(<expr><op:operator pos:line="11627" pos:column="13">&amp;</op:operator><name pos:line="11627" pos:column="14">source</name> <op:operator pos:line="11627" pos:column="21">==</op:operator> <op:operator pos:line="11627" pos:column="24">&amp;</op:operator><name pos:line="11627" pos:column="25">dest</name></expr>)</condition><then pos:line="11627" pos:column="30">
            <return pos:line="11628" pos:column="13">return;</return></then></if>
        <if pos:line="11629" pos:column="9">if <condition pos:line="11629" pos:column="12">(<expr><name><name pos:line="11629" pos:column="13">source</name><op:operator pos:line="11629" pos:column="19">.</op:operator><name pos:line="11629" pos:column="20">snapshot</name></name> <op:operator pos:line="11629" pos:column="29">!=</op:operator> <name pos:line="11629" pos:column="32">NULL</name></expr>)</condition><then pos:line="11629" pos:column="37">
            <expr_stmt><expr><call><name><name pos:line="11630" pos:column="13">source</name><op:operator pos:line="11630" pos:column="19">.</op:operator><name pos:line="11630" pos:column="20">snapshot</name><op:operator pos:line="11630" pos:column="28">-&gt;</op:operator><name pos:line="11630" pos:column="30">AddRef</name></name><argument_list pos:line="11630" pos:column="36">()</argument_list></call></expr>;</expr_stmt></then></if>
        <if pos:line="11631" pos:column="9">if <condition pos:line="11631" pos:column="12">(<expr><name><name pos:line="11631" pos:column="13">dest</name><op:operator pos:line="11631" pos:column="17">.</op:operator><name pos:line="11631" pos:column="18">snapshot</name></name> <op:operator pos:line="11631" pos:column="27">!=</op:operator> <name pos:line="11631" pos:column="30">NULL</name></expr>)</condition><then pos:line="11631" pos:column="35">
            <expr_stmt><expr><call><name><name pos:line="11632" pos:column="13">dest</name><op:operator pos:line="11632" pos:column="17">.</op:operator><name pos:line="11632" pos:column="18">snapshot</name><op:operator pos:line="11632" pos:column="26">-&gt;</op:operator><name pos:line="11632" pos:column="28">Release</name></name><argument_list pos:line="11632" pos:column="35">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name><name pos:line="11633" pos:column="9">dest</name><op:operator pos:line="11633" pos:column="13">.</op:operator><name pos:line="11633" pos:column="14">snapshot</name></name> <op:operator pos:line="11633" pos:column="23">=</op:operator> <name><name pos:line="11633" pos:column="25">source</name><op:operator pos:line="11633" pos:column="31">.</op:operator><name pos:line="11633" pos:column="32">snapshot</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11634" pos:column="9">dest</name><op:operator pos:line="11634" pos:column="13">.</op:operator><name pos:line="11634" pos:column="14">position</name></name> <op:operator pos:line="11634" pos:column="23">=</op:operator> <name><name pos:line="11634" pos:column="25">source</name><op:operator pos:line="11634" pos:column="31">.</op:operator><name pos:line="11634" pos:column="32">position</name></name></expr>;</expr_stmt>
    }</block></function>
<cpp:ifdef pos:line="11636" pos:column="1">#<cpp:directive pos:line="11636" pos:column="2">ifdef</cpp:directive> <name pos:line="11636" pos:column="8">_DEBUG</name></cpp:ifdef>
    <function><type><name pos:line="11637" pos:column="5">void</name></type> <name pos:line="11637" pos:column="10">AssertIsReleased</name><parameter_list pos:line="11637" pos:column="26">()</parameter_list> <specifier pos:line="11637" pos:column="29">const</specifier>
    <block pos:line="11638" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11639" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11639" pos:column="25">::</op:operator><name pos:line="11639" pos:column="27">AssertIsReleased</name></name><argument_list pos:line="11639" pos:column="43">(<argument><expr><op:operator pos:line="11639" pos:column="44">*</op:operator><name pos:line="11639" pos:column="45">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11641" pos:column="5">static</specifier> <name pos:line="11641" pos:column="12">void</name></type> <name pos:line="11641" pos:column="17">AssertIsReleased</name><parameter_list pos:line="11641" pos:column="33">(<param><decl><type><specifier pos:line="11641" pos:column="34">const</specifier> <name pos:line="11641" pos:column="40">VxSnapshotPoint</name> <type:modifier pos:line="11641" pos:column="56">&amp;</type:modifier></type><name pos:line="11641" pos:column="57">obj</name></decl></param>)</parameter_list>
    <block pos:line="11642" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11643" pos:column="9">VSASSERT</name><argument_list pos:line="11643" pos:column="17">(<argument><expr><name><name pos:line="11643" pos:column="18">obj</name><op:operator pos:line="11643" pos:column="21">.</op:operator><name pos:line="11643" pos:column="22">snapshot</name></name> <op:operator pos:line="11643" pos:column="31">==</op:operator> <name pos:line="11643" pos:column="34">NULL</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="11643" pos:column="40">L"'obj.snapshot' is not NULL; potential memory leak."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
<cpp:endif pos:line="11645" pos:column="1">#<cpp:directive pos:line="11645" pos:column="2">endif</cpp:directive></cpp:endif>
    <function><type><name pos:line="11646" pos:column="5">void</name></type> <name pos:line="11646" pos:column="10">Release</name><parameter_list pos:line="11646" pos:column="17">()</parameter_list>
    <block pos:line="11647" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11648" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11648" pos:column="25">::</op:operator><name pos:line="11648" pos:column="27">Release</name></name><argument_list pos:line="11648" pos:column="34">(<argument><expr><op:operator pos:line="11648" pos:column="35">*</op:operator><name pos:line="11648" pos:column="36">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11650" pos:column="5">static</specifier> <name pos:line="11650" pos:column="12">void</name></type> <name pos:line="11650" pos:column="17">Release</name><parameter_list pos:line="11650" pos:column="24">(<param><decl><type><name pos:line="11650" pos:column="25">VxSnapshotPoint</name> <type:modifier pos:line="11650" pos:column="41">&amp;</type:modifier></type><name pos:line="11650" pos:column="42">obj</name></decl></param>)</parameter_list>
    <block pos:line="11651" pos:column="5">{
        <if pos:line="11652" pos:column="9">if <condition pos:line="11652" pos:column="12">(<expr><name><name pos:line="11652" pos:column="13">obj</name><op:operator pos:line="11652" pos:column="16">.</op:operator><name pos:line="11652" pos:column="17">snapshot</name></name> <op:operator pos:line="11652" pos:column="26">!=</op:operator> <name pos:line="11652" pos:column="29">NULL</name></expr>)</condition><then pos:line="11652" pos:column="34">
        <block pos:line="11653" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="11654" pos:column="13">obj</name><op:operator pos:line="11654" pos:column="16">.</op:operator><name pos:line="11654" pos:column="17">snapshot</name><op:operator pos:line="11654" pos:column="25">-&gt;</op:operator><name pos:line="11654" pos:column="27">Release</name></name><argument_list pos:line="11654" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="11655" pos:column="13">obj</name><op:operator pos:line="11655" pos:column="16">.</op:operator><name pos:line="11655" pos:column="17">snapshot</name></name> <op:operator pos:line="11655" pos:column="26">=</op:operator> <name pos:line="11655" pos:column="28">NULL</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>
</public>}</block>;</struct>
<struct pos:line="11659" pos:column="1">struct <name pos:line="11659" pos:column="8">CVxSnapshotSpan</name> <super pos:line="11659" pos:column="24">: <specifier pos:line="11659" pos:column="26">public</specifier> <name pos:line="11659" pos:column="33">VxSnapshotSpan</name></super>
<block pos:line="11660" pos:column="1">{<public type="default" pos:line="11660" pos:column="2">
    <constructor><name pos:line="11661" pos:column="5">CVxSnapshotSpan</name><parameter_list pos:line="11661" pos:column="20">()</parameter_list>
    <block pos:line="11662" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11663" pos:column="9">Init</name><argument_list pos:line="11663" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11665" pos:column="5">CVxSnapshotSpan</name><parameter_list pos:line="11665" pos:column="20">(<param><decl><type><specifier pos:line="11665" pos:column="21">const</specifier> <name pos:line="11665" pos:column="27">VxSnapshotSpan</name> <type:modifier pos:line="11665" pos:column="42">&amp;</type:modifier></type><name pos:line="11665" pos:column="43">source</name></decl></param>)</parameter_list>
    <block pos:line="11666" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11667" pos:column="9">InitFrom</name><argument_list pos:line="11667" pos:column="17">(<argument><expr><name pos:line="11667" pos:column="18">source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11669" pos:column="5">CVxSnapshotSpan</name><parameter_list pos:line="11669" pos:column="20">(<param><decl><type><specifier pos:line="11669" pos:column="21">const</specifier> <name pos:line="11669" pos:column="27">CVxSnapshotPoint</name> <type:modifier pos:line="11669" pos:column="44">&amp;</type:modifier></type><name pos:line="11669" pos:column="45">_start</name></decl></param>, <param><decl><type><name pos:line="11669" pos:column="53">int</name></type> <name pos:line="11669" pos:column="57">_length</name></decl></param>)</parameter_list>
    <block pos:line="11670" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11671" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11671" pos:column="25">::</op:operator><name pos:line="11671" pos:column="27">InitFrom</name></name><argument_list pos:line="11671" pos:column="35">(<argument><expr><name pos:line="11671" pos:column="36">start</name></expr></argument>, <argument><expr><name pos:line="11671" pos:column="43">_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11672" pos:column="9">length</name> <op:operator pos:line="11672" pos:column="16">=</op:operator> <name pos:line="11672" pos:column="18">_length</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11674" pos:column="5">void</name></type> <name pos:line="11674" pos:column="10">Init</name><parameter_list pos:line="11674" pos:column="14">()</parameter_list>
    <block pos:line="11675" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11676" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11676" pos:column="24">::</op:operator><name pos:line="11676" pos:column="26">Init</name></name><argument_list pos:line="11676" pos:column="30">(<argument><expr><op:operator pos:line="11676" pos:column="31">*</op:operator><name pos:line="11676" pos:column="32">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11678" pos:column="5">static</specifier> <name pos:line="11678" pos:column="12">void</name></type> <name pos:line="11678" pos:column="17">Init</name><parameter_list pos:line="11678" pos:column="21">(<param><decl><type><name pos:line="11678" pos:column="22">VxSnapshotSpan</name> <type:modifier pos:line="11678" pos:column="37">&amp;</type:modifier></type><name pos:line="11678" pos:column="38">obj</name></decl></param>)</parameter_list>
    <block pos:line="11679" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11680" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11680" pos:column="25">::</op:operator><name pos:line="11680" pos:column="27">Init</name></name><argument_list pos:line="11680" pos:column="31">(<argument><expr><name><name pos:line="11680" pos:column="32">obj</name><op:operator pos:line="11680" pos:column="35">.</op:operator><name pos:line="11680" pos:column="36">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11681" pos:column="9">obj</name><op:operator pos:line="11681" pos:column="12">.</op:operator><name pos:line="11681" pos:column="13">length</name></name> <op:operator pos:line="11681" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="11681" pos:column="22">0</lit:literal></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11683" pos:column="5">void</name></type> <name pos:line="11683" pos:column="10">InitFrom</name><parameter_list pos:line="11683" pos:column="18">(<param><decl><type><specifier pos:line="11683" pos:column="19">const</specifier> <name pos:line="11683" pos:column="25">VxSnapshotSpan</name> <type:modifier pos:line="11683" pos:column="40">&amp;</type:modifier></type><name pos:line="11683" pos:column="41">dest</name></decl></param>)</parameter_list>
    <block pos:line="11684" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11685" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11685" pos:column="24">::</op:operator><name pos:line="11685" pos:column="26">InitFrom</name></name><argument_list pos:line="11685" pos:column="34">(<argument><expr><op:operator pos:line="11685" pos:column="35">*</op:operator><name pos:line="11685" pos:column="36">this</name></expr></argument>, <argument><expr><name pos:line="11685" pos:column="42">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11687" pos:column="5">static</specifier> <name pos:line="11687" pos:column="12">void</name></type> <name pos:line="11687" pos:column="17">InitFrom</name><parameter_list pos:line="11687" pos:column="25">(<param><decl><type><name pos:line="11687" pos:column="26">VxSnapshotSpan</name> <type:modifier pos:line="11687" pos:column="41">&amp;</type:modifier></type><name pos:line="11687" pos:column="42">dest</name></decl></param>, <param><decl><type><specifier pos:line="11687" pos:column="48">const</specifier> <name pos:line="11687" pos:column="54">CVxSnapshotSpan</name> <type:modifier pos:line="11687" pos:column="70">&amp;</type:modifier></type><name pos:line="11687" pos:column="71">source</name></decl></param>)</parameter_list>
    <block pos:line="11688" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11689" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11689" pos:column="25">::</op:operator><name pos:line="11689" pos:column="27">InitFrom</name></name><argument_list pos:line="11689" pos:column="35">(<argument><expr><name><name pos:line="11689" pos:column="36">dest</name><op:operator pos:line="11689" pos:column="40">.</op:operator><name pos:line="11689" pos:column="41">start</name></name></expr></argument>, <argument><expr><name><name pos:line="11689" pos:column="48">source</name><op:operator pos:line="11689" pos:column="54">.</op:operator><name pos:line="11689" pos:column="55">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11690" pos:column="9">dest</name><op:operator pos:line="11690" pos:column="13">.</op:operator><name pos:line="11690" pos:column="14">length</name></name> <op:operator pos:line="11690" pos:column="21">=</op:operator> <name><name pos:line="11690" pos:column="23">source</name><op:operator pos:line="11690" pos:column="29">.</op:operator><name pos:line="11690" pos:column="30">length</name></name></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11692" pos:column="5">CVxSnapshotSpan</name><type:modifier pos:line="11692" pos:column="20">*</type:modifier></type> <name pos:line="11692" pos:column="22">operator&amp;</name><parameter_list pos:line="11692" pos:column="31">()</parameter_list>
    <block pos:line="11693" pos:column="5">{
<cpp:ifdef pos:line="11694" pos:column="1">#<cpp:directive pos:line="11694" pos:column="2">ifdef</cpp:directive> <name pos:line="11694" pos:column="8">_DEBUG</name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="11695" pos:column="9">AssertIsReleased</name><argument_list pos:line="11695" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="11696" pos:column="1">#<cpp:directive pos:line="11696" pos:column="2">endif</cpp:directive></cpp:endif>
        <return pos:line="11697" pos:column="9">return <expr><name pos:line="11697" pos:column="16">this</name></expr>;</return>
    }</block></function>
    <destructor><name pos:line="11699" pos:column="5">~<name pos:line="11699" pos:column="6">CVxSnapshotSpan</name></name><parameter_list pos:line="11699" pos:column="21">()</parameter_list>
    <block pos:line="11700" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11701" pos:column="9">Release</name><argument_list pos:line="11701" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
    }</block></destructor>
    <function><type><name pos:line="11703" pos:column="5">CVxSnapshotSpan</name><type:modifier pos:line="11703" pos:column="20">&amp;</type:modifier></type> <name pos:line="11703" pos:column="22">operator=</name><parameter_list pos:line="11703" pos:column="31">(<param><decl><type><specifier pos:line="11703" pos:column="32">const</specifier> <name pos:line="11703" pos:column="38">VxSnapshotSpan</name> <type:modifier pos:line="11703" pos:column="53">&amp;</type:modifier></type><name pos:line="11703" pos:column="54">source</name></decl></param>)</parameter_list>
    <block pos:line="11704" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11705" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11705" pos:column="24">::</op:operator><name pos:line="11705" pos:column="26">CopyTo</name></name><argument_list pos:line="11705" pos:column="32">(<argument><expr><name pos:line="11705" pos:column="33">source</name></expr></argument>, <argument><expr><op:operator pos:line="11705" pos:column="41">*</op:operator><name pos:line="11705" pos:column="42">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="11706" pos:column="9">return <expr><op:operator pos:line="11706" pos:column="16">*</op:operator><name pos:line="11706" pos:column="17">this</name></expr>;</return>
    }</block></function>
    <function><type><name pos:line="11708" pos:column="5">void</name></type> <name pos:line="11708" pos:column="10">CopyTo</name><parameter_list pos:line="11708" pos:column="16">(<param><decl><type><name pos:line="11708" pos:column="17">VxSnapshotSpan</name> <type:modifier pos:line="11708" pos:column="32">&amp;</type:modifier></type><name pos:line="11708" pos:column="33">dest</name></decl></param>)</parameter_list> <specifier pos:line="11708" pos:column="39">const</specifier>
    <block pos:line="11709" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11710" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11710" pos:column="24">::</op:operator><name pos:line="11710" pos:column="26">CopyTo</name></name><argument_list pos:line="11710" pos:column="32">(<argument><expr><op:operator pos:line="11710" pos:column="33">*</op:operator><name pos:line="11710" pos:column="34">this</name></expr></argument>, <argument><expr><name pos:line="11710" pos:column="40">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11712" pos:column="5">static</specifier> <name pos:line="11712" pos:column="12">void</name></type> <name pos:line="11712" pos:column="17">CopyTo</name><parameter_list pos:line="11712" pos:column="23">(<param><decl><type><specifier pos:line="11712" pos:column="24">const</specifier> <name pos:line="11712" pos:column="30">CVxSnapshotSpan</name> <type:modifier pos:line="11712" pos:column="46">&amp;</type:modifier></type><name pos:line="11712" pos:column="47">source</name></decl></param>, <param><decl><type><name pos:line="11712" pos:column="55">VxSnapshotSpan</name> <type:modifier pos:line="11712" pos:column="70">&amp;</type:modifier></type><name pos:line="11712" pos:column="71">dest</name></decl></param>)</parameter_list>
    <block pos:line="11713" pos:column="5">{
        <if pos:line="11714" pos:column="9">if <condition pos:line="11714" pos:column="12">(<expr><op:operator pos:line="11714" pos:column="13">&amp;</op:operator><name pos:line="11714" pos:column="14">source</name> <op:operator pos:line="11714" pos:column="21">==</op:operator> <op:operator pos:line="11714" pos:column="24">&amp;</op:operator><name pos:line="11714" pos:column="25">dest</name></expr>)</condition><then pos:line="11714" pos:column="30">
            <return pos:line="11715" pos:column="13">return;</return></then></if>
        <expr_stmt><expr><call><name><name pos:line="11716" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11716" pos:column="25">::</op:operator><name pos:line="11716" pos:column="27">CopyTo</name></name><argument_list pos:line="11716" pos:column="33">(<argument><expr><name><name pos:line="11716" pos:column="34">source</name><op:operator pos:line="11716" pos:column="40">.</op:operator><name pos:line="11716" pos:column="41">start</name></name></expr></argument>, <argument><expr><name><name pos:line="11716" pos:column="48">dest</name><op:operator pos:line="11716" pos:column="52">.</op:operator><name pos:line="11716" pos:column="53">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11717" pos:column="9">dest</name><op:operator pos:line="11717" pos:column="13">.</op:operator><name pos:line="11717" pos:column="14">length</name></name> <op:operator pos:line="11717" pos:column="21">=</op:operator> <name><name pos:line="11717" pos:column="23">source</name><op:operator pos:line="11717" pos:column="29">.</op:operator><name pos:line="11717" pos:column="30">length</name></name></expr>;</expr_stmt>
    }</block></function>
<cpp:ifdef pos:line="11719" pos:column="1">#<cpp:directive pos:line="11719" pos:column="2">ifdef</cpp:directive> <name pos:line="11719" pos:column="8">_DEBUG</name></cpp:ifdef>
    <function><type><name pos:line="11720" pos:column="5">void</name></type> <name pos:line="11720" pos:column="10">AssertIsReleased</name><parameter_list pos:line="11720" pos:column="26">()</parameter_list> <specifier pos:line="11720" pos:column="29">const</specifier>
    <block pos:line="11721" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11722" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11722" pos:column="24">::</op:operator><name pos:line="11722" pos:column="26">AssertIsReleased</name></name><argument_list pos:line="11722" pos:column="42">(<argument><expr><op:operator pos:line="11722" pos:column="43">*</op:operator><name pos:line="11722" pos:column="44">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11724" pos:column="5">static</specifier> <name pos:line="11724" pos:column="12">void</name></type> <name pos:line="11724" pos:column="17">AssertIsReleased</name><parameter_list pos:line="11724" pos:column="33">(<param><decl><type><specifier pos:line="11724" pos:column="34">const</specifier> <name pos:line="11724" pos:column="40">VxSnapshotSpan</name> <type:modifier pos:line="11724" pos:column="55">&amp;</type:modifier></type><name pos:line="11724" pos:column="56">obj</name></decl></param>)</parameter_list>
    <block pos:line="11725" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11726" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11726" pos:column="25">::</op:operator><name pos:line="11726" pos:column="27">AssertIsReleased</name></name><argument_list pos:line="11726" pos:column="43">(<argument><expr><name><name pos:line="11726" pos:column="44">obj</name><op:operator pos:line="11726" pos:column="47">.</op:operator><name pos:line="11726" pos:column="48">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
<cpp:endif pos:line="11728" pos:column="1">#<cpp:directive pos:line="11728" pos:column="2">endif</cpp:directive></cpp:endif>
    <function><type><name pos:line="11729" pos:column="5">void</name></type> <name pos:line="11729" pos:column="10">Release</name><parameter_list pos:line="11729" pos:column="17">()</parameter_list>
    <block pos:line="11730" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11731" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11731" pos:column="24">::</op:operator><name pos:line="11731" pos:column="26">Release</name></name><argument_list pos:line="11731" pos:column="33">(<argument><expr><op:operator pos:line="11731" pos:column="34">*</op:operator><name pos:line="11731" pos:column="35">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11733" pos:column="5">static</specifier> <name pos:line="11733" pos:column="12">void</name></type> <name pos:line="11733" pos:column="17">Release</name><parameter_list pos:line="11733" pos:column="24">(<param><decl><type><name pos:line="11733" pos:column="25">VxSnapshotSpan</name> <type:modifier pos:line="11733" pos:column="40">&amp;</type:modifier></type><name pos:line="11733" pos:column="41">obj</name></decl></param>)</parameter_list>
    <block pos:line="11734" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11735" pos:column="9">CVxSnapshotPoint</name><op:operator pos:line="11735" pos:column="25">::</op:operator><name pos:line="11735" pos:column="27">Release</name></name><argument_list pos:line="11735" pos:column="34">(<argument><expr><name><name pos:line="11735" pos:column="35">obj</name><op:operator pos:line="11735" pos:column="38">.</op:operator><name pos:line="11735" pos:column="39">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
</public>}</block>;</struct>
<struct pos:line="11738" pos:column="1">struct <name pos:line="11738" pos:column="8">CVxSpan</name> <super pos:line="11738" pos:column="16">: <specifier pos:line="11738" pos:column="18">public</specifier> <name pos:line="11738" pos:column="25">VxSpan</name></super>
<block pos:line="11739" pos:column="1">{<public type="default" pos:line="11739" pos:column="2">
    <constructor><name pos:line="11740" pos:column="5">CVxSpan</name><parameter_list pos:line="11740" pos:column="12">()</parameter_list>
    <block pos:line="11741" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11742" pos:column="9">Init</name><argument_list pos:line="11742" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11744" pos:column="5">CVxSpan</name><parameter_list pos:line="11744" pos:column="12">(<param><decl><type><specifier pos:line="11744" pos:column="13">const</specifier> <name pos:line="11744" pos:column="19">VxSpan</name> <type:modifier pos:line="11744" pos:column="26">&amp;</type:modifier></type><name pos:line="11744" pos:column="27">source</name></decl></param>)</parameter_list>
    <block pos:line="11745" pos:column="5">{
        <expr_stmt><expr><op:operator pos:line="11746" pos:column="9">*</op:operator><name pos:line="11746" pos:column="10">this</name> <op:operator pos:line="11746" pos:column="15">=</op:operator> <name pos:line="11746" pos:column="17">source</name></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11748" pos:column="5">CVxSpan</name><parameter_list pos:line="11748" pos:column="12">(<param><decl><type><name pos:line="11748" pos:column="13">int</name></type> <name pos:line="11748" pos:column="17">_start</name></decl></param>, <param><decl><type><name pos:line="11748" pos:column="25">int</name></type> <name pos:line="11748" pos:column="29">_length</name></decl></param>)</parameter_list>
    <block pos:line="11749" pos:column="5">{
        <expr_stmt><expr><name pos:line="11750" pos:column="9">start</name> <op:operator pos:line="11750" pos:column="15">=</op:operator> <name pos:line="11750" pos:column="17">_start</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11751" pos:column="9">length</name> <op:operator pos:line="11751" pos:column="16">=</op:operator> <name pos:line="11751" pos:column="18">_length</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11753" pos:column="5">void</name></type> <name pos:line="11753" pos:column="10">Init</name><parameter_list pos:line="11753" pos:column="14">()</parameter_list>
    <block pos:line="11754" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11755" pos:column="9">CVxSpan</name><op:operator pos:line="11755" pos:column="16">::</op:operator><name pos:line="11755" pos:column="18">Init</name></name><argument_list pos:line="11755" pos:column="22">(<argument><expr><op:operator pos:line="11755" pos:column="23">*</op:operator><name pos:line="11755" pos:column="24">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11757" pos:column="5">static</specifier> <name pos:line="11757" pos:column="12">void</name></type> <name pos:line="11757" pos:column="17">Init</name><parameter_list pos:line="11757" pos:column="21">(<param><decl><type><name pos:line="11757" pos:column="22">VxSpan</name> <type:modifier pos:line="11757" pos:column="29">&amp;</type:modifier></type><name pos:line="11757" pos:column="30">obj</name></decl></param>)</parameter_list>
    <block pos:line="11758" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="11759" pos:column="9">obj</name><op:operator pos:line="11759" pos:column="12">.</op:operator><name pos:line="11759" pos:column="13">start</name></name> <op:operator pos:line="11759" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="11759" pos:column="21">0</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11760" pos:column="9">obj</name><op:operator pos:line="11760" pos:column="12">.</op:operator><name pos:line="11760" pos:column="13">length</name></name> <op:operator pos:line="11760" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="11760" pos:column="22">0</lit:literal></expr>;</expr_stmt>
    }</block></function>
</public>}</block>;</struct>
<struct pos:line="11763" pos:column="1">struct <name pos:line="11763" pos:column="8">CVxFindData</name> <super pos:line="11763" pos:column="20">: <specifier pos:line="11763" pos:column="22">public</specifier> <name pos:line="11763" pos:column="29">VxFindData</name></super>
<block pos:line="11764" pos:column="1">{<public type="default" pos:line="11764" pos:column="2">
    <constructor><name pos:line="11765" pos:column="5">CVxFindData</name><parameter_list pos:line="11765" pos:column="16">()</parameter_list>
    <block pos:line="11766" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11767" pos:column="9">Init</name><argument_list pos:line="11767" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11769" pos:column="5">CVxFindData</name><parameter_list pos:line="11769" pos:column="16">(<param><decl><type><specifier pos:line="11769" pos:column="17">const</specifier> <name pos:line="11769" pos:column="23">VxFindData</name> <type:modifier pos:line="11769" pos:column="34">&amp;</type:modifier></type><name pos:line="11769" pos:column="35">source</name></decl></param>)</parameter_list>
    <block pos:line="11770" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11771" pos:column="9">InitFrom</name><argument_list pos:line="11771" pos:column="17">(<argument><expr><name pos:line="11771" pos:column="18">source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11773" pos:column="5">CVxFindData</name><parameter_list pos:line="11773" pos:column="16">(<param><decl><type><name pos:line="11773" pos:column="17">LPCWSTR</name></type> <name pos:line="11773" pos:column="25">__searchString</name></decl></param>, <param><decl><type><name pos:line="11773" pos:column="41">IVxTextSnapshot</name><type:modifier pos:line="11773" pos:column="56">*</type:modifier></type> <name pos:line="11773" pos:column="58">__textSnapshotToSearch</name></decl></param>, <param><decl><type><name pos:line="11773" pos:column="82">VxFindOptions</name></type> <name pos:line="11773" pos:column="96">__findOptions</name></decl></param>, <param><decl><type><name pos:line="11773" pos:column="111">IVxTextStructureNavigator</name><type:modifier pos:line="11773" pos:column="136">*</type:modifier></type> <name pos:line="11773" pos:column="138">__textStructureNavigator</name></decl></param>)</parameter_list>
    <block pos:line="11774" pos:column="5">{
        <if pos:line="11775" pos:column="9">if <condition pos:line="11775" pos:column="12">(<expr><name pos:line="11775" pos:column="13">_searchString</name> <op:operator pos:line="11775" pos:column="27">!=</op:operator> <name pos:line="11775" pos:column="30">__searchString</name></expr>)</condition><then pos:line="11775" pos:column="45">
        <block pos:line="11776" pos:column="9">{
            <expr_stmt><expr><name pos:line="11777" pos:column="13">_searchString</name> <op:operator pos:line="11777" pos:column="27">=</op:operator> <op:operator pos:line="11777" pos:column="29">(</op:operator><name pos:line="11777" pos:column="30">__searchString</name> <op:operator pos:line="11777" pos:column="45">==</op:operator> <name pos:line="11777" pos:column="48">NULL</name><op:operator pos:line="11777" pos:column="52">)</op:operator> <op:operator pos:line="11777" pos:column="54">?</op:operator> <name pos:line="11777" pos:column="56">NULL</name> <op:operator pos:line="11777" pos:column="61">:</op:operator> <call><name pos:line="11777" pos:column="63">SysAllocString</name><argument_list pos:line="11777" pos:column="77">(<argument><expr><name pos:line="11777" pos:column="78">__searchString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="11779" pos:column="9">if <condition pos:line="11779" pos:column="12">(<expr><name pos:line="11779" pos:column="13">__textSnapshotToSearch</name> <op:operator pos:line="11779" pos:column="36">!=</op:operator> <name pos:line="11779" pos:column="39">NULL</name></expr>)</condition><then pos:line="11779" pos:column="44">
            <expr_stmt><expr><call><name><name pos:line="11780" pos:column="13">__textSnapshotToSearch</name><op:operator pos:line="11780" pos:column="35">-&gt;</op:operator><name pos:line="11780" pos:column="37">AddRef</name></name><argument_list pos:line="11780" pos:column="43">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="11781" pos:column="9">_textSnapshotToSearch</name> <op:operator pos:line="11781" pos:column="31">=</op:operator> <name pos:line="11781" pos:column="33">__textSnapshotToSearch</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11782" pos:column="9">_findOptions</name> <op:operator pos:line="11782" pos:column="22">=</op:operator> <name pos:line="11782" pos:column="24">__findOptions</name></expr>;</expr_stmt>
        <if pos:line="11783" pos:column="9">if <condition pos:line="11783" pos:column="12">(<expr><name pos:line="11783" pos:column="13">__textStructureNavigator</name> <op:operator pos:line="11783" pos:column="38">!=</op:operator> <name pos:line="11783" pos:column="41">NULL</name></expr>)</condition><then pos:line="11783" pos:column="46">
            <expr_stmt><expr><call><name><name pos:line="11784" pos:column="13">__textStructureNavigator</name><op:operator pos:line="11784" pos:column="37">-&gt;</op:operator><name pos:line="11784" pos:column="39">AddRef</name></name><argument_list pos:line="11784" pos:column="45">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="11785" pos:column="9">_textStructureNavigator</name> <op:operator pos:line="11785" pos:column="33">=</op:operator> <name pos:line="11785" pos:column="35">__textStructureNavigator</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11787" pos:column="5">void</name></type> <name pos:line="11787" pos:column="10">Init</name><parameter_list pos:line="11787" pos:column="14">()</parameter_list>
    <block pos:line="11788" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11789" pos:column="9">CVxFindData</name><op:operator pos:line="11789" pos:column="20">::</op:operator><name pos:line="11789" pos:column="22">Init</name></name><argument_list pos:line="11789" pos:column="26">(<argument><expr><op:operator pos:line="11789" pos:column="27">*</op:operator><name pos:line="11789" pos:column="28">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11791" pos:column="5">static</specifier> <name pos:line="11791" pos:column="12">void</name></type> <name pos:line="11791" pos:column="17">Init</name><parameter_list pos:line="11791" pos:column="21">(<param><decl><type><name pos:line="11791" pos:column="22">VxFindData</name> <type:modifier pos:line="11791" pos:column="33">&amp;</type:modifier></type><name pos:line="11791" pos:column="34">obj</name></decl></param>)</parameter_list>
    <block pos:line="11792" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="11793" pos:column="9">obj</name><op:operator pos:line="11793" pos:column="12">.</op:operator><name pos:line="11793" pos:column="13">_searchString</name></name> <op:operator pos:line="11793" pos:column="27">=</op:operator> <name pos:line="11793" pos:column="29">NULL</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11794" pos:column="9">obj</name><op:operator pos:line="11794" pos:column="12">.</op:operator><name pos:line="11794" pos:column="13">_textSnapshotToSearch</name></name> <op:operator pos:line="11794" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="11794" pos:column="37">0</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11795" pos:column="9">obj</name><op:operator pos:line="11795" pos:column="12">.</op:operator><name pos:line="11795" pos:column="13">_findOptions</name></name> <op:operator pos:line="11795" pos:column="26">=</op:operator> <call><name><name pos:line="11795" pos:column="28">static_cast</name><argument_list pos:line="11795" pos:column="39">&lt;<argument><expr><name pos:line="11795" pos:column="40">VxFindOptions</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="11795" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="11795" pos:column="55">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11796" pos:column="9">obj</name><op:operator pos:line="11796" pos:column="12">.</op:operator><name pos:line="11796" pos:column="13">_textStructureNavigator</name></name> <op:operator pos:line="11796" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="11796" pos:column="39">0</lit:literal></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11798" pos:column="5">void</name></type> <name pos:line="11798" pos:column="10">InitFrom</name><parameter_list pos:line="11798" pos:column="18">(<param><decl><type><specifier pos:line="11798" pos:column="19">const</specifier> <name pos:line="11798" pos:column="25">VxFindData</name> <type:modifier pos:line="11798" pos:column="36">&amp;</type:modifier></type><name pos:line="11798" pos:column="37">dest</name></decl></param>)</parameter_list>
    <block pos:line="11799" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11800" pos:column="9">CVxFindData</name><op:operator pos:line="11800" pos:column="20">::</op:operator><name pos:line="11800" pos:column="22">InitFrom</name></name><argument_list pos:line="11800" pos:column="30">(<argument><expr><op:operator pos:line="11800" pos:column="31">*</op:operator><name pos:line="11800" pos:column="32">this</name></expr></argument>, <argument><expr><name pos:line="11800" pos:column="38">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11802" pos:column="5">static</specifier> <name pos:line="11802" pos:column="12">void</name></type> <name pos:line="11802" pos:column="17">InitFrom</name><parameter_list pos:line="11802" pos:column="25">(<param><decl><type><name pos:line="11802" pos:column="26">VxFindData</name> <type:modifier pos:line="11802" pos:column="37">&amp;</type:modifier></type><name pos:line="11802" pos:column="38">dest</name></decl></param>, <param><decl><type><specifier pos:line="11802" pos:column="44">const</specifier> <name pos:line="11802" pos:column="50">CVxFindData</name> <type:modifier pos:line="11802" pos:column="62">&amp;</type:modifier></type><name pos:line="11802" pos:column="63">source</name></decl></param>)</parameter_list>
    <block pos:line="11803" pos:column="5">{
        <if pos:line="11804" pos:column="9">if <condition pos:line="11804" pos:column="12">(<expr><name><name pos:line="11804" pos:column="13">dest</name><op:operator pos:line="11804" pos:column="17">.</op:operator><name pos:line="11804" pos:column="18">_searchString</name></name> <op:operator pos:line="11804" pos:column="32">!=</op:operator> <name><name pos:line="11804" pos:column="35">source</name><op:operator pos:line="11804" pos:column="41">.</op:operator><name pos:line="11804" pos:column="42">_searchString</name></name></expr>)</condition><then pos:line="11804" pos:column="56">
        <block pos:line="11805" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="11806" pos:column="13">dest</name><op:operator pos:line="11806" pos:column="17">.</op:operator><name pos:line="11806" pos:column="18">_searchString</name></name> <op:operator pos:line="11806" pos:column="32">=</op:operator> <op:operator pos:line="11806" pos:column="34">(</op:operator><name><name pos:line="11806" pos:column="35">source</name><op:operator pos:line="11806" pos:column="41">.</op:operator><name pos:line="11806" pos:column="42">_searchString</name></name> <op:operator pos:line="11806" pos:column="56">==</op:operator> <name pos:line="11806" pos:column="59">NULL</name><op:operator pos:line="11806" pos:column="63">)</op:operator> <op:operator pos:line="11806" pos:column="65">?</op:operator> <name pos:line="11806" pos:column="67">NULL</name> <op:operator pos:line="11806" pos:column="72">:</op:operator> <call><name pos:line="11806" pos:column="74">SysAllocString</name><argument_list pos:line="11806" pos:column="88">(<argument><expr><name><name pos:line="11806" pos:column="89">source</name><op:operator pos:line="11806" pos:column="95">.</op:operator><name pos:line="11806" pos:column="96">_searchString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="11808" pos:column="9">if <condition pos:line="11808" pos:column="12">(<expr><name><name pos:line="11808" pos:column="13">source</name><op:operator pos:line="11808" pos:column="19">.</op:operator><name pos:line="11808" pos:column="20">_textSnapshotToSearch</name></name> <op:operator pos:line="11808" pos:column="42">!=</op:operator> <name pos:line="11808" pos:column="45">NULL</name></expr>)</condition><then pos:line="11808" pos:column="50">
            <expr_stmt><expr><call><name><name pos:line="11809" pos:column="13">source</name><op:operator pos:line="11809" pos:column="19">.</op:operator><name pos:line="11809" pos:column="20">_textSnapshotToSearch</name><op:operator pos:line="11809" pos:column="41">-&gt;</op:operator><name pos:line="11809" pos:column="43">AddRef</name></name><argument_list pos:line="11809" pos:column="49">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name><name pos:line="11810" pos:column="9">dest</name><op:operator pos:line="11810" pos:column="13">.</op:operator><name pos:line="11810" pos:column="14">_textSnapshotToSearch</name></name> <op:operator pos:line="11810" pos:column="36">=</op:operator> <name><name pos:line="11810" pos:column="38">source</name><op:operator pos:line="11810" pos:column="44">.</op:operator><name pos:line="11810" pos:column="45">_textSnapshotToSearch</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11811" pos:column="9">dest</name><op:operator pos:line="11811" pos:column="13">.</op:operator><name pos:line="11811" pos:column="14">_findOptions</name></name> <op:operator pos:line="11811" pos:column="27">=</op:operator> <name><name pos:line="11811" pos:column="29">source</name><op:operator pos:line="11811" pos:column="35">.</op:operator><name pos:line="11811" pos:column="36">_findOptions</name></name></expr>;</expr_stmt>
        <if pos:line="11812" pos:column="9">if <condition pos:line="11812" pos:column="12">(<expr><name><name pos:line="11812" pos:column="13">source</name><op:operator pos:line="11812" pos:column="19">.</op:operator><name pos:line="11812" pos:column="20">_textStructureNavigator</name></name> <op:operator pos:line="11812" pos:column="44">!=</op:operator> <name pos:line="11812" pos:column="47">NULL</name></expr>)</condition><then pos:line="11812" pos:column="52">
            <expr_stmt><expr><call><name><name pos:line="11813" pos:column="13">source</name><op:operator pos:line="11813" pos:column="19">.</op:operator><name pos:line="11813" pos:column="20">_textStructureNavigator</name><op:operator pos:line="11813" pos:column="43">-&gt;</op:operator><name pos:line="11813" pos:column="45">AddRef</name></name><argument_list pos:line="11813" pos:column="51">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name><name pos:line="11814" pos:column="9">dest</name><op:operator pos:line="11814" pos:column="13">.</op:operator><name pos:line="11814" pos:column="14">_textStructureNavigator</name></name> <op:operator pos:line="11814" pos:column="38">=</op:operator> <name><name pos:line="11814" pos:column="40">source</name><op:operator pos:line="11814" pos:column="46">.</op:operator><name pos:line="11814" pos:column="47">_textStructureNavigator</name></name></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11816" pos:column="5">CVxFindData</name><type:modifier pos:line="11816" pos:column="16">*</type:modifier></type> <name pos:line="11816" pos:column="18">operator&amp;</name><parameter_list pos:line="11816" pos:column="27">()</parameter_list>
    <block pos:line="11817" pos:column="5">{
<cpp:ifdef pos:line="11818" pos:column="1">#<cpp:directive pos:line="11818" pos:column="2">ifdef</cpp:directive> <name pos:line="11818" pos:column="8">_DEBUG</name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="11819" pos:column="9">AssertIsReleased</name><argument_list pos:line="11819" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="11820" pos:column="1">#<cpp:directive pos:line="11820" pos:column="2">endif</cpp:directive></cpp:endif>
        <return pos:line="11821" pos:column="9">return <expr><name pos:line="11821" pos:column="16">this</name></expr>;</return>
    }</block></function>
    <destructor><name pos:line="11823" pos:column="5">~<name pos:line="11823" pos:column="6">CVxFindData</name></name><parameter_list pos:line="11823" pos:column="17">()</parameter_list>
    <block pos:line="11824" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11825" pos:column="9">Release</name><argument_list pos:line="11825" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
    }</block></destructor>
    <function><type><name pos:line="11827" pos:column="5">CVxFindData</name><type:modifier pos:line="11827" pos:column="16">&amp;</type:modifier></type> <name pos:line="11827" pos:column="18">operator=</name><parameter_list pos:line="11827" pos:column="27">(<param><decl><type><specifier pos:line="11827" pos:column="28">const</specifier> <name pos:line="11827" pos:column="34">VxFindData</name> <type:modifier pos:line="11827" pos:column="45">&amp;</type:modifier></type><name pos:line="11827" pos:column="46">source</name></decl></param>)</parameter_list>
    <block pos:line="11828" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11829" pos:column="9">CVxFindData</name><op:operator pos:line="11829" pos:column="20">::</op:operator><name pos:line="11829" pos:column="22">CopyTo</name></name><argument_list pos:line="11829" pos:column="28">(<argument><expr><name pos:line="11829" pos:column="29">source</name></expr></argument>, <argument><expr><op:operator pos:line="11829" pos:column="37">*</op:operator><name pos:line="11829" pos:column="38">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="11830" pos:column="9">return <expr><op:operator pos:line="11830" pos:column="16">*</op:operator><name pos:line="11830" pos:column="17">this</name></expr>;</return>
    }</block></function>
    <function><type><name pos:line="11832" pos:column="5">void</name></type> <name pos:line="11832" pos:column="10">CopyTo</name><parameter_list pos:line="11832" pos:column="16">(<param><decl><type><name pos:line="11832" pos:column="17">VxFindData</name> <type:modifier pos:line="11832" pos:column="28">&amp;</type:modifier></type><name pos:line="11832" pos:column="29">dest</name></decl></param>)</parameter_list> <specifier pos:line="11832" pos:column="35">const</specifier>
    <block pos:line="11833" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11834" pos:column="9">CVxFindData</name><op:operator pos:line="11834" pos:column="20">::</op:operator><name pos:line="11834" pos:column="22">CopyTo</name></name><argument_list pos:line="11834" pos:column="28">(<argument><expr><op:operator pos:line="11834" pos:column="29">*</op:operator><name pos:line="11834" pos:column="30">this</name></expr></argument>, <argument><expr><name pos:line="11834" pos:column="36">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11836" pos:column="5">static</specifier> <name pos:line="11836" pos:column="12">void</name></type> <name pos:line="11836" pos:column="17">CopyTo</name><parameter_list pos:line="11836" pos:column="23">(<param><decl><type><specifier pos:line="11836" pos:column="24">const</specifier> <name pos:line="11836" pos:column="30">CVxFindData</name> <type:modifier pos:line="11836" pos:column="42">&amp;</type:modifier></type><name pos:line="11836" pos:column="43">source</name></decl></param>, <param><decl><type><name pos:line="11836" pos:column="51">VxFindData</name> <type:modifier pos:line="11836" pos:column="62">&amp;</type:modifier></type><name pos:line="11836" pos:column="63">dest</name></decl></param>)</parameter_list>
    <block pos:line="11837" pos:column="5">{
        <if pos:line="11838" pos:column="9">if <condition pos:line="11838" pos:column="12">(<expr><op:operator pos:line="11838" pos:column="13">&amp;</op:operator><name pos:line="11838" pos:column="14">source</name> <op:operator pos:line="11838" pos:column="21">==</op:operator> <op:operator pos:line="11838" pos:column="24">&amp;</op:operator><name pos:line="11838" pos:column="25">dest</name></expr>)</condition><then pos:line="11838" pos:column="30">
            <return pos:line="11839" pos:column="13">return;</return></then></if>
        <if pos:line="11840" pos:column="9">if <condition pos:line="11840" pos:column="12">(<expr><name><name pos:line="11840" pos:column="13">dest</name><op:operator pos:line="11840" pos:column="17">.</op:operator><name pos:line="11840" pos:column="18">_searchString</name></name> <op:operator pos:line="11840" pos:column="32">!=</op:operator> <name><name pos:line="11840" pos:column="35">source</name><op:operator pos:line="11840" pos:column="41">.</op:operator><name pos:line="11840" pos:column="42">_searchString</name></name></expr>)</condition><then pos:line="11840" pos:column="56">
        <block pos:line="11841" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="11842" pos:column="13">SysFreeString</name><argument_list pos:line="11842" pos:column="26">(<argument><expr><name><name pos:line="11842" pos:column="27">dest</name><op:operator pos:line="11842" pos:column="31">.</op:operator><name pos:line="11842" pos:column="32">_searchString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="11843" pos:column="13">dest</name><op:operator pos:line="11843" pos:column="17">.</op:operator><name pos:line="11843" pos:column="18">_searchString</name></name> <op:operator pos:line="11843" pos:column="32">=</op:operator> <op:operator pos:line="11843" pos:column="34">(</op:operator><name><name pos:line="11843" pos:column="35">source</name><op:operator pos:line="11843" pos:column="41">.</op:operator><name pos:line="11843" pos:column="42">_searchString</name></name> <op:operator pos:line="11843" pos:column="56">==</op:operator> <name pos:line="11843" pos:column="59">NULL</name><op:operator pos:line="11843" pos:column="63">)</op:operator> <op:operator pos:line="11843" pos:column="65">?</op:operator> <name pos:line="11843" pos:column="67">NULL</name> <op:operator pos:line="11843" pos:column="72">:</op:operator> <call><name pos:line="11843" pos:column="74">SysAllocString</name><argument_list pos:line="11843" pos:column="88">(<argument><expr><name><name pos:line="11843" pos:column="89">source</name><op:operator pos:line="11843" pos:column="95">.</op:operator><name pos:line="11843" pos:column="96">_searchString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="11845" pos:column="9">if <condition pos:line="11845" pos:column="12">(<expr><name><name pos:line="11845" pos:column="13">source</name><op:operator pos:line="11845" pos:column="19">.</op:operator><name pos:line="11845" pos:column="20">_textSnapshotToSearch</name></name> <op:operator pos:line="11845" pos:column="42">!=</op:operator> <name pos:line="11845" pos:column="45">NULL</name></expr>)</condition><then pos:line="11845" pos:column="50">
            <expr_stmt><expr><call><name><name pos:line="11846" pos:column="13">source</name><op:operator pos:line="11846" pos:column="19">.</op:operator><name pos:line="11846" pos:column="20">_textSnapshotToSearch</name><op:operator pos:line="11846" pos:column="41">-&gt;</op:operator><name pos:line="11846" pos:column="43">AddRef</name></name><argument_list pos:line="11846" pos:column="49">()</argument_list></call></expr>;</expr_stmt></then></if>
        <if pos:line="11847" pos:column="9">if <condition pos:line="11847" pos:column="12">(<expr><name><name pos:line="11847" pos:column="13">dest</name><op:operator pos:line="11847" pos:column="17">.</op:operator><name pos:line="11847" pos:column="18">_textSnapshotToSearch</name></name> <op:operator pos:line="11847" pos:column="40">!=</op:operator> <name pos:line="11847" pos:column="43">NULL</name></expr>)</condition><then pos:line="11847" pos:column="48">
            <expr_stmt><expr><call><name><name pos:line="11848" pos:column="13">dest</name><op:operator pos:line="11848" pos:column="17">.</op:operator><name pos:line="11848" pos:column="18">_textSnapshotToSearch</name><op:operator pos:line="11848" pos:column="39">-&gt;</op:operator><name pos:line="11848" pos:column="41">Release</name></name><argument_list pos:line="11848" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name><name pos:line="11849" pos:column="9">dest</name><op:operator pos:line="11849" pos:column="13">.</op:operator><name pos:line="11849" pos:column="14">_textSnapshotToSearch</name></name> <op:operator pos:line="11849" pos:column="36">=</op:operator> <name><name pos:line="11849" pos:column="38">source</name><op:operator pos:line="11849" pos:column="44">.</op:operator><name pos:line="11849" pos:column="45">_textSnapshotToSearch</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11850" pos:column="9">dest</name><op:operator pos:line="11850" pos:column="13">.</op:operator><name pos:line="11850" pos:column="14">_findOptions</name></name> <op:operator pos:line="11850" pos:column="27">=</op:operator> <name><name pos:line="11850" pos:column="29">source</name><op:operator pos:line="11850" pos:column="35">.</op:operator><name pos:line="11850" pos:column="36">_findOptions</name></name></expr>;</expr_stmt>
        <if pos:line="11851" pos:column="9">if <condition pos:line="11851" pos:column="12">(<expr><name><name pos:line="11851" pos:column="13">source</name><op:operator pos:line="11851" pos:column="19">.</op:operator><name pos:line="11851" pos:column="20">_textStructureNavigator</name></name> <op:operator pos:line="11851" pos:column="44">!=</op:operator> <name pos:line="11851" pos:column="47">NULL</name></expr>)</condition><then pos:line="11851" pos:column="52">
            <expr_stmt><expr><call><name><name pos:line="11852" pos:column="13">source</name><op:operator pos:line="11852" pos:column="19">.</op:operator><name pos:line="11852" pos:column="20">_textStructureNavigator</name><op:operator pos:line="11852" pos:column="43">-&gt;</op:operator><name pos:line="11852" pos:column="45">AddRef</name></name><argument_list pos:line="11852" pos:column="51">()</argument_list></call></expr>;</expr_stmt></then></if>
        <if pos:line="11853" pos:column="9">if <condition pos:line="11853" pos:column="12">(<expr><name><name pos:line="11853" pos:column="13">dest</name><op:operator pos:line="11853" pos:column="17">.</op:operator><name pos:line="11853" pos:column="18">_textStructureNavigator</name></name> <op:operator pos:line="11853" pos:column="42">!=</op:operator> <name pos:line="11853" pos:column="45">NULL</name></expr>)</condition><then pos:line="11853" pos:column="50">
            <expr_stmt><expr><call><name><name pos:line="11854" pos:column="13">dest</name><op:operator pos:line="11854" pos:column="17">.</op:operator><name pos:line="11854" pos:column="18">_textStructureNavigator</name><op:operator pos:line="11854" pos:column="41">-&gt;</op:operator><name pos:line="11854" pos:column="43">Release</name></name><argument_list pos:line="11854" pos:column="50">()</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name><name pos:line="11855" pos:column="9">dest</name><op:operator pos:line="11855" pos:column="13">.</op:operator><name pos:line="11855" pos:column="14">_textStructureNavigator</name></name> <op:operator pos:line="11855" pos:column="38">=</op:operator> <name><name pos:line="11855" pos:column="40">source</name><op:operator pos:line="11855" pos:column="46">.</op:operator><name pos:line="11855" pos:column="47">_textStructureNavigator</name></name></expr>;</expr_stmt>
    }</block></function>
<cpp:ifdef pos:line="11857" pos:column="1">#<cpp:directive pos:line="11857" pos:column="2">ifdef</cpp:directive> <name pos:line="11857" pos:column="8">_DEBUG</name></cpp:ifdef>
    <function><type><name pos:line="11858" pos:column="5">void</name></type> <name pos:line="11858" pos:column="10">AssertIsReleased</name><parameter_list pos:line="11858" pos:column="26">()</parameter_list> <specifier pos:line="11858" pos:column="29">const</specifier>
    <block pos:line="11859" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11860" pos:column="9">CVxFindData</name><op:operator pos:line="11860" pos:column="20">::</op:operator><name pos:line="11860" pos:column="22">AssertIsReleased</name></name><argument_list pos:line="11860" pos:column="38">(<argument><expr><op:operator pos:line="11860" pos:column="39">*</op:operator><name pos:line="11860" pos:column="40">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11862" pos:column="5">static</specifier> <name pos:line="11862" pos:column="12">void</name></type> <name pos:line="11862" pos:column="17">AssertIsReleased</name><parameter_list pos:line="11862" pos:column="33">(<param><decl><type><specifier pos:line="11862" pos:column="34">const</specifier> <name pos:line="11862" pos:column="40">VxFindData</name> <type:modifier pos:line="11862" pos:column="51">&amp;</type:modifier></type><name pos:line="11862" pos:column="52">obj</name></decl></param>)</parameter_list>
    <block pos:line="11863" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11864" pos:column="9">VSASSERT</name><argument_list pos:line="11864" pos:column="17">(<argument><expr><name><name pos:line="11864" pos:column="18">obj</name><op:operator pos:line="11864" pos:column="21">.</op:operator><name pos:line="11864" pos:column="22">_searchString</name></name> <op:operator pos:line="11864" pos:column="36">==</op:operator> <name pos:line="11864" pos:column="39">NULL</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="11864" pos:column="45">L"'obj._searchString' is not NULL; potential memory leak."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="11865" pos:column="9">VSASSERT</name><argument_list pos:line="11865" pos:column="17">(<argument><expr><name><name pos:line="11865" pos:column="18">obj</name><op:operator pos:line="11865" pos:column="21">.</op:operator><name pos:line="11865" pos:column="22">_textSnapshotToSearch</name></name> <op:operator pos:line="11865" pos:column="44">==</op:operator> <name pos:line="11865" pos:column="47">NULL</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="11865" pos:column="53">L"'obj._textSnapshotToSearch' is not NULL; potential memory leak."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="11866" pos:column="9">VSASSERT</name><argument_list pos:line="11866" pos:column="17">(<argument><expr><name><name pos:line="11866" pos:column="18">obj</name><op:operator pos:line="11866" pos:column="21">.</op:operator><name pos:line="11866" pos:column="22">_textStructureNavigator</name></name> <op:operator pos:line="11866" pos:column="46">==</op:operator> <name pos:line="11866" pos:column="49">NULL</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="11866" pos:column="55">L"'obj._textStructureNavigator' is not NULL; potential memory leak."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
<cpp:endif pos:line="11868" pos:column="1">#<cpp:directive pos:line="11868" pos:column="2">endif</cpp:directive></cpp:endif>
    <function><type><name pos:line="11869" pos:column="5">void</name></type> <name pos:line="11869" pos:column="10">Release</name><parameter_list pos:line="11869" pos:column="17">()</parameter_list>
    <block pos:line="11870" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11871" pos:column="9">CVxFindData</name><op:operator pos:line="11871" pos:column="20">::</op:operator><name pos:line="11871" pos:column="22">Release</name></name><argument_list pos:line="11871" pos:column="29">(<argument><expr><op:operator pos:line="11871" pos:column="30">*</op:operator><name pos:line="11871" pos:column="31">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11873" pos:column="5">static</specifier> <name pos:line="11873" pos:column="12">void</name></type> <name pos:line="11873" pos:column="17">Release</name><parameter_list pos:line="11873" pos:column="24">(<param><decl><type><name pos:line="11873" pos:column="25">VxFindData</name> <type:modifier pos:line="11873" pos:column="36">&amp;</type:modifier></type><name pos:line="11873" pos:column="37">obj</name></decl></param>)</parameter_list>
    <block pos:line="11874" pos:column="5">{
        <if pos:line="11875" pos:column="9">if <condition pos:line="11875" pos:column="12">(<expr><name><name pos:line="11875" pos:column="13">obj</name><op:operator pos:line="11875" pos:column="16">.</op:operator><name pos:line="11875" pos:column="17">_searchString</name></name> <op:operator pos:line="11875" pos:column="31">!=</op:operator> <name pos:line="11875" pos:column="34">NULL</name></expr>)</condition><then pos:line="11875" pos:column="39">
        <block pos:line="11876" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="11877" pos:column="13">SysFreeString</name><argument_list pos:line="11877" pos:column="26">(<argument><expr><name><name pos:line="11877" pos:column="27">obj</name><op:operator pos:line="11877" pos:column="30">.</op:operator><name pos:line="11877" pos:column="31">_searchString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="11878" pos:column="13">obj</name><op:operator pos:line="11878" pos:column="16">.</op:operator><name pos:line="11878" pos:column="17">_searchString</name></name> <op:operator pos:line="11878" pos:column="31">=</op:operator> <name pos:line="11878" pos:column="33">NULL</name></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="11880" pos:column="9">if <condition pos:line="11880" pos:column="12">(<expr><name><name pos:line="11880" pos:column="13">obj</name><op:operator pos:line="11880" pos:column="16">.</op:operator><name pos:line="11880" pos:column="17">_textSnapshotToSearch</name></name> <op:operator pos:line="11880" pos:column="39">!=</op:operator> <name pos:line="11880" pos:column="42">NULL</name></expr>)</condition><then pos:line="11880" pos:column="47">
        <block pos:line="11881" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="11882" pos:column="13">obj</name><op:operator pos:line="11882" pos:column="16">.</op:operator><name pos:line="11882" pos:column="17">_textSnapshotToSearch</name><op:operator pos:line="11882" pos:column="38">-&gt;</op:operator><name pos:line="11882" pos:column="40">Release</name></name><argument_list pos:line="11882" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="11883" pos:column="13">obj</name><op:operator pos:line="11883" pos:column="16">.</op:operator><name pos:line="11883" pos:column="17">_textSnapshotToSearch</name></name> <op:operator pos:line="11883" pos:column="39">=</op:operator> <name pos:line="11883" pos:column="41">NULL</name></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="11885" pos:column="9">if <condition pos:line="11885" pos:column="12">(<expr><name><name pos:line="11885" pos:column="13">obj</name><op:operator pos:line="11885" pos:column="16">.</op:operator><name pos:line="11885" pos:column="17">_textStructureNavigator</name></name> <op:operator pos:line="11885" pos:column="41">!=</op:operator> <name pos:line="11885" pos:column="44">NULL</name></expr>)</condition><then pos:line="11885" pos:column="49">
        <block pos:line="11886" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="11887" pos:column="13">obj</name><op:operator pos:line="11887" pos:column="16">.</op:operator><name pos:line="11887" pos:column="17">_textStructureNavigator</name><op:operator pos:line="11887" pos:column="40">-&gt;</op:operator><name pos:line="11887" pos:column="42">Release</name></name><argument_list pos:line="11887" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="11888" pos:column="13">obj</name><op:operator pos:line="11888" pos:column="16">.</op:operator><name pos:line="11888" pos:column="17">_textStructureNavigator</name></name> <op:operator pos:line="11888" pos:column="41">=</op:operator> <name pos:line="11888" pos:column="43">NULL</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>
</public>}</block>;</struct>
<struct pos:line="11892" pos:column="1">struct <name pos:line="11892" pos:column="8">CVxTextExtent</name> <super pos:line="11892" pos:column="22">: <specifier pos:line="11892" pos:column="24">public</specifier> <name pos:line="11892" pos:column="31">VxTextExtent</name></super>
<block pos:line="11893" pos:column="1">{<public type="default" pos:line="11893" pos:column="2">
    <constructor><name pos:line="11894" pos:column="5">CVxTextExtent</name><parameter_list pos:line="11894" pos:column="18">()</parameter_list>
    <block pos:line="11895" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11896" pos:column="9">Init</name><argument_list pos:line="11896" pos:column="13">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11898" pos:column="5">CVxTextExtent</name><parameter_list pos:line="11898" pos:column="18">(<param><decl><type><specifier pos:line="11898" pos:column="19">const</specifier> <name pos:line="11898" pos:column="25">VxTextExtent</name> <type:modifier pos:line="11898" pos:column="38">&amp;</type:modifier></type><name pos:line="11898" pos:column="39">source</name></decl></param>)</parameter_list>
    <block pos:line="11899" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11900" pos:column="9">InitFrom</name><argument_list pos:line="11900" pos:column="17">(<argument><expr><name pos:line="11900" pos:column="18">source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    <constructor><name pos:line="11902" pos:column="5">CVxTextExtent</name><parameter_list pos:line="11902" pos:column="18">(<param><decl><type><specifier pos:line="11902" pos:column="19">const</specifier> <name pos:line="11902" pos:column="25">CVxSnapshotSpan</name> <type:modifier pos:line="11902" pos:column="41">&amp;</type:modifier></type><name pos:line="11902" pos:column="42">__span</name></decl></param>, <param><decl><type><name pos:line="11902" pos:column="50">BOOL</name></type> <name pos:line="11902" pos:column="55">__isSignificant</name></decl></param>)</parameter_list>
    <block pos:line="11903" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11904" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11904" pos:column="24">::</op:operator><name pos:line="11904" pos:column="26">InitFrom</name></name><argument_list pos:line="11904" pos:column="34">(<argument><expr><name pos:line="11904" pos:column="35">_span</name></expr></argument>, <argument><expr><name pos:line="11904" pos:column="42">__span</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="11905" pos:column="9">_isSignificant</name> <op:operator pos:line="11905" pos:column="24">=</op:operator> <name pos:line="11905" pos:column="26">__isSignificant</name></expr>;</expr_stmt>
    }</block></constructor>
    <function><type><name pos:line="11907" pos:column="5">void</name></type> <name pos:line="11907" pos:column="10">Init</name><parameter_list pos:line="11907" pos:column="14">()</parameter_list>
    <block pos:line="11908" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11909" pos:column="9">CVxTextExtent</name><op:operator pos:line="11909" pos:column="22">::</op:operator><name pos:line="11909" pos:column="24">Init</name></name><argument_list pos:line="11909" pos:column="28">(<argument><expr><op:operator pos:line="11909" pos:column="29">*</op:operator><name pos:line="11909" pos:column="30">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11911" pos:column="5">static</specifier> <name pos:line="11911" pos:column="12">void</name></type> <name pos:line="11911" pos:column="17">Init</name><parameter_list pos:line="11911" pos:column="21">(<param><decl><type><name pos:line="11911" pos:column="22">VxTextExtent</name> <type:modifier pos:line="11911" pos:column="35">&amp;</type:modifier></type><name pos:line="11911" pos:column="36">obj</name></decl></param>)</parameter_list>
    <block pos:line="11912" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11913" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11913" pos:column="24">::</op:operator><name pos:line="11913" pos:column="26">Init</name></name><argument_list pos:line="11913" pos:column="30">(<argument><expr><name><name pos:line="11913" pos:column="31">obj</name><op:operator pos:line="11913" pos:column="34">.</op:operator><name pos:line="11913" pos:column="35">_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11914" pos:column="9">obj</name><op:operator pos:line="11914" pos:column="12">.</op:operator><name pos:line="11914" pos:column="13">_isSignificant</name></name> <op:operator pos:line="11914" pos:column="28">=</op:operator> <name pos:line="11914" pos:column="30">FALSE</name></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11916" pos:column="5">void</name></type> <name pos:line="11916" pos:column="10">InitFrom</name><parameter_list pos:line="11916" pos:column="18">(<param><decl><type><specifier pos:line="11916" pos:column="19">const</specifier> <name pos:line="11916" pos:column="25">VxTextExtent</name> <type:modifier pos:line="11916" pos:column="38">&amp;</type:modifier></type><name pos:line="11916" pos:column="39">dest</name></decl></param>)</parameter_list>
    <block pos:line="11917" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11918" pos:column="9">CVxTextExtent</name><op:operator pos:line="11918" pos:column="22">::</op:operator><name pos:line="11918" pos:column="24">InitFrom</name></name><argument_list pos:line="11918" pos:column="32">(<argument><expr><op:operator pos:line="11918" pos:column="33">*</op:operator><name pos:line="11918" pos:column="34">this</name></expr></argument>, <argument><expr><name pos:line="11918" pos:column="40">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11920" pos:column="5">static</specifier> <name pos:line="11920" pos:column="12">void</name></type> <name pos:line="11920" pos:column="17">InitFrom</name><parameter_list pos:line="11920" pos:column="25">(<param><decl><type><name pos:line="11920" pos:column="26">VxTextExtent</name> <type:modifier pos:line="11920" pos:column="39">&amp;</type:modifier></type><name pos:line="11920" pos:column="40">dest</name></decl></param>, <param><decl><type><specifier pos:line="11920" pos:column="46">const</specifier> <name pos:line="11920" pos:column="52">CVxTextExtent</name> <type:modifier pos:line="11920" pos:column="66">&amp;</type:modifier></type><name pos:line="11920" pos:column="67">source</name></decl></param>)</parameter_list>
    <block pos:line="11921" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11922" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11922" pos:column="24">::</op:operator><name pos:line="11922" pos:column="26">InitFrom</name></name><argument_list pos:line="11922" pos:column="34">(<argument><expr><name><name pos:line="11922" pos:column="35">dest</name><op:operator pos:line="11922" pos:column="39">.</op:operator><name pos:line="11922" pos:column="40">_span</name></name></expr></argument>, <argument><expr><name><name pos:line="11922" pos:column="47">source</name><op:operator pos:line="11922" pos:column="53">.</op:operator><name pos:line="11922" pos:column="54">_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11923" pos:column="9">dest</name><op:operator pos:line="11923" pos:column="13">.</op:operator><name pos:line="11923" pos:column="14">_isSignificant</name></name> <op:operator pos:line="11923" pos:column="29">=</op:operator> <name><name pos:line="11923" pos:column="31">source</name><op:operator pos:line="11923" pos:column="37">.</op:operator><name pos:line="11923" pos:column="38">_isSignificant</name></name></expr>;</expr_stmt>
    }</block></function>
    <function><type><name pos:line="11925" pos:column="5">CVxTextExtent</name><type:modifier pos:line="11925" pos:column="18">*</type:modifier></type> <name pos:line="11925" pos:column="20">operator&amp;</name><parameter_list pos:line="11925" pos:column="29">()</parameter_list>
    <block pos:line="11926" pos:column="5">{
<cpp:ifdef pos:line="11927" pos:column="1">#<cpp:directive pos:line="11927" pos:column="2">ifdef</cpp:directive> <name pos:line="11927" pos:column="8">_DEBUG</name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="11928" pos:column="9">AssertIsReleased</name><argument_list pos:line="11928" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="11929" pos:column="1">#<cpp:directive pos:line="11929" pos:column="2">endif</cpp:directive></cpp:endif>
        <return pos:line="11930" pos:column="9">return <expr><name pos:line="11930" pos:column="16">this</name></expr>;</return>
    }</block></function>
    <destructor><name pos:line="11932" pos:column="5">~<name pos:line="11932" pos:column="6">CVxTextExtent</name></name><parameter_list pos:line="11932" pos:column="19">()</parameter_list>
    <block pos:line="11933" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11934" pos:column="9">Release</name><argument_list pos:line="11934" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
    }</block></destructor>
    <function><type><name pos:line="11936" pos:column="5">CVxTextExtent</name><type:modifier pos:line="11936" pos:column="18">&amp;</type:modifier></type> <name pos:line="11936" pos:column="20">operator=</name><parameter_list pos:line="11936" pos:column="29">(<param><decl><type><specifier pos:line="11936" pos:column="30">const</specifier> <name pos:line="11936" pos:column="36">VxTextExtent</name> <type:modifier pos:line="11936" pos:column="49">&amp;</type:modifier></type><name pos:line="11936" pos:column="50">source</name></decl></param>)</parameter_list>
    <block pos:line="11937" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11938" pos:column="9">CVxTextExtent</name><op:operator pos:line="11938" pos:column="22">::</op:operator><name pos:line="11938" pos:column="24">CopyTo</name></name><argument_list pos:line="11938" pos:column="30">(<argument><expr><name pos:line="11938" pos:column="31">source</name></expr></argument>, <argument><expr><op:operator pos:line="11938" pos:column="39">*</op:operator><name pos:line="11938" pos:column="40">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="11939" pos:column="9">return <expr><op:operator pos:line="11939" pos:column="16">*</op:operator><name pos:line="11939" pos:column="17">this</name></expr>;</return>
    }</block></function>
    <function><type><name pos:line="11941" pos:column="5">void</name></type> <name pos:line="11941" pos:column="10">CopyTo</name><parameter_list pos:line="11941" pos:column="16">(<param><decl><type><name pos:line="11941" pos:column="17">VxTextExtent</name> <type:modifier pos:line="11941" pos:column="30">&amp;</type:modifier></type><name pos:line="11941" pos:column="31">dest</name></decl></param>)</parameter_list> <specifier pos:line="11941" pos:column="37">const</specifier>
    <block pos:line="11942" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11943" pos:column="9">CVxTextExtent</name><op:operator pos:line="11943" pos:column="22">::</op:operator><name pos:line="11943" pos:column="24">CopyTo</name></name><argument_list pos:line="11943" pos:column="30">(<argument><expr><op:operator pos:line="11943" pos:column="31">*</op:operator><name pos:line="11943" pos:column="32">this</name></expr></argument>, <argument><expr><name pos:line="11943" pos:column="38">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11945" pos:column="5">static</specifier> <name pos:line="11945" pos:column="12">void</name></type> <name pos:line="11945" pos:column="17">CopyTo</name><parameter_list pos:line="11945" pos:column="23">(<param><decl><type><specifier pos:line="11945" pos:column="24">const</specifier> <name pos:line="11945" pos:column="30">CVxTextExtent</name> <type:modifier pos:line="11945" pos:column="44">&amp;</type:modifier></type><name pos:line="11945" pos:column="45">source</name></decl></param>, <param><decl><type><name pos:line="11945" pos:column="53">VxTextExtent</name> <type:modifier pos:line="11945" pos:column="66">&amp;</type:modifier></type><name pos:line="11945" pos:column="67">dest</name></decl></param>)</parameter_list>
    <block pos:line="11946" pos:column="5">{
        <if pos:line="11947" pos:column="9">if <condition pos:line="11947" pos:column="12">(<expr><op:operator pos:line="11947" pos:column="13">&amp;</op:operator><name pos:line="11947" pos:column="14">source</name> <op:operator pos:line="11947" pos:column="21">==</op:operator> <op:operator pos:line="11947" pos:column="24">&amp;</op:operator><name pos:line="11947" pos:column="25">dest</name></expr>)</condition><then pos:line="11947" pos:column="30">
            <return pos:line="11948" pos:column="13">return;</return></then></if>
        <expr_stmt><expr><call><name><name pos:line="11949" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11949" pos:column="24">::</op:operator><name pos:line="11949" pos:column="26">CopyTo</name></name><argument_list pos:line="11949" pos:column="32">(<argument><expr><name><name pos:line="11949" pos:column="33">source</name><op:operator pos:line="11949" pos:column="39">.</op:operator><name pos:line="11949" pos:column="40">_span</name></name></expr></argument>, <argument><expr><name><name pos:line="11949" pos:column="47">dest</name><op:operator pos:line="11949" pos:column="51">.</op:operator><name pos:line="11949" pos:column="52">_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="11950" pos:column="9">dest</name><op:operator pos:line="11950" pos:column="13">.</op:operator><name pos:line="11950" pos:column="14">_isSignificant</name></name> <op:operator pos:line="11950" pos:column="29">=</op:operator> <name><name pos:line="11950" pos:column="31">source</name><op:operator pos:line="11950" pos:column="37">.</op:operator><name pos:line="11950" pos:column="38">_isSignificant</name></name></expr>;</expr_stmt>
    }</block></function>
<cpp:ifdef pos:line="11952" pos:column="1">#<cpp:directive pos:line="11952" pos:column="2">ifdef</cpp:directive> <name pos:line="11952" pos:column="8">_DEBUG</name></cpp:ifdef>
    <function><type><name pos:line="11953" pos:column="5">void</name></type> <name pos:line="11953" pos:column="10">AssertIsReleased</name><parameter_list pos:line="11953" pos:column="26">()</parameter_list> <specifier pos:line="11953" pos:column="29">const</specifier>
    <block pos:line="11954" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11955" pos:column="9">CVxTextExtent</name><op:operator pos:line="11955" pos:column="22">::</op:operator><name pos:line="11955" pos:column="24">AssertIsReleased</name></name><argument_list pos:line="11955" pos:column="40">(<argument><expr><op:operator pos:line="11955" pos:column="41">*</op:operator><name pos:line="11955" pos:column="42">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11957" pos:column="5">static</specifier> <name pos:line="11957" pos:column="12">void</name></type> <name pos:line="11957" pos:column="17">AssertIsReleased</name><parameter_list pos:line="11957" pos:column="33">(<param><decl><type><specifier pos:line="11957" pos:column="34">const</specifier> <name pos:line="11957" pos:column="40">VxTextExtent</name> <type:modifier pos:line="11957" pos:column="53">&amp;</type:modifier></type><name pos:line="11957" pos:column="54">obj</name></decl></param>)</parameter_list>
    <block pos:line="11958" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11959" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11959" pos:column="24">::</op:operator><name pos:line="11959" pos:column="26">AssertIsReleased</name></name><argument_list pos:line="11959" pos:column="42">(<argument><expr><name><name pos:line="11959" pos:column="43">obj</name><op:operator pos:line="11959" pos:column="46">.</op:operator><name pos:line="11959" pos:column="47">_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
<cpp:endif pos:line="11961" pos:column="1">#<cpp:directive pos:line="11961" pos:column="2">endif</cpp:directive></cpp:endif>
    <function><type><name pos:line="11962" pos:column="5">void</name></type> <name pos:line="11962" pos:column="10">Release</name><parameter_list pos:line="11962" pos:column="17">()</parameter_list>
    <block pos:line="11963" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11964" pos:column="9">CVxTextExtent</name><op:operator pos:line="11964" pos:column="22">::</op:operator><name pos:line="11964" pos:column="24">Release</name></name><argument_list pos:line="11964" pos:column="31">(<argument><expr><op:operator pos:line="11964" pos:column="32">*</op:operator><name pos:line="11964" pos:column="33">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    <function><type><specifier pos:line="11966" pos:column="5">static</specifier> <name pos:line="11966" pos:column="12">void</name></type> <name pos:line="11966" pos:column="17">Release</name><parameter_list pos:line="11966" pos:column="24">(<param><decl><type><name pos:line="11966" pos:column="25">VxTextExtent</name> <type:modifier pos:line="11966" pos:column="38">&amp;</type:modifier></type><name pos:line="11966" pos:column="39">obj</name></decl></param>)</parameter_list>
    <block pos:line="11967" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="11968" pos:column="9">CVxSnapshotSpan</name><op:operator pos:line="11968" pos:column="24">::</op:operator><name pos:line="11968" pos:column="26">Release</name></name><argument_list pos:line="11968" pos:column="33">(<argument><expr><name><name pos:line="11968" pos:column="34">obj</name><op:operator pos:line="11968" pos:column="37">.</op:operator><name pos:line="11968" pos:column="38">_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
</public>}</block>;</struct>


<decl_stmt><decl><type><specifier pos:line="11973" pos:column="1">extern</specifier> <name pos:line="11973" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="11973" pos:column="22">__MIDL_itf_VSEditor_0001_0141_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="11974" pos:column="1">extern</specifier> <name pos:line="11974" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="11974" pos:column="22">__MIDL_itf_VSEditor_0001_0141_v0_0_s_ifspec</name></decl>;</decl_stmt>

<comment type="block" pos:line="11976" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="11978" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="11980" pos:column="1">#<cpp:directive pos:line="11980" pos:column="2">ifdef</cpp:directive> <name pos:line="11980" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="11982" pos:column="1">#<cpp:directive pos:line="11982" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="11984" pos:column="1">#<cpp:directive pos:line="11984" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
