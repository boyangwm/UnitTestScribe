<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\fpstfmt.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for fpstfmt.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__fpstfmt_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__fpstfmt_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IPersistFileFormat_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IPersistFileFormat_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IPersistFileFormat</name></type> <name pos:line="53" pos:column="38">IPersistFileFormat</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IPersistFileFormat_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="57" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="58" pos:column="10">"oleidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="59" pos:column="10">"oaidl.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef</cpp:directive> <name pos:line="61" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="62" pos:column="1">extern <lit:literal type="string" pos:line="62" pos:column="8">"C"</lit:literal><block pos:line="62" pos:column="11">{
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="66" pos:column="1">/* interface __MIDL_itf_fpstfmt_0000_0000 */</comment>
<comment type="block" pos:line="67" pos:column="1">/* [local] */</comment> 

<comment type="line" pos:line="69" pos:column="1">//=--------------------------------------------------------------------------=</comment>
<comment type="line" pos:line="70" pos:column="1">// fpstfmt.h</comment>
<comment type="line" pos:line="71" pos:column="1">//=--------------------------------------------------------------------------=</comment>
<comment type="line" pos:line="72" pos:column="1">// (C) Copyright 1997 Microsoft Corporation.  All Rights Reserved.</comment>
<comment type="line" pos:line="73" pos:column="1">//</comment>
<comment type="line" pos:line="74" pos:column="1">// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF</comment>
<comment type="line" pos:line="75" pos:column="1">// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO</comment>
<comment type="line" pos:line="76" pos:column="1">// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A</comment>
<comment type="line" pos:line="77" pos:column="1">// PARTICULAR PURPOSE.</comment>
<comment type="line" pos:line="78" pos:column="1">//=--------------------------------------------------------------------------=</comment>
<comment type="line" pos:line="79" pos:column="1">//</comment>
<comment type="line" pos:line="80" pos:column="1">// Declarations for Vegas Shell's IPersistFileFormat.</comment>
<comment type="line" pos:line="81" pos:column="1">//</comment>

<comment type="line" format="doxygen" pos:line="83" pos:column="1">////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="84" pos:column="1">// CLSID for CLSID_PersistFileFormat  {3AFAE241-B530-11d0-8199-00A0C91BBEE3}</comment>
<comment type="line" pos:line="85" pos:column="1">// DEFINE_GUID(CLSID_PersistFileFormat, </comment>
<comment type="line" pos:line="86" pos:column="1">// 0x3afae241, 0xb530, 0x11d0, 0x81, 0x99, 0x0, 0xa0, 0xc9, 0x1b, 0xbe, 0xe3);</comment>
 
<comment type="line" format="doxygen" pos:line="88" pos:column="1">////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="89" pos:column="1">// Interface ID for IPersistFileFormat  {3AFAE242-B530-11d0-8199-00A0C91BBEE3}</comment>
<comment type="line" pos:line="90" pos:column="1">// DEFINE_GUID(IID_IPersistFileFormat, </comment>
<comment type="line" pos:line="91" pos:column="1">// 0x3afae242, 0xb530, 0x11d0, 0x81, 0x99, 0x0, 0xa0, 0xc9, 0x1b, 0xbe, 0xe3);</comment>
 
<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef</cpp:directive> <name pos:line="93" pos:column="9">___DEF_FORMAT_INDEX_DECLARATION__</name></cpp:ifndef>
<cpp:define pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="94" pos:column="9">___DEF_FORMAT_INDEX_DECLARATION__</name></cpp:macro></cpp:define>
<cpp:define pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="95" pos:column="9">DEF_FORMAT_INDEX</name></cpp:macro>  <cpp:value pos:line="95" pos:column="27">((DWORD) 0)</cpp:value></cpp:define>    <comment type="line" pos:line="95" pos:column="42">// used when caller does not know a specific format to specify</comment>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif</cpp:directive> ___DEF_FORMAT_INDEX_DECLARATION__</cpp:endif>
<typedef pos:line="97" pos:column="1">typedef 
<type><enum pos:line="98" pos:column="1">enum <name pos:line="98" pos:column="6">_PFF_RESULTS</name>
    <block pos:line="99" pos:column="5">{	<decl><name pos:line="99" pos:column="9">STG_E_INVALIDCODEPAGE</name>	<init pos:line="99" pos:column="33">= <expr><op:operator pos:line="99" pos:column="35">(</op:operator> <op:operator pos:line="99" pos:column="37">(</op:operator> <lit:literal type="number" pos:line="99" pos:column="39">0x80000000</lit:literal> <op:operator pos:line="99" pos:column="50">|</op:operator> <op:operator pos:line="99" pos:column="52">(</op:operator> <lit:literal type="number" pos:line="99" pos:column="54">3</lit:literal> <op:operator pos:line="99" pos:column="56">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="99" pos:column="59">16</lit:literal> <op:operator pos:line="99" pos:column="62">)</op:operator>  <op:operator pos:line="99" pos:column="65">)</op:operator>  <op:operator pos:line="99" pos:column="68">|</op:operator> <lit:literal type="number" pos:line="99" pos:column="70">0x300</lit:literal> <op:operator pos:line="99" pos:column="76">)</op:operator></expr></init></decl> <op:operator pos:line="99" pos:column="78">,</op:operator>
	<decl><name pos:line="100" pos:column="9">STG_E_NOTTEXT</name>	<init pos:line="100" pos:column="25">= <expr><op:operator pos:line="100" pos:column="27">(</op:operator> <op:operator pos:line="100" pos:column="29">(</op:operator> <lit:literal type="number" pos:line="100" pos:column="31">0x80000000</lit:literal> <op:operator pos:line="100" pos:column="42">|</op:operator> <op:operator pos:line="100" pos:column="44">(</op:operator> <lit:literal type="number" pos:line="100" pos:column="46">3</lit:literal> <op:operator pos:line="100" pos:column="48">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="100" pos:column="51">16</lit:literal> <op:operator pos:line="100" pos:column="54">)</op:operator>  <op:operator pos:line="100" pos:column="57">)</op:operator>  <op:operator pos:line="100" pos:column="60">|</op:operator> <lit:literal type="number" pos:line="100" pos:column="62">0x302</lit:literal> <op:operator pos:line="100" pos:column="68">)</op:operator></expr></init></decl> <op:operator pos:line="100" pos:column="70">,</op:operator>
	<decl><name pos:line="101" pos:column="9">STG_S_DATALOSS</name>	<init pos:line="101" pos:column="25">= <expr><op:operator pos:line="101" pos:column="27">(</op:operator> <op:operator pos:line="101" pos:column="29">(</op:operator> <lit:literal type="number" pos:line="101" pos:column="31">0</lit:literal> <op:operator pos:line="101" pos:column="33">|</op:operator> <op:operator pos:line="101" pos:column="35">(</op:operator> <lit:literal type="number" pos:line="101" pos:column="37">3</lit:literal> <op:operator pos:line="101" pos:column="39">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="101" pos:column="42">16</lit:literal> <op:operator pos:line="101" pos:column="45">)</op:operator>  <op:operator pos:line="101" pos:column="48">)</op:operator>  <op:operator pos:line="101" pos:column="51">|</op:operator> <lit:literal type="number" pos:line="101" pos:column="53">0x301</lit:literal> <op:operator pos:line="101" pos:column="59">)</op:operator></expr></init></decl> 
    }</block></enum></type> 	<name pos:line="102" pos:column="9">PFF_RESULTS</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="106" pos:column="1">extern</specifier> <name pos:line="106" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="106" pos:column="22">__MIDL_itf_fpstfmt_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="107" pos:column="1">extern</specifier> <name pos:line="107" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="107" pos:column="22">__MIDL_itf_fpstfmt_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifndef</cpp:directive> <name pos:line="109" pos:column="9">__IPersistFileFormat_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="110" pos:column="9">__IPersistFileFormat_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="112" pos:column="1">/* interface IPersistFileFormat */</comment>
<comment type="block" pos:line="113" pos:column="1">/* [unique][version][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="116" pos:column="1">EXTERN_C</name> <specifier pos:line="116" pos:column="10">const</specifier> <name pos:line="116" pos:column="16">IID</name></type> <name pos:line="116" pos:column="20">IID_IPersistFileFormat</name></decl>;</decl_stmt>

<cpp:if pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">if</cpp:directive> <expr><call><name pos:line="118" pos:column="5">defined</name><argument_list pos:line="118" pos:column="12">(<argument><expr><name pos:line="118" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="118" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="118" pos:column="29">!</op:operator><call><name pos:line="118" pos:column="30">defined</name><argument_list pos:line="118" pos:column="37">(<argument><expr><name pos:line="118" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="120" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="120" pos:column="19">(<argument pos:line="120" pos:column="20">"3AFAE242-B530-11d0-8199-00A0C91BBEE3"</argument>)</argument_list></macro>
    <label><name pos:line="121" pos:column="5">IPersistFileFormat</name> :</label> <expr_stmt><expr pos:line="121" pos:column="26">public <name pos:line="121" pos:column="33">IPersist</name>
    <block pos:line="122" pos:column="5">{
    <expr pos:line="123" pos:column="5">public<op:operator pos:line="123" pos:column="11">:</op:operator>
        virtual <name pos:line="124" pos:column="17">HRESULT</name> <name pos:line="124" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="124" pos:column="43">IsDirty</name><argument_list pos:line="124" pos:column="50">( 
            <comment type="block" pos:line="125" pos:column="13">/* [out] */</comment> <argument pos:line="125" pos:column="25">__RPC__out BOOL *pfIsDirty</argument>)</argument_list></macro> <op:operator pos:line="125" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="125" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="127" pos:column="9">virtual <name pos:line="127" pos:column="17">HRESULT</name> <name pos:line="127" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="127" pos:column="43">InitNew</name><argument_list pos:line="127" pos:column="50">( 
            <comment type="block" pos:line="128" pos:column="13">/* [in] */</comment> <argument pos:line="128" pos:column="24">DWORD nFormatIndex</argument>)</argument_list></macro> <op:operator pos:line="128" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="128" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="130" pos:column="9">virtual <name pos:line="130" pos:column="17">HRESULT</name> <name pos:line="130" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="130" pos:column="43">Load</name><argument_list pos:line="130" pos:column="47">( 
            <comment type="block" pos:line="131" pos:column="13">/* [in] */</comment> <argument pos:line="131" pos:column="24">__RPC__in LPCOLESTR pszFilename</argument>,
            <comment type="block" pos:line="132" pos:column="13">/* [in] */</comment> <argument pos:line="132" pos:column="24">DWORD grfMode</argument>,
            <comment type="block" pos:line="133" pos:column="13">/* [in] */</comment> <argument pos:line="133" pos:column="24">BOOL fReadOnly</argument>)</argument_list></macro> <op:operator pos:line="133" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="133" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="135" pos:column="9">virtual <name pos:line="135" pos:column="17">HRESULT</name> <name pos:line="135" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="135" pos:column="43">Save</name><argument_list pos:line="135" pos:column="47">( 
            <comment type="block" pos:line="136" pos:column="13">/* [in] */</comment> <argument pos:line="136" pos:column="24">__RPC__in LPCOLESTR pszFilename</argument>,
            <comment type="block" pos:line="137" pos:column="13">/* [in] */</comment> <argument pos:line="137" pos:column="24">BOOL fRemember</argument>,
            <comment type="block" pos:line="138" pos:column="13">/* [in] */</comment> <argument pos:line="138" pos:column="24">DWORD nFormatIndex</argument>)</argument_list></macro> <op:operator pos:line="138" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="138" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="140" pos:column="9">virtual <name pos:line="140" pos:column="17">HRESULT</name> <name pos:line="140" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="140" pos:column="43">SaveCompleted</name><argument_list pos:line="140" pos:column="56">( 
            <comment type="block" pos:line="141" pos:column="13">/* [in] */</comment> <argument pos:line="141" pos:column="24">__RPC__in LPCOLESTR pszFilename</argument>)</argument_list></macro> <op:operator pos:line="141" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="141" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="143" pos:column="9">virtual <name pos:line="143" pos:column="17">HRESULT</name> <name pos:line="143" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="143" pos:column="43">GetCurFile</name><argument_list pos:line="143" pos:column="53">( 
            <comment type="block" pos:line="144" pos:column="13">/* [out] */</comment> <argument pos:line="144" pos:column="25">__RPC__deref_out_opt LPOLESTR *ppszFilename</argument>,
            <comment type="block" pos:line="145" pos:column="13">/* [out] */</comment> <argument pos:line="145" pos:column="25">__RPC__out DWORD *pnFormatIndex</argument>)</argument_list></macro> <op:operator pos:line="145" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="145" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="147" pos:column="9">virtual <name pos:line="147" pos:column="17">HRESULT</name> <name pos:line="147" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="147" pos:column="43">GetFormatList</name><argument_list pos:line="147" pos:column="56">( 
            <comment type="block" pos:line="148" pos:column="13">/* [out] */</comment> <argument pos:line="148" pos:column="25">__RPC__deref_out_opt LPOLESTR *ppszFormatList</argument>)</argument_list></macro> <op:operator pos:line="148" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="148" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="152" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="154" pos:column="5">typedef <type><struct pos:line="154" pos:column="13">struct <name pos:line="154" pos:column="20">IPersistFileFormatVtbl</name>
    <block pos:line="155" pos:column="5">{<public type="default" pos:line="155" pos:column="6">
        <function_decl><type><name pos:line="156" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="158" pos:column="9">HRESULT</name></type> ( <name pos:line="158" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="158" pos:column="37">*</type:modifier><name pos:line="158" pos:column="38">QueryInterface</name> )<parameter_list pos:line="158" pos:column="54">( 
            <param><decl><type><name pos:line="159" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="159" pos:column="32">*</type:modifier></type> <name pos:line="159" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="160" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="160" pos:column="24">__RPC__in</name> <name pos:line="160" pos:column="34">REFIID</name></type> <name pos:line="160" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="161" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="162" pos:column="13">__RPC__deref_out</name>  <name pos:line="162" pos:column="31">void</name> <type:modifier pos:line="162" pos:column="36">*</type:modifier><type:modifier pos:line="162" pos:column="37">*</type:modifier></type><name pos:line="162" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="164" pos:column="9">ULONG</name></type> ( <name pos:line="164" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="164" pos:column="35">*</type:modifier><name pos:line="164" pos:column="36">AddRef</name> )<parameter_list pos:line="164" pos:column="44">( 
            <param><decl><type><name pos:line="165" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="165" pos:column="32">*</type:modifier></type> <name pos:line="165" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="167" pos:column="9">ULONG</name></type> ( <name pos:line="167" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="167" pos:column="35">*</type:modifier><name pos:line="167" pos:column="36">Release</name> )<parameter_list pos:line="167" pos:column="45">( 
            <param><decl><type><name pos:line="168" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="168" pos:column="32">*</type:modifier></type> <name pos:line="168" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="170" pos:column="9">HRESULT</name></type> ( <name pos:line="170" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="170" pos:column="37">*</type:modifier><name pos:line="170" pos:column="38">GetClassID</name> )<parameter_list pos:line="170" pos:column="50">( 
            <param><decl><type><name pos:line="171" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="171" pos:column="32">*</type:modifier></type> <name pos:line="171" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="172" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="172" pos:column="25">__RPC__out</name> <name pos:line="172" pos:column="36">CLSID</name> <type:modifier pos:line="172" pos:column="42">*</type:modifier></type><name pos:line="172" pos:column="43">pClassID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="174" pos:column="9">HRESULT</name></type> ( <name pos:line="174" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="174" pos:column="37">*</type:modifier><name pos:line="174" pos:column="38">IsDirty</name> )<parameter_list pos:line="174" pos:column="47">( 
            <param><decl><type><name pos:line="175" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="175" pos:column="32">*</type:modifier></type> <name pos:line="175" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="176" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="176" pos:column="25">__RPC__out</name> <name pos:line="176" pos:column="36">BOOL</name> <type:modifier pos:line="176" pos:column="41">*</type:modifier></type><name pos:line="176" pos:column="42">pfIsDirty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="178" pos:column="9">HRESULT</name></type> ( <name pos:line="178" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="178" pos:column="37">*</type:modifier><name pos:line="178" pos:column="38">InitNew</name> )<parameter_list pos:line="178" pos:column="47">( 
            <param><decl><type><name pos:line="179" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="179" pos:column="32">*</type:modifier></type> <name pos:line="179" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="180" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="180" pos:column="24">DWORD</name></type> <name pos:line="180" pos:column="30">nFormatIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="182" pos:column="9">HRESULT</name></type> ( <name pos:line="182" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="182" pos:column="37">*</type:modifier><name pos:line="182" pos:column="38">Load</name> )<parameter_list pos:line="182" pos:column="44">( 
            <param><decl><type><name pos:line="183" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="183" pos:column="32">*</type:modifier></type> <name pos:line="183" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="184" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="184" pos:column="24">__RPC__in</name> <name pos:line="184" pos:column="34">LPCOLESTR</name></type> <name pos:line="184" pos:column="44">pszFilename</name></decl></param>,
            <comment type="block" pos:line="185" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="185" pos:column="24">DWORD</name></type> <name pos:line="185" pos:column="30">grfMode</name></decl></param>,
            <comment type="block" pos:line="186" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="186" pos:column="24">BOOL</name></type> <name pos:line="186" pos:column="29">fReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="188" pos:column="9">HRESULT</name></type> ( <name pos:line="188" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="188" pos:column="37">*</type:modifier><name pos:line="188" pos:column="38">Save</name> )<parameter_list pos:line="188" pos:column="44">( 
            <param><decl><type><name pos:line="189" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="189" pos:column="32">*</type:modifier></type> <name pos:line="189" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="190" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="190" pos:column="24">__RPC__in</name> <name pos:line="190" pos:column="34">LPCOLESTR</name></type> <name pos:line="190" pos:column="44">pszFilename</name></decl></param>,
            <comment type="block" pos:line="191" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="191" pos:column="24">BOOL</name></type> <name pos:line="191" pos:column="29">fRemember</name></decl></param>,
            <comment type="block" pos:line="192" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="192" pos:column="24">DWORD</name></type> <name pos:line="192" pos:column="30">nFormatIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="194" pos:column="9">HRESULT</name></type> ( <name pos:line="194" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="194" pos:column="37">*</type:modifier><name pos:line="194" pos:column="38">SaveCompleted</name> )<parameter_list pos:line="194" pos:column="53">( 
            <param><decl><type><name pos:line="195" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="195" pos:column="32">*</type:modifier></type> <name pos:line="195" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="196" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="196" pos:column="24">__RPC__in</name> <name pos:line="196" pos:column="34">LPCOLESTR</name></type> <name pos:line="196" pos:column="44">pszFilename</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="198" pos:column="9">HRESULT</name></type> ( <name pos:line="198" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="198" pos:column="37">*</type:modifier><name pos:line="198" pos:column="38">GetCurFile</name> )<parameter_list pos:line="198" pos:column="50">( 
            <param><decl><type><name pos:line="199" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="199" pos:column="32">*</type:modifier></type> <name pos:line="199" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="200" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="200" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="200" pos:column="46">LPOLESTR</name> <type:modifier pos:line="200" pos:column="55">*</type:modifier></type><name pos:line="200" pos:column="56">ppszFilename</name></decl></param>,
            <comment type="block" pos:line="201" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="201" pos:column="25">__RPC__out</name> <name pos:line="201" pos:column="36">DWORD</name> <type:modifier pos:line="201" pos:column="42">*</type:modifier></type><name pos:line="201" pos:column="43">pnFormatIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="203" pos:column="9">HRESULT</name></type> ( <name pos:line="203" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="203" pos:column="37">*</type:modifier><name pos:line="203" pos:column="38">GetFormatList</name> )<parameter_list pos:line="203" pos:column="53">( 
            <param><decl><type><name pos:line="204" pos:column="13">IPersistFileFormat</name> <type:modifier pos:line="204" pos:column="32">*</type:modifier></type> <name pos:line="204" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="205" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="205" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="205" pos:column="46">LPOLESTR</name> <type:modifier pos:line="205" pos:column="55">*</type:modifier></type><name pos:line="205" pos:column="56">ppszFormatList</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="207" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="208" pos:column="7">IPersistFileFormatVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="210" pos:column="5">interface</name></type> <name pos:line="210" pos:column="15">IPersistFileFormat</name>
    <argument_list pos:line="211" pos:column="5">{
        <argument><expr><name pos:line="212" pos:column="9">CONST_VTBL</name> struct <name pos:line="212" pos:column="27">IPersistFileFormatVtbl</name> <op:operator pos:line="212" pos:column="50">*</op:operator><name pos:line="212" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">ifdef</cpp:directive> <name pos:line="217" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="220" pos:column="9">IPersistFileFormat_QueryInterface</name><parameter_list pos:line="220" pos:column="42">(<param><type><name pos:line="220" pos:column="43">This</name></type></param>,<param><type><name pos:line="220" pos:column="48">riid</name></type></param>,<param><type><name pos:line="220" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="221" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="223" pos:column="9">IPersistFileFormat_AddRef</name><parameter_list pos:line="223" pos:column="34">(<param><type><name pos:line="223" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="224" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="226" pos:column="9">IPersistFileFormat_Release</name><parameter_list pos:line="226" pos:column="35">(<param><type><name pos:line="226" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="227" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="230" pos:column="9">IPersistFileFormat_GetClassID</name><parameter_list pos:line="230" pos:column="38">(<param><type><name pos:line="230" pos:column="39">This</name></type></param>,<param><type><name pos:line="230" pos:column="44">pClassID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="231" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetClassID(This,pClassID) )</cpp:value></cpp:define> 


<cpp:define pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="234" pos:column="9">IPersistFileFormat_IsDirty</name><parameter_list pos:line="234" pos:column="35">(<param><type><name pos:line="234" pos:column="36">This</name></type></param>,<param><type><name pos:line="234" pos:column="41">pfIsDirty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="235" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsDirty(This,pfIsDirty) )</cpp:value></cpp:define> 

<cpp:define pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="237" pos:column="9">IPersistFileFormat_InitNew</name><parameter_list pos:line="237" pos:column="35">(<param><type><name pos:line="237" pos:column="36">This</name></type></param>,<param><type><name pos:line="237" pos:column="41">nFormatIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="238" pos:column="5">( (This)-&gt;lpVtbl -&gt; InitNew(This,nFormatIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="240" pos:column="9">IPersistFileFormat_Load</name><parameter_list pos:line="240" pos:column="32">(<param><type><name pos:line="240" pos:column="33">This</name></type></param>,<param><type><name pos:line="240" pos:column="38">pszFilename</name></type></param>,<param><type><name pos:line="240" pos:column="50">grfMode</name></type></param>,<param><type><name pos:line="240" pos:column="58">fReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="241" pos:column="5">( (This)-&gt;lpVtbl -&gt; Load(This,pszFilename,grfMode,fReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="243" pos:column="9">IPersistFileFormat_Save</name><parameter_list pos:line="243" pos:column="32">(<param><type><name pos:line="243" pos:column="33">This</name></type></param>,<param><type><name pos:line="243" pos:column="38">pszFilename</name></type></param>,<param><type><name pos:line="243" pos:column="50">fRemember</name></type></param>,<param><type><name pos:line="243" pos:column="60">nFormatIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="244" pos:column="5">( (This)-&gt;lpVtbl -&gt; Save(This,pszFilename,fRemember,nFormatIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="246" pos:column="9">IPersistFileFormat_SaveCompleted</name><parameter_list pos:line="246" pos:column="41">(<param><type><name pos:line="246" pos:column="42">This</name></type></param>,<param><type><name pos:line="246" pos:column="47">pszFilename</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="247" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveCompleted(This,pszFilename) )</cpp:value></cpp:define> 

<cpp:define pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="249" pos:column="9">IPersistFileFormat_GetCurFile</name><parameter_list pos:line="249" pos:column="38">(<param><type><name pos:line="249" pos:column="39">This</name></type></param>,<param><type><name pos:line="249" pos:column="44">ppszFilename</name></type></param>,<param><type><name pos:line="249" pos:column="57">pnFormatIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="250" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurFile(This,ppszFilename,pnFormatIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="252" pos:column="1">#<cpp:directive pos:line="252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="252" pos:column="9">IPersistFileFormat_GetFormatList</name><parameter_list pos:line="252" pos:column="41">(<param><type><name pos:line="252" pos:column="42">This</name></type></param>,<param><type><name pos:line="252" pos:column="47">ppszFormatList</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="253" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFormatList(This,ppszFormatList) )</cpp:value></cpp:define> 

<cpp:endif pos:line="255" pos:column="1">#<cpp:directive pos:line="255" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="255" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="258" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="263" pos:column="9">/* __IPersistFileFormat_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="266" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="268" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">ifdef</cpp:directive> <name pos:line="270" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
