<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\singlefileeditor.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for singlefileeditor.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>


<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef</cpp:directive> <name pos:line="38" pos:column="9">__singlefileeditor_h__</name></cpp:ifndef>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">__singlefileeditor_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if</cpp:directive> <expr><call><name pos:line="41" pos:column="5">defined</name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="41" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="41" pos:column="26">(</op:operator><name pos:line="41" pos:column="27">_MSC_VER</name> <op:operator pos:line="41" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="41" pos:column="39">1020</lit:literal><op:operator pos:line="41" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="45" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef</cpp:directive> <name pos:line="47" pos:column="9">__IVsIntellisenseHost_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">__IVsIntellisenseHost_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="49" pos:column="1">typedef <type><name pos:line="49" pos:column="9">interface</name> <name pos:line="49" pos:column="19">IVsIntellisenseHost</name></type> <name pos:line="49" pos:column="39">IVsIntellisenseHost</name>;</typedef>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="50" pos:column="9">/* __IVsIntellisenseHost_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifndef</cpp:directive> <name pos:line="53" pos:column="9">__IVsTextViewIntellisenseHost_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">__IVsTextViewIntellisenseHost_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="55" pos:column="1">typedef <type><name pos:line="55" pos:column="9">interface</name> <name pos:line="55" pos:column="19">IVsTextViewIntellisenseHost</name></type> <name pos:line="55" pos:column="47">IVsTextViewIntellisenseHost</name>;</typedef>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="56" pos:column="9">/* __IVsTextViewIntellisenseHost_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifndef</cpp:directive> <name pos:line="59" pos:column="9">__IVsTextViewIntellisenseHostProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">__IVsTextViewIntellisenseHostProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="61" pos:column="1">typedef <type><name pos:line="61" pos:column="9">interface</name> <name pos:line="61" pos:column="19">IVsTextViewIntellisenseHostProvider</name></type> <name pos:line="61" pos:column="55">IVsTextViewIntellisenseHostProvider</name>;</typedef>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="62" pos:column="9">/* __IVsTextViewIntellisenseHostProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifndef</cpp:directive> <name pos:line="65" pos:column="9">__VsIntellisenseCompletor_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="66" pos:column="9">__VsIntellisenseCompletor_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifdef</cpp:directive> <name pos:line="68" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="69" pos:column="1">typedef <type pos:line="69" pos:column="9">class <name pos:line="69" pos:column="15">VsIntellisenseCompletor</name></type> <name pos:line="69" pos:column="39">VsIntellisenseCompletor</name>;</typedef>
<cpp:else pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="71" pos:column="1">typedef <type pos:line="71" pos:column="9">struct <name pos:line="71" pos:column="16">VsIntellisenseCompletor</name></type> <name pos:line="71" pos:column="40">VsIntellisenseCompletor</name>;</typedef>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="72" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="74" pos:column="9">/* __VsIntellisenseCompletor_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">ifndef</cpp:directive> <name pos:line="77" pos:column="9">__IVsIntellisenseCompletor_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="78" pos:column="9">__IVsIntellisenseCompletor_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="79" pos:column="1">typedef <type><name pos:line="79" pos:column="9">interface</name> <name pos:line="79" pos:column="19">IVsIntellisenseCompletor</name></type> <name pos:line="79" pos:column="44">IVsIntellisenseCompletor</name>;</typedef>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="80" pos:column="9">/* __IVsIntellisenseCompletor_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifndef</cpp:directive> <name pos:line="83" pos:column="9">__VsIntellisenseLangTip_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">__VsIntellisenseLangTip_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">ifdef</cpp:directive> <name pos:line="86" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="87" pos:column="1">typedef <type pos:line="87" pos:column="9">class <name pos:line="87" pos:column="15">VsIntellisenseLangTip</name></type> <name pos:line="87" pos:column="37">VsIntellisenseLangTip</name>;</typedef>
<cpp:else pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="89" pos:column="1">typedef <type pos:line="89" pos:column="9">struct <name pos:line="89" pos:column="16">VsIntellisenseLangTip</name></type> <name pos:line="89" pos:column="38">VsIntellisenseLangTip</name>;</typedef>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="90" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="92" pos:column="9">/* __VsIntellisenseLangTip_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifndef</cpp:directive> <name pos:line="95" pos:column="9">__IVsIntellisenseLangTip_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="96" pos:column="9">__IVsIntellisenseLangTip_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="97" pos:column="1">typedef <type><name pos:line="97" pos:column="9">interface</name> <name pos:line="97" pos:column="19">IVsIntellisenseLangTip</name></type> <name pos:line="97" pos:column="42">IVsIntellisenseLangTip</name>;</typedef>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="98" pos:column="9">/* __IVsIntellisenseLangTip_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">ifndef</cpp:directive> <name pos:line="101" pos:column="9">__IVsContainedLanguageHost_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="102" pos:column="9">__IVsContainedLanguageHost_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="103" pos:column="1">typedef <type><name pos:line="103" pos:column="9">interface</name> <name pos:line="103" pos:column="19">IVsContainedLanguageHost</name></type> <name pos:line="103" pos:column="44">IVsContainedLanguageHost</name>;</typedef>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="104" pos:column="9">/* __IVsContainedLanguageHost_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifndef</cpp:directive> <name pos:line="107" pos:column="9">__IVsContainedLanguageHostEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">__IVsContainedLanguageHostEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="109" pos:column="1">typedef <type><name pos:line="109" pos:column="9">interface</name> <name pos:line="109" pos:column="19">IVsContainedLanguageHostEvents</name></type> <name pos:line="109" pos:column="50">IVsContainedLanguageHostEvents</name>;</typedef>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="110" pos:column="9">/* __IVsContainedLanguageHostEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">ifndef</cpp:directive> <name pos:line="113" pos:column="9">__IVsContainedLanguage_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="114" pos:column="9">__IVsContainedLanguage_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="115" pos:column="1">typedef <type><name pos:line="115" pos:column="9">interface</name> <name pos:line="115" pos:column="19">IVsContainedLanguage</name></type> <name pos:line="115" pos:column="40">IVsContainedLanguage</name>;</typedef>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="116" pos:column="9">/* __IVsContainedLanguage_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">ifndef</cpp:directive> <name pos:line="119" pos:column="9">__IVsContainedLanguageColorizer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="120" pos:column="9">__IVsContainedLanguageColorizer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="121" pos:column="1">typedef <type><name pos:line="121" pos:column="9">interface</name> <name pos:line="121" pos:column="19">IVsContainedLanguageColorizer</name></type> <name pos:line="121" pos:column="49">IVsContainedLanguageColorizer</name>;</typedef>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="122" pos:column="9">/* __IVsContainedLanguageColorizer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">ifndef</cpp:directive> <name pos:line="125" pos:column="9">__IVsContainedLanguageCodeSupport_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="126" pos:column="9">__IVsContainedLanguageCodeSupport_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="127" pos:column="1">typedef <type><name pos:line="127" pos:column="9">interface</name> <name pos:line="127" pos:column="19">IVsContainedLanguageCodeSupport</name></type> <name pos:line="127" pos:column="51">IVsContainedLanguageCodeSupport</name>;</typedef>
<cpp:endif pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="128" pos:column="9">/* __IVsContainedLanguageCodeSupport_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">ifndef</cpp:directive> <name pos:line="131" pos:column="9">__IVsContainedLanguageStaticEventBinding_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="132" pos:column="9">__IVsContainedLanguageStaticEventBinding_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="133" pos:column="1">typedef <type><name pos:line="133" pos:column="9">interface</name> <name pos:line="133" pos:column="19">IVsContainedLanguageStaticEventBinding</name></type> <name pos:line="133" pos:column="58">IVsContainedLanguageStaticEventBinding</name>;</typedef>
<cpp:endif pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="134" pos:column="9">/* __IVsContainedLanguageStaticEventBinding_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">ifndef</cpp:directive> <name pos:line="137" pos:column="9">__IVsWebFormDesignerSupport_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="138" pos:column="9">__IVsWebFormDesignerSupport_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="139" pos:column="1">typedef <type><name pos:line="139" pos:column="9">interface</name> <name pos:line="139" pos:column="19">IVsWebFormDesignerSupport</name></type> <name pos:line="139" pos:column="45">IVsWebFormDesignerSupport</name>;</typedef>
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="140" pos:column="9">/* __IVsWebFormDesignerSupport_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">ifndef</cpp:directive> <name pos:line="143" pos:column="9">__IVsEnumCodeBlocks_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="144" pos:column="9">__IVsEnumCodeBlocks_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="145" pos:column="1">typedef <type><name pos:line="145" pos:column="9">interface</name> <name pos:line="145" pos:column="19">IVsEnumCodeBlocks</name></type> <name pos:line="145" pos:column="37">IVsEnumCodeBlocks</name>;</typedef>
<cpp:endif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="146" pos:column="9">/* __IVsEnumCodeBlocks_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">ifndef</cpp:directive> <name pos:line="149" pos:column="9">__IVsContainedCode_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="150" pos:column="9">__IVsContainedCode_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="151" pos:column="1">typedef <type><name pos:line="151" pos:column="9">interface</name> <name pos:line="151" pos:column="19">IVsContainedCode</name></type> <name pos:line="151" pos:column="36">IVsContainedCode</name>;</typedef>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="152" pos:column="9">/* __IVsContainedCode_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">ifndef</cpp:directive> <name pos:line="155" pos:column="9">__IVsContainedLanguageFactory_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="156" pos:column="9">__IVsContainedLanguageFactory_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="157" pos:column="1">typedef <type><name pos:line="157" pos:column="9">interface</name> <name pos:line="157" pos:column="19">IVsContainedLanguageFactory</name></type> <name pos:line="157" pos:column="47">IVsContainedLanguageFactory</name>;</typedef>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="158" pos:column="9">/* __IVsContainedLanguageFactory_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">ifndef</cpp:directive> <name pos:line="161" pos:column="9">__IVsContainedLanguageProjectNameProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="162" pos:column="9">__IVsContainedLanguageProjectNameProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="163" pos:column="1">typedef <type><name pos:line="163" pos:column="9">interface</name> <name pos:line="163" pos:column="19">IVsContainedLanguageProjectNameProvider</name></type> <name pos:line="163" pos:column="59">IVsContainedLanguageProjectNameProvider</name>;</typedef>
<cpp:endif pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="164" pos:column="9">/* __IVsContainedLanguageProjectNameProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">ifndef</cpp:directive> <name pos:line="167" pos:column="9">__IVsEnumBufferCoordinatorSpans_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="168" pos:column="9">__IVsEnumBufferCoordinatorSpans_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="169" pos:column="1">typedef <type><name pos:line="169" pos:column="9">interface</name> <name pos:line="169" pos:column="19">IVsEnumBufferCoordinatorSpans</name></type> <name pos:line="169" pos:column="49">IVsEnumBufferCoordinatorSpans</name>;</typedef>
<cpp:endif pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="170" pos:column="9">/* __IVsEnumBufferCoordinatorSpans_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">ifndef</cpp:directive> <name pos:line="173" pos:column="9">__VsTextBufferCoordinator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="174" pos:column="9">__VsTextBufferCoordinator_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">ifdef</cpp:directive> <name pos:line="176" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="177" pos:column="1">typedef <type pos:line="177" pos:column="9">class <name pos:line="177" pos:column="15">VsTextBufferCoordinator</name></type> <name pos:line="177" pos:column="39">VsTextBufferCoordinator</name>;</typedef>
<cpp:else pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="179" pos:column="1">typedef <type pos:line="179" pos:column="9">struct <name pos:line="179" pos:column="16">VsTextBufferCoordinator</name></type> <name pos:line="179" pos:column="40">VsTextBufferCoordinator</name>;</typedef>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="180" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="182" pos:column="9">/* __VsTextBufferCoordinator_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="185" pos:column="1">#<cpp:directive pos:line="185" pos:column="2">ifndef</cpp:directive> <name pos:line="185" pos:column="9">__IVsTextBufferCoordinator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="186" pos:column="9">__IVsTextBufferCoordinator_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="187" pos:column="1">typedef <type><name pos:line="187" pos:column="9">interface</name> <name pos:line="187" pos:column="19">IVsTextBufferCoordinator</name></type> <name pos:line="187" pos:column="44">IVsTextBufferCoordinator</name>;</typedef>
<cpp:endif pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="188" pos:column="9">/* __IVsTextBufferCoordinator_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">ifndef</cpp:directive> <name pos:line="191" pos:column="9">__IVsSetSpanMappingEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="192" pos:column="9">__IVsSetSpanMappingEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="193" pos:column="1">typedef <type><name pos:line="193" pos:column="9">interface</name> <name pos:line="193" pos:column="19">IVsSetSpanMappingEvents</name></type> <name pos:line="193" pos:column="43">IVsSetSpanMappingEvents</name>;</typedef>
<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="194" pos:column="9">/* __IVsSetSpanMappingEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">ifndef</cpp:directive> <name pos:line="197" pos:column="9">__IVsExternalCompletionSet_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="198" pos:column="9">__IVsExternalCompletionSet_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="199" pos:column="1">typedef <type><name pos:line="199" pos:column="9">interface</name> <name pos:line="199" pos:column="19">IVsExternalCompletionSet</name></type> <name pos:line="199" pos:column="44">IVsExternalCompletionSet</name>;</typedef>
<cpp:endif pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="200" pos:column="9">/* __IVsExternalCompletionSet_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">ifndef</cpp:directive> <name pos:line="203" pos:column="9">__IVsExpansionIntellisenseHost_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="204" pos:column="9">__IVsExpansionIntellisenseHost_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="205" pos:column="1">typedef <type><name pos:line="205" pos:column="9">interface</name> <name pos:line="205" pos:column="19">IVsExpansionIntellisenseHost</name></type> <name pos:line="205" pos:column="48">IVsExpansionIntellisenseHost</name>;</typedef>
<cpp:endif pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="206" pos:column="9">/* __IVsExpansionIntellisenseHost_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">ifndef</cpp:directive> <name pos:line="209" pos:column="9">__IVsReportExternalErrors_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="210" pos:column="9">__IVsReportExternalErrors_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="211" pos:column="1">typedef <type><name pos:line="211" pos:column="9">interface</name> <name pos:line="211" pos:column="19">IVsReportExternalErrors</name></type> <name pos:line="211" pos:column="43">IVsReportExternalErrors</name>;</typedef>
<cpp:endif pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="212" pos:column="9">/* __IVsReportExternalErrors_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">ifndef</cpp:directive> <name pos:line="215" pos:column="9">__IVsEnumExternalErrors_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="216" pos:column="9">__IVsEnumExternalErrors_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="217" pos:column="1">typedef <type><name pos:line="217" pos:column="9">interface</name> <name pos:line="217" pos:column="19">IVsEnumExternalErrors</name></type> <name pos:line="217" pos:column="41">IVsEnumExternalErrors</name>;</typedef>
<cpp:endif pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="218" pos:column="9">/* __IVsEnumExternalErrors_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="221" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="222" pos:column="10">"oaidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="223" pos:column="10">"oleidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="224" pos:column="1">#<cpp:directive pos:line="224" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="224" pos:column="10">"textmgr.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="225" pos:column="10">"textmgr2.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="226" pos:column="10">"vsshell.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">ifdef</cpp:directive> <name pos:line="228" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="229" pos:column="1">extern <lit:literal type="string" pos:line="229" pos:column="8">"C"</lit:literal><block pos:line="229" pos:column="11">{
<cpp:endif pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="233" pos:column="1">/* interface __MIDL_itf_singlefileeditor_0000_0000 */</comment>
<comment type="block" pos:line="234" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">pragma</cpp:directive> once</cpp:pragma>













<typedef pos:line="250" pos:column="1">typedef <type><struct pos:line="250" pos:column="9">struct <name pos:line="250" pos:column="16">_TEXTSPANPAIR</name>
    <block pos:line="251" pos:column="5">{<public type="default" pos:line="251" pos:column="6">
    <decl_stmt><decl><type><name pos:line="252" pos:column="5">TextSpan</name></type> <name pos:line="252" pos:column="14">span1</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="253" pos:column="5">TextSpan</name></type> <name pos:line="253" pos:column="14">span2</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="254" pos:column="9">TextSpanPair</name>;</typedef>

<typedef pos:line="256" pos:column="1">typedef <type><struct pos:line="256" pos:column="9">struct <name pos:line="256" pos:column="16">_TEXTSPANANDCOOKIE</name>
    <block pos:line="257" pos:column="5">{<public type="default" pos:line="257" pos:column="6">
    <decl_stmt><decl><type><name pos:line="258" pos:column="5">ULONG</name></type> <name pos:line="258" pos:column="11">ulHTMLCookie</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="259" pos:column="5">TextSpan</name></type> <name pos:line="259" pos:column="14">CodeSpan</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="260" pos:column="9">TextSpanAndCookie</name>;</typedef>


<enum pos:line="263" pos:column="1">enum <name pos:line="263" pos:column="6">IntellisenseHostFlags</name>
    <block pos:line="264" pos:column="5">{	<decl><name pos:line="264" pos:column="9">IHF_READONLYCONTEXT</name>	<init pos:line="264" pos:column="33">= <expr><lit:literal type="number" pos:line="264" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="264" pos:column="38">,</op:operator>
	<decl><name pos:line="265" pos:column="9">IHF_NOSEPARATESUBJECT</name>	<init pos:line="265" pos:column="33">= <expr><lit:literal type="number" pos:line="265" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="265" pos:column="38">,</op:operator>
	<decl><name pos:line="266" pos:column="9">IHF_SINGLELINESUBJECT</name>	<init pos:line="266" pos:column="33">= <expr><lit:literal type="number" pos:line="266" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="266" pos:column="38">,</op:operator>
	<decl><name pos:line="267" pos:column="9">IHF_FORCECOMMITTOCONTEXT</name>	<init pos:line="267" pos:column="41">= <expr><lit:literal type="number" pos:line="267" pos:column="43">0x8</lit:literal></expr></init></decl><op:operator pos:line="267" pos:column="46">,</op:operator>
	<decl><name pos:line="268" pos:column="9">IHF_OVERTYPE</name>	<init pos:line="268" pos:column="25">= <expr><lit:literal type="number" pos:line="268" pos:column="27">0x10</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="270" pos:column="1">typedef 
<type><enum pos:line="271" pos:column="1">enum <name pos:line="271" pos:column="6">_CODEMEMBERTYPE</name>
    <block pos:line="272" pos:column="5">{	<decl><name pos:line="272" pos:column="9">CODEMEMBERTYPE_EVENTS</name>	<init pos:line="272" pos:column="33">= <expr><lit:literal type="number" pos:line="272" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="272" pos:column="38">,</op:operator>
	<decl><name pos:line="273" pos:column="9">CODEMEMBERTYPE_EVENT_HANDLERS</name>	<init pos:line="273" pos:column="41">= <expr><lit:literal type="number" pos:line="273" pos:column="43">0x2</lit:literal></expr></init></decl><op:operator pos:line="273" pos:column="46">,</op:operator>
	<decl><name pos:line="274" pos:column="9">CODEMEMBERTYPE_USER_FUNCTIONS</name>	<init pos:line="274" pos:column="41">= <expr><lit:literal type="number" pos:line="274" pos:column="43">0x4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="275" pos:column="9">CODEMEMBERTYPE</name>;</typedef>


<enum pos:line="278" pos:column="1">enum <name pos:line="278" pos:column="6">ContainedLanguageRefreshMode</name>
    <block pos:line="279" pos:column="5">{	<decl><name pos:line="279" pos:column="9">CLRM_COMPILEFILE</name>	<init pos:line="279" pos:column="33">= <expr><lit:literal type="number" pos:line="279" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="279" pos:column="36">,</op:operator>
	<decl><name pos:line="280" pos:column="9">CLRM_COMPILEPROJECT</name>	<init pos:line="280" pos:column="33">= <expr><lit:literal type="number" pos:line="280" pos:column="35">2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="282" pos:column="1">typedef 
<type><enum pos:line="283" pos:column="1">enum <name pos:line="283" pos:column="6">_CONTAINEDLANGUAGERENAMETYPE</name>
    <block pos:line="284" pos:column="5">{	<decl><name pos:line="284" pos:column="9">CLRT_CLASS</name>	<init pos:line="284" pos:column="25">= <expr><lit:literal type="number" pos:line="284" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="284" pos:column="28">,</op:operator>
	<decl><name pos:line="285" pos:column="9">CLRT_CLASSMEMBER</name>	<init pos:line="285" pos:column="33">= <expr><op:operator pos:line="285" pos:column="35">(</op:operator> <name pos:line="285" pos:column="37">CLRT_CLASS</name> <op:operator pos:line="285" pos:column="48">+</op:operator> <lit:literal type="number" pos:line="285" pos:column="50">1</lit:literal> <op:operator pos:line="285" pos:column="52">)</op:operator></expr></init></decl> <op:operator pos:line="285" pos:column="54">,</op:operator>
	<decl><name pos:line="286" pos:column="9">CLRT_NAMESPACE</name>	<init pos:line="286" pos:column="25">= <expr><op:operator pos:line="286" pos:column="27">(</op:operator> <name pos:line="286" pos:column="29">CLRT_CLASSMEMBER</name> <op:operator pos:line="286" pos:column="46">+</op:operator> <lit:literal type="number" pos:line="286" pos:column="48">1</lit:literal> <op:operator pos:line="286" pos:column="50">)</op:operator></expr></init></decl> <op:operator pos:line="286" pos:column="52">,</op:operator>
	<decl><name pos:line="287" pos:column="9">CLRT_OTHER</name>	<init pos:line="287" pos:column="25">= <expr><op:operator pos:line="287" pos:column="27">(</op:operator> <name pos:line="287" pos:column="29">CLRT_NAMESPACE</name> <op:operator pos:line="287" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="287" pos:column="46">1</lit:literal> <op:operator pos:line="287" pos:column="48">)</op:operator></expr></init></decl> 
    }</block></enum></type> 	<name pos:line="288" pos:column="9">ContainedLanguageRenameType</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="292" pos:column="1">extern</specifier> <name pos:line="292" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="292" pos:column="22">__MIDL_itf_singlefileeditor_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="293" pos:column="1">extern</specifier> <name pos:line="293" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="293" pos:column="22">__MIDL_itf_singlefileeditor_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="296" pos:column="1">#<cpp:directive pos:line="296" pos:column="2">ifndef</cpp:directive> <name pos:line="296" pos:column="9">__SingleFileEditor_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="297" pos:column="1">#<cpp:directive pos:line="297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="297" pos:column="9">__SingleFileEditor_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="299" pos:column="1">/* library SingleFileEditor */</comment>
<comment type="block" pos:line="300" pos:column="1">/* [version][uuid] */</comment> 

<cpp:define pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="302" pos:column="9">E_CONTAINEDLANGUAGE_CANNOTFINDITEM</name></cpp:macro> <cpp:value pos:line="302" pos:column="44">MAKE_HRESULT(1, FACILITY_ITF, 0x8003)</cpp:value></cpp:define>
<cpp:define pos:line="303" pos:column="1">#<cpp:directive pos:line="303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="303" pos:column="9">E_CONTAINEDLANGUAGE_RENAMECANCELLED</name></cpp:macro> <cpp:value pos:line="303" pos:column="45">MAKE_HRESULT(1, FACILITY_ITF, 0x8004)</cpp:value></cpp:define>
<typedef pos:line="304" pos:column="1">typedef <type><struct pos:line="304" pos:column="9">struct <name pos:line="304" pos:column="16">_tag_NewSpanMapping</name>
    <block pos:line="305" pos:column="5">{<public type="default" pos:line="305" pos:column="6">
    <decl_stmt><decl><type><name pos:line="306" pos:column="5">TextSpanPair</name></type> <name pos:line="306" pos:column="18">tspSpans</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="307" pos:column="5">VARIANT</name></type> <name pos:line="307" pos:column="13">varUserData</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="308" pos:column="9">NewSpanMapping</name>;</typedef>

<typedef pos:line="310" pos:column="1">typedef <type><struct pos:line="310" pos:column="9">struct <name pos:line="310" pos:column="16">_tag_ExternalError</name>
    <block pos:line="311" pos:column="5">{<public type="default" pos:line="311" pos:column="6">
    <decl_stmt><decl><type><name pos:line="312" pos:column="5">long</name></type> <name pos:line="312" pos:column="10">iLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="313" pos:column="5">long</name></type> <name pos:line="313" pos:column="10">iCol</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="314" pos:column="5">long</name></type> <name pos:line="314" pos:column="10">iErrorID</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="315" pos:column="5">BOOL</name></type> <name pos:line="315" pos:column="10">fError</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="316" pos:column="5">BSTR</name></type> <name pos:line="316" pos:column="10">bstrText</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="317" pos:column="5">BSTR</name></type> <name pos:line="317" pos:column="10">bstrFileName</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="318" pos:column="9">ExternalError</name>;</typedef>


<enum pos:line="321" pos:column="1">enum <name pos:line="321" pos:column="6">BufferCoordinatorReplicationDirection</name>
    <block pos:line="322" pos:column="5">{	<decl><name pos:line="322" pos:column="9">BCRD_PRIMARY_TO_SECONDARY</name>	<init pos:line="322" pos:column="41">= <expr><lit:literal type="number" pos:line="322" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="322" pos:column="44">,</op:operator>
	<decl><name pos:line="323" pos:column="9">BCRD_SECONDARY_TO_PRIMARY</name>	<init pos:line="323" pos:column="41">= <expr><lit:literal type="number" pos:line="323" pos:column="43">2</lit:literal></expr></init></decl>
    }</block> ;</enum>

<enum pos:line="326" pos:column="1">enum <name pos:line="326" pos:column="6">_BufferCoordinatorMappingMode</name>
    <block pos:line="327" pos:column="5">{	<decl><name pos:line="327" pos:column="9">BCMM_NORMAL</name>	<init pos:line="327" pos:column="25">= <expr><lit:literal type="number" pos:line="327" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="327" pos:column="28">,</op:operator>
	<decl><name pos:line="328" pos:column="9">BCMM_EXTENDEDLEFT</name>	<init pos:line="328" pos:column="33">= <expr><lit:literal type="number" pos:line="328" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="328" pos:column="38">,</op:operator>
	<decl><name pos:line="329" pos:column="9">BCMM_EXTENDEDRIGHT</name>	<init pos:line="329" pos:column="33">= <expr><lit:literal type="number" pos:line="329" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="329" pos:column="38">,</op:operator>
	<decl><name pos:line="330" pos:column="9">BCMM_EXTENDED</name>	<init pos:line="330" pos:column="25">= <expr><lit:literal type="number" pos:line="330" pos:column="27">0x3</lit:literal></expr></init></decl><op:operator pos:line="330" pos:column="30">,</op:operator>
	<decl><name pos:line="331" pos:column="9">BCMM_ENTIREBUFFER</name>	<init pos:line="331" pos:column="33">= <expr><lit:literal type="number" pos:line="331" pos:column="35">0x4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="333" pos:column="1">typedef <type><name pos:line="333" pos:column="9">DWORD</name></type> <name pos:line="333" pos:column="15">BufferCoordinatorMappingMode</name>;</typedef>


<decl_stmt><decl><type><name pos:line="336" pos:column="1">EXTERN_C</name> <specifier pos:line="336" pos:column="10">const</specifier> <name pos:line="336" pos:column="16">IID</name></type> <name pos:line="336" pos:column="20">LIBID_SingleFileEditor</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="338" pos:column="1">#<cpp:directive pos:line="338" pos:column="2">ifndef</cpp:directive> <name pos:line="338" pos:column="9">__IVsIntellisenseHost_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="339" pos:column="1">#<cpp:directive pos:line="339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="339" pos:column="9">__IVsIntellisenseHost_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="341" pos:column="1">/* interface IVsIntellisenseHost */</comment>
<comment type="block" pos:line="342" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="345" pos:column="1">EXTERN_C</name> <specifier pos:line="345" pos:column="10">const</specifier> <name pos:line="345" pos:column="16">IID</name></type> <name pos:line="345" pos:column="20">IID_IVsIntellisenseHost</name></decl>;</decl_stmt>

<cpp:if pos:line="347" pos:column="1">#<cpp:directive pos:line="347" pos:column="2">if</cpp:directive> <expr><call><name pos:line="347" pos:column="5">defined</name><argument_list pos:line="347" pos:column="12">(<argument><expr><name pos:line="347" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="347" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="347" pos:column="29">!</op:operator><call><name pos:line="347" pos:column="30">defined</name><argument_list pos:line="347" pos:column="37">(<argument><expr><name pos:line="347" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="349" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="349" pos:column="19">(<argument pos:line="349" pos:column="20">"0377986B-C450-453c-A7BE-67116C9129A6"</argument>)</argument_list></macro>
    <label><name pos:line="350" pos:column="5">IVsIntellisenseHost</name> :</label> <expr_stmt><expr pos:line="350" pos:column="27">public <name pos:line="350" pos:column="34">IOleCommandTarget</name>
    <block pos:line="351" pos:column="5">{
    <expr pos:line="352" pos:column="5">public<op:operator pos:line="352" pos:column="11">:</op:operator>
        virtual <name pos:line="353" pos:column="17">HRESULT</name> <name pos:line="353" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="353" pos:column="43">GetHostFlags</name><argument_list pos:line="353" pos:column="55">( 
            <comment type="block" pos:line="354" pos:column="13">/* [retval][out] */</comment> <argument pos:line="354" pos:column="33">__RPC__out DWORD *pdwFlags</argument>)</argument_list></macro> <op:operator pos:line="354" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="354" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="356" pos:column="9">virtual <name pos:line="356" pos:column="17">HRESULT</name> <name pos:line="356" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="356" pos:column="43">GetContextBuffer</name><argument_list pos:line="356" pos:column="59">( 
            <comment type="block" pos:line="357" pos:column="13">/* [retval][out] */</comment> <argument pos:line="357" pos:column="33">__RPC__deref_out_opt IVsTextLines **ppCtxBuffer</argument>)</argument_list></macro> <op:operator pos:line="357" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="357" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="359" pos:column="9">virtual <name pos:line="359" pos:column="17">HRESULT</name> <name pos:line="359" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="359" pos:column="43">GetContextFocalPoint</name><argument_list pos:line="359" pos:column="63">( 
            <comment type="block" pos:line="360" pos:column="13">/* [out] */</comment> <argument pos:line="360" pos:column="25">__RPC__out TextSpan *pSpan</argument>,
            <argument pos:line="361" pos:column="13">__RPC__in long *piLen</argument>)</argument_list></macro> <op:operator pos:line="361" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="361" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="363" pos:column="9">virtual <name pos:line="363" pos:column="17">HRESULT</name> <name pos:line="363" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="363" pos:column="43">SetContextCaretPos</name><argument_list pos:line="363" pos:column="61">( 
            <comment type="block" pos:line="364" pos:column="13">/* [in] */</comment> <argument pos:line="364" pos:column="24">long iLine</argument>,
            <comment type="block" pos:line="365" pos:column="13">/* [in] */</comment> <argument pos:line="365" pos:column="24">long iIndex</argument>)</argument_list></macro> <op:operator pos:line="365" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="365" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="367" pos:column="9">virtual <name pos:line="367" pos:column="17">HRESULT</name> <name pos:line="367" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="367" pos:column="43">GetContextCaretPos</name><argument_list pos:line="367" pos:column="61">( 
            <comment type="block" pos:line="368" pos:column="13">/* [out] */</comment> <argument pos:line="368" pos:column="25">__RPC__out long *piLine</argument>,
            <comment type="block" pos:line="369" pos:column="13">/* [out] */</comment> <argument pos:line="369" pos:column="25">__RPC__out long *piIndex</argument>)</argument_list></macro> <op:operator pos:line="369" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="369" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="371" pos:column="9">virtual <name pos:line="371" pos:column="17">HRESULT</name> <name pos:line="371" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="371" pos:column="43">SetContextSelection</name><argument_list pos:line="371" pos:column="62">( 
            <comment type="block" pos:line="372" pos:column="13">/* [in] */</comment> <argument pos:line="372" pos:column="24">long iStartLine</argument>,
            <comment type="block" pos:line="373" pos:column="13">/* [in] */</comment> <argument pos:line="373" pos:column="24">long iStartIndex</argument>,
            <comment type="block" pos:line="374" pos:column="13">/* [in] */</comment> <argument pos:line="374" pos:column="24">long iEndLine</argument>,
            <comment type="block" pos:line="375" pos:column="13">/* [in] */</comment> <argument pos:line="375" pos:column="24">long iEndIndex</argument>)</argument_list></macro> <op:operator pos:line="375" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="375" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="377" pos:column="9">virtual <name pos:line="377" pos:column="17">HRESULT</name> <name pos:line="377" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="377" pos:column="43">GetContextSelection</name><argument_list pos:line="377" pos:column="62">( 
            <comment type="block" pos:line="378" pos:column="13">/* [out] */</comment> <argument pos:line="378" pos:column="25">__RPC__out TextSpan *pSelectionSpan</argument>)</argument_list></macro> <op:operator pos:line="378" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="378" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="380" pos:column="9">virtual <name pos:line="380" pos:column="17">HRESULT</name> <name pos:line="380" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="380" pos:column="43">GetSubjectText</name><argument_list pos:line="380" pos:column="57">( 
            <comment type="block" pos:line="381" pos:column="13">/* [retval][out] */</comment> <argument pos:line="381" pos:column="33">__RPC__deref_out_opt BSTR *pbstrSubjectText</argument>)</argument_list></macro> <op:operator pos:line="381" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="381" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="383" pos:column="9">virtual <name pos:line="383" pos:column="17">HRESULT</name> <name pos:line="383" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="383" pos:column="43">SetSubjectCaretPos</name><argument_list pos:line="383" pos:column="61">( 
            <comment type="block" pos:line="384" pos:column="13">/* [in] */</comment> <argument pos:line="384" pos:column="24">long iIndex</argument>)</argument_list></macro> <op:operator pos:line="384" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="384" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="386" pos:column="9">virtual <name pos:line="386" pos:column="17">HRESULT</name> <name pos:line="386" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="386" pos:column="43">GetSubjectCaretPos</name><argument_list pos:line="386" pos:column="61">( 
            <comment type="block" pos:line="387" pos:column="13">/* [out] */</comment> <argument pos:line="387" pos:column="25">__RPC__out long *piIndex</argument>)</argument_list></macro> <op:operator pos:line="387" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="387" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="389" pos:column="9">virtual <name pos:line="389" pos:column="17">HRESULT</name> <name pos:line="389" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="389" pos:column="43">SetSubjectSelection</name><argument_list pos:line="389" pos:column="62">( 
            <comment type="block" pos:line="390" pos:column="13">/* [in] */</comment> <argument pos:line="390" pos:column="24">long iAnchorIndex</argument>,
            <comment type="block" pos:line="391" pos:column="13">/* [in] */</comment> <argument pos:line="391" pos:column="24">long iEndIndex</argument>)</argument_list></macro> <op:operator pos:line="391" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="391" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="393" pos:column="9">virtual <name pos:line="393" pos:column="17">HRESULT</name> <name pos:line="393" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="393" pos:column="43">GetSubjectSelection</name><argument_list pos:line="393" pos:column="62">( 
            <comment type="block" pos:line="394" pos:column="13">/* [out] */</comment> <argument pos:line="394" pos:column="25">__RPC__out long *piAnchorIndex</argument>,
            <comment type="block" pos:line="395" pos:column="13">/* [out] */</comment> <argument pos:line="395" pos:column="25">__RPC__out long *piEndIndex</argument>)</argument_list></macro> <op:operator pos:line="395" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="395" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="397" pos:column="9">virtual <name pos:line="397" pos:column="17">HRESULT</name> <name pos:line="397" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="397" pos:column="43">ReplaceSubjectTextSpan</name><argument_list pos:line="397" pos:column="65">( 
            <comment type="block" pos:line="398" pos:column="13">/* [in] */</comment> <argument pos:line="398" pos:column="24">long iStartIndex</argument>,
            <comment type="block" pos:line="399" pos:column="13">/* [in] */</comment> <argument pos:line="399" pos:column="24">long iEndIndex</argument>,
            <comment type="block" pos:line="400" pos:column="13">/* [in] */</comment> <argument pos:line="400" pos:column="24">__RPC__in LPCWSTR pszText</argument>)</argument_list></macro> <op:operator pos:line="400" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="400" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="402" pos:column="9">virtual <name pos:line="402" pos:column="17">HRESULT</name> <name pos:line="402" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="402" pos:column="43">UpdateCompletionStatus</name><argument_list pos:line="402" pos:column="65">( 
            <comment type="block" pos:line="403" pos:column="13">/* [in] */</comment> <argument pos:line="403" pos:column="24">__RPC__in_opt IVsCompletionSet *pCompSet</argument>,
            <comment type="block" pos:line="404" pos:column="13">/* [in] */</comment> <argument pos:line="404" pos:column="24">DWORD dwFlags</argument>)</argument_list></macro> <op:operator pos:line="404" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="404" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="406" pos:column="9">virtual <name pos:line="406" pos:column="17">HRESULT</name> <name pos:line="406" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="406" pos:column="43">UpdateTipWindow</name><argument_list pos:line="406" pos:column="58">( 
            <comment type="block" pos:line="407" pos:column="13">/* [in] */</comment> <argument pos:line="407" pos:column="24">__RPC__in_opt IVsTipWindow *pTipWindow</argument>,
            <comment type="block" pos:line="408" pos:column="13">/* [in] */</comment> <argument pos:line="408" pos:column="24">DWORD dwFlags</argument>)</argument_list></macro> <op:operator pos:line="408" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="408" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="410" pos:column="9">virtual <name pos:line="410" pos:column="17">HRESULT</name> <name pos:line="410" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="410" pos:column="43">HighlightMatchingBrace</name><argument_list pos:line="410" pos:column="65">( 
            <comment type="block" pos:line="411" pos:column="13">/* [in] */</comment> <argument pos:line="411" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="412" pos:column="13">/* [in] */</comment> <argument pos:line="412" pos:column="24">ULONG cSpans</argument>,
            <comment type="block" pos:line="413" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="413" pos:column="33">__RPC__in_ecount_full(cSpans) TextSpan *rgBaseSpans</argument>)</argument_list></macro> <op:operator pos:line="413" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="413" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="415" pos:column="9">virtual <name pos:line="415" pos:column="17">HRESULT</name> <name pos:line="415" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="415" pos:column="43">BeforeCompletorCommit</name><argument_list pos:line="415" pos:column="64">( <argument><expr><name pos:line="415" pos:column="66">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="415" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="415" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="417" pos:column="9">virtual <name pos:line="417" pos:column="17">HRESULT</name> <name pos:line="417" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="417" pos:column="43">AfterCompletorCommit</name><argument_list pos:line="417" pos:column="63">( <argument><expr><name pos:line="417" pos:column="65">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="417" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="417" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="419" pos:column="9">virtual <name pos:line="419" pos:column="17">HRESULT</name> <name pos:line="419" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="419" pos:column="43">GetServiceProvider</name><argument_list pos:line="419" pos:column="61">( 
            <comment type="block" pos:line="420" pos:column="13">/* [out] */</comment> <argument pos:line="420" pos:column="25">__RPC__deref_out_opt IServiceProvider **ppSP</argument>)</argument_list></macro> <op:operator pos:line="420" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="420" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="422" pos:column="9">virtual <name pos:line="422" pos:column="17">HRESULT</name> <name pos:line="422" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="422" pos:column="43">GetHostWindow</name><argument_list pos:line="422" pos:column="56">( 
            <comment type="block" pos:line="423" pos:column="13">/* [out] */</comment> <argument pos:line="423" pos:column="25">__RPC__deref_out_opt HWND *hwnd</argument>)</argument_list></macro> <op:operator pos:line="423" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="423" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="425" pos:column="9">virtual <name pos:line="425" pos:column="17">HRESULT</name> <name pos:line="425" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="425" pos:column="43">GetContextLocation</name><argument_list pos:line="425" pos:column="61">( 
            <comment type="block" pos:line="426" pos:column="13">/* [in] */</comment> <argument pos:line="426" pos:column="24">long iPos</argument>,
            <comment type="block" pos:line="427" pos:column="13">/* [in] */</comment> <argument pos:line="427" pos:column="24">long iLen</argument>,
            <comment type="block" pos:line="428" pos:column="13">/* [in] */</comment> <argument pos:line="428" pos:column="24">BOOL fUseCaretPosition</argument>,
            <comment type="block" pos:line="429" pos:column="13">/* [out] */</comment> <argument pos:line="429" pos:column="25">__RPC__out RECT *prc</argument>,
            <comment type="block" pos:line="430" pos:column="13">/* [out] */</comment> <argument pos:line="430" pos:column="25">__RPC__out long *piTopX</argument>)</argument_list></macro> <op:operator pos:line="430" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="430" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="432" pos:column="9">virtual <name pos:line="432" pos:column="17">HRESULT</name> <name pos:line="432" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="432" pos:column="43">UpdateSmartTagWindow</name><argument_list pos:line="432" pos:column="63">( 
            <comment type="block" pos:line="433" pos:column="13">/* [in] */</comment> <argument pos:line="433" pos:column="24">__RPC__in_opt IVsSmartTagTipWindow *pSmartTagWnd</argument>,
            <comment type="block" pos:line="434" pos:column="13">/* [in] */</comment> <argument pos:line="434" pos:column="24">DWORD dwFlags</argument>)</argument_list></macro> <op:operator pos:line="434" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="434" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="436" pos:column="9">virtual <name pos:line="436" pos:column="17">HRESULT</name> <name pos:line="436" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="436" pos:column="43">GetSmartTagRect</name><argument_list pos:line="436" pos:column="58">( 
            <comment type="block" pos:line="437" pos:column="13">/* [out] */</comment> <argument pos:line="437" pos:column="25">__RPC__out RECT *rcSmartTag</argument>)</argument_list></macro> <op:operator pos:line="437" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="437" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="441" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="443" pos:column="5">typedef <type><struct pos:line="443" pos:column="13">struct <name pos:line="443" pos:column="20">IVsIntellisenseHostVtbl</name>
    <block pos:line="444" pos:column="5">{<public type="default" pos:line="444" pos:column="6">
        <function_decl><type><name pos:line="445" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="447" pos:column="9">HRESULT</name></type> ( <name pos:line="447" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="447" pos:column="37">*</type:modifier><name pos:line="447" pos:column="38">QueryInterface</name> )<parameter_list pos:line="447" pos:column="54">( 
            <param><decl><type><name pos:line="448" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="448" pos:column="33">*</type:modifier></type> <name pos:line="448" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="449" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="449" pos:column="24">__RPC__in</name> <name pos:line="449" pos:column="34">REFIID</name></type> <name pos:line="449" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="450" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="451" pos:column="13">__RPC__deref_out</name>  <name pos:line="451" pos:column="31">void</name> <type:modifier pos:line="451" pos:column="36">*</type:modifier><type:modifier pos:line="451" pos:column="37">*</type:modifier></type><name pos:line="451" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="453" pos:column="9">ULONG</name></type> ( <name pos:line="453" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="453" pos:column="35">*</type:modifier><name pos:line="453" pos:column="36">AddRef</name> )<parameter_list pos:line="453" pos:column="44">( 
            <param><decl><type><name pos:line="454" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="454" pos:column="33">*</type:modifier></type> <name pos:line="454" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="456" pos:column="9">ULONG</name></type> ( <name pos:line="456" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="456" pos:column="35">*</type:modifier><name pos:line="456" pos:column="36">Release</name> )<parameter_list pos:line="456" pos:column="45">( 
            <param><decl><type><name pos:line="457" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="457" pos:column="33">*</type:modifier></type> <name pos:line="457" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="459" pos:column="9">/* [input_sync] */</comment> <macro><name pos:line="459" pos:column="28">HRESULT</name> <argument_list pos:line="459" pos:column="36">( <argument pos:line="459" pos:column="38">STDMETHODCALLTYPE *QueryStatus</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="459" pos:column="70">(</op:operator> 
            <name pos:line="460" pos:column="13">IVsIntellisenseHost</name> <op:operator pos:line="460" pos:column="33">*</op:operator> <name pos:line="460" pos:column="35">This</name><op:operator pos:line="460" pos:column="39">,</op:operator>
            <comment type="block" pos:line="461" pos:column="13">/* [unique][in] */</comment> <name pos:line="461" pos:column="32">__RPC__in_opt</name> const <name pos:line="461" pos:column="52">GUID</name> <op:operator pos:line="461" pos:column="57">*</op:operator><name pos:line="461" pos:column="58">pguidCmdGroup</name><op:operator pos:line="461" pos:column="71">,</op:operator>
            <comment type="block" pos:line="462" pos:column="13">/* [in] */</comment> <name pos:line="462" pos:column="24">ULONG</name> <name pos:line="462" pos:column="30">cCmds</name><op:operator pos:line="462" pos:column="35">,</op:operator>
            <comment type="block" pos:line="463" pos:column="13">/* [out][in][size_is] */</comment> <macro><name pos:line="463" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="463" pos:column="62">(<argument pos:line="463" pos:column="63">cCmds</argument>)</argument_list></macro> <name pos:line="463" pos:column="70">OLECMD</name> <name><name pos:line="463" pos:column="77">prgCmds</name><index pos:line="463" pos:column="84">[  ]</index></name><op:operator pos:line="463" pos:column="88">,</op:operator>
            <comment type="block" pos:line="464" pos:column="13">/* [unique][out][in] */</comment> <name pos:line="464" pos:column="37">__RPC__inout_opt</name> <name pos:line="464" pos:column="54">OLECMDTEXT</name> <op:operator pos:line="464" pos:column="65">*</op:operator><name pos:line="464" pos:column="66">pCmdText</name><op:operator pos:line="464" pos:column="74">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="466" pos:column="9">HRESULT</name></type> ( <name pos:line="466" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="466" pos:column="37">*</type:modifier><name pos:line="466" pos:column="38">Exec</name> )<parameter_list pos:line="466" pos:column="44">( 
            <param><decl><type><name pos:line="467" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="467" pos:column="33">*</type:modifier></type> <name pos:line="467" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="468" pos:column="13">/* [unique][in] */</comment> <param><decl><type><name pos:line="468" pos:column="32">__RPC__in_opt</name> <specifier pos:line="468" pos:column="46">const</specifier> <name pos:line="468" pos:column="52">GUID</name> <type:modifier pos:line="468" pos:column="57">*</type:modifier></type><name pos:line="468" pos:column="58">pguidCmdGroup</name></decl></param>,
            <comment type="block" pos:line="469" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="469" pos:column="24">DWORD</name></type> <name pos:line="469" pos:column="30">nCmdID</name></decl></param>,
            <comment type="block" pos:line="470" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="470" pos:column="24">DWORD</name></type> <name pos:line="470" pos:column="30">nCmdexecopt</name></decl></param>,
            <comment type="block" pos:line="471" pos:column="13">/* [unique][in] */</comment> <param><decl><type><name pos:line="471" pos:column="32">__RPC__in_opt</name> <name pos:line="471" pos:column="46">VARIANT</name> <type:modifier pos:line="471" pos:column="54">*</type:modifier></type><name pos:line="471" pos:column="55">pvaIn</name></decl></param>,
            <comment type="block" pos:line="472" pos:column="13">/* [unique][out][in] */</comment> <param><decl><type><name pos:line="472" pos:column="37">__RPC__inout_opt</name> <name pos:line="472" pos:column="54">VARIANT</name> <type:modifier pos:line="472" pos:column="62">*</type:modifier></type><name pos:line="472" pos:column="63">pvaOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="474" pos:column="9">HRESULT</name></type> ( <name pos:line="474" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="474" pos:column="37">*</type:modifier><name pos:line="474" pos:column="38">GetHostFlags</name> )<parameter_list pos:line="474" pos:column="52">( 
            <param><decl><type><name pos:line="475" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="475" pos:column="33">*</type:modifier></type> <name pos:line="475" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="476" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="476" pos:column="33">__RPC__out</name> <name pos:line="476" pos:column="44">DWORD</name> <type:modifier pos:line="476" pos:column="50">*</type:modifier></type><name pos:line="476" pos:column="51">pdwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="478" pos:column="9">HRESULT</name></type> ( <name pos:line="478" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="478" pos:column="37">*</type:modifier><name pos:line="478" pos:column="38">GetContextBuffer</name> )<parameter_list pos:line="478" pos:column="56">( 
            <param><decl><type><name pos:line="479" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="479" pos:column="33">*</type:modifier></type> <name pos:line="479" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="480" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="480" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="480" pos:column="54">IVsTextLines</name> <type:modifier pos:line="480" pos:column="67">*</type:modifier><type:modifier pos:line="480" pos:column="68">*</type:modifier></type><name pos:line="480" pos:column="69">ppCtxBuffer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="482" pos:column="9">HRESULT</name></type> ( <name pos:line="482" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="482" pos:column="37">*</type:modifier><name pos:line="482" pos:column="38">GetContextFocalPoint</name> )<parameter_list pos:line="482" pos:column="60">( 
            <param><decl><type><name pos:line="483" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="483" pos:column="33">*</type:modifier></type> <name pos:line="483" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="484" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="484" pos:column="25">__RPC__out</name> <name pos:line="484" pos:column="36">TextSpan</name> <type:modifier pos:line="484" pos:column="45">*</type:modifier></type><name pos:line="484" pos:column="46">pSpan</name></decl></param>,
            <param><decl><type><name pos:line="485" pos:column="13">__RPC__in</name> <name pos:line="485" pos:column="23">long</name> <type:modifier pos:line="485" pos:column="28">*</type:modifier></type><name pos:line="485" pos:column="29">piLen</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="487" pos:column="9">HRESULT</name></type> ( <name pos:line="487" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="487" pos:column="37">*</type:modifier><name pos:line="487" pos:column="38">SetContextCaretPos</name> )<parameter_list pos:line="487" pos:column="58">( 
            <param><decl><type><name pos:line="488" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="488" pos:column="33">*</type:modifier></type> <name pos:line="488" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="489" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="489" pos:column="24">long</name></type> <name pos:line="489" pos:column="29">iLine</name></decl></param>,
            <comment type="block" pos:line="490" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="490" pos:column="24">long</name></type> <name pos:line="490" pos:column="29">iIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="492" pos:column="9">HRESULT</name></type> ( <name pos:line="492" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="492" pos:column="37">*</type:modifier><name pos:line="492" pos:column="38">GetContextCaretPos</name> )<parameter_list pos:line="492" pos:column="58">( 
            <param><decl><type><name pos:line="493" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="493" pos:column="33">*</type:modifier></type> <name pos:line="493" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="494" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="494" pos:column="25">__RPC__out</name> <name pos:line="494" pos:column="36">long</name> <type:modifier pos:line="494" pos:column="41">*</type:modifier></type><name pos:line="494" pos:column="42">piLine</name></decl></param>,
            <comment type="block" pos:line="495" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="495" pos:column="25">__RPC__out</name> <name pos:line="495" pos:column="36">long</name> <type:modifier pos:line="495" pos:column="41">*</type:modifier></type><name pos:line="495" pos:column="42">piIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="497" pos:column="9">HRESULT</name></type> ( <name pos:line="497" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="497" pos:column="37">*</type:modifier><name pos:line="497" pos:column="38">SetContextSelection</name> )<parameter_list pos:line="497" pos:column="59">( 
            <param><decl><type><name pos:line="498" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="498" pos:column="33">*</type:modifier></type> <name pos:line="498" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="499" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="499" pos:column="24">long</name></type> <name pos:line="499" pos:column="29">iStartLine</name></decl></param>,
            <comment type="block" pos:line="500" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="500" pos:column="24">long</name></type> <name pos:line="500" pos:column="29">iStartIndex</name></decl></param>,
            <comment type="block" pos:line="501" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="501" pos:column="24">long</name></type> <name pos:line="501" pos:column="29">iEndLine</name></decl></param>,
            <comment type="block" pos:line="502" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="502" pos:column="24">long</name></type> <name pos:line="502" pos:column="29">iEndIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="504" pos:column="9">HRESULT</name></type> ( <name pos:line="504" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="504" pos:column="37">*</type:modifier><name pos:line="504" pos:column="38">GetContextSelection</name> )<parameter_list pos:line="504" pos:column="59">( 
            <param><decl><type><name pos:line="505" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="505" pos:column="33">*</type:modifier></type> <name pos:line="505" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="506" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="506" pos:column="25">__RPC__out</name> <name pos:line="506" pos:column="36">TextSpan</name> <type:modifier pos:line="506" pos:column="45">*</type:modifier></type><name pos:line="506" pos:column="46">pSelectionSpan</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="508" pos:column="9">HRESULT</name></type> ( <name pos:line="508" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="508" pos:column="37">*</type:modifier><name pos:line="508" pos:column="38">GetSubjectText</name> )<parameter_list pos:line="508" pos:column="54">( 
            <param><decl><type><name pos:line="509" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="509" pos:column="33">*</type:modifier></type> <name pos:line="509" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="510" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="510" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="510" pos:column="54">BSTR</name> <type:modifier pos:line="510" pos:column="59">*</type:modifier></type><name pos:line="510" pos:column="60">pbstrSubjectText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="512" pos:column="9">HRESULT</name></type> ( <name pos:line="512" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="512" pos:column="37">*</type:modifier><name pos:line="512" pos:column="38">SetSubjectCaretPos</name> )<parameter_list pos:line="512" pos:column="58">( 
            <param><decl><type><name pos:line="513" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="513" pos:column="33">*</type:modifier></type> <name pos:line="513" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="514" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="514" pos:column="24">long</name></type> <name pos:line="514" pos:column="29">iIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="516" pos:column="9">HRESULT</name></type> ( <name pos:line="516" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="516" pos:column="37">*</type:modifier><name pos:line="516" pos:column="38">GetSubjectCaretPos</name> )<parameter_list pos:line="516" pos:column="58">( 
            <param><decl><type><name pos:line="517" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="517" pos:column="33">*</type:modifier></type> <name pos:line="517" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="518" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="518" pos:column="25">__RPC__out</name> <name pos:line="518" pos:column="36">long</name> <type:modifier pos:line="518" pos:column="41">*</type:modifier></type><name pos:line="518" pos:column="42">piIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="520" pos:column="9">HRESULT</name></type> ( <name pos:line="520" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="520" pos:column="37">*</type:modifier><name pos:line="520" pos:column="38">SetSubjectSelection</name> )<parameter_list pos:line="520" pos:column="59">( 
            <param><decl><type><name pos:line="521" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="521" pos:column="33">*</type:modifier></type> <name pos:line="521" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="522" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="522" pos:column="24">long</name></type> <name pos:line="522" pos:column="29">iAnchorIndex</name></decl></param>,
            <comment type="block" pos:line="523" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="523" pos:column="24">long</name></type> <name pos:line="523" pos:column="29">iEndIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="525" pos:column="9">HRESULT</name></type> ( <name pos:line="525" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="525" pos:column="37">*</type:modifier><name pos:line="525" pos:column="38">GetSubjectSelection</name> )<parameter_list pos:line="525" pos:column="59">( 
            <param><decl><type><name pos:line="526" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="526" pos:column="33">*</type:modifier></type> <name pos:line="526" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="527" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="527" pos:column="25">__RPC__out</name> <name pos:line="527" pos:column="36">long</name> <type:modifier pos:line="527" pos:column="41">*</type:modifier></type><name pos:line="527" pos:column="42">piAnchorIndex</name></decl></param>,
            <comment type="block" pos:line="528" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="528" pos:column="25">__RPC__out</name> <name pos:line="528" pos:column="36">long</name> <type:modifier pos:line="528" pos:column="41">*</type:modifier></type><name pos:line="528" pos:column="42">piEndIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="530" pos:column="9">HRESULT</name></type> ( <name pos:line="530" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="530" pos:column="37">*</type:modifier><name pos:line="530" pos:column="38">ReplaceSubjectTextSpan</name> )<parameter_list pos:line="530" pos:column="62">( 
            <param><decl><type><name pos:line="531" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="531" pos:column="33">*</type:modifier></type> <name pos:line="531" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="532" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="532" pos:column="24">long</name></type> <name pos:line="532" pos:column="29">iStartIndex</name></decl></param>,
            <comment type="block" pos:line="533" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="533" pos:column="24">long</name></type> <name pos:line="533" pos:column="29">iEndIndex</name></decl></param>,
            <comment type="block" pos:line="534" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="534" pos:column="24">__RPC__in</name> <name pos:line="534" pos:column="34">LPCWSTR</name></type> <name pos:line="534" pos:column="42">pszText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="536" pos:column="9">HRESULT</name></type> ( <name pos:line="536" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="536" pos:column="37">*</type:modifier><name pos:line="536" pos:column="38">UpdateCompletionStatus</name> )<parameter_list pos:line="536" pos:column="62">( 
            <param><decl><type><name pos:line="537" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="537" pos:column="33">*</type:modifier></type> <name pos:line="537" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="538" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="538" pos:column="24">__RPC__in_opt</name> <name pos:line="538" pos:column="38">IVsCompletionSet</name> <type:modifier pos:line="538" pos:column="55">*</type:modifier></type><name pos:line="538" pos:column="56">pCompSet</name></decl></param>,
            <comment type="block" pos:line="539" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="539" pos:column="24">DWORD</name></type> <name pos:line="539" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="541" pos:column="9">HRESULT</name></type> ( <name pos:line="541" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="541" pos:column="37">*</type:modifier><name pos:line="541" pos:column="38">UpdateTipWindow</name> )<parameter_list pos:line="541" pos:column="55">( 
            <param><decl><type><name pos:line="542" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="542" pos:column="33">*</type:modifier></type> <name pos:line="542" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="543" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="543" pos:column="24">__RPC__in_opt</name> <name pos:line="543" pos:column="38">IVsTipWindow</name> <type:modifier pos:line="543" pos:column="51">*</type:modifier></type><name pos:line="543" pos:column="52">pTipWindow</name></decl></param>,
            <comment type="block" pos:line="544" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="544" pos:column="24">DWORD</name></type> <name pos:line="544" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="546" pos:column="9">HRESULT</name> <argument_list pos:line="546" pos:column="17">( <argument pos:line="546" pos:column="19">STDMETHODCALLTYPE *HighlightMatchingBrace</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="546" pos:column="62">(</op:operator> 
            <name pos:line="547" pos:column="13">IVsIntellisenseHost</name> <op:operator pos:line="547" pos:column="33">*</op:operator> <name pos:line="547" pos:column="35">This</name><op:operator pos:line="547" pos:column="39">,</op:operator>
            <comment type="block" pos:line="548" pos:column="13">/* [in] */</comment> <name pos:line="548" pos:column="24">DWORD</name> <name pos:line="548" pos:column="30">dwFlags</name><op:operator pos:line="548" pos:column="37">,</op:operator>
            <comment type="block" pos:line="549" pos:column="13">/* [in] */</comment> <name pos:line="549" pos:column="24">ULONG</name> <name pos:line="549" pos:column="30">cSpans</name><op:operator pos:line="549" pos:column="36">,</op:operator>
            <comment type="block" pos:line="550" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="550" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="550" pos:column="54">(<argument pos:line="550" pos:column="55">cSpans</argument>)</argument_list></macro> <name pos:line="550" pos:column="63">TextSpan</name> <op:operator pos:line="550" pos:column="72">*</op:operator><name pos:line="550" pos:column="73">rgBaseSpans</name><op:operator pos:line="550" pos:column="84">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="552" pos:column="9">HRESULT</name></type> ( <name pos:line="552" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="552" pos:column="37">*</type:modifier><name pos:line="552" pos:column="38">BeforeCompletorCommit</name> )<parameter_list pos:line="552" pos:column="61">( 
            <param><decl><type><name pos:line="553" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="553" pos:column="33">*</type:modifier></type> <name pos:line="553" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="555" pos:column="9">HRESULT</name></type> ( <name pos:line="555" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="555" pos:column="37">*</type:modifier><name pos:line="555" pos:column="38">AfterCompletorCommit</name> )<parameter_list pos:line="555" pos:column="60">( 
            <param><decl><type><name pos:line="556" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="556" pos:column="33">*</type:modifier></type> <name pos:line="556" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="558" pos:column="9">HRESULT</name></type> ( <name pos:line="558" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="558" pos:column="37">*</type:modifier><name pos:line="558" pos:column="38">GetServiceProvider</name> )<parameter_list pos:line="558" pos:column="58">( 
            <param><decl><type><name pos:line="559" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="559" pos:column="33">*</type:modifier></type> <name pos:line="559" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="560" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="560" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="560" pos:column="46">IServiceProvider</name> <type:modifier pos:line="560" pos:column="63">*</type:modifier><type:modifier pos:line="560" pos:column="64">*</type:modifier></type><name pos:line="560" pos:column="65">ppSP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="562" pos:column="9">HRESULT</name></type> ( <name pos:line="562" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="562" pos:column="37">*</type:modifier><name pos:line="562" pos:column="38">GetHostWindow</name> )<parameter_list pos:line="562" pos:column="53">( 
            <param><decl><type><name pos:line="563" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="563" pos:column="33">*</type:modifier></type> <name pos:line="563" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="564" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="564" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="564" pos:column="46">HWND</name> <type:modifier pos:line="564" pos:column="51">*</type:modifier></type><name pos:line="564" pos:column="52">hwnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="566" pos:column="9">HRESULT</name></type> ( <name pos:line="566" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="566" pos:column="37">*</type:modifier><name pos:line="566" pos:column="38">GetContextLocation</name> )<parameter_list pos:line="566" pos:column="58">( 
            <param><decl><type><name pos:line="567" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="567" pos:column="33">*</type:modifier></type> <name pos:line="567" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="568" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="568" pos:column="24">long</name></type> <name pos:line="568" pos:column="29">iPos</name></decl></param>,
            <comment type="block" pos:line="569" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="569" pos:column="24">long</name></type> <name pos:line="569" pos:column="29">iLen</name></decl></param>,
            <comment type="block" pos:line="570" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="570" pos:column="24">BOOL</name></type> <name pos:line="570" pos:column="29">fUseCaretPosition</name></decl></param>,
            <comment type="block" pos:line="571" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="571" pos:column="25">__RPC__out</name> <name pos:line="571" pos:column="36">RECT</name> <type:modifier pos:line="571" pos:column="41">*</type:modifier></type><name pos:line="571" pos:column="42">prc</name></decl></param>,
            <comment type="block" pos:line="572" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="572" pos:column="25">__RPC__out</name> <name pos:line="572" pos:column="36">long</name> <type:modifier pos:line="572" pos:column="41">*</type:modifier></type><name pos:line="572" pos:column="42">piTopX</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="574" pos:column="9">HRESULT</name></type> ( <name pos:line="574" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="574" pos:column="37">*</type:modifier><name pos:line="574" pos:column="38">UpdateSmartTagWindow</name> )<parameter_list pos:line="574" pos:column="60">( 
            <param><decl><type><name pos:line="575" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="575" pos:column="33">*</type:modifier></type> <name pos:line="575" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="576" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="576" pos:column="24">__RPC__in_opt</name> <name pos:line="576" pos:column="38">IVsSmartTagTipWindow</name> <type:modifier pos:line="576" pos:column="59">*</type:modifier></type><name pos:line="576" pos:column="60">pSmartTagWnd</name></decl></param>,
            <comment type="block" pos:line="577" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="577" pos:column="24">DWORD</name></type> <name pos:line="577" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="579" pos:column="9">HRESULT</name></type> ( <name pos:line="579" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="579" pos:column="37">*</type:modifier><name pos:line="579" pos:column="38">GetSmartTagRect</name> )<parameter_list pos:line="579" pos:column="55">( 
            <param><decl><type><name pos:line="580" pos:column="13">IVsIntellisenseHost</name> <type:modifier pos:line="580" pos:column="33">*</type:modifier></type> <name pos:line="580" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="581" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="581" pos:column="25">__RPC__out</name> <name pos:line="581" pos:column="36">RECT</name> <type:modifier pos:line="581" pos:column="41">*</type:modifier></type><name pos:line="581" pos:column="42">rcSmartTag</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="583" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="584" pos:column="7">IVsIntellisenseHostVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="586" pos:column="5">interface</name></type> <name pos:line="586" pos:column="15">IVsIntellisenseHost</name>
    <argument_list pos:line="587" pos:column="5">{
        <argument><expr><name pos:line="588" pos:column="9">CONST_VTBL</name> struct <name pos:line="588" pos:column="27">IVsIntellisenseHostVtbl</name> <op:operator pos:line="588" pos:column="51">*</op:operator><name pos:line="588" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="593" pos:column="1">#<cpp:directive pos:line="593" pos:column="2">ifdef</cpp:directive> <name pos:line="593" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="596" pos:column="1">#<cpp:directive pos:line="596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="596" pos:column="9">IVsIntellisenseHost_QueryInterface</name><parameter_list pos:line="596" pos:column="43">(<param><type><name pos:line="596" pos:column="44">This</name></type></param>,<param><type><name pos:line="596" pos:column="49">riid</name></type></param>,<param><type><name pos:line="596" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="597" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="599" pos:column="1">#<cpp:directive pos:line="599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="599" pos:column="9">IVsIntellisenseHost_AddRef</name><parameter_list pos:line="599" pos:column="35">(<param><type><name pos:line="599" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="600" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="602" pos:column="1">#<cpp:directive pos:line="602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="602" pos:column="9">IVsIntellisenseHost_Release</name><parameter_list pos:line="602" pos:column="36">(<param><type><name pos:line="602" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="603" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="606" pos:column="1">#<cpp:directive pos:line="606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="606" pos:column="9">IVsIntellisenseHost_QueryStatus</name><parameter_list pos:line="606" pos:column="40">(<param><type><name pos:line="606" pos:column="41">This</name></type></param>,<param><type><name pos:line="606" pos:column="46">pguidCmdGroup</name></type></param>,<param><type><name pos:line="606" pos:column="60">cCmds</name></type></param>,<param><type><name pos:line="606" pos:column="66">prgCmds</name></type></param>,<param><type><name pos:line="606" pos:column="74">pCmdText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="607" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText) )</cpp:value></cpp:define> 

<cpp:define pos:line="609" pos:column="1">#<cpp:directive pos:line="609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="609" pos:column="9">IVsIntellisenseHost_Exec</name><parameter_list pos:line="609" pos:column="33">(<param><type><name pos:line="609" pos:column="34">This</name></type></param>,<param><type><name pos:line="609" pos:column="39">pguidCmdGroup</name></type></param>,<param><type><name pos:line="609" pos:column="53">nCmdID</name></type></param>,<param><type><name pos:line="609" pos:column="60">nCmdexecopt</name></type></param>,<param><type><name pos:line="609" pos:column="72">pvaIn</name></type></param>,<param><type><name pos:line="609" pos:column="78">pvaOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="610" pos:column="5">( (This)-&gt;lpVtbl -&gt; Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut) )</cpp:value></cpp:define> 


<cpp:define pos:line="613" pos:column="1">#<cpp:directive pos:line="613" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="613" pos:column="9">IVsIntellisenseHost_GetHostFlags</name><parameter_list pos:line="613" pos:column="41">(<param><type><name pos:line="613" pos:column="42">This</name></type></param>,<param><type><name pos:line="613" pos:column="47">pdwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="614" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostFlags(This,pdwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="616" pos:column="1">#<cpp:directive pos:line="616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="616" pos:column="9">IVsIntellisenseHost_GetContextBuffer</name><parameter_list pos:line="616" pos:column="45">(<param><type><name pos:line="616" pos:column="46">This</name></type></param>,<param><type><name pos:line="616" pos:column="51">ppCtxBuffer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="617" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextBuffer(This,ppCtxBuffer) )</cpp:value></cpp:define> 

<cpp:define pos:line="619" pos:column="1">#<cpp:directive pos:line="619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="619" pos:column="9">IVsIntellisenseHost_GetContextFocalPoint</name><parameter_list pos:line="619" pos:column="49">(<param><type><name pos:line="619" pos:column="50">This</name></type></param>,<param><type><name pos:line="619" pos:column="55">pSpan</name></type></param>,<param><type><name pos:line="619" pos:column="61">piLen</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="620" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextFocalPoint(This,pSpan,piLen) )</cpp:value></cpp:define> 

<cpp:define pos:line="622" pos:column="1">#<cpp:directive pos:line="622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="622" pos:column="9">IVsIntellisenseHost_SetContextCaretPos</name><parameter_list pos:line="622" pos:column="47">(<param><type><name pos:line="622" pos:column="48">This</name></type></param>,<param><type><name pos:line="622" pos:column="53">iLine</name></type></param>,<param><type><name pos:line="622" pos:column="59">iIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="623" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetContextCaretPos(This,iLine,iIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="625" pos:column="1">#<cpp:directive pos:line="625" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="625" pos:column="9">IVsIntellisenseHost_GetContextCaretPos</name><parameter_list pos:line="625" pos:column="47">(<param><type><name pos:line="625" pos:column="48">This</name></type></param>,<param><type><name pos:line="625" pos:column="53">piLine</name></type></param>,<param><type><name pos:line="625" pos:column="60">piIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="626" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextCaretPos(This,piLine,piIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="628" pos:column="1">#<cpp:directive pos:line="628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="628" pos:column="9">IVsIntellisenseHost_SetContextSelection</name><parameter_list pos:line="628" pos:column="48">(<param><type><name pos:line="628" pos:column="49">This</name></type></param>,<param><type><name pos:line="628" pos:column="54">iStartLine</name></type></param>,<param><type><name pos:line="628" pos:column="65">iStartIndex</name></type></param>,<param><type><name pos:line="628" pos:column="77">iEndLine</name></type></param>,<param><type><name pos:line="628" pos:column="86">iEndIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="629" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetContextSelection(This,iStartLine,iStartIndex,iEndLine,iEndIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="631" pos:column="1">#<cpp:directive pos:line="631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="631" pos:column="9">IVsIntellisenseHost_GetContextSelection</name><parameter_list pos:line="631" pos:column="48">(<param><type><name pos:line="631" pos:column="49">This</name></type></param>,<param><type><name pos:line="631" pos:column="54">pSelectionSpan</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="632" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextSelection(This,pSelectionSpan) )</cpp:value></cpp:define> 

<cpp:define pos:line="634" pos:column="1">#<cpp:directive pos:line="634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="634" pos:column="9">IVsIntellisenseHost_GetSubjectText</name><parameter_list pos:line="634" pos:column="43">(<param><type><name pos:line="634" pos:column="44">This</name></type></param>,<param><type><name pos:line="634" pos:column="49">pbstrSubjectText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="635" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSubjectText(This,pbstrSubjectText) )</cpp:value></cpp:define> 

<cpp:define pos:line="637" pos:column="1">#<cpp:directive pos:line="637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="637" pos:column="9">IVsIntellisenseHost_SetSubjectCaretPos</name><parameter_list pos:line="637" pos:column="47">(<param><type><name pos:line="637" pos:column="48">This</name></type></param>,<param><type><name pos:line="637" pos:column="53">iIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="638" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSubjectCaretPos(This,iIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="640" pos:column="1">#<cpp:directive pos:line="640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="640" pos:column="9">IVsIntellisenseHost_GetSubjectCaretPos</name><parameter_list pos:line="640" pos:column="47">(<param><type><name pos:line="640" pos:column="48">This</name></type></param>,<param><type><name pos:line="640" pos:column="53">piIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="641" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSubjectCaretPos(This,piIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="643" pos:column="1">#<cpp:directive pos:line="643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="643" pos:column="9">IVsIntellisenseHost_SetSubjectSelection</name><parameter_list pos:line="643" pos:column="48">(<param><type><name pos:line="643" pos:column="49">This</name></type></param>,<param><type><name pos:line="643" pos:column="54">iAnchorIndex</name></type></param>,<param><type><name pos:line="643" pos:column="67">iEndIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="644" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSubjectSelection(This,iAnchorIndex,iEndIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="646" pos:column="1">#<cpp:directive pos:line="646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="646" pos:column="9">IVsIntellisenseHost_GetSubjectSelection</name><parameter_list pos:line="646" pos:column="48">(<param><type><name pos:line="646" pos:column="49">This</name></type></param>,<param><type><name pos:line="646" pos:column="54">piAnchorIndex</name></type></param>,<param><type><name pos:line="646" pos:column="68">piEndIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="647" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSubjectSelection(This,piAnchorIndex,piEndIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="649" pos:column="1">#<cpp:directive pos:line="649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="649" pos:column="9">IVsIntellisenseHost_ReplaceSubjectTextSpan</name><parameter_list pos:line="649" pos:column="51">(<param><type><name pos:line="649" pos:column="52">This</name></type></param>,<param><type><name pos:line="649" pos:column="57">iStartIndex</name></type></param>,<param><type><name pos:line="649" pos:column="69">iEndIndex</name></type></param>,<param><type><name pos:line="649" pos:column="79">pszText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="650" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReplaceSubjectTextSpan(This,iStartIndex,iEndIndex,pszText) )</cpp:value></cpp:define> 

<cpp:define pos:line="652" pos:column="1">#<cpp:directive pos:line="652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="652" pos:column="9">IVsIntellisenseHost_UpdateCompletionStatus</name><parameter_list pos:line="652" pos:column="51">(<param><type><name pos:line="652" pos:column="52">This</name></type></param>,<param><type><name pos:line="652" pos:column="57">pCompSet</name></type></param>,<param><type><name pos:line="652" pos:column="66">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="653" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateCompletionStatus(This,pCompSet,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="655" pos:column="1">#<cpp:directive pos:line="655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="655" pos:column="9">IVsIntellisenseHost_UpdateTipWindow</name><parameter_list pos:line="655" pos:column="44">(<param><type><name pos:line="655" pos:column="45">This</name></type></param>,<param><type><name pos:line="655" pos:column="50">pTipWindow</name></type></param>,<param><type><name pos:line="655" pos:column="61">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="656" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateTipWindow(This,pTipWindow,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="658" pos:column="1">#<cpp:directive pos:line="658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="658" pos:column="9">IVsIntellisenseHost_HighlightMatchingBrace</name><parameter_list pos:line="658" pos:column="51">(<param><type><name pos:line="658" pos:column="52">This</name></type></param>,<param><type><name pos:line="658" pos:column="57">dwFlags</name></type></param>,<param><type><name pos:line="658" pos:column="65">cSpans</name></type></param>,<param><type><name pos:line="658" pos:column="72">rgBaseSpans</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="659" pos:column="5">( (This)-&gt;lpVtbl -&gt; HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans) )</cpp:value></cpp:define> 

<cpp:define pos:line="661" pos:column="1">#<cpp:directive pos:line="661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="661" pos:column="9">IVsIntellisenseHost_BeforeCompletorCommit</name><parameter_list pos:line="661" pos:column="50">(<param><type><name pos:line="661" pos:column="51">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="662" pos:column="5">( (This)-&gt;lpVtbl -&gt; BeforeCompletorCommit(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="664" pos:column="1">#<cpp:directive pos:line="664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="664" pos:column="9">IVsIntellisenseHost_AfterCompletorCommit</name><parameter_list pos:line="664" pos:column="49">(<param><type><name pos:line="664" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="665" pos:column="5">( (This)-&gt;lpVtbl -&gt; AfterCompletorCommit(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="667" pos:column="1">#<cpp:directive pos:line="667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="667" pos:column="9">IVsIntellisenseHost_GetServiceProvider</name><parameter_list pos:line="667" pos:column="47">(<param><type><name pos:line="667" pos:column="48">This</name></type></param>,<param><type><name pos:line="667" pos:column="53">ppSP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="668" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServiceProvider(This,ppSP) )</cpp:value></cpp:define> 

<cpp:define pos:line="670" pos:column="1">#<cpp:directive pos:line="670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="670" pos:column="9">IVsIntellisenseHost_GetHostWindow</name><parameter_list pos:line="670" pos:column="42">(<param><type><name pos:line="670" pos:column="43">This</name></type></param>,<param><type><name pos:line="670" pos:column="48">hwnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="671" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostWindow(This,hwnd) )</cpp:value></cpp:define> 

<cpp:define pos:line="673" pos:column="1">#<cpp:directive pos:line="673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="673" pos:column="9">IVsIntellisenseHost_GetContextLocation</name><parameter_list pos:line="673" pos:column="47">(<param><type><name pos:line="673" pos:column="48">This</name></type></param>,<param><type><name pos:line="673" pos:column="53">iPos</name></type></param>,<param><type><name pos:line="673" pos:column="58">iLen</name></type></param>,<param><type><name pos:line="673" pos:column="63">fUseCaretPosition</name></type></param>,<param><type><name pos:line="673" pos:column="81">prc</name></type></param>,<param><type><name pos:line="673" pos:column="85">piTopX</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="674" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextLocation(This,iPos,iLen,fUseCaretPosition,prc,piTopX) )</cpp:value></cpp:define> 

<cpp:define pos:line="676" pos:column="1">#<cpp:directive pos:line="676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="676" pos:column="9">IVsIntellisenseHost_UpdateSmartTagWindow</name><parameter_list pos:line="676" pos:column="49">(<param><type><name pos:line="676" pos:column="50">This</name></type></param>,<param><type><name pos:line="676" pos:column="55">pSmartTagWnd</name></type></param>,<param><type><name pos:line="676" pos:column="68">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="677" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="679" pos:column="1">#<cpp:directive pos:line="679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="679" pos:column="9">IVsIntellisenseHost_GetSmartTagRect</name><parameter_list pos:line="679" pos:column="44">(<param><type><name pos:line="679" pos:column="45">This</name></type></param>,<param><type><name pos:line="679" pos:column="50">rcSmartTag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="680" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSmartTagRect(This,rcSmartTag) )</cpp:value></cpp:define> 

<cpp:endif pos:line="682" pos:column="1">#<cpp:directive pos:line="682" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="682" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="685" pos:column="1">#<cpp:directive pos:line="685" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="685" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="690" pos:column="1">#<cpp:directive pos:line="690" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="690" pos:column="9">/* __IVsIntellisenseHost_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="693" pos:column="1">#<cpp:directive pos:line="693" pos:column="2">ifndef</cpp:directive> <name pos:line="693" pos:column="9">__IVsTextViewIntellisenseHost_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="694" pos:column="1">#<cpp:directive pos:line="694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="694" pos:column="9">__IVsTextViewIntellisenseHost_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="696" pos:column="1">/* interface IVsTextViewIntellisenseHost */</comment>
<comment type="block" pos:line="697" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="700" pos:column="1">EXTERN_C</name> <specifier pos:line="700" pos:column="10">const</specifier> <name pos:line="700" pos:column="16">IID</name></type> <name pos:line="700" pos:column="20">IID_IVsTextViewIntellisenseHost</name></decl>;</decl_stmt>

<cpp:if pos:line="702" pos:column="1">#<cpp:directive pos:line="702" pos:column="2">if</cpp:directive> <expr><call><name pos:line="702" pos:column="5">defined</name><argument_list pos:line="702" pos:column="12">(<argument><expr><name pos:line="702" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="702" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="702" pos:column="29">!</op:operator><call><name pos:line="702" pos:column="30">defined</name><argument_list pos:line="702" pos:column="37">(<argument><expr><name pos:line="702" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="704" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="704" pos:column="19">(<argument pos:line="704" pos:column="20">"0816A38B-2B41-4d2a-B1FF-23C1E28D8A18"</argument>)</argument_list></macro>
    <label><name pos:line="705" pos:column="5">IVsTextViewIntellisenseHost</name> :</label> <expr_stmt><expr pos:line="705" pos:column="35">public <name pos:line="705" pos:column="42">IVsIntellisenseHost</name>
    <block pos:line="706" pos:column="5">{
    <expr pos:line="707" pos:column="5">public<op:operator pos:line="707" pos:column="11">:</op:operator>
        virtual <name pos:line="708" pos:column="17">HRESULT</name> <name pos:line="708" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="708" pos:column="43">SetSubjectFromPrimaryBuffer</name><argument_list pos:line="708" pos:column="70">( 
            <argument pos:line="709" pos:column="13">__RPC__in TextSpan *pSpanInPrimary</argument>)</argument_list></macro> <op:operator pos:line="709" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="709" pos:column="51">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="713" pos:column="1">#<cpp:directive pos:line="713" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="713" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="715" pos:column="5">typedef <type><struct pos:line="715" pos:column="13">struct <name pos:line="715" pos:column="20">IVsTextViewIntellisenseHostVtbl</name>
    <block pos:line="716" pos:column="5">{<public type="default" pos:line="716" pos:column="6">
        <function_decl><type><name pos:line="717" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="719" pos:column="9">HRESULT</name></type> ( <name pos:line="719" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="719" pos:column="37">*</type:modifier><name pos:line="719" pos:column="38">QueryInterface</name> )<parameter_list pos:line="719" pos:column="54">( 
            <param><decl><type><name pos:line="720" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="720" pos:column="41">*</type:modifier></type> <name pos:line="720" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="721" pos:column="24">__RPC__in</name> <name pos:line="721" pos:column="34">REFIID</name></type> <name pos:line="721" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="722" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="723" pos:column="13">__RPC__deref_out</name>  <name pos:line="723" pos:column="31">void</name> <type:modifier pos:line="723" pos:column="36">*</type:modifier><type:modifier pos:line="723" pos:column="37">*</type:modifier></type><name pos:line="723" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="725" pos:column="9">ULONG</name></type> ( <name pos:line="725" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="725" pos:column="35">*</type:modifier><name pos:line="725" pos:column="36">AddRef</name> )<parameter_list pos:line="725" pos:column="44">( 
            <param><decl><type><name pos:line="726" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="726" pos:column="41">*</type:modifier></type> <name pos:line="726" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="728" pos:column="9">ULONG</name></type> ( <name pos:line="728" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="728" pos:column="35">*</type:modifier><name pos:line="728" pos:column="36">Release</name> )<parameter_list pos:line="728" pos:column="45">( 
            <param><decl><type><name pos:line="729" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="729" pos:column="41">*</type:modifier></type> <name pos:line="729" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="731" pos:column="9">/* [input_sync] */</comment> <macro><name pos:line="731" pos:column="28">HRESULT</name> <argument_list pos:line="731" pos:column="36">( <argument pos:line="731" pos:column="38">STDMETHODCALLTYPE *QueryStatus</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="731" pos:column="70">(</op:operator> 
            <name pos:line="732" pos:column="13">IVsTextViewIntellisenseHost</name> <op:operator pos:line="732" pos:column="41">*</op:operator> <name pos:line="732" pos:column="43">This</name><op:operator pos:line="732" pos:column="47">,</op:operator>
            <comment type="block" pos:line="733" pos:column="13">/* [unique][in] */</comment> <name pos:line="733" pos:column="32">__RPC__in_opt</name> const <name pos:line="733" pos:column="52">GUID</name> <op:operator pos:line="733" pos:column="57">*</op:operator><name pos:line="733" pos:column="58">pguidCmdGroup</name><op:operator pos:line="733" pos:column="71">,</op:operator>
            <comment type="block" pos:line="734" pos:column="13">/* [in] */</comment> <name pos:line="734" pos:column="24">ULONG</name> <name pos:line="734" pos:column="30">cCmds</name><op:operator pos:line="734" pos:column="35">,</op:operator>
            <comment type="block" pos:line="735" pos:column="13">/* [out][in][size_is] */</comment> <macro><name pos:line="735" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="735" pos:column="62">(<argument pos:line="735" pos:column="63">cCmds</argument>)</argument_list></macro> <name pos:line="735" pos:column="70">OLECMD</name> <name><name pos:line="735" pos:column="77">prgCmds</name><index pos:line="735" pos:column="84">[  ]</index></name><op:operator pos:line="735" pos:column="88">,</op:operator>
            <comment type="block" pos:line="736" pos:column="13">/* [unique][out][in] */</comment> <name pos:line="736" pos:column="37">__RPC__inout_opt</name> <name pos:line="736" pos:column="54">OLECMDTEXT</name> <op:operator pos:line="736" pos:column="65">*</op:operator><name pos:line="736" pos:column="66">pCmdText</name><op:operator pos:line="736" pos:column="74">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="738" pos:column="9">HRESULT</name></type> ( <name pos:line="738" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="738" pos:column="37">*</type:modifier><name pos:line="738" pos:column="38">Exec</name> )<parameter_list pos:line="738" pos:column="44">( 
            <param><decl><type><name pos:line="739" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="739" pos:column="41">*</type:modifier></type> <name pos:line="739" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="740" pos:column="13">/* [unique][in] */</comment> <param><decl><type><name pos:line="740" pos:column="32">__RPC__in_opt</name> <specifier pos:line="740" pos:column="46">const</specifier> <name pos:line="740" pos:column="52">GUID</name> <type:modifier pos:line="740" pos:column="57">*</type:modifier></type><name pos:line="740" pos:column="58">pguidCmdGroup</name></decl></param>,
            <comment type="block" pos:line="741" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="741" pos:column="24">DWORD</name></type> <name pos:line="741" pos:column="30">nCmdID</name></decl></param>,
            <comment type="block" pos:line="742" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="742" pos:column="24">DWORD</name></type> <name pos:line="742" pos:column="30">nCmdexecopt</name></decl></param>,
            <comment type="block" pos:line="743" pos:column="13">/* [unique][in] */</comment> <param><decl><type><name pos:line="743" pos:column="32">__RPC__in_opt</name> <name pos:line="743" pos:column="46">VARIANT</name> <type:modifier pos:line="743" pos:column="54">*</type:modifier></type><name pos:line="743" pos:column="55">pvaIn</name></decl></param>,
            <comment type="block" pos:line="744" pos:column="13">/* [unique][out][in] */</comment> <param><decl><type><name pos:line="744" pos:column="37">__RPC__inout_opt</name> <name pos:line="744" pos:column="54">VARIANT</name> <type:modifier pos:line="744" pos:column="62">*</type:modifier></type><name pos:line="744" pos:column="63">pvaOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="746" pos:column="9">HRESULT</name></type> ( <name pos:line="746" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="746" pos:column="37">*</type:modifier><name pos:line="746" pos:column="38">GetHostFlags</name> )<parameter_list pos:line="746" pos:column="52">( 
            <param><decl><type><name pos:line="747" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="747" pos:column="41">*</type:modifier></type> <name pos:line="747" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="748" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="748" pos:column="33">__RPC__out</name> <name pos:line="748" pos:column="44">DWORD</name> <type:modifier pos:line="748" pos:column="50">*</type:modifier></type><name pos:line="748" pos:column="51">pdwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="750" pos:column="9">HRESULT</name></type> ( <name pos:line="750" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="750" pos:column="37">*</type:modifier><name pos:line="750" pos:column="38">GetContextBuffer</name> )<parameter_list pos:line="750" pos:column="56">( 
            <param><decl><type><name pos:line="751" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="751" pos:column="41">*</type:modifier></type> <name pos:line="751" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="752" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="752" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="752" pos:column="54">IVsTextLines</name> <type:modifier pos:line="752" pos:column="67">*</type:modifier><type:modifier pos:line="752" pos:column="68">*</type:modifier></type><name pos:line="752" pos:column="69">ppCtxBuffer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="754" pos:column="9">HRESULT</name></type> ( <name pos:line="754" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="754" pos:column="37">*</type:modifier><name pos:line="754" pos:column="38">GetContextFocalPoint</name> )<parameter_list pos:line="754" pos:column="60">( 
            <param><decl><type><name pos:line="755" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="755" pos:column="41">*</type:modifier></type> <name pos:line="755" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="756" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="756" pos:column="25">__RPC__out</name> <name pos:line="756" pos:column="36">TextSpan</name> <type:modifier pos:line="756" pos:column="45">*</type:modifier></type><name pos:line="756" pos:column="46">pSpan</name></decl></param>,
            <param><decl><type><name pos:line="757" pos:column="13">__RPC__in</name> <name pos:line="757" pos:column="23">long</name> <type:modifier pos:line="757" pos:column="28">*</type:modifier></type><name pos:line="757" pos:column="29">piLen</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="759" pos:column="9">HRESULT</name></type> ( <name pos:line="759" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="759" pos:column="37">*</type:modifier><name pos:line="759" pos:column="38">SetContextCaretPos</name> )<parameter_list pos:line="759" pos:column="58">( 
            <param><decl><type><name pos:line="760" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="760" pos:column="41">*</type:modifier></type> <name pos:line="760" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="761" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="761" pos:column="24">long</name></type> <name pos:line="761" pos:column="29">iLine</name></decl></param>,
            <comment type="block" pos:line="762" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="762" pos:column="24">long</name></type> <name pos:line="762" pos:column="29">iIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="764" pos:column="9">HRESULT</name></type> ( <name pos:line="764" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="764" pos:column="37">*</type:modifier><name pos:line="764" pos:column="38">GetContextCaretPos</name> )<parameter_list pos:line="764" pos:column="58">( 
            <param><decl><type><name pos:line="765" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="765" pos:column="41">*</type:modifier></type> <name pos:line="765" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="766" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="766" pos:column="25">__RPC__out</name> <name pos:line="766" pos:column="36">long</name> <type:modifier pos:line="766" pos:column="41">*</type:modifier></type><name pos:line="766" pos:column="42">piLine</name></decl></param>,
            <comment type="block" pos:line="767" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="767" pos:column="25">__RPC__out</name> <name pos:line="767" pos:column="36">long</name> <type:modifier pos:line="767" pos:column="41">*</type:modifier></type><name pos:line="767" pos:column="42">piIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="769" pos:column="9">HRESULT</name></type> ( <name pos:line="769" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="769" pos:column="37">*</type:modifier><name pos:line="769" pos:column="38">SetContextSelection</name> )<parameter_list pos:line="769" pos:column="59">( 
            <param><decl><type><name pos:line="770" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="770" pos:column="41">*</type:modifier></type> <name pos:line="770" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="771" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="771" pos:column="24">long</name></type> <name pos:line="771" pos:column="29">iStartLine</name></decl></param>,
            <comment type="block" pos:line="772" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="772" pos:column="24">long</name></type> <name pos:line="772" pos:column="29">iStartIndex</name></decl></param>,
            <comment type="block" pos:line="773" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="773" pos:column="24">long</name></type> <name pos:line="773" pos:column="29">iEndLine</name></decl></param>,
            <comment type="block" pos:line="774" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="774" pos:column="24">long</name></type> <name pos:line="774" pos:column="29">iEndIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="776" pos:column="9">HRESULT</name></type> ( <name pos:line="776" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="776" pos:column="37">*</type:modifier><name pos:line="776" pos:column="38">GetContextSelection</name> )<parameter_list pos:line="776" pos:column="59">( 
            <param><decl><type><name pos:line="777" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="777" pos:column="41">*</type:modifier></type> <name pos:line="777" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="778" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="778" pos:column="25">__RPC__out</name> <name pos:line="778" pos:column="36">TextSpan</name> <type:modifier pos:line="778" pos:column="45">*</type:modifier></type><name pos:line="778" pos:column="46">pSelectionSpan</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="780" pos:column="9">HRESULT</name></type> ( <name pos:line="780" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="780" pos:column="37">*</type:modifier><name pos:line="780" pos:column="38">GetSubjectText</name> )<parameter_list pos:line="780" pos:column="54">( 
            <param><decl><type><name pos:line="781" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="781" pos:column="41">*</type:modifier></type> <name pos:line="781" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="782" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="782" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="782" pos:column="54">BSTR</name> <type:modifier pos:line="782" pos:column="59">*</type:modifier></type><name pos:line="782" pos:column="60">pbstrSubjectText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="784" pos:column="9">HRESULT</name></type> ( <name pos:line="784" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="784" pos:column="37">*</type:modifier><name pos:line="784" pos:column="38">SetSubjectCaretPos</name> )<parameter_list pos:line="784" pos:column="58">( 
            <param><decl><type><name pos:line="785" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="785" pos:column="41">*</type:modifier></type> <name pos:line="785" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="786" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="786" pos:column="24">long</name></type> <name pos:line="786" pos:column="29">iIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="788" pos:column="9">HRESULT</name></type> ( <name pos:line="788" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="788" pos:column="37">*</type:modifier><name pos:line="788" pos:column="38">GetSubjectCaretPos</name> )<parameter_list pos:line="788" pos:column="58">( 
            <param><decl><type><name pos:line="789" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="789" pos:column="41">*</type:modifier></type> <name pos:line="789" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="790" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="790" pos:column="25">__RPC__out</name> <name pos:line="790" pos:column="36">long</name> <type:modifier pos:line="790" pos:column="41">*</type:modifier></type><name pos:line="790" pos:column="42">piIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="792" pos:column="9">HRESULT</name></type> ( <name pos:line="792" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="792" pos:column="37">*</type:modifier><name pos:line="792" pos:column="38">SetSubjectSelection</name> )<parameter_list pos:line="792" pos:column="59">( 
            <param><decl><type><name pos:line="793" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="793" pos:column="41">*</type:modifier></type> <name pos:line="793" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="794" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="794" pos:column="24">long</name></type> <name pos:line="794" pos:column="29">iAnchorIndex</name></decl></param>,
            <comment type="block" pos:line="795" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="795" pos:column="24">long</name></type> <name pos:line="795" pos:column="29">iEndIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="797" pos:column="9">HRESULT</name></type> ( <name pos:line="797" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="797" pos:column="37">*</type:modifier><name pos:line="797" pos:column="38">GetSubjectSelection</name> )<parameter_list pos:line="797" pos:column="59">( 
            <param><decl><type><name pos:line="798" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="798" pos:column="41">*</type:modifier></type> <name pos:line="798" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="799" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="799" pos:column="25">__RPC__out</name> <name pos:line="799" pos:column="36">long</name> <type:modifier pos:line="799" pos:column="41">*</type:modifier></type><name pos:line="799" pos:column="42">piAnchorIndex</name></decl></param>,
            <comment type="block" pos:line="800" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="800" pos:column="25">__RPC__out</name> <name pos:line="800" pos:column="36">long</name> <type:modifier pos:line="800" pos:column="41">*</type:modifier></type><name pos:line="800" pos:column="42">piEndIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="802" pos:column="9">HRESULT</name></type> ( <name pos:line="802" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="802" pos:column="37">*</type:modifier><name pos:line="802" pos:column="38">ReplaceSubjectTextSpan</name> )<parameter_list pos:line="802" pos:column="62">( 
            <param><decl><type><name pos:line="803" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="803" pos:column="41">*</type:modifier></type> <name pos:line="803" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="804" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="804" pos:column="24">long</name></type> <name pos:line="804" pos:column="29">iStartIndex</name></decl></param>,
            <comment type="block" pos:line="805" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="805" pos:column="24">long</name></type> <name pos:line="805" pos:column="29">iEndIndex</name></decl></param>,
            <comment type="block" pos:line="806" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="806" pos:column="24">__RPC__in</name> <name pos:line="806" pos:column="34">LPCWSTR</name></type> <name pos:line="806" pos:column="42">pszText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="808" pos:column="9">HRESULT</name></type> ( <name pos:line="808" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="808" pos:column="37">*</type:modifier><name pos:line="808" pos:column="38">UpdateCompletionStatus</name> )<parameter_list pos:line="808" pos:column="62">( 
            <param><decl><type><name pos:line="809" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="809" pos:column="41">*</type:modifier></type> <name pos:line="809" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="810" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="810" pos:column="24">__RPC__in_opt</name> <name pos:line="810" pos:column="38">IVsCompletionSet</name> <type:modifier pos:line="810" pos:column="55">*</type:modifier></type><name pos:line="810" pos:column="56">pCompSet</name></decl></param>,
            <comment type="block" pos:line="811" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="811" pos:column="24">DWORD</name></type> <name pos:line="811" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="813" pos:column="9">HRESULT</name></type> ( <name pos:line="813" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="813" pos:column="37">*</type:modifier><name pos:line="813" pos:column="38">UpdateTipWindow</name> )<parameter_list pos:line="813" pos:column="55">( 
            <param><decl><type><name pos:line="814" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="814" pos:column="41">*</type:modifier></type> <name pos:line="814" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="815" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="815" pos:column="24">__RPC__in_opt</name> <name pos:line="815" pos:column="38">IVsTipWindow</name> <type:modifier pos:line="815" pos:column="51">*</type:modifier></type><name pos:line="815" pos:column="52">pTipWindow</name></decl></param>,
            <comment type="block" pos:line="816" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="816" pos:column="24">DWORD</name></type> <name pos:line="816" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="818" pos:column="9">HRESULT</name> <argument_list pos:line="818" pos:column="17">( <argument pos:line="818" pos:column="19">STDMETHODCALLTYPE *HighlightMatchingBrace</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="818" pos:column="62">(</op:operator> 
            <name pos:line="819" pos:column="13">IVsTextViewIntellisenseHost</name> <op:operator pos:line="819" pos:column="41">*</op:operator> <name pos:line="819" pos:column="43">This</name><op:operator pos:line="819" pos:column="47">,</op:operator>
            <comment type="block" pos:line="820" pos:column="13">/* [in] */</comment> <name pos:line="820" pos:column="24">DWORD</name> <name pos:line="820" pos:column="30">dwFlags</name><op:operator pos:line="820" pos:column="37">,</op:operator>
            <comment type="block" pos:line="821" pos:column="13">/* [in] */</comment> <name pos:line="821" pos:column="24">ULONG</name> <name pos:line="821" pos:column="30">cSpans</name><op:operator pos:line="821" pos:column="36">,</op:operator>
            <comment type="block" pos:line="822" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="822" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="822" pos:column="54">(<argument pos:line="822" pos:column="55">cSpans</argument>)</argument_list></macro> <name pos:line="822" pos:column="63">TextSpan</name> <op:operator pos:line="822" pos:column="72">*</op:operator><name pos:line="822" pos:column="73">rgBaseSpans</name><op:operator pos:line="822" pos:column="84">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="824" pos:column="9">HRESULT</name></type> ( <name pos:line="824" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="824" pos:column="37">*</type:modifier><name pos:line="824" pos:column="38">BeforeCompletorCommit</name> )<parameter_list pos:line="824" pos:column="61">( 
            <param><decl><type><name pos:line="825" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="825" pos:column="41">*</type:modifier></type> <name pos:line="825" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="827" pos:column="9">HRESULT</name></type> ( <name pos:line="827" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="827" pos:column="37">*</type:modifier><name pos:line="827" pos:column="38">AfterCompletorCommit</name> )<parameter_list pos:line="827" pos:column="60">( 
            <param><decl><type><name pos:line="828" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="828" pos:column="41">*</type:modifier></type> <name pos:line="828" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="830" pos:column="9">HRESULT</name></type> ( <name pos:line="830" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="830" pos:column="37">*</type:modifier><name pos:line="830" pos:column="38">GetServiceProvider</name> )<parameter_list pos:line="830" pos:column="58">( 
            <param><decl><type><name pos:line="831" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="831" pos:column="41">*</type:modifier></type> <name pos:line="831" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="832" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="832" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="832" pos:column="46">IServiceProvider</name> <type:modifier pos:line="832" pos:column="63">*</type:modifier><type:modifier pos:line="832" pos:column="64">*</type:modifier></type><name pos:line="832" pos:column="65">ppSP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="834" pos:column="9">HRESULT</name></type> ( <name pos:line="834" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="834" pos:column="37">*</type:modifier><name pos:line="834" pos:column="38">GetHostWindow</name> )<parameter_list pos:line="834" pos:column="53">( 
            <param><decl><type><name pos:line="835" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="835" pos:column="41">*</type:modifier></type> <name pos:line="835" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="836" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="836" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="836" pos:column="46">HWND</name> <type:modifier pos:line="836" pos:column="51">*</type:modifier></type><name pos:line="836" pos:column="52">hwnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="838" pos:column="9">HRESULT</name></type> ( <name pos:line="838" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="838" pos:column="37">*</type:modifier><name pos:line="838" pos:column="38">GetContextLocation</name> )<parameter_list pos:line="838" pos:column="58">( 
            <param><decl><type><name pos:line="839" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="839" pos:column="41">*</type:modifier></type> <name pos:line="839" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="840" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="840" pos:column="24">long</name></type> <name pos:line="840" pos:column="29">iPos</name></decl></param>,
            <comment type="block" pos:line="841" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="841" pos:column="24">long</name></type> <name pos:line="841" pos:column="29">iLen</name></decl></param>,
            <comment type="block" pos:line="842" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="842" pos:column="24">BOOL</name></type> <name pos:line="842" pos:column="29">fUseCaretPosition</name></decl></param>,
            <comment type="block" pos:line="843" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="843" pos:column="25">__RPC__out</name> <name pos:line="843" pos:column="36">RECT</name> <type:modifier pos:line="843" pos:column="41">*</type:modifier></type><name pos:line="843" pos:column="42">prc</name></decl></param>,
            <comment type="block" pos:line="844" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="844" pos:column="25">__RPC__out</name> <name pos:line="844" pos:column="36">long</name> <type:modifier pos:line="844" pos:column="41">*</type:modifier></type><name pos:line="844" pos:column="42">piTopX</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="846" pos:column="9">HRESULT</name></type> ( <name pos:line="846" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="846" pos:column="37">*</type:modifier><name pos:line="846" pos:column="38">UpdateSmartTagWindow</name> )<parameter_list pos:line="846" pos:column="60">( 
            <param><decl><type><name pos:line="847" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="847" pos:column="41">*</type:modifier></type> <name pos:line="847" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="848" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="848" pos:column="24">__RPC__in_opt</name> <name pos:line="848" pos:column="38">IVsSmartTagTipWindow</name> <type:modifier pos:line="848" pos:column="59">*</type:modifier></type><name pos:line="848" pos:column="60">pSmartTagWnd</name></decl></param>,
            <comment type="block" pos:line="849" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="849" pos:column="24">DWORD</name></type> <name pos:line="849" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="851" pos:column="9">HRESULT</name></type> ( <name pos:line="851" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="851" pos:column="37">*</type:modifier><name pos:line="851" pos:column="38">GetSmartTagRect</name> )<parameter_list pos:line="851" pos:column="55">( 
            <param><decl><type><name pos:line="852" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="852" pos:column="41">*</type:modifier></type> <name pos:line="852" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="853" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="853" pos:column="25">__RPC__out</name> <name pos:line="853" pos:column="36">RECT</name> <type:modifier pos:line="853" pos:column="41">*</type:modifier></type><name pos:line="853" pos:column="42">rcSmartTag</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="855" pos:column="9">HRESULT</name></type> ( <name pos:line="855" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="855" pos:column="37">*</type:modifier><name pos:line="855" pos:column="38">SetSubjectFromPrimaryBuffer</name> )<parameter_list pos:line="855" pos:column="67">( 
            <param><decl><type><name pos:line="856" pos:column="13">IVsTextViewIntellisenseHost</name> <type:modifier pos:line="856" pos:column="41">*</type:modifier></type> <name pos:line="856" pos:column="43">This</name></decl></param>,
            <param><decl><type><name pos:line="857" pos:column="13">__RPC__in</name> <name pos:line="857" pos:column="23">TextSpan</name> <type:modifier pos:line="857" pos:column="32">*</type:modifier></type><name pos:line="857" pos:column="33">pSpanInPrimary</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="859" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="860" pos:column="7">IVsTextViewIntellisenseHostVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="862" pos:column="5">interface</name></type> <name pos:line="862" pos:column="15">IVsTextViewIntellisenseHost</name>
    <argument_list pos:line="863" pos:column="5">{
        <argument><expr><name pos:line="864" pos:column="9">CONST_VTBL</name> struct <name pos:line="864" pos:column="27">IVsTextViewIntellisenseHostVtbl</name> <op:operator pos:line="864" pos:column="59">*</op:operator><name pos:line="864" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="869" pos:column="1">#<cpp:directive pos:line="869" pos:column="2">ifdef</cpp:directive> <name pos:line="869" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="872" pos:column="1">#<cpp:directive pos:line="872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="872" pos:column="9">IVsTextViewIntellisenseHost_QueryInterface</name><parameter_list pos:line="872" pos:column="51">(<param><type><name pos:line="872" pos:column="52">This</name></type></param>,<param><type><name pos:line="872" pos:column="57">riid</name></type></param>,<param><type><name pos:line="872" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="873" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="875" pos:column="1">#<cpp:directive pos:line="875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="875" pos:column="9">IVsTextViewIntellisenseHost_AddRef</name><parameter_list pos:line="875" pos:column="43">(<param><type><name pos:line="875" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="876" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="878" pos:column="1">#<cpp:directive pos:line="878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="878" pos:column="9">IVsTextViewIntellisenseHost_Release</name><parameter_list pos:line="878" pos:column="44">(<param><type><name pos:line="878" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="879" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="882" pos:column="1">#<cpp:directive pos:line="882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="882" pos:column="9">IVsTextViewIntellisenseHost_QueryStatus</name><parameter_list pos:line="882" pos:column="48">(<param><type><name pos:line="882" pos:column="49">This</name></type></param>,<param><type><name pos:line="882" pos:column="54">pguidCmdGroup</name></type></param>,<param><type><name pos:line="882" pos:column="68">cCmds</name></type></param>,<param><type><name pos:line="882" pos:column="74">prgCmds</name></type></param>,<param><type><name pos:line="882" pos:column="82">pCmdText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="883" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText) )</cpp:value></cpp:define> 

<cpp:define pos:line="885" pos:column="1">#<cpp:directive pos:line="885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="885" pos:column="9">IVsTextViewIntellisenseHost_Exec</name><parameter_list pos:line="885" pos:column="41">(<param><type><name pos:line="885" pos:column="42">This</name></type></param>,<param><type><name pos:line="885" pos:column="47">pguidCmdGroup</name></type></param>,<param><type><name pos:line="885" pos:column="61">nCmdID</name></type></param>,<param><type><name pos:line="885" pos:column="68">nCmdexecopt</name></type></param>,<param><type><name pos:line="885" pos:column="80">pvaIn</name></type></param>,<param><type><name pos:line="885" pos:column="86">pvaOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="886" pos:column="5">( (This)-&gt;lpVtbl -&gt; Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut) )</cpp:value></cpp:define> 


<cpp:define pos:line="889" pos:column="1">#<cpp:directive pos:line="889" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="889" pos:column="9">IVsTextViewIntellisenseHost_GetHostFlags</name><parameter_list pos:line="889" pos:column="49">(<param><type><name pos:line="889" pos:column="50">This</name></type></param>,<param><type><name pos:line="889" pos:column="55">pdwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="890" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostFlags(This,pdwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="892" pos:column="1">#<cpp:directive pos:line="892" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="892" pos:column="9">IVsTextViewIntellisenseHost_GetContextBuffer</name><parameter_list pos:line="892" pos:column="53">(<param><type><name pos:line="892" pos:column="54">This</name></type></param>,<param><type><name pos:line="892" pos:column="59">ppCtxBuffer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="893" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextBuffer(This,ppCtxBuffer) )</cpp:value></cpp:define> 

<cpp:define pos:line="895" pos:column="1">#<cpp:directive pos:line="895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="895" pos:column="9">IVsTextViewIntellisenseHost_GetContextFocalPoint</name><parameter_list pos:line="895" pos:column="57">(<param><type><name pos:line="895" pos:column="58">This</name></type></param>,<param><type><name pos:line="895" pos:column="63">pSpan</name></type></param>,<param><type><name pos:line="895" pos:column="69">piLen</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="896" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextFocalPoint(This,pSpan,piLen) )</cpp:value></cpp:define> 

<cpp:define pos:line="898" pos:column="1">#<cpp:directive pos:line="898" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="898" pos:column="9">IVsTextViewIntellisenseHost_SetContextCaretPos</name><parameter_list pos:line="898" pos:column="55">(<param><type><name pos:line="898" pos:column="56">This</name></type></param>,<param><type><name pos:line="898" pos:column="61">iLine</name></type></param>,<param><type><name pos:line="898" pos:column="67">iIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="899" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetContextCaretPos(This,iLine,iIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="901" pos:column="1">#<cpp:directive pos:line="901" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="901" pos:column="9">IVsTextViewIntellisenseHost_GetContextCaretPos</name><parameter_list pos:line="901" pos:column="55">(<param><type><name pos:line="901" pos:column="56">This</name></type></param>,<param><type><name pos:line="901" pos:column="61">piLine</name></type></param>,<param><type><name pos:line="901" pos:column="68">piIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="902" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextCaretPos(This,piLine,piIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="904" pos:column="1">#<cpp:directive pos:line="904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="904" pos:column="9">IVsTextViewIntellisenseHost_SetContextSelection</name><parameter_list pos:line="904" pos:column="56">(<param><type><name pos:line="904" pos:column="57">This</name></type></param>,<param><type><name pos:line="904" pos:column="62">iStartLine</name></type></param>,<param><type><name pos:line="904" pos:column="73">iStartIndex</name></type></param>,<param><type><name pos:line="904" pos:column="85">iEndLine</name></type></param>,<param><type><name pos:line="904" pos:column="94">iEndIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="905" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetContextSelection(This,iStartLine,iStartIndex,iEndLine,iEndIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="907" pos:column="1">#<cpp:directive pos:line="907" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="907" pos:column="9">IVsTextViewIntellisenseHost_GetContextSelection</name><parameter_list pos:line="907" pos:column="56">(<param><type><name pos:line="907" pos:column="57">This</name></type></param>,<param><type><name pos:line="907" pos:column="62">pSelectionSpan</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="908" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextSelection(This,pSelectionSpan) )</cpp:value></cpp:define> 

<cpp:define pos:line="910" pos:column="1">#<cpp:directive pos:line="910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="910" pos:column="9">IVsTextViewIntellisenseHost_GetSubjectText</name><parameter_list pos:line="910" pos:column="51">(<param><type><name pos:line="910" pos:column="52">This</name></type></param>,<param><type><name pos:line="910" pos:column="57">pbstrSubjectText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="911" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSubjectText(This,pbstrSubjectText) )</cpp:value></cpp:define> 

<cpp:define pos:line="913" pos:column="1">#<cpp:directive pos:line="913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="913" pos:column="9">IVsTextViewIntellisenseHost_SetSubjectCaretPos</name><parameter_list pos:line="913" pos:column="55">(<param><type><name pos:line="913" pos:column="56">This</name></type></param>,<param><type><name pos:line="913" pos:column="61">iIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="914" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSubjectCaretPos(This,iIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="916" pos:column="1">#<cpp:directive pos:line="916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="916" pos:column="9">IVsTextViewIntellisenseHost_GetSubjectCaretPos</name><parameter_list pos:line="916" pos:column="55">(<param><type><name pos:line="916" pos:column="56">This</name></type></param>,<param><type><name pos:line="916" pos:column="61">piIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="917" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSubjectCaretPos(This,piIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="919" pos:column="1">#<cpp:directive pos:line="919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="919" pos:column="9">IVsTextViewIntellisenseHost_SetSubjectSelection</name><parameter_list pos:line="919" pos:column="56">(<param><type><name pos:line="919" pos:column="57">This</name></type></param>,<param><type><name pos:line="919" pos:column="62">iAnchorIndex</name></type></param>,<param><type><name pos:line="919" pos:column="75">iEndIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="920" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSubjectSelection(This,iAnchorIndex,iEndIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="922" pos:column="9">IVsTextViewIntellisenseHost_GetSubjectSelection</name><parameter_list pos:line="922" pos:column="56">(<param><type><name pos:line="922" pos:column="57">This</name></type></param>,<param><type><name pos:line="922" pos:column="62">piAnchorIndex</name></type></param>,<param><type><name pos:line="922" pos:column="76">piEndIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="923" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSubjectSelection(This,piAnchorIndex,piEndIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="925" pos:column="1">#<cpp:directive pos:line="925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="925" pos:column="9">IVsTextViewIntellisenseHost_ReplaceSubjectTextSpan</name><parameter_list pos:line="925" pos:column="59">(<param><type><name pos:line="925" pos:column="60">This</name></type></param>,<param><type><name pos:line="925" pos:column="65">iStartIndex</name></type></param>,<param><type><name pos:line="925" pos:column="77">iEndIndex</name></type></param>,<param><type><name pos:line="925" pos:column="87">pszText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="926" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReplaceSubjectTextSpan(This,iStartIndex,iEndIndex,pszText) )</cpp:value></cpp:define> 

<cpp:define pos:line="928" pos:column="1">#<cpp:directive pos:line="928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="928" pos:column="9">IVsTextViewIntellisenseHost_UpdateCompletionStatus</name><parameter_list pos:line="928" pos:column="59">(<param><type><name pos:line="928" pos:column="60">This</name></type></param>,<param><type><name pos:line="928" pos:column="65">pCompSet</name></type></param>,<param><type><name pos:line="928" pos:column="74">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="929" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateCompletionStatus(This,pCompSet,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="931" pos:column="1">#<cpp:directive pos:line="931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="931" pos:column="9">IVsTextViewIntellisenseHost_UpdateTipWindow</name><parameter_list pos:line="931" pos:column="52">(<param><type><name pos:line="931" pos:column="53">This</name></type></param>,<param><type><name pos:line="931" pos:column="58">pTipWindow</name></type></param>,<param><type><name pos:line="931" pos:column="69">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="932" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateTipWindow(This,pTipWindow,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="934" pos:column="1">#<cpp:directive pos:line="934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="934" pos:column="9">IVsTextViewIntellisenseHost_HighlightMatchingBrace</name><parameter_list pos:line="934" pos:column="59">(<param><type><name pos:line="934" pos:column="60">This</name></type></param>,<param><type><name pos:line="934" pos:column="65">dwFlags</name></type></param>,<param><type><name pos:line="934" pos:column="73">cSpans</name></type></param>,<param><type><name pos:line="934" pos:column="80">rgBaseSpans</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="935" pos:column="5">( (This)-&gt;lpVtbl -&gt; HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans) )</cpp:value></cpp:define> 

<cpp:define pos:line="937" pos:column="1">#<cpp:directive pos:line="937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="937" pos:column="9">IVsTextViewIntellisenseHost_BeforeCompletorCommit</name><parameter_list pos:line="937" pos:column="58">(<param><type><name pos:line="937" pos:column="59">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="938" pos:column="5">( (This)-&gt;lpVtbl -&gt; BeforeCompletorCommit(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="940" pos:column="1">#<cpp:directive pos:line="940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="940" pos:column="9">IVsTextViewIntellisenseHost_AfterCompletorCommit</name><parameter_list pos:line="940" pos:column="57">(<param><type><name pos:line="940" pos:column="58">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="941" pos:column="5">( (This)-&gt;lpVtbl -&gt; AfterCompletorCommit(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="943" pos:column="1">#<cpp:directive pos:line="943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="943" pos:column="9">IVsTextViewIntellisenseHost_GetServiceProvider</name><parameter_list pos:line="943" pos:column="55">(<param><type><name pos:line="943" pos:column="56">This</name></type></param>,<param><type><name pos:line="943" pos:column="61">ppSP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="944" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServiceProvider(This,ppSP) )</cpp:value></cpp:define> 

<cpp:define pos:line="946" pos:column="1">#<cpp:directive pos:line="946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="946" pos:column="9">IVsTextViewIntellisenseHost_GetHostWindow</name><parameter_list pos:line="946" pos:column="50">(<param><type><name pos:line="946" pos:column="51">This</name></type></param>,<param><type><name pos:line="946" pos:column="56">hwnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="947" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostWindow(This,hwnd) )</cpp:value></cpp:define> 

<cpp:define pos:line="949" pos:column="1">#<cpp:directive pos:line="949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="949" pos:column="9">IVsTextViewIntellisenseHost_GetContextLocation</name><parameter_list pos:line="949" pos:column="55">(<param><type><name pos:line="949" pos:column="56">This</name></type></param>,<param><type><name pos:line="949" pos:column="61">iPos</name></type></param>,<param><type><name pos:line="949" pos:column="66">iLen</name></type></param>,<param><type><name pos:line="949" pos:column="71">fUseCaretPosition</name></type></param>,<param><type><name pos:line="949" pos:column="89">prc</name></type></param>,<param><type><name pos:line="949" pos:column="93">piTopX</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="950" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetContextLocation(This,iPos,iLen,fUseCaretPosition,prc,piTopX) )</cpp:value></cpp:define> 

<cpp:define pos:line="952" pos:column="1">#<cpp:directive pos:line="952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="952" pos:column="9">IVsTextViewIntellisenseHost_UpdateSmartTagWindow</name><parameter_list pos:line="952" pos:column="57">(<param><type><name pos:line="952" pos:column="58">This</name></type></param>,<param><type><name pos:line="952" pos:column="63">pSmartTagWnd</name></type></param>,<param><type><name pos:line="952" pos:column="76">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="953" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="955" pos:column="1">#<cpp:directive pos:line="955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="955" pos:column="9">IVsTextViewIntellisenseHost_GetSmartTagRect</name><parameter_list pos:line="955" pos:column="52">(<param><type><name pos:line="955" pos:column="53">This</name></type></param>,<param><type><name pos:line="955" pos:column="58">rcSmartTag</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="956" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSmartTagRect(This,rcSmartTag) )</cpp:value></cpp:define> 


<cpp:define pos:line="959" pos:column="1">#<cpp:directive pos:line="959" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="959" pos:column="9">IVsTextViewIntellisenseHost_SetSubjectFromPrimaryBuffer</name><parameter_list pos:line="959" pos:column="64">(<param><type><name pos:line="959" pos:column="65">This</name></type></param>,<param><type><name pos:line="959" pos:column="70">pSpanInPrimary</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="960" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSubjectFromPrimaryBuffer(This,pSpanInPrimary) )</cpp:value></cpp:define> 

<cpp:endif pos:line="962" pos:column="1">#<cpp:directive pos:line="962" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="962" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="965" pos:column="1">#<cpp:directive pos:line="965" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="965" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="970" pos:column="1">#<cpp:directive pos:line="970" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="970" pos:column="9">/* __IVsTextViewIntellisenseHost_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="973" pos:column="1">#<cpp:directive pos:line="973" pos:column="2">ifndef</cpp:directive> <name pos:line="973" pos:column="9">__IVsTextViewIntellisenseHostProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="974" pos:column="1">#<cpp:directive pos:line="974" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="974" pos:column="9">__IVsTextViewIntellisenseHostProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="976" pos:column="1">/* interface IVsTextViewIntellisenseHostProvider */</comment>
<comment type="block" pos:line="977" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="980" pos:column="1">EXTERN_C</name> <specifier pos:line="980" pos:column="10">const</specifier> <name pos:line="980" pos:column="16">IID</name></type> <name pos:line="980" pos:column="20">IID_IVsTextViewIntellisenseHostProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="982" pos:column="1">#<cpp:directive pos:line="982" pos:column="2">if</cpp:directive> <expr><call><name pos:line="982" pos:column="5">defined</name><argument_list pos:line="982" pos:column="12">(<argument><expr><name pos:line="982" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="982" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="982" pos:column="29">!</op:operator><call><name pos:line="982" pos:column="30">defined</name><argument_list pos:line="982" pos:column="37">(<argument><expr><name pos:line="982" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="984" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="984" pos:column="19">(<argument pos:line="984" pos:column="20">"2E758295-344B-48d6-86AC-BD81F89CB4B8"</argument>)</argument_list></macro>
    <label><name pos:line="985" pos:column="5">IVsTextViewIntellisenseHostProvider</name> :</label> <expr_stmt><expr pos:line="985" pos:column="43">public <name pos:line="985" pos:column="50">IUnknown</name>
    <block pos:line="986" pos:column="5">{
    <expr pos:line="987" pos:column="5">public<op:operator pos:line="987" pos:column="11">:</op:operator>
        virtual <name pos:line="988" pos:column="17">HRESULT</name> <name pos:line="988" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="988" pos:column="43">CreateIntellisenseHost</name><argument_list pos:line="988" pos:column="65">( 
            <comment type="block" pos:line="989" pos:column="13">/* [in] */</comment> <argument pos:line="989" pos:column="24">__RPC__in_opt IVsTextBufferCoordinator *pBufferCoordinator</argument>,
            <comment type="block" pos:line="990" pos:column="13">/* [in] */</comment> <argument pos:line="990" pos:column="24">__RPC__in REFIID riid</argument>,
            <comment type="block" pos:line="991" pos:column="13">/* [iid_is][out] */</comment> <argument pos:line="991" pos:column="33">__RPC__deref_out_opt void **ppunkHost</argument>)</argument_list></macro> <op:operator pos:line="991" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="991" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="995" pos:column="1">#<cpp:directive pos:line="995" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="995" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="997" pos:column="5">typedef <type><struct pos:line="997" pos:column="13">struct <name pos:line="997" pos:column="20">IVsTextViewIntellisenseHostProviderVtbl</name>
    <block pos:line="998" pos:column="5">{<public type="default" pos:line="998" pos:column="6">
        <function_decl><type><name pos:line="999" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1001" pos:column="9">HRESULT</name></type> ( <name pos:line="1001" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1001" pos:column="37">*</type:modifier><name pos:line="1001" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1001" pos:column="54">( 
            <param><decl><type><name pos:line="1002" pos:column="13">IVsTextViewIntellisenseHostProvider</name> <type:modifier pos:line="1002" pos:column="49">*</type:modifier></type> <name pos:line="1002" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="1003" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1003" pos:column="24">__RPC__in</name> <name pos:line="1003" pos:column="34">REFIID</name></type> <name pos:line="1003" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1004" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1005" pos:column="13">__RPC__deref_out</name>  <name pos:line="1005" pos:column="31">void</name> <type:modifier pos:line="1005" pos:column="36">*</type:modifier><type:modifier pos:line="1005" pos:column="37">*</type:modifier></type><name pos:line="1005" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1007" pos:column="9">ULONG</name></type> ( <name pos:line="1007" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1007" pos:column="35">*</type:modifier><name pos:line="1007" pos:column="36">AddRef</name> )<parameter_list pos:line="1007" pos:column="44">( 
            <param><decl><type><name pos:line="1008" pos:column="13">IVsTextViewIntellisenseHostProvider</name> <type:modifier pos:line="1008" pos:column="49">*</type:modifier></type> <name pos:line="1008" pos:column="51">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1010" pos:column="9">ULONG</name></type> ( <name pos:line="1010" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1010" pos:column="35">*</type:modifier><name pos:line="1010" pos:column="36">Release</name> )<parameter_list pos:line="1010" pos:column="45">( 
            <param><decl><type><name pos:line="1011" pos:column="13">IVsTextViewIntellisenseHostProvider</name> <type:modifier pos:line="1011" pos:column="49">*</type:modifier></type> <name pos:line="1011" pos:column="51">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1013" pos:column="9">HRESULT</name></type> ( <name pos:line="1013" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1013" pos:column="37">*</type:modifier><name pos:line="1013" pos:column="38">CreateIntellisenseHost</name> )<parameter_list pos:line="1013" pos:column="62">( 
            <param><decl><type><name pos:line="1014" pos:column="13">IVsTextViewIntellisenseHostProvider</name> <type:modifier pos:line="1014" pos:column="49">*</type:modifier></type> <name pos:line="1014" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="1015" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1015" pos:column="24">__RPC__in_opt</name> <name pos:line="1015" pos:column="38">IVsTextBufferCoordinator</name> <type:modifier pos:line="1015" pos:column="63">*</type:modifier></type><name pos:line="1015" pos:column="64">pBufferCoordinator</name></decl></param>,
            <comment type="block" pos:line="1016" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1016" pos:column="24">__RPC__in</name> <name pos:line="1016" pos:column="34">REFIID</name></type> <name pos:line="1016" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1017" pos:column="13">/* [iid_is][out] */</comment> <param><decl><type><name pos:line="1017" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1017" pos:column="54">void</name> <type:modifier pos:line="1017" pos:column="59">*</type:modifier><type:modifier pos:line="1017" pos:column="60">*</type:modifier></type><name pos:line="1017" pos:column="61">ppunkHost</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1019" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1020" pos:column="7">IVsTextViewIntellisenseHostProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1022" pos:column="5">interface</name></type> <name pos:line="1022" pos:column="15">IVsTextViewIntellisenseHostProvider</name>
    <argument_list pos:line="1023" pos:column="5">{
        <argument><expr><name pos:line="1024" pos:column="9">CONST_VTBL</name> struct <name pos:line="1024" pos:column="27">IVsTextViewIntellisenseHostProviderVtbl</name> <op:operator pos:line="1024" pos:column="67">*</op:operator><name pos:line="1024" pos:column="68">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1029" pos:column="1">#<cpp:directive pos:line="1029" pos:column="2">ifdef</cpp:directive> <name pos:line="1029" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1032" pos:column="1">#<cpp:directive pos:line="1032" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1032" pos:column="9">IVsTextViewIntellisenseHostProvider_QueryInterface</name><parameter_list pos:line="1032" pos:column="59">(<param><type><name pos:line="1032" pos:column="60">This</name></type></param>,<param><type><name pos:line="1032" pos:column="65">riid</name></type></param>,<param><type><name pos:line="1032" pos:column="70">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1033" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1035" pos:column="1">#<cpp:directive pos:line="1035" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1035" pos:column="9">IVsTextViewIntellisenseHostProvider_AddRef</name><parameter_list pos:line="1035" pos:column="51">(<param><type><name pos:line="1035" pos:column="52">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1036" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1038" pos:column="1">#<cpp:directive pos:line="1038" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1038" pos:column="9">IVsTextViewIntellisenseHostProvider_Release</name><parameter_list pos:line="1038" pos:column="52">(<param><type><name pos:line="1038" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1039" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1042" pos:column="1">#<cpp:directive pos:line="1042" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1042" pos:column="9">IVsTextViewIntellisenseHostProvider_CreateIntellisenseHost</name><parameter_list pos:line="1042" pos:column="67">(<param><type><name pos:line="1042" pos:column="68">This</name></type></param>,<param><type><name pos:line="1042" pos:column="73">pBufferCoordinator</name></type></param>,<param><type><name pos:line="1042" pos:column="92">riid</name></type></param>,<param><type><name pos:line="1042" pos:column="97">ppunkHost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1043" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateIntellisenseHost(This,pBufferCoordinator,riid,ppunkHost) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1045" pos:column="1">#<cpp:directive pos:line="1045" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1045" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1048" pos:column="1">#<cpp:directive pos:line="1048" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1048" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1053" pos:column="1">#<cpp:directive pos:line="1053" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1053" pos:column="9">/* __IVsTextViewIntellisenseHostProvider_INTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="1056" pos:column="1">EXTERN_C</name> <specifier pos:line="1056" pos:column="10">const</specifier> <name pos:line="1056" pos:column="16">CLSID</name></type> <name pos:line="1056" pos:column="22">CLSID_VsIntellisenseCompletor</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="1058" pos:column="1">#<cpp:directive pos:line="1058" pos:column="2">ifdef</cpp:directive> <name pos:line="1058" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="1060" pos:column="1">class</type> <name pos:line="1060" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="1060" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="1060" pos:column="21">"F2073DB0-75B9-43ae-8681-0962C0CD4BE2"</lit:literal></expr></argument>)</argument_list>
<name pos:line="1061" pos:column="1">VsIntellisenseCompletor</name></decl>;</decl_stmt>
<cpp:endif pos:line="1062" pos:column="1">#<cpp:directive pos:line="1062" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="1064" pos:column="1">#<cpp:directive pos:line="1064" pos:column="2">ifndef</cpp:directive> <name pos:line="1064" pos:column="9">__IVsIntellisenseCompletor_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1065" pos:column="1">#<cpp:directive pos:line="1065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1065" pos:column="9">__IVsIntellisenseCompletor_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1067" pos:column="1">/* interface IVsIntellisenseCompletor */</comment>
<comment type="block" pos:line="1068" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1071" pos:column="1">EXTERN_C</name> <specifier pos:line="1071" pos:column="10">const</specifier> <name pos:line="1071" pos:column="16">IID</name></type> <name pos:line="1071" pos:column="20">IID_IVsIntellisenseCompletor</name></decl>;</decl_stmt>

<cpp:if pos:line="1073" pos:column="1">#<cpp:directive pos:line="1073" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1073" pos:column="5">defined</name><argument_list pos:line="1073" pos:column="12">(<argument><expr><name pos:line="1073" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1073" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1073" pos:column="29">!</op:operator><call><name pos:line="1073" pos:column="30">defined</name><argument_list pos:line="1073" pos:column="37">(<argument><expr><name pos:line="1073" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1075" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1075" pos:column="19">(<argument pos:line="1075" pos:column="20">"05DFCF7A-C78A-4e20-AAFB-4A0F4D26E0FB"</argument>)</argument_list></macro>
    <label><name pos:line="1076" pos:column="5">IVsIntellisenseCompletor</name> :</label> <expr_stmt><expr pos:line="1076" pos:column="32">public <name pos:line="1076" pos:column="39">IOleCommandTarget</name>
    <block pos:line="1077" pos:column="5">{
    <expr pos:line="1078" pos:column="5">public<op:operator pos:line="1078" pos:column="11">:</op:operator>
        virtual <name pos:line="1079" pos:column="17">HRESULT</name> <name pos:line="1079" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1079" pos:column="43">Initialize</name><argument_list pos:line="1079" pos:column="53">( 
            <argument pos:line="1080" pos:column="13">__RPC__in_opt IVsIntellisenseHost *pHost</argument>,
            <argument pos:line="1081" pos:column="13">__RPC__in HWND hwndParent</argument>)</argument_list></macro> <op:operator pos:line="1081" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="1081" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="1083" pos:column="9">virtual <name pos:line="1083" pos:column="17">HRESULT</name> <name pos:line="1083" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1083" pos:column="43">Update</name><argument_list pos:line="1083" pos:column="49">( 
            <argument pos:line="1084" pos:column="13">__RPC__in_opt IVsCompletionSet *pCompSet</argument>,
            <argument pos:line="1085" pos:column="13">DWORD dwFlags</argument>)</argument_list></macro> <op:operator pos:line="1085" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="1085" pos:column="30">0</lit:literal></expr>;
        
        <expr pos:line="1087" pos:column="9">virtual <name pos:line="1087" pos:column="17">HRESULT</name> <name pos:line="1087" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1087" pos:column="43">GetWidth</name><argument_list pos:line="1087" pos:column="51">( 
            <argument pos:line="1088" pos:column="13">__RPC__in DWORD *dwWidth</argument>)</argument_list></macro> <op:operator pos:line="1088" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="1088" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="1090" pos:column="9">virtual <name pos:line="1090" pos:column="17">HRESULT</name> <name pos:line="1090" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1090" pos:column="43">GetHeight</name><argument_list pos:line="1090" pos:column="52">( 
            <argument pos:line="1091" pos:column="13">__RPC__in DWORD *dwHeight</argument>)</argument_list></macro> <op:operator pos:line="1091" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="1091" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="1093" pos:column="9">virtual <name pos:line="1093" pos:column="17">HRESULT</name> <name pos:line="1093" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1093" pos:column="43">GetCompletionSpan</name><argument_list pos:line="1093" pos:column="60">( 
            <argument pos:line="1094" pos:column="13">__RPC__in TextSpan *ts</argument>)</argument_list></macro> <op:operator pos:line="1094" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="1094" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="1096" pos:column="9">virtual <name pos:line="1096" pos:column="17">HRESULT</name> <name pos:line="1096" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1096" pos:column="43">SetLocation</name><argument_list pos:line="1096" pos:column="54">( 
            <argument pos:line="1097" pos:column="13">__RPC__in POINT *p</argument>)</argument_list></macro> <op:operator pos:line="1097" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="1097" pos:column="35">0</lit:literal></expr>;
        
        <expr pos:line="1099" pos:column="9">virtual <name pos:line="1099" pos:column="17">HRESULT</name> <name pos:line="1099" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1099" pos:column="43">Hide</name><argument_list pos:line="1099" pos:column="47">( <argument><expr><name pos:line="1099" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1099" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="1099" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="1101" pos:column="9">virtual <name pos:line="1101" pos:column="17">HRESULT</name> <name pos:line="1101" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1101" pos:column="43">IsActive</name><argument_list pos:line="1101" pos:column="51">( 
            <comment type="block" pos:line="1102" pos:column="13">/* [out] */</comment> <argument pos:line="1102" pos:column="25">__RPC__out BOOL *pfIsActive</argument>)</argument_list></macro> <op:operator pos:line="1102" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1102" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="1104" pos:column="9">virtual <name pos:line="1104" pos:column="17">HRESULT</name> <name pos:line="1104" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1104" pos:column="43">GetWindowHandle</name><argument_list pos:line="1104" pos:column="58">( 
            <comment type="block" pos:line="1105" pos:column="13">/* [out] */</comment> <argument pos:line="1105" pos:column="25">__RPC__deref_out_opt HWND *phwnd</argument>)</argument_list></macro> <op:operator pos:line="1105" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="1105" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1109" pos:column="1">#<cpp:directive pos:line="1109" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1109" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1111" pos:column="5">typedef <type><struct pos:line="1111" pos:column="13">struct <name pos:line="1111" pos:column="20">IVsIntellisenseCompletorVtbl</name>
    <block pos:line="1112" pos:column="5">{<public type="default" pos:line="1112" pos:column="6">
        <function_decl><type><name pos:line="1113" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1115" pos:column="9">HRESULT</name></type> ( <name pos:line="1115" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1115" pos:column="37">*</type:modifier><name pos:line="1115" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1115" pos:column="54">( 
            <param><decl><type><name pos:line="1116" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1116" pos:column="38">*</type:modifier></type> <name pos:line="1116" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1117" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1117" pos:column="24">__RPC__in</name> <name pos:line="1117" pos:column="34">REFIID</name></type> <name pos:line="1117" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1118" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1119" pos:column="13">__RPC__deref_out</name>  <name pos:line="1119" pos:column="31">void</name> <type:modifier pos:line="1119" pos:column="36">*</type:modifier><type:modifier pos:line="1119" pos:column="37">*</type:modifier></type><name pos:line="1119" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1121" pos:column="9">ULONG</name></type> ( <name pos:line="1121" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1121" pos:column="35">*</type:modifier><name pos:line="1121" pos:column="36">AddRef</name> )<parameter_list pos:line="1121" pos:column="44">( 
            <param><decl><type><name pos:line="1122" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1122" pos:column="38">*</type:modifier></type> <name pos:line="1122" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1124" pos:column="9">ULONG</name></type> ( <name pos:line="1124" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1124" pos:column="35">*</type:modifier><name pos:line="1124" pos:column="36">Release</name> )<parameter_list pos:line="1124" pos:column="45">( 
            <param><decl><type><name pos:line="1125" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1125" pos:column="38">*</type:modifier></type> <name pos:line="1125" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1127" pos:column="9">/* [input_sync] */</comment> <macro><name pos:line="1127" pos:column="28">HRESULT</name> <argument_list pos:line="1127" pos:column="36">( <argument pos:line="1127" pos:column="38">STDMETHODCALLTYPE *QueryStatus</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1127" pos:column="70">(</op:operator> 
            <name pos:line="1128" pos:column="13">IVsIntellisenseCompletor</name> <op:operator pos:line="1128" pos:column="38">*</op:operator> <name pos:line="1128" pos:column="40">This</name><op:operator pos:line="1128" pos:column="44">,</op:operator>
            <comment type="block" pos:line="1129" pos:column="13">/* [unique][in] */</comment> <name pos:line="1129" pos:column="32">__RPC__in_opt</name> const <name pos:line="1129" pos:column="52">GUID</name> <op:operator pos:line="1129" pos:column="57">*</op:operator><name pos:line="1129" pos:column="58">pguidCmdGroup</name><op:operator pos:line="1129" pos:column="71">,</op:operator>
            <comment type="block" pos:line="1130" pos:column="13">/* [in] */</comment> <name pos:line="1130" pos:column="24">ULONG</name> <name pos:line="1130" pos:column="30">cCmds</name><op:operator pos:line="1130" pos:column="35">,</op:operator>
            <comment type="block" pos:line="1131" pos:column="13">/* [out][in][size_is] */</comment> <macro><name pos:line="1131" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="1131" pos:column="62">(<argument pos:line="1131" pos:column="63">cCmds</argument>)</argument_list></macro> <name pos:line="1131" pos:column="70">OLECMD</name> <name><name pos:line="1131" pos:column="77">prgCmds</name><index pos:line="1131" pos:column="84">[  ]</index></name><op:operator pos:line="1131" pos:column="88">,</op:operator>
            <comment type="block" pos:line="1132" pos:column="13">/* [unique][out][in] */</comment> <name pos:line="1132" pos:column="37">__RPC__inout_opt</name> <name pos:line="1132" pos:column="54">OLECMDTEXT</name> <op:operator pos:line="1132" pos:column="65">*</op:operator><name pos:line="1132" pos:column="66">pCmdText</name><op:operator pos:line="1132" pos:column="74">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1134" pos:column="9">HRESULT</name></type> ( <name pos:line="1134" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1134" pos:column="37">*</type:modifier><name pos:line="1134" pos:column="38">Exec</name> )<parameter_list pos:line="1134" pos:column="44">( 
            <param><decl><type><name pos:line="1135" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1135" pos:column="38">*</type:modifier></type> <name pos:line="1135" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1136" pos:column="13">/* [unique][in] */</comment> <param><decl><type><name pos:line="1136" pos:column="32">__RPC__in_opt</name> <specifier pos:line="1136" pos:column="46">const</specifier> <name pos:line="1136" pos:column="52">GUID</name> <type:modifier pos:line="1136" pos:column="57">*</type:modifier></type><name pos:line="1136" pos:column="58">pguidCmdGroup</name></decl></param>,
            <comment type="block" pos:line="1137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1137" pos:column="24">DWORD</name></type> <name pos:line="1137" pos:column="30">nCmdID</name></decl></param>,
            <comment type="block" pos:line="1138" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1138" pos:column="24">DWORD</name></type> <name pos:line="1138" pos:column="30">nCmdexecopt</name></decl></param>,
            <comment type="block" pos:line="1139" pos:column="13">/* [unique][in] */</comment> <param><decl><type><name pos:line="1139" pos:column="32">__RPC__in_opt</name> <name pos:line="1139" pos:column="46">VARIANT</name> <type:modifier pos:line="1139" pos:column="54">*</type:modifier></type><name pos:line="1139" pos:column="55">pvaIn</name></decl></param>,
            <comment type="block" pos:line="1140" pos:column="13">/* [unique][out][in] */</comment> <param><decl><type><name pos:line="1140" pos:column="37">__RPC__inout_opt</name> <name pos:line="1140" pos:column="54">VARIANT</name> <type:modifier pos:line="1140" pos:column="62">*</type:modifier></type><name pos:line="1140" pos:column="63">pvaOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1142" pos:column="9">HRESULT</name></type> ( <name pos:line="1142" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1142" pos:column="37">*</type:modifier><name pos:line="1142" pos:column="38">Initialize</name> )<parameter_list pos:line="1142" pos:column="50">( 
            <param><decl><type><name pos:line="1143" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1143" pos:column="38">*</type:modifier></type> <name pos:line="1143" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="1144" pos:column="13">__RPC__in_opt</name> <name pos:line="1144" pos:column="27">IVsIntellisenseHost</name> <type:modifier pos:line="1144" pos:column="47">*</type:modifier></type><name pos:line="1144" pos:column="48">pHost</name></decl></param>,
            <param><decl><type><name pos:line="1145" pos:column="13">__RPC__in</name> <name pos:line="1145" pos:column="23">HWND</name></type> <name pos:line="1145" pos:column="28">hwndParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1147" pos:column="9">HRESULT</name></type> ( <name pos:line="1147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1147" pos:column="37">*</type:modifier><name pos:line="1147" pos:column="38">Update</name> )<parameter_list pos:line="1147" pos:column="46">( 
            <param><decl><type><name pos:line="1148" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1148" pos:column="38">*</type:modifier></type> <name pos:line="1148" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="1149" pos:column="13">__RPC__in_opt</name> <name pos:line="1149" pos:column="27">IVsCompletionSet</name> <type:modifier pos:line="1149" pos:column="44">*</type:modifier></type><name pos:line="1149" pos:column="45">pCompSet</name></decl></param>,
            <param><decl><type><name pos:line="1150" pos:column="13">DWORD</name></type> <name pos:line="1150" pos:column="19">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1152" pos:column="9">HRESULT</name></type> ( <name pos:line="1152" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1152" pos:column="37">*</type:modifier><name pos:line="1152" pos:column="38">GetWidth</name> )<parameter_list pos:line="1152" pos:column="48">( 
            <param><decl><type><name pos:line="1153" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1153" pos:column="38">*</type:modifier></type> <name pos:line="1153" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="1154" pos:column="13">__RPC__in</name> <name pos:line="1154" pos:column="23">DWORD</name> <type:modifier pos:line="1154" pos:column="29">*</type:modifier></type><name pos:line="1154" pos:column="30">dwWidth</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1156" pos:column="9">HRESULT</name></type> ( <name pos:line="1156" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1156" pos:column="37">*</type:modifier><name pos:line="1156" pos:column="38">GetHeight</name> )<parameter_list pos:line="1156" pos:column="49">( 
            <param><decl><type><name pos:line="1157" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1157" pos:column="38">*</type:modifier></type> <name pos:line="1157" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="1158" pos:column="13">__RPC__in</name> <name pos:line="1158" pos:column="23">DWORD</name> <type:modifier pos:line="1158" pos:column="29">*</type:modifier></type><name pos:line="1158" pos:column="30">dwHeight</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1160" pos:column="9">HRESULT</name></type> ( <name pos:line="1160" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1160" pos:column="37">*</type:modifier><name pos:line="1160" pos:column="38">GetCompletionSpan</name> )<parameter_list pos:line="1160" pos:column="57">( 
            <param><decl><type><name pos:line="1161" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1161" pos:column="38">*</type:modifier></type> <name pos:line="1161" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="1162" pos:column="13">__RPC__in</name> <name pos:line="1162" pos:column="23">TextSpan</name> <type:modifier pos:line="1162" pos:column="32">*</type:modifier></type><name pos:line="1162" pos:column="33">ts</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1164" pos:column="9">HRESULT</name></type> ( <name pos:line="1164" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1164" pos:column="37">*</type:modifier><name pos:line="1164" pos:column="38">SetLocation</name> )<parameter_list pos:line="1164" pos:column="51">( 
            <param><decl><type><name pos:line="1165" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1165" pos:column="38">*</type:modifier></type> <name pos:line="1165" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="1166" pos:column="13">__RPC__in</name> <name pos:line="1166" pos:column="23">POINT</name> <type:modifier pos:line="1166" pos:column="29">*</type:modifier></type><name pos:line="1166" pos:column="30">p</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1168" pos:column="9">HRESULT</name></type> ( <name pos:line="1168" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1168" pos:column="37">*</type:modifier><name pos:line="1168" pos:column="38">Hide</name> )<parameter_list pos:line="1168" pos:column="44">( 
            <param><decl><type><name pos:line="1169" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1169" pos:column="38">*</type:modifier></type> <name pos:line="1169" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1171" pos:column="9">HRESULT</name></type> ( <name pos:line="1171" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1171" pos:column="37">*</type:modifier><name pos:line="1171" pos:column="38">IsActive</name> )<parameter_list pos:line="1171" pos:column="48">( 
            <param><decl><type><name pos:line="1172" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1172" pos:column="38">*</type:modifier></type> <name pos:line="1172" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1173" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1173" pos:column="25">__RPC__out</name> <name pos:line="1173" pos:column="36">BOOL</name> <type:modifier pos:line="1173" pos:column="41">*</type:modifier></type><name pos:line="1173" pos:column="42">pfIsActive</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1175" pos:column="9">HRESULT</name></type> ( <name pos:line="1175" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1175" pos:column="37">*</type:modifier><name pos:line="1175" pos:column="38">GetWindowHandle</name> )<parameter_list pos:line="1175" pos:column="55">( 
            <param><decl><type><name pos:line="1176" pos:column="13">IVsIntellisenseCompletor</name> <type:modifier pos:line="1176" pos:column="38">*</type:modifier></type> <name pos:line="1176" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1177" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1177" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1177" pos:column="46">HWND</name> <type:modifier pos:line="1177" pos:column="51">*</type:modifier></type><name pos:line="1177" pos:column="52">phwnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1179" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1180" pos:column="7">IVsIntellisenseCompletorVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1182" pos:column="5">interface</name></type> <name pos:line="1182" pos:column="15">IVsIntellisenseCompletor</name>
    <argument_list pos:line="1183" pos:column="5">{
        <argument><expr><name pos:line="1184" pos:column="9">CONST_VTBL</name> struct <name pos:line="1184" pos:column="27">IVsIntellisenseCompletorVtbl</name> <op:operator pos:line="1184" pos:column="56">*</op:operator><name pos:line="1184" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1189" pos:column="1">#<cpp:directive pos:line="1189" pos:column="2">ifdef</cpp:directive> <name pos:line="1189" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1192" pos:column="1">#<cpp:directive pos:line="1192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1192" pos:column="9">IVsIntellisenseCompletor_QueryInterface</name><parameter_list pos:line="1192" pos:column="48">(<param><type><name pos:line="1192" pos:column="49">This</name></type></param>,<param><type><name pos:line="1192" pos:column="54">riid</name></type></param>,<param><type><name pos:line="1192" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1193" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1195" pos:column="1">#<cpp:directive pos:line="1195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1195" pos:column="9">IVsIntellisenseCompletor_AddRef</name><parameter_list pos:line="1195" pos:column="40">(<param><type><name pos:line="1195" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1196" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1198" pos:column="1">#<cpp:directive pos:line="1198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1198" pos:column="9">IVsIntellisenseCompletor_Release</name><parameter_list pos:line="1198" pos:column="41">(<param><type><name pos:line="1198" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1199" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1202" pos:column="1">#<cpp:directive pos:line="1202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1202" pos:column="9">IVsIntellisenseCompletor_QueryStatus</name><parameter_list pos:line="1202" pos:column="45">(<param><type><name pos:line="1202" pos:column="46">This</name></type></param>,<param><type><name pos:line="1202" pos:column="51">pguidCmdGroup</name></type></param>,<param><type><name pos:line="1202" pos:column="65">cCmds</name></type></param>,<param><type><name pos:line="1202" pos:column="71">prgCmds</name></type></param>,<param><type><name pos:line="1202" pos:column="79">pCmdText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1203" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText) )</cpp:value></cpp:define> 

<cpp:define pos:line="1205" pos:column="1">#<cpp:directive pos:line="1205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1205" pos:column="9">IVsIntellisenseCompletor_Exec</name><parameter_list pos:line="1205" pos:column="38">(<param><type><name pos:line="1205" pos:column="39">This</name></type></param>,<param><type><name pos:line="1205" pos:column="44">pguidCmdGroup</name></type></param>,<param><type><name pos:line="1205" pos:column="58">nCmdID</name></type></param>,<param><type><name pos:line="1205" pos:column="65">nCmdexecopt</name></type></param>,<param><type><name pos:line="1205" pos:column="77">pvaIn</name></type></param>,<param><type><name pos:line="1205" pos:column="83">pvaOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1206" pos:column="5">( (This)-&gt;lpVtbl -&gt; Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut) )</cpp:value></cpp:define> 


<cpp:define pos:line="1209" pos:column="1">#<cpp:directive pos:line="1209" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1209" pos:column="9">IVsIntellisenseCompletor_Initialize</name><parameter_list pos:line="1209" pos:column="44">(<param><type><name pos:line="1209" pos:column="45">This</name></type></param>,<param><type><name pos:line="1209" pos:column="50">pHost</name></type></param>,<param><type><name pos:line="1209" pos:column="56">hwndParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1210" pos:column="5">( (This)-&gt;lpVtbl -&gt; Initialize(This,pHost,hwndParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="1212" pos:column="1">#<cpp:directive pos:line="1212" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1212" pos:column="9">IVsIntellisenseCompletor_Update</name><parameter_list pos:line="1212" pos:column="40">(<param><type><name pos:line="1212" pos:column="41">This</name></type></param>,<param><type><name pos:line="1212" pos:column="46">pCompSet</name></type></param>,<param><type><name pos:line="1212" pos:column="55">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1213" pos:column="5">( (This)-&gt;lpVtbl -&gt; Update(This,pCompSet,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="1215" pos:column="1">#<cpp:directive pos:line="1215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1215" pos:column="9">IVsIntellisenseCompletor_GetWidth</name><parameter_list pos:line="1215" pos:column="42">(<param><type><name pos:line="1215" pos:column="43">This</name></type></param>,<param><type><name pos:line="1215" pos:column="48">dwWidth</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1216" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetWidth(This,dwWidth) )</cpp:value></cpp:define> 

<cpp:define pos:line="1218" pos:column="1">#<cpp:directive pos:line="1218" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1218" pos:column="9">IVsIntellisenseCompletor_GetHeight</name><parameter_list pos:line="1218" pos:column="43">(<param><type><name pos:line="1218" pos:column="44">This</name></type></param>,<param><type><name pos:line="1218" pos:column="49">dwHeight</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1219" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHeight(This,dwHeight) )</cpp:value></cpp:define> 

<cpp:define pos:line="1221" pos:column="1">#<cpp:directive pos:line="1221" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1221" pos:column="9">IVsIntellisenseCompletor_GetCompletionSpan</name><parameter_list pos:line="1221" pos:column="51">(<param><type><name pos:line="1221" pos:column="52">This</name></type></param>,<param><type><name pos:line="1221" pos:column="57">ts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1222" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCompletionSpan(This,ts) )</cpp:value></cpp:define> 

<cpp:define pos:line="1224" pos:column="1">#<cpp:directive pos:line="1224" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1224" pos:column="9">IVsIntellisenseCompletor_SetLocation</name><parameter_list pos:line="1224" pos:column="45">(<param><type><name pos:line="1224" pos:column="46">This</name></type></param>,<param><type><name pos:line="1224" pos:column="51">p</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1225" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocation(This,p) )</cpp:value></cpp:define> 

<cpp:define pos:line="1227" pos:column="1">#<cpp:directive pos:line="1227" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1227" pos:column="9">IVsIntellisenseCompletor_Hide</name><parameter_list pos:line="1227" pos:column="38">(<param><type><name pos:line="1227" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1228" pos:column="5">( (This)-&gt;lpVtbl -&gt; Hide(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1230" pos:column="1">#<cpp:directive pos:line="1230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1230" pos:column="9">IVsIntellisenseCompletor_IsActive</name><parameter_list pos:line="1230" pos:column="42">(<param><type><name pos:line="1230" pos:column="43">This</name></type></param>,<param><type><name pos:line="1230" pos:column="48">pfIsActive</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1231" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsActive(This,pfIsActive) )</cpp:value></cpp:define> 

<cpp:define pos:line="1233" pos:column="1">#<cpp:directive pos:line="1233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1233" pos:column="9">IVsIntellisenseCompletor_GetWindowHandle</name><parameter_list pos:line="1233" pos:column="49">(<param><type><name pos:line="1233" pos:column="50">This</name></type></param>,<param><type><name pos:line="1233" pos:column="55">phwnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1234" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetWindowHandle(This,phwnd) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1236" pos:column="1">#<cpp:directive pos:line="1236" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1236" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1239" pos:column="1">#<cpp:directive pos:line="1239" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1239" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1244" pos:column="1">#<cpp:directive pos:line="1244" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1244" pos:column="9">/* __IVsIntellisenseCompletor_INTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="1247" pos:column="1">EXTERN_C</name> <specifier pos:line="1247" pos:column="10">const</specifier> <name pos:line="1247" pos:column="16">CLSID</name></type> <name pos:line="1247" pos:column="22">CLSID_VsIntellisenseLangTip</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="1249" pos:column="1">#<cpp:directive pos:line="1249" pos:column="2">ifdef</cpp:directive> <name pos:line="1249" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="1251" pos:column="1">class</type> <name pos:line="1251" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="1251" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="1251" pos:column="21">"39F4B568-7166-42b3-87E6-6B856864AE55"</lit:literal></expr></argument>)</argument_list>
<name pos:line="1252" pos:column="1">VsIntellisenseLangTip</name></decl>;</decl_stmt>
<cpp:endif pos:line="1253" pos:column="1">#<cpp:directive pos:line="1253" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="1255" pos:column="1">#<cpp:directive pos:line="1255" pos:column="2">ifndef</cpp:directive> <name pos:line="1255" pos:column="9">__IVsIntellisenseLangTip_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1256" pos:column="1">#<cpp:directive pos:line="1256" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1256" pos:column="9">__IVsIntellisenseLangTip_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1258" pos:column="1">/* interface IVsIntellisenseLangTip */</comment>
<comment type="block" pos:line="1259" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1262" pos:column="1">EXTERN_C</name> <specifier pos:line="1262" pos:column="10">const</specifier> <name pos:line="1262" pos:column="16">IID</name></type> <name pos:line="1262" pos:column="20">IID_IVsIntellisenseLangTip</name></decl>;</decl_stmt>

<cpp:if pos:line="1264" pos:column="1">#<cpp:directive pos:line="1264" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1264" pos:column="5">defined</name><argument_list pos:line="1264" pos:column="12">(<argument><expr><name pos:line="1264" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1264" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1264" pos:column="29">!</op:operator><call><name pos:line="1264" pos:column="30">defined</name><argument_list pos:line="1264" pos:column="37">(<argument><expr><name pos:line="1264" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1266" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1266" pos:column="19">(<argument pos:line="1266" pos:column="20">"1E34D422-7120-4d9e-96FF-E880B665D30D"</argument>)</argument_list></macro>
    <label><name pos:line="1267" pos:column="5">IVsIntellisenseLangTip</name> :</label> <expr_stmt><expr pos:line="1267" pos:column="30">public <name pos:line="1267" pos:column="37">IUnknown</name>
    <block pos:line="1268" pos:column="5">{
    <expr pos:line="1269" pos:column="5">public<op:operator pos:line="1269" pos:column="11">:</op:operator>
        virtual <name pos:line="1270" pos:column="17">HRESULT</name> <name pos:line="1270" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1270" pos:column="43">Initialize</name><argument_list pos:line="1270" pos:column="53">( 
            <comment type="block" pos:line="1271" pos:column="13">/* [in] */</comment> <argument pos:line="1271" pos:column="24">__RPC__in_opt IVsIntellisenseHost *pHost</argument>)</argument_list></macro> <op:operator pos:line="1271" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="1271" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="1273" pos:column="9">virtual <name pos:line="1273" pos:column="17">HRESULT</name> <name pos:line="1273" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1273" pos:column="43">GetSizePreferences</name><argument_list pos:line="1273" pos:column="61">( 
            <comment type="block" pos:line="1274" pos:column="13">/* [in] */</comment> <argument pos:line="1274" pos:column="24">__RPC__in RECT *prcCtxBounds</argument>,
            <comment type="block" pos:line="1275" pos:column="13">/* [in] */</comment> <argument pos:line="1275" pos:column="24">__RPC__in TIPSIZEDATA *pSizeData</argument>)</argument_list></macro> <op:operator pos:line="1275" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="1275" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="1277" pos:column="9">virtual <name pos:line="1277" pos:column="17">HRESULT</name> <name pos:line="1277" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1277" pos:column="43">Create</name><argument_list pos:line="1277" pos:column="49">( 
            <comment type="block" pos:line="1278" pos:column="13">/* [in] */</comment> <argument pos:line="1278" pos:column="24">__RPC__in_opt IVsTipWindow *pTipWnd</argument>)</argument_list></macro> <op:operator pos:line="1278" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1278" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="1280" pos:column="9">virtual <name pos:line="1280" pos:column="17">HRESULT</name> <name pos:line="1280" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1280" pos:column="43">Update</name><argument_list pos:line="1280" pos:column="49">( 
            <comment type="block" pos:line="1281" pos:column="13">/* [in] */</comment> <argument pos:line="1281" pos:column="24">__RPC__in_opt IVsTipWindow *pTipWnd</argument>,
            <comment type="block" pos:line="1282" pos:column="13">/* [in] */</comment> <argument pos:line="1282" pos:column="24">DWORD dwFlags</argument>)</argument_list></macro> <op:operator pos:line="1282" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="1282" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="1284" pos:column="9">virtual <name pos:line="1284" pos:column="17">HRESULT</name> <name pos:line="1284" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1284" pos:column="43">UpdatePosition</name><argument_list pos:line="1284" pos:column="57">( <argument><expr><name pos:line="1284" pos:column="59">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1284" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="1284" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="1286" pos:column="9">virtual <name pos:line="1286" pos:column="17">HRESULT</name> <name pos:line="1286" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1286" pos:column="43">GetSizeY</name><argument_list pos:line="1286" pos:column="51">( 
            <comment type="block" pos:line="1287" pos:column="13">/* [out] */</comment> <argument pos:line="1287" pos:column="25">__RPC__out short *pSizeY</argument>)</argument_list></macro> <op:operator pos:line="1287" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="1287" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="1289" pos:column="9">virtual <name pos:line="1289" pos:column="17">HRESULT</name> <name pos:line="1289" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1289" pos:column="43">Close</name><argument_list pos:line="1289" pos:column="48">( 
            <comment type="block" pos:line="1290" pos:column="13">/* [in] */</comment> <argument pos:line="1290" pos:column="24">BOOL fDeleteThis</argument>)</argument_list></macro> <op:operator pos:line="1290" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="1290" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="1292" pos:column="9">virtual <name pos:line="1292" pos:column="17">HRESULT</name> <name pos:line="1292" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1292" pos:column="43">IsActive</name><argument_list pos:line="1292" pos:column="51">( 
            <comment type="block" pos:line="1293" pos:column="13">/* [out] */</comment> <argument pos:line="1293" pos:column="25">__RPC__out BOOL *pfIsActive</argument>)</argument_list></macro> <op:operator pos:line="1293" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1293" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="1295" pos:column="9">virtual <name pos:line="1295" pos:column="17">HRESULT</name> <name pos:line="1295" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1295" pos:column="43">GetOverloadCount</name><argument_list pos:line="1295" pos:column="59">( 
            <comment type="block" pos:line="1296" pos:column="13">/* [out] */</comment> <argument pos:line="1296" pos:column="25">__RPC__out long *plOverloadCount</argument>)</argument_list></macro> <op:operator pos:line="1296" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="1296" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="1298" pos:column="9">virtual <name pos:line="1298" pos:column="17">HRESULT</name> <name pos:line="1298" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1298" pos:column="43">ScrollUp</name><argument_list pos:line="1298" pos:column="51">( <argument><expr><name pos:line="1298" pos:column="53">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1298" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="1298" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="1300" pos:column="9">virtual <name pos:line="1300" pos:column="17">HRESULT</name> <name pos:line="1300" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1300" pos:column="43">ScrollDown</name><argument_list pos:line="1300" pos:column="53">( <argument><expr><name pos:line="1300" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1300" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1300" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1304" pos:column="1">#<cpp:directive pos:line="1304" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1304" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1306" pos:column="5">typedef <type><struct pos:line="1306" pos:column="13">struct <name pos:line="1306" pos:column="20">IVsIntellisenseLangTipVtbl</name>
    <block pos:line="1307" pos:column="5">{<public type="default" pos:line="1307" pos:column="6">
        <function_decl><type><name pos:line="1308" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1310" pos:column="9">HRESULT</name></type> ( <name pos:line="1310" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1310" pos:column="37">*</type:modifier><name pos:line="1310" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1310" pos:column="54">( 
            <param><decl><type><name pos:line="1311" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1311" pos:column="36">*</type:modifier></type> <name pos:line="1311" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1312" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1312" pos:column="24">__RPC__in</name> <name pos:line="1312" pos:column="34">REFIID</name></type> <name pos:line="1312" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1313" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1314" pos:column="13">__RPC__deref_out</name>  <name pos:line="1314" pos:column="31">void</name> <type:modifier pos:line="1314" pos:column="36">*</type:modifier><type:modifier pos:line="1314" pos:column="37">*</type:modifier></type><name pos:line="1314" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1316" pos:column="9">ULONG</name></type> ( <name pos:line="1316" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1316" pos:column="35">*</type:modifier><name pos:line="1316" pos:column="36">AddRef</name> )<parameter_list pos:line="1316" pos:column="44">( 
            <param><decl><type><name pos:line="1317" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1317" pos:column="36">*</type:modifier></type> <name pos:line="1317" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1319" pos:column="9">ULONG</name></type> ( <name pos:line="1319" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1319" pos:column="35">*</type:modifier><name pos:line="1319" pos:column="36">Release</name> )<parameter_list pos:line="1319" pos:column="45">( 
            <param><decl><type><name pos:line="1320" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1320" pos:column="36">*</type:modifier></type> <name pos:line="1320" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1322" pos:column="9">HRESULT</name></type> ( <name pos:line="1322" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1322" pos:column="37">*</type:modifier><name pos:line="1322" pos:column="38">Initialize</name> )<parameter_list pos:line="1322" pos:column="50">( 
            <param><decl><type><name pos:line="1323" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1323" pos:column="36">*</type:modifier></type> <name pos:line="1323" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1324" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1324" pos:column="24">__RPC__in_opt</name> <name pos:line="1324" pos:column="38">IVsIntellisenseHost</name> <type:modifier pos:line="1324" pos:column="58">*</type:modifier></type><name pos:line="1324" pos:column="59">pHost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1326" pos:column="9">HRESULT</name></type> ( <name pos:line="1326" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1326" pos:column="37">*</type:modifier><name pos:line="1326" pos:column="38">GetSizePreferences</name> )<parameter_list pos:line="1326" pos:column="58">( 
            <param><decl><type><name pos:line="1327" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1327" pos:column="36">*</type:modifier></type> <name pos:line="1327" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1328" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1328" pos:column="24">__RPC__in</name> <name pos:line="1328" pos:column="34">RECT</name> <type:modifier pos:line="1328" pos:column="39">*</type:modifier></type><name pos:line="1328" pos:column="40">prcCtxBounds</name></decl></param>,
            <comment type="block" pos:line="1329" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1329" pos:column="24">__RPC__in</name> <name pos:line="1329" pos:column="34">TIPSIZEDATA</name> <type:modifier pos:line="1329" pos:column="46">*</type:modifier></type><name pos:line="1329" pos:column="47">pSizeData</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1331" pos:column="9">HRESULT</name></type> ( <name pos:line="1331" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1331" pos:column="37">*</type:modifier><name pos:line="1331" pos:column="38">Create</name> )<parameter_list pos:line="1331" pos:column="46">( 
            <param><decl><type><name pos:line="1332" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1332" pos:column="36">*</type:modifier></type> <name pos:line="1332" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1333" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1333" pos:column="24">__RPC__in_opt</name> <name pos:line="1333" pos:column="38">IVsTipWindow</name> <type:modifier pos:line="1333" pos:column="51">*</type:modifier></type><name pos:line="1333" pos:column="52">pTipWnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1335" pos:column="9">HRESULT</name></type> ( <name pos:line="1335" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1335" pos:column="37">*</type:modifier><name pos:line="1335" pos:column="38">Update</name> )<parameter_list pos:line="1335" pos:column="46">( 
            <param><decl><type><name pos:line="1336" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1336" pos:column="36">*</type:modifier></type> <name pos:line="1336" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1337" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1337" pos:column="24">__RPC__in_opt</name> <name pos:line="1337" pos:column="38">IVsTipWindow</name> <type:modifier pos:line="1337" pos:column="51">*</type:modifier></type><name pos:line="1337" pos:column="52">pTipWnd</name></decl></param>,
            <comment type="block" pos:line="1338" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1338" pos:column="24">DWORD</name></type> <name pos:line="1338" pos:column="30">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1340" pos:column="9">HRESULT</name></type> ( <name pos:line="1340" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1340" pos:column="37">*</type:modifier><name pos:line="1340" pos:column="38">UpdatePosition</name> )<parameter_list pos:line="1340" pos:column="54">( 
            <param><decl><type><name pos:line="1341" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1341" pos:column="36">*</type:modifier></type> <name pos:line="1341" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1343" pos:column="9">HRESULT</name></type> ( <name pos:line="1343" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1343" pos:column="37">*</type:modifier><name pos:line="1343" pos:column="38">GetSizeY</name> )<parameter_list pos:line="1343" pos:column="48">( 
            <param><decl><type><name pos:line="1344" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1344" pos:column="36">*</type:modifier></type> <name pos:line="1344" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1345" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1345" pos:column="25">__RPC__out</name> <name pos:line="1345" pos:column="36">short</name> <type:modifier pos:line="1345" pos:column="42">*</type:modifier></type><name pos:line="1345" pos:column="43">pSizeY</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1347" pos:column="9">HRESULT</name></type> ( <name pos:line="1347" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1347" pos:column="37">*</type:modifier><name pos:line="1347" pos:column="38">Close</name> )<parameter_list pos:line="1347" pos:column="45">( 
            <param><decl><type><name pos:line="1348" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1348" pos:column="36">*</type:modifier></type> <name pos:line="1348" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1349" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1349" pos:column="24">BOOL</name></type> <name pos:line="1349" pos:column="29">fDeleteThis</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1351" pos:column="9">HRESULT</name></type> ( <name pos:line="1351" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1351" pos:column="37">*</type:modifier><name pos:line="1351" pos:column="38">IsActive</name> )<parameter_list pos:line="1351" pos:column="48">( 
            <param><decl><type><name pos:line="1352" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1352" pos:column="36">*</type:modifier></type> <name pos:line="1352" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1353" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1353" pos:column="25">__RPC__out</name> <name pos:line="1353" pos:column="36">BOOL</name> <type:modifier pos:line="1353" pos:column="41">*</type:modifier></type><name pos:line="1353" pos:column="42">pfIsActive</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1355" pos:column="9">HRESULT</name></type> ( <name pos:line="1355" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1355" pos:column="37">*</type:modifier><name pos:line="1355" pos:column="38">GetOverloadCount</name> )<parameter_list pos:line="1355" pos:column="56">( 
            <param><decl><type><name pos:line="1356" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1356" pos:column="36">*</type:modifier></type> <name pos:line="1356" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="1357" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1357" pos:column="25">__RPC__out</name> <name pos:line="1357" pos:column="36">long</name> <type:modifier pos:line="1357" pos:column="41">*</type:modifier></type><name pos:line="1357" pos:column="42">plOverloadCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1359" pos:column="9">HRESULT</name></type> ( <name pos:line="1359" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1359" pos:column="37">*</type:modifier><name pos:line="1359" pos:column="38">ScrollUp</name> )<parameter_list pos:line="1359" pos:column="48">( 
            <param><decl><type><name pos:line="1360" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1360" pos:column="36">*</type:modifier></type> <name pos:line="1360" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1362" pos:column="9">HRESULT</name></type> ( <name pos:line="1362" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1362" pos:column="37">*</type:modifier><name pos:line="1362" pos:column="38">ScrollDown</name> )<parameter_list pos:line="1362" pos:column="50">( 
            <param><decl><type><name pos:line="1363" pos:column="13">IVsIntellisenseLangTip</name> <type:modifier pos:line="1363" pos:column="36">*</type:modifier></type> <name pos:line="1363" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1365" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1366" pos:column="7">IVsIntellisenseLangTipVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1368" pos:column="5">interface</name></type> <name pos:line="1368" pos:column="15">IVsIntellisenseLangTip</name>
    <argument_list pos:line="1369" pos:column="5">{
        <argument><expr><name pos:line="1370" pos:column="9">CONST_VTBL</name> struct <name pos:line="1370" pos:column="27">IVsIntellisenseLangTipVtbl</name> <op:operator pos:line="1370" pos:column="54">*</op:operator><name pos:line="1370" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1375" pos:column="1">#<cpp:directive pos:line="1375" pos:column="2">ifdef</cpp:directive> <name pos:line="1375" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1378" pos:column="1">#<cpp:directive pos:line="1378" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1378" pos:column="9">IVsIntellisenseLangTip_QueryInterface</name><parameter_list pos:line="1378" pos:column="46">(<param><type><name pos:line="1378" pos:column="47">This</name></type></param>,<param><type><name pos:line="1378" pos:column="52">riid</name></type></param>,<param><type><name pos:line="1378" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1379" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1381" pos:column="1">#<cpp:directive pos:line="1381" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1381" pos:column="9">IVsIntellisenseLangTip_AddRef</name><parameter_list pos:line="1381" pos:column="38">(<param><type><name pos:line="1381" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1382" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1384" pos:column="1">#<cpp:directive pos:line="1384" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1384" pos:column="9">IVsIntellisenseLangTip_Release</name><parameter_list pos:line="1384" pos:column="39">(<param><type><name pos:line="1384" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1385" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1388" pos:column="1">#<cpp:directive pos:line="1388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1388" pos:column="9">IVsIntellisenseLangTip_Initialize</name><parameter_list pos:line="1388" pos:column="42">(<param><type><name pos:line="1388" pos:column="43">This</name></type></param>,<param><type><name pos:line="1388" pos:column="48">pHost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1389" pos:column="5">( (This)-&gt;lpVtbl -&gt; Initialize(This,pHost) )</cpp:value></cpp:define> 

<cpp:define pos:line="1391" pos:column="1">#<cpp:directive pos:line="1391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1391" pos:column="9">IVsIntellisenseLangTip_GetSizePreferences</name><parameter_list pos:line="1391" pos:column="50">(<param><type><name pos:line="1391" pos:column="51">This</name></type></param>,<param><type><name pos:line="1391" pos:column="56">prcCtxBounds</name></type></param>,<param><type><name pos:line="1391" pos:column="69">pSizeData</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1392" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSizePreferences(This,prcCtxBounds,pSizeData) )</cpp:value></cpp:define> 

<cpp:define pos:line="1394" pos:column="1">#<cpp:directive pos:line="1394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1394" pos:column="9">IVsIntellisenseLangTip_Create</name><parameter_list pos:line="1394" pos:column="38">(<param><type><name pos:line="1394" pos:column="39">This</name></type></param>,<param><type><name pos:line="1394" pos:column="44">pTipWnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1395" pos:column="5">( (This)-&gt;lpVtbl -&gt; Create(This,pTipWnd) )</cpp:value></cpp:define> 

<cpp:define pos:line="1397" pos:column="1">#<cpp:directive pos:line="1397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1397" pos:column="9">IVsIntellisenseLangTip_Update</name><parameter_list pos:line="1397" pos:column="38">(<param><type><name pos:line="1397" pos:column="39">This</name></type></param>,<param><type><name pos:line="1397" pos:column="44">pTipWnd</name></type></param>,<param><type><name pos:line="1397" pos:column="52">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1398" pos:column="5">( (This)-&gt;lpVtbl -&gt; Update(This,pTipWnd,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="1400" pos:column="1">#<cpp:directive pos:line="1400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1400" pos:column="9">IVsIntellisenseLangTip_UpdatePosition</name><parameter_list pos:line="1400" pos:column="46">(<param><type><name pos:line="1400" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1401" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdatePosition(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1403" pos:column="1">#<cpp:directive pos:line="1403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1403" pos:column="9">IVsIntellisenseLangTip_GetSizeY</name><parameter_list pos:line="1403" pos:column="40">(<param><type><name pos:line="1403" pos:column="41">This</name></type></param>,<param><type><name pos:line="1403" pos:column="46">pSizeY</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1404" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSizeY(This,pSizeY) )</cpp:value></cpp:define> 

<cpp:define pos:line="1406" pos:column="1">#<cpp:directive pos:line="1406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1406" pos:column="9">IVsIntellisenseLangTip_Close</name><parameter_list pos:line="1406" pos:column="37">(<param><type><name pos:line="1406" pos:column="38">This</name></type></param>,<param><type><name pos:line="1406" pos:column="43">fDeleteThis</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1407" pos:column="5">( (This)-&gt;lpVtbl -&gt; Close(This,fDeleteThis) )</cpp:value></cpp:define> 

<cpp:define pos:line="1409" pos:column="1">#<cpp:directive pos:line="1409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1409" pos:column="9">IVsIntellisenseLangTip_IsActive</name><parameter_list pos:line="1409" pos:column="40">(<param><type><name pos:line="1409" pos:column="41">This</name></type></param>,<param><type><name pos:line="1409" pos:column="46">pfIsActive</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1410" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsActive(This,pfIsActive) )</cpp:value></cpp:define> 

<cpp:define pos:line="1412" pos:column="1">#<cpp:directive pos:line="1412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1412" pos:column="9">IVsIntellisenseLangTip_GetOverloadCount</name><parameter_list pos:line="1412" pos:column="48">(<param><type><name pos:line="1412" pos:column="49">This</name></type></param>,<param><type><name pos:line="1412" pos:column="54">plOverloadCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1413" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOverloadCount(This,plOverloadCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="1415" pos:column="1">#<cpp:directive pos:line="1415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1415" pos:column="9">IVsIntellisenseLangTip_ScrollUp</name><parameter_list pos:line="1415" pos:column="40">(<param><type><name pos:line="1415" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1416" pos:column="5">( (This)-&gt;lpVtbl -&gt; ScrollUp(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1418" pos:column="1">#<cpp:directive pos:line="1418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1418" pos:column="9">IVsIntellisenseLangTip_ScrollDown</name><parameter_list pos:line="1418" pos:column="42">(<param><type><name pos:line="1418" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1419" pos:column="5">( (This)-&gt;lpVtbl -&gt; ScrollDown(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1421" pos:column="1">#<cpp:directive pos:line="1421" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1421" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1424" pos:column="1">#<cpp:directive pos:line="1424" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1424" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1429" pos:column="1">#<cpp:directive pos:line="1429" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1429" pos:column="9">/* __IVsIntellisenseLangTip_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1432" pos:column="1">#<cpp:directive pos:line="1432" pos:column="2">ifndef</cpp:directive> <name pos:line="1432" pos:column="9">__IVsContainedLanguageHost_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1433" pos:column="1">#<cpp:directive pos:line="1433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1433" pos:column="9">__IVsContainedLanguageHost_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1435" pos:column="1">/* interface IVsContainedLanguageHost */</comment>
<comment type="block" pos:line="1436" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1439" pos:column="1">EXTERN_C</name> <specifier pos:line="1439" pos:column="10">const</specifier> <name pos:line="1439" pos:column="16">IID</name></type> <name pos:line="1439" pos:column="20">IID_IVsContainedLanguageHost</name></decl>;</decl_stmt>

<cpp:if pos:line="1441" pos:column="1">#<cpp:directive pos:line="1441" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1441" pos:column="5">defined</name><argument_list pos:line="1441" pos:column="12">(<argument><expr><name pos:line="1441" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1441" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1441" pos:column="29">!</op:operator><call><name pos:line="1441" pos:column="30">defined</name><argument_list pos:line="1441" pos:column="37">(<argument><expr><name pos:line="1441" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1443" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1443" pos:column="19">(<argument pos:line="1443" pos:column="20">"0429916F-69E1-4336-AB7E-72086FB0D6BC"</argument>)</argument_list></macro>
    <label><name pos:line="1444" pos:column="5">IVsContainedLanguageHost</name> :</label> <expr_stmt><expr pos:line="1444" pos:column="32">public <name pos:line="1444" pos:column="39">IUnknown</name>
    <block pos:line="1445" pos:column="5">{
    <expr pos:line="1446" pos:column="5">public<op:operator pos:line="1446" pos:column="11">:</op:operator>
        virtual <name pos:line="1447" pos:column="17">HRESULT</name> <name pos:line="1447" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1447" pos:column="43">Advise</name><argument_list pos:line="1447" pos:column="49">( 
            <comment type="block" pos:line="1448" pos:column="13">/* [in] */</comment> <argument pos:line="1448" pos:column="24">__RPC__in_opt IVsContainedLanguageHostEvents *pHost</argument>,
            <comment type="block" pos:line="1449" pos:column="13">/* [out] */</comment> <argument pos:line="1449" pos:column="25">__RPC__out VSCOOKIE *pvsCookie</argument>)</argument_list></macro> <op:operator pos:line="1449" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="1449" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="1451" pos:column="9">virtual <name pos:line="1451" pos:column="17">HRESULT</name> <name pos:line="1451" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1451" pos:column="43">Unadvise</name><argument_list pos:line="1451" pos:column="51">( 
            <comment type="block" pos:line="1452" pos:column="13">/* [in] */</comment> <argument pos:line="1452" pos:column="24">VSCOOKIE vsCookie</argument>)</argument_list></macro> <op:operator pos:line="1452" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="1452" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="1454" pos:column="9">virtual <name pos:line="1454" pos:column="17">HRESULT</name> <name pos:line="1454" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1454" pos:column="43">GetLineIndent</name><argument_list pos:line="1454" pos:column="56">( 
            <comment type="block" pos:line="1455" pos:column="13">/* [in] */</comment> <argument pos:line="1455" pos:column="24">long lLineNumber</argument>,
            <comment type="block" pos:line="1456" pos:column="13">/* [out] */</comment> <argument pos:line="1456" pos:column="25">__RPC__deref_out_opt BSTR *pbstrIndentString</argument>,
            <comment type="block" pos:line="1457" pos:column="13">/* [out] */</comment> <argument pos:line="1457" pos:column="25">__RPC__out long *plParentIndentLevel</argument>,
            <comment type="block" pos:line="1458" pos:column="13">/* [out] */</comment> <argument pos:line="1458" pos:column="25">__RPC__out long *plIndentSize</argument>,
            <comment type="block" pos:line="1459" pos:column="13">/* [out] */</comment> <argument pos:line="1459" pos:column="25">__RPC__out BOOL *pfTabs</argument>,
            <comment type="block" pos:line="1460" pos:column="13">/* [out] */</comment> <argument pos:line="1460" pos:column="25">__RPC__out long *plTabSize</argument>)</argument_list></macro> <op:operator pos:line="1460" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="1460" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="1462" pos:column="9">virtual <name pos:line="1462" pos:column="17">HRESULT</name> <name pos:line="1462" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1462" pos:column="43">CanReformatCode</name><argument_list pos:line="1462" pos:column="58">( 
            <comment type="block" pos:line="1463" pos:column="13">/* [out] */</comment> <argument pos:line="1463" pos:column="25">__RPC__out BOOL *pfCanReformat</argument>)</argument_list></macro> <op:operator pos:line="1463" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="1463" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="1465" pos:column="9">virtual <name pos:line="1465" pos:column="17">HRESULT</name> <name pos:line="1465" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1465" pos:column="43">GetNearestVisibleToken</name><argument_list pos:line="1465" pos:column="65">( 
            <comment type="block" pos:line="1466" pos:column="13">/* [in] */</comment> <argument pos:line="1466" pos:column="24">TextSpan tsSecondaryToken</argument>,
            <comment type="block" pos:line="1467" pos:column="13">/* [out] */</comment> <argument pos:line="1467" pos:column="25">__RPC__out TextSpan *ptsPrimaryToken</argument>)</argument_list></macro> <op:operator pos:line="1467" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="1467" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="1469" pos:column="9">virtual <name pos:line="1469" pos:column="17">HRESULT</name> <name pos:line="1469" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1469" pos:column="43">EnsureSpanVisible</name><argument_list pos:line="1469" pos:column="60">( 
            <comment type="block" pos:line="1470" pos:column="13">/* [in] */</comment> <argument pos:line="1470" pos:column="24">TextSpan tsPrimary</argument>)</argument_list></macro> <op:operator pos:line="1470" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="1470" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="1472" pos:column="9">virtual <name pos:line="1472" pos:column="17">HRESULT</name> <name pos:line="1472" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1472" pos:column="43">QueryEditFile</name><argument_list pos:line="1472" pos:column="56">( <argument><expr><name pos:line="1472" pos:column="58">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1472" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="1472" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="1474" pos:column="9">virtual <name pos:line="1474" pos:column="17">HRESULT</name> <name pos:line="1474" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1474" pos:column="43">OnRenamed</name><argument_list pos:line="1474" pos:column="52">( 
            <comment type="block" pos:line="1475" pos:column="13">/* [in] */</comment> <argument pos:line="1475" pos:column="24">ContainedLanguageRenameType clrt</argument>,
            <comment type="block" pos:line="1476" pos:column="13">/* [in] */</comment> <argument pos:line="1476" pos:column="24">__RPC__in BSTR bstrOldID</argument>,
            <comment type="block" pos:line="1477" pos:column="13">/* [in] */</comment> <argument pos:line="1477" pos:column="24">__RPC__in BSTR bstrNewID</argument>)</argument_list></macro> <op:operator pos:line="1477" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="1477" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="1479" pos:column="9">virtual <name pos:line="1479" pos:column="17">HRESULT</name> <name pos:line="1479" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1479" pos:column="43">InsertControl</name><argument_list pos:line="1479" pos:column="56">( 
            <comment type="block" pos:line="1480" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1480" pos:column="24">__RPC__in</name> const <name pos:line="1480" pos:column="40">WCHAR</name> <op:operator pos:line="1480" pos:column="46">*</op:operator><name pos:line="1480" pos:column="47">pwcFullType</name></expr></argument>,
            <comment type="block" pos:line="1481" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1481" pos:column="24">__RPC__in</name> const <name pos:line="1481" pos:column="40">WCHAR</name> <op:operator pos:line="1481" pos:column="46">*</op:operator><name pos:line="1481" pos:column="47">pwcID</name></expr></argument>)</argument_list></call> <op:operator pos:line="1481" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1481" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="1483" pos:column="9">virtual <name pos:line="1483" pos:column="17">HRESULT</name> <name pos:line="1483" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1483" pos:column="43">InsertReference</name><argument_list pos:line="1483" pos:column="58">( 
            <comment type="block" pos:line="1484" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1484" pos:column="24">__RPC__in</name> const <name pos:line="1484" pos:column="40">WCHAR</name> <op:operator pos:line="1484" pos:column="46">*</op:operator><name pos:line="1484" pos:column="47">__MIDL__IVsContainedLanguageHost0000</name></expr></argument>)</argument_list></call> <op:operator pos:line="1484" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="1484" pos:column="87">0</lit:literal></expr>;
        
        <expr pos:line="1486" pos:column="9">virtual <name pos:line="1486" pos:column="17">HRESULT</name> <name pos:line="1486" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1486" pos:column="43">GetVSHierarchy</name><argument_list pos:line="1486" pos:column="57">( 
            <comment type="block" pos:line="1487" pos:column="13">/* [out] */</comment> <argument pos:line="1487" pos:column="25">__RPC__deref_out_opt IVsHierarchy **ppVsHierarchy</argument>)</argument_list></macro> <op:operator pos:line="1487" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="1487" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="1489" pos:column="9">virtual <name pos:line="1489" pos:column="17">HRESULT</name> <name pos:line="1489" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1489" pos:column="43">GetErrorProviderInformation</name><argument_list pos:line="1489" pos:column="70">( 
            <comment type="block" pos:line="1490" pos:column="13">/* [out] */</comment> <argument pos:line="1490" pos:column="25">__RPC__deref_out_opt BSTR *pbstrTaskProviderName</argument>,
            <comment type="block" pos:line="1491" pos:column="13">/* [out] */</comment> <argument pos:line="1491" pos:column="25">__RPC__out GUID *pguidTaskProviderGuid</argument>)</argument_list></macro> <op:operator pos:line="1491" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="1491" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="1493" pos:column="9">virtual <name pos:line="1493" pos:column="17">HRESULT</name> <name pos:line="1493" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1493" pos:column="43">InsertImportsDirective</name><argument_list pos:line="1493" pos:column="65">( 
            <comment type="block" pos:line="1494" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="1494" pos:column="24">__RPC__in</name> const <name pos:line="1494" pos:column="40">WCHAR</name> <op:operator pos:line="1494" pos:column="46">*</op:operator><name pos:line="1494" pos:column="47">__MIDL__IVsContainedLanguageHost0001</name></expr></argument>)</argument_list></call> <op:operator pos:line="1494" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="1494" pos:column="87">0</lit:literal></expr>;
        
        <expr pos:line="1496" pos:column="9">virtual <name pos:line="1496" pos:column="17">HRESULT</name> <name pos:line="1496" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1496" pos:column="43">OnContainedLanguageEditorSettingsChange</name><argument_list pos:line="1496" pos:column="82">( <argument><expr><name pos:line="1496" pos:column="84">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1496" pos:column="90">=</op:operator> <lit:literal type="number" pos:line="1496" pos:column="92">0</lit:literal></expr>;
        
        <expr pos:line="1498" pos:column="9">virtual <name pos:line="1498" pos:column="17">HRESULT</name> <name pos:line="1498" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1498" pos:column="43">EnsureSecondaryBufferReady</name><argument_list pos:line="1498" pos:column="69">( <argument><expr><name pos:line="1498" pos:column="71">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1498" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="1498" pos:column="79">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1502" pos:column="1">#<cpp:directive pos:line="1502" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1502" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1504" pos:column="5">typedef <type><struct pos:line="1504" pos:column="13">struct <name pos:line="1504" pos:column="20">IVsContainedLanguageHostVtbl</name>
    <block pos:line="1505" pos:column="5">{<public type="default" pos:line="1505" pos:column="6">
        <function_decl><type><name pos:line="1506" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1508" pos:column="9">HRESULT</name></type> ( <name pos:line="1508" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1508" pos:column="37">*</type:modifier><name pos:line="1508" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1508" pos:column="54">( 
            <param><decl><type><name pos:line="1509" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1509" pos:column="38">*</type:modifier></type> <name pos:line="1509" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1510" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1510" pos:column="24">__RPC__in</name> <name pos:line="1510" pos:column="34">REFIID</name></type> <name pos:line="1510" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1511" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1512" pos:column="13">__RPC__deref_out</name>  <name pos:line="1512" pos:column="31">void</name> <type:modifier pos:line="1512" pos:column="36">*</type:modifier><type:modifier pos:line="1512" pos:column="37">*</type:modifier></type><name pos:line="1512" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1514" pos:column="9">ULONG</name></type> ( <name pos:line="1514" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1514" pos:column="35">*</type:modifier><name pos:line="1514" pos:column="36">AddRef</name> )<parameter_list pos:line="1514" pos:column="44">( 
            <param><decl><type><name pos:line="1515" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1515" pos:column="38">*</type:modifier></type> <name pos:line="1515" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1517" pos:column="9">ULONG</name></type> ( <name pos:line="1517" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1517" pos:column="35">*</type:modifier><name pos:line="1517" pos:column="36">Release</name> )<parameter_list pos:line="1517" pos:column="45">( 
            <param><decl><type><name pos:line="1518" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1518" pos:column="38">*</type:modifier></type> <name pos:line="1518" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1520" pos:column="9">HRESULT</name></type> ( <name pos:line="1520" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1520" pos:column="37">*</type:modifier><name pos:line="1520" pos:column="38">Advise</name> )<parameter_list pos:line="1520" pos:column="46">( 
            <param><decl><type><name pos:line="1521" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1521" pos:column="38">*</type:modifier></type> <name pos:line="1521" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1522" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1522" pos:column="24">__RPC__in_opt</name> <name pos:line="1522" pos:column="38">IVsContainedLanguageHostEvents</name> <type:modifier pos:line="1522" pos:column="69">*</type:modifier></type><name pos:line="1522" pos:column="70">pHost</name></decl></param>,
            <comment type="block" pos:line="1523" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1523" pos:column="25">__RPC__out</name> <name pos:line="1523" pos:column="36">VSCOOKIE</name> <type:modifier pos:line="1523" pos:column="45">*</type:modifier></type><name pos:line="1523" pos:column="46">pvsCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1525" pos:column="9">HRESULT</name></type> ( <name pos:line="1525" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1525" pos:column="37">*</type:modifier><name pos:line="1525" pos:column="38">Unadvise</name> )<parameter_list pos:line="1525" pos:column="48">( 
            <param><decl><type><name pos:line="1526" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1526" pos:column="38">*</type:modifier></type> <name pos:line="1526" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1527" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1527" pos:column="24">VSCOOKIE</name></type> <name pos:line="1527" pos:column="33">vsCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1529" pos:column="9">HRESULT</name></type> ( <name pos:line="1529" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1529" pos:column="37">*</type:modifier><name pos:line="1529" pos:column="38">GetLineIndent</name> )<parameter_list pos:line="1529" pos:column="53">( 
            <param><decl><type><name pos:line="1530" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1530" pos:column="38">*</type:modifier></type> <name pos:line="1530" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1531" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1531" pos:column="24">long</name></type> <name pos:line="1531" pos:column="29">lLineNumber</name></decl></param>,
            <comment type="block" pos:line="1532" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1532" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1532" pos:column="46">BSTR</name> <type:modifier pos:line="1532" pos:column="51">*</type:modifier></type><name pos:line="1532" pos:column="52">pbstrIndentString</name></decl></param>,
            <comment type="block" pos:line="1533" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1533" pos:column="25">__RPC__out</name> <name pos:line="1533" pos:column="36">long</name> <type:modifier pos:line="1533" pos:column="41">*</type:modifier></type><name pos:line="1533" pos:column="42">plParentIndentLevel</name></decl></param>,
            <comment type="block" pos:line="1534" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1534" pos:column="25">__RPC__out</name> <name pos:line="1534" pos:column="36">long</name> <type:modifier pos:line="1534" pos:column="41">*</type:modifier></type><name pos:line="1534" pos:column="42">plIndentSize</name></decl></param>,
            <comment type="block" pos:line="1535" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1535" pos:column="25">__RPC__out</name> <name pos:line="1535" pos:column="36">BOOL</name> <type:modifier pos:line="1535" pos:column="41">*</type:modifier></type><name pos:line="1535" pos:column="42">pfTabs</name></decl></param>,
            <comment type="block" pos:line="1536" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1536" pos:column="25">__RPC__out</name> <name pos:line="1536" pos:column="36">long</name> <type:modifier pos:line="1536" pos:column="41">*</type:modifier></type><name pos:line="1536" pos:column="42">plTabSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1538" pos:column="9">HRESULT</name></type> ( <name pos:line="1538" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1538" pos:column="37">*</type:modifier><name pos:line="1538" pos:column="38">CanReformatCode</name> )<parameter_list pos:line="1538" pos:column="55">( 
            <param><decl><type><name pos:line="1539" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1539" pos:column="38">*</type:modifier></type> <name pos:line="1539" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1540" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1540" pos:column="25">__RPC__out</name> <name pos:line="1540" pos:column="36">BOOL</name> <type:modifier pos:line="1540" pos:column="41">*</type:modifier></type><name pos:line="1540" pos:column="42">pfCanReformat</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1542" pos:column="9">HRESULT</name></type> ( <name pos:line="1542" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1542" pos:column="37">*</type:modifier><name pos:line="1542" pos:column="38">GetNearestVisibleToken</name> )<parameter_list pos:line="1542" pos:column="62">( 
            <param><decl><type><name pos:line="1543" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1543" pos:column="38">*</type:modifier></type> <name pos:line="1543" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1544" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1544" pos:column="24">TextSpan</name></type> <name pos:line="1544" pos:column="33">tsSecondaryToken</name></decl></param>,
            <comment type="block" pos:line="1545" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1545" pos:column="25">__RPC__out</name> <name pos:line="1545" pos:column="36">TextSpan</name> <type:modifier pos:line="1545" pos:column="45">*</type:modifier></type><name pos:line="1545" pos:column="46">ptsPrimaryToken</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1547" pos:column="9">HRESULT</name></type> ( <name pos:line="1547" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1547" pos:column="37">*</type:modifier><name pos:line="1547" pos:column="38">EnsureSpanVisible</name> )<parameter_list pos:line="1547" pos:column="57">( 
            <param><decl><type><name pos:line="1548" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1548" pos:column="38">*</type:modifier></type> <name pos:line="1548" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1549" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1549" pos:column="24">TextSpan</name></type> <name pos:line="1549" pos:column="33">tsPrimary</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1551" pos:column="9">HRESULT</name></type> ( <name pos:line="1551" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1551" pos:column="37">*</type:modifier><name pos:line="1551" pos:column="38">QueryEditFile</name> )<parameter_list pos:line="1551" pos:column="53">( 
            <param><decl><type><name pos:line="1552" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1552" pos:column="38">*</type:modifier></type> <name pos:line="1552" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1554" pos:column="9">HRESULT</name></type> ( <name pos:line="1554" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1554" pos:column="37">*</type:modifier><name pos:line="1554" pos:column="38">OnRenamed</name> )<parameter_list pos:line="1554" pos:column="49">( 
            <param><decl><type><name pos:line="1555" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1555" pos:column="38">*</type:modifier></type> <name pos:line="1555" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1556" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1556" pos:column="24">ContainedLanguageRenameType</name></type> <name pos:line="1556" pos:column="52">clrt</name></decl></param>,
            <comment type="block" pos:line="1557" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1557" pos:column="24">__RPC__in</name> <name pos:line="1557" pos:column="34">BSTR</name></type> <name pos:line="1557" pos:column="39">bstrOldID</name></decl></param>,
            <comment type="block" pos:line="1558" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1558" pos:column="24">__RPC__in</name> <name pos:line="1558" pos:column="34">BSTR</name></type> <name pos:line="1558" pos:column="39">bstrNewID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1560" pos:column="9">HRESULT</name></type> ( <name pos:line="1560" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1560" pos:column="37">*</type:modifier><name pos:line="1560" pos:column="38">InsertControl</name> )<parameter_list pos:line="1560" pos:column="53">( 
            <param><decl><type><name pos:line="1561" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1561" pos:column="38">*</type:modifier></type> <name pos:line="1561" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1562" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1562" pos:column="24">__RPC__in</name> <specifier pos:line="1562" pos:column="34">const</specifier> <name pos:line="1562" pos:column="40">WCHAR</name> <type:modifier pos:line="1562" pos:column="46">*</type:modifier></type><name pos:line="1562" pos:column="47">pwcFullType</name></decl></param>,
            <comment type="block" pos:line="1563" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1563" pos:column="24">__RPC__in</name> <specifier pos:line="1563" pos:column="34">const</specifier> <name pos:line="1563" pos:column="40">WCHAR</name> <type:modifier pos:line="1563" pos:column="46">*</type:modifier></type><name pos:line="1563" pos:column="47">pwcID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1565" pos:column="9">HRESULT</name></type> ( <name pos:line="1565" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1565" pos:column="37">*</type:modifier><name pos:line="1565" pos:column="38">InsertReference</name> )<parameter_list pos:line="1565" pos:column="55">( 
            <param><decl><type><name pos:line="1566" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1566" pos:column="38">*</type:modifier></type> <name pos:line="1566" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1567" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1567" pos:column="24">__RPC__in</name> <specifier pos:line="1567" pos:column="34">const</specifier> <name pos:line="1567" pos:column="40">WCHAR</name> <type:modifier pos:line="1567" pos:column="46">*</type:modifier></type><name pos:line="1567" pos:column="47">__MIDL__IVsContainedLanguageHost0000</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1569" pos:column="9">HRESULT</name></type> ( <name pos:line="1569" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1569" pos:column="37">*</type:modifier><name pos:line="1569" pos:column="38">GetVSHierarchy</name> )<parameter_list pos:line="1569" pos:column="54">( 
            <param><decl><type><name pos:line="1570" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1570" pos:column="38">*</type:modifier></type> <name pos:line="1570" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1571" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1571" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1571" pos:column="46">IVsHierarchy</name> <type:modifier pos:line="1571" pos:column="59">*</type:modifier><type:modifier pos:line="1571" pos:column="60">*</type:modifier></type><name pos:line="1571" pos:column="61">ppVsHierarchy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1573" pos:column="9">HRESULT</name></type> ( <name pos:line="1573" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1573" pos:column="37">*</type:modifier><name pos:line="1573" pos:column="38">GetErrorProviderInformation</name> )<parameter_list pos:line="1573" pos:column="67">( 
            <param><decl><type><name pos:line="1574" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1574" pos:column="38">*</type:modifier></type> <name pos:line="1574" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1575" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1575" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1575" pos:column="46">BSTR</name> <type:modifier pos:line="1575" pos:column="51">*</type:modifier></type><name pos:line="1575" pos:column="52">pbstrTaskProviderName</name></decl></param>,
            <comment type="block" pos:line="1576" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1576" pos:column="25">__RPC__out</name> <name pos:line="1576" pos:column="36">GUID</name> <type:modifier pos:line="1576" pos:column="41">*</type:modifier></type><name pos:line="1576" pos:column="42">pguidTaskProviderGuid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1578" pos:column="9">HRESULT</name></type> ( <name pos:line="1578" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1578" pos:column="37">*</type:modifier><name pos:line="1578" pos:column="38">InsertImportsDirective</name> )<parameter_list pos:line="1578" pos:column="62">( 
            <param><decl><type><name pos:line="1579" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1579" pos:column="38">*</type:modifier></type> <name pos:line="1579" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1580" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1580" pos:column="24">__RPC__in</name> <specifier pos:line="1580" pos:column="34">const</specifier> <name pos:line="1580" pos:column="40">WCHAR</name> <type:modifier pos:line="1580" pos:column="46">*</type:modifier></type><name pos:line="1580" pos:column="47">__MIDL__IVsContainedLanguageHost0001</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1582" pos:column="9">HRESULT</name></type> ( <name pos:line="1582" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1582" pos:column="37">*</type:modifier><name pos:line="1582" pos:column="38">OnContainedLanguageEditorSettingsChange</name> )<parameter_list pos:line="1582" pos:column="79">( 
            <param><decl><type><name pos:line="1583" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1583" pos:column="38">*</type:modifier></type> <name pos:line="1583" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1585" pos:column="9">HRESULT</name></type> ( <name pos:line="1585" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1585" pos:column="37">*</type:modifier><name pos:line="1585" pos:column="38">EnsureSecondaryBufferReady</name> )<parameter_list pos:line="1585" pos:column="66">( 
            <param><decl><type><name pos:line="1586" pos:column="13">IVsContainedLanguageHost</name> <type:modifier pos:line="1586" pos:column="38">*</type:modifier></type> <name pos:line="1586" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1588" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1589" pos:column="7">IVsContainedLanguageHostVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1591" pos:column="5">interface</name></type> <name pos:line="1591" pos:column="15">IVsContainedLanguageHost</name>
    <argument_list pos:line="1592" pos:column="5">{
        <argument><expr><name pos:line="1593" pos:column="9">CONST_VTBL</name> struct <name pos:line="1593" pos:column="27">IVsContainedLanguageHostVtbl</name> <op:operator pos:line="1593" pos:column="56">*</op:operator><name pos:line="1593" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1598" pos:column="1">#<cpp:directive pos:line="1598" pos:column="2">ifdef</cpp:directive> <name pos:line="1598" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1601" pos:column="1">#<cpp:directive pos:line="1601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1601" pos:column="9">IVsContainedLanguageHost_QueryInterface</name><parameter_list pos:line="1601" pos:column="48">(<param><type><name pos:line="1601" pos:column="49">This</name></type></param>,<param><type><name pos:line="1601" pos:column="54">riid</name></type></param>,<param><type><name pos:line="1601" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1602" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1604" pos:column="1">#<cpp:directive pos:line="1604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1604" pos:column="9">IVsContainedLanguageHost_AddRef</name><parameter_list pos:line="1604" pos:column="40">(<param><type><name pos:line="1604" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1605" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1607" pos:column="1">#<cpp:directive pos:line="1607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1607" pos:column="9">IVsContainedLanguageHost_Release</name><parameter_list pos:line="1607" pos:column="41">(<param><type><name pos:line="1607" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1608" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1611" pos:column="1">#<cpp:directive pos:line="1611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1611" pos:column="9">IVsContainedLanguageHost_Advise</name><parameter_list pos:line="1611" pos:column="40">(<param><type><name pos:line="1611" pos:column="41">This</name></type></param>,<param><type><name pos:line="1611" pos:column="46">pHost</name></type></param>,<param><type><name pos:line="1611" pos:column="52">pvsCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1612" pos:column="5">( (This)-&gt;lpVtbl -&gt; Advise(This,pHost,pvsCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="1614" pos:column="1">#<cpp:directive pos:line="1614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1614" pos:column="9">IVsContainedLanguageHost_Unadvise</name><parameter_list pos:line="1614" pos:column="42">(<param><type><name pos:line="1614" pos:column="43">This</name></type></param>,<param><type><name pos:line="1614" pos:column="48">vsCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1615" pos:column="5">( (This)-&gt;lpVtbl -&gt; Unadvise(This,vsCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="1617" pos:column="1">#<cpp:directive pos:line="1617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1617" pos:column="9">IVsContainedLanguageHost_GetLineIndent</name><parameter_list pos:line="1617" pos:column="47">(<param><type><name pos:line="1617" pos:column="48">This</name></type></param>,<param><type><name pos:line="1617" pos:column="53">lLineNumber</name></type></param>,<param><type><name pos:line="1617" pos:column="65">pbstrIndentString</name></type></param>,<param><type><name pos:line="1617" pos:column="83">plParentIndentLevel</name></type></param>,<param><type><name pos:line="1617" pos:column="103">plIndentSize</name></type></param>,<param><type><name pos:line="1617" pos:column="116">pfTabs</name></type></param>,<param><type><name pos:line="1617" pos:column="123">plTabSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1618" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLineIndent(This,lLineNumber,pbstrIndentString,plParentIndentLevel,plIndentSize,pfTabs,plTabSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1620" pos:column="1">#<cpp:directive pos:line="1620" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1620" pos:column="9">IVsContainedLanguageHost_CanReformatCode</name><parameter_list pos:line="1620" pos:column="49">(<param><type><name pos:line="1620" pos:column="50">This</name></type></param>,<param><type><name pos:line="1620" pos:column="55">pfCanReformat</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1621" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanReformatCode(This,pfCanReformat) )</cpp:value></cpp:define> 

<cpp:define pos:line="1623" pos:column="1">#<cpp:directive pos:line="1623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1623" pos:column="9">IVsContainedLanguageHost_GetNearestVisibleToken</name><parameter_list pos:line="1623" pos:column="56">(<param><type><name pos:line="1623" pos:column="57">This</name></type></param>,<param><type><name pos:line="1623" pos:column="62">tsSecondaryToken</name></type></param>,<param><type><name pos:line="1623" pos:column="79">ptsPrimaryToken</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1624" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNearestVisibleToken(This,tsSecondaryToken,ptsPrimaryToken) )</cpp:value></cpp:define> 

<cpp:define pos:line="1626" pos:column="1">#<cpp:directive pos:line="1626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1626" pos:column="9">IVsContainedLanguageHost_EnsureSpanVisible</name><parameter_list pos:line="1626" pos:column="51">(<param><type><name pos:line="1626" pos:column="52">This</name></type></param>,<param><type><name pos:line="1626" pos:column="57">tsPrimary</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1627" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnsureSpanVisible(This,tsPrimary) )</cpp:value></cpp:define> 

<cpp:define pos:line="1629" pos:column="1">#<cpp:directive pos:line="1629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1629" pos:column="9">IVsContainedLanguageHost_QueryEditFile</name><parameter_list pos:line="1629" pos:column="47">(<param><type><name pos:line="1629" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1630" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryEditFile(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1632" pos:column="1">#<cpp:directive pos:line="1632" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1632" pos:column="9">IVsContainedLanguageHost_OnRenamed</name><parameter_list pos:line="1632" pos:column="43">(<param><type><name pos:line="1632" pos:column="44">This</name></type></param>,<param><type><name pos:line="1632" pos:column="49">clrt</name></type></param>,<param><type><name pos:line="1632" pos:column="54">bstrOldID</name></type></param>,<param><type><name pos:line="1632" pos:column="64">bstrNewID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1633" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnRenamed(This,clrt,bstrOldID,bstrNewID) )</cpp:value></cpp:define> 

<cpp:define pos:line="1635" pos:column="1">#<cpp:directive pos:line="1635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1635" pos:column="9">IVsContainedLanguageHost_InsertControl</name><parameter_list pos:line="1635" pos:column="47">(<param><type><name pos:line="1635" pos:column="48">This</name></type></param>,<param><type><name pos:line="1635" pos:column="53">pwcFullType</name></type></param>,<param><type><name pos:line="1635" pos:column="65">pwcID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1636" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertControl(This,pwcFullType,pwcID) )</cpp:value></cpp:define> 

<cpp:define pos:line="1638" pos:column="1">#<cpp:directive pos:line="1638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1638" pos:column="9">IVsContainedLanguageHost_InsertReference</name><parameter_list pos:line="1638" pos:column="49">(<param><type><name pos:line="1638" pos:column="50">This</name></type></param>,<param><type><name pos:line="1638" pos:column="55">__MIDL__IVsContainedLanguageHost0000</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1639" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertReference(This,__MIDL__IVsContainedLanguageHost0000) )</cpp:value></cpp:define> 

<cpp:define pos:line="1641" pos:column="1">#<cpp:directive pos:line="1641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1641" pos:column="9">IVsContainedLanguageHost_GetVSHierarchy</name><parameter_list pos:line="1641" pos:column="48">(<param><type><name pos:line="1641" pos:column="49">This</name></type></param>,<param><type><name pos:line="1641" pos:column="54">ppVsHierarchy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1642" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetVSHierarchy(This,ppVsHierarchy) )</cpp:value></cpp:define> 

<cpp:define pos:line="1644" pos:column="1">#<cpp:directive pos:line="1644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1644" pos:column="9">IVsContainedLanguageHost_GetErrorProviderInformation</name><parameter_list pos:line="1644" pos:column="61">(<param><type><name pos:line="1644" pos:column="62">This</name></type></param>,<param><type><name pos:line="1644" pos:column="67">pbstrTaskProviderName</name></type></param>,<param><type><name pos:line="1644" pos:column="89">pguidTaskProviderGuid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1645" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetErrorProviderInformation(This,pbstrTaskProviderName,pguidTaskProviderGuid) )</cpp:value></cpp:define> 

<cpp:define pos:line="1647" pos:column="1">#<cpp:directive pos:line="1647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1647" pos:column="9">IVsContainedLanguageHost_InsertImportsDirective</name><parameter_list pos:line="1647" pos:column="56">(<param><type><name pos:line="1647" pos:column="57">This</name></type></param>,<param><type><name pos:line="1647" pos:column="62">__MIDL__IVsContainedLanguageHost0001</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1648" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertImportsDirective(This,__MIDL__IVsContainedLanguageHost0001) )</cpp:value></cpp:define> 

<cpp:define pos:line="1650" pos:column="1">#<cpp:directive pos:line="1650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1650" pos:column="9">IVsContainedLanguageHost_OnContainedLanguageEditorSettingsChange</name><parameter_list pos:line="1650" pos:column="73">(<param><type><name pos:line="1650" pos:column="74">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1651" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnContainedLanguageEditorSettingsChange(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1653" pos:column="1">#<cpp:directive pos:line="1653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1653" pos:column="9">IVsContainedLanguageHost_EnsureSecondaryBufferReady</name><parameter_list pos:line="1653" pos:column="60">(<param><type><name pos:line="1653" pos:column="61">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1654" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnsureSecondaryBufferReady(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1656" pos:column="1">#<cpp:directive pos:line="1656" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1656" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1659" pos:column="1">#<cpp:directive pos:line="1659" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1659" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1664" pos:column="1">#<cpp:directive pos:line="1664" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1664" pos:column="9">/* __IVsContainedLanguageHost_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1667" pos:column="1">#<cpp:directive pos:line="1667" pos:column="2">ifndef</cpp:directive> <name pos:line="1667" pos:column="9">__IVsContainedLanguageHostEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1668" pos:column="1">#<cpp:directive pos:line="1668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1668" pos:column="9">__IVsContainedLanguageHostEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1670" pos:column="1">/* interface IVsContainedLanguageHostEvents */</comment>
<comment type="block" pos:line="1671" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1674" pos:column="1">EXTERN_C</name> <specifier pos:line="1674" pos:column="10">const</specifier> <name pos:line="1674" pos:column="16">IID</name></type> <name pos:line="1674" pos:column="20">IID_IVsContainedLanguageHostEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="1676" pos:column="1">#<cpp:directive pos:line="1676" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1676" pos:column="5">defined</name><argument_list pos:line="1676" pos:column="12">(<argument><expr><name pos:line="1676" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1676" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1676" pos:column="29">!</op:operator><call><name pos:line="1676" pos:column="30">defined</name><argument_list pos:line="1676" pos:column="37">(<argument><expr><name pos:line="1676" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1678" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1678" pos:column="19">(<argument pos:line="1678" pos:column="20">"F2A52136-803E-4cef-BBA7-52D610FE34BA"</argument>)</argument_list></macro>
    <label><name pos:line="1679" pos:column="5">IVsContainedLanguageHostEvents</name> :</label> <expr_stmt><expr pos:line="1679" pos:column="38">public <name pos:line="1679" pos:column="45">IUnknown</name>
    <block pos:line="1680" pos:column="5">{
    <expr pos:line="1681" pos:column="5">public<op:operator pos:line="1681" pos:column="11">:</op:operator>
        virtual <name pos:line="1682" pos:column="17">HRESULT</name> <name pos:line="1682" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1682" pos:column="43">OnViewChange</name><argument_list pos:line="1682" pos:column="55">( 
            <comment type="block" pos:line="1683" pos:column="13">/* [in] */</comment> <argument pos:line="1683" pos:column="24">BOOL fTextView</argument>)</argument_list></macro> <op:operator pos:line="1683" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="1683" pos:column="42">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1687" pos:column="1">#<cpp:directive pos:line="1687" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1687" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1689" pos:column="5">typedef <type><struct pos:line="1689" pos:column="13">struct <name pos:line="1689" pos:column="20">IVsContainedLanguageHostEventsVtbl</name>
    <block pos:line="1690" pos:column="5">{<public type="default" pos:line="1690" pos:column="6">
        <function_decl><type><name pos:line="1691" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1693" pos:column="9">HRESULT</name></type> ( <name pos:line="1693" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1693" pos:column="37">*</type:modifier><name pos:line="1693" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1693" pos:column="54">( 
            <param><decl><type><name pos:line="1694" pos:column="13">IVsContainedLanguageHostEvents</name> <type:modifier pos:line="1694" pos:column="44">*</type:modifier></type> <name pos:line="1694" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="1695" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1695" pos:column="24">__RPC__in</name> <name pos:line="1695" pos:column="34">REFIID</name></type> <name pos:line="1695" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1696" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1697" pos:column="13">__RPC__deref_out</name>  <name pos:line="1697" pos:column="31">void</name> <type:modifier pos:line="1697" pos:column="36">*</type:modifier><type:modifier pos:line="1697" pos:column="37">*</type:modifier></type><name pos:line="1697" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1699" pos:column="9">ULONG</name></type> ( <name pos:line="1699" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1699" pos:column="35">*</type:modifier><name pos:line="1699" pos:column="36">AddRef</name> )<parameter_list pos:line="1699" pos:column="44">( 
            <param><decl><type><name pos:line="1700" pos:column="13">IVsContainedLanguageHostEvents</name> <type:modifier pos:line="1700" pos:column="44">*</type:modifier></type> <name pos:line="1700" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1702" pos:column="9">ULONG</name></type> ( <name pos:line="1702" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1702" pos:column="35">*</type:modifier><name pos:line="1702" pos:column="36">Release</name> )<parameter_list pos:line="1702" pos:column="45">( 
            <param><decl><type><name pos:line="1703" pos:column="13">IVsContainedLanguageHostEvents</name> <type:modifier pos:line="1703" pos:column="44">*</type:modifier></type> <name pos:line="1703" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1705" pos:column="9">HRESULT</name></type> ( <name pos:line="1705" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1705" pos:column="37">*</type:modifier><name pos:line="1705" pos:column="38">OnViewChange</name> )<parameter_list pos:line="1705" pos:column="52">( 
            <param><decl><type><name pos:line="1706" pos:column="13">IVsContainedLanguageHostEvents</name> <type:modifier pos:line="1706" pos:column="44">*</type:modifier></type> <name pos:line="1706" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="1707" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1707" pos:column="24">BOOL</name></type> <name pos:line="1707" pos:column="29">fTextView</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1709" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1710" pos:column="7">IVsContainedLanguageHostEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1712" pos:column="5">interface</name></type> <name pos:line="1712" pos:column="15">IVsContainedLanguageHostEvents</name>
    <argument_list pos:line="1713" pos:column="5">{
        <argument><expr><name pos:line="1714" pos:column="9">CONST_VTBL</name> struct <name pos:line="1714" pos:column="27">IVsContainedLanguageHostEventsVtbl</name> <op:operator pos:line="1714" pos:column="62">*</op:operator><name pos:line="1714" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1719" pos:column="1">#<cpp:directive pos:line="1719" pos:column="2">ifdef</cpp:directive> <name pos:line="1719" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1722" pos:column="1">#<cpp:directive pos:line="1722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1722" pos:column="9">IVsContainedLanguageHostEvents_QueryInterface</name><parameter_list pos:line="1722" pos:column="54">(<param><type><name pos:line="1722" pos:column="55">This</name></type></param>,<param><type><name pos:line="1722" pos:column="60">riid</name></type></param>,<param><type><name pos:line="1722" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1723" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1725" pos:column="1">#<cpp:directive pos:line="1725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1725" pos:column="9">IVsContainedLanguageHostEvents_AddRef</name><parameter_list pos:line="1725" pos:column="46">(<param><type><name pos:line="1725" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1726" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1728" pos:column="1">#<cpp:directive pos:line="1728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1728" pos:column="9">IVsContainedLanguageHostEvents_Release</name><parameter_list pos:line="1728" pos:column="47">(<param><type><name pos:line="1728" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1729" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1732" pos:column="1">#<cpp:directive pos:line="1732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1732" pos:column="9">IVsContainedLanguageHostEvents_OnViewChange</name><parameter_list pos:line="1732" pos:column="52">(<param><type><name pos:line="1732" pos:column="53">This</name></type></param>,<param><type><name pos:line="1732" pos:column="58">fTextView</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1733" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnViewChange(This,fTextView) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1735" pos:column="1">#<cpp:directive pos:line="1735" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1735" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1738" pos:column="1">#<cpp:directive pos:line="1738" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1738" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1743" pos:column="1">#<cpp:directive pos:line="1743" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1743" pos:column="9">/* __IVsContainedLanguageHostEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1746" pos:column="1">#<cpp:directive pos:line="1746" pos:column="2">ifndef</cpp:directive> <name pos:line="1746" pos:column="9">__IVsContainedLanguage_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1747" pos:column="1">#<cpp:directive pos:line="1747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1747" pos:column="9">__IVsContainedLanguage_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1749" pos:column="1">/* interface IVsContainedLanguage */</comment>
<comment type="block" pos:line="1750" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1753" pos:column="1">EXTERN_C</name> <specifier pos:line="1753" pos:column="10">const</specifier> <name pos:line="1753" pos:column="16">IID</name></type> <name pos:line="1753" pos:column="20">IID_IVsContainedLanguage</name></decl>;</decl_stmt>

<cpp:if pos:line="1755" pos:column="1">#<cpp:directive pos:line="1755" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1755" pos:column="5">defined</name><argument_list pos:line="1755" pos:column="12">(<argument><expr><name pos:line="1755" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1755" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1755" pos:column="29">!</op:operator><call><name pos:line="1755" pos:column="30">defined</name><argument_list pos:line="1755" pos:column="37">(<argument><expr><name pos:line="1755" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1757" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1757" pos:column="19">(<argument pos:line="1757" pos:column="20">"518ab114-e3c6-4bbc-a469-99279f1a54e9"</argument>)</argument_list></macro>
    <label><name pos:line="1758" pos:column="5">IVsContainedLanguage</name> :</label> <expr_stmt><expr pos:line="1758" pos:column="28">public <name pos:line="1758" pos:column="35">IUnknown</name>
    <block pos:line="1759" pos:column="5">{
    <expr pos:line="1760" pos:column="5">public<op:operator pos:line="1760" pos:column="11">:</op:operator>
        virtual <name pos:line="1761" pos:column="17">HRESULT</name> <name pos:line="1761" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1761" pos:column="43">SetHost</name><argument_list pos:line="1761" pos:column="50">( 
            <comment type="block" pos:line="1762" pos:column="13">/* [in] */</comment> <argument pos:line="1762" pos:column="24">__RPC__in_opt IVsContainedLanguageHost *pHost</argument>)</argument_list></macro> <op:operator pos:line="1762" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1762" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1764" pos:column="9">virtual <name pos:line="1764" pos:column="17">HRESULT</name> <name pos:line="1764" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1764" pos:column="43">GetColorizer</name><argument_list pos:line="1764" pos:column="55">( 
            <comment type="block" pos:line="1765" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1765" pos:column="33">__RPC__deref_out_opt IVsColorizer **ppColorizer</argument>)</argument_list></macro> <op:operator pos:line="1765" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="1765" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="1767" pos:column="9">virtual <name pos:line="1767" pos:column="17">HRESULT</name> <name pos:line="1767" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1767" pos:column="43">GetTextViewFilter</name><argument_list pos:line="1767" pos:column="60">( 
            <comment type="block" pos:line="1768" pos:column="13">/* [in] */</comment> <argument pos:line="1768" pos:column="24">__RPC__in_opt IVsIntellisenseHost *pISenseHost</argument>,
            <comment type="block" pos:line="1769" pos:column="13">/* [in] */</comment> <argument pos:line="1769" pos:column="24">__RPC__in_opt IOleCommandTarget *pNextCmdTarget</argument>,
            <comment type="block" pos:line="1770" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1770" pos:column="33">__RPC__deref_out_opt IVsTextViewFilter **pTextViewFilter</argument>)</argument_list></macro> <op:operator pos:line="1770" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="1770" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="1772" pos:column="9">virtual <name pos:line="1772" pos:column="17">HRESULT</name> <name pos:line="1772" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1772" pos:column="43">GetLanguageServiceID</name><argument_list pos:line="1772" pos:column="63">( 
            <comment type="block" pos:line="1773" pos:column="13">/* [out] */</comment> <argument pos:line="1773" pos:column="25">__RPC__out GUID *pguidLangService</argument>)</argument_list></macro> <op:operator pos:line="1773" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="1773" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="1775" pos:column="9">virtual <name pos:line="1775" pos:column="17">HRESULT</name> <name pos:line="1775" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1775" pos:column="43">SetBufferCoordinator</name><argument_list pos:line="1775" pos:column="63">( 
            <comment type="block" pos:line="1776" pos:column="13">/* [in] */</comment> <argument pos:line="1776" pos:column="24">__RPC__in_opt IVsTextBufferCoordinator *pBC</argument>)</argument_list></macro> <op:operator pos:line="1776" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1776" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1778" pos:column="9">virtual <name pos:line="1778" pos:column="17">HRESULT</name> <name pos:line="1778" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1778" pos:column="43">Refresh</name><argument_list pos:line="1778" pos:column="50">( 
            <comment type="block" pos:line="1779" pos:column="13">/* [in] */</comment> <argument pos:line="1779" pos:column="24">DWORD dwRefreshMode</argument>)</argument_list></macro> <op:operator pos:line="1779" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="1779" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="1781" pos:column="9">virtual <name pos:line="1781" pos:column="17">HRESULT</name> <name pos:line="1781" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1781" pos:column="43">WaitForReadyState</name><argument_list pos:line="1781" pos:column="60">( <argument><expr><name pos:line="1781" pos:column="62">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1781" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="1781" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1785" pos:column="1">#<cpp:directive pos:line="1785" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1785" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1787" pos:column="5">typedef <type><struct pos:line="1787" pos:column="13">struct <name pos:line="1787" pos:column="20">IVsContainedLanguageVtbl</name>
    <block pos:line="1788" pos:column="5">{<public type="default" pos:line="1788" pos:column="6">
        <function_decl><type><name pos:line="1789" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1791" pos:column="9">HRESULT</name></type> ( <name pos:line="1791" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1791" pos:column="37">*</type:modifier><name pos:line="1791" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1791" pos:column="54">( 
            <param><decl><type><name pos:line="1792" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1792" pos:column="34">*</type:modifier></type> <name pos:line="1792" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1793" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1793" pos:column="24">__RPC__in</name> <name pos:line="1793" pos:column="34">REFIID</name></type> <name pos:line="1793" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1794" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1795" pos:column="13">__RPC__deref_out</name>  <name pos:line="1795" pos:column="31">void</name> <type:modifier pos:line="1795" pos:column="36">*</type:modifier><type:modifier pos:line="1795" pos:column="37">*</type:modifier></type><name pos:line="1795" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1797" pos:column="9">ULONG</name></type> ( <name pos:line="1797" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1797" pos:column="35">*</type:modifier><name pos:line="1797" pos:column="36">AddRef</name> )<parameter_list pos:line="1797" pos:column="44">( 
            <param><decl><type><name pos:line="1798" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1798" pos:column="34">*</type:modifier></type> <name pos:line="1798" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1800" pos:column="9">ULONG</name></type> ( <name pos:line="1800" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1800" pos:column="35">*</type:modifier><name pos:line="1800" pos:column="36">Release</name> )<parameter_list pos:line="1800" pos:column="45">( 
            <param><decl><type><name pos:line="1801" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1801" pos:column="34">*</type:modifier></type> <name pos:line="1801" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1803" pos:column="9">HRESULT</name></type> ( <name pos:line="1803" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1803" pos:column="37">*</type:modifier><name pos:line="1803" pos:column="38">SetHost</name> )<parameter_list pos:line="1803" pos:column="47">( 
            <param><decl><type><name pos:line="1804" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1804" pos:column="34">*</type:modifier></type> <name pos:line="1804" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1805" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1805" pos:column="24">__RPC__in_opt</name> <name pos:line="1805" pos:column="38">IVsContainedLanguageHost</name> <type:modifier pos:line="1805" pos:column="63">*</type:modifier></type><name pos:line="1805" pos:column="64">pHost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1807" pos:column="9">HRESULT</name></type> ( <name pos:line="1807" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1807" pos:column="37">*</type:modifier><name pos:line="1807" pos:column="38">GetColorizer</name> )<parameter_list pos:line="1807" pos:column="52">( 
            <param><decl><type><name pos:line="1808" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1808" pos:column="34">*</type:modifier></type> <name pos:line="1808" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1809" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1809" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1809" pos:column="54">IVsColorizer</name> <type:modifier pos:line="1809" pos:column="67">*</type:modifier><type:modifier pos:line="1809" pos:column="68">*</type:modifier></type><name pos:line="1809" pos:column="69">ppColorizer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1811" pos:column="9">HRESULT</name></type> ( <name pos:line="1811" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1811" pos:column="37">*</type:modifier><name pos:line="1811" pos:column="38">GetTextViewFilter</name> )<parameter_list pos:line="1811" pos:column="57">( 
            <param><decl><type><name pos:line="1812" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1812" pos:column="34">*</type:modifier></type> <name pos:line="1812" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1813" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1813" pos:column="24">__RPC__in_opt</name> <name pos:line="1813" pos:column="38">IVsIntellisenseHost</name> <type:modifier pos:line="1813" pos:column="58">*</type:modifier></type><name pos:line="1813" pos:column="59">pISenseHost</name></decl></param>,
            <comment type="block" pos:line="1814" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1814" pos:column="24">__RPC__in_opt</name> <name pos:line="1814" pos:column="38">IOleCommandTarget</name> <type:modifier pos:line="1814" pos:column="56">*</type:modifier></type><name pos:line="1814" pos:column="57">pNextCmdTarget</name></decl></param>,
            <comment type="block" pos:line="1815" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1815" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1815" pos:column="54">IVsTextViewFilter</name> <type:modifier pos:line="1815" pos:column="72">*</type:modifier><type:modifier pos:line="1815" pos:column="73">*</type:modifier></type><name pos:line="1815" pos:column="74">pTextViewFilter</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1817" pos:column="9">HRESULT</name></type> ( <name pos:line="1817" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1817" pos:column="37">*</type:modifier><name pos:line="1817" pos:column="38">GetLanguageServiceID</name> )<parameter_list pos:line="1817" pos:column="60">( 
            <param><decl><type><name pos:line="1818" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1818" pos:column="34">*</type:modifier></type> <name pos:line="1818" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1819" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1819" pos:column="25">__RPC__out</name> <name pos:line="1819" pos:column="36">GUID</name> <type:modifier pos:line="1819" pos:column="41">*</type:modifier></type><name pos:line="1819" pos:column="42">pguidLangService</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1821" pos:column="9">HRESULT</name></type> ( <name pos:line="1821" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1821" pos:column="37">*</type:modifier><name pos:line="1821" pos:column="38">SetBufferCoordinator</name> )<parameter_list pos:line="1821" pos:column="60">( 
            <param><decl><type><name pos:line="1822" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1822" pos:column="34">*</type:modifier></type> <name pos:line="1822" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1823" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1823" pos:column="24">__RPC__in_opt</name> <name pos:line="1823" pos:column="38">IVsTextBufferCoordinator</name> <type:modifier pos:line="1823" pos:column="63">*</type:modifier></type><name pos:line="1823" pos:column="64">pBC</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1825" pos:column="9">HRESULT</name></type> ( <name pos:line="1825" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1825" pos:column="37">*</type:modifier><name pos:line="1825" pos:column="38">Refresh</name> )<parameter_list pos:line="1825" pos:column="47">( 
            <param><decl><type><name pos:line="1826" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1826" pos:column="34">*</type:modifier></type> <name pos:line="1826" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1827" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1827" pos:column="24">DWORD</name></type> <name pos:line="1827" pos:column="30">dwRefreshMode</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1829" pos:column="9">HRESULT</name></type> ( <name pos:line="1829" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1829" pos:column="37">*</type:modifier><name pos:line="1829" pos:column="38">WaitForReadyState</name> )<parameter_list pos:line="1829" pos:column="57">( 
            <param><decl><type><name pos:line="1830" pos:column="13">IVsContainedLanguage</name> <type:modifier pos:line="1830" pos:column="34">*</type:modifier></type> <name pos:line="1830" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1832" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1833" pos:column="7">IVsContainedLanguageVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1835" pos:column="5">interface</name></type> <name pos:line="1835" pos:column="15">IVsContainedLanguage</name>
    <argument_list pos:line="1836" pos:column="5">{
        <argument><expr><name pos:line="1837" pos:column="9">CONST_VTBL</name> struct <name pos:line="1837" pos:column="27">IVsContainedLanguageVtbl</name> <op:operator pos:line="1837" pos:column="52">*</op:operator><name pos:line="1837" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1842" pos:column="1">#<cpp:directive pos:line="1842" pos:column="2">ifdef</cpp:directive> <name pos:line="1842" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1845" pos:column="1">#<cpp:directive pos:line="1845" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1845" pos:column="9">IVsContainedLanguage_QueryInterface</name><parameter_list pos:line="1845" pos:column="44">(<param><type><name pos:line="1845" pos:column="45">This</name></type></param>,<param><type><name pos:line="1845" pos:column="50">riid</name></type></param>,<param><type><name pos:line="1845" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1846" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1848" pos:column="1">#<cpp:directive pos:line="1848" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1848" pos:column="9">IVsContainedLanguage_AddRef</name><parameter_list pos:line="1848" pos:column="36">(<param><type><name pos:line="1848" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1849" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1851" pos:column="1">#<cpp:directive pos:line="1851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1851" pos:column="9">IVsContainedLanguage_Release</name><parameter_list pos:line="1851" pos:column="37">(<param><type><name pos:line="1851" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1852" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1855" pos:column="1">#<cpp:directive pos:line="1855" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1855" pos:column="9">IVsContainedLanguage_SetHost</name><parameter_list pos:line="1855" pos:column="37">(<param><type><name pos:line="1855" pos:column="38">This</name></type></param>,<param><type><name pos:line="1855" pos:column="43">pHost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1856" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetHost(This,pHost) )</cpp:value></cpp:define> 

<cpp:define pos:line="1858" pos:column="1">#<cpp:directive pos:line="1858" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1858" pos:column="9">IVsContainedLanguage_GetColorizer</name><parameter_list pos:line="1858" pos:column="42">(<param><type><name pos:line="1858" pos:column="43">This</name></type></param>,<param><type><name pos:line="1858" pos:column="48">ppColorizer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1859" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetColorizer(This,ppColorizer) )</cpp:value></cpp:define> 

<cpp:define pos:line="1861" pos:column="1">#<cpp:directive pos:line="1861" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1861" pos:column="9">IVsContainedLanguage_GetTextViewFilter</name><parameter_list pos:line="1861" pos:column="47">(<param><type><name pos:line="1861" pos:column="48">This</name></type></param>,<param><type><name pos:line="1861" pos:column="53">pISenseHost</name></type></param>,<param><type><name pos:line="1861" pos:column="65">pNextCmdTarget</name></type></param>,<param><type><name pos:line="1861" pos:column="80">pTextViewFilter</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1862" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextViewFilter(This,pISenseHost,pNextCmdTarget,pTextViewFilter) )</cpp:value></cpp:define> 

<cpp:define pos:line="1864" pos:column="1">#<cpp:directive pos:line="1864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1864" pos:column="9">IVsContainedLanguage_GetLanguageServiceID</name><parameter_list pos:line="1864" pos:column="50">(<param><type><name pos:line="1864" pos:column="51">This</name></type></param>,<param><type><name pos:line="1864" pos:column="56">pguidLangService</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1865" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguageServiceID(This,pguidLangService) )</cpp:value></cpp:define> 

<cpp:define pos:line="1867" pos:column="1">#<cpp:directive pos:line="1867" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1867" pos:column="9">IVsContainedLanguage_SetBufferCoordinator</name><parameter_list pos:line="1867" pos:column="50">(<param><type><name pos:line="1867" pos:column="51">This</name></type></param>,<param><type><name pos:line="1867" pos:column="56">pBC</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1868" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBufferCoordinator(This,pBC) )</cpp:value></cpp:define> 

<cpp:define pos:line="1870" pos:column="1">#<cpp:directive pos:line="1870" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1870" pos:column="9">IVsContainedLanguage_Refresh</name><parameter_list pos:line="1870" pos:column="37">(<param><type><name pos:line="1870" pos:column="38">This</name></type></param>,<param><type><name pos:line="1870" pos:column="43">dwRefreshMode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1871" pos:column="5">( (This)-&gt;lpVtbl -&gt; Refresh(This,dwRefreshMode) )</cpp:value></cpp:define> 

<cpp:define pos:line="1873" pos:column="1">#<cpp:directive pos:line="1873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1873" pos:column="9">IVsContainedLanguage_WaitForReadyState</name><parameter_list pos:line="1873" pos:column="47">(<param><type><name pos:line="1873" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1874" pos:column="5">( (This)-&gt;lpVtbl -&gt; WaitForReadyState(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1876" pos:column="1">#<cpp:directive pos:line="1876" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1876" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1879" pos:column="1">#<cpp:directive pos:line="1879" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1879" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1884" pos:column="1">#<cpp:directive pos:line="1884" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1884" pos:column="9">/* __IVsContainedLanguage_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1887" pos:column="1">#<cpp:directive pos:line="1887" pos:column="2">ifndef</cpp:directive> <name pos:line="1887" pos:column="9">__IVsContainedLanguageColorizer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1888" pos:column="1">#<cpp:directive pos:line="1888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1888" pos:column="9">__IVsContainedLanguageColorizer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1890" pos:column="1">/* interface IVsContainedLanguageColorizer */</comment>
<comment type="block" pos:line="1891" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1894" pos:column="1">EXTERN_C</name> <specifier pos:line="1894" pos:column="10">const</specifier> <name pos:line="1894" pos:column="16">IID</name></type> <name pos:line="1894" pos:column="20">IID_IVsContainedLanguageColorizer</name></decl>;</decl_stmt>

<cpp:if pos:line="1896" pos:column="1">#<cpp:directive pos:line="1896" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1896" pos:column="5">defined</name><argument_list pos:line="1896" pos:column="12">(<argument><expr><name pos:line="1896" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1896" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1896" pos:column="29">!</op:operator><call><name pos:line="1896" pos:column="30">defined</name><argument_list pos:line="1896" pos:column="37">(<argument><expr><name pos:line="1896" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1898" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1898" pos:column="19">(<argument pos:line="1898" pos:column="20">"88105779-D75B-459e-B7AD-78F63BD40714"</argument>)</argument_list></macro>
    <label><name pos:line="1899" pos:column="5">IVsContainedLanguageColorizer</name> :</label> <expr_stmt><expr pos:line="1899" pos:column="37">public <name pos:line="1899" pos:column="44">IUnknown</name>
    <block pos:line="1900" pos:column="5">{
    <expr pos:line="1901" pos:column="5">public<op:operator pos:line="1901" pos:column="11">:</op:operator>
        virtual <name pos:line="1902" pos:column="17">HRESULT</name> <name pos:line="1902" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1902" pos:column="43">ColorizeLineFragment</name><argument_list pos:line="1902" pos:column="63">( 
            <comment type="block" pos:line="1903" pos:column="13">/* [in] */</comment> <argument pos:line="1903" pos:column="24">long iLine</argument>,
            <comment type="block" pos:line="1904" pos:column="13">/* [in] */</comment> <argument pos:line="1904" pos:column="24">long iIndex</argument>,
            <comment type="block" pos:line="1905" pos:column="13">/* [in] */</comment> <argument pos:line="1905" pos:column="24">long iLength</argument>,
            <comment type="block" pos:line="1906" pos:column="13">/* [in] */</comment> <argument pos:line="1906" pos:column="24">__RPC__in const WCHAR *pszText</argument>,
            <comment type="block" pos:line="1907" pos:column="13">/* [in] */</comment> <argument pos:line="1907" pos:column="24">long iState</argument>,
            <comment type="block" pos:line="1908" pos:column="13">/* [out] */</comment> <argument pos:line="1908" pos:column="25">__RPC__out ULONG *pAttributes</argument>,
            <comment type="block" pos:line="1909" pos:column="13">/* [out] */</comment> <argument pos:line="1909" pos:column="25">__RPC__out long *piNewState</argument>)</argument_list></macro> <op:operator pos:line="1909" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="1909" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1913" pos:column="1">#<cpp:directive pos:line="1913" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1913" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1915" pos:column="5">typedef <type><struct pos:line="1915" pos:column="13">struct <name pos:line="1915" pos:column="20">IVsContainedLanguageColorizerVtbl</name>
    <block pos:line="1916" pos:column="5">{<public type="default" pos:line="1916" pos:column="6">
        <function_decl><type><name pos:line="1917" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1919" pos:column="9">HRESULT</name></type> ( <name pos:line="1919" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1919" pos:column="37">*</type:modifier><name pos:line="1919" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1919" pos:column="54">( 
            <param><decl><type><name pos:line="1920" pos:column="13">IVsContainedLanguageColorizer</name> <type:modifier pos:line="1920" pos:column="43">*</type:modifier></type> <name pos:line="1920" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="1921" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1921" pos:column="24">__RPC__in</name> <name pos:line="1921" pos:column="34">REFIID</name></type> <name pos:line="1921" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1922" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1923" pos:column="13">__RPC__deref_out</name>  <name pos:line="1923" pos:column="31">void</name> <type:modifier pos:line="1923" pos:column="36">*</type:modifier><type:modifier pos:line="1923" pos:column="37">*</type:modifier></type><name pos:line="1923" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1925" pos:column="9">ULONG</name></type> ( <name pos:line="1925" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1925" pos:column="35">*</type:modifier><name pos:line="1925" pos:column="36">AddRef</name> )<parameter_list pos:line="1925" pos:column="44">( 
            <param><decl><type><name pos:line="1926" pos:column="13">IVsContainedLanguageColorizer</name> <type:modifier pos:line="1926" pos:column="43">*</type:modifier></type> <name pos:line="1926" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1928" pos:column="9">ULONG</name></type> ( <name pos:line="1928" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1928" pos:column="35">*</type:modifier><name pos:line="1928" pos:column="36">Release</name> )<parameter_list pos:line="1928" pos:column="45">( 
            <param><decl><type><name pos:line="1929" pos:column="13">IVsContainedLanguageColorizer</name> <type:modifier pos:line="1929" pos:column="43">*</type:modifier></type> <name pos:line="1929" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1931" pos:column="9">HRESULT</name></type> ( <name pos:line="1931" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1931" pos:column="37">*</type:modifier><name pos:line="1931" pos:column="38">ColorizeLineFragment</name> )<parameter_list pos:line="1931" pos:column="60">( 
            <param><decl><type><name pos:line="1932" pos:column="13">IVsContainedLanguageColorizer</name> <type:modifier pos:line="1932" pos:column="43">*</type:modifier></type> <name pos:line="1932" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="1933" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1933" pos:column="24">long</name></type> <name pos:line="1933" pos:column="29">iLine</name></decl></param>,
            <comment type="block" pos:line="1934" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1934" pos:column="24">long</name></type> <name pos:line="1934" pos:column="29">iIndex</name></decl></param>,
            <comment type="block" pos:line="1935" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1935" pos:column="24">long</name></type> <name pos:line="1935" pos:column="29">iLength</name></decl></param>,
            <comment type="block" pos:line="1936" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1936" pos:column="24">__RPC__in</name> <specifier pos:line="1936" pos:column="34">const</specifier> <name pos:line="1936" pos:column="40">WCHAR</name> <type:modifier pos:line="1936" pos:column="46">*</type:modifier></type><name pos:line="1936" pos:column="47">pszText</name></decl></param>,
            <comment type="block" pos:line="1937" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1937" pos:column="24">long</name></type> <name pos:line="1937" pos:column="29">iState</name></decl></param>,
            <comment type="block" pos:line="1938" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1938" pos:column="25">__RPC__out</name> <name pos:line="1938" pos:column="36">ULONG</name> <type:modifier pos:line="1938" pos:column="42">*</type:modifier></type><name pos:line="1938" pos:column="43">pAttributes</name></decl></param>,
            <comment type="block" pos:line="1939" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1939" pos:column="25">__RPC__out</name> <name pos:line="1939" pos:column="36">long</name> <type:modifier pos:line="1939" pos:column="41">*</type:modifier></type><name pos:line="1939" pos:column="42">piNewState</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1941" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1942" pos:column="7">IVsContainedLanguageColorizerVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1944" pos:column="5">interface</name></type> <name pos:line="1944" pos:column="15">IVsContainedLanguageColorizer</name>
    <argument_list pos:line="1945" pos:column="5">{
        <argument><expr><name pos:line="1946" pos:column="9">CONST_VTBL</name> struct <name pos:line="1946" pos:column="27">IVsContainedLanguageColorizerVtbl</name> <op:operator pos:line="1946" pos:column="61">*</op:operator><name pos:line="1946" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1951" pos:column="1">#<cpp:directive pos:line="1951" pos:column="2">ifdef</cpp:directive> <name pos:line="1951" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1954" pos:column="1">#<cpp:directive pos:line="1954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1954" pos:column="9">IVsContainedLanguageColorizer_QueryInterface</name><parameter_list pos:line="1954" pos:column="53">(<param><type><name pos:line="1954" pos:column="54">This</name></type></param>,<param><type><name pos:line="1954" pos:column="59">riid</name></type></param>,<param><type><name pos:line="1954" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1955" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1957" pos:column="1">#<cpp:directive pos:line="1957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1957" pos:column="9">IVsContainedLanguageColorizer_AddRef</name><parameter_list pos:line="1957" pos:column="45">(<param><type><name pos:line="1957" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1958" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1960" pos:column="1">#<cpp:directive pos:line="1960" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1960" pos:column="9">IVsContainedLanguageColorizer_Release</name><parameter_list pos:line="1960" pos:column="46">(<param><type><name pos:line="1960" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1961" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1964" pos:column="1">#<cpp:directive pos:line="1964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1964" pos:column="9">IVsContainedLanguageColorizer_ColorizeLineFragment</name><parameter_list pos:line="1964" pos:column="59">(<param><type><name pos:line="1964" pos:column="60">This</name></type></param>,<param><type><name pos:line="1964" pos:column="65">iLine</name></type></param>,<param><type><name pos:line="1964" pos:column="71">iIndex</name></type></param>,<param><type><name pos:line="1964" pos:column="78">iLength</name></type></param>,<param><type><name pos:line="1964" pos:column="86">pszText</name></type></param>,<param><type><name pos:line="1964" pos:column="94">iState</name></type></param>,<param><type><name pos:line="1964" pos:column="101">pAttributes</name></type></param>,<param><type><name pos:line="1964" pos:column="113">piNewState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1965" pos:column="5">( (This)-&gt;lpVtbl -&gt; ColorizeLineFragment(This,iLine,iIndex,iLength,pszText,iState,pAttributes,piNewState) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1967" pos:column="1">#<cpp:directive pos:line="1967" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1967" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1970" pos:column="1">#<cpp:directive pos:line="1970" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1970" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1975" pos:column="1">#<cpp:directive pos:line="1975" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1975" pos:column="9">/* __IVsContainedLanguageColorizer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1978" pos:column="1">#<cpp:directive pos:line="1978" pos:column="2">ifndef</cpp:directive> <name pos:line="1978" pos:column="9">__IVsContainedLanguageCodeSupport_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1979" pos:column="1">#<cpp:directive pos:line="1979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1979" pos:column="9">__IVsContainedLanguageCodeSupport_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1981" pos:column="1">/* interface IVsContainedLanguageCodeSupport */</comment>
<comment type="block" pos:line="1982" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="1985" pos:column="1">EXTERN_C</name> <specifier pos:line="1985" pos:column="10">const</specifier> <name pos:line="1985" pos:column="16">IID</name></type> <name pos:line="1985" pos:column="20">IID_IVsContainedLanguageCodeSupport</name></decl>;</decl_stmt>

<cpp:if pos:line="1987" pos:column="1">#<cpp:directive pos:line="1987" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1987" pos:column="5">defined</name><argument_list pos:line="1987" pos:column="12">(<argument><expr><name pos:line="1987" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1987" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1987" pos:column="29">!</op:operator><call><name pos:line="1987" pos:column="30">defined</name><argument_list pos:line="1987" pos:column="37">(<argument><expr><name pos:line="1987" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1989" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1989" pos:column="19">(<argument pos:line="1989" pos:column="20">"f386be91-0e80-43af-8eb6-8b829fa06282"</argument>)</argument_list></macro>
    <label><name pos:line="1990" pos:column="5">IVsContainedLanguageCodeSupport</name> :</label> <expr_stmt><expr pos:line="1990" pos:column="39">public <name pos:line="1990" pos:column="46">IUnknown</name>
    <block pos:line="1991" pos:column="5">{
    <expr pos:line="1992" pos:column="5">public<op:operator pos:line="1992" pos:column="11">:</op:operator>
        virtual <name pos:line="1993" pos:column="17">HRESULT</name> <name pos:line="1993" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1993" pos:column="43">CreateUniqueEventName</name><argument_list pos:line="1993" pos:column="64">( 
            <comment type="block" pos:line="1994" pos:column="13">/* [in] */</comment> <argument pos:line="1994" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="1995" pos:column="13">/* [in] */</comment> <argument pos:line="1995" pos:column="24">__RPC__in LPCWSTR pszObjectName</argument>,
            <comment type="block" pos:line="1996" pos:column="13">/* [in] */</comment> <argument pos:line="1996" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>,
            <comment type="block" pos:line="1997" pos:column="13">/* [out] */</comment> <argument pos:line="1997" pos:column="25">__RPC__deref_out_opt BSTR *pbstrEventHandlerName</argument>)</argument_list></macro> <op:operator pos:line="1997" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="1997" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="1999" pos:column="9">virtual <name pos:line="1999" pos:column="17">HRESULT</name> <name pos:line="1999" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1999" pos:column="43">EnsureEventHandler</name><argument_list pos:line="1999" pos:column="61">( 
            <comment type="block" pos:line="2000" pos:column="13">/* [in] */</comment> <argument pos:line="2000" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2001" pos:column="13">/* [in] */</comment> <argument pos:line="2001" pos:column="24">__RPC__in LPCWSTR pszObjectTypeName</argument>,
            <comment type="block" pos:line="2002" pos:column="13">/* [in] */</comment> <argument pos:line="2002" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>,
            <comment type="block" pos:line="2003" pos:column="13">/* [in] */</comment> <argument pos:line="2003" pos:column="24">__RPC__in LPCWSTR pszEventHandlerName</argument>,
            <comment type="block" pos:line="2004" pos:column="13">/* [in] */</comment> <argument pos:line="2004" pos:column="24">VSITEMID itemidInsertionPoint</argument>,
            <comment type="block" pos:line="2005" pos:column="13">/* [out] */</comment> <argument pos:line="2005" pos:column="25">__RPC__deref_out_opt BSTR *pbstrUniqueMemberID</argument>,
            <comment type="block" pos:line="2006" pos:column="13">/* [out] */</comment> <argument pos:line="2006" pos:column="25">__RPC__deref_out_opt BSTR *pbstrEventBody</argument>,
            <comment type="block" pos:line="2007" pos:column="13">/* [out] */</comment> <argument pos:line="2007" pos:column="25">__RPC__out TextSpan *pSpanInsertionPoint</argument>)</argument_list></macro> <op:operator pos:line="2007" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="2007" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="2009" pos:column="9">virtual <name pos:line="2009" pos:column="17">HRESULT</name> <name pos:line="2009" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2009" pos:column="43">GetMemberNavigationPoint</name><argument_list pos:line="2009" pos:column="67">( 
            <comment type="block" pos:line="2010" pos:column="13">/* [in] */</comment> <argument pos:line="2010" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2011" pos:column="13">/* [in] */</comment> <argument pos:line="2011" pos:column="24">__RPC__in LPCWSTR pszUniqueMemberID</argument>,
            <comment type="block" pos:line="2012" pos:column="13">/* [out] */</comment> <argument pos:line="2012" pos:column="25">__RPC__out TextSpan *pSpanNavPoint</argument>,
            <comment type="block" pos:line="2013" pos:column="13">/* [out] */</comment> <argument pos:line="2013" pos:column="25">__RPC__out VSITEMID *pItemID</argument>)</argument_list></macro> <op:operator pos:line="2013" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="2013" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="2015" pos:column="9">virtual <name pos:line="2015" pos:column="17">HRESULT</name> <name pos:line="2015" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2015" pos:column="43">GetMembers</name><argument_list pos:line="2015" pos:column="53">( 
            <comment type="block" pos:line="2016" pos:column="13">/* [in] */</comment> <argument pos:line="2016" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2017" pos:column="13">/* [in] */</comment> <argument pos:line="2017" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="2018" pos:column="13">/* [out] */</comment> <argument pos:line="2018" pos:column="25">__RPC__out int *pcMembers</argument>,
            <comment type="block" pos:line="2019" pos:column="13">/* [out] */</comment> <argument pos:line="2019" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrDisplayNames</argument>,
            <comment type="block" pos:line="2020" pos:column="13">/* [out] */</comment> <argument pos:line="2020" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrMemberIDs</argument>)</argument_list></macro> <op:operator pos:line="2020" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2020" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="2022" pos:column="9">virtual <name pos:line="2022" pos:column="17">HRESULT</name> <name pos:line="2022" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2022" pos:column="43">OnRenamed</name><argument_list pos:line="2022" pos:column="52">( 
            <comment type="block" pos:line="2023" pos:column="13">/* [in] */</comment> <argument pos:line="2023" pos:column="24">ContainedLanguageRenameType clrt</argument>,
            <comment type="block" pos:line="2024" pos:column="13">/* [in] */</comment> <argument pos:line="2024" pos:column="24">__RPC__in BSTR bstrOldID</argument>,
            <comment type="block" pos:line="2025" pos:column="13">/* [in] */</comment> <argument pos:line="2025" pos:column="24">__RPC__in BSTR bstrNewID</argument>)</argument_list></macro> <op:operator pos:line="2025" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2025" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="2027" pos:column="9">virtual <name pos:line="2027" pos:column="17">HRESULT</name> <name pos:line="2027" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2027" pos:column="43">IsValidID</name><argument_list pos:line="2027" pos:column="52">( 
            <comment type="block" pos:line="2028" pos:column="13">/* [in] */</comment> <argument pos:line="2028" pos:column="24">__RPC__in BSTR bstrID</argument>,
            <comment type="block" pos:line="2029" pos:column="13">/* [out] */</comment> <argument pos:line="2029" pos:column="25">__RPC__out VARIANT_BOOL *pfIsValidID</argument>)</argument_list></macro> <op:operator pos:line="2029" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2029" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2031" pos:column="9">virtual <name pos:line="2031" pos:column="17">HRESULT</name> <name pos:line="2031" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2031" pos:column="43">GetBaseClassName</name><argument_list pos:line="2031" pos:column="59">( 
            <comment type="block" pos:line="2032" pos:column="13">/* [in] */</comment> <argument pos:line="2032" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2033" pos:column="13">/* [out] */</comment> <argument pos:line="2033" pos:column="25">__RPC__deref_out_opt BSTR *pbstrBaseClassName</argument>)</argument_list></macro> <op:operator pos:line="2033" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="2033" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="2035" pos:column="9">virtual <name pos:line="2035" pos:column="17">HRESULT</name> <name pos:line="2035" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2035" pos:column="43">GetEventHandlerMemberID</name><argument_list pos:line="2035" pos:column="66">( 
            <comment type="block" pos:line="2036" pos:column="13">/* [in] */</comment> <argument pos:line="2036" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2037" pos:column="13">/* [in] */</comment> <argument pos:line="2037" pos:column="24">__RPC__in LPCWSTR pszObjectTypeName</argument>,
            <comment type="block" pos:line="2038" pos:column="13">/* [in] */</comment> <argument pos:line="2038" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>,
            <comment type="block" pos:line="2039" pos:column="13">/* [in] */</comment> <argument pos:line="2039" pos:column="24">__RPC__in LPCWSTR pszEventHandlerName</argument>,
            <comment type="block" pos:line="2040" pos:column="13">/* [out] */</comment> <argument pos:line="2040" pos:column="25">__RPC__deref_out_opt BSTR *pbstrUniqueMemberID</argument>)</argument_list></macro> <op:operator pos:line="2040" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2040" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2042" pos:column="9">virtual <name pos:line="2042" pos:column="17">HRESULT</name> <name pos:line="2042" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2042" pos:column="43">GetCompatibleEventHandlers</name><argument_list pos:line="2042" pos:column="69">( 
            <comment type="block" pos:line="2043" pos:column="13">/* [in] */</comment> <argument pos:line="2043" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2044" pos:column="13">/* [in] */</comment> <argument pos:line="2044" pos:column="24">__RPC__in LPCWSTR pszObjectTypeName</argument>,
            <comment type="block" pos:line="2045" pos:column="13">/* [in] */</comment> <argument pos:line="2045" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>,
            <comment type="block" pos:line="2046" pos:column="13">/* [out] */</comment> <argument pos:line="2046" pos:column="25">__RPC__out int *pcMembers</argument>,
            <comment type="block" pos:line="2047" pos:column="13">/* [out] */</comment> <argument pos:line="2047" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrEventHandlerNames</argument>,
            <comment type="block" pos:line="2048" pos:column="13">/* [out] */</comment> <argument pos:line="2048" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrMemberIDs</argument>)</argument_list></macro> <op:operator pos:line="2048" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2048" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2052" pos:column="1">#<cpp:directive pos:line="2052" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2052" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2054" pos:column="5">typedef <type><struct pos:line="2054" pos:column="13">struct <name pos:line="2054" pos:column="20">IVsContainedLanguageCodeSupportVtbl</name>
    <block pos:line="2055" pos:column="5">{<public type="default" pos:line="2055" pos:column="6">
        <function_decl><type><name pos:line="2056" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2058" pos:column="9">HRESULT</name></type> ( <name pos:line="2058" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2058" pos:column="37">*</type:modifier><name pos:line="2058" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2058" pos:column="54">( 
            <param><decl><type><name pos:line="2059" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2059" pos:column="45">*</type:modifier></type> <name pos:line="2059" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2060" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2060" pos:column="24">__RPC__in</name> <name pos:line="2060" pos:column="34">REFIID</name></type> <name pos:line="2060" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2061" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2062" pos:column="13">__RPC__deref_out</name>  <name pos:line="2062" pos:column="31">void</name> <type:modifier pos:line="2062" pos:column="36">*</type:modifier><type:modifier pos:line="2062" pos:column="37">*</type:modifier></type><name pos:line="2062" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2064" pos:column="9">ULONG</name></type> ( <name pos:line="2064" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2064" pos:column="35">*</type:modifier><name pos:line="2064" pos:column="36">AddRef</name> )<parameter_list pos:line="2064" pos:column="44">( 
            <param><decl><type><name pos:line="2065" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2065" pos:column="45">*</type:modifier></type> <name pos:line="2065" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2067" pos:column="9">ULONG</name></type> ( <name pos:line="2067" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2067" pos:column="35">*</type:modifier><name pos:line="2067" pos:column="36">Release</name> )<parameter_list pos:line="2067" pos:column="45">( 
            <param><decl><type><name pos:line="2068" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2068" pos:column="45">*</type:modifier></type> <name pos:line="2068" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2070" pos:column="9">HRESULT</name></type> ( <name pos:line="2070" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2070" pos:column="37">*</type:modifier><name pos:line="2070" pos:column="38">CreateUniqueEventName</name> )<parameter_list pos:line="2070" pos:column="61">( 
            <param><decl><type><name pos:line="2071" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2071" pos:column="45">*</type:modifier></type> <name pos:line="2071" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2072" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2072" pos:column="24">__RPC__in</name> <name pos:line="2072" pos:column="34">LPCWSTR</name></type> <name pos:line="2072" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2073" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2073" pos:column="24">__RPC__in</name> <name pos:line="2073" pos:column="34">LPCWSTR</name></type> <name pos:line="2073" pos:column="42">pszObjectName</name></decl></param>,
            <comment type="block" pos:line="2074" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2074" pos:column="24">__RPC__in</name> <name pos:line="2074" pos:column="34">LPCWSTR</name></type> <name pos:line="2074" pos:column="42">pszNameOfEvent</name></decl></param>,
            <comment type="block" pos:line="2075" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2075" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2075" pos:column="46">BSTR</name> <type:modifier pos:line="2075" pos:column="51">*</type:modifier></type><name pos:line="2075" pos:column="52">pbstrEventHandlerName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2077" pos:column="9">HRESULT</name></type> ( <name pos:line="2077" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2077" pos:column="37">*</type:modifier><name pos:line="2077" pos:column="38">EnsureEventHandler</name> )<parameter_list pos:line="2077" pos:column="58">( 
            <param><decl><type><name pos:line="2078" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2078" pos:column="45">*</type:modifier></type> <name pos:line="2078" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2079" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2079" pos:column="24">__RPC__in</name> <name pos:line="2079" pos:column="34">LPCWSTR</name></type> <name pos:line="2079" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2080" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2080" pos:column="24">__RPC__in</name> <name pos:line="2080" pos:column="34">LPCWSTR</name></type> <name pos:line="2080" pos:column="42">pszObjectTypeName</name></decl></param>,
            <comment type="block" pos:line="2081" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2081" pos:column="24">__RPC__in</name> <name pos:line="2081" pos:column="34">LPCWSTR</name></type> <name pos:line="2081" pos:column="42">pszNameOfEvent</name></decl></param>,
            <comment type="block" pos:line="2082" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2082" pos:column="24">__RPC__in</name> <name pos:line="2082" pos:column="34">LPCWSTR</name></type> <name pos:line="2082" pos:column="42">pszEventHandlerName</name></decl></param>,
            <comment type="block" pos:line="2083" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2083" pos:column="24">VSITEMID</name></type> <name pos:line="2083" pos:column="33">itemidInsertionPoint</name></decl></param>,
            <comment type="block" pos:line="2084" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2084" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2084" pos:column="46">BSTR</name> <type:modifier pos:line="2084" pos:column="51">*</type:modifier></type><name pos:line="2084" pos:column="52">pbstrUniqueMemberID</name></decl></param>,
            <comment type="block" pos:line="2085" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2085" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2085" pos:column="46">BSTR</name> <type:modifier pos:line="2085" pos:column="51">*</type:modifier></type><name pos:line="2085" pos:column="52">pbstrEventBody</name></decl></param>,
            <comment type="block" pos:line="2086" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2086" pos:column="25">__RPC__out</name> <name pos:line="2086" pos:column="36">TextSpan</name> <type:modifier pos:line="2086" pos:column="45">*</type:modifier></type><name pos:line="2086" pos:column="46">pSpanInsertionPoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2088" pos:column="9">HRESULT</name></type> ( <name pos:line="2088" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2088" pos:column="37">*</type:modifier><name pos:line="2088" pos:column="38">GetMemberNavigationPoint</name> )<parameter_list pos:line="2088" pos:column="64">( 
            <param><decl><type><name pos:line="2089" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2089" pos:column="45">*</type:modifier></type> <name pos:line="2089" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2090" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2090" pos:column="24">__RPC__in</name> <name pos:line="2090" pos:column="34">LPCWSTR</name></type> <name pos:line="2090" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2091" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2091" pos:column="24">__RPC__in</name> <name pos:line="2091" pos:column="34">LPCWSTR</name></type> <name pos:line="2091" pos:column="42">pszUniqueMemberID</name></decl></param>,
            <comment type="block" pos:line="2092" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2092" pos:column="25">__RPC__out</name> <name pos:line="2092" pos:column="36">TextSpan</name> <type:modifier pos:line="2092" pos:column="45">*</type:modifier></type><name pos:line="2092" pos:column="46">pSpanNavPoint</name></decl></param>,
            <comment type="block" pos:line="2093" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2093" pos:column="25">__RPC__out</name> <name pos:line="2093" pos:column="36">VSITEMID</name> <type:modifier pos:line="2093" pos:column="45">*</type:modifier></type><name pos:line="2093" pos:column="46">pItemID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2095" pos:column="9">HRESULT</name></type> ( <name pos:line="2095" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2095" pos:column="37">*</type:modifier><name pos:line="2095" pos:column="38">GetMembers</name> )<parameter_list pos:line="2095" pos:column="50">( 
            <param><decl><type><name pos:line="2096" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2096" pos:column="45">*</type:modifier></type> <name pos:line="2096" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2097" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2097" pos:column="24">__RPC__in</name> <name pos:line="2097" pos:column="34">LPCWSTR</name></type> <name pos:line="2097" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2098" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2098" pos:column="24">DWORD</name></type> <name pos:line="2098" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="2099" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2099" pos:column="25">__RPC__out</name> <name pos:line="2099" pos:column="36">int</name> <type:modifier pos:line="2099" pos:column="40">*</type:modifier></type><name pos:line="2099" pos:column="41">pcMembers</name></decl></param>,
            <comment type="block" pos:line="2100" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2100" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2100" pos:column="46">BSTR</name> <type:modifier pos:line="2100" pos:column="51">*</type:modifier><type:modifier pos:line="2100" pos:column="52">*</type:modifier></type><name pos:line="2100" pos:column="53">ppbstrDisplayNames</name></decl></param>,
            <comment type="block" pos:line="2101" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2101" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2101" pos:column="46">BSTR</name> <type:modifier pos:line="2101" pos:column="51">*</type:modifier><type:modifier pos:line="2101" pos:column="52">*</type:modifier></type><name pos:line="2101" pos:column="53">ppbstrMemberIDs</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2103" pos:column="9">HRESULT</name></type> ( <name pos:line="2103" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2103" pos:column="37">*</type:modifier><name pos:line="2103" pos:column="38">OnRenamed</name> )<parameter_list pos:line="2103" pos:column="49">( 
            <param><decl><type><name pos:line="2104" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2104" pos:column="45">*</type:modifier></type> <name pos:line="2104" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2105" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2105" pos:column="24">ContainedLanguageRenameType</name></type> <name pos:line="2105" pos:column="52">clrt</name></decl></param>,
            <comment type="block" pos:line="2106" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2106" pos:column="24">__RPC__in</name> <name pos:line="2106" pos:column="34">BSTR</name></type> <name pos:line="2106" pos:column="39">bstrOldID</name></decl></param>,
            <comment type="block" pos:line="2107" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2107" pos:column="24">__RPC__in</name> <name pos:line="2107" pos:column="34">BSTR</name></type> <name pos:line="2107" pos:column="39">bstrNewID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2109" pos:column="9">HRESULT</name></type> ( <name pos:line="2109" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2109" pos:column="37">*</type:modifier><name pos:line="2109" pos:column="38">IsValidID</name> )<parameter_list pos:line="2109" pos:column="49">( 
            <param><decl><type><name pos:line="2110" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2110" pos:column="45">*</type:modifier></type> <name pos:line="2110" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2111" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2111" pos:column="24">__RPC__in</name> <name pos:line="2111" pos:column="34">BSTR</name></type> <name pos:line="2111" pos:column="39">bstrID</name></decl></param>,
            <comment type="block" pos:line="2112" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2112" pos:column="25">__RPC__out</name> <name pos:line="2112" pos:column="36">VARIANT_BOOL</name> <type:modifier pos:line="2112" pos:column="49">*</type:modifier></type><name pos:line="2112" pos:column="50">pfIsValidID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2114" pos:column="9">HRESULT</name></type> ( <name pos:line="2114" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2114" pos:column="37">*</type:modifier><name pos:line="2114" pos:column="38">GetBaseClassName</name> )<parameter_list pos:line="2114" pos:column="56">( 
            <param><decl><type><name pos:line="2115" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2115" pos:column="45">*</type:modifier></type> <name pos:line="2115" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2116" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2116" pos:column="24">__RPC__in</name> <name pos:line="2116" pos:column="34">LPCWSTR</name></type> <name pos:line="2116" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2117" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2117" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2117" pos:column="46">BSTR</name> <type:modifier pos:line="2117" pos:column="51">*</type:modifier></type><name pos:line="2117" pos:column="52">pbstrBaseClassName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2119" pos:column="9">HRESULT</name></type> ( <name pos:line="2119" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2119" pos:column="37">*</type:modifier><name pos:line="2119" pos:column="38">GetEventHandlerMemberID</name> )<parameter_list pos:line="2119" pos:column="63">( 
            <param><decl><type><name pos:line="2120" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2120" pos:column="45">*</type:modifier></type> <name pos:line="2120" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2121" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2121" pos:column="24">__RPC__in</name> <name pos:line="2121" pos:column="34">LPCWSTR</name></type> <name pos:line="2121" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2122" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2122" pos:column="24">__RPC__in</name> <name pos:line="2122" pos:column="34">LPCWSTR</name></type> <name pos:line="2122" pos:column="42">pszObjectTypeName</name></decl></param>,
            <comment type="block" pos:line="2123" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2123" pos:column="24">__RPC__in</name> <name pos:line="2123" pos:column="34">LPCWSTR</name></type> <name pos:line="2123" pos:column="42">pszNameOfEvent</name></decl></param>,
            <comment type="block" pos:line="2124" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2124" pos:column="24">__RPC__in</name> <name pos:line="2124" pos:column="34">LPCWSTR</name></type> <name pos:line="2124" pos:column="42">pszEventHandlerName</name></decl></param>,
            <comment type="block" pos:line="2125" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2125" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2125" pos:column="46">BSTR</name> <type:modifier pos:line="2125" pos:column="51">*</type:modifier></type><name pos:line="2125" pos:column="52">pbstrUniqueMemberID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2127" pos:column="9">HRESULT</name></type> ( <name pos:line="2127" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2127" pos:column="37">*</type:modifier><name pos:line="2127" pos:column="38">GetCompatibleEventHandlers</name> )<parameter_list pos:line="2127" pos:column="66">( 
            <param><decl><type><name pos:line="2128" pos:column="13">IVsContainedLanguageCodeSupport</name> <type:modifier pos:line="2128" pos:column="45">*</type:modifier></type> <name pos:line="2128" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="2129" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2129" pos:column="24">__RPC__in</name> <name pos:line="2129" pos:column="34">LPCWSTR</name></type> <name pos:line="2129" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2130" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2130" pos:column="24">__RPC__in</name> <name pos:line="2130" pos:column="34">LPCWSTR</name></type> <name pos:line="2130" pos:column="42">pszObjectTypeName</name></decl></param>,
            <comment type="block" pos:line="2131" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2131" pos:column="24">__RPC__in</name> <name pos:line="2131" pos:column="34">LPCWSTR</name></type> <name pos:line="2131" pos:column="42">pszNameOfEvent</name></decl></param>,
            <comment type="block" pos:line="2132" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2132" pos:column="25">__RPC__out</name> <name pos:line="2132" pos:column="36">int</name> <type:modifier pos:line="2132" pos:column="40">*</type:modifier></type><name pos:line="2132" pos:column="41">pcMembers</name></decl></param>,
            <comment type="block" pos:line="2133" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2133" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2133" pos:column="46">BSTR</name> <type:modifier pos:line="2133" pos:column="51">*</type:modifier><type:modifier pos:line="2133" pos:column="52">*</type:modifier></type><name pos:line="2133" pos:column="53">ppbstrEventHandlerNames</name></decl></param>,
            <comment type="block" pos:line="2134" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2134" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2134" pos:column="46">BSTR</name> <type:modifier pos:line="2134" pos:column="51">*</type:modifier><type:modifier pos:line="2134" pos:column="52">*</type:modifier></type><name pos:line="2134" pos:column="53">ppbstrMemberIDs</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2136" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2137" pos:column="7">IVsContainedLanguageCodeSupportVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2139" pos:column="5">interface</name></type> <name pos:line="2139" pos:column="15">IVsContainedLanguageCodeSupport</name>
    <argument_list pos:line="2140" pos:column="5">{
        <argument><expr><name pos:line="2141" pos:column="9">CONST_VTBL</name> struct <name pos:line="2141" pos:column="27">IVsContainedLanguageCodeSupportVtbl</name> <op:operator pos:line="2141" pos:column="63">*</op:operator><name pos:line="2141" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2146" pos:column="1">#<cpp:directive pos:line="2146" pos:column="2">ifdef</cpp:directive> <name pos:line="2146" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2149" pos:column="1">#<cpp:directive pos:line="2149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2149" pos:column="9">IVsContainedLanguageCodeSupport_QueryInterface</name><parameter_list pos:line="2149" pos:column="55">(<param><type><name pos:line="2149" pos:column="56">This</name></type></param>,<param><type><name pos:line="2149" pos:column="61">riid</name></type></param>,<param><type><name pos:line="2149" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2150" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2152" pos:column="1">#<cpp:directive pos:line="2152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2152" pos:column="9">IVsContainedLanguageCodeSupport_AddRef</name><parameter_list pos:line="2152" pos:column="47">(<param><type><name pos:line="2152" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2153" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2155" pos:column="1">#<cpp:directive pos:line="2155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2155" pos:column="9">IVsContainedLanguageCodeSupport_Release</name><parameter_list pos:line="2155" pos:column="48">(<param><type><name pos:line="2155" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2156" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2159" pos:column="1">#<cpp:directive pos:line="2159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2159" pos:column="9">IVsContainedLanguageCodeSupport_CreateUniqueEventName</name><parameter_list pos:line="2159" pos:column="62">(<param><type><name pos:line="2159" pos:column="63">This</name></type></param>,<param><type><name pos:line="2159" pos:column="68">pszClassName</name></type></param>,<param><type><name pos:line="2159" pos:column="81">pszObjectName</name></type></param>,<param><type><name pos:line="2159" pos:column="95">pszNameOfEvent</name></type></param>,<param><type><name pos:line="2159" pos:column="110">pbstrEventHandlerName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2160" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateUniqueEventName(This,pszClassName,pszObjectName,pszNameOfEvent,pbstrEventHandlerName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2162" pos:column="1">#<cpp:directive pos:line="2162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2162" pos:column="9">IVsContainedLanguageCodeSupport_EnsureEventHandler</name><parameter_list pos:line="2162" pos:column="59">(<param><type><name pos:line="2162" pos:column="60">This</name></type></param>,<param><type><name pos:line="2162" pos:column="65">pszClassName</name></type></param>,<param><type><name pos:line="2162" pos:column="78">pszObjectTypeName</name></type></param>,<param><type><name pos:line="2162" pos:column="96">pszNameOfEvent</name></type></param>,<param><type><name pos:line="2162" pos:column="111">pszEventHandlerName</name></type></param>,<param><type><name pos:line="2162" pos:column="131">itemidInsertionPoint</name></type></param>,<param><type><name pos:line="2162" pos:column="152">pbstrUniqueMemberID</name></type></param>,<param><type><name pos:line="2162" pos:column="172">pbstrEventBody</name></type></param>,<param><type><name pos:line="2162" pos:column="187">pSpanInsertionPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2163" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnsureEventHandler(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pszEventHandlerName,itemidInsertionPoint,pbstrUniqueMemberID,pbstrEventBody,pSpanInsertionPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2165" pos:column="1">#<cpp:directive pos:line="2165" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2165" pos:column="9">IVsContainedLanguageCodeSupport_GetMemberNavigationPoint</name><parameter_list pos:line="2165" pos:column="65">(<param><type><name pos:line="2165" pos:column="66">This</name></type></param>,<param><type><name pos:line="2165" pos:column="71">pszClassName</name></type></param>,<param><type><name pos:line="2165" pos:column="84">pszUniqueMemberID</name></type></param>,<param><type><name pos:line="2165" pos:column="102">pSpanNavPoint</name></type></param>,<param><type><name pos:line="2165" pos:column="116">pItemID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2166" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemberNavigationPoint(This,pszClassName,pszUniqueMemberID,pSpanNavPoint,pItemID) )</cpp:value></cpp:define> 

<cpp:define pos:line="2168" pos:column="1">#<cpp:directive pos:line="2168" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2168" pos:column="9">IVsContainedLanguageCodeSupport_GetMembers</name><parameter_list pos:line="2168" pos:column="51">(<param><type><name pos:line="2168" pos:column="52">This</name></type></param>,<param><type><name pos:line="2168" pos:column="57">pszClassName</name></type></param>,<param><type><name pos:line="2168" pos:column="70">dwFlags</name></type></param>,<param><type><name pos:line="2168" pos:column="78">pcMembers</name></type></param>,<param><type><name pos:line="2168" pos:column="88">ppbstrDisplayNames</name></type></param>,<param><type><name pos:line="2168" pos:column="107">ppbstrMemberIDs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2169" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMembers(This,pszClassName,dwFlags,pcMembers,ppbstrDisplayNames,ppbstrMemberIDs) )</cpp:value></cpp:define> 

<cpp:define pos:line="2171" pos:column="1">#<cpp:directive pos:line="2171" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2171" pos:column="9">IVsContainedLanguageCodeSupport_OnRenamed</name><parameter_list pos:line="2171" pos:column="50">(<param><type><name pos:line="2171" pos:column="51">This</name></type></param>,<param><type><name pos:line="2171" pos:column="56">clrt</name></type></param>,<param><type><name pos:line="2171" pos:column="61">bstrOldID</name></type></param>,<param><type><name pos:line="2171" pos:column="71">bstrNewID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2172" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnRenamed(This,clrt,bstrOldID,bstrNewID) )</cpp:value></cpp:define> 

<cpp:define pos:line="2174" pos:column="1">#<cpp:directive pos:line="2174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2174" pos:column="9">IVsContainedLanguageCodeSupport_IsValidID</name><parameter_list pos:line="2174" pos:column="50">(<param><type><name pos:line="2174" pos:column="51">This</name></type></param>,<param><type><name pos:line="2174" pos:column="56">bstrID</name></type></param>,<param><type><name pos:line="2174" pos:column="63">pfIsValidID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2175" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsValidID(This,bstrID,pfIsValidID) )</cpp:value></cpp:define> 

<cpp:define pos:line="2177" pos:column="1">#<cpp:directive pos:line="2177" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2177" pos:column="9">IVsContainedLanguageCodeSupport_GetBaseClassName</name><parameter_list pos:line="2177" pos:column="57">(<param><type><name pos:line="2177" pos:column="58">This</name></type></param>,<param><type><name pos:line="2177" pos:column="63">pszClassName</name></type></param>,<param><type><name pos:line="2177" pos:column="76">pbstrBaseClassName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2178" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBaseClassName(This,pszClassName,pbstrBaseClassName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2180" pos:column="1">#<cpp:directive pos:line="2180" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2180" pos:column="9">IVsContainedLanguageCodeSupport_GetEventHandlerMemberID</name><parameter_list pos:line="2180" pos:column="64">(<param><type><name pos:line="2180" pos:column="65">This</name></type></param>,<param><type><name pos:line="2180" pos:column="70">pszClassName</name></type></param>,<param><type><name pos:line="2180" pos:column="83">pszObjectTypeName</name></type></param>,<param><type><name pos:line="2180" pos:column="101">pszNameOfEvent</name></type></param>,<param><type><name pos:line="2180" pos:column="116">pszEventHandlerName</name></type></param>,<param><type><name pos:line="2180" pos:column="136">pbstrUniqueMemberID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2181" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEventHandlerMemberID(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pszEventHandlerName,pbstrUniqueMemberID) )</cpp:value></cpp:define> 

<cpp:define pos:line="2183" pos:column="1">#<cpp:directive pos:line="2183" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2183" pos:column="9">IVsContainedLanguageCodeSupport_GetCompatibleEventHandlers</name><parameter_list pos:line="2183" pos:column="67">(<param><type><name pos:line="2183" pos:column="68">This</name></type></param>,<param><type><name pos:line="2183" pos:column="73">pszClassName</name></type></param>,<param><type><name pos:line="2183" pos:column="86">pszObjectTypeName</name></type></param>,<param><type><name pos:line="2183" pos:column="104">pszNameOfEvent</name></type></param>,<param><type><name pos:line="2183" pos:column="119">pcMembers</name></type></param>,<param><type><name pos:line="2183" pos:column="129">ppbstrEventHandlerNames</name></type></param>,<param><type><name pos:line="2183" pos:column="153">ppbstrMemberIDs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2184" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCompatibleEventHandlers(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pcMembers,ppbstrEventHandlerNames,ppbstrMemberIDs) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2186" pos:column="1">#<cpp:directive pos:line="2186" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2186" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2189" pos:column="1">#<cpp:directive pos:line="2189" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2189" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2194" pos:column="1">#<cpp:directive pos:line="2194" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2194" pos:column="9">/* __IVsContainedLanguageCodeSupport_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2197" pos:column="1">#<cpp:directive pos:line="2197" pos:column="2">ifndef</cpp:directive> <name pos:line="2197" pos:column="9">__IVsContainedLanguageStaticEventBinding_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2198" pos:column="1">#<cpp:directive pos:line="2198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2198" pos:column="9">__IVsContainedLanguageStaticEventBinding_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2200" pos:column="1">/* interface IVsContainedLanguageStaticEventBinding */</comment>
<comment type="block" pos:line="2201" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2204" pos:column="1">EXTERN_C</name> <specifier pos:line="2204" pos:column="10">const</specifier> <name pos:line="2204" pos:column="16">IID</name></type> <name pos:line="2204" pos:column="20">IID_IVsContainedLanguageStaticEventBinding</name></decl>;</decl_stmt>

<cpp:if pos:line="2206" pos:column="1">#<cpp:directive pos:line="2206" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2206" pos:column="5">defined</name><argument_list pos:line="2206" pos:column="12">(<argument><expr><name pos:line="2206" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2206" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2206" pos:column="29">!</op:operator><call><name pos:line="2206" pos:column="30">defined</name><argument_list pos:line="2206" pos:column="37">(<argument><expr><name pos:line="2206" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2208" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2208" pos:column="19">(<argument pos:line="2208" pos:column="20">"22ff7776-2c9a-48c4-809f-39e5184cc32d"</argument>)</argument_list></macro>
    <label><name pos:line="2209" pos:column="5">IVsContainedLanguageStaticEventBinding</name> :</label> <expr_stmt><expr pos:line="2209" pos:column="46">public <name pos:line="2209" pos:column="53">IUnknown</name>
    <block pos:line="2210" pos:column="5">{
    <expr pos:line="2211" pos:column="5">public<op:operator pos:line="2211" pos:column="11">:</op:operator>
        virtual <name pos:line="2212" pos:column="17">HRESULT</name> <name pos:line="2212" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2212" pos:column="43">GetStaticEventBindingsForObject</name><argument_list pos:line="2212" pos:column="74">( 
            <comment type="block" pos:line="2213" pos:column="13">/* [in] */</comment> <argument pos:line="2213" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2214" pos:column="13">/* [in] */</comment> <argument pos:line="2214" pos:column="24">__RPC__in LPCWSTR pszObjectName</argument>,
            <comment type="block" pos:line="2215" pos:column="13">/* [out] */</comment> <argument pos:line="2215" pos:column="25">__RPC__out int *pcMembers</argument>,
            <comment type="block" pos:line="2216" pos:column="13">/* [out] */</comment> <argument pos:line="2216" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrEventNames</argument>,
            <comment type="block" pos:line="2217" pos:column="13">/* [out] */</comment> <argument pos:line="2217" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrDisplayNames</argument>,
            <comment type="block" pos:line="2218" pos:column="13">/* [out] */</comment> <argument pos:line="2218" pos:column="25">__RPC__deref_out_opt BSTR **ppbstrMemberIDs</argument>)</argument_list></macro> <op:operator pos:line="2218" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2218" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="2220" pos:column="9">virtual <name pos:line="2220" pos:column="17">HRESULT</name> <name pos:line="2220" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2220" pos:column="43">RemoveStaticEventBinding</name><argument_list pos:line="2220" pos:column="67">( 
            <comment type="block" pos:line="2221" pos:column="13">/* [in] */</comment> <argument pos:line="2221" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2222" pos:column="13">/* [in] */</comment> <argument pos:line="2222" pos:column="24">__RPC__in LPCWSTR pszUniqueMemberID</argument>,
            <comment type="block" pos:line="2223" pos:column="13">/* [in] */</comment> <argument pos:line="2223" pos:column="24">__RPC__in LPCWSTR pszObjectName</argument>,
            <comment type="block" pos:line="2224" pos:column="13">/* [in] */</comment> <argument pos:line="2224" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>)</argument_list></macro> <op:operator pos:line="2224" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="2224" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="2226" pos:column="9">virtual <name pos:line="2226" pos:column="17">HRESULT</name> <name pos:line="2226" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2226" pos:column="43">AddStaticEventBinding</name><argument_list pos:line="2226" pos:column="64">( 
            <comment type="block" pos:line="2227" pos:column="13">/* [in] */</comment> <argument pos:line="2227" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2228" pos:column="13">/* [in] */</comment> <argument pos:line="2228" pos:column="24">__RPC__in LPCWSTR pszUniqueMemberID</argument>,
            <comment type="block" pos:line="2229" pos:column="13">/* [in] */</comment> <argument pos:line="2229" pos:column="24">__RPC__in LPCWSTR pszObjectName</argument>,
            <comment type="block" pos:line="2230" pos:column="13">/* [in] */</comment> <argument pos:line="2230" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>)</argument_list></macro> <op:operator pos:line="2230" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="2230" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="2232" pos:column="9">virtual <name pos:line="2232" pos:column="17">HRESULT</name> <name pos:line="2232" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2232" pos:column="43">EnsureStaticEventHandler</name><argument_list pos:line="2232" pos:column="67">( 
            <comment type="block" pos:line="2233" pos:column="13">/* [in] */</comment> <argument pos:line="2233" pos:column="24">__RPC__in LPCWSTR pszClassName</argument>,
            <comment type="block" pos:line="2234" pos:column="13">/* [in] */</comment> <argument pos:line="2234" pos:column="24">__RPC__in LPCWSTR pszObjectTypeName</argument>,
            <comment type="block" pos:line="2235" pos:column="13">/* [in] */</comment> <argument pos:line="2235" pos:column="24">__RPC__in LPCWSTR pszObjectName</argument>,
            <comment type="block" pos:line="2236" pos:column="13">/* [in] */</comment> <argument pos:line="2236" pos:column="24">__RPC__in LPCWSTR pszNameOfEvent</argument>,
            <comment type="block" pos:line="2237" pos:column="13">/* [in] */</comment> <argument pos:line="2237" pos:column="24">__RPC__in LPCWSTR pszEventHandlerName</argument>,
            <comment type="block" pos:line="2238" pos:column="13">/* [in] */</comment> <argument pos:line="2238" pos:column="24">VSITEMID itemidInsertionPoint</argument>,
            <comment type="block" pos:line="2239" pos:column="13">/* [out] */</comment> <argument pos:line="2239" pos:column="25">__RPC__deref_out_opt BSTR *pbstrUniqueMemberID</argument>,
            <comment type="block" pos:line="2240" pos:column="13">/* [out] */</comment> <argument pos:line="2240" pos:column="25">__RPC__deref_out_opt BSTR *pbstrEventBody</argument>,
            <comment type="block" pos:line="2241" pos:column="13">/* [out] */</comment> <argument pos:line="2241" pos:column="25">__RPC__out TextSpan *pSpanInsertionPoint</argument>)</argument_list></macro> <op:operator pos:line="2241" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="2241" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2245" pos:column="1">#<cpp:directive pos:line="2245" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2245" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2247" pos:column="5">typedef <type><struct pos:line="2247" pos:column="13">struct <name pos:line="2247" pos:column="20">IVsContainedLanguageStaticEventBindingVtbl</name>
    <block pos:line="2248" pos:column="5">{<public type="default" pos:line="2248" pos:column="6">
        <function_decl><type><name pos:line="2249" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2251" pos:column="9">HRESULT</name></type> ( <name pos:line="2251" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2251" pos:column="37">*</type:modifier><name pos:line="2251" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2251" pos:column="54">( 
            <param><decl><type><name pos:line="2252" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2252" pos:column="52">*</type:modifier></type> <name pos:line="2252" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="2253" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2253" pos:column="24">__RPC__in</name> <name pos:line="2253" pos:column="34">REFIID</name></type> <name pos:line="2253" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2254" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2255" pos:column="13">__RPC__deref_out</name>  <name pos:line="2255" pos:column="31">void</name> <type:modifier pos:line="2255" pos:column="36">*</type:modifier><type:modifier pos:line="2255" pos:column="37">*</type:modifier></type><name pos:line="2255" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2257" pos:column="9">ULONG</name></type> ( <name pos:line="2257" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2257" pos:column="35">*</type:modifier><name pos:line="2257" pos:column="36">AddRef</name> )<parameter_list pos:line="2257" pos:column="44">( 
            <param><decl><type><name pos:line="2258" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2258" pos:column="52">*</type:modifier></type> <name pos:line="2258" pos:column="54">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2260" pos:column="9">ULONG</name></type> ( <name pos:line="2260" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2260" pos:column="35">*</type:modifier><name pos:line="2260" pos:column="36">Release</name> )<parameter_list pos:line="2260" pos:column="45">( 
            <param><decl><type><name pos:line="2261" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2261" pos:column="52">*</type:modifier></type> <name pos:line="2261" pos:column="54">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2263" pos:column="9">HRESULT</name></type> ( <name pos:line="2263" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2263" pos:column="37">*</type:modifier><name pos:line="2263" pos:column="38">GetStaticEventBindingsForObject</name> )<parameter_list pos:line="2263" pos:column="71">( 
            <param><decl><type><name pos:line="2264" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2264" pos:column="52">*</type:modifier></type> <name pos:line="2264" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="2265" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2265" pos:column="24">__RPC__in</name> <name pos:line="2265" pos:column="34">LPCWSTR</name></type> <name pos:line="2265" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2266" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2266" pos:column="24">__RPC__in</name> <name pos:line="2266" pos:column="34">LPCWSTR</name></type> <name pos:line="2266" pos:column="42">pszObjectName</name></decl></param>,
            <comment type="block" pos:line="2267" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2267" pos:column="25">__RPC__out</name> <name pos:line="2267" pos:column="36">int</name> <type:modifier pos:line="2267" pos:column="40">*</type:modifier></type><name pos:line="2267" pos:column="41">pcMembers</name></decl></param>,
            <comment type="block" pos:line="2268" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2268" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2268" pos:column="46">BSTR</name> <type:modifier pos:line="2268" pos:column="51">*</type:modifier><type:modifier pos:line="2268" pos:column="52">*</type:modifier></type><name pos:line="2268" pos:column="53">ppbstrEventNames</name></decl></param>,
            <comment type="block" pos:line="2269" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2269" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2269" pos:column="46">BSTR</name> <type:modifier pos:line="2269" pos:column="51">*</type:modifier><type:modifier pos:line="2269" pos:column="52">*</type:modifier></type><name pos:line="2269" pos:column="53">ppbstrDisplayNames</name></decl></param>,
            <comment type="block" pos:line="2270" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2270" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2270" pos:column="46">BSTR</name> <type:modifier pos:line="2270" pos:column="51">*</type:modifier><type:modifier pos:line="2270" pos:column="52">*</type:modifier></type><name pos:line="2270" pos:column="53">ppbstrMemberIDs</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2272" pos:column="9">HRESULT</name></type> ( <name pos:line="2272" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2272" pos:column="37">*</type:modifier><name pos:line="2272" pos:column="38">RemoveStaticEventBinding</name> )<parameter_list pos:line="2272" pos:column="64">( 
            <param><decl><type><name pos:line="2273" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2273" pos:column="52">*</type:modifier></type> <name pos:line="2273" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="2274" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2274" pos:column="24">__RPC__in</name> <name pos:line="2274" pos:column="34">LPCWSTR</name></type> <name pos:line="2274" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2275" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2275" pos:column="24">__RPC__in</name> <name pos:line="2275" pos:column="34">LPCWSTR</name></type> <name pos:line="2275" pos:column="42">pszUniqueMemberID</name></decl></param>,
            <comment type="block" pos:line="2276" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2276" pos:column="24">__RPC__in</name> <name pos:line="2276" pos:column="34">LPCWSTR</name></type> <name pos:line="2276" pos:column="42">pszObjectName</name></decl></param>,
            <comment type="block" pos:line="2277" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2277" pos:column="24">__RPC__in</name> <name pos:line="2277" pos:column="34">LPCWSTR</name></type> <name pos:line="2277" pos:column="42">pszNameOfEvent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2279" pos:column="9">HRESULT</name></type> ( <name pos:line="2279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2279" pos:column="37">*</type:modifier><name pos:line="2279" pos:column="38">AddStaticEventBinding</name> )<parameter_list pos:line="2279" pos:column="61">( 
            <param><decl><type><name pos:line="2280" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2280" pos:column="52">*</type:modifier></type> <name pos:line="2280" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="2281" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2281" pos:column="24">__RPC__in</name> <name pos:line="2281" pos:column="34">LPCWSTR</name></type> <name pos:line="2281" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2282" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2282" pos:column="24">__RPC__in</name> <name pos:line="2282" pos:column="34">LPCWSTR</name></type> <name pos:line="2282" pos:column="42">pszUniqueMemberID</name></decl></param>,
            <comment type="block" pos:line="2283" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2283" pos:column="24">__RPC__in</name> <name pos:line="2283" pos:column="34">LPCWSTR</name></type> <name pos:line="2283" pos:column="42">pszObjectName</name></decl></param>,
            <comment type="block" pos:line="2284" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2284" pos:column="24">__RPC__in</name> <name pos:line="2284" pos:column="34">LPCWSTR</name></type> <name pos:line="2284" pos:column="42">pszNameOfEvent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2286" pos:column="9">HRESULT</name></type> ( <name pos:line="2286" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2286" pos:column="37">*</type:modifier><name pos:line="2286" pos:column="38">EnsureStaticEventHandler</name> )<parameter_list pos:line="2286" pos:column="64">( 
            <param><decl><type><name pos:line="2287" pos:column="13">IVsContainedLanguageStaticEventBinding</name> <type:modifier pos:line="2287" pos:column="52">*</type:modifier></type> <name pos:line="2287" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="2288" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2288" pos:column="24">__RPC__in</name> <name pos:line="2288" pos:column="34">LPCWSTR</name></type> <name pos:line="2288" pos:column="42">pszClassName</name></decl></param>,
            <comment type="block" pos:line="2289" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2289" pos:column="24">__RPC__in</name> <name pos:line="2289" pos:column="34">LPCWSTR</name></type> <name pos:line="2289" pos:column="42">pszObjectTypeName</name></decl></param>,
            <comment type="block" pos:line="2290" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2290" pos:column="24">__RPC__in</name> <name pos:line="2290" pos:column="34">LPCWSTR</name></type> <name pos:line="2290" pos:column="42">pszObjectName</name></decl></param>,
            <comment type="block" pos:line="2291" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2291" pos:column="24">__RPC__in</name> <name pos:line="2291" pos:column="34">LPCWSTR</name></type> <name pos:line="2291" pos:column="42">pszNameOfEvent</name></decl></param>,
            <comment type="block" pos:line="2292" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2292" pos:column="24">__RPC__in</name> <name pos:line="2292" pos:column="34">LPCWSTR</name></type> <name pos:line="2292" pos:column="42">pszEventHandlerName</name></decl></param>,
            <comment type="block" pos:line="2293" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2293" pos:column="24">VSITEMID</name></type> <name pos:line="2293" pos:column="33">itemidInsertionPoint</name></decl></param>,
            <comment type="block" pos:line="2294" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2294" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2294" pos:column="46">BSTR</name> <type:modifier pos:line="2294" pos:column="51">*</type:modifier></type><name pos:line="2294" pos:column="52">pbstrUniqueMemberID</name></decl></param>,
            <comment type="block" pos:line="2295" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2295" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2295" pos:column="46">BSTR</name> <type:modifier pos:line="2295" pos:column="51">*</type:modifier></type><name pos:line="2295" pos:column="52">pbstrEventBody</name></decl></param>,
            <comment type="block" pos:line="2296" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2296" pos:column="25">__RPC__out</name> <name pos:line="2296" pos:column="36">TextSpan</name> <type:modifier pos:line="2296" pos:column="45">*</type:modifier></type><name pos:line="2296" pos:column="46">pSpanInsertionPoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2298" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2299" pos:column="7">IVsContainedLanguageStaticEventBindingVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2301" pos:column="5">interface</name></type> <name pos:line="2301" pos:column="15">IVsContainedLanguageStaticEventBinding</name>
    <argument_list pos:line="2302" pos:column="5">{
        <argument><expr><name pos:line="2303" pos:column="9">CONST_VTBL</name> struct <name pos:line="2303" pos:column="27">IVsContainedLanguageStaticEventBindingVtbl</name> <op:operator pos:line="2303" pos:column="70">*</op:operator><name pos:line="2303" pos:column="71">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2308" pos:column="1">#<cpp:directive pos:line="2308" pos:column="2">ifdef</cpp:directive> <name pos:line="2308" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2311" pos:column="1">#<cpp:directive pos:line="2311" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2311" pos:column="9">IVsContainedLanguageStaticEventBinding_QueryInterface</name><parameter_list pos:line="2311" pos:column="62">(<param><type><name pos:line="2311" pos:column="63">This</name></type></param>,<param><type><name pos:line="2311" pos:column="68">riid</name></type></param>,<param><type><name pos:line="2311" pos:column="73">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2312" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2314" pos:column="1">#<cpp:directive pos:line="2314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2314" pos:column="9">IVsContainedLanguageStaticEventBinding_AddRef</name><parameter_list pos:line="2314" pos:column="54">(<param><type><name pos:line="2314" pos:column="55">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2315" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2317" pos:column="1">#<cpp:directive pos:line="2317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2317" pos:column="9">IVsContainedLanguageStaticEventBinding_Release</name><parameter_list pos:line="2317" pos:column="55">(<param><type><name pos:line="2317" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2318" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2321" pos:column="1">#<cpp:directive pos:line="2321" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2321" pos:column="9">IVsContainedLanguageStaticEventBinding_GetStaticEventBindingsForObject</name><parameter_list pos:line="2321" pos:column="79">(<param><type><name pos:line="2321" pos:column="80">This</name></type></param>,<param><type><name pos:line="2321" pos:column="85">pszClassName</name></type></param>,<param><type><name pos:line="2321" pos:column="98">pszObjectName</name></type></param>,<param><type><name pos:line="2321" pos:column="112">pcMembers</name></type></param>,<param><type><name pos:line="2321" pos:column="122">ppbstrEventNames</name></type></param>,<param><type><name pos:line="2321" pos:column="139">ppbstrDisplayNames</name></type></param>,<param><type><name pos:line="2321" pos:column="158">ppbstrMemberIDs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2322" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStaticEventBindingsForObject(This,pszClassName,pszObjectName,pcMembers,ppbstrEventNames,ppbstrDisplayNames,ppbstrMemberIDs) )</cpp:value></cpp:define> 

<cpp:define pos:line="2324" pos:column="1">#<cpp:directive pos:line="2324" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2324" pos:column="9">IVsContainedLanguageStaticEventBinding_RemoveStaticEventBinding</name><parameter_list pos:line="2324" pos:column="72">(<param><type><name pos:line="2324" pos:column="73">This</name></type></param>,<param><type><name pos:line="2324" pos:column="78">pszClassName</name></type></param>,<param><type><name pos:line="2324" pos:column="91">pszUniqueMemberID</name></type></param>,<param><type><name pos:line="2324" pos:column="109">pszObjectName</name></type></param>,<param><type><name pos:line="2324" pos:column="123">pszNameOfEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2325" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveStaticEventBinding(This,pszClassName,pszUniqueMemberID,pszObjectName,pszNameOfEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="2327" pos:column="1">#<cpp:directive pos:line="2327" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2327" pos:column="9">IVsContainedLanguageStaticEventBinding_AddStaticEventBinding</name><parameter_list pos:line="2327" pos:column="69">(<param><type><name pos:line="2327" pos:column="70">This</name></type></param>,<param><type><name pos:line="2327" pos:column="75">pszClassName</name></type></param>,<param><type><name pos:line="2327" pos:column="88">pszUniqueMemberID</name></type></param>,<param><type><name pos:line="2327" pos:column="106">pszObjectName</name></type></param>,<param><type><name pos:line="2327" pos:column="120">pszNameOfEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2328" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddStaticEventBinding(This,pszClassName,pszUniqueMemberID,pszObjectName,pszNameOfEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="2330" pos:column="1">#<cpp:directive pos:line="2330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2330" pos:column="9">IVsContainedLanguageStaticEventBinding_EnsureStaticEventHandler</name><parameter_list pos:line="2330" pos:column="72">(<param><type><name pos:line="2330" pos:column="73">This</name></type></param>,<param><type><name pos:line="2330" pos:column="78">pszClassName</name></type></param>,<param><type><name pos:line="2330" pos:column="91">pszObjectTypeName</name></type></param>,<param><type><name pos:line="2330" pos:column="109">pszObjectName</name></type></param>,<param><type><name pos:line="2330" pos:column="123">pszNameOfEvent</name></type></param>,<param><type><name pos:line="2330" pos:column="138">pszEventHandlerName</name></type></param>,<param><type><name pos:line="2330" pos:column="158">itemidInsertionPoint</name></type></param>,<param><type><name pos:line="2330" pos:column="179">pbstrUniqueMemberID</name></type></param>,<param><type><name pos:line="2330" pos:column="199">pbstrEventBody</name></type></param>,<param><type><name pos:line="2330" pos:column="214">pSpanInsertionPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2331" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnsureStaticEventHandler(This,pszClassName,pszObjectTypeName,pszObjectName,pszNameOfEvent,pszEventHandlerName,itemidInsertionPoint,pbstrUniqueMemberID,pbstrEventBody,pSpanInsertionPoint) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2333" pos:column="1">#<cpp:directive pos:line="2333" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2333" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2336" pos:column="1">#<cpp:directive pos:line="2336" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2336" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2341" pos:column="1">#<cpp:directive pos:line="2341" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2341" pos:column="9">/* __IVsContainedLanguageStaticEventBinding_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2344" pos:column="1">#<cpp:directive pos:line="2344" pos:column="2">ifndef</cpp:directive> <name pos:line="2344" pos:column="9">__IVsWebFormDesignerSupport_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2345" pos:column="1">#<cpp:directive pos:line="2345" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2345" pos:column="9">__IVsWebFormDesignerSupport_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2347" pos:column="1">/* interface IVsWebFormDesignerSupport */</comment>
<comment type="block" pos:line="2348" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2351" pos:column="1">EXTERN_C</name> <specifier pos:line="2351" pos:column="10">const</specifier> <name pos:line="2351" pos:column="16">IID</name></type> <name pos:line="2351" pos:column="20">IID_IVsWebFormDesignerSupport</name></decl>;</decl_stmt>

<cpp:if pos:line="2353" pos:column="1">#<cpp:directive pos:line="2353" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2353" pos:column="5">defined</name><argument_list pos:line="2353" pos:column="12">(<argument><expr><name pos:line="2353" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2353" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2353" pos:column="29">!</op:operator><call><name pos:line="2353" pos:column="30">defined</name><argument_list pos:line="2353" pos:column="37">(<argument><expr><name pos:line="2353" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2355" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2355" pos:column="19">(<argument pos:line="2355" pos:column="20">"2139dfc1-b0ad-4c17-a817-74f2ba47c714"</argument>)</argument_list></macro>
    <label><name pos:line="2356" pos:column="5">IVsWebFormDesignerSupport</name> :</label> <expr_stmt><expr pos:line="2356" pos:column="33">public <name pos:line="2356" pos:column="40">IUnknown</name>
    <block pos:line="2357" pos:column="5">{
    <expr pos:line="2358" pos:column="5">public<op:operator pos:line="2358" pos:column="11">:</op:operator>
        virtual <name pos:line="2359" pos:column="17">HRESULT</name> <name pos:line="2359" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2359" pos:column="43">GetCodeDomProvider</name><argument_list pos:line="2359" pos:column="61">( 
            <comment type="block" pos:line="2360" pos:column="13">/* [out] */</comment> <argument pos:line="2360" pos:column="25">__RPC__deref_out_opt IUnknown **ppProvider</argument>)</argument_list></macro> <op:operator pos:line="2360" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2360" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="2362" pos:column="9">virtual <name pos:line="2362" pos:column="17">HRESULT</name> <name pos:line="2362" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2362" pos:column="43">AddReference</name><argument_list pos:line="2362" pos:column="55">( 
            <comment type="block" pos:line="2363" pos:column="13">/* [in] */</comment> <argument pos:line="2363" pos:column="24">__RPC__in LPCWSTR pszReference</argument>)</argument_list></macro> <op:operator pos:line="2363" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2363" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2367" pos:column="1">#<cpp:directive pos:line="2367" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2367" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2369" pos:column="5">typedef <type><struct pos:line="2369" pos:column="13">struct <name pos:line="2369" pos:column="20">IVsWebFormDesignerSupportVtbl</name>
    <block pos:line="2370" pos:column="5">{<public type="default" pos:line="2370" pos:column="6">
        <function_decl><type><name pos:line="2371" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2373" pos:column="9">HRESULT</name></type> ( <name pos:line="2373" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2373" pos:column="37">*</type:modifier><name pos:line="2373" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2373" pos:column="54">( 
            <param><decl><type><name pos:line="2374" pos:column="13">IVsWebFormDesignerSupport</name> <type:modifier pos:line="2374" pos:column="39">*</type:modifier></type> <name pos:line="2374" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2375" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2375" pos:column="24">__RPC__in</name> <name pos:line="2375" pos:column="34">REFIID</name></type> <name pos:line="2375" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2376" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2377" pos:column="13">__RPC__deref_out</name>  <name pos:line="2377" pos:column="31">void</name> <type:modifier pos:line="2377" pos:column="36">*</type:modifier><type:modifier pos:line="2377" pos:column="37">*</type:modifier></type><name pos:line="2377" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2379" pos:column="9">ULONG</name></type> ( <name pos:line="2379" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2379" pos:column="35">*</type:modifier><name pos:line="2379" pos:column="36">AddRef</name> )<parameter_list pos:line="2379" pos:column="44">( 
            <param><decl><type><name pos:line="2380" pos:column="13">IVsWebFormDesignerSupport</name> <type:modifier pos:line="2380" pos:column="39">*</type:modifier></type> <name pos:line="2380" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2382" pos:column="9">ULONG</name></type> ( <name pos:line="2382" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2382" pos:column="35">*</type:modifier><name pos:line="2382" pos:column="36">Release</name> )<parameter_list pos:line="2382" pos:column="45">( 
            <param><decl><type><name pos:line="2383" pos:column="13">IVsWebFormDesignerSupport</name> <type:modifier pos:line="2383" pos:column="39">*</type:modifier></type> <name pos:line="2383" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2385" pos:column="9">HRESULT</name></type> ( <name pos:line="2385" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2385" pos:column="37">*</type:modifier><name pos:line="2385" pos:column="38">GetCodeDomProvider</name> )<parameter_list pos:line="2385" pos:column="58">( 
            <param><decl><type><name pos:line="2386" pos:column="13">IVsWebFormDesignerSupport</name> <type:modifier pos:line="2386" pos:column="39">*</type:modifier></type> <name pos:line="2386" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2387" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2387" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2387" pos:column="46">IUnknown</name> <type:modifier pos:line="2387" pos:column="55">*</type:modifier><type:modifier pos:line="2387" pos:column="56">*</type:modifier></type><name pos:line="2387" pos:column="57">ppProvider</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2389" pos:column="9">HRESULT</name></type> ( <name pos:line="2389" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2389" pos:column="37">*</type:modifier><name pos:line="2389" pos:column="38">AddReference</name> )<parameter_list pos:line="2389" pos:column="52">( 
            <param><decl><type><name pos:line="2390" pos:column="13">IVsWebFormDesignerSupport</name> <type:modifier pos:line="2390" pos:column="39">*</type:modifier></type> <name pos:line="2390" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2391" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2391" pos:column="24">__RPC__in</name> <name pos:line="2391" pos:column="34">LPCWSTR</name></type> <name pos:line="2391" pos:column="42">pszReference</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2393" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2394" pos:column="7">IVsWebFormDesignerSupportVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2396" pos:column="5">interface</name></type> <name pos:line="2396" pos:column="15">IVsWebFormDesignerSupport</name>
    <argument_list pos:line="2397" pos:column="5">{
        <argument><expr><name pos:line="2398" pos:column="9">CONST_VTBL</name> struct <name pos:line="2398" pos:column="27">IVsWebFormDesignerSupportVtbl</name> <op:operator pos:line="2398" pos:column="57">*</op:operator><name pos:line="2398" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2403" pos:column="1">#<cpp:directive pos:line="2403" pos:column="2">ifdef</cpp:directive> <name pos:line="2403" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2406" pos:column="1">#<cpp:directive pos:line="2406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2406" pos:column="9">IVsWebFormDesignerSupport_QueryInterface</name><parameter_list pos:line="2406" pos:column="49">(<param><type><name pos:line="2406" pos:column="50">This</name></type></param>,<param><type><name pos:line="2406" pos:column="55">riid</name></type></param>,<param><type><name pos:line="2406" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2407" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2409" pos:column="1">#<cpp:directive pos:line="2409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2409" pos:column="9">IVsWebFormDesignerSupport_AddRef</name><parameter_list pos:line="2409" pos:column="41">(<param><type><name pos:line="2409" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2410" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2412" pos:column="1">#<cpp:directive pos:line="2412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2412" pos:column="9">IVsWebFormDesignerSupport_Release</name><parameter_list pos:line="2412" pos:column="42">(<param><type><name pos:line="2412" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2413" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2416" pos:column="1">#<cpp:directive pos:line="2416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2416" pos:column="9">IVsWebFormDesignerSupport_GetCodeDomProvider</name><parameter_list pos:line="2416" pos:column="53">(<param><type><name pos:line="2416" pos:column="54">This</name></type></param>,<param><type><name pos:line="2416" pos:column="59">ppProvider</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2417" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCodeDomProvider(This,ppProvider) )</cpp:value></cpp:define> 

<cpp:define pos:line="2419" pos:column="1">#<cpp:directive pos:line="2419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2419" pos:column="9">IVsWebFormDesignerSupport_AddReference</name><parameter_list pos:line="2419" pos:column="47">(<param><type><name pos:line="2419" pos:column="48">This</name></type></param>,<param><type><name pos:line="2419" pos:column="53">pszReference</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2420" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddReference(This,pszReference) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2422" pos:column="1">#<cpp:directive pos:line="2422" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2422" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2425" pos:column="1">#<cpp:directive pos:line="2425" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2425" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2430" pos:column="1">#<cpp:directive pos:line="2430" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2430" pos:column="9">/* __IVsWebFormDesignerSupport_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2433" pos:column="1">#<cpp:directive pos:line="2433" pos:column="2">ifndef</cpp:directive> <name pos:line="2433" pos:column="9">__IVsEnumCodeBlocks_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2434" pos:column="1">#<cpp:directive pos:line="2434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2434" pos:column="9">__IVsEnumCodeBlocks_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2436" pos:column="1">/* interface IVsEnumCodeBlocks */</comment>
<comment type="block" pos:line="2437" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2440" pos:column="1">EXTERN_C</name> <specifier pos:line="2440" pos:column="10">const</specifier> <name pos:line="2440" pos:column="16">IID</name></type> <name pos:line="2440" pos:column="20">IID_IVsEnumCodeBlocks</name></decl>;</decl_stmt>

<cpp:if pos:line="2442" pos:column="1">#<cpp:directive pos:line="2442" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2442" pos:column="5">defined</name><argument_list pos:line="2442" pos:column="12">(<argument><expr><name pos:line="2442" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2442" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2442" pos:column="29">!</op:operator><call><name pos:line="2442" pos:column="30">defined</name><argument_list pos:line="2442" pos:column="37">(<argument><expr><name pos:line="2442" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2444" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2444" pos:column="19">(<argument pos:line="2444" pos:column="20">"07a45a82-5354-4dde-ac7d-60f2cdd5573b"</argument>)</argument_list></macro>
    <label><name pos:line="2445" pos:column="5">IVsEnumCodeBlocks</name> :</label> <expr_stmt><expr pos:line="2445" pos:column="25">public <name pos:line="2445" pos:column="32">IUnknown</name>
    <block pos:line="2446" pos:column="5">{
    <expr pos:line="2447" pos:column="5">public<op:operator pos:line="2447" pos:column="11">:</op:operator>
        virtual <name pos:line="2448" pos:column="17">HRESULT</name> <name pos:line="2448" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2448" pos:column="43">Next</name><argument_list pos:line="2448" pos:column="47">( 
            <comment type="block" pos:line="2449" pos:column="13">/* [in] */</comment> <argument pos:line="2449" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="2450" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2450" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) TextSpanAndCookie *rgelt</argument>,
            <comment type="block" pos:line="2451" pos:column="13">/* [out] */</comment> <argument pos:line="2451" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2451" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="2451" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="2453" pos:column="9">virtual <name pos:line="2453" pos:column="17">HRESULT</name> <name pos:line="2453" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2453" pos:column="43">Skip</name><argument_list pos:line="2453" pos:column="47">( 
            <comment type="block" pos:line="2454" pos:column="13">/* [in] */</comment> <argument pos:line="2454" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="2454" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2454" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="2456" pos:column="9">virtual <name pos:line="2456" pos:column="17">HRESULT</name> <name pos:line="2456" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2456" pos:column="43">Reset</name><argument_list pos:line="2456" pos:column="48">( <argument><expr><name pos:line="2456" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2456" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2456" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="2458" pos:column="9">virtual <name pos:line="2458" pos:column="17">HRESULT</name> <name pos:line="2458" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2458" pos:column="43">Clone</name><argument_list pos:line="2458" pos:column="48">( 
            <comment type="block" pos:line="2459" pos:column="13">/* [out] */</comment> <argument pos:line="2459" pos:column="25">__RPC__deref_out_opt IVsEnumCodeBlocks **ppenum</argument>)</argument_list></macro> <op:operator pos:line="2459" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2459" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2463" pos:column="1">#<cpp:directive pos:line="2463" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2463" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2465" pos:column="5">typedef <type><struct pos:line="2465" pos:column="13">struct <name pos:line="2465" pos:column="20">IVsEnumCodeBlocksVtbl</name>
    <block pos:line="2466" pos:column="5">{<public type="default" pos:line="2466" pos:column="6">
        <function_decl><type><name pos:line="2467" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2469" pos:column="9">HRESULT</name></type> ( <name pos:line="2469" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2469" pos:column="37">*</type:modifier><name pos:line="2469" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2469" pos:column="54">( 
            <param><decl><type><name pos:line="2470" pos:column="13">IVsEnumCodeBlocks</name> <type:modifier pos:line="2470" pos:column="31">*</type:modifier></type> <name pos:line="2470" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2471" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2471" pos:column="24">__RPC__in</name> <name pos:line="2471" pos:column="34">REFIID</name></type> <name pos:line="2471" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2472" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2473" pos:column="13">__RPC__deref_out</name>  <name pos:line="2473" pos:column="31">void</name> <type:modifier pos:line="2473" pos:column="36">*</type:modifier><type:modifier pos:line="2473" pos:column="37">*</type:modifier></type><name pos:line="2473" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2475" pos:column="9">ULONG</name></type> ( <name pos:line="2475" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2475" pos:column="35">*</type:modifier><name pos:line="2475" pos:column="36">AddRef</name> )<parameter_list pos:line="2475" pos:column="44">( 
            <param><decl><type><name pos:line="2476" pos:column="13">IVsEnumCodeBlocks</name> <type:modifier pos:line="2476" pos:column="31">*</type:modifier></type> <name pos:line="2476" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2478" pos:column="9">ULONG</name></type> ( <name pos:line="2478" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2478" pos:column="35">*</type:modifier><name pos:line="2478" pos:column="36">Release</name> )<parameter_list pos:line="2478" pos:column="45">( 
            <param><decl><type><name pos:line="2479" pos:column="13">IVsEnumCodeBlocks</name> <type:modifier pos:line="2479" pos:column="31">*</type:modifier></type> <name pos:line="2479" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2481" pos:column="9">HRESULT</name> <argument_list pos:line="2481" pos:column="17">( <argument pos:line="2481" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2481" pos:column="44">(</op:operator> 
            <name pos:line="2482" pos:column="13">IVsEnumCodeBlocks</name> <op:operator pos:line="2482" pos:column="31">*</op:operator> <name pos:line="2482" pos:column="33">This</name><op:operator pos:line="2482" pos:column="37">,</op:operator>
            <comment type="block" pos:line="2483" pos:column="13">/* [in] */</comment> <name pos:line="2483" pos:column="24">ULONG</name> <name pos:line="2483" pos:column="30">celt</name><op:operator pos:line="2483" pos:column="34">,</op:operator>
            <comment type="block" pos:line="2484" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="2484" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="2484" pos:column="67">(<argument pos:line="2484" pos:column="68">celt</argument>, <argument pos:line="2484" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="2484" pos:column="89">TextSpanAndCookie</name> <op:operator pos:line="2484" pos:column="107">*</op:operator><name pos:line="2484" pos:column="108">rgelt</name><op:operator pos:line="2484" pos:column="113">,</op:operator>
            <comment type="block" pos:line="2485" pos:column="13">/* [out] */</comment> <name pos:line="2485" pos:column="25">__RPC__out</name> <name pos:line="2485" pos:column="36">ULONG</name> <op:operator pos:line="2485" pos:column="42">*</op:operator><name pos:line="2485" pos:column="43">pceltFetched</name><op:operator pos:line="2485" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2487" pos:column="9">HRESULT</name></type> ( <name pos:line="2487" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2487" pos:column="37">*</type:modifier><name pos:line="2487" pos:column="38">Skip</name> )<parameter_list pos:line="2487" pos:column="44">( 
            <param><decl><type><name pos:line="2488" pos:column="13">IVsEnumCodeBlocks</name> <type:modifier pos:line="2488" pos:column="31">*</type:modifier></type> <name pos:line="2488" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2489" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2489" pos:column="24">ULONG</name></type> <name pos:line="2489" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2491" pos:column="9">HRESULT</name></type> ( <name pos:line="2491" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2491" pos:column="37">*</type:modifier><name pos:line="2491" pos:column="38">Reset</name> )<parameter_list pos:line="2491" pos:column="45">( 
            <param><decl><type><name pos:line="2492" pos:column="13">IVsEnumCodeBlocks</name> <type:modifier pos:line="2492" pos:column="31">*</type:modifier></type> <name pos:line="2492" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2494" pos:column="9">HRESULT</name></type> ( <name pos:line="2494" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2494" pos:column="37">*</type:modifier><name pos:line="2494" pos:column="38">Clone</name> )<parameter_list pos:line="2494" pos:column="45">( 
            <param><decl><type><name pos:line="2495" pos:column="13">IVsEnumCodeBlocks</name> <type:modifier pos:line="2495" pos:column="31">*</type:modifier></type> <name pos:line="2495" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2496" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2496" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2496" pos:column="46">IVsEnumCodeBlocks</name> <type:modifier pos:line="2496" pos:column="64">*</type:modifier><type:modifier pos:line="2496" pos:column="65">*</type:modifier></type><name pos:line="2496" pos:column="66">ppenum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2498" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2499" pos:column="7">IVsEnumCodeBlocksVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2501" pos:column="5">interface</name></type> <name pos:line="2501" pos:column="15">IVsEnumCodeBlocks</name>
    <argument_list pos:line="2502" pos:column="5">{
        <argument><expr><name pos:line="2503" pos:column="9">CONST_VTBL</name> struct <name pos:line="2503" pos:column="27">IVsEnumCodeBlocksVtbl</name> <op:operator pos:line="2503" pos:column="49">*</op:operator><name pos:line="2503" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2508" pos:column="1">#<cpp:directive pos:line="2508" pos:column="2">ifdef</cpp:directive> <name pos:line="2508" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2511" pos:column="1">#<cpp:directive pos:line="2511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2511" pos:column="9">IVsEnumCodeBlocks_QueryInterface</name><parameter_list pos:line="2511" pos:column="41">(<param><type><name pos:line="2511" pos:column="42">This</name></type></param>,<param><type><name pos:line="2511" pos:column="47">riid</name></type></param>,<param><type><name pos:line="2511" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2512" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2514" pos:column="1">#<cpp:directive pos:line="2514" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2514" pos:column="9">IVsEnumCodeBlocks_AddRef</name><parameter_list pos:line="2514" pos:column="33">(<param><type><name pos:line="2514" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2515" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2517" pos:column="1">#<cpp:directive pos:line="2517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2517" pos:column="9">IVsEnumCodeBlocks_Release</name><parameter_list pos:line="2517" pos:column="34">(<param><type><name pos:line="2517" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2518" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2521" pos:column="1">#<cpp:directive pos:line="2521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2521" pos:column="9">IVsEnumCodeBlocks_Next</name><parameter_list pos:line="2521" pos:column="31">(<param><type><name pos:line="2521" pos:column="32">This</name></type></param>,<param><type><name pos:line="2521" pos:column="37">celt</name></type></param>,<param><type><name pos:line="2521" pos:column="42">rgelt</name></type></param>,<param><type><name pos:line="2521" pos:column="48">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2522" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2524" pos:column="1">#<cpp:directive pos:line="2524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2524" pos:column="9">IVsEnumCodeBlocks_Skip</name><parameter_list pos:line="2524" pos:column="31">(<param><type><name pos:line="2524" pos:column="32">This</name></type></param>,<param><type><name pos:line="2524" pos:column="37">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2525" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2527" pos:column="1">#<cpp:directive pos:line="2527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2527" pos:column="9">IVsEnumCodeBlocks_Reset</name><parameter_list pos:line="2527" pos:column="32">(<param><type><name pos:line="2527" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2528" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2530" pos:column="1">#<cpp:directive pos:line="2530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2530" pos:column="9">IVsEnumCodeBlocks_Clone</name><parameter_list pos:line="2530" pos:column="32">(<param><type><name pos:line="2530" pos:column="33">This</name></type></param>,<param><type><name pos:line="2530" pos:column="38">ppenum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2531" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppenum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2533" pos:column="1">#<cpp:directive pos:line="2533" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2533" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2536" pos:column="1">#<cpp:directive pos:line="2536" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2536" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2541" pos:column="1">#<cpp:directive pos:line="2541" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2541" pos:column="9">/* __IVsEnumCodeBlocks_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2544" pos:column="1">#<cpp:directive pos:line="2544" pos:column="2">ifndef</cpp:directive> <name pos:line="2544" pos:column="9">__IVsContainedCode_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2545" pos:column="1">#<cpp:directive pos:line="2545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2545" pos:column="9">__IVsContainedCode_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2547" pos:column="1">/* interface IVsContainedCode */</comment>
<comment type="block" pos:line="2548" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2551" pos:column="1">EXTERN_C</name> <specifier pos:line="2551" pos:column="10">const</specifier> <name pos:line="2551" pos:column="16">IID</name></type> <name pos:line="2551" pos:column="20">IID_IVsContainedCode</name></decl>;</decl_stmt>

<cpp:if pos:line="2553" pos:column="1">#<cpp:directive pos:line="2553" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2553" pos:column="5">defined</name><argument_list pos:line="2553" pos:column="12">(<argument><expr><name pos:line="2553" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2553" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2553" pos:column="29">!</op:operator><call><name pos:line="2553" pos:column="30">defined</name><argument_list pos:line="2553" pos:column="37">(<argument><expr><name pos:line="2553" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2555" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2555" pos:column="19">(<argument pos:line="2555" pos:column="20">"171a72ae-bae6-4b66-9a58-4691f08ed9f2"</argument>)</argument_list></macro>
    <label><name pos:line="2556" pos:column="5">IVsContainedCode</name> :</label> <expr_stmt><expr pos:line="2556" pos:column="24">public <name pos:line="2556" pos:column="31">IUnknown</name>
    <block pos:line="2557" pos:column="5">{
    <expr pos:line="2558" pos:column="5">public<op:operator pos:line="2558" pos:column="11">:</op:operator>
        virtual <name pos:line="2559" pos:column="17">HRESULT</name> <name pos:line="2559" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2559" pos:column="43">EnumOriginalCodeBlocks</name><argument_list pos:line="2559" pos:column="65">( 
            <comment type="block" pos:line="2560" pos:column="13">/* [out] */</comment> <argument pos:line="2560" pos:column="25">__RPC__deref_out_opt IVsEnumCodeBlocks **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2560" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2560" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="2562" pos:column="9">virtual <name pos:line="2562" pos:column="17">HRESULT</name> <name pos:line="2562" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2562" pos:column="43">HostSpansUpdated</name><argument_list pos:line="2562" pos:column="59">( <argument><expr><name pos:line="2562" pos:column="61">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2562" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="2562" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2566" pos:column="1">#<cpp:directive pos:line="2566" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2566" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2568" pos:column="5">typedef <type><struct pos:line="2568" pos:column="13">struct <name pos:line="2568" pos:column="20">IVsContainedCodeVtbl</name>
    <block pos:line="2569" pos:column="5">{<public type="default" pos:line="2569" pos:column="6">
        <function_decl><type><name pos:line="2570" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2572" pos:column="9">HRESULT</name></type> ( <name pos:line="2572" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2572" pos:column="37">*</type:modifier><name pos:line="2572" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2572" pos:column="54">( 
            <param><decl><type><name pos:line="2573" pos:column="13">IVsContainedCode</name> <type:modifier pos:line="2573" pos:column="30">*</type:modifier></type> <name pos:line="2573" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2574" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2574" pos:column="24">__RPC__in</name> <name pos:line="2574" pos:column="34">REFIID</name></type> <name pos:line="2574" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2575" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2576" pos:column="13">__RPC__deref_out</name>  <name pos:line="2576" pos:column="31">void</name> <type:modifier pos:line="2576" pos:column="36">*</type:modifier><type:modifier pos:line="2576" pos:column="37">*</type:modifier></type><name pos:line="2576" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2578" pos:column="9">ULONG</name></type> ( <name pos:line="2578" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2578" pos:column="35">*</type:modifier><name pos:line="2578" pos:column="36">AddRef</name> )<parameter_list pos:line="2578" pos:column="44">( 
            <param><decl><type><name pos:line="2579" pos:column="13">IVsContainedCode</name> <type:modifier pos:line="2579" pos:column="30">*</type:modifier></type> <name pos:line="2579" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2581" pos:column="9">ULONG</name></type> ( <name pos:line="2581" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2581" pos:column="35">*</type:modifier><name pos:line="2581" pos:column="36">Release</name> )<parameter_list pos:line="2581" pos:column="45">( 
            <param><decl><type><name pos:line="2582" pos:column="13">IVsContainedCode</name> <type:modifier pos:line="2582" pos:column="30">*</type:modifier></type> <name pos:line="2582" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2584" pos:column="9">HRESULT</name></type> ( <name pos:line="2584" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2584" pos:column="37">*</type:modifier><name pos:line="2584" pos:column="38">EnumOriginalCodeBlocks</name> )<parameter_list pos:line="2584" pos:column="62">( 
            <param><decl><type><name pos:line="2585" pos:column="13">IVsContainedCode</name> <type:modifier pos:line="2585" pos:column="30">*</type:modifier></type> <name pos:line="2585" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2586" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2586" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2586" pos:column="46">IVsEnumCodeBlocks</name> <type:modifier pos:line="2586" pos:column="64">*</type:modifier><type:modifier pos:line="2586" pos:column="65">*</type:modifier></type><name pos:line="2586" pos:column="66">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2588" pos:column="9">HRESULT</name></type> ( <name pos:line="2588" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2588" pos:column="37">*</type:modifier><name pos:line="2588" pos:column="38">HostSpansUpdated</name> )<parameter_list pos:line="2588" pos:column="56">( 
            <param><decl><type><name pos:line="2589" pos:column="13">IVsContainedCode</name> <type:modifier pos:line="2589" pos:column="30">*</type:modifier></type> <name pos:line="2589" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2591" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2592" pos:column="7">IVsContainedCodeVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2594" pos:column="5">interface</name></type> <name pos:line="2594" pos:column="15">IVsContainedCode</name>
    <argument_list pos:line="2595" pos:column="5">{
        <argument><expr><name pos:line="2596" pos:column="9">CONST_VTBL</name> struct <name pos:line="2596" pos:column="27">IVsContainedCodeVtbl</name> <op:operator pos:line="2596" pos:column="48">*</op:operator><name pos:line="2596" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2601" pos:column="1">#<cpp:directive pos:line="2601" pos:column="2">ifdef</cpp:directive> <name pos:line="2601" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2604" pos:column="1">#<cpp:directive pos:line="2604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2604" pos:column="9">IVsContainedCode_QueryInterface</name><parameter_list pos:line="2604" pos:column="40">(<param><type><name pos:line="2604" pos:column="41">This</name></type></param>,<param><type><name pos:line="2604" pos:column="46">riid</name></type></param>,<param><type><name pos:line="2604" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2605" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2607" pos:column="1">#<cpp:directive pos:line="2607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2607" pos:column="9">IVsContainedCode_AddRef</name><parameter_list pos:line="2607" pos:column="32">(<param><type><name pos:line="2607" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2608" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2610" pos:column="1">#<cpp:directive pos:line="2610" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2610" pos:column="9">IVsContainedCode_Release</name><parameter_list pos:line="2610" pos:column="33">(<param><type><name pos:line="2610" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2611" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2614" pos:column="1">#<cpp:directive pos:line="2614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2614" pos:column="9">IVsContainedCode_EnumOriginalCodeBlocks</name><parameter_list pos:line="2614" pos:column="48">(<param><type><name pos:line="2614" pos:column="49">This</name></type></param>,<param><type><name pos:line="2614" pos:column="54">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2615" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumOriginalCodeBlocks(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2617" pos:column="1">#<cpp:directive pos:line="2617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2617" pos:column="9">IVsContainedCode_HostSpansUpdated</name><parameter_list pos:line="2617" pos:column="42">(<param><type><name pos:line="2617" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2618" pos:column="5">( (This)-&gt;lpVtbl -&gt; HostSpansUpdated(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2620" pos:column="1">#<cpp:directive pos:line="2620" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2620" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2623" pos:column="1">#<cpp:directive pos:line="2623" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2623" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2628" pos:column="1">#<cpp:directive pos:line="2628" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2628" pos:column="9">/* __IVsContainedCode_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2631" pos:column="1">#<cpp:directive pos:line="2631" pos:column="2">ifndef</cpp:directive> <name pos:line="2631" pos:column="9">__IVsContainedLanguageFactory_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2632" pos:column="1">#<cpp:directive pos:line="2632" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2632" pos:column="9">__IVsContainedLanguageFactory_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2634" pos:column="1">/* interface IVsContainedLanguageFactory */</comment>
<comment type="block" pos:line="2635" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2638" pos:column="1">EXTERN_C</name> <specifier pos:line="2638" pos:column="10">const</specifier> <name pos:line="2638" pos:column="16">IID</name></type> <name pos:line="2638" pos:column="20">IID_IVsContainedLanguageFactory</name></decl>;</decl_stmt>

<cpp:if pos:line="2640" pos:column="1">#<cpp:directive pos:line="2640" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2640" pos:column="5">defined</name><argument_list pos:line="2640" pos:column="12">(<argument><expr><name pos:line="2640" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2640" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2640" pos:column="29">!</op:operator><call><name pos:line="2640" pos:column="30">defined</name><argument_list pos:line="2640" pos:column="37">(<argument><expr><name pos:line="2640" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2642" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2642" pos:column="19">(<argument pos:line="2642" pos:column="20">"9fd1bd52-9d32-4697-b446-36582b865c34"</argument>)</argument_list></macro>
    <label><name pos:line="2643" pos:column="5">IVsContainedLanguageFactory</name> :</label> <expr_stmt><expr pos:line="2643" pos:column="35">public <name pos:line="2643" pos:column="42">IUnknown</name>
    <block pos:line="2644" pos:column="5">{
    <expr pos:line="2645" pos:column="5">public<op:operator pos:line="2645" pos:column="11">:</op:operator>
        virtual <name pos:line="2646" pos:column="17">HRESULT</name> <name pos:line="2646" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2646" pos:column="43">GetLanguage</name><argument_list pos:line="2646" pos:column="54">( 
            <comment type="block" pos:line="2647" pos:column="13">/* [in] */</comment> <argument pos:line="2647" pos:column="24">__RPC__in_opt IVsHierarchy *pHierarchy</argument>,
            <comment type="block" pos:line="2648" pos:column="13">/* [in] */</comment> <argument pos:line="2648" pos:column="24">VSITEMID itemid</argument>,
            <comment type="block" pos:line="2649" pos:column="13">/* [in] */</comment> <argument pos:line="2649" pos:column="24">__RPC__in_opt IVsTextBufferCoordinator *pBufferCoordinator</argument>,
            <comment type="block" pos:line="2650" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2650" pos:column="33">__RPC__deref_out_opt IVsContainedLanguage **ppLanguage</argument>)</argument_list></macro> <op:operator pos:line="2650" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="2650" pos:column="91">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2654" pos:column="1">#<cpp:directive pos:line="2654" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2654" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2656" pos:column="5">typedef <type><struct pos:line="2656" pos:column="13">struct <name pos:line="2656" pos:column="20">IVsContainedLanguageFactoryVtbl</name>
    <block pos:line="2657" pos:column="5">{<public type="default" pos:line="2657" pos:column="6">
        <function_decl><type><name pos:line="2658" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2660" pos:column="9">HRESULT</name></type> ( <name pos:line="2660" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2660" pos:column="37">*</type:modifier><name pos:line="2660" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2660" pos:column="54">( 
            <param><decl><type><name pos:line="2661" pos:column="13">IVsContainedLanguageFactory</name> <type:modifier pos:line="2661" pos:column="41">*</type:modifier></type> <name pos:line="2661" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="2662" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2662" pos:column="24">__RPC__in</name> <name pos:line="2662" pos:column="34">REFIID</name></type> <name pos:line="2662" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2663" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2664" pos:column="13">__RPC__deref_out</name>  <name pos:line="2664" pos:column="31">void</name> <type:modifier pos:line="2664" pos:column="36">*</type:modifier><type:modifier pos:line="2664" pos:column="37">*</type:modifier></type><name pos:line="2664" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2666" pos:column="9">ULONG</name></type> ( <name pos:line="2666" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2666" pos:column="35">*</type:modifier><name pos:line="2666" pos:column="36">AddRef</name> )<parameter_list pos:line="2666" pos:column="44">( 
            <param><decl><type><name pos:line="2667" pos:column="13">IVsContainedLanguageFactory</name> <type:modifier pos:line="2667" pos:column="41">*</type:modifier></type> <name pos:line="2667" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2669" pos:column="9">ULONG</name></type> ( <name pos:line="2669" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2669" pos:column="35">*</type:modifier><name pos:line="2669" pos:column="36">Release</name> )<parameter_list pos:line="2669" pos:column="45">( 
            <param><decl><type><name pos:line="2670" pos:column="13">IVsContainedLanguageFactory</name> <type:modifier pos:line="2670" pos:column="41">*</type:modifier></type> <name pos:line="2670" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2672" pos:column="9">HRESULT</name></type> ( <name pos:line="2672" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2672" pos:column="37">*</type:modifier><name pos:line="2672" pos:column="38">GetLanguage</name> )<parameter_list pos:line="2672" pos:column="51">( 
            <param><decl><type><name pos:line="2673" pos:column="13">IVsContainedLanguageFactory</name> <type:modifier pos:line="2673" pos:column="41">*</type:modifier></type> <name pos:line="2673" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="2674" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2674" pos:column="24">__RPC__in_opt</name> <name pos:line="2674" pos:column="38">IVsHierarchy</name> <type:modifier pos:line="2674" pos:column="51">*</type:modifier></type><name pos:line="2674" pos:column="52">pHierarchy</name></decl></param>,
            <comment type="block" pos:line="2675" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2675" pos:column="24">VSITEMID</name></type> <name pos:line="2675" pos:column="33">itemid</name></decl></param>,
            <comment type="block" pos:line="2676" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2676" pos:column="24">__RPC__in_opt</name> <name pos:line="2676" pos:column="38">IVsTextBufferCoordinator</name> <type:modifier pos:line="2676" pos:column="63">*</type:modifier></type><name pos:line="2676" pos:column="64">pBufferCoordinator</name></decl></param>,
            <comment type="block" pos:line="2677" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2677" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2677" pos:column="54">IVsContainedLanguage</name> <type:modifier pos:line="2677" pos:column="75">*</type:modifier><type:modifier pos:line="2677" pos:column="76">*</type:modifier></type><name pos:line="2677" pos:column="77">ppLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2679" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2680" pos:column="7">IVsContainedLanguageFactoryVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2682" pos:column="5">interface</name></type> <name pos:line="2682" pos:column="15">IVsContainedLanguageFactory</name>
    <argument_list pos:line="2683" pos:column="5">{
        <argument><expr><name pos:line="2684" pos:column="9">CONST_VTBL</name> struct <name pos:line="2684" pos:column="27">IVsContainedLanguageFactoryVtbl</name> <op:operator pos:line="2684" pos:column="59">*</op:operator><name pos:line="2684" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2689" pos:column="1">#<cpp:directive pos:line="2689" pos:column="2">ifdef</cpp:directive> <name pos:line="2689" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2692" pos:column="1">#<cpp:directive pos:line="2692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2692" pos:column="9">IVsContainedLanguageFactory_QueryInterface</name><parameter_list pos:line="2692" pos:column="51">(<param><type><name pos:line="2692" pos:column="52">This</name></type></param>,<param><type><name pos:line="2692" pos:column="57">riid</name></type></param>,<param><type><name pos:line="2692" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2693" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2695" pos:column="1">#<cpp:directive pos:line="2695" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2695" pos:column="9">IVsContainedLanguageFactory_AddRef</name><parameter_list pos:line="2695" pos:column="43">(<param><type><name pos:line="2695" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2696" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2698" pos:column="1">#<cpp:directive pos:line="2698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2698" pos:column="9">IVsContainedLanguageFactory_Release</name><parameter_list pos:line="2698" pos:column="44">(<param><type><name pos:line="2698" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2699" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2702" pos:column="1">#<cpp:directive pos:line="2702" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2702" pos:column="9">IVsContainedLanguageFactory_GetLanguage</name><parameter_list pos:line="2702" pos:column="48">(<param><type><name pos:line="2702" pos:column="49">This</name></type></param>,<param><type><name pos:line="2702" pos:column="54">pHierarchy</name></type></param>,<param><type><name pos:line="2702" pos:column="65">itemid</name></type></param>,<param><type><name pos:line="2702" pos:column="72">pBufferCoordinator</name></type></param>,<param><type><name pos:line="2702" pos:column="91">ppLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2703" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguage(This,pHierarchy,itemid,pBufferCoordinator,ppLanguage) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2705" pos:column="1">#<cpp:directive pos:line="2705" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2705" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2708" pos:column="1">#<cpp:directive pos:line="2708" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2708" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2713" pos:column="1">#<cpp:directive pos:line="2713" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2713" pos:column="9">/* __IVsContainedLanguageFactory_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2716" pos:column="1">#<cpp:directive pos:line="2716" pos:column="2">ifndef</cpp:directive> <name pos:line="2716" pos:column="9">__IVsContainedLanguageProjectNameProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2717" pos:column="1">#<cpp:directive pos:line="2717" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2717" pos:column="9">__IVsContainedLanguageProjectNameProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2719" pos:column="1">/* interface IVsContainedLanguageProjectNameProvider */</comment>
<comment type="block" pos:line="2720" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2723" pos:column="1">EXTERN_C</name> <specifier pos:line="2723" pos:column="10">const</specifier> <name pos:line="2723" pos:column="16">IID</name></type> <name pos:line="2723" pos:column="20">IID_IVsContainedLanguageProjectNameProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="2725" pos:column="1">#<cpp:directive pos:line="2725" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2725" pos:column="5">defined</name><argument_list pos:line="2725" pos:column="12">(<argument><expr><name pos:line="2725" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2725" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2725" pos:column="29">!</op:operator><call><name pos:line="2725" pos:column="30">defined</name><argument_list pos:line="2725" pos:column="37">(<argument><expr><name pos:line="2725" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2727" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2727" pos:column="19">(<argument pos:line="2727" pos:column="20">"f77b0dd6-420b-4e7c-a0b3-c8d5b10a0997"</argument>)</argument_list></macro>
    <label><name pos:line="2728" pos:column="5">IVsContainedLanguageProjectNameProvider</name> :</label> <expr_stmt><expr pos:line="2728" pos:column="47">public <name pos:line="2728" pos:column="54">IUnknown</name>
    <block pos:line="2729" pos:column="5">{
    <expr pos:line="2730" pos:column="5">public<op:operator pos:line="2730" pos:column="11">:</op:operator>
        virtual <name pos:line="2731" pos:column="17">HRESULT</name> <name pos:line="2731" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2731" pos:column="43">GetProjectName</name><argument_list pos:line="2731" pos:column="57">( 
            <comment type="block" pos:line="2732" pos:column="13">/* [in] */</comment> <argument pos:line="2732" pos:column="24">VSITEMID itemid</argument>,
            <comment type="block" pos:line="2733" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2733" pos:column="33">__RPC__deref_out_opt BSTR *pbstrProjectName</argument>)</argument_list></macro> <op:operator pos:line="2733" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="2733" pos:column="80">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2737" pos:column="1">#<cpp:directive pos:line="2737" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2737" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2739" pos:column="5">typedef <type><struct pos:line="2739" pos:column="13">struct <name pos:line="2739" pos:column="20">IVsContainedLanguageProjectNameProviderVtbl</name>
    <block pos:line="2740" pos:column="5">{<public type="default" pos:line="2740" pos:column="6">
        <function_decl><type><name pos:line="2741" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2743" pos:column="9">HRESULT</name></type> ( <name pos:line="2743" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2743" pos:column="37">*</type:modifier><name pos:line="2743" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2743" pos:column="54">( 
            <param><decl><type><name pos:line="2744" pos:column="13">IVsContainedLanguageProjectNameProvider</name> <type:modifier pos:line="2744" pos:column="53">*</type:modifier></type> <name pos:line="2744" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="2745" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2745" pos:column="24">__RPC__in</name> <name pos:line="2745" pos:column="34">REFIID</name></type> <name pos:line="2745" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2746" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2747" pos:column="13">__RPC__deref_out</name>  <name pos:line="2747" pos:column="31">void</name> <type:modifier pos:line="2747" pos:column="36">*</type:modifier><type:modifier pos:line="2747" pos:column="37">*</type:modifier></type><name pos:line="2747" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2749" pos:column="9">ULONG</name></type> ( <name pos:line="2749" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2749" pos:column="35">*</type:modifier><name pos:line="2749" pos:column="36">AddRef</name> )<parameter_list pos:line="2749" pos:column="44">( 
            <param><decl><type><name pos:line="2750" pos:column="13">IVsContainedLanguageProjectNameProvider</name> <type:modifier pos:line="2750" pos:column="53">*</type:modifier></type> <name pos:line="2750" pos:column="55">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2752" pos:column="9">ULONG</name></type> ( <name pos:line="2752" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2752" pos:column="35">*</type:modifier><name pos:line="2752" pos:column="36">Release</name> )<parameter_list pos:line="2752" pos:column="45">( 
            <param><decl><type><name pos:line="2753" pos:column="13">IVsContainedLanguageProjectNameProvider</name> <type:modifier pos:line="2753" pos:column="53">*</type:modifier></type> <name pos:line="2753" pos:column="55">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2755" pos:column="9">HRESULT</name></type> ( <name pos:line="2755" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2755" pos:column="37">*</type:modifier><name pos:line="2755" pos:column="38">GetProjectName</name> )<parameter_list pos:line="2755" pos:column="54">( 
            <param><decl><type><name pos:line="2756" pos:column="13">IVsContainedLanguageProjectNameProvider</name> <type:modifier pos:line="2756" pos:column="53">*</type:modifier></type> <name pos:line="2756" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="2757" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2757" pos:column="24">VSITEMID</name></type> <name pos:line="2757" pos:column="33">itemid</name></decl></param>,
            <comment type="block" pos:line="2758" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2758" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2758" pos:column="54">BSTR</name> <type:modifier pos:line="2758" pos:column="59">*</type:modifier></type><name pos:line="2758" pos:column="60">pbstrProjectName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2760" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2761" pos:column="7">IVsContainedLanguageProjectNameProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2763" pos:column="5">interface</name></type> <name pos:line="2763" pos:column="15">IVsContainedLanguageProjectNameProvider</name>
    <argument_list pos:line="2764" pos:column="5">{
        <argument><expr><name pos:line="2765" pos:column="9">CONST_VTBL</name> struct <name pos:line="2765" pos:column="27">IVsContainedLanguageProjectNameProviderVtbl</name> <op:operator pos:line="2765" pos:column="71">*</op:operator><name pos:line="2765" pos:column="72">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2770" pos:column="1">#<cpp:directive pos:line="2770" pos:column="2">ifdef</cpp:directive> <name pos:line="2770" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2773" pos:column="1">#<cpp:directive pos:line="2773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2773" pos:column="9">IVsContainedLanguageProjectNameProvider_QueryInterface</name><parameter_list pos:line="2773" pos:column="63">(<param><type><name pos:line="2773" pos:column="64">This</name></type></param>,<param><type><name pos:line="2773" pos:column="69">riid</name></type></param>,<param><type><name pos:line="2773" pos:column="74">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2774" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2776" pos:column="1">#<cpp:directive pos:line="2776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2776" pos:column="9">IVsContainedLanguageProjectNameProvider_AddRef</name><parameter_list pos:line="2776" pos:column="55">(<param><type><name pos:line="2776" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2777" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2779" pos:column="1">#<cpp:directive pos:line="2779" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2779" pos:column="9">IVsContainedLanguageProjectNameProvider_Release</name><parameter_list pos:line="2779" pos:column="56">(<param><type><name pos:line="2779" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2780" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2783" pos:column="1">#<cpp:directive pos:line="2783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2783" pos:column="9">IVsContainedLanguageProjectNameProvider_GetProjectName</name><parameter_list pos:line="2783" pos:column="63">(<param><type><name pos:line="2783" pos:column="64">This</name></type></param>,<param><type><name pos:line="2783" pos:column="69">itemid</name></type></param>,<param><type><name pos:line="2783" pos:column="76">pbstrProjectName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2784" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProjectName(This,itemid,pbstrProjectName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2786" pos:column="1">#<cpp:directive pos:line="2786" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2786" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2789" pos:column="1">#<cpp:directive pos:line="2789" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2789" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2794" pos:column="1">#<cpp:directive pos:line="2794" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2794" pos:column="9">/* __IVsContainedLanguageProjectNameProvider_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2797" pos:column="1">#<cpp:directive pos:line="2797" pos:column="2">ifndef</cpp:directive> <name pos:line="2797" pos:column="9">__IVsEnumBufferCoordinatorSpans_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2798" pos:column="1">#<cpp:directive pos:line="2798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2798" pos:column="9">__IVsEnumBufferCoordinatorSpans_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2800" pos:column="1">/* interface IVsEnumBufferCoordinatorSpans */</comment>
<comment type="block" pos:line="2801" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2804" pos:column="1">EXTERN_C</name> <specifier pos:line="2804" pos:column="10">const</specifier> <name pos:line="2804" pos:column="16">IID</name></type> <name pos:line="2804" pos:column="20">IID_IVsEnumBufferCoordinatorSpans</name></decl>;</decl_stmt>

<cpp:if pos:line="2806" pos:column="1">#<cpp:directive pos:line="2806" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2806" pos:column="5">defined</name><argument_list pos:line="2806" pos:column="12">(<argument><expr><name pos:line="2806" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2806" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2806" pos:column="29">!</op:operator><call><name pos:line="2806" pos:column="30">defined</name><argument_list pos:line="2806" pos:column="37">(<argument><expr><name pos:line="2806" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2808" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2808" pos:column="19">(<argument pos:line="2808" pos:column="20">"5FCEEA4C-D49F-4acd-B816-130A5DCD4C54"</argument>)</argument_list></macro>
    <label><name pos:line="2809" pos:column="5">IVsEnumBufferCoordinatorSpans</name> :</label> <expr_stmt><expr pos:line="2809" pos:column="37">public <name pos:line="2809" pos:column="44">IUnknown</name>
    <block pos:line="2810" pos:column="5">{
    <expr pos:line="2811" pos:column="5">public<op:operator pos:line="2811" pos:column="11">:</op:operator>
        virtual <name pos:line="2812" pos:column="17">HRESULT</name> <name pos:line="2812" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2812" pos:column="43">Next</name><argument_list pos:line="2812" pos:column="47">( 
            <comment type="block" pos:line="2813" pos:column="13">/* [in] */</comment> <argument pos:line="2813" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="2814" pos:column="13">/* [out][in] */</comment> <argument pos:line="2814" pos:column="29">__RPC__inout NewSpanMapping *rgelt</argument>,
            <comment type="block" pos:line="2815" pos:column="13">/* [out] */</comment> <argument pos:line="2815" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2815" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="2815" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="2817" pos:column="9">virtual <name pos:line="2817" pos:column="17">HRESULT</name> <name pos:line="2817" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2817" pos:column="43">Skip</name><argument_list pos:line="2817" pos:column="47">( 
            <comment type="block" pos:line="2818" pos:column="13">/* [in] */</comment> <argument pos:line="2818" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="2818" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2818" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="2820" pos:column="9">virtual <name pos:line="2820" pos:column="17">HRESULT</name> <name pos:line="2820" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2820" pos:column="43">Reset</name><argument_list pos:line="2820" pos:column="48">( <argument><expr><name pos:line="2820" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2820" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2820" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="2822" pos:column="9">virtual <name pos:line="2822" pos:column="17">HRESULT</name> <name pos:line="2822" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2822" pos:column="43">Clone</name><argument_list pos:line="2822" pos:column="48">( 
            <comment type="block" pos:line="2823" pos:column="13">/* [out] */</comment> <argument pos:line="2823" pos:column="25">__RPC__deref_out_opt IVsEnumBufferCoordinatorSpans **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2823" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="2823" pos:column="88">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2827" pos:column="1">#<cpp:directive pos:line="2827" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2827" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2829" pos:column="5">typedef <type><struct pos:line="2829" pos:column="13">struct <name pos:line="2829" pos:column="20">IVsEnumBufferCoordinatorSpansVtbl</name>
    <block pos:line="2830" pos:column="5">{<public type="default" pos:line="2830" pos:column="6">
        <function_decl><type><name pos:line="2831" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2833" pos:column="9">HRESULT</name></type> ( <name pos:line="2833" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2833" pos:column="37">*</type:modifier><name pos:line="2833" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2833" pos:column="54">( 
            <param><decl><type><name pos:line="2834" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2834" pos:column="43">*</type:modifier></type> <name pos:line="2834" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="2835" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2835" pos:column="24">__RPC__in</name> <name pos:line="2835" pos:column="34">REFIID</name></type> <name pos:line="2835" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2836" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2837" pos:column="13">__RPC__deref_out</name>  <name pos:line="2837" pos:column="31">void</name> <type:modifier pos:line="2837" pos:column="36">*</type:modifier><type:modifier pos:line="2837" pos:column="37">*</type:modifier></type><name pos:line="2837" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2839" pos:column="9">ULONG</name></type> ( <name pos:line="2839" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2839" pos:column="35">*</type:modifier><name pos:line="2839" pos:column="36">AddRef</name> )<parameter_list pos:line="2839" pos:column="44">( 
            <param><decl><type><name pos:line="2840" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2840" pos:column="43">*</type:modifier></type> <name pos:line="2840" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2842" pos:column="9">ULONG</name></type> ( <name pos:line="2842" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2842" pos:column="35">*</type:modifier><name pos:line="2842" pos:column="36">Release</name> )<parameter_list pos:line="2842" pos:column="45">( 
            <param><decl><type><name pos:line="2843" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2843" pos:column="43">*</type:modifier></type> <name pos:line="2843" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2845" pos:column="9">HRESULT</name></type> ( <name pos:line="2845" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2845" pos:column="37">*</type:modifier><name pos:line="2845" pos:column="38">Next</name> )<parameter_list pos:line="2845" pos:column="44">( 
            <param><decl><type><name pos:line="2846" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2846" pos:column="43">*</type:modifier></type> <name pos:line="2846" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="2847" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2847" pos:column="24">ULONG</name></type> <name pos:line="2847" pos:column="30">celt</name></decl></param>,
            <comment type="block" pos:line="2848" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2848" pos:column="29">__RPC__inout</name> <name pos:line="2848" pos:column="42">NewSpanMapping</name> <type:modifier pos:line="2848" pos:column="57">*</type:modifier></type><name pos:line="2848" pos:column="58">rgelt</name></decl></param>,
            <comment type="block" pos:line="2849" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2849" pos:column="25">__RPC__out</name> <name pos:line="2849" pos:column="36">ULONG</name> <type:modifier pos:line="2849" pos:column="42">*</type:modifier></type><name pos:line="2849" pos:column="43">pceltFetched</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2851" pos:column="9">HRESULT</name></type> ( <name pos:line="2851" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2851" pos:column="37">*</type:modifier><name pos:line="2851" pos:column="38">Skip</name> )<parameter_list pos:line="2851" pos:column="44">( 
            <param><decl><type><name pos:line="2852" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2852" pos:column="43">*</type:modifier></type> <name pos:line="2852" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="2853" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2853" pos:column="24">ULONG</name></type> <name pos:line="2853" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2855" pos:column="9">HRESULT</name></type> ( <name pos:line="2855" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2855" pos:column="37">*</type:modifier><name pos:line="2855" pos:column="38">Reset</name> )<parameter_list pos:line="2855" pos:column="45">( 
            <param><decl><type><name pos:line="2856" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2856" pos:column="43">*</type:modifier></type> <name pos:line="2856" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2858" pos:column="9">HRESULT</name></type> ( <name pos:line="2858" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2858" pos:column="37">*</type:modifier><name pos:line="2858" pos:column="38">Clone</name> )<parameter_list pos:line="2858" pos:column="45">( 
            <param><decl><type><name pos:line="2859" pos:column="13">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2859" pos:column="43">*</type:modifier></type> <name pos:line="2859" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="2860" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2860" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2860" pos:column="46">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="2860" pos:column="76">*</type:modifier><type:modifier pos:line="2860" pos:column="77">*</type:modifier></type><name pos:line="2860" pos:column="78">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2862" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2863" pos:column="7">IVsEnumBufferCoordinatorSpansVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2865" pos:column="5">interface</name></type> <name pos:line="2865" pos:column="15">IVsEnumBufferCoordinatorSpans</name>
    <argument_list pos:line="2866" pos:column="5">{
        <argument><expr><name pos:line="2867" pos:column="9">CONST_VTBL</name> struct <name pos:line="2867" pos:column="27">IVsEnumBufferCoordinatorSpansVtbl</name> <op:operator pos:line="2867" pos:column="61">*</op:operator><name pos:line="2867" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2872" pos:column="1">#<cpp:directive pos:line="2872" pos:column="2">ifdef</cpp:directive> <name pos:line="2872" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2875" pos:column="1">#<cpp:directive pos:line="2875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2875" pos:column="9">IVsEnumBufferCoordinatorSpans_QueryInterface</name><parameter_list pos:line="2875" pos:column="53">(<param><type><name pos:line="2875" pos:column="54">This</name></type></param>,<param><type><name pos:line="2875" pos:column="59">riid</name></type></param>,<param><type><name pos:line="2875" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2876" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2878" pos:column="1">#<cpp:directive pos:line="2878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2878" pos:column="9">IVsEnumBufferCoordinatorSpans_AddRef</name><parameter_list pos:line="2878" pos:column="45">(<param><type><name pos:line="2878" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2879" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2881" pos:column="1">#<cpp:directive pos:line="2881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2881" pos:column="9">IVsEnumBufferCoordinatorSpans_Release</name><parameter_list pos:line="2881" pos:column="46">(<param><type><name pos:line="2881" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2882" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2885" pos:column="1">#<cpp:directive pos:line="2885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2885" pos:column="9">IVsEnumBufferCoordinatorSpans_Next</name><parameter_list pos:line="2885" pos:column="43">(<param><type><name pos:line="2885" pos:column="44">This</name></type></param>,<param><type><name pos:line="2885" pos:column="49">celt</name></type></param>,<param><type><name pos:line="2885" pos:column="54">rgelt</name></type></param>,<param><type><name pos:line="2885" pos:column="60">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2886" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2888" pos:column="1">#<cpp:directive pos:line="2888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2888" pos:column="9">IVsEnumBufferCoordinatorSpans_Skip</name><parameter_list pos:line="2888" pos:column="43">(<param><type><name pos:line="2888" pos:column="44">This</name></type></param>,<param><type><name pos:line="2888" pos:column="49">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2889" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2891" pos:column="1">#<cpp:directive pos:line="2891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2891" pos:column="9">IVsEnumBufferCoordinatorSpans_Reset</name><parameter_list pos:line="2891" pos:column="44">(<param><type><name pos:line="2891" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2892" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2894" pos:column="1">#<cpp:directive pos:line="2894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2894" pos:column="9">IVsEnumBufferCoordinatorSpans_Clone</name><parameter_list pos:line="2894" pos:column="44">(<param><type><name pos:line="2894" pos:column="45">This</name></type></param>,<param><type><name pos:line="2894" pos:column="50">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2895" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2897" pos:column="1">#<cpp:directive pos:line="2897" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2897" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2900" pos:column="1">#<cpp:directive pos:line="2900" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2900" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2905" pos:column="1">#<cpp:directive pos:line="2905" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2905" pos:column="9">/* __IVsEnumBufferCoordinatorSpans_INTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="2908" pos:column="1">EXTERN_C</name> <specifier pos:line="2908" pos:column="10">const</specifier> <name pos:line="2908" pos:column="16">CLSID</name></type> <name pos:line="2908" pos:column="22">CLSID_VsTextBufferCoordinator</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="2910" pos:column="1">#<cpp:directive pos:line="2910" pos:column="2">ifdef</cpp:directive> <name pos:line="2910" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="2912" pos:column="1">class</type> <name pos:line="2912" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="2912" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="2912" pos:column="21">"3e77fa94-526f-4233-bf81-b2b0329a62b9"</lit:literal></expr></argument>)</argument_list>
<name pos:line="2913" pos:column="1">VsTextBufferCoordinator</name></decl>;</decl_stmt>
<cpp:endif pos:line="2914" pos:column="1">#<cpp:directive pos:line="2914" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="2916" pos:column="1">#<cpp:directive pos:line="2916" pos:column="2">ifndef</cpp:directive> <name pos:line="2916" pos:column="9">__IVsTextBufferCoordinator_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2917" pos:column="1">#<cpp:directive pos:line="2917" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2917" pos:column="9">__IVsTextBufferCoordinator_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2919" pos:column="1">/* interface IVsTextBufferCoordinator */</comment>
<comment type="block" pos:line="2920" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="2923" pos:column="1">EXTERN_C</name> <specifier pos:line="2923" pos:column="10">const</specifier> <name pos:line="2923" pos:column="16">IID</name></type> <name pos:line="2923" pos:column="20">IID_IVsTextBufferCoordinator</name></decl>;</decl_stmt>

<cpp:if pos:line="2925" pos:column="1">#<cpp:directive pos:line="2925" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2925" pos:column="5">defined</name><argument_list pos:line="2925" pos:column="12">(<argument><expr><name pos:line="2925" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2925" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2925" pos:column="29">!</op:operator><call><name pos:line="2925" pos:column="30">defined</name><argument_list pos:line="2925" pos:column="37">(<argument><expr><name pos:line="2925" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2927" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2927" pos:column="19">(<argument pos:line="2927" pos:column="20">"84465401-2886-4ce0-af50-c0560226ed40"</argument>)</argument_list></macro>
    <label><name pos:line="2928" pos:column="5">IVsTextBufferCoordinator</name> :</label> <expr_stmt><expr pos:line="2928" pos:column="32">public <name pos:line="2928" pos:column="39">IUnknown</name>
    <block pos:line="2929" pos:column="5">{
    <expr pos:line="2930" pos:column="5">public<op:operator pos:line="2930" pos:column="11">:</op:operator>
        virtual <name pos:line="2931" pos:column="17">HRESULT</name> <name pos:line="2931" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2931" pos:column="43">SetBuffers</name><argument_list pos:line="2931" pos:column="53">( 
            <comment type="block" pos:line="2932" pos:column="13">/* [in] */</comment> <argument pos:line="2932" pos:column="24">__RPC__in_opt IVsTextLines *pPrimaryBuffer</argument>,
            <comment type="block" pos:line="2933" pos:column="13">/* [in] */</comment> <argument pos:line="2933" pos:column="24">__RPC__in_opt IVsTextLines *pSecondaryBuffer</argument>)</argument_list></macro> <op:operator pos:line="2933" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2933" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="2935" pos:column="9">virtual <name pos:line="2935" pos:column="17">HRESULT</name> <name pos:line="2935" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2935" pos:column="43">SetSpanMappings</name><argument_list pos:line="2935" pos:column="58">( 
            <comment type="block" pos:line="2936" pos:column="13">/* [in] */</comment> <argument pos:line="2936" pos:column="24">long cSpans</argument>,
            <comment type="block" pos:line="2937" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2937" pos:column="33">__RPC__in_ecount_full(cSpans) NewSpanMapping *rgSpans</argument>)</argument_list></macro> <op:operator pos:line="2937" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="2937" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="2939" pos:column="9">virtual <name pos:line="2939" pos:column="17">HRESULT</name> <name pos:line="2939" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2939" pos:column="43">MapPrimaryToSecondarySpan</name><argument_list pos:line="2939" pos:column="68">( 
            <comment type="block" pos:line="2940" pos:column="13">/* [in] */</comment> <argument pos:line="2940" pos:column="24">TextSpan tsPrimary</argument>,
            <comment type="block" pos:line="2941" pos:column="13">/* [out] */</comment> <argument pos:line="2941" pos:column="25">__RPC__out TextSpan *ptsSecondary</argument>)</argument_list></macro> <op:operator pos:line="2941" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="2941" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="2943" pos:column="9">virtual <name pos:line="2943" pos:column="17">HRESULT</name> <name pos:line="2943" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2943" pos:column="43">MapSecondaryToPrimarySpan</name><argument_list pos:line="2943" pos:column="68">( 
            <comment type="block" pos:line="2944" pos:column="13">/* [in] */</comment> <argument pos:line="2944" pos:column="24">TextSpan tsSecondary</argument>,
            <comment type="block" pos:line="2945" pos:column="13">/* [out] */</comment> <argument pos:line="2945" pos:column="25">__RPC__out TextSpan *ptsPrimary</argument>)</argument_list></macro> <op:operator pos:line="2945" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="2945" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="2947" pos:column="9">virtual <name pos:line="2947" pos:column="17">HRESULT</name> <name pos:line="2947" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2947" pos:column="43">GetPrimaryBuffer</name><argument_list pos:line="2947" pos:column="59">( 
            <comment type="block" pos:line="2948" pos:column="13">/* [out] */</comment> <argument pos:line="2948" pos:column="25">__RPC__deref_out_opt IVsTextLines **ppBuffer</argument>)</argument_list></macro> <op:operator pos:line="2948" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2948" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2950" pos:column="9">virtual <name pos:line="2950" pos:column="17">HRESULT</name> <name pos:line="2950" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2950" pos:column="43">GetSecondaryBuffer</name><argument_list pos:line="2950" pos:column="61">( 
            <comment type="block" pos:line="2951" pos:column="13">/* [out] */</comment> <argument pos:line="2951" pos:column="25">__RPC__deref_out_opt IVsTextLines **ppBuffer</argument>)</argument_list></macro> <op:operator pos:line="2951" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2951" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2953" pos:column="9">virtual <name pos:line="2953" pos:column="17">HRESULT</name> <name pos:line="2953" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2953" pos:column="43">EnableReplication</name><argument_list pos:line="2953" pos:column="60">( 
            <comment type="block" pos:line="2954" pos:column="13">/* [in] */</comment> <argument pos:line="2954" pos:column="24">DWORD bcrd</argument>,
            <comment type="block" pos:line="2955" pos:column="13">/* [in] */</comment> <argument pos:line="2955" pos:column="24">BOOL fEnable</argument>)</argument_list></macro> <op:operator pos:line="2955" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="2955" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="2957" pos:column="9">virtual <name pos:line="2957" pos:column="17">HRESULT</name> <name pos:line="2957" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2957" pos:column="43">GetMappingOfPrimaryPosition</name><argument_list pos:line="2957" pos:column="70">( 
            <comment type="block" pos:line="2958" pos:column="13">/* [in] */</comment> <argument pos:line="2958" pos:column="24">long lPosition</argument>,
            <comment type="block" pos:line="2959" pos:column="13">/* [out] */</comment> <argument pos:line="2959" pos:column="25">__RPC__out TextSpan *ptsPrimary</argument>,
            <comment type="block" pos:line="2960" pos:column="13">/* [out] */</comment> <argument pos:line="2960" pos:column="25">__RPC__out TextSpan *ptsSecondary</argument>)</argument_list></macro> <op:operator pos:line="2960" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="2960" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="2962" pos:column="9">virtual <name pos:line="2962" pos:column="17">HRESULT</name> <name pos:line="2962" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2962" pos:column="43">SetBufferMappingModes</name><argument_list pos:line="2962" pos:column="64">( 
            <comment type="block" pos:line="2963" pos:column="13">/* [in] */</comment> <argument pos:line="2963" pos:column="24">DWORD bcmmPrimary</argument>,
            <comment type="block" pos:line="2964" pos:column="13">/* [in] */</comment> <argument pos:line="2964" pos:column="24">DWORD bcmmSecondary</argument>)</argument_list></macro> <op:operator pos:line="2964" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="2964" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="2966" pos:column="9">virtual <name pos:line="2966" pos:column="17">HRESULT</name> <name pos:line="2966" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2966" pos:column="43">EnumSpans</name><argument_list pos:line="2966" pos:column="52">( 
            <argument pos:line="2967" pos:column="13">__RPC__deref_in_opt IVsEnumBufferCoordinatorSpans **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2967" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2967" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2971" pos:column="1">#<cpp:directive pos:line="2971" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2971" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2973" pos:column="5">typedef <type><struct pos:line="2973" pos:column="13">struct <name pos:line="2973" pos:column="20">IVsTextBufferCoordinatorVtbl</name>
    <block pos:line="2974" pos:column="5">{<public type="default" pos:line="2974" pos:column="6">
        <function_decl><type><name pos:line="2975" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2977" pos:column="9">HRESULT</name></type> ( <name pos:line="2977" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2977" pos:column="37">*</type:modifier><name pos:line="2977" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2977" pos:column="54">( 
            <param><decl><type><name pos:line="2978" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="2978" pos:column="38">*</type:modifier></type> <name pos:line="2978" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2979" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2979" pos:column="24">__RPC__in</name> <name pos:line="2979" pos:column="34">REFIID</name></type> <name pos:line="2979" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2980" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2981" pos:column="13">__RPC__deref_out</name>  <name pos:line="2981" pos:column="31">void</name> <type:modifier pos:line="2981" pos:column="36">*</type:modifier><type:modifier pos:line="2981" pos:column="37">*</type:modifier></type><name pos:line="2981" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2983" pos:column="9">ULONG</name></type> ( <name pos:line="2983" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2983" pos:column="35">*</type:modifier><name pos:line="2983" pos:column="36">AddRef</name> )<parameter_list pos:line="2983" pos:column="44">( 
            <param><decl><type><name pos:line="2984" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="2984" pos:column="38">*</type:modifier></type> <name pos:line="2984" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2986" pos:column="9">ULONG</name></type> ( <name pos:line="2986" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2986" pos:column="35">*</type:modifier><name pos:line="2986" pos:column="36">Release</name> )<parameter_list pos:line="2986" pos:column="45">( 
            <param><decl><type><name pos:line="2987" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="2987" pos:column="38">*</type:modifier></type> <name pos:line="2987" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2989" pos:column="9">HRESULT</name></type> ( <name pos:line="2989" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2989" pos:column="37">*</type:modifier><name pos:line="2989" pos:column="38">SetBuffers</name> )<parameter_list pos:line="2989" pos:column="50">( 
            <param><decl><type><name pos:line="2990" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="2990" pos:column="38">*</type:modifier></type> <name pos:line="2990" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2991" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2991" pos:column="24">__RPC__in_opt</name> <name pos:line="2991" pos:column="38">IVsTextLines</name> <type:modifier pos:line="2991" pos:column="51">*</type:modifier></type><name pos:line="2991" pos:column="52">pPrimaryBuffer</name></decl></param>,
            <comment type="block" pos:line="2992" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2992" pos:column="24">__RPC__in_opt</name> <name pos:line="2992" pos:column="38">IVsTextLines</name> <type:modifier pos:line="2992" pos:column="51">*</type:modifier></type><name pos:line="2992" pos:column="52">pSecondaryBuffer</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2994" pos:column="9">HRESULT</name> <argument_list pos:line="2994" pos:column="17">( <argument pos:line="2994" pos:column="19">STDMETHODCALLTYPE *SetSpanMappings</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2994" pos:column="55">(</op:operator> 
            <name pos:line="2995" pos:column="13">IVsTextBufferCoordinator</name> <op:operator pos:line="2995" pos:column="38">*</op:operator> <name pos:line="2995" pos:column="40">This</name><op:operator pos:line="2995" pos:column="44">,</op:operator>
            <comment type="block" pos:line="2996" pos:column="13">/* [in] */</comment> <name pos:line="2996" pos:column="24">long</name> <name pos:line="2996" pos:column="29">cSpans</name><op:operator pos:line="2996" pos:column="35">,</op:operator>
            <comment type="block" pos:line="2997" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2997" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2997" pos:column="54">(<argument pos:line="2997" pos:column="55">cSpans</argument>)</argument_list></macro> <name pos:line="2997" pos:column="63">NewSpanMapping</name> <op:operator pos:line="2997" pos:column="78">*</op:operator><name pos:line="2997" pos:column="79">rgSpans</name><op:operator pos:line="2997" pos:column="86">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2999" pos:column="9">HRESULT</name></type> ( <name pos:line="2999" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2999" pos:column="37">*</type:modifier><name pos:line="2999" pos:column="38">MapPrimaryToSecondarySpan</name> )<parameter_list pos:line="2999" pos:column="65">( 
            <param><decl><type><name pos:line="3000" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3000" pos:column="38">*</type:modifier></type> <name pos:line="3000" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3001" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3001" pos:column="24">TextSpan</name></type> <name pos:line="3001" pos:column="33">tsPrimary</name></decl></param>,
            <comment type="block" pos:line="3002" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3002" pos:column="25">__RPC__out</name> <name pos:line="3002" pos:column="36">TextSpan</name> <type:modifier pos:line="3002" pos:column="45">*</type:modifier></type><name pos:line="3002" pos:column="46">ptsSecondary</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3004" pos:column="9">HRESULT</name></type> ( <name pos:line="3004" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3004" pos:column="37">*</type:modifier><name pos:line="3004" pos:column="38">MapSecondaryToPrimarySpan</name> )<parameter_list pos:line="3004" pos:column="65">( 
            <param><decl><type><name pos:line="3005" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3005" pos:column="38">*</type:modifier></type> <name pos:line="3005" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3006" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3006" pos:column="24">TextSpan</name></type> <name pos:line="3006" pos:column="33">tsSecondary</name></decl></param>,
            <comment type="block" pos:line="3007" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3007" pos:column="25">__RPC__out</name> <name pos:line="3007" pos:column="36">TextSpan</name> <type:modifier pos:line="3007" pos:column="45">*</type:modifier></type><name pos:line="3007" pos:column="46">ptsPrimary</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3009" pos:column="9">HRESULT</name></type> ( <name pos:line="3009" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3009" pos:column="37">*</type:modifier><name pos:line="3009" pos:column="38">GetPrimaryBuffer</name> )<parameter_list pos:line="3009" pos:column="56">( 
            <param><decl><type><name pos:line="3010" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3010" pos:column="38">*</type:modifier></type> <name pos:line="3010" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3011" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3011" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3011" pos:column="46">IVsTextLines</name> <type:modifier pos:line="3011" pos:column="59">*</type:modifier><type:modifier pos:line="3011" pos:column="60">*</type:modifier></type><name pos:line="3011" pos:column="61">ppBuffer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3013" pos:column="9">HRESULT</name></type> ( <name pos:line="3013" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3013" pos:column="37">*</type:modifier><name pos:line="3013" pos:column="38">GetSecondaryBuffer</name> )<parameter_list pos:line="3013" pos:column="58">( 
            <param><decl><type><name pos:line="3014" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3014" pos:column="38">*</type:modifier></type> <name pos:line="3014" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3015" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3015" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3015" pos:column="46">IVsTextLines</name> <type:modifier pos:line="3015" pos:column="59">*</type:modifier><type:modifier pos:line="3015" pos:column="60">*</type:modifier></type><name pos:line="3015" pos:column="61">ppBuffer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3017" pos:column="9">HRESULT</name></type> ( <name pos:line="3017" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3017" pos:column="37">*</type:modifier><name pos:line="3017" pos:column="38">EnableReplication</name> )<parameter_list pos:line="3017" pos:column="57">( 
            <param><decl><type><name pos:line="3018" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3018" pos:column="38">*</type:modifier></type> <name pos:line="3018" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3019" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3019" pos:column="24">DWORD</name></type> <name pos:line="3019" pos:column="30">bcrd</name></decl></param>,
            <comment type="block" pos:line="3020" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3020" pos:column="24">BOOL</name></type> <name pos:line="3020" pos:column="29">fEnable</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3022" pos:column="9">HRESULT</name></type> ( <name pos:line="3022" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3022" pos:column="37">*</type:modifier><name pos:line="3022" pos:column="38">GetMappingOfPrimaryPosition</name> )<parameter_list pos:line="3022" pos:column="67">( 
            <param><decl><type><name pos:line="3023" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3023" pos:column="38">*</type:modifier></type> <name pos:line="3023" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3024" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3024" pos:column="24">long</name></type> <name pos:line="3024" pos:column="29">lPosition</name></decl></param>,
            <comment type="block" pos:line="3025" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3025" pos:column="25">__RPC__out</name> <name pos:line="3025" pos:column="36">TextSpan</name> <type:modifier pos:line="3025" pos:column="45">*</type:modifier></type><name pos:line="3025" pos:column="46">ptsPrimary</name></decl></param>,
            <comment type="block" pos:line="3026" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3026" pos:column="25">__RPC__out</name> <name pos:line="3026" pos:column="36">TextSpan</name> <type:modifier pos:line="3026" pos:column="45">*</type:modifier></type><name pos:line="3026" pos:column="46">ptsSecondary</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3028" pos:column="9">HRESULT</name></type> ( <name pos:line="3028" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3028" pos:column="37">*</type:modifier><name pos:line="3028" pos:column="38">SetBufferMappingModes</name> )<parameter_list pos:line="3028" pos:column="61">( 
            <param><decl><type><name pos:line="3029" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3029" pos:column="38">*</type:modifier></type> <name pos:line="3029" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3030" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3030" pos:column="24">DWORD</name></type> <name pos:line="3030" pos:column="30">bcmmPrimary</name></decl></param>,
            <comment type="block" pos:line="3031" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3031" pos:column="24">DWORD</name></type> <name pos:line="3031" pos:column="30">bcmmSecondary</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3033" pos:column="9">HRESULT</name></type> ( <name pos:line="3033" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3033" pos:column="37">*</type:modifier><name pos:line="3033" pos:column="38">EnumSpans</name> )<parameter_list pos:line="3033" pos:column="49">( 
            <param><decl><type><name pos:line="3034" pos:column="13">IVsTextBufferCoordinator</name> <type:modifier pos:line="3034" pos:column="38">*</type:modifier></type> <name pos:line="3034" pos:column="40">This</name></decl></param>,
            <param><decl><type><name pos:line="3035" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="3035" pos:column="33">IVsEnumBufferCoordinatorSpans</name> <type:modifier pos:line="3035" pos:column="63">*</type:modifier><type:modifier pos:line="3035" pos:column="64">*</type:modifier></type><name pos:line="3035" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3037" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3038" pos:column="7">IVsTextBufferCoordinatorVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3040" pos:column="5">interface</name></type> <name pos:line="3040" pos:column="15">IVsTextBufferCoordinator</name>
    <argument_list pos:line="3041" pos:column="5">{
        <argument><expr><name pos:line="3042" pos:column="9">CONST_VTBL</name> struct <name pos:line="3042" pos:column="27">IVsTextBufferCoordinatorVtbl</name> <op:operator pos:line="3042" pos:column="56">*</op:operator><name pos:line="3042" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3047" pos:column="1">#<cpp:directive pos:line="3047" pos:column="2">ifdef</cpp:directive> <name pos:line="3047" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3050" pos:column="1">#<cpp:directive pos:line="3050" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3050" pos:column="9">IVsTextBufferCoordinator_QueryInterface</name><parameter_list pos:line="3050" pos:column="48">(<param><type><name pos:line="3050" pos:column="49">This</name></type></param>,<param><type><name pos:line="3050" pos:column="54">riid</name></type></param>,<param><type><name pos:line="3050" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3051" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3053" pos:column="1">#<cpp:directive pos:line="3053" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3053" pos:column="9">IVsTextBufferCoordinator_AddRef</name><parameter_list pos:line="3053" pos:column="40">(<param><type><name pos:line="3053" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3054" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3056" pos:column="1">#<cpp:directive pos:line="3056" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3056" pos:column="9">IVsTextBufferCoordinator_Release</name><parameter_list pos:line="3056" pos:column="41">(<param><type><name pos:line="3056" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3057" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3060" pos:column="1">#<cpp:directive pos:line="3060" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3060" pos:column="9">IVsTextBufferCoordinator_SetBuffers</name><parameter_list pos:line="3060" pos:column="44">(<param><type><name pos:line="3060" pos:column="45">This</name></type></param>,<param><type><name pos:line="3060" pos:column="50">pPrimaryBuffer</name></type></param>,<param><type><name pos:line="3060" pos:column="65">pSecondaryBuffer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3061" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBuffers(This,pPrimaryBuffer,pSecondaryBuffer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3063" pos:column="1">#<cpp:directive pos:line="3063" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3063" pos:column="9">IVsTextBufferCoordinator_SetSpanMappings</name><parameter_list pos:line="3063" pos:column="49">(<param><type><name pos:line="3063" pos:column="50">This</name></type></param>,<param><type><name pos:line="3063" pos:column="55">cSpans</name></type></param>,<param><type><name pos:line="3063" pos:column="62">rgSpans</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3064" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSpanMappings(This,cSpans,rgSpans) )</cpp:value></cpp:define> 

<cpp:define pos:line="3066" pos:column="1">#<cpp:directive pos:line="3066" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3066" pos:column="9">IVsTextBufferCoordinator_MapPrimaryToSecondarySpan</name><parameter_list pos:line="3066" pos:column="59">(<param><type><name pos:line="3066" pos:column="60">This</name></type></param>,<param><type><name pos:line="3066" pos:column="65">tsPrimary</name></type></param>,<param><type><name pos:line="3066" pos:column="75">ptsSecondary</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3067" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapPrimaryToSecondarySpan(This,tsPrimary,ptsSecondary) )</cpp:value></cpp:define> 

<cpp:define pos:line="3069" pos:column="1">#<cpp:directive pos:line="3069" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3069" pos:column="9">IVsTextBufferCoordinator_MapSecondaryToPrimarySpan</name><parameter_list pos:line="3069" pos:column="59">(<param><type><name pos:line="3069" pos:column="60">This</name></type></param>,<param><type><name pos:line="3069" pos:column="65">tsSecondary</name></type></param>,<param><type><name pos:line="3069" pos:column="77">ptsPrimary</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3070" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapSecondaryToPrimarySpan(This,tsSecondary,ptsPrimary) )</cpp:value></cpp:define> 

<cpp:define pos:line="3072" pos:column="1">#<cpp:directive pos:line="3072" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3072" pos:column="9">IVsTextBufferCoordinator_GetPrimaryBuffer</name><parameter_list pos:line="3072" pos:column="50">(<param><type><name pos:line="3072" pos:column="51">This</name></type></param>,<param><type><name pos:line="3072" pos:column="56">ppBuffer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3073" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPrimaryBuffer(This,ppBuffer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3075" pos:column="1">#<cpp:directive pos:line="3075" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3075" pos:column="9">IVsTextBufferCoordinator_GetSecondaryBuffer</name><parameter_list pos:line="3075" pos:column="52">(<param><type><name pos:line="3075" pos:column="53">This</name></type></param>,<param><type><name pos:line="3075" pos:column="58">ppBuffer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3076" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSecondaryBuffer(This,ppBuffer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3078" pos:column="1">#<cpp:directive pos:line="3078" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3078" pos:column="9">IVsTextBufferCoordinator_EnableReplication</name><parameter_list pos:line="3078" pos:column="51">(<param><type><name pos:line="3078" pos:column="52">This</name></type></param>,<param><type><name pos:line="3078" pos:column="57">bcrd</name></type></param>,<param><type><name pos:line="3078" pos:column="62">fEnable</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3079" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnableReplication(This,bcrd,fEnable) )</cpp:value></cpp:define> 

<cpp:define pos:line="3081" pos:column="1">#<cpp:directive pos:line="3081" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3081" pos:column="9">IVsTextBufferCoordinator_GetMappingOfPrimaryPosition</name><parameter_list pos:line="3081" pos:column="61">(<param><type><name pos:line="3081" pos:column="62">This</name></type></param>,<param><type><name pos:line="3081" pos:column="67">lPosition</name></type></param>,<param><type><name pos:line="3081" pos:column="77">ptsPrimary</name></type></param>,<param><type><name pos:line="3081" pos:column="88">ptsSecondary</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3082" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMappingOfPrimaryPosition(This,lPosition,ptsPrimary,ptsSecondary) )</cpp:value></cpp:define> 

<cpp:define pos:line="3084" pos:column="1">#<cpp:directive pos:line="3084" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3084" pos:column="9">IVsTextBufferCoordinator_SetBufferMappingModes</name><parameter_list pos:line="3084" pos:column="55">(<param><type><name pos:line="3084" pos:column="56">This</name></type></param>,<param><type><name pos:line="3084" pos:column="61">bcmmPrimary</name></type></param>,<param><type><name pos:line="3084" pos:column="73">bcmmSecondary</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3085" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBufferMappingModes(This,bcmmPrimary,bcmmSecondary) )</cpp:value></cpp:define> 

<cpp:define pos:line="3087" pos:column="1">#<cpp:directive pos:line="3087" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3087" pos:column="9">IVsTextBufferCoordinator_EnumSpans</name><parameter_list pos:line="3087" pos:column="43">(<param><type><name pos:line="3087" pos:column="44">This</name></type></param>,<param><type><name pos:line="3087" pos:column="49">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3088" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumSpans(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3090" pos:column="1">#<cpp:directive pos:line="3090" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3090" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3093" pos:column="1">#<cpp:directive pos:line="3093" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3093" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3098" pos:column="1">#<cpp:directive pos:line="3098" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3098" pos:column="9">/* __IVsTextBufferCoordinator_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3101" pos:column="1">#<cpp:directive pos:line="3101" pos:column="2">ifndef</cpp:directive> <name pos:line="3101" pos:column="9">__IVsSetSpanMappingEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3102" pos:column="1">#<cpp:directive pos:line="3102" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3102" pos:column="9">__IVsSetSpanMappingEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3104" pos:column="1">/* interface IVsSetSpanMappingEvents */</comment>
<comment type="block" pos:line="3105" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="3108" pos:column="1">EXTERN_C</name> <specifier pos:line="3108" pos:column="10">const</specifier> <name pos:line="3108" pos:column="16">IID</name></type> <name pos:line="3108" pos:column="20">IID_IVsSetSpanMappingEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="3110" pos:column="1">#<cpp:directive pos:line="3110" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3110" pos:column="5">defined</name><argument_list pos:line="3110" pos:column="12">(<argument><expr><name pos:line="3110" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3110" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3110" pos:column="29">!</op:operator><call><name pos:line="3110" pos:column="30">defined</name><argument_list pos:line="3110" pos:column="37">(<argument><expr><name pos:line="3110" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3112" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3112" pos:column="19">(<argument pos:line="3112" pos:column="20">"98CEEDBD-07A4-4376-ADE8-5A46B7F5F384"</argument>)</argument_list></macro>
    <label><name pos:line="3113" pos:column="5">IVsSetSpanMappingEvents</name> :</label> <expr_stmt><expr pos:line="3113" pos:column="31">public <name pos:line="3113" pos:column="38">IUnknown</name>
    <block pos:line="3114" pos:column="5">{
    <expr pos:line="3115" pos:column="5">public<op:operator pos:line="3115" pos:column="11">:</op:operator>
        virtual <name pos:line="3116" pos:column="17">HRESULT</name> <name pos:line="3116" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3116" pos:column="43">OnBeginSetSpanMappings</name><argument_list pos:line="3116" pos:column="65">( 
            <comment type="block" pos:line="3117" pos:column="13">/* [in] */</comment> <argument pos:line="3117" pos:column="24">long cSpans</argument>,
            <comment type="block" pos:line="3118" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3118" pos:column="33">__RPC__in_ecount_full(cSpans) NewSpanMapping *rgSpans</argument>)</argument_list></macro> <op:operator pos:line="3118" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="3118" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="3120" pos:column="9">virtual <name pos:line="3120" pos:column="17">HRESULT</name> <name pos:line="3120" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3120" pos:column="43">OnEndSetSpanMappings</name><argument_list pos:line="3120" pos:column="63">( <argument><expr><name pos:line="3120" pos:column="65">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3120" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="3120" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="3122" pos:column="9">virtual <name pos:line="3122" pos:column="17">HRESULT</name> <name pos:line="3122" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3122" pos:column="43">OnMarkerInvalidated</name><argument_list pos:line="3122" pos:column="62">( 
            <comment type="block" pos:line="3123" pos:column="13">/* [in] */</comment> <argument pos:line="3123" pos:column="24">__RPC__in_opt IVsTextLines *pBuffer</argument>,
            <comment type="block" pos:line="3124" pos:column="13">/* [in] */</comment> <argument pos:line="3124" pos:column="24">__RPC__in_opt IVsTextMarker *pMarker</argument>)</argument_list></macro> <op:operator pos:line="3124" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="3124" pos:column="64">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3128" pos:column="1">#<cpp:directive pos:line="3128" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3128" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3130" pos:column="5">typedef <type><struct pos:line="3130" pos:column="13">struct <name pos:line="3130" pos:column="20">IVsSetSpanMappingEventsVtbl</name>
    <block pos:line="3131" pos:column="5">{<public type="default" pos:line="3131" pos:column="6">
        <function_decl><type><name pos:line="3132" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3134" pos:column="9">HRESULT</name></type> ( <name pos:line="3134" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3134" pos:column="37">*</type:modifier><name pos:line="3134" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3134" pos:column="54">( 
            <param><decl><type><name pos:line="3135" pos:column="13">IVsSetSpanMappingEvents</name> <type:modifier pos:line="3135" pos:column="37">*</type:modifier></type> <name pos:line="3135" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="3136" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3136" pos:column="24">__RPC__in</name> <name pos:line="3136" pos:column="34">REFIID</name></type> <name pos:line="3136" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3137" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3138" pos:column="13">__RPC__deref_out</name>  <name pos:line="3138" pos:column="31">void</name> <type:modifier pos:line="3138" pos:column="36">*</type:modifier><type:modifier pos:line="3138" pos:column="37">*</type:modifier></type><name pos:line="3138" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3140" pos:column="9">ULONG</name></type> ( <name pos:line="3140" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3140" pos:column="35">*</type:modifier><name pos:line="3140" pos:column="36">AddRef</name> )<parameter_list pos:line="3140" pos:column="44">( 
            <param><decl><type><name pos:line="3141" pos:column="13">IVsSetSpanMappingEvents</name> <type:modifier pos:line="3141" pos:column="37">*</type:modifier></type> <name pos:line="3141" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3143" pos:column="9">ULONG</name></type> ( <name pos:line="3143" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3143" pos:column="35">*</type:modifier><name pos:line="3143" pos:column="36">Release</name> )<parameter_list pos:line="3143" pos:column="45">( 
            <param><decl><type><name pos:line="3144" pos:column="13">IVsSetSpanMappingEvents</name> <type:modifier pos:line="3144" pos:column="37">*</type:modifier></type> <name pos:line="3144" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3146" pos:column="9">HRESULT</name> <argument_list pos:line="3146" pos:column="17">( <argument pos:line="3146" pos:column="19">STDMETHODCALLTYPE *OnBeginSetSpanMappings</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3146" pos:column="62">(</op:operator> 
            <name pos:line="3147" pos:column="13">IVsSetSpanMappingEvents</name> <op:operator pos:line="3147" pos:column="37">*</op:operator> <name pos:line="3147" pos:column="39">This</name><op:operator pos:line="3147" pos:column="43">,</op:operator>
            <comment type="block" pos:line="3148" pos:column="13">/* [in] */</comment> <name pos:line="3148" pos:column="24">long</name> <name pos:line="3148" pos:column="29">cSpans</name><op:operator pos:line="3148" pos:column="35">,</op:operator>
            <comment type="block" pos:line="3149" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3149" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3149" pos:column="54">(<argument pos:line="3149" pos:column="55">cSpans</argument>)</argument_list></macro> <name pos:line="3149" pos:column="63">NewSpanMapping</name> <op:operator pos:line="3149" pos:column="78">*</op:operator><name pos:line="3149" pos:column="79">rgSpans</name><op:operator pos:line="3149" pos:column="86">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3151" pos:column="9">HRESULT</name></type> ( <name pos:line="3151" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3151" pos:column="37">*</type:modifier><name pos:line="3151" pos:column="38">OnEndSetSpanMappings</name> )<parameter_list pos:line="3151" pos:column="60">( 
            <param><decl><type><name pos:line="3152" pos:column="13">IVsSetSpanMappingEvents</name> <type:modifier pos:line="3152" pos:column="37">*</type:modifier></type> <name pos:line="3152" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3154" pos:column="9">HRESULT</name></type> ( <name pos:line="3154" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3154" pos:column="37">*</type:modifier><name pos:line="3154" pos:column="38">OnMarkerInvalidated</name> )<parameter_list pos:line="3154" pos:column="59">( 
            <param><decl><type><name pos:line="3155" pos:column="13">IVsSetSpanMappingEvents</name> <type:modifier pos:line="3155" pos:column="37">*</type:modifier></type> <name pos:line="3155" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="3156" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3156" pos:column="24">__RPC__in_opt</name> <name pos:line="3156" pos:column="38">IVsTextLines</name> <type:modifier pos:line="3156" pos:column="51">*</type:modifier></type><name pos:line="3156" pos:column="52">pBuffer</name></decl></param>,
            <comment type="block" pos:line="3157" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3157" pos:column="24">__RPC__in_opt</name> <name pos:line="3157" pos:column="38">IVsTextMarker</name> <type:modifier pos:line="3157" pos:column="52">*</type:modifier></type><name pos:line="3157" pos:column="53">pMarker</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3159" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3160" pos:column="7">IVsSetSpanMappingEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3162" pos:column="5">interface</name></type> <name pos:line="3162" pos:column="15">IVsSetSpanMappingEvents</name>
    <argument_list pos:line="3163" pos:column="5">{
        <argument><expr><name pos:line="3164" pos:column="9">CONST_VTBL</name> struct <name pos:line="3164" pos:column="27">IVsSetSpanMappingEventsVtbl</name> <op:operator pos:line="3164" pos:column="55">*</op:operator><name pos:line="3164" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3169" pos:column="1">#<cpp:directive pos:line="3169" pos:column="2">ifdef</cpp:directive> <name pos:line="3169" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3172" pos:column="1">#<cpp:directive pos:line="3172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3172" pos:column="9">IVsSetSpanMappingEvents_QueryInterface</name><parameter_list pos:line="3172" pos:column="47">(<param><type><name pos:line="3172" pos:column="48">This</name></type></param>,<param><type><name pos:line="3172" pos:column="53">riid</name></type></param>,<param><type><name pos:line="3172" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3173" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3175" pos:column="1">#<cpp:directive pos:line="3175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3175" pos:column="9">IVsSetSpanMappingEvents_AddRef</name><parameter_list pos:line="3175" pos:column="39">(<param><type><name pos:line="3175" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3176" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3178" pos:column="1">#<cpp:directive pos:line="3178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3178" pos:column="9">IVsSetSpanMappingEvents_Release</name><parameter_list pos:line="3178" pos:column="40">(<param><type><name pos:line="3178" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3179" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3182" pos:column="1">#<cpp:directive pos:line="3182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3182" pos:column="9">IVsSetSpanMappingEvents_OnBeginSetSpanMappings</name><parameter_list pos:line="3182" pos:column="55">(<param><type><name pos:line="3182" pos:column="56">This</name></type></param>,<param><type><name pos:line="3182" pos:column="61">cSpans</name></type></param>,<param><type><name pos:line="3182" pos:column="68">rgSpans</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3183" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnBeginSetSpanMappings(This,cSpans,rgSpans) )</cpp:value></cpp:define> 

<cpp:define pos:line="3185" pos:column="1">#<cpp:directive pos:line="3185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3185" pos:column="9">IVsSetSpanMappingEvents_OnEndSetSpanMappings</name><parameter_list pos:line="3185" pos:column="53">(<param><type><name pos:line="3185" pos:column="54">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3186" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnEndSetSpanMappings(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3188" pos:column="1">#<cpp:directive pos:line="3188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3188" pos:column="9">IVsSetSpanMappingEvents_OnMarkerInvalidated</name><parameter_list pos:line="3188" pos:column="52">(<param><type><name pos:line="3188" pos:column="53">This</name></type></param>,<param><type><name pos:line="3188" pos:column="58">pBuffer</name></type></param>,<param><type><name pos:line="3188" pos:column="66">pMarker</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3189" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnMarkerInvalidated(This,pBuffer,pMarker) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3191" pos:column="1">#<cpp:directive pos:line="3191" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3191" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3194" pos:column="1">#<cpp:directive pos:line="3194" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3194" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3199" pos:column="1">#<cpp:directive pos:line="3199" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3199" pos:column="9">/* __IVsSetSpanMappingEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3202" pos:column="1">#<cpp:directive pos:line="3202" pos:column="2">ifndef</cpp:directive> <name pos:line="3202" pos:column="9">__IVsExternalCompletionSet_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3203" pos:column="1">#<cpp:directive pos:line="3203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3203" pos:column="9">__IVsExternalCompletionSet_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3205" pos:column="1">/* interface IVsExternalCompletionSet */</comment>
<comment type="block" pos:line="3206" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="3209" pos:column="1">EXTERN_C</name> <specifier pos:line="3209" pos:column="10">const</specifier> <name pos:line="3209" pos:column="16">IID</name></type> <name pos:line="3209" pos:column="20">IID_IVsExternalCompletionSet</name></decl>;</decl_stmt>

<cpp:if pos:line="3211" pos:column="1">#<cpp:directive pos:line="3211" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3211" pos:column="5">defined</name><argument_list pos:line="3211" pos:column="12">(<argument><expr><name pos:line="3211" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3211" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3211" pos:column="29">!</op:operator><call><name pos:line="3211" pos:column="30">defined</name><argument_list pos:line="3211" pos:column="37">(<argument><expr><name pos:line="3211" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3213" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3213" pos:column="19">(<argument pos:line="3213" pos:column="20">"373A9399-FDF5-4f64-8866-E14B7F2CFFF7"</argument>)</argument_list></macro>
    <label><name pos:line="3214" pos:column="5">IVsExternalCompletionSet</name> :</label> <expr_stmt><expr pos:line="3214" pos:column="32">public <name pos:line="3214" pos:column="39">IUnknown</name>
    <block pos:line="3215" pos:column="5">{
    <expr pos:line="3216" pos:column="5">public<op:operator pos:line="3216" pos:column="11">:</op:operator>
        virtual <name pos:line="3217" pos:column="17">HRESULT</name> <name pos:line="3217" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3217" pos:column="43">SetIntellisenseHost</name><argument_list pos:line="3217" pos:column="62">( 
            <comment type="block" pos:line="3218" pos:column="13">/* [in] */</comment> <argument pos:line="3218" pos:column="24">__RPC__in_opt IVsIntellisenseHost *pHost</argument>)</argument_list></macro> <op:operator pos:line="3218" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="3218" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="3220" pos:column="9">virtual <name pos:line="3220" pos:column="17">HRESULT</name> <name pos:line="3220" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3220" pos:column="43">UpdateCompSet</name><argument_list pos:line="3220" pos:column="56">( <argument><expr><name pos:line="3220" pos:column="58">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3220" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="3220" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3224" pos:column="1">#<cpp:directive pos:line="3224" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3224" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3226" pos:column="5">typedef <type><struct pos:line="3226" pos:column="13">struct <name pos:line="3226" pos:column="20">IVsExternalCompletionSetVtbl</name>
    <block pos:line="3227" pos:column="5">{<public type="default" pos:line="3227" pos:column="6">
        <function_decl><type><name pos:line="3228" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3230" pos:column="9">HRESULT</name></type> ( <name pos:line="3230" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3230" pos:column="37">*</type:modifier><name pos:line="3230" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3230" pos:column="54">( 
            <param><decl><type><name pos:line="3231" pos:column="13">IVsExternalCompletionSet</name> <type:modifier pos:line="3231" pos:column="38">*</type:modifier></type> <name pos:line="3231" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3232" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3232" pos:column="24">__RPC__in</name> <name pos:line="3232" pos:column="34">REFIID</name></type> <name pos:line="3232" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3233" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3234" pos:column="13">__RPC__deref_out</name>  <name pos:line="3234" pos:column="31">void</name> <type:modifier pos:line="3234" pos:column="36">*</type:modifier><type:modifier pos:line="3234" pos:column="37">*</type:modifier></type><name pos:line="3234" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3236" pos:column="9">ULONG</name></type> ( <name pos:line="3236" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3236" pos:column="35">*</type:modifier><name pos:line="3236" pos:column="36">AddRef</name> )<parameter_list pos:line="3236" pos:column="44">( 
            <param><decl><type><name pos:line="3237" pos:column="13">IVsExternalCompletionSet</name> <type:modifier pos:line="3237" pos:column="38">*</type:modifier></type> <name pos:line="3237" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3239" pos:column="9">ULONG</name></type> ( <name pos:line="3239" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3239" pos:column="35">*</type:modifier><name pos:line="3239" pos:column="36">Release</name> )<parameter_list pos:line="3239" pos:column="45">( 
            <param><decl><type><name pos:line="3240" pos:column="13">IVsExternalCompletionSet</name> <type:modifier pos:line="3240" pos:column="38">*</type:modifier></type> <name pos:line="3240" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3242" pos:column="9">HRESULT</name></type> ( <name pos:line="3242" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3242" pos:column="37">*</type:modifier><name pos:line="3242" pos:column="38">SetIntellisenseHost</name> )<parameter_list pos:line="3242" pos:column="59">( 
            <param><decl><type><name pos:line="3243" pos:column="13">IVsExternalCompletionSet</name> <type:modifier pos:line="3243" pos:column="38">*</type:modifier></type> <name pos:line="3243" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3244" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3244" pos:column="24">__RPC__in_opt</name> <name pos:line="3244" pos:column="38">IVsIntellisenseHost</name> <type:modifier pos:line="3244" pos:column="58">*</type:modifier></type><name pos:line="3244" pos:column="59">pHost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3246" pos:column="9">HRESULT</name></type> ( <name pos:line="3246" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3246" pos:column="37">*</type:modifier><name pos:line="3246" pos:column="38">UpdateCompSet</name> )<parameter_list pos:line="3246" pos:column="53">( 
            <param><decl><type><name pos:line="3247" pos:column="13">IVsExternalCompletionSet</name> <type:modifier pos:line="3247" pos:column="38">*</type:modifier></type> <name pos:line="3247" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3249" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3250" pos:column="7">IVsExternalCompletionSetVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3252" pos:column="5">interface</name></type> <name pos:line="3252" pos:column="15">IVsExternalCompletionSet</name>
    <argument_list pos:line="3253" pos:column="5">{
        <argument><expr><name pos:line="3254" pos:column="9">CONST_VTBL</name> struct <name pos:line="3254" pos:column="27">IVsExternalCompletionSetVtbl</name> <op:operator pos:line="3254" pos:column="56">*</op:operator><name pos:line="3254" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3259" pos:column="1">#<cpp:directive pos:line="3259" pos:column="2">ifdef</cpp:directive> <name pos:line="3259" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3262" pos:column="1">#<cpp:directive pos:line="3262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3262" pos:column="9">IVsExternalCompletionSet_QueryInterface</name><parameter_list pos:line="3262" pos:column="48">(<param><type><name pos:line="3262" pos:column="49">This</name></type></param>,<param><type><name pos:line="3262" pos:column="54">riid</name></type></param>,<param><type><name pos:line="3262" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3263" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3265" pos:column="1">#<cpp:directive pos:line="3265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3265" pos:column="9">IVsExternalCompletionSet_AddRef</name><parameter_list pos:line="3265" pos:column="40">(<param><type><name pos:line="3265" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3266" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3268" pos:column="1">#<cpp:directive pos:line="3268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3268" pos:column="9">IVsExternalCompletionSet_Release</name><parameter_list pos:line="3268" pos:column="41">(<param><type><name pos:line="3268" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3269" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3272" pos:column="1">#<cpp:directive pos:line="3272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3272" pos:column="9">IVsExternalCompletionSet_SetIntellisenseHost</name><parameter_list pos:line="3272" pos:column="53">(<param><type><name pos:line="3272" pos:column="54">This</name></type></param>,<param><type><name pos:line="3272" pos:column="59">pHost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3273" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetIntellisenseHost(This,pHost) )</cpp:value></cpp:define> 

<cpp:define pos:line="3275" pos:column="1">#<cpp:directive pos:line="3275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3275" pos:column="9">IVsExternalCompletionSet_UpdateCompSet</name><parameter_list pos:line="3275" pos:column="47">(<param><type><name pos:line="3275" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3276" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateCompSet(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3278" pos:column="1">#<cpp:directive pos:line="3278" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3278" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3281" pos:column="1">#<cpp:directive pos:line="3281" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3281" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3286" pos:column="1">#<cpp:directive pos:line="3286" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3286" pos:column="9">/* __IVsExternalCompletionSet_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3289" pos:column="1">#<cpp:directive pos:line="3289" pos:column="2">ifndef</cpp:directive> <name pos:line="3289" pos:column="9">__IVsExpansionIntellisenseHost_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3290" pos:column="1">#<cpp:directive pos:line="3290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3290" pos:column="9">__IVsExpansionIntellisenseHost_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3292" pos:column="1">/* interface IVsExpansionIntellisenseHost */</comment>
<comment type="block" pos:line="3293" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="3296" pos:column="1">EXTERN_C</name> <specifier pos:line="3296" pos:column="10">const</specifier> <name pos:line="3296" pos:column="16">IID</name></type> <name pos:line="3296" pos:column="20">IID_IVsExpansionIntellisenseHost</name></decl>;</decl_stmt>

<cpp:if pos:line="3298" pos:column="1">#<cpp:directive pos:line="3298" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3298" pos:column="5">defined</name><argument_list pos:line="3298" pos:column="12">(<argument><expr><name pos:line="3298" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3298" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3298" pos:column="29">!</op:operator><call><name pos:line="3298" pos:column="30">defined</name><argument_list pos:line="3298" pos:column="37">(<argument><expr><name pos:line="3298" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3300" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3300" pos:column="19">(<argument pos:line="3300" pos:column="20">"DEF59D57-46FE-4984-8CA4-5EFA3AC5D16E"</argument>)</argument_list></macro>
    <label><name pos:line="3301" pos:column="5">IVsExpansionIntellisenseHost</name> :</label> <expr_stmt><expr pos:line="3301" pos:column="36">public <name pos:line="3301" pos:column="43">IUnknown</name>
    <block pos:line="3302" pos:column="5">{
    <expr pos:line="3303" pos:column="5">public<op:operator pos:line="3303" pos:column="11">:</op:operator>
        virtual <name pos:line="3304" pos:column="17">HRESULT</name> <name pos:line="3304" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3304" pos:column="43">GetTextLen</name><argument_list pos:line="3304" pos:column="53">( 
            <comment type="block" pos:line="3305" pos:column="13">/* [out] */</comment> <argument pos:line="3305" pos:column="25">__RPC__out long *iLen</argument>)</argument_list></macro> <op:operator pos:line="3305" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3305" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="3307" pos:column="9">virtual <name pos:line="3307" pos:column="17">HRESULT</name> <name pos:line="3307" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3307" pos:column="43">GetText</name><argument_list pos:line="3307" pos:column="50">( 
            <comment type="block" pos:line="3308" pos:column="13">/* [out] */</comment> <argument pos:line="3308" pos:column="25">__RPC__deref_out_opt BSTR *bstrText</argument>)</argument_list></macro> <op:operator pos:line="3308" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="3308" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="3310" pos:column="9">virtual <name pos:line="3310" pos:column="17">HRESULT</name> <name pos:line="3310" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3310" pos:column="43">GetSelection</name><argument_list pos:line="3310" pos:column="55">( 
            <comment type="block" pos:line="3311" pos:column="13">/* [out] */</comment> <argument pos:line="3311" pos:column="25">__RPC__out long *iStart</argument>,
            <comment type="block" pos:line="3312" pos:column="13">/* [out] */</comment> <argument pos:line="3312" pos:column="25">__RPC__out long *iEnd</argument>)</argument_list></macro> <op:operator pos:line="3312" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3312" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="3314" pos:column="9">virtual <name pos:line="3314" pos:column="17">HRESULT</name> <name pos:line="3314" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3314" pos:column="43">SetSelection</name><argument_list pos:line="3314" pos:column="55">( 
            <comment type="block" pos:line="3315" pos:column="13">/* [in] */</comment> <argument pos:line="3315" pos:column="24">long iStart</argument>,
            <comment type="block" pos:line="3316" pos:column="13">/* [in] */</comment> <argument pos:line="3316" pos:column="24">long iEnd</argument>)</argument_list></macro> <op:operator pos:line="3316" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="3316" pos:column="37">0</lit:literal></expr>;
        
        <expr pos:line="3318" pos:column="9">virtual <name pos:line="3318" pos:column="17">HRESULT</name> <name pos:line="3318" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3318" pos:column="43">SetText</name><argument_list pos:line="3318" pos:column="50">( 
            <comment type="block" pos:line="3319" pos:column="13">/* [in] */</comment> <argument pos:line="3319" pos:column="24">__RPC__in BSTR bstrText</argument>,
            <comment type="block" pos:line="3320" pos:column="13">/* [in] */</comment> <argument pos:line="3320" pos:column="24">BOOL fReplaceAll</argument>)</argument_list></macro> <op:operator pos:line="3320" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="3320" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="3322" pos:column="9">virtual <name pos:line="3322" pos:column="17">HRESULT</name> <name pos:line="3322" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3322" pos:column="43">GetCurrentLevel</name><argument_list pos:line="3322" pos:column="58">( 
            <comment type="block" pos:line="3323" pos:column="13">/* [out] */</comment> <argument pos:line="3323" pos:column="25">__RPC__out long *pLevel</argument>)</argument_list></macro> <op:operator pos:line="3323" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="3323" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3327" pos:column="1">#<cpp:directive pos:line="3327" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3327" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3329" pos:column="5">typedef <type><struct pos:line="3329" pos:column="13">struct <name pos:line="3329" pos:column="20">IVsExpansionIntellisenseHostVtbl</name>
    <block pos:line="3330" pos:column="5">{<public type="default" pos:line="3330" pos:column="6">
        <function_decl><type><name pos:line="3331" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3333" pos:column="9">HRESULT</name></type> ( <name pos:line="3333" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3333" pos:column="37">*</type:modifier><name pos:line="3333" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3333" pos:column="54">( 
            <param><decl><type><name pos:line="3334" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3334" pos:column="42">*</type:modifier></type> <name pos:line="3334" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3335" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3335" pos:column="24">__RPC__in</name> <name pos:line="3335" pos:column="34">REFIID</name></type> <name pos:line="3335" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3336" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3337" pos:column="13">__RPC__deref_out</name>  <name pos:line="3337" pos:column="31">void</name> <type:modifier pos:line="3337" pos:column="36">*</type:modifier><type:modifier pos:line="3337" pos:column="37">*</type:modifier></type><name pos:line="3337" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3339" pos:column="9">ULONG</name></type> ( <name pos:line="3339" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3339" pos:column="35">*</type:modifier><name pos:line="3339" pos:column="36">AddRef</name> )<parameter_list pos:line="3339" pos:column="44">( 
            <param><decl><type><name pos:line="3340" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3340" pos:column="42">*</type:modifier></type> <name pos:line="3340" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3342" pos:column="9">ULONG</name></type> ( <name pos:line="3342" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3342" pos:column="35">*</type:modifier><name pos:line="3342" pos:column="36">Release</name> )<parameter_list pos:line="3342" pos:column="45">( 
            <param><decl><type><name pos:line="3343" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3343" pos:column="42">*</type:modifier></type> <name pos:line="3343" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3345" pos:column="9">HRESULT</name></type> ( <name pos:line="3345" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3345" pos:column="37">*</type:modifier><name pos:line="3345" pos:column="38">GetTextLen</name> )<parameter_list pos:line="3345" pos:column="50">( 
            <param><decl><type><name pos:line="3346" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3346" pos:column="42">*</type:modifier></type> <name pos:line="3346" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3347" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3347" pos:column="25">__RPC__out</name> <name pos:line="3347" pos:column="36">long</name> <type:modifier pos:line="3347" pos:column="41">*</type:modifier></type><name pos:line="3347" pos:column="42">iLen</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3349" pos:column="9">HRESULT</name></type> ( <name pos:line="3349" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3349" pos:column="37">*</type:modifier><name pos:line="3349" pos:column="38">GetText</name> )<parameter_list pos:line="3349" pos:column="47">( 
            <param><decl><type><name pos:line="3350" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3350" pos:column="42">*</type:modifier></type> <name pos:line="3350" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3351" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3351" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3351" pos:column="46">BSTR</name> <type:modifier pos:line="3351" pos:column="51">*</type:modifier></type><name pos:line="3351" pos:column="52">bstrText</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3353" pos:column="9">HRESULT</name></type> ( <name pos:line="3353" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3353" pos:column="37">*</type:modifier><name pos:line="3353" pos:column="38">GetSelection</name> )<parameter_list pos:line="3353" pos:column="52">( 
            <param><decl><type><name pos:line="3354" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3354" pos:column="42">*</type:modifier></type> <name pos:line="3354" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3355" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3355" pos:column="25">__RPC__out</name> <name pos:line="3355" pos:column="36">long</name> <type:modifier pos:line="3355" pos:column="41">*</type:modifier></type><name pos:line="3355" pos:column="42">iStart</name></decl></param>,
            <comment type="block" pos:line="3356" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3356" pos:column="25">__RPC__out</name> <name pos:line="3356" pos:column="36">long</name> <type:modifier pos:line="3356" pos:column="41">*</type:modifier></type><name pos:line="3356" pos:column="42">iEnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3358" pos:column="9">HRESULT</name></type> ( <name pos:line="3358" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3358" pos:column="37">*</type:modifier><name pos:line="3358" pos:column="38">SetSelection</name> )<parameter_list pos:line="3358" pos:column="52">( 
            <param><decl><type><name pos:line="3359" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3359" pos:column="42">*</type:modifier></type> <name pos:line="3359" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3360" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3360" pos:column="24">long</name></type> <name pos:line="3360" pos:column="29">iStart</name></decl></param>,
            <comment type="block" pos:line="3361" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3361" pos:column="24">long</name></type> <name pos:line="3361" pos:column="29">iEnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3363" pos:column="9">HRESULT</name></type> ( <name pos:line="3363" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3363" pos:column="37">*</type:modifier><name pos:line="3363" pos:column="38">SetText</name> )<parameter_list pos:line="3363" pos:column="47">( 
            <param><decl><type><name pos:line="3364" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3364" pos:column="42">*</type:modifier></type> <name pos:line="3364" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3365" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3365" pos:column="24">__RPC__in</name> <name pos:line="3365" pos:column="34">BSTR</name></type> <name pos:line="3365" pos:column="39">bstrText</name></decl></param>,
            <comment type="block" pos:line="3366" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3366" pos:column="24">BOOL</name></type> <name pos:line="3366" pos:column="29">fReplaceAll</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3368" pos:column="9">HRESULT</name></type> ( <name pos:line="3368" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3368" pos:column="37">*</type:modifier><name pos:line="3368" pos:column="38">GetCurrentLevel</name> )<parameter_list pos:line="3368" pos:column="55">( 
            <param><decl><type><name pos:line="3369" pos:column="13">IVsExpansionIntellisenseHost</name> <type:modifier pos:line="3369" pos:column="42">*</type:modifier></type> <name pos:line="3369" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3370" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3370" pos:column="25">__RPC__out</name> <name pos:line="3370" pos:column="36">long</name> <type:modifier pos:line="3370" pos:column="41">*</type:modifier></type><name pos:line="3370" pos:column="42">pLevel</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3372" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3373" pos:column="7">IVsExpansionIntellisenseHostVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3375" pos:column="5">interface</name></type> <name pos:line="3375" pos:column="15">IVsExpansionIntellisenseHost</name>
    <argument_list pos:line="3376" pos:column="5">{
        <argument><expr><name pos:line="3377" pos:column="9">CONST_VTBL</name> struct <name pos:line="3377" pos:column="27">IVsExpansionIntellisenseHostVtbl</name> <op:operator pos:line="3377" pos:column="60">*</op:operator><name pos:line="3377" pos:column="61">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3382" pos:column="1">#<cpp:directive pos:line="3382" pos:column="2">ifdef</cpp:directive> <name pos:line="3382" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3385" pos:column="1">#<cpp:directive pos:line="3385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3385" pos:column="9">IVsExpansionIntellisenseHost_QueryInterface</name><parameter_list pos:line="3385" pos:column="52">(<param><type><name pos:line="3385" pos:column="53">This</name></type></param>,<param><type><name pos:line="3385" pos:column="58">riid</name></type></param>,<param><type><name pos:line="3385" pos:column="63">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3386" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3388" pos:column="1">#<cpp:directive pos:line="3388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3388" pos:column="9">IVsExpansionIntellisenseHost_AddRef</name><parameter_list pos:line="3388" pos:column="44">(<param><type><name pos:line="3388" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3389" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3391" pos:column="1">#<cpp:directive pos:line="3391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3391" pos:column="9">IVsExpansionIntellisenseHost_Release</name><parameter_list pos:line="3391" pos:column="45">(<param><type><name pos:line="3391" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3392" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3395" pos:column="1">#<cpp:directive pos:line="3395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3395" pos:column="9">IVsExpansionIntellisenseHost_GetTextLen</name><parameter_list pos:line="3395" pos:column="48">(<param><type><name pos:line="3395" pos:column="49">This</name></type></param>,<param><type><name pos:line="3395" pos:column="54">iLen</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3396" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTextLen(This,iLen) )</cpp:value></cpp:define> 

<cpp:define pos:line="3398" pos:column="1">#<cpp:directive pos:line="3398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3398" pos:column="9">IVsExpansionIntellisenseHost_GetText</name><parameter_list pos:line="3398" pos:column="45">(<param><type><name pos:line="3398" pos:column="46">This</name></type></param>,<param><type><name pos:line="3398" pos:column="51">bstrText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3399" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,bstrText) )</cpp:value></cpp:define> 

<cpp:define pos:line="3401" pos:column="1">#<cpp:directive pos:line="3401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3401" pos:column="9">IVsExpansionIntellisenseHost_GetSelection</name><parameter_list pos:line="3401" pos:column="50">(<param><type><name pos:line="3401" pos:column="51">This</name></type></param>,<param><type><name pos:line="3401" pos:column="56">iStart</name></type></param>,<param><type><name pos:line="3401" pos:column="63">iEnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3402" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSelection(This,iStart,iEnd) )</cpp:value></cpp:define> 

<cpp:define pos:line="3404" pos:column="1">#<cpp:directive pos:line="3404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3404" pos:column="9">IVsExpansionIntellisenseHost_SetSelection</name><parameter_list pos:line="3404" pos:column="50">(<param><type><name pos:line="3404" pos:column="51">This</name></type></param>,<param><type><name pos:line="3404" pos:column="56">iStart</name></type></param>,<param><type><name pos:line="3404" pos:column="63">iEnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3405" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSelection(This,iStart,iEnd) )</cpp:value></cpp:define> 

<cpp:define pos:line="3407" pos:column="1">#<cpp:directive pos:line="3407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3407" pos:column="9">IVsExpansionIntellisenseHost_SetText</name><parameter_list pos:line="3407" pos:column="45">(<param><type><name pos:line="3407" pos:column="46">This</name></type></param>,<param><type><name pos:line="3407" pos:column="51">bstrText</name></type></param>,<param><type><name pos:line="3407" pos:column="60">fReplaceAll</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3408" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetText(This,bstrText,fReplaceAll) )</cpp:value></cpp:define> 

<cpp:define pos:line="3410" pos:column="1">#<cpp:directive pos:line="3410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3410" pos:column="9">IVsExpansionIntellisenseHost_GetCurrentLevel</name><parameter_list pos:line="3410" pos:column="53">(<param><type><name pos:line="3410" pos:column="54">This</name></type></param>,<param><type><name pos:line="3410" pos:column="59">pLevel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3411" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentLevel(This,pLevel) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3413" pos:column="1">#<cpp:directive pos:line="3413" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3413" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3416" pos:column="1">#<cpp:directive pos:line="3416" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3416" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3421" pos:column="1">#<cpp:directive pos:line="3421" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3421" pos:column="9">/* __IVsExpansionIntellisenseHost_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3424" pos:column="1">#<cpp:directive pos:line="3424" pos:column="2">ifndef</cpp:directive> <name pos:line="3424" pos:column="9">__IVsReportExternalErrors_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3425" pos:column="1">#<cpp:directive pos:line="3425" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3425" pos:column="9">__IVsReportExternalErrors_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3427" pos:column="1">/* interface IVsReportExternalErrors */</comment>
<comment type="block" pos:line="3428" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="3431" pos:column="1">EXTERN_C</name> <specifier pos:line="3431" pos:column="10">const</specifier> <name pos:line="3431" pos:column="16">IID</name></type> <name pos:line="3431" pos:column="20">IID_IVsReportExternalErrors</name></decl>;</decl_stmt>

<cpp:if pos:line="3433" pos:column="1">#<cpp:directive pos:line="3433" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3433" pos:column="5">defined</name><argument_list pos:line="3433" pos:column="12">(<argument><expr><name pos:line="3433" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3433" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3433" pos:column="29">!</op:operator><call><name pos:line="3433" pos:column="30">defined</name><argument_list pos:line="3433" pos:column="37">(<argument><expr><name pos:line="3433" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3435" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3435" pos:column="19">(<argument pos:line="3435" pos:column="20">"96F0CABD-DB51-428f-A42D-C756057D35C2"</argument>)</argument_list></macro>
    <label><name pos:line="3436" pos:column="5">IVsReportExternalErrors</name> :</label> <expr_stmt><expr pos:line="3436" pos:column="31">public <name pos:line="3436" pos:column="38">IUnknown</name>
    <block pos:line="3437" pos:column="5">{
    <expr pos:line="3438" pos:column="5">public<op:operator pos:line="3438" pos:column="11">:</op:operator>
        virtual <name pos:line="3439" pos:column="17">HRESULT</name> <name pos:line="3439" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3439" pos:column="43">ClearAllErrors</name><argument_list pos:line="3439" pos:column="57">( <argument><expr><name pos:line="3439" pos:column="59">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3439" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="3439" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="3441" pos:column="9">virtual <name pos:line="3441" pos:column="17">HRESULT</name> <name pos:line="3441" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3441" pos:column="43">AddNewErrors</name><argument_list pos:line="3441" pos:column="55">( 
            <comment type="block" pos:line="3442" pos:column="13">/* [in] */</comment> <argument pos:line="3442" pos:column="24">__RPC__in_opt IVsEnumExternalErrors *pErrors</argument>)</argument_list></macro> <op:operator pos:line="3442" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="3442" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="3444" pos:column="9">virtual <name pos:line="3444" pos:column="17">HRESULT</name> <name pos:line="3444" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3444" pos:column="43">GetErrors</name><argument_list pos:line="3444" pos:column="52">( 
            <comment type="block" pos:line="3445" pos:column="13">/* [out] */</comment> <argument pos:line="3445" pos:column="25">__RPC__deref_out_opt IVsEnumExternalErrors **pErrors</argument>)</argument_list></macro> <op:operator pos:line="3445" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="3445" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3449" pos:column="1">#<cpp:directive pos:line="3449" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3449" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3451" pos:column="5">typedef <type><struct pos:line="3451" pos:column="13">struct <name pos:line="3451" pos:column="20">IVsReportExternalErrorsVtbl</name>
    <block pos:line="3452" pos:column="5">{<public type="default" pos:line="3452" pos:column="6">
        <function_decl><type><name pos:line="3453" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3455" pos:column="9">HRESULT</name></type> ( <name pos:line="3455" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3455" pos:column="37">*</type:modifier><name pos:line="3455" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3455" pos:column="54">( 
            <param><decl><type><name pos:line="3456" pos:column="13">IVsReportExternalErrors</name> <type:modifier pos:line="3456" pos:column="37">*</type:modifier></type> <name pos:line="3456" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="3457" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3457" pos:column="24">__RPC__in</name> <name pos:line="3457" pos:column="34">REFIID</name></type> <name pos:line="3457" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3458" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3459" pos:column="13">__RPC__deref_out</name>  <name pos:line="3459" pos:column="31">void</name> <type:modifier pos:line="3459" pos:column="36">*</type:modifier><type:modifier pos:line="3459" pos:column="37">*</type:modifier></type><name pos:line="3459" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3461" pos:column="9">ULONG</name></type> ( <name pos:line="3461" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3461" pos:column="35">*</type:modifier><name pos:line="3461" pos:column="36">AddRef</name> )<parameter_list pos:line="3461" pos:column="44">( 
            <param><decl><type><name pos:line="3462" pos:column="13">IVsReportExternalErrors</name> <type:modifier pos:line="3462" pos:column="37">*</type:modifier></type> <name pos:line="3462" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3464" pos:column="9">ULONG</name></type> ( <name pos:line="3464" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3464" pos:column="35">*</type:modifier><name pos:line="3464" pos:column="36">Release</name> )<parameter_list pos:line="3464" pos:column="45">( 
            <param><decl><type><name pos:line="3465" pos:column="13">IVsReportExternalErrors</name> <type:modifier pos:line="3465" pos:column="37">*</type:modifier></type> <name pos:line="3465" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3467" pos:column="9">HRESULT</name></type> ( <name pos:line="3467" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3467" pos:column="37">*</type:modifier><name pos:line="3467" pos:column="38">ClearAllErrors</name> )<parameter_list pos:line="3467" pos:column="54">( 
            <param><decl><type><name pos:line="3468" pos:column="13">IVsReportExternalErrors</name> <type:modifier pos:line="3468" pos:column="37">*</type:modifier></type> <name pos:line="3468" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3470" pos:column="9">HRESULT</name></type> ( <name pos:line="3470" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3470" pos:column="37">*</type:modifier><name pos:line="3470" pos:column="38">AddNewErrors</name> )<parameter_list pos:line="3470" pos:column="52">( 
            <param><decl><type><name pos:line="3471" pos:column="13">IVsReportExternalErrors</name> <type:modifier pos:line="3471" pos:column="37">*</type:modifier></type> <name pos:line="3471" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="3472" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3472" pos:column="24">__RPC__in_opt</name> <name pos:line="3472" pos:column="38">IVsEnumExternalErrors</name> <type:modifier pos:line="3472" pos:column="60">*</type:modifier></type><name pos:line="3472" pos:column="61">pErrors</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3474" pos:column="9">HRESULT</name></type> ( <name pos:line="3474" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3474" pos:column="37">*</type:modifier><name pos:line="3474" pos:column="38">GetErrors</name> )<parameter_list pos:line="3474" pos:column="49">( 
            <param><decl><type><name pos:line="3475" pos:column="13">IVsReportExternalErrors</name> <type:modifier pos:line="3475" pos:column="37">*</type:modifier></type> <name pos:line="3475" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="3476" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3476" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3476" pos:column="46">IVsEnumExternalErrors</name> <type:modifier pos:line="3476" pos:column="68">*</type:modifier><type:modifier pos:line="3476" pos:column="69">*</type:modifier></type><name pos:line="3476" pos:column="70">pErrors</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3478" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3479" pos:column="7">IVsReportExternalErrorsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3481" pos:column="5">interface</name></type> <name pos:line="3481" pos:column="15">IVsReportExternalErrors</name>
    <argument_list pos:line="3482" pos:column="5">{
        <argument><expr><name pos:line="3483" pos:column="9">CONST_VTBL</name> struct <name pos:line="3483" pos:column="27">IVsReportExternalErrorsVtbl</name> <op:operator pos:line="3483" pos:column="55">*</op:operator><name pos:line="3483" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3488" pos:column="1">#<cpp:directive pos:line="3488" pos:column="2">ifdef</cpp:directive> <name pos:line="3488" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3491" pos:column="1">#<cpp:directive pos:line="3491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3491" pos:column="9">IVsReportExternalErrors_QueryInterface</name><parameter_list pos:line="3491" pos:column="47">(<param><type><name pos:line="3491" pos:column="48">This</name></type></param>,<param><type><name pos:line="3491" pos:column="53">riid</name></type></param>,<param><type><name pos:line="3491" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3492" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3494" pos:column="1">#<cpp:directive pos:line="3494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3494" pos:column="9">IVsReportExternalErrors_AddRef</name><parameter_list pos:line="3494" pos:column="39">(<param><type><name pos:line="3494" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3495" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3497" pos:column="1">#<cpp:directive pos:line="3497" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3497" pos:column="9">IVsReportExternalErrors_Release</name><parameter_list pos:line="3497" pos:column="40">(<param><type><name pos:line="3497" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3498" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3501" pos:column="1">#<cpp:directive pos:line="3501" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3501" pos:column="9">IVsReportExternalErrors_ClearAllErrors</name><parameter_list pos:line="3501" pos:column="47">(<param><type><name pos:line="3501" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3502" pos:column="5">( (This)-&gt;lpVtbl -&gt; ClearAllErrors(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3504" pos:column="1">#<cpp:directive pos:line="3504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3504" pos:column="9">IVsReportExternalErrors_AddNewErrors</name><parameter_list pos:line="3504" pos:column="45">(<param><type><name pos:line="3504" pos:column="46">This</name></type></param>,<param><type><name pos:line="3504" pos:column="51">pErrors</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3505" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNewErrors(This,pErrors) )</cpp:value></cpp:define> 

<cpp:define pos:line="3507" pos:column="1">#<cpp:directive pos:line="3507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3507" pos:column="9">IVsReportExternalErrors_GetErrors</name><parameter_list pos:line="3507" pos:column="42">(<param><type><name pos:line="3507" pos:column="43">This</name></type></param>,<param><type><name pos:line="3507" pos:column="48">pErrors</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3508" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetErrors(This,pErrors) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3510" pos:column="1">#<cpp:directive pos:line="3510" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3510" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3513" pos:column="1">#<cpp:directive pos:line="3513" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3513" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3518" pos:column="1">#<cpp:directive pos:line="3518" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3518" pos:column="9">/* __IVsReportExternalErrors_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3521" pos:column="1">#<cpp:directive pos:line="3521" pos:column="2">ifndef</cpp:directive> <name pos:line="3521" pos:column="9">__IVsEnumExternalErrors_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3522" pos:column="1">#<cpp:directive pos:line="3522" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3522" pos:column="9">__IVsEnumExternalErrors_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3524" pos:column="1">/* interface IVsEnumExternalErrors */</comment>
<comment type="block" pos:line="3525" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="3528" pos:column="1">EXTERN_C</name> <specifier pos:line="3528" pos:column="10">const</specifier> <name pos:line="3528" pos:column="16">IID</name></type> <name pos:line="3528" pos:column="20">IID_IVsEnumExternalErrors</name></decl>;</decl_stmt>

<cpp:if pos:line="3530" pos:column="1">#<cpp:directive pos:line="3530" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3530" pos:column="5">defined</name><argument_list pos:line="3530" pos:column="12">(<argument><expr><name pos:line="3530" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3530" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3530" pos:column="29">!</op:operator><call><name pos:line="3530" pos:column="30">defined</name><argument_list pos:line="3530" pos:column="37">(<argument><expr><name pos:line="3530" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3532" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3532" pos:column="19">(<argument pos:line="3532" pos:column="20">"20890A77-47C8-44dd-ABC7-3F0920C1B79A"</argument>)</argument_list></macro>
    <label><name pos:line="3533" pos:column="5">IVsEnumExternalErrors</name> :</label> <expr_stmt><expr pos:line="3533" pos:column="29">public <name pos:line="3533" pos:column="36">IUnknown</name>
    <block pos:line="3534" pos:column="5">{
    <expr pos:line="3535" pos:column="5">public<op:operator pos:line="3535" pos:column="11">:</op:operator>
        virtual <name pos:line="3536" pos:column="17">HRESULT</name> <name pos:line="3536" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3536" pos:column="43">Next</name><argument_list pos:line="3536" pos:column="47">( 
            <comment type="block" pos:line="3537" pos:column="13">/* [in] */</comment> <argument pos:line="3537" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="3538" pos:column="13">/* [out][in] */</comment> <argument pos:line="3538" pos:column="29">__RPC__inout ExternalError *rgelt</argument>,
            <comment type="block" pos:line="3539" pos:column="13">/* [out] */</comment> <argument pos:line="3539" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="3539" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="3539" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="3541" pos:column="9">virtual <name pos:line="3541" pos:column="17">HRESULT</name> <name pos:line="3541" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3541" pos:column="43">Skip</name><argument_list pos:line="3541" pos:column="47">( 
            <comment type="block" pos:line="3542" pos:column="13">/* [in] */</comment> <argument pos:line="3542" pos:column="24">ULONG celts</argument>)</argument_list></macro> <op:operator pos:line="3542" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3542" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="3544" pos:column="9">virtual <name pos:line="3544" pos:column="17">HRESULT</name> <name pos:line="3544" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3544" pos:column="43">Reset</name><argument_list pos:line="3544" pos:column="48">( <argument><expr><name pos:line="3544" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3544" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3544" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="3546" pos:column="9">virtual <name pos:line="3546" pos:column="17">HRESULT</name> <name pos:line="3546" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3546" pos:column="43">Clone</name><argument_list pos:line="3546" pos:column="48">( 
            <comment type="block" pos:line="3547" pos:column="13">/* [out] */</comment> <argument pos:line="3547" pos:column="25">__RPC__deref_out_opt IVsEnumExternalErrors **ppErrors</argument>)</argument_list></macro> <op:operator pos:line="3547" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="3547" pos:column="82">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3551" pos:column="1">#<cpp:directive pos:line="3551" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3551" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3553" pos:column="5">typedef <type><struct pos:line="3553" pos:column="13">struct <name pos:line="3553" pos:column="20">IVsEnumExternalErrorsVtbl</name>
    <block pos:line="3554" pos:column="5">{<public type="default" pos:line="3554" pos:column="6">
        <function_decl><type><name pos:line="3555" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3557" pos:column="9">HRESULT</name></type> ( <name pos:line="3557" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3557" pos:column="37">*</type:modifier><name pos:line="3557" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3557" pos:column="54">( 
            <param><decl><type><name pos:line="3558" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3558" pos:column="35">*</type:modifier></type> <name pos:line="3558" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3559" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3559" pos:column="24">__RPC__in</name> <name pos:line="3559" pos:column="34">REFIID</name></type> <name pos:line="3559" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3560" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3561" pos:column="13">__RPC__deref_out</name>  <name pos:line="3561" pos:column="31">void</name> <type:modifier pos:line="3561" pos:column="36">*</type:modifier><type:modifier pos:line="3561" pos:column="37">*</type:modifier></type><name pos:line="3561" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3563" pos:column="9">ULONG</name></type> ( <name pos:line="3563" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3563" pos:column="35">*</type:modifier><name pos:line="3563" pos:column="36">AddRef</name> )<parameter_list pos:line="3563" pos:column="44">( 
            <param><decl><type><name pos:line="3564" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3564" pos:column="35">*</type:modifier></type> <name pos:line="3564" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3566" pos:column="9">ULONG</name></type> ( <name pos:line="3566" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3566" pos:column="35">*</type:modifier><name pos:line="3566" pos:column="36">Release</name> )<parameter_list pos:line="3566" pos:column="45">( 
            <param><decl><type><name pos:line="3567" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3567" pos:column="35">*</type:modifier></type> <name pos:line="3567" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3569" pos:column="9">HRESULT</name></type> ( <name pos:line="3569" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3569" pos:column="37">*</type:modifier><name pos:line="3569" pos:column="38">Next</name> )<parameter_list pos:line="3569" pos:column="44">( 
            <param><decl><type><name pos:line="3570" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3570" pos:column="35">*</type:modifier></type> <name pos:line="3570" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3571" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3571" pos:column="24">ULONG</name></type> <name pos:line="3571" pos:column="30">celt</name></decl></param>,
            <comment type="block" pos:line="3572" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="3572" pos:column="29">__RPC__inout</name> <name pos:line="3572" pos:column="42">ExternalError</name> <type:modifier pos:line="3572" pos:column="56">*</type:modifier></type><name pos:line="3572" pos:column="57">rgelt</name></decl></param>,
            <comment type="block" pos:line="3573" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3573" pos:column="25">__RPC__out</name> <name pos:line="3573" pos:column="36">ULONG</name> <type:modifier pos:line="3573" pos:column="42">*</type:modifier></type><name pos:line="3573" pos:column="43">pceltFetched</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3575" pos:column="9">HRESULT</name></type> ( <name pos:line="3575" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3575" pos:column="37">*</type:modifier><name pos:line="3575" pos:column="38">Skip</name> )<parameter_list pos:line="3575" pos:column="44">( 
            <param><decl><type><name pos:line="3576" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3576" pos:column="35">*</type:modifier></type> <name pos:line="3576" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3577" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3577" pos:column="24">ULONG</name></type> <name pos:line="3577" pos:column="30">celts</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3579" pos:column="9">HRESULT</name></type> ( <name pos:line="3579" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3579" pos:column="37">*</type:modifier><name pos:line="3579" pos:column="38">Reset</name> )<parameter_list pos:line="3579" pos:column="45">( 
            <param><decl><type><name pos:line="3580" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3580" pos:column="35">*</type:modifier></type> <name pos:line="3580" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3582" pos:column="9">HRESULT</name></type> ( <name pos:line="3582" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3582" pos:column="37">*</type:modifier><name pos:line="3582" pos:column="38">Clone</name> )<parameter_list pos:line="3582" pos:column="45">( 
            <param><decl><type><name pos:line="3583" pos:column="13">IVsEnumExternalErrors</name> <type:modifier pos:line="3583" pos:column="35">*</type:modifier></type> <name pos:line="3583" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3584" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3584" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3584" pos:column="46">IVsEnumExternalErrors</name> <type:modifier pos:line="3584" pos:column="68">*</type:modifier><type:modifier pos:line="3584" pos:column="69">*</type:modifier></type><name pos:line="3584" pos:column="70">ppErrors</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3586" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3587" pos:column="7">IVsEnumExternalErrorsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3589" pos:column="5">interface</name></type> <name pos:line="3589" pos:column="15">IVsEnumExternalErrors</name>
    <argument_list pos:line="3590" pos:column="5">{
        <argument><expr><name pos:line="3591" pos:column="9">CONST_VTBL</name> struct <name pos:line="3591" pos:column="27">IVsEnumExternalErrorsVtbl</name> <op:operator pos:line="3591" pos:column="53">*</op:operator><name pos:line="3591" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3596" pos:column="1">#<cpp:directive pos:line="3596" pos:column="2">ifdef</cpp:directive> <name pos:line="3596" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3599" pos:column="1">#<cpp:directive pos:line="3599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3599" pos:column="9">IVsEnumExternalErrors_QueryInterface</name><parameter_list pos:line="3599" pos:column="45">(<param><type><name pos:line="3599" pos:column="46">This</name></type></param>,<param><type><name pos:line="3599" pos:column="51">riid</name></type></param>,<param><type><name pos:line="3599" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3600" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3602" pos:column="1">#<cpp:directive pos:line="3602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3602" pos:column="9">IVsEnumExternalErrors_AddRef</name><parameter_list pos:line="3602" pos:column="37">(<param><type><name pos:line="3602" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3603" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3605" pos:column="1">#<cpp:directive pos:line="3605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3605" pos:column="9">IVsEnumExternalErrors_Release</name><parameter_list pos:line="3605" pos:column="38">(<param><type><name pos:line="3605" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3606" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3609" pos:column="1">#<cpp:directive pos:line="3609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3609" pos:column="9">IVsEnumExternalErrors_Next</name><parameter_list pos:line="3609" pos:column="35">(<param><type><name pos:line="3609" pos:column="36">This</name></type></param>,<param><type><name pos:line="3609" pos:column="41">celt</name></type></param>,<param><type><name pos:line="3609" pos:column="46">rgelt</name></type></param>,<param><type><name pos:line="3609" pos:column="52">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3610" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="3612" pos:column="1">#<cpp:directive pos:line="3612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3612" pos:column="9">IVsEnumExternalErrors_Skip</name><parameter_list pos:line="3612" pos:column="35">(<param><type><name pos:line="3612" pos:column="36">This</name></type></param>,<param><type><name pos:line="3612" pos:column="41">celts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3613" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celts) )</cpp:value></cpp:define> 

<cpp:define pos:line="3615" pos:column="1">#<cpp:directive pos:line="3615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3615" pos:column="9">IVsEnumExternalErrors_Reset</name><parameter_list pos:line="3615" pos:column="36">(<param><type><name pos:line="3615" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3616" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3618" pos:column="1">#<cpp:directive pos:line="3618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3618" pos:column="9">IVsEnumExternalErrors_Clone</name><parameter_list pos:line="3618" pos:column="36">(<param><type><name pos:line="3618" pos:column="37">This</name></type></param>,<param><type><name pos:line="3618" pos:column="42">ppErrors</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3619" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppErrors) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3621" pos:column="1">#<cpp:directive pos:line="3621" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3621" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3624" pos:column="1">#<cpp:directive pos:line="3624" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3624" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3629" pos:column="1">#<cpp:directive pos:line="3629" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3629" pos:column="9">/* __IVsEnumExternalErrors_INTERFACE_DEFINED__ */</comment>

<cpp:endif pos:line="3631" pos:column="1">#<cpp:directive pos:line="3631" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3631" pos:column="8">/* __SingleFileEditor_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="3633" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="3635" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="3637" pos:column="1">#<cpp:directive pos:line="3637" pos:column="2">ifdef</cpp:directive> <name pos:line="3637" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="3639" pos:column="1">#<cpp:directive pos:line="3639" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="3641" pos:column="1">#<cpp:directive pos:line="3641" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
