<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\IntegrationTests\Search\RetrievalMetricsTest.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Lucene</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Net</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">Analysis</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">NUnit</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">Framework</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Sando</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Sando</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">Indexer</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Indexer</name><op:operator pos:line="5" pos:column="20">.</op:operator><name pos:line="5" pos:column="21">Searching</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Indexer</name><op:operator pos:line="6" pos:column="20">.</op:operator><name pos:line="6" pos:column="21">Searching</name><op:operator pos:line="6" pos:column="30">.</op:operator><name pos:line="6" pos:column="31">Metrics</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">SearchEngine</name></name>;</using>
<using pos:line="8" pos:column="1">using <name pos:line="8" pos:column="7">System</name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Collections</name><op:operator pos:line="9" pos:column="25">.</op:operator><name pos:line="9" pos:column="26">Generic</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Linq</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">System</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">Text</name></name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name><name pos:line="13" pos:column="11">Sando</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">IntegrationTests</name><op:operator pos:line="13" pos:column="33">.</op:operator><name pos:line="13" pos:column="34">Search</name></name>
<block pos:line="14" pos:column="1">{
    <class><attribute pos:line="15" pos:column="5">[<expr><name pos:line="15" pos:column="6">TestFixture</name></expr>]</attribute>
    <specifier pos:line="16" pos:column="5">public</specifier> class <name pos:line="16" pos:column="18">RetrievalMetricsTest</name> <super pos:line="16" pos:column="39">: <name pos:line="16" pos:column="41">AutomaticallyIndexingTestClass</name></super>
    <block pos:line="17" pos:column="5">{
        <function><type><attribute pos:line="18" pos:column="9">[<expr><name pos:line="18" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">void</name></type> <name pos:line="19" pos:column="21">TestStemmingForMetricsCalculation</name><parameter_list pos:line="19" pos:column="54">()</parameter_list>
        <block pos:line="20" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">var</name></type> <name pos:line="21" pos:column="17">documentIndexer</name> <init pos:line="21" pos:column="33">= <expr><call><name><name pos:line="21" pos:column="35">ServiceLocator</name><op:operator pos:line="21" pos:column="49">.</op:operator><name><name pos:line="21" pos:column="50">Resolve</name><argument_list pos:line="21" pos:column="57">&lt;<argument><name pos:line="21" pos:column="58">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="21" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">analyzer</name> <init pos:line="22" pos:column="26">= <expr><call><name><name pos:line="22" pos:column="28">ServiceLocator</name><op:operator pos:line="22" pos:column="42">.</op:operator><name><name pos:line="22" pos:column="43">Resolve</name><argument_list pos:line="22" pos:column="50">&lt;<argument><name pos:line="22" pos:column="51">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="22" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="24" pos:column="13">PreRetrievalMetrics</name></type> <name pos:line="24" pos:column="33">preMetrics</name> <init pos:line="24" pos:column="44">= <expr><op:operator pos:line="24" pos:column="46">new</op:operator> <call><name pos:line="24" pos:column="50">PreRetrievalMetrics</name><argument_list pos:line="24" pos:column="69">(<argument><expr><name><name pos:line="24" pos:column="70">documentIndexer</name><op:operator pos:line="24" pos:column="85">.</op:operator><name pos:line="24" pos:column="86">Reader</name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="94">analyzer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Assert</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">AreEqual</name></name><argument_list pos:line="25" pos:column="28">(<argument><expr><call><name><name pos:line="25" pos:column="29">preMetrics</name><op:operator pos:line="25" pos:column="39">.</op:operator><name pos:line="25" pos:column="40">StemText</name></name><argument_list pos:line="25" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="49">"searching"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="25" pos:column="63">"search"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">Assert</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">AreEqual</name></name><argument_list pos:line="26" pos:column="28">(<argument><expr><call><name><name pos:line="26" pos:column="29">preMetrics</name><op:operator pos:line="26" pos:column="39">.</op:operator><name pos:line="26" pos:column="40">StemText</name></name><argument_list pos:line="26" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="26" pos:column="49">"search"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="26" pos:column="60">"search"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">Assert</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">AreEqual</name></name><argument_list pos:line="27" pos:column="28">(<argument><expr><call><name><name pos:line="27" pos:column="29">preMetrics</name><op:operator pos:line="27" pos:column="39">.</op:operator><name pos:line="27" pos:column="40">StemText</name></name><argument_list pos:line="27" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="49">"solution closing"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="27" pos:column="70">"solut close"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">Assert</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">AreEqual</name></name><argument_list pos:line="28" pos:column="28">(<argument><expr><call><name><name pos:line="28" pos:column="29">preMetrics</name><op:operator pos:line="28" pos:column="39">.</op:operator><name pos:line="28" pos:column="40">StemText</name></name><argument_list pos:line="28" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="49">"indexer"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="28" pos:column="61">"index"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="31" pos:column="9">[<expr><name pos:line="31" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">void</name></type> <name pos:line="32" pos:column="21">TestSpecificityMetrics</name><parameter_list pos:line="32" pos:column="43">()</parameter_list>
        <block pos:line="33" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">documentIndexer</name> <init pos:line="34" pos:column="33">= <expr><call><name><name pos:line="34" pos:column="35">ServiceLocator</name><op:operator pos:line="34" pos:column="49">.</op:operator><name><name pos:line="34" pos:column="50">Resolve</name><argument_list pos:line="34" pos:column="57">&lt;<argument><name pos:line="34" pos:column="58">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="34" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">var</name></type> <name pos:line="35" pos:column="17">analyzer</name> <init pos:line="35" pos:column="26">= <expr><call><name><name pos:line="35" pos:column="28">ServiceLocator</name><op:operator pos:line="35" pos:column="42">.</op:operator><name><name pos:line="35" pos:column="43">Resolve</name><argument_list pos:line="35" pos:column="50">&lt;<argument><name pos:line="35" pos:column="51">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="35" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="37" pos:column="13">PreRetrievalMetrics</name></type> <name pos:line="37" pos:column="33">preMetrics</name> <init pos:line="37" pos:column="44">= <expr><op:operator pos:line="37" pos:column="46">new</op:operator> <call><name pos:line="37" pos:column="50">PreRetrievalMetrics</name><argument_list pos:line="37" pos:column="69">(<argument><expr><name><name pos:line="37" pos:column="70">documentIndexer</name><op:operator pos:line="37" pos:column="85">.</op:operator><name pos:line="37" pos:column="86">Reader</name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="94">analyzer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">IsTrue</name></name><argument_list pos:line="38" pos:column="26">(<argument><expr><call><name><name pos:line="38" pos:column="27">preMetrics</name><op:operator pos:line="38" pos:column="37">.</op:operator><name pos:line="38" pos:column="38">AvgIdf</name></name><argument_list pos:line="38" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="45">"splitting"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="38" pos:column="58">&gt;</op:operator> <call><name><name pos:line="38" pos:column="60">preMetrics</name><op:operator pos:line="38" pos:column="70">.</op:operator><name pos:line="38" pos:column="71">AvgIdf</name></name><argument_list pos:line="38" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="78">"searching"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">Assert</name><op:operator pos:line="39" pos:column="19">.</op:operator><name pos:line="39" pos:column="20">IsTrue</name></name><argument_list pos:line="39" pos:column="26">(<argument><expr><call><name><name pos:line="39" pos:column="27">preMetrics</name><op:operator pos:line="39" pos:column="37">.</op:operator><name pos:line="39" pos:column="38">AvgIdf</name></name><argument_list pos:line="39" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="45">"solution closing"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="39" pos:column="65">&gt;</op:operator> <call><name><name pos:line="39" pos:column="67">preMetrics</name><op:operator pos:line="39" pos:column="77">.</op:operator><name pos:line="39" pos:column="78">AvgIdf</name></name><argument_list pos:line="39" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="85">"indexer"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="42" pos:column="9">[<expr><name pos:line="42" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="43" pos:column="9">public</specifier> <name pos:line="43" pos:column="16">void</name></type> <name pos:line="43" pos:column="21">TestSimilarityMetrics</name><parameter_list pos:line="43" pos:column="42">()</parameter_list>
        <block pos:line="44" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">var</name></type> <name pos:line="45" pos:column="17">documentIndexer</name> <init pos:line="45" pos:column="33">= <expr><call><name><name pos:line="45" pos:column="35">ServiceLocator</name><op:operator pos:line="45" pos:column="49">.</op:operator><name><name pos:line="45" pos:column="50">Resolve</name><argument_list pos:line="45" pos:column="57">&lt;<argument><name pos:line="45" pos:column="58">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="45" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">var</name></type> <name pos:line="46" pos:column="17">analyzer</name> <init pos:line="46" pos:column="26">= <expr><call><name><name pos:line="46" pos:column="28">ServiceLocator</name><op:operator pos:line="46" pos:column="42">.</op:operator><name><name pos:line="46" pos:column="43">Resolve</name><argument_list pos:line="46" pos:column="50">&lt;<argument><name pos:line="46" pos:column="51">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="46" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="48" pos:column="13">PreRetrievalMetrics</name></type> <name pos:line="48" pos:column="33">preMetrics</name> <init pos:line="48" pos:column="44">= <expr><op:operator pos:line="48" pos:column="46">new</op:operator> <call><name pos:line="48" pos:column="50">PreRetrievalMetrics</name><argument_list pos:line="48" pos:column="69">(<argument><expr><name><name pos:line="48" pos:column="70">documentIndexer</name><op:operator pos:line="48" pos:column="85">.</op:operator><name pos:line="48" pos:column="86">Reader</name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="94">analyzer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">Assert</name><op:operator pos:line="49" pos:column="19">.</op:operator><name pos:line="49" pos:column="20">IsTrue</name></name><argument_list pos:line="49" pos:column="26">(<argument><expr><call><name><name pos:line="49" pos:column="27">preMetrics</name><op:operator pos:line="49" pos:column="37">.</op:operator><name pos:line="49" pos:column="38">AvgSqc</name></name><argument_list pos:line="49" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="45">"indexer"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="49" pos:column="56">&gt;</op:operator> <call><name><name pos:line="49" pos:column="58">preMetrics</name><op:operator pos:line="49" pos:column="68">.</op:operator><name pos:line="49" pos:column="69">AvgSqc</name></name><argument_list pos:line="49" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="76">"potato chip"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">Assert</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">IsTrue</name></name><argument_list pos:line="50" pos:column="26">(<argument><expr><call><name><name pos:line="50" pos:column="27">preMetrics</name><op:operator pos:line="50" pos:column="37">.</op:operator><name pos:line="50" pos:column="38">AvgSqc</name></name><argument_list pos:line="50" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="45">"indexer"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="50" pos:column="56">&gt;</op:operator> <call><name><name pos:line="50" pos:column="58">preMetrics</name><op:operator pos:line="50" pos:column="68">.</op:operator><name pos:line="50" pos:column="69">AvgSqc</name></name><argument_list pos:line="50" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="76">"soda pop"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="53" pos:column="9">public</specifier> <specifier pos:line="53" pos:column="16">override</specifier> <name pos:line="53" pos:column="25">string</name></type> <name pos:line="53" pos:column="32">GetFilesDirectory</name><parameter_list pos:line="53" pos:column="49">()</parameter_list>
        <block pos:line="54" pos:column="9">{
            <return pos:line="55" pos:column="13">return <expr><lit:literal type="string" pos:line="55" pos:column="20">"..\\.."</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="58" pos:column="9">public</specifier> <specifier pos:line="58" pos:column="16">override</specifier> <name pos:line="58" pos:column="25">string</name></type> <name pos:line="58" pos:column="32">GetIndexDirName</name><parameter_list pos:line="58" pos:column="47">()</parameter_list>
        <block pos:line="59" pos:column="9">{
            <return pos:line="60" pos:column="13">return <expr><lit:literal type="string" pos:line="60" pos:column="20">"RetrievalMetricsTest"</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="63" pos:column="9">public</specifier> <specifier pos:line="63" pos:column="16">override</specifier> <name pos:line="63" pos:column="25">TimeSpan</name><type:modifier pos:line="63" pos:column="33">?</type:modifier></type> <name pos:line="63" pos:column="35">GetTimeToCommit</name><parameter_list pos:line="63" pos:column="50">()</parameter_list>
        <block pos:line="64" pos:column="9">{
            <return pos:line="65" pos:column="13">return <expr><call><name><name pos:line="65" pos:column="20">TimeSpan</name><op:operator pos:line="65" pos:column="28">.</op:operator><name pos:line="65" pos:column="29">FromSeconds</name></name><argument_list pos:line="65" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="65" pos:column="41">4</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
