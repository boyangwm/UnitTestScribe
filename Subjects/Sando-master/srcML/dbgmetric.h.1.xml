<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\dbgmetric.h" pos:tabs="8"><cpp:ifndef pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">ifndef</cpp:directive> <name pos:line="1" pos:column="9">__METRIC_H__</name></cpp:ifndef>
<cpp:define pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2" pos:column="9">__METRIC_H__</name></cpp:macro></cpp:define>

<comment type="line" pos:line="4" pos:column="1">// ------------------------------------------------------------------</comment>
<comment type="line" pos:line="5" pos:column="1">// Predefined metric names</comment>

<comment type="line" pos:line="7" pos:column="1">// "CLSID"</comment>
<decl_stmt><decl><type><specifier pos:line="8" pos:column="1">extern</specifier> <name pos:line="8" pos:column="8">LPCWSTR</name></type> <name pos:line="8" pos:column="16">metricCLSID</name></decl>;</decl_stmt>
<comment type="line" pos:line="9" pos:column="1">// "Name"</comment>
<decl_stmt><decl><type><specifier pos:line="10" pos:column="1">extern</specifier> <name pos:line="10" pos:column="8">LPCWSTR</name></type> <name pos:line="10" pos:column="16">metricName</name></decl>;</decl_stmt>
<comment type="line" pos:line="11" pos:column="1">// "Language"</comment>
<decl_stmt><decl><type><specifier pos:line="12" pos:column="1">extern</specifier> <name pos:line="12" pos:column="8">LPCWSTR</name></type> <name pos:line="12" pos:column="16">metricLanguage</name></decl>;</decl_stmt>



<cpp:ifndef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifndef</cpp:directive> <name pos:line="16" pos:column="9">NO_DBGMETRIC</name></cpp:ifndef> <comment type="line" pos:line="16" pos:column="22">// if NO_DBGMETIC is defined, don't include functions</comment>

<comment type="line" pos:line="18" pos:column="1">// ------------------------------------------------------------------</comment>
<comment type="line" pos:line="19" pos:column="1">// General purpose metric routines</comment>

<comment type="line" pos:line="21" pos:column="1">//HRESULT GetMetric(LPCWSTR pszMachine, LPCWSTR pszType, REFGUID guidSection, LPCWSTR pszMetric, VARIANT* pvarValue, LPCWSTR pszAltRoot);</comment>
<function_decl><type><name pos:line="22" pos:column="1">HRESULT</name> <name pos:line="22" pos:column="9">__stdcall</name></type> <name pos:line="22" pos:column="19">GetMetric</name><parameter_list pos:line="22" pos:column="28">(<param><decl><type><name pos:line="22" pos:column="29">LPCWSTR</name></type> <name pos:line="22" pos:column="37">pszMachine</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="49">LPCWSTR</name></type> <name pos:line="22" pos:column="57">pszType</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="66">REFGUID</name></type> <name pos:line="22" pos:column="74">guidSection</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="87">LPCWSTR</name></type> <name pos:line="22" pos:column="95">pszMetric</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="106">_Out_</name> <name pos:line="22" pos:column="112">DWORD</name><type:modifier pos:line="22" pos:column="117">*</type:modifier></type> <name pos:line="22" pos:column="119">pdwValue</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="129">LPCWSTR</name></type> <name pos:line="22" pos:column="137">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="23" pos:column="1">HRESULT</name> <name pos:line="23" pos:column="9">__stdcall</name></type> <name pos:line="23" pos:column="19">GetMetric</name><parameter_list pos:line="23" pos:column="28">(<param><decl><type><name pos:line="23" pos:column="29">LPCWSTR</name></type> <name pos:line="23" pos:column="37">pszMachine</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="49">LPCWSTR</name></type> <name pos:line="23" pos:column="57">pszType</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="66">REFGUID</name></type> <name pos:line="23" pos:column="74">guidSection</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="87">LPCWSTR</name></type> <name pos:line="23" pos:column="95">pszMetric</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="106">BSTR</name><type:modifier pos:line="23" pos:column="110">*</type:modifier></type> <name pos:line="23" pos:column="112">pbstrValue</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="124">LPCWSTR</name></type> <name pos:line="23" pos:column="132">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="24" pos:column="1">HRESULT</name> <name pos:line="24" pos:column="9">__stdcall</name></type> <name pos:line="24" pos:column="19">GetMetric</name><parameter_list pos:line="24" pos:column="28">(<param><decl><type><name pos:line="24" pos:column="29">LPCWSTR</name></type> <name pos:line="24" pos:column="37">pszMachine</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="49">LPCWSTR</name></type> <name pos:line="24" pos:column="57">pszType</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="66">REFGUID</name></type> <name pos:line="24" pos:column="74">guidSection</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="87">LPCWSTR</name></type> <name pos:line="24" pos:column="95">pszMetric</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="106">_Out_</name> <name pos:line="24" pos:column="112">GUID</name><type:modifier pos:line="24" pos:column="116">*</type:modifier></type> <name pos:line="24" pos:column="118">pguidValue</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="130">LPCWSTR</name></type> <name pos:line="24" pos:column="138">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name pos:line="25" pos:column="1">HRESULT</name> <name pos:line="25" pos:column="9">__stdcall</name></type> <name pos:line="25" pos:column="19">GetMetric</name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">LPCWSTR</name> <name pos:line="25" pos:column="37">pszMachine</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">LPCWSTR</name> <name pos:line="25" pos:column="57">pszType</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="66">REFGUID</name> <name pos:line="25" pos:column="74">guidSection</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="87">LPCWSTR</name> <name pos:line="25" pos:column="95">pszMetric</name></expr></argument>, <argument><expr><macro><name pos:line="25" pos:column="106">_Out_opt_cap_post_count_</name><argument_list pos:line="25" pos:column="130">(<argument pos:line="25" pos:column="131">*pdwSize</argument>, <argument pos:line="25" pos:column="141">*pdwSize</argument>)</argument_list></macro> <name pos:line="25" pos:column="151">GUID</name><op:operator pos:line="25" pos:column="155">*</op:operator> <name pos:line="25" pos:column="157">rgguidValues</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="171">_Out_</name> <name pos:line="25" pos:column="177">DWORD</name><op:operator pos:line="25" pos:column="182">*</op:operator> <name pos:line="25" pos:column="184">pdwSize</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="193">LPCWSTR</name> <name pos:line="25" pos:column="201">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="line" pos:line="27" pos:column="1">//HRESULT SetMetric(LPCWSTR pszType, REFGUID guidSection, LPCWSTR pszMetric, const VARIANT varValue);</comment>
<function_decl><type><name pos:line="28" pos:column="1">HRESULT</name> <name pos:line="28" pos:column="9">__stdcall</name></type> <name pos:line="28" pos:column="19">SetMetric</name><parameter_list pos:line="28" pos:column="28">(<param><decl><type><name pos:line="28" pos:column="29">LPCWSTR</name></type> <name pos:line="28" pos:column="37">pszType</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="46">REFGUID</name></type> <name pos:line="28" pos:column="54">guidSection</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="67">LPCWSTR</name></type> <name pos:line="28" pos:column="75">pszMetric</name></decl></param>, <param><decl><type><specifier pos:line="28" pos:column="86">const</specifier> <name pos:line="28" pos:column="92">DWORD</name></type> <name pos:line="28" pos:column="98">dwValue</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="107">bool</name></type> <name pos:line="28" pos:column="112">fUserSpecific</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="127">LPCWSTR</name></type> <name pos:line="28" pos:column="135">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="29" pos:column="1">HRESULT</name> <name pos:line="29" pos:column="9">__stdcall</name></type> <name pos:line="29" pos:column="19">SetMetric</name><parameter_list pos:line="29" pos:column="28">(<param><decl><type><name pos:line="29" pos:column="29">LPCWSTR</name></type> <name pos:line="29" pos:column="37">pszType</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="46">REFGUID</name></type> <name pos:line="29" pos:column="54">guidSection</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="67">LPCWSTR</name></type> <name pos:line="29" pos:column="75">pszMetric</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="86">LPCWSTR</name></type> <name pos:line="29" pos:column="94">pszValue</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="104">bool</name></type> <name pos:line="29" pos:column="109">fUserSpecific</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="124">LPCWSTR</name></type> <name pos:line="29" pos:column="132">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="30" pos:column="1">HRESULT</name> <name pos:line="30" pos:column="9">__stdcall</name></type> <name pos:line="30" pos:column="19">SetMetric</name><parameter_list pos:line="30" pos:column="28">(<param><decl><type><name pos:line="30" pos:column="29">LPCWSTR</name></type> <name pos:line="30" pos:column="37">pszType</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="46">REFGUID</name></type> <name pos:line="30" pos:column="54">guidSection</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="67">LPCWSTR</name></type> <name pos:line="30" pos:column="75">pszMetric</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="86">REFGUID</name></type> <name pos:line="30" pos:column="94">guidValue</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="105">bool</name></type> <name pos:line="30" pos:column="110">fUserSpecific</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="125">LPCWSTR</name></type> <name pos:line="30" pos:column="133">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name pos:line="31" pos:column="1">HRESULT</name> <name pos:line="31" pos:column="9">__stdcall</name></type> <name pos:line="31" pos:column="19">SetMetric</name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">LPCWSTR</name> <name pos:line="31" pos:column="37">pszType</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">REFGUID</name> <name pos:line="31" pos:column="54">guidSection</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="67">LPCWSTR</name> <name pos:line="31" pos:column="75">pszMetric</name></expr></argument>, <argument><expr><macro><name pos:line="31" pos:column="86">_In_count_</name><argument_list pos:line="31" pos:column="96">(<argument pos:line="31" pos:column="97">dwSize</argument>)</argument_list></macro> const <name pos:line="31" pos:column="111">GUID</name><op:operator pos:line="31" pos:column="115">*</op:operator> <name pos:line="31" pos:column="117">rgguidValues</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="131">DWORD</name> <name pos:line="31" pos:column="137">dwSize</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="145">bool</name> <name pos:line="31" pos:column="150">fUserSpecific</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="165">LPCWSTR</name> <name pos:line="31" pos:column="173">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="33" pos:column="1">HRESULT</name> <name pos:line="33" pos:column="9">__stdcall</name></type> <name pos:line="33" pos:column="19">EnumMetricSections</name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">LPCWSTR</name> <name pos:line="33" pos:column="46">pszMachine</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">LPCWSTR</name> <name pos:line="33" pos:column="66">pszType</name></expr></argument>, <argument><expr><macro><name pos:line="33" pos:column="75">_Out_opt_cap_post_count_</name><argument_list pos:line="33" pos:column="99">(<argument pos:line="33" pos:column="100">*pdwSize</argument>, <argument pos:line="33" pos:column="110">*pdwSize</argument>)</argument_list></macro> <name pos:line="33" pos:column="120">GUID</name><op:operator pos:line="33" pos:column="124">*</op:operator> <name pos:line="33" pos:column="126">rgguidSections</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="142">_Out_</name> <name pos:line="33" pos:column="148">DWORD</name><op:operator pos:line="33" pos:column="153">*</op:operator> <name pos:line="33" pos:column="155">pdwSize</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="164">LPCWSTR</name> <name pos:line="33" pos:column="172">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name pos:line="35" pos:column="1">HRESULT</name> <name pos:line="35" pos:column="9">__stdcall</name></type> <name pos:line="35" pos:column="19">RemoveMetric</name><parameter_list pos:line="35" pos:column="31">(<param><decl><type><name pos:line="35" pos:column="32">LPCWSTR</name></type> <name pos:line="35" pos:column="40">pszType</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="49">REFGUID</name></type> <name pos:line="35" pos:column="57">guidSection</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="70">LPCWSTR</name></type> <name pos:line="35" pos:column="78">pszMetric</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="89">LPCWSTR</name></type> <name pos:line="35" pos:column="97">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name pos:line="37" pos:column="1">HRESULT</name> <name pos:line="37" pos:column="9">__stdcall</name></type> <name pos:line="37" pos:column="19">SetMetricLocale</name><parameter_list pos:line="37" pos:column="34">(<param><decl><type><name pos:line="37" pos:column="35">WORD</name></type> <name pos:line="37" pos:column="40">wLangId</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="38" pos:column="1">WORD</name> <name pos:line="38" pos:column="6">__stdcall</name></type> <name pos:line="38" pos:column="16">GetMetricLocale</name><parameter_list pos:line="38" pos:column="31">()</parameter_list>;</function_decl>

<function_decl><type><name pos:line="40" pos:column="1">HRESULT</name></type> <name pos:line="40" pos:column="9">ReadTextFileAsBstr</name><parameter_list pos:line="40" pos:column="27">(<param><decl><type><name pos:line="40" pos:column="28">LPCWSTR</name></type> <name pos:line="40" pos:column="36">szFileName</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="48">BSTR</name> <type:modifier pos:line="40" pos:column="53">*</type:modifier></type><name pos:line="40" pos:column="54">pbstrFileContent</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="41" pos:column="8">// end ifndef NO_DBGMETRIC</comment>



<comment type="line" pos:line="45" pos:column="1">// Predefined metric types</comment>
<comment type="line" pos:line="46" pos:column="1">// "Engine"</comment>
<decl_stmt><decl><type><specifier pos:line="47" pos:column="1">extern</specifier> <name pos:line="47" pos:column="8">LPCWSTR</name></type> <name pos:line="47" pos:column="16">metrictypeEngine</name></decl>;</decl_stmt>
<comment type="line" pos:line="48" pos:column="1">// "PortSupplier"</comment>
<decl_stmt><decl><type><specifier pos:line="49" pos:column="1">extern</specifier> <name pos:line="49" pos:column="8">LPCWSTR</name></type> <name pos:line="49" pos:column="16">metrictypePortSupplier</name></decl>;</decl_stmt>
<comment type="line" pos:line="50" pos:column="1">// "Exception"</comment>
<decl_stmt><decl><type><specifier pos:line="51" pos:column="1">extern</specifier> <name pos:line="51" pos:column="8">LPCWSTR</name></type> <name pos:line="51" pos:column="16">metrictypeException</name></decl>;</decl_stmt>
<comment type="line" pos:line="52" pos:column="1">// "EEExtensions"</comment>
<decl_stmt><decl><type><specifier pos:line="53" pos:column="1">extern</specifier> <name pos:line="53" pos:column="8">LPCWSTR</name></type> <name pos:line="53" pos:column="16">metricttypeEEExtension</name></decl>;</decl_stmt>

<comment type="line" pos:line="55" pos:column="1">// Predefined engine metric names</comment>
<comment type="line" pos:line="56" pos:column="1">// AddressBP</comment>
<decl_stmt><decl><type><specifier pos:line="57" pos:column="1">extern</specifier> <name pos:line="57" pos:column="8">LPCWSTR</name></type> <name pos:line="57" pos:column="16">metricAddressBP</name></decl>;</decl_stmt>
<comment type="line" pos:line="58" pos:column="1">// AlwaysLoadLocal</comment>
<decl_stmt><decl><type><specifier pos:line="59" pos:column="1">extern</specifier> <name pos:line="59" pos:column="8">LPCWSTR</name></type> <name pos:line="59" pos:column="16">metricAlwaysLoadLocal</name></decl>;</decl_stmt>
<comment type="line" pos:line="60" pos:column="1">// LoadInDebuggeeSession</comment>
<decl_stmt><decl><type><specifier pos:line="61" pos:column="1">extern</specifier> <name pos:line="61" pos:column="8">LPCWSTR</name></type> <name pos:line="61" pos:column="16">metricLoadInDebuggeeSession</name></decl>;</decl_stmt>
<comment type="line" pos:line="62" pos:column="1">// LoadedByDebuggee</comment>
<decl_stmt><decl><type><specifier pos:line="63" pos:column="1">extern</specifier> <name pos:line="63" pos:column="8">LPCWSTR</name></type> <name pos:line="63" pos:column="16">metricLoadedByDebuggee</name></decl>;</decl_stmt>
<comment type="line" pos:line="64" pos:column="1">// Attach</comment>
<decl_stmt><decl><type><specifier pos:line="65" pos:column="1">extern</specifier> <name pos:line="65" pos:column="8">LPCWSTR</name></type> <name pos:line="65" pos:column="16">metricAttach</name></decl>;</decl_stmt>
<comment type="line" pos:line="66" pos:column="1">// CallStackBP</comment>
<decl_stmt><decl><type><specifier pos:line="67" pos:column="1">extern</specifier> <name pos:line="67" pos:column="8">LPCWSTR</name></type> <name pos:line="67" pos:column="16">metricCallStackBP</name></decl>;</decl_stmt>
<comment type="line" pos:line="68" pos:column="1">// ConditionalBP</comment>
<decl_stmt><decl><type><specifier pos:line="69" pos:column="1">extern</specifier> <name pos:line="69" pos:column="8">LPCWSTR</name></type> <name pos:line="69" pos:column="16">metricConditionalBP</name></decl>;</decl_stmt>
<comment type="line" pos:line="70" pos:column="1">// DataBP</comment>
<decl_stmt><decl><type><specifier pos:line="71" pos:column="1">extern</specifier> <name pos:line="71" pos:column="8">LPCWSTR</name></type> <name pos:line="71" pos:column="16">metricDataBP</name></decl>;</decl_stmt>
<comment type="line" pos:line="72" pos:column="1">// Disassembly</comment>
<decl_stmt><decl><type><specifier pos:line="73" pos:column="1">extern</specifier> <name pos:line="73" pos:column="8">LPCWSTR</name></type> <name pos:line="73" pos:column="16">metricDisassembly</name></decl>;</decl_stmt>
<comment type="line" pos:line="74" pos:column="1">// Dump writing</comment>
<decl_stmt><decl><type><specifier pos:line="75" pos:column="1">extern</specifier> <name pos:line="75" pos:column="8">LPCWSTR</name></type> <name pos:line="75" pos:column="16">metricDumpWriting</name></decl>;</decl_stmt>
<comment type="line" pos:line="76" pos:column="1">// ENC</comment>
<decl_stmt><decl><type><specifier pos:line="77" pos:column="1">extern</specifier> <name pos:line="77" pos:column="8">LPCWSTR</name></type> <name pos:line="77" pos:column="16">metricENC</name></decl>;</decl_stmt>
<comment type="line" pos:line="78" pos:column="1">// Exceptions</comment>
<decl_stmt><decl><type><specifier pos:line="79" pos:column="1">extern</specifier> <name pos:line="79" pos:column="8">LPCWSTR</name></type> <name pos:line="79" pos:column="16">metricExceptions</name></decl>;</decl_stmt>
<comment type="line" pos:line="80" pos:column="1">// FunctionBP</comment>
<decl_stmt><decl><type><specifier pos:line="81" pos:column="1">extern</specifier> <name pos:line="81" pos:column="8">LPCWSTR</name></type> <name pos:line="81" pos:column="16">metricFunctionBP</name></decl>;</decl_stmt>
<comment type="line" pos:line="82" pos:column="1">// HitCountBP</comment>
<decl_stmt><decl><type><specifier pos:line="83" pos:column="1">extern</specifier> <name pos:line="83" pos:column="8">LPCWSTR</name></type> <name pos:line="83" pos:column="16">metricHitCountBP</name></decl>;</decl_stmt>
<comment type="line" pos:line="84" pos:column="1">// JITDebug</comment>
<decl_stmt><decl><type><specifier pos:line="85" pos:column="1">extern</specifier> <name pos:line="85" pos:column="8">LPCWSTR</name></type> <name pos:line="85" pos:column="16">metricJITDebug</name></decl>;</decl_stmt>
<comment type="line" pos:line="86" pos:column="1">// Memory</comment>
<decl_stmt><decl><type><specifier pos:line="87" pos:column="1">extern</specifier> <name pos:line="87" pos:column="8">LPCWSTR</name></type> <name pos:line="87" pos:column="16">metricMemory</name></decl>;</decl_stmt>
<comment type="line" pos:line="88" pos:column="1">// Port supplier</comment>
<decl_stmt><decl><type><specifier pos:line="89" pos:column="1">extern</specifier> <name pos:line="89" pos:column="8">LPCWSTR</name></type> <name pos:line="89" pos:column="16">metricPortSupplier</name></decl>;</decl_stmt>
<comment type="line" pos:line="90" pos:column="1">// Registers</comment>
<decl_stmt><decl><type><specifier pos:line="91" pos:column="1">extern</specifier> <name pos:line="91" pos:column="8">LPCWSTR</name></type> <name pos:line="91" pos:column="16">metricRegisters</name></decl>;</decl_stmt>
<comment type="line" pos:line="92" pos:column="1">// SetNextStatement</comment>
<decl_stmt><decl><type><specifier pos:line="93" pos:column="1">extern</specifier> <name pos:line="93" pos:column="8">LPCWSTR</name></type> <name pos:line="93" pos:column="16">metricSetNextStatement</name></decl>;</decl_stmt>
<comment type="line" pos:line="94" pos:column="1">// SuspendThread</comment>
<decl_stmt><decl><type><specifier pos:line="95" pos:column="1">extern</specifier> <name pos:line="95" pos:column="8">LPCWSTR</name></type> <name pos:line="95" pos:column="16">metricSuspendThread</name></decl>;</decl_stmt>
<comment type="line" pos:line="96" pos:column="1">// WarnIfNoSymbols</comment>
<decl_stmt><decl><type><specifier pos:line="97" pos:column="1">extern</specifier> <name pos:line="97" pos:column="8">LPCWSTR</name></type> <name pos:line="97" pos:column="16">metricWarnIfNoSymbols</name></decl>;</decl_stmt>
<comment type="line" pos:line="98" pos:column="1">// Filtering non-user frames</comment>
<decl_stmt><decl><type><specifier pos:line="99" pos:column="1">extern</specifier> <name pos:line="99" pos:column="8">LPCWSTR</name></type> <name pos:line="99" pos:column="16">metricShowNonUserCode</name></decl>;</decl_stmt>
<comment type="line" pos:line="100" pos:column="1">// What CLSID provides program nodes?</comment>
<decl_stmt><decl><type><specifier pos:line="101" pos:column="1">extern</specifier> <name pos:line="101" pos:column="8">LPCWSTR</name></type> <name pos:line="101" pos:column="16">metricProgramProvider</name></decl>;</decl_stmt>
<comment type="line" pos:line="102" pos:column="1">// Always load the program provider locally?</comment>
<decl_stmt><decl><type><specifier pos:line="103" pos:column="1">extern</specifier> <name pos:line="103" pos:column="8">LPCWSTR</name></type> <name pos:line="103" pos:column="16">metricAlwaysLoadProgramProviderLocal</name></decl>;</decl_stmt>
<comment type="line" pos:line="104" pos:column="1">// Use engine to watch for process events instead of program provider?</comment>
<decl_stmt><decl><type><specifier pos:line="105" pos:column="1">extern</specifier> <name pos:line="105" pos:column="8">LPCWSTR</name></type> <name pos:line="105" pos:column="16">metricEngineCanWatchProcess</name></decl>;</decl_stmt>
<comment type="line" pos:line="106" pos:column="1">// Engines will be placed in the SDM's engine filter in descending order of priority. This determines the order in which WatchForProviderEvents/etc is called during multi-engine launch</comment>
<decl_stmt><decl><type><specifier pos:line="107" pos:column="1">extern</specifier> <name pos:line="107" pos:column="8">LPCWSTR</name></type> <name pos:line="107" pos:column="16">metricEnginePriority</name></decl>;</decl_stmt>
<comment type="line" pos:line="108" pos:column="1">// Can we do remote debugging?</comment>
<decl_stmt><decl><type><specifier pos:line="109" pos:column="1">extern</specifier> <name pos:line="109" pos:column="8">LPCWSTR</name></type> <name pos:line="109" pos:column="16">metricRemoteDebugging</name></decl>;</decl_stmt>
<comment type="line" pos:line="110" pos:column="1">// Should the encmgr use native's encbuild.dll to build for enc?</comment>
<decl_stmt><decl><type><specifier pos:line="111" pos:column="1">extern</specifier> <name pos:line="111" pos:column="8">LPCWSTR</name></type> <name pos:line="111" pos:column="16">metricEncUseNativeBuilder</name></decl>;</decl_stmt>
<comment type="line" pos:line="112" pos:column="1">// When debugging a 64-bit process under WOW, should we load the engine 'remotely'</comment>
<comment type="line" pos:line="113" pos:column="1">// or in the devenv process (which is running under WOW64)</comment>
<decl_stmt><decl><type><specifier pos:line="114" pos:column="1">extern</specifier> <name pos:line="114" pos:column="8">LPCWSTR</name></type> <name pos:line="114" pos:column="16">metricLoadUnderWOW64</name></decl>;</decl_stmt>
<comment type="line" pos:line="115" pos:column="1">// When debugging a 64-bit process under WOW, should we load the program provider</comment>
<comment type="line" pos:line="116" pos:column="1">// 'remotely' or in the devenv process (which is running under WOW64)</comment>
<decl_stmt><decl><type><specifier pos:line="117" pos:column="1">extern</specifier> <name pos:line="117" pos:column="8">LPCWSTR</name></type> <name pos:line="117" pos:column="16">metricLoadProgramProviderUnderWOW64</name></decl>;</decl_stmt>
<comment type="line" pos:line="118" pos:column="1">// Stop on unhandled exceptions thrown across app domain boundaries</comment>
<decl_stmt><decl><type><specifier pos:line="119" pos:column="1">extern</specifier> <name pos:line="119" pos:column="8">LPCWSTR</name></type> <name pos:line="119" pos:column="16">metricStopOnExceptionCrossingManagedBoundary</name></decl>;</decl_stmt>
<comment type="line" pos:line="120" pos:column="1">// Warn user if there is no "user" code on launch</comment>
<decl_stmt><decl><type><specifier pos:line="121" pos:column="1">extern</specifier> <name pos:line="121" pos:column="8">LPCWSTR</name></type> <name pos:line="121" pos:column="16">metricWarnIfNoUserCodeOnLaunch</name></decl>;</decl_stmt>
<comment type="line" pos:line="122" pos:column="1">// Priority for engine automatic selection (preference given to higher)</comment>
<decl_stmt><decl><type><specifier pos:line="123" pos:column="1">extern</specifier> <name pos:line="123" pos:column="8">LPCWSTR</name></type> <name pos:line="123" pos:column="16">metricAutoSelectPriority</name></decl>;</decl_stmt>
<comment type="line" pos:line="124" pos:column="1">// engines not compatible with this engine (only for automatic engine selection)</comment>
<decl_stmt><decl><type><specifier pos:line="125" pos:column="1">extern</specifier> <name pos:line="125" pos:column="8">LPCWSTR</name></type> <name pos:line="125" pos:column="16">metricAutoSelectIncompatibleList</name></decl>;</decl_stmt>
<comment type="line" pos:line="126" pos:column="1">// engines not compatible with this engine</comment>
<decl_stmt><decl><type><specifier pos:line="127" pos:column="1">extern</specifier> <name pos:line="127" pos:column="8">LPCWSTR</name></type> <name pos:line="127" pos:column="16">metricIncompatibleList</name></decl>;</decl_stmt>
<comment type="line" pos:line="128" pos:column="1">// Disable JIT optimizations while debugging</comment>
<decl_stmt><decl><type><specifier pos:line="129" pos:column="1">extern</specifier> <name pos:line="129" pos:column="8">LPCWSTR</name></type> <name pos:line="129" pos:column="16">metricDisableJITOptimization</name></decl>;</decl_stmt>
<comment type="line" pos:line="130" pos:column="1">// Default memory organization 0=little endian (most typical), 1=big endian</comment>
<decl_stmt><decl><type><specifier pos:line="131" pos:column="1">extern</specifier> <name pos:line="131" pos:column="8">LPCWSTR</name></type> <name pos:line="131" pos:column="16">metricBigEndian</name></decl>;</decl_stmt>

<comment type="line" pos:line="133" pos:column="1">// Filtering non-user frames</comment>
<decl_stmt><decl><type><specifier pos:line="134" pos:column="1">extern</specifier> <name pos:line="134" pos:column="8">LPCWSTR</name></type> <name pos:line="134" pos:column="16">metricShowNonUserCode</name></decl>;</decl_stmt>

<comment type="line" pos:line="136" pos:column="1">// Stepping in "user" code only</comment>
<decl_stmt><decl><type><specifier pos:line="137" pos:column="1">extern</specifier> <name pos:line="137" pos:column="8">LPCWSTR</name></type> <name pos:line="137" pos:column="16">metricJustMyCodeStepping</name></decl>;</decl_stmt>
<comment type="line" pos:line="138" pos:column="1">// Allow all threads to run when doing a funceval</comment>
<decl_stmt><decl><type><specifier pos:line="139" pos:column="1">extern</specifier> <name pos:line="139" pos:column="8">LPCWSTR</name></type> <name pos:line="139" pos:column="16">metricAllThreadsRunOnFuncEval</name></decl>;</decl_stmt>
<comment type="line" pos:line="140" pos:column="1">// Use Shim API to get ICorDebug</comment>
<decl_stmt><decl><type><specifier pos:line="141" pos:column="1">extern</specifier> <name pos:line="141" pos:column="8">LPCWSTR</name></type> <name pos:line="141" pos:column="16">metricUseShimAPI</name></decl>;</decl_stmt>
<comment type="line" pos:line="142" pos:column="1">// Attempt to map breakpoints in client-side script</comment>
<decl_stmt><decl><type><specifier pos:line="143" pos:column="1">extern</specifier> <name pos:line="143" pos:column="8">LPCWSTR</name></type> <name pos:line="143" pos:column="16">metricMapClientBreakpoints</name></decl>;</decl_stmt>
<comment type="line" pos:line="144" pos:column="1">// Enable funceval quick abort</comment>
<decl_stmt><decl><type><specifier pos:line="145" pos:column="1">extern</specifier> <name pos:line="145" pos:column="8">LPCWSTR</name></type> <name pos:line="145" pos:column="16">metricEnableFuncEvalQuickAbort</name></decl>;</decl_stmt>
<comment type="line" pos:line="146" pos:column="1">// Specify detour dll names for funceval quick abort</comment>
<decl_stmt><decl><type><specifier pos:line="147" pos:column="1">extern</specifier> <name pos:line="147" pos:column="8">LPCWSTR</name></type> <name pos:line="147" pos:column="16">metricFuncEvalQuickAbortDlls</name></decl>;</decl_stmt>
<comment type="line" pos:line="148" pos:column="1">// Specify EXEs for which we shouldn't do FEQA</comment>
<decl_stmt><decl><type><specifier pos:line="149" pos:column="1">extern</specifier> <name pos:line="149" pos:column="8">LPCWSTR</name></type> <name pos:line="149" pos:column="16">metricFuncEvalQuickAbortExcludeList</name></decl>;</decl_stmt>
<comment type="line" pos:line="150" pos:column="1">// Trace settings.</comment>
<decl_stmt><decl><type><specifier pos:line="151" pos:column="1">extern</specifier> <name pos:line="151" pos:column="8">LPCWSTR</name></type> <name pos:line="151" pos:column="16">metricTracing</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="152" pos:column="1">extern</specifier> <name pos:line="152" pos:column="8">LPCWSTR</name></type> <name pos:line="152" pos:column="16">metricEnableTracing</name></decl>;</decl_stmt>
<comment type="line" pos:line="153" pos:column="1">// Enable/disable crossthread dependency notifications</comment>
<decl_stmt><decl><type><specifier pos:line="154" pos:column="1">extern</specifier> <name pos:line="154" pos:column="8">LPCWSTR</name></type> <name pos:line="154" pos:column="16">metricCrossThreadDependencyNotification</name></decl>;</decl_stmt>

<comment type="line" pos:line="156" pos:column="1">// Managed engine activation</comment>
<decl_stmt><decl><type><specifier pos:line="157" pos:column="1">extern</specifier> <name pos:line="157" pos:column="8">LPCWSTR</name></type> <name pos:line="157" pos:column="16">metricEngineClass</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="158" pos:column="1">extern</specifier> <name pos:line="158" pos:column="8">LPCWSTR</name></type> <name pos:line="158" pos:column="16">metricEngineAssembly</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="159" pos:column="1">extern</specifier> <name pos:line="159" pos:column="8">LPCWSTR</name></type> <name pos:line="159" pos:column="16">metricProgramProviderClass</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="160" pos:column="1">extern</specifier> <name pos:line="160" pos:column="8">LPCWSTR</name></type> <name pos:line="160" pos:column="16">metricProgramProviderAssembly</name></decl>;</decl_stmt>

<comment type="line" pos:line="162" pos:column="1">// Predefined EE metric names</comment>
<comment type="line" pos:line="163" pos:column="1">// Engine</comment>
<decl_stmt><decl><type><specifier pos:line="164" pos:column="1">extern</specifier> <name pos:line="164" pos:column="8">LPCWSTR</name></type> <name pos:line="164" pos:column="16">metricEngine</name></decl>;</decl_stmt>
<comment type="line" pos:line="165" pos:column="1">// Preload Modules</comment>
<decl_stmt><decl><type><specifier pos:line="166" pos:column="1">extern</specifier> <name pos:line="166" pos:column="8">LPCWSTR</name></type> <name pos:line="166" pos:column="16">metricPreloadModules</name></decl>;</decl_stmt>
<comment type="line" pos:line="167" pos:column="1">// ThisObjectName</comment>
<decl_stmt><decl><type><specifier pos:line="168" pos:column="1">extern</specifier> <name pos:line="168" pos:column="8">LPCWSTR</name></type> <name pos:line="168" pos:column="16">metricThisObjectName</name></decl>;</decl_stmt>
<comment type="line" pos:line="169" pos:column="1">// HideGoToSource</comment>
<decl_stmt><decl><type><specifier pos:line="170" pos:column="1">extern</specifier> <name pos:line="170" pos:column="8">LPCWSTR</name></type> <name pos:line="170" pos:column="16">metricHideGoToSource</name></decl>;</decl_stmt>
<comment type="line" pos:line="171" pos:column="1">// HideGoToDisassembly</comment>
<decl_stmt><decl><type><specifier pos:line="172" pos:column="1">extern</specifier> <name pos:line="172" pos:column="8">LPCWSTR</name></type> <name pos:line="172" pos:column="16">metricHideGoToDisassembly</name></decl>;</decl_stmt>
<comment type="line" pos:line="173" pos:column="1">// HideRunToCursor</comment>
<decl_stmt><decl><type><specifier pos:line="174" pos:column="1">extern</specifier> <name pos:line="174" pos:column="8">LPCWSTR</name></type> <name pos:line="174" pos:column="16">metricHideRunToCursor</name></decl>;</decl_stmt>
<comment type="line" pos:line="175" pos:column="1">// HideBreakpointCommands</comment>
<decl_stmt><decl><type><specifier pos:line="176" pos:column="1">extern</specifier> <name pos:line="176" pos:column="8">LPCWSTR</name></type> <name pos:line="176" pos:column="16">metricHideCallStackBreakpoints</name></decl>;</decl_stmt>

<comment type="line" pos:line="178" pos:column="1">// Predefined EE Extension metric names</comment>
<comment type="line" pos:line="179" pos:column="1">// ExtensionDll</comment>
<decl_stmt><decl><type><specifier pos:line="180" pos:column="1">extern</specifier> <name pos:line="180" pos:column="8">LPCWSTR</name></type> <name pos:line="180" pos:column="16">metricExtensionDll</name></decl>;</decl_stmt>
<comment type="line" pos:line="181" pos:column="1">// RegistersSupported</comment>
<decl_stmt><decl><type><specifier pos:line="182" pos:column="1">extern</specifier> <name pos:line="182" pos:column="8">LPCWSTR</name></type> <name pos:line="182" pos:column="16">metricExtensionRegistersSupported</name></decl>;</decl_stmt>
<comment type="line" pos:line="183" pos:column="1">// RegistersEntryPoint</comment>
<decl_stmt><decl><type><specifier pos:line="184" pos:column="1">extern</specifier> <name pos:line="184" pos:column="8">LPCWSTR</name></type> <name pos:line="184" pos:column="16">metricExtensionRegistersEntryPoint</name></decl>;</decl_stmt>
<comment type="line" pos:line="185" pos:column="1">// TypesSupported</comment>
<decl_stmt><decl><type><specifier pos:line="186" pos:column="1">extern</specifier> <name pos:line="186" pos:column="8">LPCWSTR</name></type> <name pos:line="186" pos:column="16">metricExtensionTypesSupported</name></decl>;</decl_stmt>
<comment type="line" pos:line="187" pos:column="1">// TypesEntryPoint</comment>
<decl_stmt><decl><type><specifier pos:line="188" pos:column="1">extern</specifier> <name pos:line="188" pos:column="8">LPCWSTR</name></type> <name pos:line="188" pos:column="16">metricExtensionTypesEntryPoint</name></decl>;</decl_stmt>

<comment type="line" pos:line="190" pos:column="1">// Predefined PortSupplier metric names</comment>
<comment type="line" pos:line="191" pos:column="1">// PortPickerCLSID</comment>
<decl_stmt><decl><type><specifier pos:line="192" pos:column="1">extern</specifier> <name pos:line="192" pos:column="8">LPCWSTR</name></type> <name pos:line="192" pos:column="16">metricPortPickerCLSID</name></decl>;</decl_stmt>
<comment type="line" pos:line="193" pos:column="1">// DisallowUserEnteredPorts</comment>
<decl_stmt><decl><type><specifier pos:line="194" pos:column="1">extern</specifier> <name pos:line="194" pos:column="8">LPCWSTR</name></type> <name pos:line="194" pos:column="16">metricDisallowUserEnteredPorts</name></decl>;</decl_stmt>
<comment type="line" pos:line="195" pos:column="1">// PidBase</comment>
<decl_stmt><decl><type><specifier pos:line="196" pos:column="1">extern</specifier> <name pos:line="196" pos:column="8">LPCWSTR</name></type> <name pos:line="196" pos:column="16">metricPidBase</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">ifndef</cpp:directive> <name pos:line="199" pos:column="9">NO_DBGMETRIC</name></cpp:ifndef> <comment type="line" pos:line="199" pos:column="22">// if NO_DBGMETIC is defined, don't include functions</comment>

<comment type="line" pos:line="201" pos:column="1">// ------------------------------------------------------------------</comment>
<comment type="line" pos:line="202" pos:column="1">// Engine-specific metric routines</comment>

<decl_stmt><decl><type><name pos:line="204" pos:column="1">HRESULT</name> <name pos:line="204" pos:column="9">__stdcall</name></type> <name pos:line="204" pos:column="19">EnumDebugEngines</name><argument_list pos:line="204" pos:column="35">(<argument><expr><name pos:line="204" pos:column="36">LPCWSTR</name> <name pos:line="204" pos:column="44">pszMachine</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="56">REFGUID</name> <name pos:line="204" pos:column="64">guidPortSupplier</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="82">BOOL</name> <name pos:line="204" pos:column="87">fRequireRemoteDebugging</name></expr></argument>, <argument><expr><macro><name pos:line="204" pos:column="112">_Out_opt_cap_post_count_</name><argument_list pos:line="204" pos:column="136">(<argument pos:line="204" pos:column="137">*pdwSize</argument>, <argument pos:line="204" pos:column="147">*pdwSize</argument>)</argument_list></macro> <name pos:line="204" pos:column="157">GUID</name><op:operator pos:line="204" pos:column="161">*</op:operator> <name pos:line="204" pos:column="163">rgguidEngines</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="178">_Out_</name> <name pos:line="204" pos:column="184">DWORD</name><op:operator pos:line="204" pos:column="189">*</op:operator> <name pos:line="204" pos:column="191">pdwSize</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="200">LPCWSTR</name> <name pos:line="204" pos:column="208">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<cpp:endif pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="206" pos:column="8">// end ifndef NO_DBGMETRIC</comment>



<cpp:ifndef pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">ifndef</cpp:directive> <name pos:line="210" pos:column="9">NO_DBGMETRIC</name></cpp:ifndef> <comment type="line" pos:line="210" pos:column="22">// if NO_DBGMETIC is defined, don't include functions</comment>

<comment type="line" pos:line="212" pos:column="1">// ------------------------------------------------------------------</comment>
<comment type="line" pos:line="213" pos:column="1">// EE-specific metric routines</comment>

<function_decl><type><name pos:line="215" pos:column="1">HRESULT</name> <name pos:line="215" pos:column="9">__stdcall</name></type> <name pos:line="215" pos:column="19">GetEEMetric</name><parameter_list pos:line="215" pos:column="30">(<param><decl><type><name pos:line="215" pos:column="31">REFGUID</name></type> <name pos:line="215" pos:column="39">guidLang</name></decl></param>, <param><decl><type><name pos:line="215" pos:column="49">REFGUID</name></type> <name pos:line="215" pos:column="57">guidVendor</name></decl></param>, <param><decl><type><name pos:line="215" pos:column="69">LPCWSTR</name></type> <name pos:line="215" pos:column="77">pszMetric</name></decl></param>, <param><decl><type><name pos:line="215" pos:column="88">_Out_</name> <name pos:line="215" pos:column="94">DWORD</name><type:modifier pos:line="215" pos:column="99">*</type:modifier></type> <name pos:line="215" pos:column="101">pdwValue</name></decl></param>, <param><decl><type><name pos:line="215" pos:column="111">LPCWSTR</name></type> <name pos:line="215" pos:column="119">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="216" pos:column="1">HRESULT</name> <name pos:line="216" pos:column="9">__stdcall</name></type> <name pos:line="216" pos:column="19">GetEEMetric</name><parameter_list pos:line="216" pos:column="30">(<param><decl><type><name pos:line="216" pos:column="31">REFGUID</name></type> <name pos:line="216" pos:column="39">guidLang</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="49">REFGUID</name></type> <name pos:line="216" pos:column="57">guidVendor</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="69">LPCWSTR</name></type> <name pos:line="216" pos:column="77">pszMetric</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="88">BSTR</name><type:modifier pos:line="216" pos:column="92">*</type:modifier></type> <name pos:line="216" pos:column="94">pbstrValue</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="106">LPCWSTR</name></type> <name pos:line="216" pos:column="114">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="217" pos:column="1">HRESULT</name> <name pos:line="217" pos:column="9">__stdcall</name></type> <name pos:line="217" pos:column="19">GetEEMetric</name><parameter_list pos:line="217" pos:column="30">(<param><decl><type><name pos:line="217" pos:column="31">REFGUID</name></type> <name pos:line="217" pos:column="39">guidLang</name></decl></param>, <param><decl><type><name pos:line="217" pos:column="49">REFGUID</name></type> <name pos:line="217" pos:column="57">guidVendor</name></decl></param>, <param><decl><type><name pos:line="217" pos:column="69">LPCWSTR</name></type> <name pos:line="217" pos:column="77">pszMetric</name></decl></param>, <param><decl><type><name pos:line="217" pos:column="88">_Out_</name> <name pos:line="217" pos:column="94">GUID</name><type:modifier pos:line="217" pos:column="98">*</type:modifier></type> <name pos:line="217" pos:column="100">pguidValue</name></decl></param>, <param><decl><type><name pos:line="217" pos:column="112">LPCWSTR</name></type> <name pos:line="217" pos:column="120">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name pos:line="218" pos:column="1">HRESULT</name> <name pos:line="218" pos:column="9">__stdcall</name></type> <name pos:line="218" pos:column="19">GetEEMetric</name><argument_list pos:line="218" pos:column="30">(<argument><expr><name pos:line="218" pos:column="31">REFGUID</name> <name pos:line="218" pos:column="39">guidLang</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="49">REFGUID</name> <name pos:line="218" pos:column="57">guidVendor</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="69">LPCWSTR</name> <name pos:line="218" pos:column="77">pszMetric</name></expr></argument>, <argument><expr><macro><name pos:line="218" pos:column="88">_Out_opt_cap_post_count_</name><argument_list pos:line="218" pos:column="112">(<argument pos:line="218" pos:column="113">*pdwSize</argument>, <argument pos:line="218" pos:column="123">*pdwSize</argument>)</argument_list></macro> <name pos:line="218" pos:column="133">GUID</name><op:operator pos:line="218" pos:column="137">*</op:operator> <name pos:line="218" pos:column="139">rgguidValues</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="153">_Out_</name> <name pos:line="218" pos:column="159">DWORD</name><op:operator pos:line="218" pos:column="164">*</op:operator> <name pos:line="218" pos:column="166">pdwSize</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="175">LPCWSTR</name> <name pos:line="218" pos:column="183">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name pos:line="220" pos:column="1">HRESULT</name> <name pos:line="220" pos:column="9">__stdcall</name></type> <name pos:line="220" pos:column="19">SetEEMetric</name><parameter_list pos:line="220" pos:column="30">(<param><decl><type><name pos:line="220" pos:column="31">REFGUID</name></type> <name pos:line="220" pos:column="39">guidLang</name></decl></param>, <param><decl><type><name pos:line="220" pos:column="49">REFGUID</name></type> <name pos:line="220" pos:column="57">guidVendor</name></decl></param>, <param><decl><type><name pos:line="220" pos:column="69">LPCWSTR</name></type> <name pos:line="220" pos:column="77">pszMetric</name></decl></param>, <param><decl><type><name pos:line="220" pos:column="88">DWORD</name></type> <name pos:line="220" pos:column="94">dwValue</name></decl></param>, <param><decl><type><name pos:line="220" pos:column="103">LPCWSTR</name></type> <name pos:line="220" pos:column="111">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="221" pos:column="1">HRESULT</name> <name pos:line="221" pos:column="9">__stdcall</name></type> <name pos:line="221" pos:column="19">SetEEMetric</name><parameter_list pos:line="221" pos:column="30">(<param><decl><type><name pos:line="221" pos:column="31">REFGUID</name></type> <name pos:line="221" pos:column="39">guidLang</name></decl></param>, <param><decl><type><name pos:line="221" pos:column="49">REFGUID</name></type> <name pos:line="221" pos:column="57">guidVendor</name></decl></param>, <param><decl><type><name pos:line="221" pos:column="69">LPCWSTR</name></type> <name pos:line="221" pos:column="77">pszMetric</name></decl></param>, <param><decl><type><name pos:line="221" pos:column="88">LPCWSTR</name></type> <name pos:line="221" pos:column="96">pszValue</name></decl></param>, <param><decl><type><name pos:line="221" pos:column="106">LPCWSTR</name></type> <name pos:line="221" pos:column="114">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="222" pos:column="1">HRESULT</name> <name pos:line="222" pos:column="9">__stdcall</name></type> <name pos:line="222" pos:column="19">SetEEMetric</name><parameter_list pos:line="222" pos:column="30">(<param><decl><type><name pos:line="222" pos:column="31">REFGUID</name></type> <name pos:line="222" pos:column="39">guidLang</name></decl></param>, <param><decl><type><name pos:line="222" pos:column="49">REFGUID</name></type> <name pos:line="222" pos:column="57">guidVendor</name></decl></param>, <param><decl><type><name pos:line="222" pos:column="69">LPCWSTR</name></type> <name pos:line="222" pos:column="77">pszMetric</name></decl></param>, <param><decl><type><name pos:line="222" pos:column="88">REFGUID</name></type> <name pos:line="222" pos:column="96">guidValue</name></decl></param>, <param><decl><type><name pos:line="222" pos:column="107">LPCWSTR</name></type> <name pos:line="222" pos:column="115">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name pos:line="223" pos:column="1">HRESULT</name> <name pos:line="223" pos:column="9">__stdcall</name></type> <name pos:line="223" pos:column="19">SetEEMetric</name><argument_list pos:line="223" pos:column="30">(<argument><expr><name pos:line="223" pos:column="31">REFGUID</name> <name pos:line="223" pos:column="39">guidLang</name></expr></argument>, <argument><expr><name pos:line="223" pos:column="49">REFGUID</name> <name pos:line="223" pos:column="57">guidVendor</name></expr></argument>, <argument><expr><name pos:line="223" pos:column="69">LPCWSTR</name> <name pos:line="223" pos:column="77">pszMetric</name></expr></argument>, <argument><expr><macro><name pos:line="223" pos:column="88">_In_count_</name><argument_list pos:line="223" pos:column="98">(<argument pos:line="223" pos:column="99">dwSize</argument>)</argument_list></macro> const <name pos:line="223" pos:column="113">GUID</name><op:operator pos:line="223" pos:column="117">*</op:operator> <name pos:line="223" pos:column="119">rgguidValues</name></expr></argument>, <argument><expr><name pos:line="223" pos:column="133">DWORD</name> <name pos:line="223" pos:column="139">dwSize</name></expr></argument>, <argument><expr><name pos:line="223" pos:column="147">LPCWSTR</name> <name pos:line="223" pos:column="155">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="225" pos:column="1">HRESULT</name> <name pos:line="225" pos:column="9">__stdcall</name></type> <name pos:line="225" pos:column="19">EnumEEs</name><argument_list pos:line="225" pos:column="26">(<argument><expr><macro><name pos:line="225" pos:column="27">_Out_opt_cap_post_count_</name><argument_list pos:line="225" pos:column="51">(<argument pos:line="225" pos:column="52">*pdwSize</argument>, <argument pos:line="225" pos:column="62">*pdwSize</argument>)</argument_list></macro> <name pos:line="225" pos:column="72">GUID</name><op:operator pos:line="225" pos:column="76">*</op:operator> <name pos:line="225" pos:column="78">rgguidLang</name></expr></argument>, <argument><expr><macro><name pos:line="225" pos:column="90">_Out_opt_cap_post_count_</name><argument_list pos:line="225" pos:column="114">(<argument pos:line="225" pos:column="115">*pdwSize</argument>, <argument pos:line="225" pos:column="125">*pdwSize</argument>)</argument_list></macro> <name pos:line="225" pos:column="135">GUID</name><op:operator pos:line="225" pos:column="139">*</op:operator> <name pos:line="225" pos:column="141">rgguidVendor</name></expr></argument>, <argument><expr><name pos:line="225" pos:column="155">_Out_</name> <name pos:line="225" pos:column="161">DWORD</name><op:operator pos:line="225" pos:column="166">*</op:operator> <name pos:line="225" pos:column="168">pdwSize</name></expr></argument>, <argument><expr><name pos:line="225" pos:column="177">LPCWSTR</name> <name pos:line="225" pos:column="185">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name pos:line="227" pos:column="1">HRESULT</name> <name pos:line="227" pos:column="9">__stdcall</name></type> <name pos:line="227" pos:column="19">RemoveEEMetric</name><parameter_list pos:line="227" pos:column="33">(<param><decl><type><name pos:line="227" pos:column="34">REFGUID</name></type> <name pos:line="227" pos:column="42">guidLang</name></decl></param>, <param><decl><type><name pos:line="227" pos:column="52">REFGUID</name></type> <name pos:line="227" pos:column="60">guidVendor</name></decl></param>, <param><decl><type><name pos:line="227" pos:column="72">LPCWSTR</name></type> <name pos:line="227" pos:column="80">pszMetric</name></decl></param>, <param><decl><type><name pos:line="227" pos:column="91">LPCWSTR</name></type> <name pos:line="227" pos:column="99">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name pos:line="229" pos:column="1">HRESULT</name> <name pos:line="229" pos:column="9">__stdcall</name></type> <name pos:line="229" pos:column="19">GetEEMetricFile</name><parameter_list pos:line="229" pos:column="34">(<param><decl><type><name pos:line="229" pos:column="35">REFGUID</name></type> <name pos:line="229" pos:column="43">guidLang</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="53">REFGUID</name></type> <name pos:line="229" pos:column="61">guidVendor</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="73">LPCWSTR</name></type> <name pos:line="229" pos:column="81">pszMetric</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="92">BSTR</name><type:modifier pos:line="229" pos:column="96">*</type:modifier></type> <name pos:line="229" pos:column="98">pbstrValue</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="110">LPCWSTR</name></type> <name pos:line="229" pos:column="118">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="231" pos:column="8">// end ifndef NO_DBGMETRIC</comment>



<cpp:ifndef pos:line="235" pos:column="1">#<cpp:directive pos:line="235" pos:column="2">ifndef</cpp:directive> <name pos:line="235" pos:column="9">NO_DBGMETRIC</name></cpp:ifndef> <comment type="line" pos:line="235" pos:column="22">// if NO_DBGMETIC is defined, don't include functions</comment>

<comment type="line" pos:line="237" pos:column="1">// ------------------------------------------------------------------</comment>
<comment type="line" pos:line="238" pos:column="1">// SP-specific metric routines</comment>

<function_decl><type><name pos:line="240" pos:column="1">HRESULT</name> <name pos:line="240" pos:column="9">__stdcall</name></type> <name pos:line="240" pos:column="19">GetSPMetric</name><parameter_list pos:line="240" pos:column="30">(<param><decl><type><name pos:line="240" pos:column="31">REFGUID</name></type> <name pos:line="240" pos:column="39">guidSymbolType</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="55">LPCWSTR</name></type> <name pos:line="240" pos:column="63">pszStoreType</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="77">LPCWSTR</name></type> <name pos:line="240" pos:column="85">pszMetric</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="96">BSTR</name><type:modifier pos:line="240" pos:column="100">*</type:modifier></type> <name pos:line="240" pos:column="102">pbstrValue</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="114">LPCWSTR</name></type> <name pos:line="240" pos:column="122">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="241" pos:column="1">HRESULT</name> <name pos:line="241" pos:column="9">__stdcall</name></type> <name pos:line="241" pos:column="19">GetSPMetric</name><parameter_list pos:line="241" pos:column="30">(<param><decl><type><name pos:line="241" pos:column="31">REFGUID</name></type> <name pos:line="241" pos:column="39">guidSymbolType</name></decl></param>, <param><decl><type><name pos:line="241" pos:column="55">LPCWSTR</name></type> <name pos:line="241" pos:column="63">pszStoreType</name></decl></param>, <param><decl><type><name pos:line="241" pos:column="77">LPCWSTR</name></type> <name pos:line="241" pos:column="85">pszMetric</name></decl></param>, <param><decl><type><name pos:line="241" pos:column="96">_Out_</name> <name pos:line="241" pos:column="102">GUID</name><type:modifier pos:line="241" pos:column="106">*</type:modifier></type> <name pos:line="241" pos:column="108">pguidValue</name></decl></param>, <param><decl><type><name pos:line="241" pos:column="120">LPCWSTR</name></type> <name pos:line="241" pos:column="128">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name pos:line="243" pos:column="1">HRESULT</name> <name pos:line="243" pos:column="9">__stdcall</name></type> <name pos:line="243" pos:column="19">SetSPMetric</name><parameter_list pos:line="243" pos:column="30">(<param><decl><type><name pos:line="243" pos:column="31">REFGUID</name></type> <name pos:line="243" pos:column="39">guidSymbolType</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="55">LPCWSTR</name></type> <name pos:line="243" pos:column="63">pszStoreType</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="77">LPCWSTR</name></type> <name pos:line="243" pos:column="85">pszMetric</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="96">LPCWSTR</name></type> <name pos:line="243" pos:column="104">pszValue</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="114">LPCWSTR</name></type> <name pos:line="243" pos:column="122">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="244" pos:column="1">HRESULT</name> <name pos:line="244" pos:column="9">__stdcall</name></type> <name pos:line="244" pos:column="19">SetSPMetric</name><parameter_list pos:line="244" pos:column="30">(<param><decl><type><name pos:line="244" pos:column="31">REFGUID</name></type> <name pos:line="244" pos:column="39">guidSymbolType</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="55">LPCWSTR</name></type> <name pos:line="244" pos:column="63">pszStoreType</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="77">LPCWSTR</name></type> <name pos:line="244" pos:column="85">pszMetric</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="96">REFGUID</name></type> <name pos:line="244" pos:column="104">guidValue</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="115">LPCWSTR</name></type> <name pos:line="244" pos:column="123">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name pos:line="246" pos:column="1">HRESULT</name> <name pos:line="246" pos:column="9">__stdcall</name></type> <name pos:line="246" pos:column="19">RemoveSPMetric</name><parameter_list pos:line="246" pos:column="33">(<param><decl><type><name pos:line="246" pos:column="34">REFGUID</name></type> <name pos:line="246" pos:column="42">guidSymbolType</name></decl></param>, <param><decl><type><name pos:line="246" pos:column="58">LPCWSTR</name></type> <name pos:line="246" pos:column="66">pszStoreType</name></decl></param>, <param><decl><type><name pos:line="246" pos:column="80">LPCWSTR</name></type> <name pos:line="246" pos:column="88">pszMetric</name></decl></param>, <param><decl><type><name pos:line="246" pos:column="99">LPCWSTR</name></type> <name pos:line="246" pos:column="107">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="248" pos:column="8">// end ifndef NO_DBGMETRIC</comment>



<comment type="line" pos:line="252" pos:column="1">// Predefined SP store types</comment>
<comment type="line" pos:line="253" pos:column="1">// "file"</comment>
<decl_stmt><decl><type><specifier pos:line="254" pos:column="1">extern</specifier> <name pos:line="254" pos:column="8">LPCWSTR</name></type> <name pos:line="254" pos:column="16">storetypeFile</name></decl>;</decl_stmt>
<comment type="line" pos:line="255" pos:column="1">// "metadata"</comment>
<decl_stmt><decl><type><specifier pos:line="256" pos:column="1">extern</specifier> <name pos:line="256" pos:column="8">LPCWSTR</name></type> <name pos:line="256" pos:column="16">storetypeMetadata</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">ifndef</cpp:directive> <name pos:line="259" pos:column="9">NO_DBGMETRIC</name></cpp:ifndef> <comment type="line" pos:line="259" pos:column="22">// if NO_DBGMETIC is defined, don't include functions</comment>

<comment type="line" pos:line="261" pos:column="1">// ------------------------------------------------------------------</comment>
<comment type="line" pos:line="262" pos:column="1">// Exception metric routines</comment>

<function_decl><type><name pos:line="264" pos:column="1">HRESULT</name> <name pos:line="264" pos:column="9">__stdcall</name></type> <name pos:line="264" pos:column="19">GetExceptionMetric</name><parameter_list pos:line="264" pos:column="37">(<param><decl><type><name pos:line="264" pos:column="38">REFGUID</name></type> <name pos:line="264" pos:column="46">guidType</name></decl></param>, <param><decl><type><name pos:line="264" pos:column="56">LPCWSTR</name></type> <name pos:line="264" pos:column="64">pszException</name></decl></param>, <param><decl><type><name pos:line="264" pos:column="78">_Out_opt_</name> <name pos:line="264" pos:column="88">DWORD</name><type:modifier pos:line="264" pos:column="93">*</type:modifier></type> <name pos:line="264" pos:column="95">pdwState</name></decl></param>, <param><decl><type><name pos:line="264" pos:column="105">_Out_opt_</name> <name pos:line="264" pos:column="115">DWORD</name><type:modifier pos:line="264" pos:column="120">*</type:modifier></type> <name pos:line="264" pos:column="122">pdwCode</name></decl></param>, <param><decl><type><name pos:line="264" pos:column="131">LPCWSTR</name></type> <name pos:line="264" pos:column="139">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name pos:line="266" pos:column="1">HRESULT</name> <name pos:line="266" pos:column="9">__stdcall</name></type> <name pos:line="266" pos:column="19">SetExceptionMetric</name><parameter_list pos:line="266" pos:column="37">(<param><decl><type><name pos:line="266" pos:column="38">REFGUID</name></type> <name pos:line="266" pos:column="46">guidType</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="56">LPCWSTR</name></type> <name pos:line="266" pos:column="64">pszParent</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="75">LPCWSTR</name></type> <name pos:line="266" pos:column="83">pszException</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="97">DWORD</name></type> <name pos:line="266" pos:column="103">dwState</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="112">DWORD</name></type> <name pos:line="266" pos:column="118">dwCode</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="126">LPCWSTR</name></type> <name pos:line="266" pos:column="134">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name pos:line="268" pos:column="1">HRESULT</name> <name pos:line="268" pos:column="9">__stdcall</name></type> <name pos:line="268" pos:column="19">EnumExceptionMetrics</name><argument_list pos:line="268" pos:column="39">(<argument><expr><name pos:line="268" pos:column="40">REFGUID</name> <name pos:line="268" pos:column="48">guidType</name></expr></argument>, <argument><expr><name pos:line="268" pos:column="58">LPCWSTR</name> <name pos:line="268" pos:column="66">pszParent</name></expr></argument>, <argument><expr><macro><name pos:line="268" pos:column="77">_Out_opt_cap_post_count_</name><argument_list pos:line="268" pos:column="101">(<argument pos:line="268" pos:column="102">*pdwSize</argument>, <argument pos:line="268" pos:column="112">*pdwSize</argument>)</argument_list></macro> <name pos:line="268" pos:column="122">BSTR</name><op:operator pos:line="268" pos:column="126">*</op:operator> <name pos:line="268" pos:column="128">rgbstrExceptions</name></expr></argument>, <argument><expr><macro><name pos:line="268" pos:column="146">_Out_opt_cap_post_count_</name><argument_list pos:line="268" pos:column="170">(<argument pos:line="268" pos:column="171">*pdwSize</argument>, <argument pos:line="268" pos:column="181">*pdwSize</argument>)</argument_list></macro> <name pos:line="268" pos:column="191">DWORD</name><op:operator pos:line="268" pos:column="196">*</op:operator> <name pos:line="268" pos:column="198">rgdwState</name></expr></argument>, <argument><expr><macro><name pos:line="268" pos:column="209">_Out_opt_cap_post_count_</name><argument_list pos:line="268" pos:column="233">(<argument pos:line="268" pos:column="234">*pdwSize</argument>, <argument pos:line="268" pos:column="244">*pdwSize</argument>)</argument_list></macro> <name pos:line="268" pos:column="254">DWORD</name><op:operator pos:line="268" pos:column="259">*</op:operator> <name pos:line="268" pos:column="261">rgdwCode</name></expr></argument>, <argument><expr><name pos:line="268" pos:column="271">_Out_</name> <name pos:line="268" pos:column="277">DWORD</name><op:operator pos:line="268" pos:column="282">*</op:operator> <name pos:line="268" pos:column="284">pdwSize</name></expr></argument>, <argument><expr><name pos:line="268" pos:column="293">LPCWSTR</name> <name pos:line="268" pos:column="301">pszAltRoot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name pos:line="270" pos:column="1">HRESULT</name> <name pos:line="270" pos:column="9">__stdcall</name></type> <name pos:line="270" pos:column="19">RemoveExceptionMetric</name><parameter_list pos:line="270" pos:column="40">(<param><decl><type><name pos:line="270" pos:column="41">REFGUID</name></type> <name pos:line="270" pos:column="49">guidType</name></decl></param>, <param><decl><type><name pos:line="270" pos:column="59">LPCWSTR</name></type> <name pos:line="270" pos:column="67">pszParent</name></decl></param>, <param><decl><type><name pos:line="270" pos:column="78">LPCWSTR</name></type> <name pos:line="270" pos:column="86">pszException</name></decl></param>, <param><decl><type><name pos:line="270" pos:column="100">LPCWSTR</name></type> <name pos:line="270" pos:column="108">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="271" pos:column="1">HRESULT</name> <name pos:line="271" pos:column="9">__stdcall</name></type> <name pos:line="271" pos:column="19">RemoveAllExceptionMetrics</name><parameter_list pos:line="271" pos:column="44">(<param><decl><type><name pos:line="271" pos:column="45">REFGUID</name></type> <name pos:line="271" pos:column="53">guidType</name></decl></param>, <param><decl><type><name pos:line="271" pos:column="63">LPCWSTR</name></type> <name pos:line="271" pos:column="71">pszAltRoot</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="273" pos:column="8">// end ifndef NO_DBGMETRIC</comment>


<cpp:endif pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="276" pos:column="8">// __METRIC_H__</comment>
</unit>
