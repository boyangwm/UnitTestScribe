<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\office10\msosdm.h" pos:tabs="8"><cpp:pragma pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">pragma</cpp:directive> once</cpp:pragma>

<comment type="block" pos:line="3" pos:column="1">/*------------------------------------------------------------------------*
 * msosdm.h (previously known as sdm.h): SDM Main PUBLIC include file.    *
 *                                                                        *
 * Please do not modify or check in this file without contacting MsoSdmQs.*
 *------------------------------------------------------------------------*/</comment>


<comment type="line" pos:line="10" pos:column="1">//----------------------------------------------------------------------//</comment>
<comment type="line" pos:line="11" pos:column="1">// #IFDEF       Use when...</comment>
<comment type="line" pos:line="12" pos:column="1">// ------------ ----------------------------------------</comment>
<comment type="line" pos:line="13" pos:column="1">// WIN32        Always true	for WIN</comment>
<comment type="line" pos:line="14" pos:column="1">// DEBUG</comment>
<comment type="line" pos:line="15" pos:column="1">// TSMTE        FE version</comment>
<comment type="line" pos:line="16" pos:column="1">//</comment>
<comment type="line" pos:line="17" pos:column="1">//----------------------------------------------------------------------//</comment>

<cpp:ifndef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifndef</cpp:directive>	<name pos:line="19" pos:column="9">SDM_INCLUDED</name></cpp:ifndef>	<comment type="line" pos:line="19" pos:column="25">// Entire file.</comment>
<cpp:define pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="20" pos:column="9">SDM_INCLUDED</name></cpp:macro></cpp:define>

<cpp:include pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">include</cpp:directive> <cpp:file pos:line="22" pos:column="10">&lt;msostd.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">include</cpp:directive> <cpp:file pos:line="23" pos:column="10">&lt;msouser.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">include</cpp:directive> <cpp:file pos:line="24" pos:column="10">&lt;msoswct.h&gt;</cpp:file></cpp:include>
<cpp:define pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="25" pos:column="9">SDMPUBLIC</name></cpp:macro> <cpp:value pos:line="25" pos:column="19">MSOAPICALLTYPE</cpp:value></cpp:define>

<comment type="line" pos:line="27" pos:column="1">//============================</comment>
<comment type="line" pos:line="28" pos:column="1">// who's not defined?</comment>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef</cpp:directive> <name pos:line="29" pos:column="8">SDM_TYPES_DEFINED</name></cpp:ifdef>
<cpp:error pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">error</cpp:directive></cpp:error>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef</cpp:directive> <name pos:line="32" pos:column="8">DBCS</name></cpp:ifdef>
<comment type="line" pos:line="33" pos:column="1">// REVIEW KirkG: DBCS is not defined for Mso.  It is defined for Word</comment>
<comment type="line" pos:line="34" pos:column="1">//  (in word.h), but I don't think anything in Word's build uses it.</comment>
<comment type="line" pos:line="35" pos:column="1">// What does this mean for its use in the TMW struct below?  Does the </comment>
<comment type="line" pos:line="36" pos:column="1">//   client indeed allocate those things?</comment>
<comment type="line" pos:line="37" pos:column="1">//#error</comment>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif>
<comment type="line" pos:line="39" pos:column="1">// who's already defined?</comment>
<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef</cpp:directive> <name pos:line="40" pos:column="9">SDM_WCT_DEFINED</name></cpp:ifndef>
<cpp:error pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">error</cpp:directive></cpp:error>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif</cpp:directive></cpp:endif>
<comment type="line" pos:line="43" pos:column="1">//============================</comment>

<comment type="line" format="doxygen" pos:line="45" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="46" pos:column="1">// Standard types and values.						     </comment>

<cpp:ifndef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifndef</cpp:directive> <name pos:line="48" pos:column="9">CSTD_H</name></cpp:ifndef>
<typedef pos:line="49" pos:column="1">typedef	<type><name pos:line="49" pos:column="9">char</name> <type:modifier pos:line="49" pos:column="14">*</type:modifier></type> <name pos:line="49" pos:column="16">LSZ</name>;</typedef>
<typedef pos:line="50" pos:column="1">typedef <type><name pos:line="50" pos:column="9">char</name> <type:modifier pos:line="50" pos:column="14">*</type:modifier></type> <name pos:line="50" pos:column="16">SZ</name>;</typedef>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif</cpp:directive></cpp:endif>
<typedef pos:line="52" pos:column="1">typedef <type><name pos:line="52" pos:column="9">WCHAR</name> <type:modifier pos:line="52" pos:column="15">*</type:modifier></type> <name pos:line="52" pos:column="17">LWZ</name>;</typedef>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">WCHAR</name> <type:modifier pos:line="53" pos:column="15">*</type:modifier></type>	<name pos:line="53" pos:column="17">WZ</name>;</typedef>

<typedef pos:line="55" pos:column="1">typedef <type><specifier pos:line="55" pos:column="9">const</specifier> <name pos:line="55" pos:column="15">char</name> <type:modifier pos:line="55" pos:column="20">*</type:modifier></type> <name pos:line="55" pos:column="22">CONST_SZ</name>;</typedef>
<typedef pos:line="56" pos:column="1">typedef <type><specifier pos:line="56" pos:column="9">const</specifier> <name pos:line="56" pos:column="15">WCHAR</name> <type:modifier pos:line="56" pos:column="21">*</type:modifier></type> <name pos:line="56" pos:column="23">CONST_WZ</name>;</typedef>

<cpp:ifndef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifndef</cpp:directive>	<name pos:line="58" pos:column="9">SDM_TYPES_DEFINED</name></cpp:ifndef>
<cpp:define pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="59" pos:column="9">SDM_TYPES_DEFINED</name></cpp:macro></cpp:define>
<typedef pos:line="60" pos:column="1">typedef	<type><name pos:line="60" pos:column="9">unsigned</name> <name pos:line="60" pos:column="18">char</name></type>	<name pos:line="60" pos:column="25">U8_SDM</name>;</typedef>
<typedef pos:line="61" pos:column="1">typedef	<type><name pos:line="61" pos:column="9">char</name></type>		<name pos:line="61" pos:column="25">S8_SDM</name>;</typedef>
<typedef pos:line="62" pos:column="1">typedef	<type><name pos:line="62" pos:column="9">unsigned</name> <name pos:line="62" pos:column="18">short</name></type>	<name pos:line="62" pos:column="25">U16_SDM</name>;</typedef>
<typedef pos:line="63" pos:column="1">typedef	<type><name pos:line="63" pos:column="9">short</name></type>		<name pos:line="63" pos:column="25">S16_SDM</name>;</typedef>
<typedef pos:line="64" pos:column="1">typedef	<type><name pos:line="64" pos:column="9">unsigned</name> <name pos:line="64" pos:column="18">short</name></type>	<name pos:line="64" pos:column="25">BIT_SDM</name>;</typedef>	<comment type="line" pos:line="64" pos:column="41">// short ==&gt; better packing in Win32</comment>


<comment type="line" pos:line="67" pos:column="1">// AKadatch: all these types hold pointers</comment>
<comment type="line" pos:line="68" pos:column="1">// typedef	long		S32_SDM;</comment>
<comment type="line" pos:line="69" pos:column="1">// typedef	unsigned long	U32_SDM;</comment>
<comment type="line" pos:line="70" pos:column="1">// typedef int INT_SDM;</comment>
<comment type="line" pos:line="71" pos:column="1">// typedef unsigned int UINT_SDM;</comment>
<comment type="line" pos:line="72" pos:column="1">// typedef	unsigned long	BARG_SDM;</comment>


<comment type="line" pos:line="75" pos:column="1">// AKadatch: some apps use obsolete and/or modified WinNT.h</comment>
<comment type="line" pos:line="76" pos:column="1">// *_PTR types should be declared manually</comment>
<cpp:include pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">include</cpp:directive> <cpp:file pos:line="77" pos:column="10">&lt;basetsd.h&gt;</cpp:file></cpp:include>

<typedef pos:line="79" pos:column="1">typedef	<type><name pos:line="79" pos:column="9">LONG_PTR</name></type>	<name pos:line="79" pos:column="25">S32_SDM</name>;</typedef>
<typedef pos:line="80" pos:column="1">typedef	<type><name pos:line="80" pos:column="9">ULONG_PTR</name></type>	<name pos:line="80" pos:column="25">U32_SDM</name>;</typedef>
<typedef pos:line="81" pos:column="1">typedef <type><name pos:line="81" pos:column="9">INT_PTR</name></type>		<name pos:line="81" pos:column="25">INT_SDM</name>;</typedef>
<typedef pos:line="82" pos:column="1">typedef <type><name pos:line="82" pos:column="9">UINT_PTR</name></type>	<name pos:line="82" pos:column="25">UINT_SDM</name>;</typedef>
<typedef pos:line="83" pos:column="1">typedef	<type><name pos:line="83" pos:column="9">ULONG_PTR</name></type>	<name pos:line="83" pos:column="25">BARG_SDM</name>;</typedef>

<comment type="line" pos:line="85" pos:column="1">//FEH: typedef short INT_SDM;</comment>
<comment type="line" pos:line="86" pos:column="1">//FEH: typedef unsigned short UINT_SDM;</comment>
<typedef pos:line="87" pos:column="1">typedef <type><name pos:line="87" pos:column="9">UINT_SDM</name></type> <name pos:line="87" pos:column="18">UCAB_SDM</name>;</typedef>	<comment type="line" pos:line="87" pos:column="33">//cab arg</comment>
<typedef pos:line="88" pos:column="1">typedef <type><name pos:line="88" pos:column="9">UINT_SDM</name></type> <name pos:line="88" pos:column="18">UCBK_SDM</name>;</typedef>	<comment type="line" pos:line="88" pos:column="33">//callback parameter/return</comment>

<comment type="line" pos:line="90" pos:column="1">// FUTURE Should we change Win to also define ILBE_SDM as INT_SDM?</comment>
<comment type="line" pos:line="91" pos:column="1">//</comment>
<comment type="line" pos:line="92" pos:column="1">// The Mac needsILBE_SDM to signed, since ilbeFirst can be &lt; 0 in</comment>
<comment type="line" pos:line="93" pos:column="1">// droplists, since there can be blank list items above the first</comment>
<comment type="line" pos:line="94" pos:column="1">// real list item.  However changing ILBE_SDM to INT_SDM on the</comment>
<comment type="line" pos:line="95" pos:column="1">// Windows side caused problems in WinWord16, since ilbeNil was</comment>
<comment type="line" pos:line="96" pos:column="1">// being sign-extended in longs in some structures.  I tried to </comment>
<comment type="line" pos:line="97" pos:column="1">// change ilbeNil and uNinchList to 0x7fff but ran into many places </comment>
<comment type="line" pos:line="98" pos:column="1">// which hard-coded returning -1 instead of ilbeNil or that counted </comment>
<comment type="line" pos:line="99" pos:column="1">// on ilbeNil+1==0</comment>
<typedef pos:line="100" pos:column="1">typedef <type><name pos:line="100" pos:column="9">UINT_SDM</name></type> <name pos:line="100" pos:column="18">ILBE_SDM</name>;</typedef>  <comment type="line" pos:line="100" pos:column="29">// first entry in listbox</comment>

<typedef pos:line="102" pos:column="1">typedef <type><name pos:line="102" pos:column="9">int</name></type> <name pos:line="102" pos:column="13">BOOL_SDM</name>;</typedef>	<comment type="line" pos:line="102" pos:column="25">//BOOL</comment>

<typedef pos:line="104" pos:column="1">typedef <type><name pos:line="104" pos:column="9">int</name></type> <name pos:line="104" pos:column="13">XY_SDM</name>;</typedef>		<comment type="line" pos:line="104" pos:column="33">//screen coordinate</comment>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif</cpp:directive></cpp:endif>	<comment type="line" pos:line="105" pos:column="9">//SDM_TYPES_DEFINED</comment>
<comment type="line" format="doxygen" pos:line="106" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="107" pos:column="1">//	Function storage class.</comment>

<cpp:define pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="109" pos:column="9">SDM_MAC_EXPORT</name></cpp:macro></cpp:define>

<typedef pos:line="111" pos:column="1">typedef <type><union pos:line="111" pos:column="9">union <name pos:line="111" pos:column="15">_pnt</name>
	<block pos:line="112" pos:column="9">{<public type="default" pos:line="112" pos:column="10">
	<struct pos:line="113" pos:column="9">struct
		<block pos:line="114" pos:column="17">{<public type="default" pos:line="114" pos:column="18">
		<decl_stmt><decl><type><name pos:line="115" pos:column="17">XY_SDM</name></type>	<name pos:line="115" pos:column="25">x</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="116" pos:column="17">XY_SDM</name></type>	<name pos:line="116" pos:column="25">y</name></decl>;</decl_stmt>
		</public>}</block>;</struct>
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">XY_SDM</name></type>	<name><name pos:line="118" pos:column="17">rgxy</name><index pos:line="118" pos:column="21">[<expr><lit:literal type="number" pos:line="118" pos:column="22">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	</public>}</block></union></type> <name pos:line="119" pos:column="11">PNT</name>;</typedef>

<typedef pos:line="121" pos:column="1">typedef <type><struct pos:line="121" pos:column="9">struct <name pos:line="121" pos:column="16">_rec</name>
	<block pos:line="122" pos:column="9">{<public type="default" pos:line="122" pos:column="10">
	<decl_stmt><decl><type><name pos:line="123" pos:column="9">XY_SDM</name></type>	<name pos:line="123" pos:column="17">x</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="124" pos:column="9">XY_SDM</name></type>	<name pos:line="124" pos:column="17">y</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="125" pos:column="9">XY_SDM</name></type>	<name pos:line="125" pos:column="17">dx</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="126" pos:column="9">XY_SDM</name></type>	<name pos:line="126" pos:column="17">dy</name></decl>;</decl_stmt>
	</public>}</block></struct></type> <name pos:line="127" pos:column="11">REC</name>;</typedef>				<comment type="line" pos:line="127" pos:column="41">// Rectangle. </comment>

<typedef pos:line="129" pos:column="1">typedef <type><name pos:line="129" pos:column="9">POINTS</name></type>	<name pos:line="129" pos:column="17">PT_SDM</name>;</typedef>


<comment type="line" format="doxygen" pos:line="132" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="133" pos:column="1">// Convert RECT's to REC's, and vice-versa.</comment>

<comment type="line" pos:line="135" pos:column="1">// Environment independant conversion.</comment>
<cpp:define pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="136" pos:column="9">RectOfRec</name><parameter_list pos:line="136" pos:column="18">(<param><type><name pos:line="136" pos:column="19">P1</name></type></param>, <param><type><name pos:line="136" pos:column="23">P2</name></type></param>)</parameter_list></cpp:macro> \
	<cpp:value pos:line="137" pos:column="9">{ \
	(P1).left = (P2).x; \
	(P1).top = (P2).y; \
	(P1).right = (P2).x + (P2).dx; \
	(P1).bottom = (P2).y + (P2).dy; \
	}</cpp:value></cpp:define>

<comment type="line" pos:line="144" pos:column="1">// Environment dependant conversion.</comment>
<cpp:define pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="145" pos:column="9">RecOfRect</name><parameter_list pos:line="145" pos:column="18">(<param><type><name pos:line="145" pos:column="19">P1</name></type></param>, <param><type><name pos:line="145" pos:column="23">P2</name></type></param>)</parameter_list></cpp:macro> \
	<cpp:value pos:line="146" pos:column="9">{ \
	(P1).x = ((P2).left); \
	(P1).dx = ((P2).right - (P2).left); \
	(P1).dy = ((P2).bottom - (P2).top); \
	(P1).y = ((P2).top); \
	}</cpp:value></cpp:define>

<cpp:define pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="153" pos:column="9">FPtInRec</name><parameter_list pos:line="153" pos:column="17">(<param><type><name pos:line="153" pos:column="18">P1</name></type></param>, <param><type><name pos:line="153" pos:column="22">P2</name></type></param>)</parameter_list></cpp:macro> \
	<cpp:value pos:line="154" pos:column="9">( \
	(P1).x &gt;= (P2).x &amp;&amp; \
	(P1).x &lt; (P2).x + (P2).dx &amp;&amp; \
	(P1).y &gt;= (P2).y &amp;&amp; \
	(P1).y &lt; (P2).y + (P2).dy \
	)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="162" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="163" pos:column="1">// Text Selection.							     </comment>
<typedef pos:line="164" pos:column="1">typedef <type><name pos:line="164" pos:column="9">U32_SDM</name></type>	<name pos:line="164" pos:column="17">TXS</name>;</typedef>

<cpp:define pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="166" pos:column="9">ichLimLast</name></cpp:macro>	<cpp:value pos:line="166" pos:column="25">0x7fff</cpp:value></cpp:define>		<comment type="line" pos:line="166" pos:column="41">// Go to end of edit item. </comment>
<cpp:define pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="167" pos:column="9">TxsOfFirstLim</name><parameter_list pos:line="167" pos:column="22">(<param><type><name pos:line="167" pos:column="23">f</name></type></param>, <param><type><name pos:line="167" pos:column="26">l</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="167" pos:column="33">((TXS)MAKELONG((f), (l)))</cpp:value></cpp:define>
<cpp:define pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="168" pos:column="9">TxsAll</name><parameter_list pos:line="168" pos:column="15">()</parameter_list></cpp:macro>		<cpp:value pos:line="168" pos:column="33">TxsOfFirstLim(0, ichLimLast)</cpp:value></cpp:define>
<cpp:define pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="169" pos:column="9">IchFirstOfTxs</name><parameter_list pos:line="169" pos:column="22">(<param><type><name pos:line="169" pos:column="23">txs</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="169" pos:column="33">LOWORD(txs)</cpp:value></cpp:define>
<cpp:define pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="170" pos:column="9">IchLimOfTxs</name><parameter_list pos:line="170" pos:column="20">(<param><type><name pos:line="170" pos:column="21">txs</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="170" pos:column="33">HIWORD(txs)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="174" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="175" pos:column="1">// Base dialog types.							     </comment>

<typedef pos:line="177" pos:column="1">typedef <type><name pos:line="177" pos:column="9">VOID</name> <type:modifier pos:line="177" pos:column="14">*</type:modifier><type:modifier pos:line="177" pos:column="15">*</type:modifier></type>	<name pos:line="177" pos:column="17">HDLG</name>;</typedef>		<comment type="line" pos:line="177" pos:column="33">// A near handle. </comment>

<cpp:define pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="179" pos:column="9">HdlgOfWNewWOld</name><parameter_list pos:line="179" pos:column="23">(<param><type><name pos:line="179" pos:column="24">wNew</name></type></param>, <param><type><name pos:line="179" pos:column="30">wOld</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="179" pos:column="41">((HDLG)(wOld))</cpp:value></cpp:define>
<cpp:define pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="180" pos:column="9">HdlgOfWNewWOldFar</name><parameter_list pos:line="180" pos:column="26">(<param><type><name pos:line="180" pos:column="27">wNew</name></type></param>, <param><type><name pos:line="180" pos:column="33">wOld</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="180" pos:column="41">((HDLG)MAKELONG((wNew), (wOld)))</cpp:value></cpp:define>

<typedef pos:line="182" pos:column="1">typedef <type><name pos:line="182" pos:column="9">char</name> <type:modifier pos:line="182" pos:column="14">*</type:modifier></type> <name pos:line="182" pos:column="16">STR</name>;</typedef>            <comment type="line" pos:line="182" pos:column="32">// String (SZ or STZ).</comment>
<cpp:define pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="183" pos:column="9">strNull</name></cpp:macro>		<cpp:value pos:line="183" pos:column="25">(char *)NULL</cpp:value></cpp:define>	<comment type="line" pos:line="183" pos:column="41">// (Use "char *" instead of SZ since </comment>
					<comment type="line" pos:line="184" pos:column="41">// not all apps. use cstd.h.)</comment>

<typedef pos:line="186" pos:column="1">typedef <type><name pos:line="186" pos:column="9">WCHAR</name> <type:modifier pos:line="186" pos:column="15">*</type:modifier></type> <name pos:line="186" pos:column="17">WSTR</name>;</typedef>
<cpp:define pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="187" pos:column="9">wstrNull</name></cpp:macro> <cpp:value pos:line="187" pos:column="18">(WCHAR *)NULL</cpp:value></cpp:define>

<cpp:define pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="189" pos:column="9">hdlgNull</name></cpp:macro>	<cpp:value pos:line="189" pos:column="25">((HDLG) NULL)</cpp:value></cpp:define>
<cpp:define pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="190" pos:column="9">hdlgError</name></cpp:macro>	<cpp:value pos:line="190" pos:column="25">((HDLG) -1)</cpp:value></cpp:define>
<cpp:define pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="191" pos:column="9">hdlgCabError</name></cpp:macro>	<cpp:value pos:line="191" pos:column="25">((HDLG) -1)</cpp:value></cpp:define>
<cpp:define pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="192" pos:column="9">hdltNull</name></cpp:macro>	<cpp:value pos:line="192" pos:column="25">((struct _dlt * *) NULL)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="196" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="197" pos:column="1">// TMC.									     </comment>

<typedef pos:line="199" pos:column="1">typedef <type><name pos:line="199" pos:column="9">UINT_SDM</name></type>	<name pos:line="199" pos:column="25">TMC</name>;</typedef>			<comment type="line" pos:line="199" pos:column="49">// Item codes. </comment>

<comment type="line" pos:line="201" pos:column="1">// Standard item codes (tmc). </comment>
<cpp:define pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="202" pos:column="9">tmcNull</name></cpp:macro>		<cpp:value pos:line="202" pos:column="25">((TMC)0)</cpp:value></cpp:define>
<cpp:define pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="203" pos:column="9">tmcError</name></cpp:macro>	<cpp:value pos:line="203" pos:column="25">((TMC)-1)</cpp:value></cpp:define>
<cpp:define pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="204" pos:column="9">tmcOK</name></cpp:macro>		<cpp:value pos:line="204" pos:column="25">((TMC)1)</cpp:value></cpp:define>
<cpp:define pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="205" pos:column="9">tmcOk</name></cpp:macro>		<cpp:value pos:line="205" pos:column="25">tmcOK</cpp:value></cpp:define>
<cpp:define pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="206" pos:column="9">tmcCancel</name></cpp:macro>	<cpp:value pos:line="206" pos:column="25">((TMC)2)</cpp:value></cpp:define>
<cpp:define pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="207" pos:column="9">tmcSysMin</name></cpp:macro>	<cpp:value pos:line="207" pos:column="25">((TMC)0x10)</cpp:value></cpp:define>
<cpp:define pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="208" pos:column="9">tmcSysMax</name></cpp:macro>	<cpp:value pos:line="208" pos:column="25">((TMC)0x400)</cpp:value></cpp:define>
<cpp:define pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="209" pos:column="9">ftmcGrouped</name></cpp:macro>	<cpp:value pos:line="209" pos:column="25">0x8000</cpp:value></cpp:define>		<comment type="line" pos:line="209" pos:column="41">// OR'd to specify whole group as </comment>
					<comment type="line" pos:line="210" pos:column="41">// opposed to first item. </comment>
<cpp:define pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="211" pos:column="9">tmcUserMin</name></cpp:macro>	<cpp:value pos:line="211" pos:column="25">tmcSysMax</cpp:value></cpp:define>
<cpp:define pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="212" pos:column="9">tmcUserMax</name></cpp:macro>	<cpp:value pos:line="212" pos:column="25">((TMC)ftmcGrouped)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="216" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="217" pos:column="1">// Tmc macros. </comment>

<cpp:define pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="219" pos:column="9">TmcValue</name><parameter_list pos:line="219" pos:column="17">(<param><type><name pos:line="219" pos:column="18">tmc</name></type></param>)</parameter_list></cpp:macro>		<cpp:value pos:line="219" pos:column="33">((tmc) &amp; ~ftmcGrouped)</cpp:value></cpp:define>
<cpp:define pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="220" pos:column="9">FIsGroupTmc</name><parameter_list pos:line="220" pos:column="20">(<param><type><name pos:line="220" pos:column="21">tmc</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="220" pos:column="33">((tmc &amp; ftmcGrouped) != fFalse)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="223" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="224" pos:column="1">// TMT</comment>
<typedef pos:line="225" pos:column="1">typedef	<type><name pos:line="225" pos:column="9">UINT_SDM</name></type>	<name pos:line="225" pos:column="25">TMT</name>;</typedef>		<comment type="block" pos:line="225" pos:column="41">/* TM types */</comment>


<comment type="line" format="doxygen" pos:line="228" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="229" pos:column="1">// DLM.									     </comment>

<typedef pos:line="231" pos:column="1">typedef <type><name pos:line="231" pos:column="9">UINT_SDM</name></type>	<name pos:line="231" pos:column="25">DLM</name>;</typedef>			<comment type="line" pos:line="231" pos:column="49">// Dialog proc / item proc messages. </comment>

<comment type="line" pos:line="233" pos:column="1">// Global Messages. </comment>
<cpp:define pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="234" pos:column="9">dlmInit</name></cpp:macro> 	<cpp:value pos:line="234" pos:column="25">((DLM)0x0001)</cpp:value></cpp:define>	<comment type="line" pos:line="234" pos:column="41">// Do custom initialization. </comment>
<cpp:define pos:line="235" pos:column="1">#<cpp:directive pos:line="235" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="235" pos:column="9">dlmPlayBackInit</name></cpp:macro> <cpp:value pos:line="235" pos:column="25">((DLM)0x0002)</cpp:value></cpp:define>	<comment type="line" pos:line="235" pos:column="41">// Do custom noninteractive init. </comment>
<cpp:define pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="236" pos:column="9">dlmTerm</name></cpp:macro> 	<cpp:value pos:line="236" pos:column="25">((DLM)0x0003)</cpp:value></cpp:define>	<comment type="line" pos:line="236" pos:column="41">// Termination for one of many </comment>
					<comment type="line" pos:line="237" pos:column="41">// reasons. </comment>
<cpp:define pos:line="238" pos:column="1">#<cpp:directive pos:line="238" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="238" pos:column="9">dlmExit</name></cpp:macro>		<cpp:value pos:line="238" pos:column="25">((DLM)0x0004)</cpp:value></cpp:define>	<comment type="line" pos:line="238" pos:column="41">// Dialog is about to be blown away. </comment>

<comment type="line" pos:line="240" pos:column="1">// Item messages. </comment>
<cpp:define pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="241" pos:column="9">dlmChange</name></cpp:macro>	<cpp:value pos:line="241" pos:column="25">((DLM)0x0005)</cpp:value></cpp:define>	<comment type="line" pos:line="241" pos:column="41">// Edit control may have changed. </comment>
<cpp:define pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="242" pos:column="9">dlmClick</name></cpp:macro>	<cpp:value pos:line="242" pos:column="25">((DLM)0x0006)</cpp:value></cpp:define>	<comment type="line" pos:line="242" pos:column="41">// Item was clicked. </comment>
<cpp:define pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="243" pos:column="9">dlmDblClk</name></cpp:macro>	<cpp:value pos:line="243" pos:column="25">((DLM)0x0007)</cpp:value></cpp:define>	<comment type="line" pos:line="243" pos:column="41">// Double click in listbox/radio. </comment>
<cpp:define pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="244" pos:column="9">dlmClickDisabled</name></cpp:macro> <cpp:value pos:line="244" pos:column="26">((DLM)0x0008)</cpp:value></cpp:define>	<comment type="line" pos:line="244" pos:column="41">// Noninteractive Dialog-sessions</comment>
					<comment type="line" pos:line="245" pos:column="41">// only, the button passed to</comment>
					<comment type="line" pos:line="246" pos:column="41">// FSetNoninteractive() has been </comment>
					<comment type="line" pos:line="247" pos:column="41">// disabled by a call to </comment>
					<comment type="line" pos:line="248" pos:column="41">// EnableNoninteractiveTmc() at dlmInit</comment>
					<comment type="line" pos:line="249" pos:column="41">// time. </comment>

<comment type="line" pos:line="251" pos:column="1">// Rare Item Messages. </comment>
<cpp:define pos:line="252" pos:column="1">#<cpp:directive pos:line="252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="252" pos:column="9">dlmTab</name></cpp:macro>		<cpp:value pos:line="252" pos:column="25">((DLM)0x0009)</cpp:value></cpp:define>	<comment type="line" pos:line="252" pos:column="41">// Tab key intercept</comment>
<cpp:define pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="253" pos:column="9">dlmKey</name></cpp:macro>		<cpp:value pos:line="253" pos:column="25">((DLM)0x000a)</cpp:value></cpp:define>	<comment type="line" pos:line="253" pos:column="41">// Any untrapped key. </comment>
<cpp:define pos:line="254" pos:column="1">#<cpp:directive pos:line="254" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="254" pos:column="9">dlmSetItmFocus</name></cpp:macro>	<cpp:value pos:line="254" pos:column="25">((DLM)0x000b)</cpp:value></cpp:define>	<comment type="line" pos:line="254" pos:column="41">// Item gets focus. </comment>
<cpp:define pos:line="255" pos:column="1">#<cpp:directive pos:line="255" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="255" pos:column="9">dlmKillItmFocus</name></cpp:macro>	<cpp:value pos:line="255" pos:column="25">((DLM)0x000c)</cpp:value></cpp:define>	<comment type="line" pos:line="255" pos:column="41">// Item loses focus. </comment>

<comment type="line" pos:line="257" pos:column="1">// Rare Dialog Proc Messages. </comment>
<cpp:define pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="258" pos:column="9">dlmSetDlgFocus</name></cpp:macro>         <cpp:value pos:line="258" pos:column="32">((DLM)0x000d)</cpp:value></cpp:define>  <comment type="line" pos:line="258" pos:column="47">// Dialog gets focus. </comment>
<cpp:define pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="259" pos:column="9">dlmKillDlgFocus</name></cpp:macro>        <cpp:value pos:line="259" pos:column="32">((DLM)0x000e)</cpp:value></cpp:define>  <comment type="line" pos:line="259" pos:column="47">// Dialog loses focus. </comment>
<cpp:define pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="260" pos:column="9">dlmAdjustPos</name></cpp:macro>           <cpp:value pos:line="260" pos:column="32">((DLM)0x000f)</cpp:value></cpp:define>  <comment type="line" pos:line="260" pos:column="47">// Adjust item's rec?</comment>
<cpp:define pos:line="261" pos:column="1">#<cpp:directive pos:line="261" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="261" pos:column="9">dlmTabOut</name></cpp:macro>              <cpp:value pos:line="261" pos:column="32">((DLM)0x0010)</cpp:value></cpp:define>  <comment type="line" pos:line="261" pos:column="47">// Tab out of dialog? </comment>
<cpp:define pos:line="262" pos:column="1">#<cpp:directive pos:line="262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="262" pos:column="9">dlmIdle</name></cpp:macro>                <cpp:value pos:line="262" pos:column="32">((DLM)0x0011)</cpp:value></cpp:define>  <comment type="line" pos:line="262" pos:column="47">// Idle for modal dialogs. </comment>
<cpp:define pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="263" pos:column="9">dlmDlgClick</name></cpp:macro>            <cpp:value pos:line="263" pos:column="32">((DLM)0x0012)</cpp:value></cpp:define>  <comment type="line" pos:line="263" pos:column="47">// Click in dialog's window. </comment>
<cpp:define pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="264" pos:column="9">dlmDlgDblClick</name></cpp:macro>         <cpp:value pos:line="264" pos:column="32">((DLM)0x0013)</cpp:value></cpp:define>  <comment type="line" pos:line="264" pos:column="47">// Double click in dialog's window. </comment>
<cpp:define pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="265" pos:column="9">dlmShowCaret</name></cpp:macro>           <cpp:value pos:line="265" pos:column="32">((DLM)0x0014)</cpp:value></cpp:define>  <comment type="line" pos:line="265" pos:column="47">// Show a caret.</comment>
<cpp:define pos:line="266" pos:column="1">#<cpp:directive pos:line="266" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="266" pos:column="9">dlmHideCaret</name></cpp:macro>           <cpp:value pos:line="266" pos:column="32">((DLM)0x0015)</cpp:value></cpp:define>  <comment type="line" pos:line="266" pos:column="47">// Hide a caret.</comment>
<cpp:define pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="267" pos:column="9">dlmButtonDown</name></cpp:macro>          <cpp:value pos:line="267" pos:column="32">((DLM)0x0016)</cpp:value></cpp:define>  <comment type="line" pos:line="267" pos:column="47">// Sent at mousedown on a button</comment>
<cpp:define pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="268" pos:column="9">dlmCreate</name></cpp:macro>              <cpp:value pos:line="268" pos:column="32">((DLM)0x0017)</cpp:value></cpp:define>  <comment type="line" pos:line="268" pos:column="47">// Items are about to be created</comment>
<cpp:define pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="269" pos:column="9">dlmDlgMove</name></cpp:macro>             <cpp:value pos:line="269" pos:column="32">((DLM)0x0018)</cpp:value></cpp:define>  <comment type="line" pos:line="269" pos:column="47">// Dialog window was just moved by user (JOHNTE)</comment>
<cpp:define pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="270" pos:column="9">dlmQueryNewPalette</name></cpp:macro>     <cpp:value pos:line="270" pos:column="32">((DLM)0x0019)</cpp:value></cpp:define>  <comment type="line" pos:line="270" pos:column="47">// WM_QUERYNEWPALETTE (Win only)</comment>
<cpp:define pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="271" pos:column="9">dlmPaletteChanged</name></cpp:macro>      <cpp:value pos:line="271" pos:column="32">((DLM)0x001a)</cpp:value></cpp:define>  <comment type="line" pos:line="271" pos:column="47">// WM_PALETTECHANGED (Win only)</comment>
<cpp:define pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="272" pos:column="9">dlmSubDialog</name></cpp:macro>           <cpp:value pos:line="272" pos:column="32">((DLM)0x001b)</cpp:value></cpp:define>  <comment type="line" pos:line="272" pos:column="47">// New subdialog is about to appear</comment>
<cpp:define pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="273" pos:column="9">dlmFilterKey</name></cpp:macro>           <cpp:value pos:line="273" pos:column="32">((DLM)0x001c)</cpp:value></cpp:define>  <comment type="line" pos:line="273" pos:column="47">// Dialog key message detected</comment>
<cpp:define pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="274" pos:column="9">dlmContextHelp</name></cpp:macro>         <cpp:value pos:line="274" pos:column="32">((DLM)0x001d)</cpp:value></cpp:define>  <comment type="line" pos:line="274" pos:column="47">// Context Help (QuickTip)</comment>
<cpp:define pos:line="275" pos:column="1">#<cpp:directive pos:line="275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="275" pos:column="9">dlmCtrlTab</name></cpp:macro>             <cpp:value pos:line="275" pos:column="32">((DLM)0x001e)</cpp:value></cpp:define>  <comment type="line" pos:line="275" pos:column="47">// Ctrl+Tab pressed</comment>
<cpp:define pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="276" pos:column="9">dlmUpdateDefault</name></cpp:macro>       <cpp:value pos:line="276" pos:column="32">((DLM)0x001f)</cpp:value></cpp:define>  <comment type="line" pos:line="276" pos:column="47">// give the app a chance</comment>
<cpp:define pos:line="277" pos:column="1">#<cpp:directive pos:line="277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="277" pos:column="9">dlmDrag</name></cpp:macro>                <cpp:value pos:line="277" pos:column="32">((DLM)0x0020)</cpp:value></cpp:define>  <comment type="line" pos:line="277" pos:column="47">// for Owner Drag listboxes</comment>
<cpp:define pos:line="278" pos:column="1">#<cpp:directive pos:line="278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="278" pos:column="9">dlmRefEditShrink</name></cpp:macro>       <cpp:value pos:line="278" pos:column="32">((DLM)0x0021)</cpp:value></cpp:define>  <comment type="line" pos:line="278" pos:column="47">//for notifying app of a dialog shrinking for ref edits</comment>
<cpp:define pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="279" pos:column="9">dlmChangeCheckBox</name></cpp:macro>      <cpp:value pos:line="279" pos:column="32">((DLM)0x0022)</cpp:value></cpp:define>  <comment type="line" pos:line="279" pos:column="47">// for querying App if the Check box should be changed</comment>
<cpp:define pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="280" pos:column="9">dlmGetRefEditBmp</name></cpp:macro>       <cpp:value pos:line="280" pos:column="32">((DLM)0x0023)</cpp:value></cpp:define>
<cpp:define pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="281" pos:column="9">dlmGetRefEditBmpShrunk</name></cpp:macro> <cpp:value pos:line="281" pos:column="32">((DLM)0x0024)</cpp:value></cpp:define>
<cpp:define pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="282" pos:column="9">dlmSemiSubDialog</name></cpp:macro>       <cpp:value pos:line="282" pos:column="32">((DLM)0x0025)</cpp:value></cpp:define>  <comment type="line" pos:line="282" pos:column="47">// half way through a sub dialog</comment>
<cpp:define pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="283" pos:column="9">dlmActivateApp</name></cpp:macro>         <cpp:value pos:line="283" pos:column="32">((DLM)0x0026)</cpp:value></cpp:define>  <comment type="line" pos:line="283" pos:column="47">// Recieved WM_ACTIVATEAPP TRUE. </comment>
<cpp:define pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="284" pos:column="9">dlmAskEnable</name></cpp:macro>           <cpp:value pos:line="284" pos:column="32">((DLM)0x0027)</cpp:value></cpp:define>  <comment type="line" pos:line="284" pos:column="47">// Give a app to disallow enabling of TMC</comment>
<cpp:define pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="285" pos:column="9">dlmClickNotify</name></cpp:macro>         <cpp:value pos:line="285" pos:column="32">((DLM)0x0028)</cpp:value></cpp:define>  <comment type="line" pos:line="285" pos:column="47">// User click on a disabled item</comment>
<cpp:define pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="286" pos:column="9">dlmRedisplayLbx</name></cpp:macro>        <cpp:value pos:line="286" pos:column="32">((DLM)0x0029)</cpp:value></cpp:define>  <comment type="line" pos:line="286" pos:column="47">// Redisplay of list requested</comment>
<cpp:define pos:line="287" pos:column="1">#<cpp:directive pos:line="287" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="287" pos:column="9">dlmContextHelpOverride</name></cpp:macro> <cpp:value pos:line="287" pos:column="32">((DLM)0x0030)</cpp:value></cpp:define>  <comment type="line" pos:line="287" pos:column="47">// Redisplay of list requested</comment>
<cpp:define pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="288" pos:column="9">dlmAutoLayout</name></cpp:macro>          <cpp:value pos:line="288" pos:column="32">((DLM)0x0031)</cpp:value></cpp:define>  <comment type="line" pos:line="288" pos:column="47">// Called to invoke AutoLayout code</comment>
<cpp:define pos:line="289" pos:column="1">#<cpp:directive pos:line="289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="289" pos:column="9">dlmComboBoxDrop</name></cpp:macro>            <cpp:value pos:line="289" pos:column="36">((DLM)0x0032)</cpp:value></cpp:define>  <comment type="line" pos:line="289" pos:column="51">// Called when lbox is dropped down</comment>
<cpp:define pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="290" pos:column="9">dlmUserMin</name></cpp:macro>             <cpp:value pos:line="290" pos:column="32">((DLM)0x0040)</cpp:value></cpp:define>  <comment type="line" pos:line="290" pos:column="47">// For App use. </comment>


<comment type="line" format="doxygen" pos:line="293" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="294" pos:column="1">// TMM Messages.							     </comment>

<typedef pos:line="296" pos:column="1">typedef <type><name pos:line="296" pos:column="9">UINT_SDM</name></type>	<name pos:line="296" pos:column="25">TMM</name>;</typedef>			<comment type="line" pos:line="296" pos:column="49">// Control proc messages.</comment>

<comment type="line" pos:line="298" pos:column="1">// ListboxProc messages. </comment>
<cpp:define pos:line="299" pos:column="1">#<cpp:directive pos:line="299" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="299" pos:column="9">tmmCount</name></cpp:macro>	<cpp:value pos:line="299" pos:column="25">((TMM)0x0002)</cpp:value></cpp:define>	<comment type="line" pos:line="299" pos:column="41">// Return # of items. </comment>
<cpp:define pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="300" pos:column="9">tmmText</name></cpp:macro> 	<cpp:value pos:line="300" pos:column="25">((TMM)0x0003)</cpp:value></cpp:define>	<comment type="line" pos:line="300" pos:column="41">// Return text of n'th item. (always sent sequentially). </comment>
<cpp:define pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="301" pos:column="9">tmmEditText</name></cpp:macro>	<cpp:value pos:line="301" pos:column="25">((TMM)0x0004)</cpp:value></cpp:define>	<comment type="line" pos:line="301" pos:column="41">// Like tmmText but send randomly. </comment>
<cpp:define pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="302" pos:column="9">tmmTooltipText</name></cpp:macro> <cpp:value pos:line="302" pos:column="24">((TMM)0x0005)</cpp:value></cpp:define> <comment type="line" pos:line="302" pos:column="38">// Return tooltip for nth item (sent randomly)</comment>
<comment type="line" pos:line="303" pos:column="1">// DON'T USE 0X0009.  (See tmm's for both general pictures and listboxes below.)</comment>
<cpp:define pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="304" pos:column="9">cszUnknown</name></cpp:macro>	<cpp:value pos:line="304" pos:column="25">((UINT_SDM) -1)</cpp:value></cpp:define>	<comment type="line" pos:line="304" pos:column="41">// Return to tmmCount if unknown. </comment>

<comment type="line" pos:line="306" pos:column="1">// Gallery control context menu messages (a Gallery is a type of Listbox)</comment>
<cpp:define pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="307" pos:column="9">tmmCountContext</name></cpp:macro>	<cpp:value pos:line="307" pos:column="25">((TMM)0x0006)</cpp:value></cpp:define>	<comment type="line" pos:line="307" pos:column="41">// Context menu entries this ilbe.</comment>
<cpp:define pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="308" pos:column="9">tmmContextSTCR</name></cpp:macro>		<cpp:value pos:line="308" pos:column="33">((TMM)0x0007)</cpp:value></cpp:define>	<comment type="line" pos:line="308" pos:column="49">// The n'th Simple Toolbar Control Record.</comment>
<cpp:define pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="309" pos:column="9">tmmContextClicked</name></cpp:macro>	<cpp:value pos:line="309" pos:column="33">((TMM)0x0008)</cpp:value></cpp:define>	<comment type="line" pos:line="309" pos:column="49">// Which STCR was clicked. </comment>

<comment type="line" pos:line="311" pos:column="1">// ParseProc messages. </comment>
<cpp:define pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="312" pos:column="9">tmmFormat</name></cpp:macro>	<cpp:value pos:line="312" pos:column="25">((TMM)0x0001)</cpp:value></cpp:define>	<comment type="line" pos:line="312" pos:column="41">// Format data. </comment>
<cpp:define pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="313" pos:column="9">tmmParse</name></cpp:macro>	<cpp:value pos:line="313" pos:column="25">((TMM)0x0002)</cpp:value></cpp:define>	<comment type="line" pos:line="313" pos:column="41">// Parse data. </comment>

<comment type="line" pos:line="315" pos:column="1">// Render Procs </comment>
<cpp:define pos:line="316" pos:column="1">#<cpp:directive pos:line="316" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="316" pos:column="9">tmmRender</name></cpp:macro>	<cpp:value pos:line="316" pos:column="25">((TMM)0x0001)</cpp:value></cpp:define>	<comment type="line" pos:line="316" pos:column="41">// Repaint entire item. </comment>
<cpp:define pos:line="317" pos:column="1">#<cpp:directive pos:line="317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="317" pos:column="9">tmmNewState</name></cpp:macro>	<cpp:value pos:line="317" pos:column="25">((TMM)0x0002)</cpp:value></cpp:define>	<comment type="line" pos:line="317" pos:column="41">// State has changed. </comment>
<cpp:define pos:line="318" pos:column="1">#<cpp:directive pos:line="318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="318" pos:column="9">tmmRepaint</name></cpp:macro>	<cpp:value pos:line="318" pos:column="25">((TMM)0x0003)</cpp:value></cpp:define>	<comment type="line" pos:line="318" pos:column="41">// Repaint everything but text.</comment>
<cpp:define pos:line="319" pos:column="1">#<cpp:directive pos:line="319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="319" pos:column="9">tmmNewText</name></cpp:macro>	<cpp:value pos:line="319" pos:column="25">((TMM)0x0004)</cpp:value></cpp:define>	<comment type="line" pos:line="319" pos:column="41">// Repaint text alone</comment>

<comment type="line" pos:line="321" pos:column="1">// GeneralPictures and ListboxProc </comment>
<cpp:define pos:line="322" pos:column="1">#<cpp:directive pos:line="322" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="322" pos:column="9">tmmCreate</name></cpp:macro>        <cpp:value pos:line="322" pos:column="26">((TMM)0x0001)</cpp:value></cpp:define>	<comment type="line" pos:line="322" pos:column="41">// Create windows and such. </comment>
<cpp:define pos:line="323" pos:column="1">#<cpp:directive pos:line="323" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="323" pos:column="9">tmmAboutToResize</name></cpp:macro> <cpp:value pos:line="323" pos:column="26">((TMM)0x0009)</cpp:value></cpp:define>	<comment type="line" pos:line="323" pos:column="41">// Listbox or general picture is about to resize.</comment>

<comment type="line" pos:line="325" pos:column="1">// General Pictures </comment>
<comment type="line" pos:line="326" pos:column="1">// don't use the value 2 since tmmNewState is also used</comment>
<comment type="line" pos:line="327" pos:column="1">// by general pictures</comment>
<cpp:define pos:line="328" pos:column="1">#<cpp:directive pos:line="328" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="328" pos:column="9">tmmPaint</name></cpp:macro>         <cpp:value pos:line="328" pos:column="26">((TMM)0x0003)</cpp:value></cpp:define>   <comment type="line" pos:line="328" pos:column="42">// Paint yourself. </comment>
<cpp:define pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="329" pos:column="9">tmmFocus</name></cpp:macro>         <cpp:value pos:line="329" pos:column="26">((TMM)0x0004)</cpp:value></cpp:define>   <comment type="line" pos:line="329" pos:column="42">// Show yourself with/without focus.</comment>
<cpp:define pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="330" pos:column="9">tmmInput</name></cpp:macro>         <cpp:value pos:line="330" pos:column="26">((TMM)0x0005)</cpp:value></cpp:define>   <comment type="line" pos:line="330" pos:column="42">// User input received.</comment>
<cpp:define pos:line="331" pos:column="1">#<cpp:directive pos:line="331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="331" pos:column="9">tmmMeasure</name></cpp:macro>       <cpp:value pos:line="331" pos:column="26">((TMM)0x0006)</cpp:value></cpp:define>   <comment type="line" pos:line="331" pos:column="42">// Provide optimal default control size based on content (DAL)</comment>
<cpp:define pos:line="332" pos:column="1">#<cpp:directive pos:line="332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="332" pos:column="9">tmmResize</name></cpp:macro>        <cpp:value pos:line="332" pos:column="26">((TMM)0x0007)</cpp:value></cpp:define>   <comment type="line" pos:line="332" pos:column="42">// Alert the control that its size has changed.</comment>
<cpp:define pos:line="333" pos:column="1">#<cpp:directive pos:line="333" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="333" pos:column="9">tmmMetricsChange</name></cpp:macro> <cpp:value pos:line="333" pos:column="26">((TMM)0x0008)</cpp:value></cpp:define>   <comment type="line" pos:line="333" pos:column="42">// Alert the control that system metrics</comment>
                                         <comment type="line" pos:line="334" pos:column="42">// have changed (as SDM is notified through</comment>
                                         <comment type="line" pos:line="335" pos:column="42">// a WM_WININICHANGE message)</comment>
<comment type="line" pos:line="336" pos:column="1">// DON'T USE 0X0009.  (See tmm's for both general pictures and listboxes above.)</comment>

<cpp:define pos:line="338" pos:column="1">#<cpp:directive pos:line="338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="338" pos:column="9">tmmTabStop</name></cpp:macro>		<cpp:value pos:line="338" pos:column="33">((TMM)0x000a)</cpp:value></cpp:define>	<comment type="line" pos:line="338" pos:column="49">// Query if item is tabstop </comment>
<cpp:define pos:line="339" pos:column="1">#<cpp:directive pos:line="339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="339" pos:column="9">tmmDestroy</name></cpp:macro>		<cpp:value pos:line="339" pos:column="33">((TMM)0x000b)</cpp:value></cpp:define>	<comment type="line" pos:line="339" pos:column="49">// Inform item is being destroyed.</comment>
<cpp:define pos:line="340" pos:column="1">#<cpp:directive pos:line="340" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="340" pos:column="9">tmmMatchAccel</name></cpp:macro>	<cpp:value pos:line="340" pos:column="25">((TMM)0x000c)</cpp:value></cpp:define>	<comment type="line" pos:line="340" pos:column="41">// Attempt to match accelerator key</comment>
<cpp:define pos:line="341" pos:column="1">#<cpp:directive pos:line="341" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="341" pos:column="9">tmmWctControl</name></cpp:macro>	<cpp:value pos:line="341" pos:column="25">((TMM)0x000d)</cpp:value></cpp:define>	<comment type="line" pos:line="341" pos:column="41">// Complete a WPCTL structure (WM_GETCONTROLS)</comment>
<cpp:define pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="342" pos:column="9">tmmWctText</name></cpp:macro>		<cpp:value pos:line="342" pos:column="33">((TMM)0x000e)</cpp:value></cpp:define>	<comment type="line" pos:line="342" pos:column="49">// Fill a WTXI structure (WM_GETTEXT)</comment>
<cpp:define pos:line="343" pos:column="1">#<cpp:directive pos:line="343" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="343" pos:column="9">tmmWctListCount</name></cpp:macro>	<cpp:value pos:line="343" pos:column="25">((TMM)0x000f)</cpp:value></cpp:define>	<comment type="line" pos:line="343" pos:column="41">// Get list count (WM_GETLISTCOUNT)</comment>
<cpp:define pos:line="344" pos:column="1">#<cpp:directive pos:line="344" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="344" pos:column="9">tmmCtrlTab</name></cpp:macro>		<cpp:value pos:line="344" pos:column="33">((TMM)0x0010)</cpp:value></cpp:define>	<comment type="line" pos:line="344" pos:column="49">// Ctrl+Tab pressed</comment>
<cpp:define pos:line="345" pos:column="1">#<cpp:directive pos:line="345" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="345" pos:column="9">tmmAccelerate</name></cpp:macro>	<cpp:value pos:line="345" pos:column="25">((TMM)0x0011)</cpp:value></cpp:define>	<comment type="line" pos:line="345" pos:column="41">// picture was just sent focus by an accelerator key</comment>
<cpp:define pos:line="346" pos:column="1">#<cpp:directive pos:line="346" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="346" pos:column="9">tmmFilterKey</name></cpp:macro>	<cpp:value pos:line="346" pos:column="25">((TMM)0x0012)</cpp:value></cpp:define>	<comment type="line" pos:line="346" pos:column="41">// allows pictures to filter their keystrokes before SDM mucks with them.</comment>
<cpp:define pos:line="347" pos:column="1">#<cpp:directive pos:line="347" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="347" pos:column="9">tmmGccKeydown</name></cpp:macro>	<cpp:value pos:line="347" pos:column="25">((TMM)0x0013)</cpp:value></cpp:define>	<comment type="line" pos:line="347" pos:column="41">// keydowns for gcc color dropdowns</comment>
<cpp:define pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="348" pos:column="9">tmmGccDefaultChanged</name></cpp:macro>	<cpp:value pos:line="348" pos:column="33">((TMM)0x0014)</cpp:value></cpp:define>	<comment type="line" pos:line="348" pos:column="49">//default tmc changed, so gcc doesn't need to reset it</comment>
<cpp:define pos:line="349" pos:column="1">#<cpp:directive pos:line="349" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="349" pos:column="9">tmmGccClick</name></cpp:macro>     <cpp:value pos:line="349" pos:column="25">((TMM)0x0015)</cpp:value></cpp:define>   <comment type="line" pos:line="349" pos:column="41">// a buttondown occured while a picture has the focus</comment>
<cpp:define pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="350" pos:column="9">tmmSysInput</name></cpp:macro>     <cpp:value pos:line="350" pos:column="25">((TMM)0x0016)</cpp:value></cpp:define>   <comment type="line" pos:line="350" pos:column="41">// User input (syskeydown) received</comment>

<cpp:if pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">if</cpp:directive> <expr><name pos:line="352" pos:column="5">VSMSODEBUG</name></expr></cpp:if>
<cpp:define pos:line="353" pos:column="1">#<cpp:directive pos:line="353" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="353" pos:column="9">tmmSaveBe</name></cpp:macro>	<cpp:value pos:line="353" pos:column="25">((TMM)0x003f)</cpp:value></cpp:define>	<comment type="line" pos:line="353" pos:column="41">// debug memory accounting</comment>
<cpp:endif pos:line="354" pos:column="1">#<cpp:directive pos:line="354" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:define pos:line="356" pos:column="1">#<cpp:directive pos:line="356" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="356" pos:column="9">tmmUserMin</name></cpp:macro>	<cpp:value pos:line="356" pos:column="25">((TMM)0x0040)</cpp:value></cpp:define>	<comment type="line" pos:line="356" pos:column="41">// For user extensions. </comment>

<cpp:define pos:line="358" pos:column="1">#<cpp:directive pos:line="358" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="358" pos:column="9">wFilterEaten</name></cpp:macro>	<cpp:value pos:line="358" pos:column="25">((UINT_SDM)0xFFED)</cpp:value></cpp:define>	<comment type="line" pos:line="358" pos:column="49">// return value for tmmFilterKey when</comment>
											<comment type="line" pos:line="359" pos:column="89">// the event was handled by the picture proc</comment>

<typedef pos:line="361" pos:column="1">typedef	<type><struct pos:line="361" pos:column="9">struct <name pos:line="361" pos:column="16">_drm_sdm</name>
	<block pos:line="362" pos:column="9">{<public type="default" pos:line="362" pos:column="10">
	<decl_stmt><decl><type><name pos:line="363" pos:column="9">WCHAR</name> <type:modifier pos:line="363" pos:column="15">*</type:modifier></type>	<name pos:line="363" pos:column="17">wzTmpl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="364" pos:column="9">WCHAR</name> <type:modifier pos:line="364" pos:column="15">*</type:modifier></type>	<name pos:line="364" pos:column="17">wzName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="365" pos:column="9">WCHAR</name> <type:modifier pos:line="365" pos:column="15">*</type:modifier></type>	<name pos:line="365" pos:column="17">wzType</name></decl>;</decl_stmt>
	</public>}</block></struct></type> <name pos:line="366" pos:column="11">DRM_SDM</name>;</typedef>



<comment type="line" format="doxygen" pos:line="370" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="371" pos:column="1">// FTMS - Item States.							     </comment>

<typedef pos:line="373" pos:column="1">typedef <type><name pos:line="373" pos:column="9">UINT_SDM</name></type>	<name pos:line="373" pos:column="25">FTMS</name>;</typedef>

<cpp:define pos:line="375" pos:column="1">#<cpp:directive pos:line="375" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="375" pos:column="9">ftmsNull</name></cpp:macro>	<cpp:value pos:line="375" pos:column="25">((FTMS)0x0000)</cpp:value></cpp:define>	<comment type="line" pos:line="375" pos:column="41">// None of the following. </comment>

<comment type="line" pos:line="377" pos:column="1">// The folowing four alignment bits are specific to static text</comment>
<comment type="line" pos:line="378" pos:column="1">// Note: the contiguity and ordering of the following 3 is assumed. </comment>

<cpp:define pos:line="380" pos:column="1">#<cpp:directive pos:line="380" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="380" pos:column="9">ftmsLeft</name></cpp:macro>		<cpp:value pos:line="380" pos:column="33">((FTMS)0x0000)</cpp:value></cpp:define>	<comment type="line" pos:line="380" pos:column="49">// left aligned	(default)</comment>
<cpp:define pos:line="381" pos:column="1">#<cpp:directive pos:line="381" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="381" pos:column="9">ftmsCenter</name></cpp:macro>		<cpp:value pos:line="381" pos:column="33">((FTMS)0x0001)</cpp:value></cpp:define>	<comment type="line" pos:line="381" pos:column="49">// centered</comment>
<cpp:define pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="382" pos:column="9">ftmsRight</name></cpp:macro>		<cpp:value pos:line="382" pos:column="33">((FTMS)0x0002)</cpp:value></cpp:define>	<comment type="line" pos:line="382" pos:column="49">// right aligned</comment>
<cpp:define pos:line="383" pos:column="1">#<cpp:directive pos:line="383" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="383" pos:column="9">ftmsAlt</name></cpp:macro>			<cpp:value pos:line="383" pos:column="33">((FTMS)(ftmsLeft|ftmsCenter|ftmsRight))</cpp:value></cpp:define>

<cpp:define pos:line="385" pos:column="1">#<cpp:directive pos:line="385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="385" pos:column="9">ftmsDefault</name></cpp:macro>		<cpp:value pos:line="385" pos:column="33">((FTMS)0x0002)</cpp:value></cpp:define>	<comment type="line" pos:line="385" pos:column="49">// Item is default pushbutton. </comment>
<cpp:define pos:line="386" pos:column="1">#<cpp:directive pos:line="386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="386" pos:column="9">ftmsPushed</name></cpp:macro>		<cpp:value pos:line="386" pos:column="33">((FTMS)0x0004)</cpp:value></cpp:define>	<comment type="line" pos:line="386" pos:column="49">// Button is "depressed".</comment>
<cpp:define pos:line="387" pos:column="1">#<cpp:directive pos:line="387" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="387" pos:column="9">ftmsMouseDown</name></cpp:macro>   <cpp:value pos:line="387" pos:column="25">ftmsPushed</cpp:value></cpp:define>	<comment type="line" pos:line="387" pos:column="41">// newer name for ftmsPushed</comment>
<cpp:define pos:line="388" pos:column="1">#<cpp:directive pos:line="388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="388" pos:column="9">ftmsInvert</name></cpp:macro>		<cpp:value pos:line="388" pos:column="33">ftmsPushed</cpp:value></cpp:define>	<comment type="line" pos:line="388" pos:column="49">// Old name for ftmsPushed.</comment>
<cpp:define pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="389" pos:column="9">ftmsOn</name></cpp:macro>			<cpp:value pos:line="389" pos:column="33">((FTMS)0x0008)</cpp:value></cpp:define>	<comment type="line" pos:line="389" pos:column="49">// Item is "on". </comment>
<cpp:define pos:line="390" pos:column="1">#<cpp:directive pos:line="390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="390" pos:column="9">ftmsNinch</name></cpp:macro>		<cpp:value pos:line="390" pos:column="33">((FTMS)0x0010)</cpp:value></cpp:define>	<comment type="line" pos:line="390" pos:column="49">// Tri-state only - third state. </comment>

<comment type="line" pos:line="392" pos:column="1">// Note: the contiguity and ordering of the following 4 is assumed. </comment>
<cpp:define pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="393" pos:column="9">ftmsEnable</name></cpp:macro>		<cpp:value pos:line="393" pos:column="33">((FTMS)0x0020)</cpp:value></cpp:define>	<comment type="line" pos:line="393" pos:column="49">// Item is enabled. </comment>
<cpp:define pos:line="394" pos:column="1">#<cpp:directive pos:line="394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="394" pos:column="9">ftmsVisible</name></cpp:macro>		<cpp:value pos:line="394" pos:column="33">((FTMS)0x0040)</cpp:value></cpp:define>	<comment type="line" pos:line="394" pos:column="49">// Item is invisible. </comment>
<cpp:define pos:line="395" pos:column="1">#<cpp:directive pos:line="395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="395" pos:column="9">ftmsMember</name></cpp:macro>		<cpp:value pos:line="395" pos:column="33">((FTMS)0x0080)</cpp:value></cpp:define>	<comment type="line" pos:line="395" pos:column="49">// Member of current subdialog. </comment>

<cpp:define pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="397" pos:column="9">ftmsNewText</name></cpp:macro>		<cpp:value pos:line="397" pos:column="33">((FTMS)0x0100)</cpp:value></cpp:define>	<comment type="line" pos:line="397" pos:column="49">// Text has changed</comment>

<comment type="line" pos:line="399" pos:column="1">//The following ftms are for drawing static text</comment>

<cpp:define pos:line="401" pos:column="1">#<cpp:directive pos:line="401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="401" pos:column="9">ftmsMultiline</name></cpp:macro>	<cpp:value pos:line="401" pos:column="25">((FTMS)0x0200)</cpp:value></cpp:define>	<comment type="line" pos:line="401" pos:column="41">// multiline static text</comment>
<cpp:define pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="402" pos:column="9">ftmsBorder</name></cpp:macro>		<cpp:value pos:line="402" pos:column="33">((FTMS)0x0400)</cpp:value></cpp:define>	<comment type="line" pos:line="402" pos:column="49">// has a border</comment>
<cpp:define pos:line="403" pos:column="1">#<cpp:directive pos:line="403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="403" pos:column="9">ftmsNoPrefix</name></cpp:macro>	<cpp:value pos:line="403" pos:column="25">((FTMS)0x0800)</cpp:value></cpp:define>	<comment type="line" pos:line="403" pos:column="41">// don't treat chAccel as a prefix</comment>

<cpp:define pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="405" pos:column="9">ftmsNoRedraw</name></cpp:macro>	<cpp:value pos:line="405" pos:column="25">((FTMS)0x1000)</cpp:value></cpp:define>	<comment type="line" pos:line="405" pos:column="41">// don't redraw until clear</comment>

<cpp:define pos:line="407" pos:column="1">#<cpp:directive pos:line="407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="407" pos:column="9">ftmsLight</name></cpp:macro>		<cpp:value pos:line="407" pos:column="33">((FTMS)0x2000)</cpp:value></cpp:define>	<comment type="line" pos:line="407" pos:column="49">// use light font (sdi.hfontLight)</comment>

<cpp:define pos:line="409" pos:column="1">#<cpp:directive pos:line="409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="409" pos:column="9">ftmsFocus</name></cpp:macro>		<cpp:value pos:line="409" pos:column="33">((FTMS)0x4000)</cpp:value></cpp:define>	<comment type="line" pos:line="409" pos:column="49">// Item has the focus.</comment>

<cpp:define pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="411" pos:column="9">ftmsTempHidden</name></cpp:macro>	<cpp:value pos:line="411" pos:column="25">((FTMS)0x8000)</cpp:value></cpp:define>	<comment type="line" pos:line="411" pos:column="41">// Item is temporarily hidden </comment>
<comment type="block" pos:line="412" pos:column="1">/* FMidEast */</comment>
<cpp:define pos:line="413" pos:column="1">#<cpp:directive pos:line="413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="413" pos:column="9">ftmsHasReo</name></cpp:macro>		<cpp:value pos:line="413" pos:column="33">ftmsMultiline</cpp:value></cpp:define>	<comment type="line" pos:line="413" pos:column="49">// make edit item respect ftmsRTLReo</comment>
<cpp:define pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="414" pos:column="9">ftmsRTLReo</name></cpp:macro>		<cpp:value pos:line="414" pos:column="33">((FTMS)0x10000)</cpp:value></cpp:define>	<comment type="line" pos:line="414" pos:column="49">// draw static strings with RTL reading </comment>
										<comment type="line" pos:line="415" pos:column="81">// order. edit text requires ftmsHasReo</comment>
<comment type="block" pos:line="416" pos:column="1">/* FMidEast End */</comment>

<cpp:define pos:line="418" pos:column="1">#<cpp:directive pos:line="418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="418" pos:column="9">ftmsHyperlink</name></cpp:macro>   <cpp:value pos:line="418" pos:column="25">((FTMS)0x20000)</cpp:value></cpp:define> <comment type="line" pos:line="418" pos:column="41">// Draw this control as a hyperlink</comment>
<cpp:define pos:line="419" pos:column="1">#<cpp:directive pos:line="419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="419" pos:column="9">ftmsMouseOver</name></cpp:macro>	<cpp:value pos:line="419" pos:column="25">((FTMS)0x80000)</cpp:value></cpp:define> <comment type="line" pos:line="419" pos:column="41">// Draws control in the mouse over state</comment>

<comment type="line" format="doxygen" pos:line="421" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="422" pos:column="1">// TMV - Item Values.							     </comment>

<typedef pos:line="424" pos:column="1">typedef <type><name pos:line="424" pos:column="9">UINT_SDM</name></type>	<name pos:line="424" pos:column="25">TMV</name>;</typedef>

<cpp:define pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="426" pos:column="9">tmvNoType</name></cpp:macro>	<cpp:value pos:line="426" pos:column="25">((TMV)0)</cpp:value></cpp:define>
<cpp:define pos:line="427" pos:column="1">#<cpp:directive pos:line="427" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="427" pos:column="9">tmvWord</name></cpp:macro>		<cpp:value pos:line="427" pos:column="25">((TMV)1)</cpp:value></cpp:define>
<cpp:define pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="428" pos:column="9">tmvFixed</name></cpp:macro>	<cpp:value pos:line="428" pos:column="25">((TMV)2)</cpp:value></cpp:define>
<cpp:define pos:line="429" pos:column="1">#<cpp:directive pos:line="429" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="429" pos:column="9">tmvString</name></cpp:macro>	<cpp:value pos:line="429" pos:column="25">((TMV)3)</cpp:value></cpp:define>
<cpp:define pos:line="430" pos:column="1">#<cpp:directive pos:line="430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="430" pos:column="9">tmvRgw</name></cpp:macro>		<cpp:value pos:line="430" pos:column="25">((TMV)4)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="433" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="434" pos:column="1">// dlmChange notifications</comment>

<typedef pos:line="436" pos:column="1">typedef	<type><name pos:line="436" pos:column="9">UINT_SDM</name></type>	<name pos:line="436" pos:column="25">FTMN</name>;</typedef>

<cpp:define pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="438" pos:column="9">ftmnNull</name></cpp:macro>		<cpp:value pos:line="438" pos:column="33">((FTMN)0x0000)</cpp:value></cpp:define>
<cpp:define pos:line="439" pos:column="1">#<cpp:directive pos:line="439" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="439" pos:column="9">ftmnCombo</name></cpp:macro>		<cpp:value pos:line="439" pos:column="33">((FTMN)0x0001)</cpp:value></cpp:define>
<cpp:define pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="440" pos:column="9">ftmnCharValidated</name></cpp:macro>	<cpp:value pos:line="440" pos:column="33">((FTMN)0x0002)</cpp:value></cpp:define>
<cpp:define pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="441" pos:column="9">ftmnKillFocus</name></cpp:macro>		<cpp:value pos:line="441" pos:column="33">((FTMN)0x0004)</cpp:value></cpp:define>
<cpp:define pos:line="442" pos:column="1">#<cpp:directive pos:line="442" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="442" pos:column="9">ftmnCabVal</name></cpp:macro>		<cpp:value pos:line="442" pos:column="33">((FTMN)0x0008)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="445" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="446" pos:column="1">// CAB info.								     </comment>

<typedef pos:line="448" pos:column="1">typedef <type><name pos:line="448" pos:column="9">void</name> <type:modifier pos:line="448" pos:column="14">*</type:modifier> <type:modifier pos:line="448" pos:column="16">*</type:modifier> <type:modifier pos:line="448" pos:column="18">*</type:modifier></type> <name pos:line="448" pos:column="20">PCABH</name>;</typedef>	<comment type="line" pos:line="448" pos:column="33">// Pointer to a handle value inside of a CAB.</comment>
<typedef pos:line="449" pos:column="1">typedef <type><name pos:line="449" pos:column="9">void</name> <type:modifier pos:line="449" pos:column="14">*</type:modifier> <type:modifier pos:line="449" pos:column="16">*</type:modifier></type> <name pos:line="449" pos:column="18">HCAB</name>;</typedef>	<comment type="line" pos:line="449" pos:column="25">// CAB is an abstract data type. </comment>
<typedef pos:line="450" pos:column="1">typedef <type><name pos:line="450" pos:column="9">void</name> <type:modifier pos:line="450" pos:column="14">*</type:modifier></type> <name pos:line="450" pos:column="16">PCAB</name>;</typedef>	<comment type="line" pos:line="450" pos:column="25">// Pointer to arbitrary CAB.</comment>
<typedef pos:line="451" pos:column="1">typedef <type><name pos:line="451" pos:column="9">UINT_SDM</name></type>			<name pos:line="451" pos:column="41">CABI</name>;</typedef>	<comment type="line" pos:line="451" pos:column="49">// CAB initializer.</comment>
<typedef pos:line="452" pos:column="1">typedef <type><name pos:line="452" pos:column="9">UINT_SDM</name></type>			<name pos:line="452" pos:column="41">IAG</name>;</typedef>  <comment type="line" pos:line="452" pos:column="47">// Iag </comment>
<cpp:define pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="453" pos:column="9">Cabi</name><parameter_list pos:line="453" pos:column="13">(<param><type><name pos:line="453" pos:column="14">cwTotal</name></type></param>, <param><type><name pos:line="453" pos:column="23">cHandle</name></type></param>)</parameter_list></cpp:macro>		<cpp:value pos:line="453" pos:column="41">((cwTotal) + (cHandle &lt;&lt; 8))</cpp:value></cpp:define>
<cpp:define pos:line="454" pos:column="1">#<cpp:directive pos:line="454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="454" pos:column="9">hcabNull</name></cpp:macro>	<cpp:value pos:line="454" pos:column="25">((HCAB)NULL)</cpp:value></cpp:define>
<cpp:define pos:line="455" pos:column="1">#<cpp:directive pos:line="455" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="455" pos:column="9">hcabNonNull</name></cpp:macro>	<cpp:value pos:line="455" pos:column="25">((HCAB)1)</cpp:value></cpp:define>
<cpp:define pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="456" pos:column="9">hcabNotFilled</name></cpp:macro>	<cpp:value pos:line="456" pos:column="25">((HCAB)-1)</cpp:value></cpp:define>	<comment type="line" pos:line="456" pos:column="41">// Could be returned by HcabFromDlg().</comment>

<typedef pos:line="458" pos:column="1">typedef <type><name pos:line="458" pos:column="9">unsigned</name></type> <name pos:line="458" pos:column="18">SAB_SDM</name>;</typedef>

<comment type="line" pos:line="460" pos:column="1">// Command argument block header. </comment>
<typedef pos:line="461" pos:column="1">typedef <type><struct pos:line="461" pos:column="9">struct <name pos:line="461" pos:column="16">_cabh</name>
	<block pos:line="462" pos:column="9">{<public type="default" pos:line="462" pos:column="10">
	<decl_stmt><decl><type><name pos:line="463" pos:column="9">UINT_SDM</name></type>	<name pos:line="463" pos:column="25">cwSimple</name></decl>;</decl_stmt>		<comment type="line" pos:line="463" pos:column="49">// Total size of CAB less CABH. </comment>
	<decl_stmt><decl><type><name pos:line="464" pos:column="9">UINT_SDM</name></type>	<name pos:line="464" pos:column="25">cHandle</name></decl>;</decl_stmt>		<comment type="line" pos:line="464" pos:column="49">// # of handles. </comment>
	</public>}</block></struct></type> <name pos:line="465" pos:column="11">CABH</name>;</typedef>

<comment type="line" pos:line="467" pos:column="1">// Minimum CAB size : header + sab. </comment>
<cpp:define pos:line="468" pos:column="1">#<cpp:directive pos:line="468" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="468" pos:column="9">cwCabMin</name></cpp:macro>	<cpp:value pos:line="468" pos:column="25">((sizeof(CABH) + sizeof(SAB_SDM)) / sizeof(UCAB_SDM))</cpp:value></cpp:define>
<cpp:define pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="469" pos:column="9">cbCabMin</name></cpp:macro>	<cpp:value pos:line="469" pos:column="25">(cwCabMin * sizeof(UCAB_SDM))</cpp:value></cpp:define>
<cpp:define pos:line="470" pos:column="1">#<cpp:directive pos:line="470" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="470" pos:column="9">cbCabOverhead</name></cpp:macro>	<cpp:value pos:line="470" pos:column="25">(cwCabMin * sizeof(UCAB_SDM))</cpp:value></cpp:define>

<comment type="line" pos:line="472" pos:column="1">// Iag macro - returns iag corresponding to field fld in application structure</comment>
<cpp:define pos:line="473" pos:column="1">#<cpp:directive pos:line="473" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="473" pos:column="9">iagNil</name></cpp:macro>		<cpp:value pos:line="473" pos:column="25">((UINT_SDM)0x00ff)</cpp:value></cpp:define>

<comment type="line" pos:line="475" pos:column="1">// AKadatch: use FIELD_OFFSET</comment>
<comment type="line" pos:line="476" pos:column="1">// #define Iag(sz, fld)	\</comment>
<comment type="line" pos:line="477" pos:column="1">// 	((BARG_SDM)((BARG_SDM)&amp;(((sz *)0)-&gt;fld) / sizeof(UCAB_SDM) - cwCabMin))</comment>
<cpp:define pos:line="478" pos:column="1">#<cpp:directive pos:line="478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="478" pos:column="9">Iag</name><parameter_list pos:line="478" pos:column="12">(<param><type><name pos:line="478" pos:column="13">sz</name></type></param>, <param><type><name pos:line="478" pos:column="17">fld</name></type></param>)</parameter_list></cpp:macro>	\
	<cpp:value pos:line="479" pos:column="9">((BARG_SDM)((BARG_SDM)FIELD_OFFSET(sz,fld) / sizeof(UCAB_SDM) - cwCabMin))</cpp:value></cpp:define>

<comment type="line" pos:line="481" pos:column="1">// Macro to get void pointer to general CAB arg given offset.</comment>
<cpp:define pos:line="482" pos:column="1">#<cpp:directive pos:line="482" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="482" pos:column="9">PvParseArg</name><parameter_list pos:line="482" pos:column="19">(<param><type><name pos:line="482" pos:column="20">hv</name></type></param>, <param><type><name pos:line="482" pos:column="24">bArg</name></type></param>)</parameter_list></cpp:macro>					\
	<cpp:value pos:line="483" pos:column="9">(((hv) == (VOID **)NULL) ? (VOID *)(bArg) :	\
		(VOID *)(*(char * *)(hv) + (bArg)))</cpp:value></cpp:define>

<comment type="line" pos:line="486" pos:column="1">//----------originally in sdmparse.h----------</comment>
<cpp:define pos:line="487" pos:column="1">#<cpp:directive pos:line="487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="487" pos:column="9">SetPpvBToW</name><parameter_list pos:line="487" pos:column="19">(<param><type><name pos:line="487" pos:column="20">ppv</name></type></param>, <param><type><name pos:line="487" pos:column="25">bArg</name></type></param>, <param><type><name pos:line="487" pos:column="31">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="487" pos:column="34">*((UCAB_SDM *) PvParseArg(ppv, bArg)) = w</cpp:value></cpp:define>
<cpp:define pos:line="488" pos:column="1">#<cpp:directive pos:line="488" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="488" pos:column="9">WFromPpvB</name><parameter_list pos:line="488" pos:column="18">(<param><type><name pos:line="488" pos:column="19">ppv</name></type></param>, <param><type><name pos:line="488" pos:column="24">bArg</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="488" pos:column="30">*((UCAB_SDM *) PvParseArg(ppv, bArg))</cpp:value></cpp:define>

<comment type="block" pos:line="490" pos:column="1">/* Dialog Parse Values */</comment>

<comment type="line" pos:line="492" pos:column="1">// Publisher has a conflict with the typedef of DPV, so in some cases, they</comment>
<comment type="line" pos:line="493" pos:column="1">// need to be able to remove it by #defining REMOVE_TYPEDEF_DPV</comment>
<cpp:ifndef pos:line="494" pos:column="1">#<cpp:directive pos:line="494" pos:column="2">ifndef</cpp:directive> <name pos:line="494" pos:column="9">REMOVE_TYPEDEF_DPV</name></cpp:ifndef>
<typedef pos:line="495" pos:column="1">typedef <type><name pos:line="495" pos:column="9">int</name></type> <name pos:line="495" pos:column="13">DPV</name>;</typedef>
<cpp:endif pos:line="496" pos:column="1">#<cpp:directive pos:line="496" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="496" pos:column="8">// REMOVE_TYPEDEF_DPV</comment>

<cpp:define pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="498" pos:column="9">dpvError</name></cpp:macro>	<cpp:value pos:line="498" pos:column="25">0x00</cpp:value></cpp:define>
<cpp:define pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="499" pos:column="9">dpvNormal</name></cpp:macro>	<cpp:value pos:line="499" pos:column="25">0x01</cpp:value></cpp:define>
<cpp:define pos:line="500" pos:column="1">#<cpp:directive pos:line="500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="500" pos:column="9">dpvBlank</name></cpp:macro>	<cpp:value pos:line="500" pos:column="25">0x02</cpp:value></cpp:define>
<cpp:define pos:line="501" pos:column="1">#<cpp:directive pos:line="501" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="501" pos:column="9">dpvAuto</name></cpp:macro>		<cpp:value pos:line="501" pos:column="25">0x04</cpp:value></cpp:define>
<cpp:define pos:line="502" pos:column="1">#<cpp:directive pos:line="502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="502" pos:column="9">dpvDouble</name></cpp:macro>	<cpp:value pos:line="502" pos:column="25">0x08</cpp:value></cpp:define>
<cpp:define pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="503" pos:column="9">dpvSpaces</name></cpp:macro>	<cpp:value pos:line="503" pos:column="25">0x10</cpp:value></cpp:define> 
<comment type="line" pos:line="504" pos:column="1">//--------------------------------------------</comment>

<comment type="line" pos:line="506" pos:column="1">// Macro to get void pointer to general CAB arg given iag.</comment>
<cpp:define pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="507" pos:column="9">PvFromCabIag</name><parameter_list pos:line="507" pos:column="21">(<param><type><name pos:line="507" pos:column="22">hcab</name></type></param>, <param><type><name pos:line="507" pos:column="28">iag</name></type></param>)</parameter_list></cpp:macro>					\
	<cpp:value pos:line="508" pos:column="9">((VOID *)(*((UCAB_SDM * *)(hcab)) + cwCabMin + (iag)))</cpp:value></cpp:define>
		
<comment type="line" pos:line="510" pos:column="1">// Cab string/data pointers. </comment>
<typedef pos:line="511" pos:column="1">typedef	<type><name pos:line="511" pos:column="9">WCHAR</name> <type:modifier pos:line="511" pos:column="15">*</type:modifier></type>	<name pos:line="511" pos:column="17">WTZ_CAB</name>;</typedef>
<typedef pos:line="512" pos:column="1">typedef <type><specifier pos:line="512" pos:column="9">const</specifier> <name pos:line="512" pos:column="15">WCHAR</name> <type:modifier pos:line="512" pos:column="21">*</type:modifier></type> <name pos:line="512" pos:column="23">CONST_WTZ_CAB</name>;</typedef>

<typedef pos:line="514" pos:column="1">typedef <type><name pos:line="514" pos:column="9">WCHAR</name> <type:modifier pos:line="514" pos:column="15">*</type:modifier></type> <name pos:line="514" pos:column="17">WZ_CAB</name>;</typedef>
<typedef pos:line="515" pos:column="1">typedef <type><specifier pos:line="515" pos:column="9">const</specifier> <name pos:line="515" pos:column="15">WCHAR</name> <type:modifier pos:line="515" pos:column="21">*</type:modifier></type> <name pos:line="515" pos:column="23">CONST_WZ_CAB</name>;</typedef>

<typedef pos:line="517" pos:column="1">typedef <type><name pos:line="517" pos:column="9">char</name> <type:modifier pos:line="517" pos:column="14">*</type:modifier></type> <name pos:line="517" pos:column="16">SZ_CAB</name>;</typedef>
<typedef pos:line="518" pos:column="1">typedef <type><specifier pos:line="518" pos:column="9">const</specifier> <name pos:line="518" pos:column="15">char</name> <type:modifier pos:line="518" pos:column="20">*</type:modifier></type> <name pos:line="518" pos:column="22">CONST_SZ_CAB</name>;</typedef>

<typedef pos:line="520" pos:column="1">typedef <type><name pos:line="520" pos:column="9">WCHAR</name> <type:modifier pos:line="520" pos:column="15">*</type:modifier></type> <name pos:line="520" pos:column="17">RGB_CAB</name>;</typedef>
<typedef pos:line="521" pos:column="1">typedef <type><specifier pos:line="521" pos:column="9">const</specifier> <name pos:line="521" pos:column="15">WCHAR</name> <type:modifier pos:line="521" pos:column="21">*</type:modifier></type> <name pos:line="521" pos:column="23">CONST_RGB_CAB</name>;</typedef>

<typedef pos:line="523" pos:column="1">typedef <type><name pos:line="523" pos:column="9">WCHAR</name> <type:modifier pos:line="523" pos:column="15">*</type:modifier></type> <name pos:line="523" pos:column="17">WT_CAB</name>;</typedef>
<typedef pos:line="524" pos:column="1">typedef <type><name pos:line="524" pos:column="9">WCHAR</name> <type:modifier pos:line="524" pos:column="15">*</type:modifier></type> <name pos:line="524" pos:column="17">LWTZ_CAB</name>;</typedef>
<typedef pos:line="525" pos:column="1">typedef <type><name pos:line="525" pos:column="9">WCHAR</name> <type:modifier pos:line="525" pos:column="15">*</type:modifier></type> <name pos:line="525" pos:column="17">LRGB_CAB</name>;</typedef>


<comment type="line" format="doxygen" pos:line="528" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="529" pos:column="1">// structure passed with dlmInit message</comment>

<typedef pos:line="531" pos:column="1">typedef <type><struct pos:line="531" pos:column="9">struct <name pos:line="531" pos:column="16">_dmi_sdm</name>
	<block pos:line="532" pos:column="9">{<public type="default" pos:line="532" pos:column="10">
	<decl_stmt><decl><type><name pos:line="533" pos:column="9">HDC</name></type>	<name pos:line="533" pos:column="17">hpdc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="534" pos:column="9">HCAB</name></type>	<name pos:line="534" pos:column="17">hcab</name></decl>;</decl_stmt>
	</public>}</block></struct></type> <name pos:line="535" pos:column="11">DMI_SDM</name>;</typedef>



<comment type="line" format="doxygen" pos:line="539" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="540" pos:column="1">// Other special values.</comment>

<comment type="line" pos:line="542" pos:column="1">// Special ninch (No Input, No CHange) value. </comment>
<cpp:define pos:line="543" pos:column="1">#<cpp:directive pos:line="543" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="543" pos:column="9">wNinch</name></cpp:macro>		<cpp:value pos:line="543" pos:column="25">(-32767)</cpp:value></cpp:define>	<comment type="line" pos:line="543" pos:column="41">// Ints. </comment>
<cpp:define pos:line="544" pos:column="1">#<cpp:directive pos:line="544" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="544" pos:column="9">uNinch</name></cpp:macro>		<cpp:value pos:line="544" pos:column="25">((UINT_SDM)-1)</cpp:value></cpp:define>	<comment type="line" pos:line="544" pos:column="41">// Unsigned. </comment>
<cpp:define pos:line="545" pos:column="1">#<cpp:directive pos:line="545" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="545" pos:column="9">uNinchRadio</name></cpp:macro>	<cpp:value pos:line="545" pos:column="25">uNinch</cpp:value></cpp:define>		<comment type="line" pos:line="545" pos:column="41">// RadioGroups. </comment>
<cpp:define pos:line="546" pos:column="1">#<cpp:directive pos:line="546" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="546" pos:column="9">uNinchCheck</name></cpp:macro>	<cpp:value pos:line="546" pos:column="25">uNinch</cpp:value></cpp:define>		<comment type="line" pos:line="546" pos:column="41">// CheckBoxes </comment>
<cpp:define pos:line="547" pos:column="1">#<cpp:directive pos:line="547" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="547" pos:column="9">wNinchCheck</name></cpp:macro>	<cpp:value pos:line="547" pos:column="25">uNinchCheck</cpp:value></cpp:define>	<comment type="line" pos:line="547" pos:column="41">// Old name. </comment>
<cpp:define pos:line="548" pos:column="1">#<cpp:directive pos:line="548" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="548" pos:column="9">uNinchList</name></cpp:macro> 	<cpp:value pos:line="548" pos:column="25">((ILBE_SDM)-1)</cpp:value></cpp:define> <comment type="line" pos:line="548" pos:column="40">// Listboxes. </comment>

<cpp:define pos:line="550" pos:column="1">#<cpp:directive pos:line="550" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="550" pos:column="9">iszNinchList</name></cpp:macro> <cpp:value pos:line="550" pos:column="22">uNinchList</cpp:value></cpp:define>		<comment type="line" pos:line="550" pos:column="41">// Other name. </comment>

<comment type="line" pos:line="552" pos:column="1">// Special parse error values. </comment>
<cpp:define pos:line="553" pos:column="1">#<cpp:directive pos:line="553" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="553" pos:column="9">wError</name></cpp:macro>		<cpp:value pos:line="553" pos:column="25">(-32766)</cpp:value></cpp:define>	<comment type="line" pos:line="553" pos:column="41">// Ints. </comment>
<comment type="line" pos:line="554" pos:column="1">//original source: #define	uError		(0xfffe)	// Unsigneds. </comment>
<comment type="line" pos:line="555" pos:column="1">//current source:  #define	uError		((short)0xfffe)	// Unsigneds. </comment>
<cpp:define pos:line="556" pos:column="1">#<cpp:directive pos:line="556" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="556" pos:column="9">uError</name></cpp:macro>		<cpp:value pos:line="556" pos:column="25">((UINT_SDM)-2)</cpp:value></cpp:define>	<comment type="line" pos:line="556" pos:column="41">// Unsigneds. </comment>

<comment type="line" pos:line="558" pos:column="1">// Default no help. </comment>
<cpp:define pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="559" pos:column="9">hidDlgNull</name></cpp:macro>	<cpp:value pos:line="559" pos:column="25">0</cpp:value></cpp:define>		<comment type="line" pos:line="559" pos:column="41">// For no help.</comment>


<comment type="line" pos:line="562" pos:column="1">// For Memory allocation callbacks</comment>
<typedef pos:line="563" pos:column="1">typedef <type><name pos:line="563" pos:column="9">U32_SDM</name></type> 	<name pos:line="563" pos:column="25">SB_SDM</name>;</typedef>


<comment type="line" pos:line="566" pos:column="1">// Scroll Bar notification messages (wNew in dlmClick)</comment>
<typedef pos:line="567" pos:column="1">typedef <type><name pos:line="567" pos:column="9">unsigned</name></type> <name pos:line="567" pos:column="18">SBN_SDM</name>;</typedef>
<cpp:define pos:line="568" pos:column="1">#<cpp:directive pos:line="568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="568" pos:column="9">sbnLineUp</name></cpp:macro>			<cpp:value pos:line="568" pos:column="41">SB_LINEUP</cpp:value></cpp:define>
<cpp:define pos:line="569" pos:column="1">#<cpp:directive pos:line="569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="569" pos:column="9">sbnLineDown</name></cpp:macro>			<cpp:value pos:line="569" pos:column="41">SB_LINEDOWN</cpp:value></cpp:define>
<cpp:define pos:line="570" pos:column="1">#<cpp:directive pos:line="570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="570" pos:column="9">sbnPageUp</name></cpp:macro>			<cpp:value pos:line="570" pos:column="41">SB_PAGEUP</cpp:value></cpp:define>
<cpp:define pos:line="571" pos:column="1">#<cpp:directive pos:line="571" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="571" pos:column="9">sbnPageDown</name></cpp:macro>			<cpp:value pos:line="571" pos:column="41">SB_PAGEDOWN</cpp:value></cpp:define>
<cpp:define pos:line="572" pos:column="1">#<cpp:directive pos:line="572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="572" pos:column="9">sbnThumbPosition</name></cpp:macro>	<cpp:value pos:line="572" pos:column="33">SB_THUMBPOSITION</cpp:value></cpp:define>
<cpp:define pos:line="573" pos:column="1">#<cpp:directive pos:line="573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="573" pos:column="9">sbnThumbTrack</name></cpp:macro>		<cpp:value pos:line="573" pos:column="33">SB_THUMBTRACK</cpp:value></cpp:define>
<cpp:define pos:line="574" pos:column="1">#<cpp:directive pos:line="574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="574" pos:column="9">sbnTop</name></cpp:macro>				<cpp:value pos:line="574" pos:column="41">SB_TOP</cpp:value></cpp:define>
<cpp:define pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="575" pos:column="9">sbnBottom</name></cpp:macro>			<cpp:value pos:line="575" pos:column="41">SB_BOTTOM</cpp:value></cpp:define>
<cpp:define pos:line="576" pos:column="1">#<cpp:directive pos:line="576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="576" pos:column="9">sbnEndScroll</name></cpp:macro>		<cpp:value pos:line="576" pos:column="33">SB_ENDSCROLL</cpp:value></cpp:define>


<comment type="line" pos:line="579" pos:column="1">//</comment>
<comment type="line" pos:line="580" pos:column="1">// Max size of SDM strings, and the buffer size w/ zero term.</comment>
<comment type="line" pos:line="581" pos:column="1">//</comment>
<cpp:define pos:line="582" pos:column="1">#<cpp:directive pos:line="582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="582" pos:column="9">cchSDMWzMax</name></cpp:macro>    <cpp:value pos:line="582" pos:column="24">MSO_MAX_PATH</cpp:value></cpp:define>
<cpp:define pos:line="583" pos:column="1">#<cpp:directive pos:line="583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="583" pos:column="9">cchSDMWzBufMax</name></cpp:macro> <cpp:value pos:line="583" pos:column="24">(MSO_MAX_PATH + 1)</cpp:value></cpp:define>
<comment type="line" pos:line="584" pos:column="1">//</comment>
<comment type="line" pos:line="585" pos:column="1">// This is our old string size, so that we can keep things the same for</comment>
<comment type="line" pos:line="586" pos:column="1">// legacy dialogs, and so that we can use short strings if we'll never</comment>
<comment type="line" pos:line="587" pos:column="1">// need anything larger than 255, like on tab controls.</comment>
<comment type="line" pos:line="588" pos:column="1">//</comment>
<cpp:define pos:line="589" pos:column="1">#<cpp:directive pos:line="589" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="589" pos:column="9">cchSDMWzMaxShort</name></cpp:macro> <cpp:value pos:line="589" pos:column="26">255</cpp:value></cpp:define>
<cpp:define pos:line="590" pos:column="1">#<cpp:directive pos:line="590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="590" pos:column="9">cchSDMWzBufMaxShort</name></cpp:macro> <cpp:value pos:line="590" pos:column="29">256</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="594" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="595" pos:column="1">// Dialog Initialization.						     </comment>

<typedef pos:line="597" pos:column="1">typedef	<type><name pos:line="597" pos:column="9">U32_SDM</name></type>	<name pos:line="597" pos:column="17">FDLG</name>;</typedef>

<cpp:define pos:line="599" pos:column="1">#<cpp:directive pos:line="599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="599" pos:column="9">fdlgNull</name></cpp:macro>				<cpp:value pos:line="599" pos:column="49">((FDLG)0x00000000)</cpp:value></cpp:define>

<cpp:define pos:line="601" pos:column="1">#<cpp:directive pos:line="601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="601" pos:column="9">fdlgModal</name></cpp:macro>				<cpp:value pos:line="601" pos:column="49">((FDLG)0x00000001)</cpp:value></cpp:define>	<comment type="line" pos:line="601" pos:column="73">// Create Modal.</comment>
<cpp:define pos:line="602" pos:column="1">#<cpp:directive pos:line="602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="602" pos:column="9">fdlgInvisible</name></cpp:macro>			<cpp:value pos:line="602" pos:column="41">((FDLG)0x00000002)</cpp:value></cpp:define>	<comment type="line" pos:line="602" pos:column="65">// Start invisible.</comment>
<cpp:define pos:line="603" pos:column="1">#<cpp:directive pos:line="603" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="603" pos:column="9">fdlgEnableTabOut</name></cpp:macro>		<cpp:value pos:line="603" pos:column="41">((FDLG)0x00000004)</cpp:value></cpp:define>	<comment type="line" pos:line="603" pos:column="65">// Send dlmTabOut.</comment>

<cpp:define pos:line="605" pos:column="1">#<cpp:directive pos:line="605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="605" pos:column="9">fdlgPopup</name></cpp:macro>				<cpp:value pos:line="605" pos:column="49">((FDLG)0x00000008)</cpp:value></cpp:define>	<comment type="line" pos:line="605" pos:column="73">// Popup dialog - Win only</comment>
<cpp:define pos:line="606" pos:column="1">#<cpp:directive pos:line="606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="606" pos:column="9">fdlgScreenCoords</name></cpp:macro>		<cpp:value pos:line="606" pos:column="41">fdlgPopup</cpp:value></cpp:define>			<comment type="line" pos:line="606" pos:column="73">// Mac: same as above.</comment>

<cpp:define pos:line="608" pos:column="1">#<cpp:directive pos:line="608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="608" pos:column="9">fdlgClipChildren</name></cpp:macro>		<cpp:value pos:line="608" pos:column="41">((FDLG)0x00000020)</cpp:value></cpp:define>	<comment type="line" pos:line="608" pos:column="65">// Clip controls - Win only</comment>
<cpp:define pos:line="609" pos:column="1">#<cpp:directive pos:line="609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="609" pos:column="9">fdlgFedt</name></cpp:macro>				<cpp:value pos:line="609" pos:column="49">((FDLG)0x00000040)</cpp:value></cpp:define>	<comment type="line" pos:line="609" pos:column="73">// EditItem is FEDT - Win only</comment>
<cpp:define pos:line="610" pos:column="1">#<cpp:directive pos:line="610" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="610" pos:column="9">fdlgAdjustPos</name></cpp:macro>			<cpp:value pos:line="610" pos:column="41">((FDLG)0x00000080)</cpp:value></cpp:define>	<comment type="line" pos:line="610" pos:column="65">// Adjust item rec's.</comment>
<cpp:define pos:line="611" pos:column="1">#<cpp:directive pos:line="611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="611" pos:column="9">fdlgOwnDC</name></cpp:macro>				<cpp:value pos:line="611" pos:column="49">((FDLG)0x00000100)</cpp:value></cpp:define>	<comment type="line" pos:line="611" pos:column="73">// Dialog owns a DC.</comment>
<cpp:define pos:line="612" pos:column="1">#<cpp:directive pos:line="612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="612" pos:column="9">fdlgNoHelpIcon</name></cpp:macro>		   	<cpp:value pos:line="612" pos:column="41">((FDLG)0x00000200)</cpp:value></cpp:define>	<comment type="line" pos:line="612" pos:column="65">// No Win95 Help Icon - Win only</comment>
<cpp:define pos:line="613" pos:column="1">#<cpp:directive pos:line="613" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="613" pos:column="9">fdlgNoMvDefBut</name></cpp:macro>			<cpp:value pos:line="613" pos:column="41">((FDLG)0x00000400)</cpp:value></cpp:define>	<comment type="line" pos:line="613" pos:column="65">// Don't move defaultness</comment>

<cpp:define pos:line="615" pos:column="1">#<cpp:directive pos:line="615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="615" pos:column="9">fdlgRepainting</name></cpp:macro>			<cpp:value pos:line="615" pos:column="41">((FDLG)0x00000800)</cpp:value></cpp:define>	<comment type="line" pos:line="615" pos:column="65">// currently processing WM_PAINT - Win only</comment>

<cpp:define pos:line="617" pos:column="1">#<cpp:directive pos:line="617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="617" pos:column="9">fdlgEditConvert</name></cpp:macro>			<cpp:value pos:line="617" pos:column="41">((FDLG)0x00001000)</cpp:value></cpp:define>	<comment type="line" pos:line="617" pos:column="65">// ANSI -=&gt; OEM -=&gt; ANSI :-P  - !MAC only</comment>

<cpp:define pos:line="619" pos:column="1">#<cpp:directive pos:line="619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="619" pos:column="9">fdlgSysModal</name></cpp:macro>			<cpp:value pos:line="619" pos:column="41">((FDLG)0x00002000)</cpp:value></cpp:define>	<comment type="line" pos:line="619" pos:column="65">// Sys modal dialog</comment>

<cpp:define pos:line="621" pos:column="1">#<cpp:directive pos:line="621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="621" pos:column="9">fdlgEditMenu</name></cpp:macro>			<cpp:value pos:line="621" pos:column="41">((FDLG)0x00004000)</cpp:value></cpp:define>	<comment type="line" pos:line="621" pos:column="65">// TEs respond to edit menu - MAC only</comment>
<cpp:ifndef pos:line="622" pos:column="1">#<cpp:directive pos:line="622" pos:column="2">ifndef</cpp:directive> <name pos:line="622" pos:column="9">fdlgNoSabResize</name></cpp:ifndef>
<cpp:define pos:line="623" pos:column="1">#<cpp:directive pos:line="623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="623" pos:column="9">fdlgNoSabResize</name></cpp:macro>			<cpp:value pos:line="623" pos:column="41">fdlgEditMenu</cpp:value></cpp:define>		<comment type="line" pos:line="623" pos:column="65">// let app resize on sab switch - !MAC only</comment>
<cpp:endif pos:line="624" pos:column="1">#<cpp:directive pos:line="624" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:define pos:line="626" pos:column="1">#<cpp:directive pos:line="626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="626" pos:column="9">fdlgDelayListbox</name></cpp:macro>		<cpp:value pos:line="626" pos:column="41">((FDLG)0x00008000)</cpp:value></cpp:define>	<comment type="line" pos:line="626" pos:column="65">// Delay listbox fill</comment>
<cpp:define pos:line="627" pos:column="1">#<cpp:directive pos:line="627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="627" pos:column="9">fdlgHideAccel</name></cpp:macro>			<cpp:value pos:line="627" pos:column="41">((FDLG)0x00010000)</cpp:value></cpp:define>	<comment type="line" pos:line="627" pos:column="65">// No accel underlines</comment>
<cpp:define pos:line="628" pos:column="1">#<cpp:directive pos:line="628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="628" pos:column="9">fdlgOnDemandSubdlg</name></cpp:macro>		<cpp:value pos:line="628" pos:column="41">((FDLG)0x00020000)</cpp:value></cpp:define>	<comment type="line" pos:line="628" pos:column="65">// Init only member controls</comment>
<cpp:define pos:line="629" pos:column="1">#<cpp:directive pos:line="629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="629" pos:column="9">fdlgNoUpdate</name></cpp:macro>			<cpp:value pos:line="629" pos:column="41">((FDLG)0x00040000)</cpp:value></cpp:define>	<comment type="line" pos:line="629" pos:column="65">// Don't UpdateWindow</comment>
<cpp:define pos:line="630" pos:column="1">#<cpp:directive pos:line="630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="630" pos:column="9">fdlgShrunk</name></cpp:macro>				<cpp:value pos:line="630" pos:column="49">((FDLG)0x00080000)</cpp:value></cpp:define>	<comment type="line" pos:line="630" pos:column="73">// RefEdits</comment>
<cpp:define pos:line="631" pos:column="1">#<cpp:directive pos:line="631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="631" pos:column="9">fdlgRefEditEnabled</name></cpp:macro>	<cpp:value pos:line="631" pos:column="33">fdlgShrunk</cpp:value></cpp:define>		<comment type="line" pos:line="631" pos:column="57">// RefEdits - initialization, dialog is refedit enabled</comment>

<cpp:define pos:line="633" pos:column="1">#<cpp:directive pos:line="633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="633" pos:column="9">fdlgUseTrueTypeFonts</name></cpp:macro>	<cpp:value pos:line="633" pos:column="33">((FDLG)0x00100000)</cpp:value></cpp:define>	<comment type="line" pos:line="633" pos:column="57">// MAC only, use truetype fonts for drawing</comment>
<cpp:define pos:line="634" pos:column="1">#<cpp:directive pos:line="634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="634" pos:column="9">fdlgImeOff</name></cpp:macro>				<cpp:value pos:line="634" pos:column="49">fdlgUseTrueTypeFonts</cpp:value></cpp:define> <comment type="line" pos:line="634" pos:column="70">// FE - WinOnly, turn on DES IME control.</comment>

<comment type="line" pos:line="636" pos:column="1">// This was added to help with SW Pane's perf wrt hidden controls. Since </comment>
<comment type="line" pos:line="637" pos:column="1">// SDM can't dynamically create controls, the maximum was allocated in </comment>
<comment type="line" pos:line="638" pos:column="1">// the resource file, but we don't need to show all of them most of the time.</comment>
<comment type="line" pos:line="639" pos:column="1">// Note: same as the old fdlgMacDisabled, which is not referenced by MSO at all.</comment>
<comment type="line" pos:line="640" pos:column="1">// (Raid O10 223434)</comment>
<comment type="line" pos:line="641" pos:column="1">// Note: This flag is mutually exclusive of fdlgOnDemandSubdlg</comment>
<comment type="line" pos:line="642" pos:column="1">// Note; O10 257833 Using this to lazy create tmw's can cause FEnumTmw to return fFalse for</comment>
<comment type="line" pos:line="643" pos:column="1">// some functions. Check enormous for details.</comment>
<cpp:define pos:line="644" pos:column="1">#<cpp:directive pos:line="644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="644" pos:column="9">fdlgCreateOnDemand</name></cpp:macro>      <cpp:value pos:line="644" pos:column="33">((FDLG)0x00200000)</cpp:value></cpp:define>	<comment type="line" pos:line="644" pos:column="57">// Create and init only controls that are needed</comment>

<comment type="line" pos:line="646" pos:column="1">// WARNING:  The following bits are private to SDM -- do not</comment>
<comment type="line" pos:line="647" pos:column="1">// set these bits in dli.fdlg!  Additionally, support for these</comment>
<comment type="line" pos:line="648" pos:column="1">// bits are not guaranteed.</comment>
<comment type="line" pos:line="649" pos:column="1">// REVIEW fdlgSendUpdDflt isn't private.  We are out of bits, and need more!</comment>
<cpp:define pos:line="650" pos:column="1">#<cpp:directive pos:line="650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="650" pos:column="9">fdlgDisabled</name></cpp:macro>		<cpp:value pos:line="650" pos:column="33">((FDLG)0x80000000)</cpp:value></cpp:define>
<cpp:define pos:line="651" pos:column="1">#<cpp:directive pos:line="651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="651" pos:column="9">fdlgHasButtons</name></cpp:macro>		<cpp:value pos:line="651" pos:column="33">((FDLG)0x40000000)</cpp:value></cpp:define>	<comment type="line" pos:line="651" pos:column="57">// Has a pushbutton.</comment>
<cpp:define pos:line="652" pos:column="1">#<cpp:directive pos:line="652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="652" pos:column="9">fdlgInitializing</name></cpp:macro>	<cpp:value pos:line="652" pos:column="33">((FDLG)0x20000000)</cpp:value></cpp:define>	<comment type="line" pos:line="652" pos:column="57">// Is initializing.</comment>
<cpp:define pos:line="653" pos:column="1">#<cpp:directive pos:line="653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="653" pos:column="9">fdlgAbort</name></cpp:macro>			<cpp:value pos:line="653" pos:column="41">((FDLG)0x10000000)</cpp:value></cpp:define>	<comment type="line" pos:line="653" pos:column="65">// Being destroyed.</comment>
<cpp:define pos:line="654" pos:column="1">#<cpp:directive pos:line="654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="654" pos:column="9">fdlgListOOM</name></cpp:macro>			<cpp:value pos:line="654" pos:column="41">((FDLG)0x08000000)</cpp:value></cpp:define>	<comment type="line" pos:line="654" pos:column="65">// sevList hit.</comment>
<cpp:define pos:line="655" pos:column="1">#<cpp:directive pos:line="655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="655" pos:column="9">fdlgCreating</name></cpp:macro>		<cpp:value pos:line="655" pos:column="33">((FDLG)0x04000000)</cpp:value></cpp:define>	<comment type="line" pos:line="655" pos:column="57">// Creating dialog.</comment>
<cpp:define pos:line="656" pos:column="1">#<cpp:directive pos:line="656" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="656" pos:column="9">fdlgNoninteractive</name></cpp:macro>	<cpp:value pos:line="656" pos:column="33">((FDLG)0x02000000)</cpp:value></cpp:define>	<comment type="line" pos:line="656" pos:column="57">// Non-Interactive?</comment>
<cpp:define pos:line="657" pos:column="1">#<cpp:directive pos:line="657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="657" pos:column="9">fdlgDestroyed</name></cpp:macro>		<cpp:value pos:line="657" pos:column="33">((FDLG)0x01000000)</cpp:value></cpp:define>	<comment type="line" pos:line="657" pos:column="57">// Non-Interactive?</comment>
<cpp:define pos:line="658" pos:column="1">#<cpp:directive pos:line="658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="658" pos:column="9">fdlgNoPaint</name></cpp:macro>			<cpp:value pos:line="658" pos:column="41">((FDLG)0x00800000)</cpp:value></cpp:define>	<comment type="line" pos:line="658" pos:column="65">// Don't paint dialog</comment>
<cpp:define pos:line="659" pos:column="1">#<cpp:directive pos:line="659" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="659" pos:column="9">fdlgChildDlg</name></cpp:macro>		<cpp:value pos:line="659" pos:column="33">((FDLG)0x00400000)</cpp:value></cpp:define>	<comment type="line" pos:line="659" pos:column="57">// MAC only, Dialog is item of parent</comment>
<cpp:define pos:line="660" pos:column="1">#<cpp:directive pos:line="660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="660" pos:column="9">fdlgSendUpdDflt</name></cpp:macro>		<cpp:value pos:line="660" pos:column="33">fdlgChildDlg</cpp:value></cpp:define>		<comment type="line" pos:line="660" pos:column="57">// !MAC only, notify to update default ring</comment>
<cpp:define pos:line="661" pos:column="1">#<cpp:directive pos:line="661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="661" pos:column="9">fdlgImeOn</name></cpp:macro>			<cpp:value pos:line="661" pos:column="41">fdlgMacDisabled</cpp:value></cpp:define>		<comment type="line" pos:line="661" pos:column="65">// FE - Turn On IME when a dialog gets focus.</comment>
<cpp:define pos:line="662" pos:column="1">#<cpp:directive pos:line="662" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="662" pos:column="9">fdlgPrivateMask</name></cpp:macro>		<cpp:value pos:line="662" pos:column="33">((FDLG)0xff800000)</cpp:value></cpp:define>	<comment type="line" pos:line="662" pos:column="57">// All private bits.</comment>

<comment type="line" pos:line="664" pos:column="1">// REVIEW old FDLGS included so that we link properly</comment>
<comment type="line" pos:line="665" pos:column="1">// with older applications</comment>

<comment type="line" pos:line="667" pos:column="1">// all dialogs do this now</comment>
<cpp:define pos:line="668" pos:column="1">#<cpp:directive pos:line="668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="668" pos:column="9">fdlgNoPopupRetDismiss</name></cpp:macro>	<cpp:value pos:line="668" pos:column="33">fdlgNull</cpp:value></cpp:define>	<comment type="line" pos:line="668" pos:column="49">// return in dropped does not dismiss popups</comment>
<cpp:define pos:line="669" pos:column="1">#<cpp:directive pos:line="669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="669" pos:column="9">fdlgNoKey</name></cpp:macro>				<cpp:value pos:line="669" pos:column="49">fdlgNull</cpp:value></cpp:define>	<comment type="line" pos:line="669" pos:column="65">// keyboard interface for controls</comment>

<cpp:define pos:line="671" pos:column="1">#<cpp:directive pos:line="671" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="671" pos:column="9">FDlgCurNoKey</name><parameter_list pos:line="671" pos:column="21">()</parameter_list></cpp:macro> <cpp:value pos:line="671" pos:column="24">(fFalse)</cpp:value></cpp:define>


<cpp:define pos:line="674" pos:column="1">#<cpp:directive pos:line="674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="674" pos:column="9">FTestFdlg</name><parameter_list pos:line="674" pos:column="18">(<param><type><name pos:line="674" pos:column="19">fdlg</name></type></param>, <param><type><name pos:line="674" pos:column="25">fdlgTest</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="674" pos:column="41">(((fdlg) &amp; (fdlgTest)) != fdlgNull)</cpp:value></cpp:define>
<cpp:define pos:line="675" pos:column="1">#<cpp:directive pos:line="675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="675" pos:column="9">ClearFdlg</name><parameter_list pos:line="675" pos:column="18">(<param><type><name pos:line="675" pos:column="19">fdlg</name></type></param>, <param><type><name pos:line="675" pos:column="25">fdlgClear</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="675" pos:column="41">((fdlg) &amp;= ~(fdlgClear))</cpp:value></cpp:define>
<cpp:define pos:line="676" pos:column="1">#<cpp:directive pos:line="676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="676" pos:column="9">SetFdlg</name><parameter_list pos:line="676" pos:column="16">(<param><type><name pos:line="676" pos:column="17">fdlg</name></type></param>, <param><type><name pos:line="676" pos:column="23">fdlgSet</name></type></param>)</parameter_list></cpp:macro>		<cpp:value pos:line="676" pos:column="41">((fdlg) |= (fdlgSet))</cpp:value></cpp:define>
<cpp:define pos:line="677" pos:column="1">#<cpp:directive pos:line="677" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="677" pos:column="9">FlipFdlg</name><parameter_list pos:line="677" pos:column="17">(<param><type><name pos:line="677" pos:column="18">fdlg</name></type></param>, <param><type><name pos:line="677" pos:column="24">fdlgFlip</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="677" pos:column="41">((fdlg) ^= (fdlgFlip))</cpp:value></cpp:define>

<typedef pos:line="679" pos:column="1">typedef <type><struct pos:line="679" pos:column="9">struct <name pos:line="679" pos:column="16">_dli</name>			<comment type="line" pos:line="679" pos:column="41">// DiaLog Initializer. </comment>
	<block pos:line="680" pos:column="9">{<public type="default" pos:line="680" pos:column="10">
	<decl_stmt><decl><type><name pos:line="681" pos:column="9">HWND</name></type>		<name pos:line="681" pos:column="25">hwnd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="682" pos:column="9">XY_SDM</name></type>		<name pos:line="682" pos:column="25">dx</name></decl><op:operator pos:line="682" pos:column="27">,</op:operator> <name pos:line="682" pos:column="29">dy</name>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="683" pos:column="9">FDLG</name></type>		<name pos:line="683" pos:column="25">fdlg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="684" pos:column="9">UINT_SDM</name></type>	<name pos:line="684" pos:column="25">wRef</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="685" pos:column="9">BYTE</name> <type:modifier pos:line="685" pos:column="14">*</type:modifier></type>	<name pos:line="685" pos:column="17">rgb</name></decl>;</decl_stmt>			<comment type="line" pos:line="685" pos:column="41">// App-supplied rgtmw (in sbDlg).</comment>
	<decl_stmt><decl><type><name pos:line="686" pos:column="9">DWORD</name></type>	<name pos:line="686" pos:column="17">clrWindow</name></decl>;</decl_stmt>	<comment type="line" pos:line="686" pos:column="33">// not used yet on the Mac</comment>
	<decl_stmt><decl><type><name pos:line="687" pos:column="9">SB_SDM</name></type>		<name pos:line="687" pos:column="25">sb</name></decl>;</decl_stmt> <comment type="line" pos:line="687" pos:column="29">// majic number to pass back to mem alloc callbacks</comment>
	</public>}</block></struct></type>  <name pos:line="688" pos:column="12">DLI</name>;</typedef>
<cpp:define pos:line="689" pos:column="1">#<cpp:directive pos:line="689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="689" pos:column="9">pdliNull</name></cpp:macro>	<cpp:value pos:line="689" pos:column="25">((DLI *)0)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="693" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="694" pos:column="1">// Misc Functions .</comment>

<decl_stmt><decl><type><specifier pos:line="696" pos:column="1">extern</specifier> <name pos:line="696" pos:column="8">UINT_SDM</name></type> <name pos:line="696" pos:column="17">wRefDlgCur</name></decl>;</decl_stmt>		<comment type="line" pos:line="696" pos:column="41">// Cached value. </comment>
<decl_stmt><decl><type><specifier pos:line="697" pos:column="1">extern</specifier> <name pos:line="697" pos:column="8">HCAB</name></type>	<name pos:line="697" pos:column="17">hcabDlgCur</name></decl>;</decl_stmt>		<comment type="line" pos:line="697" pos:column="41">// Cached value.</comment>

<cpp:define pos:line="699" pos:column="1">#<cpp:directive pos:line="699" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="699" pos:column="9">HcabDlgCur</name><parameter_list pos:line="699" pos:column="19">()</parameter_list></cpp:macro>	<cpp:value pos:line="699" pos:column="25">HcabQueryCur()</cpp:value></cpp:define>
<cpp:define pos:line="700" pos:column="1">#<cpp:directive pos:line="700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="700" pos:column="9">WRefDlgCur</name><parameter_list pos:line="700" pos:column="19">()</parameter_list></cpp:macro>	<cpp:value pos:line="700" pos:column="25">WRefQueryCur()</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="702" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="703" pos:column="1">// RenderProc environment-specific Draw Structure.			     </comment>

<typedef pos:line="705" pos:column="1">typedef <type><struct pos:line="705" pos:column="9">struct <name pos:line="705" pos:column="16">_rds</name>
	<block pos:line="706" pos:column="9">{<public type="default" pos:line="706" pos:column="10">
	<decl_stmt><decl><type><name pos:line="707" pos:column="9">HDC</name></type>	<name pos:line="707" pos:column="17">hpdc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="708" pos:column="9">HWND</name></type>		<name pos:line="708" pos:column="25">hwnd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="709" pos:column="9">RECT</name></type>	<name pos:line="709" pos:column="17">rect</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="711" pos:column="9">WCHAR</name> <type:modifier pos:line="711" pos:column="15">*</type:modifier> <type:modifier pos:line="711" pos:column="17">*</type:modifier></type>	<name pos:line="711" pos:column="25">pwz</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="712" pos:column="9">BOOL_SDM</name></type>	<name pos:line="712" pos:column="25">fNoKey</name></decl>;</decl_stmt>	<comment type="line" pos:line="712" pos:column="33">//no keybd interface</comment>
	</public>}</block></struct></type> <name pos:line="713" pos:column="11">RDS</name>;</typedef>

<cpp:define pos:line="715" pos:column="1">#<cpp:directive pos:line="715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="715" pos:column="9">SM_SETSECRET</name></cpp:macro>		<cpp:value pos:line="715" pos:column="33">0x800a</cpp:value></cpp:define>	<comment type="line" pos:line="715" pos:column="41">// Tell (any) FEDT text is "secret". </comment>
<cpp:define pos:line="716" pos:column="1">#<cpp:directive pos:line="716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="716" pos:column="9">SM_GETSECRET</name></cpp:macro>		<cpp:value pos:line="716" pos:column="33">0x800b</cpp:value></cpp:define>  <comment type="line" pos:line="716" pos:column="41">// Is the FEDT secret?</comment>

<comment type="line" pos:line="718" pos:column="1">// Private message sent from fedt to dialog window.</comment>
<cpp:define pos:line="719" pos:column="1">#<cpp:directive pos:line="719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="719" pos:column="9">SM_USER</name></cpp:macro>			<cpp:value pos:line="719" pos:column="33">0x8005</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="722" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="723" pos:column="1">// PictureProc message-specific parameter.				     </comment>

<typedef pos:line="725" pos:column="1">typedef <type><struct pos:line="725" pos:column="9">struct <name pos:line="725" pos:column="16">_sdmp</name>
	<block pos:line="726" pos:column="9">{<public type="default" pos:line="726" pos:column="10">
	<decl_stmt><decl><type><name pos:line="727" pos:column="9">HWND</name></type> <name pos:line="727" pos:column="14">hwnd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="728" pos:column="9">REC</name> <type:modifier pos:line="728" pos:column="13">*</type:modifier></type>	<name pos:line="728" pos:column="17">prec</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="729" pos:column="9">FTMS</name></type>	<name pos:line="729" pos:column="17">ftms</name></decl>;</decl_stmt>
	<union pos:line="730" pos:column="9">union
		<block pos:line="731" pos:column="17">{<public type="default" pos:line="731" pos:column="18">
		<decl_stmt><decl><type><name pos:line="732" pos:column="17">LPMSG</name></type>	<name pos:line="732" pos:column="25">lpmsg</name></decl>;</decl_stmt>                 <comment type="line" pos:line="732" pos:column="48">// tmmInput</comment>
		<decl_stmt><decl><type><name pos:line="733" pos:column="17">unsigned</name></type> <name pos:line="733" pos:column="26">chAccel</name></decl>;</decl_stmt>              <comment type="line" pos:line="733" pos:column="48">// tmmMatchAccel</comment>
		<decl_stmt><decl><type><name pos:line="734" pos:column="17">BOOL_SDM</name></type> <name pos:line="734" pos:column="26">fBackTab</name></decl>;</decl_stmt>             <comment type="line" pos:line="734" pos:column="48">// tmmCtrlTab</comment>
		<struct pos:line="735" pos:column="17">struct
			<block pos:line="736" pos:column="25">{<public type="default" pos:line="736" pos:column="26">
			<decl_stmt><decl><type><name pos:line="737" pos:column="25">BOOL_SDM</name></type> <name pos:line="737" pos:column="34">fAction</name></decl>;</decl_stmt>          <comment type="line" pos:line="737" pos:column="52">// tmmCreate</comment>
			<decl_stmt><decl><type><name pos:line="738" pos:column="25">BOOL_SDM</name></type> <name pos:line="738" pos:column="34">fHelp</name></decl>;</decl_stmt>            <comment type="line" pos:line="738" pos:column="52">// tmmCreate</comment>
			</public>}</block>;</struct>
<cpp:ifdef pos:line="740" pos:column="1">#<cpp:directive pos:line="740" pos:column="2">ifdef</cpp:directive> <name pos:line="740" pos:column="8">SDM_WCT_DEFINED</name></cpp:ifdef>	<comment type="line" pos:line="740" pos:column="25">//msoswct.h included</comment>
		<decl_stmt><decl><type><name pos:line="741" pos:column="17">LPWCTL</name></type> <name pos:line="741" pos:column="24">lpwctl</name></decl>;</decl_stmt>                 <comment type="line" pos:line="741" pos:column="48">// tmmWctControl</comment>
		<struct pos:line="742" pos:column="17">struct
			<block pos:line="743" pos:column="25">{<public type="default" pos:line="743" pos:column="26">
			<decl_stmt><decl><type><name pos:line="744" pos:column="25">LPWTXI</name></type> <name pos:line="744" pos:column="32">lpwtxi</name></decl>;</decl_stmt>             <comment type="line" pos:line="744" pos:column="52">// tmmWctText</comment>
			<decl_stmt><decl><type><name pos:line="745" pos:column="25">int</name></type> <name pos:line="745" pos:column="29">cch</name></decl>;</decl_stmt>                   <comment type="line" pos:line="745" pos:column="52">// tmmWctText output</comment>
			</public>}</block>;</struct>
		<decl_stmt><decl><type><name pos:line="747" pos:column="17">int</name></type> <name pos:line="747" pos:column="21">cwz</name></decl>;</decl_stmt>                       <comment type="line" pos:line="747" pos:column="48">// tmmWctListCount output</comment>
<cpp:endif pos:line="748" pos:column="1">#<cpp:directive pos:line="748" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="748" pos:column="8">//SDM_WCT_DEFINED</comment>
		<struct pos:line="749" pos:column="17">struct                         
			<block pos:line="750" pos:column="25">{<public type="default" pos:line="750" pos:column="26">
			<decl_stmt><decl><type><name pos:line="751" pos:column="25">HDC</name></type>   <name pos:line="751" pos:column="31">hpdc</name></decl>;</decl_stmt>                <comment type="line" pos:line="751" pos:column="52">// tmmPaint, tmmMeasure</comment>
			<decl_stmt><decl><type><name pos:line="752" pos:column="25">POINT</name></type> <name pos:line="752" pos:column="31">ptDesiredDimensions</name></decl>;</decl_stmt> <comment type="line" pos:line="752" pos:column="52">// tmmMeasure, tmmAboutToResize</comment>
			</public>}</block>;</struct>
		</public>}</block>;</union>
	</public>}</block></struct></type> <name pos:line="755" pos:column="11">SDMP</name>;</typedef>

<cpp:define pos:line="757" pos:column="1">#<cpp:directive pos:line="757" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="757" pos:column="9">psdmpNull</name></cpp:macro>	<cpp:value pos:line="757" pos:column="25">((SDMP *)NULL)</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="759" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="760" pos:column="1">// Procedure templates (for callbacks).					     </comment>

<cpp:define pos:line="762" pos:column="1">#<cpp:directive pos:line="762" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="762" pos:column="9">SDM_CALLBACK</name></cpp:macro>	<cpp:value pos:line="762" pos:column="25">PASCAL</cpp:value></cpp:define>	<comment type="line" pos:line="762" pos:column="33">// Far callback.</comment>

<typedef pos:line="764" pos:column="1">typedef <function_decl><type><name pos:line="764" pos:column="9">BOOL_SDM</name></type> (<name pos:line="764" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="764" pos:column="32">*</type:modifier> <name pos:line="764" pos:column="34">PFN_DIALOG</name>)<parameter_list pos:line="764" pos:column="45">(<param><decl><type><name pos:line="764" pos:column="46">DLM</name></type></decl></param>, <param><decl><type><name pos:line="764" pos:column="51">TMC</name></type></decl></param>, <param><decl><type><name pos:line="764" pos:column="56">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="764" pos:column="66">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="764" pos:column="76">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="765" pos:column="1">typedef <type><name pos:line="765" pos:column="9">PFN_DIALOG</name></type>	<name pos:line="765" pos:column="25">PFN_ITEM</name>;</typedef>

<comment type="line" pos:line="767" pos:column="1">// EB/EL Cab Save CallBack. </comment>

<typedef pos:line="769" pos:column="1">typedef <function_decl><type><name pos:line="769" pos:column="9">VOID</name></type> (<name pos:line="769" pos:column="15">SDM_CALLBACK</name> <type:modifier pos:line="769" pos:column="28">*</type:modifier> <name pos:line="769" pos:column="30">PFN_SAVECAB</name>)<parameter_list pos:line="769" pos:column="42">(<param><decl><type><name pos:line="769" pos:column="43">HCAB</name></type></decl></param>, <param><decl><type><name pos:line="769" pos:column="49">UINT_SDM</name></type></decl></param>, <param><decl><type><name pos:line="769" pos:column="59">TMC</name></type></decl></param>, <param><decl><type><name pos:line="769" pos:column="64">BOOL_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:define pos:line="770" pos:column="1">#<cpp:directive pos:line="770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="770" pos:column="9">pfnSaveCabNull</name></cpp:macro>	<cpp:value pos:line="770" pos:column="25">((PFN_SAVECAB)0)</cpp:value></cpp:define>

<comment type="line" pos:line="772" pos:column="1">// Top level Modal Message Filter. </comment>
<typedef pos:line="773" pos:column="1">typedef <function_decl><type><name pos:line="773" pos:column="9">BOOL_SDM</name></type> (<name pos:line="773" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="773" pos:column="32">*</type:modifier> <name pos:line="773" pos:column="34">PFN_FILTERMSG</name>)<parameter_list pos:line="773" pos:column="48">(<param><decl><type><name pos:line="773" pos:column="49">LPMSG</name></type></decl></param>)</parameter_list>;</function_decl></typedef>

<cpp:define pos:line="775" pos:column="1">#<cpp:directive pos:line="775" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="775" pos:column="9">pfnFilterMsgNull</name></cpp:macro>	<cpp:value pos:line="775" pos:column="33">((PFN_FILTERMSG)0)</cpp:value></cpp:define>

<typedef pos:line="777" pos:column="1">typedef <function_decl><type><name pos:line="777" pos:column="9">int</name></type> (<name pos:line="777" pos:column="14">WINAPI</name> <type:modifier pos:line="777" pos:column="21">*</type:modifier> <name pos:line="777" pos:column="23">PFN_ALERT</name>)<parameter_list pos:line="777" pos:column="33">(<param><decl><type><name pos:line="777" pos:column="34">HWND</name></type></decl></param>, <param><decl><type><name pos:line="777" pos:column="40">LPCWSTR</name></type></decl></param>, <param><decl><type><name pos:line="777" pos:column="49">LPCWSTR</name></type></decl></param>, <param><decl><type><name pos:line="777" pos:column="58">UINT</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:define pos:line="778" pos:column="1">#<cpp:directive pos:line="778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="778" pos:column="9">pfnAlertNull</name></cpp:macro>		<cpp:value pos:line="778" pos:column="33">((PFN_ALERT)NULL)</cpp:value></cpp:define>

<comment type="line" pos:line="780" pos:column="1">// General control proc template. </comment>
<typedef pos:line="781" pos:column="1">typedef <function_decl><type><name pos:line="781" pos:column="9">UCBK_SDM</name></type> (<name pos:line="781" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="781" pos:column="32">*</type:modifier> <name pos:line="781" pos:column="34">PFN_CTRL</name>)<parameter_list pos:line="781" pos:column="43">(<param><decl><type><name pos:line="781" pos:column="44">TMM</name></type></decl></param>, <param><decl><type><name pos:line="781" pos:column="49">VOID</name> <type:modifier pos:line="781" pos:column="54">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="781" pos:column="57">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="781" pos:column="67">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="781" pos:column="77">TMC</name></type></decl></param>, <param><decl><type><name pos:line="781" pos:column="82">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:define pos:line="782" pos:column="1">#<cpp:directive pos:line="782" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="782" pos:column="9">pfnCtrlNull</name></cpp:macro>	<cpp:value pos:line="782" pos:column="25">((PFN_CTRL)0)</cpp:value></cpp:define>

<typedef pos:line="784" pos:column="1">typedef <function_decl><type><name pos:line="784" pos:column="9">UCBK_SDM</name></type> (<name pos:line="784" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="784" pos:column="32">*</type:modifier> <name pos:line="784" pos:column="34">PFN_PIC</name>)<parameter_list pos:line="784" pos:column="42">(<param><decl><type><name pos:line="784" pos:column="43">TMM</name></type></decl></param>, <param><decl><type><name pos:line="784" pos:column="48">SDMP</name> <type:modifier pos:line="784" pos:column="53">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="784" pos:column="56">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="784" pos:column="66">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="784" pos:column="76">TMC</name></type></decl></param>, <param><decl><type><name pos:line="784" pos:column="81">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="785" pos:column="1">typedef <function_decl><type><name pos:line="785" pos:column="9">UCBK_SDM</name></type> (<name pos:line="785" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="785" pos:column="32">*</type:modifier> <name pos:line="785" pos:column="34">PFN_PARSE</name>)<parameter_list pos:line="785" pos:column="44">(<param><decl><type><name pos:line="785" pos:column="45">TMM</name></type></decl></param>, <param><decl><type><name pos:line="785" pos:column="50">WCHAR</name> <type:modifier pos:line="785" pos:column="56">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="785" pos:column="59">VOID</name> <type:modifier pos:line="785" pos:column="64">*</type:modifier> <type:modifier pos:line="785" pos:column="66">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="785" pos:column="69">BARG_SDM</name></type></decl></param>, <param><decl><type><name pos:line="785" pos:column="79">TMC</name></type></decl></param>, <param><decl><type><name pos:line="785" pos:column="84">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="786" pos:column="1">typedef <function_decl><type><name pos:line="786" pos:column="9">UCBK_SDM</name></type> (<name pos:line="786" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="786" pos:column="32">*</type:modifier> <name pos:line="786" pos:column="34">PFN_LISTBOX</name>)<parameter_list pos:line="786" pos:column="46">(<param><decl><type><name pos:line="786" pos:column="47">TMM</name></type></decl></param>, <param><decl><type><name pos:line="786" pos:column="52">WCHAR</name> <type:modifier pos:line="786" pos:column="58">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="786" pos:column="61">ILBE_SDM</name></type></decl></param>, <param><decl><type><name pos:line="786" pos:column="71">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="786" pos:column="81">TMC</name></type></decl></param>, <param><decl><type><name pos:line="786" pos:column="86">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="787" pos:column="1">typedef <function_decl><type><name pos:line="787" pos:column="9">UCBK_SDM</name></type> (<name pos:line="787" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="787" pos:column="32">*</type:modifier> <name pos:line="787" pos:column="34">PFN_RENDER</name>)<parameter_list pos:line="787" pos:column="45">(<param><decl><type><name pos:line="787" pos:column="46">TMM</name></type></decl></param>, <param><decl><type><name pos:line="787" pos:column="51">RDS</name> <type:modifier pos:line="787" pos:column="55">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="787" pos:column="58">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="787" pos:column="64">FTMS</name></type></decl></param>, <param><decl><type><name pos:line="787" pos:column="70">TMC</name></type></decl></param>, <param><decl><type><name pos:line="787" pos:column="75">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="788" pos:column="1">typedef <type><name pos:line="788" pos:column="9">PFN_PARSE</name></type>	<name pos:line="788" pos:column="25">PFN_FORMAT</name>;</typedef>

<comment type="line" pos:line="790" pos:column="1">// Autocomplete call back</comment>
<comment type="line" pos:line="791" pos:column="1">// Second Argument(WCHAR *) is the string to be autocompleted</comment>
<comment type="line" pos:line="792" pos:column="1">// Third Argument(WCHAR *) is the return string by the function</comment>
<comment type="line" pos:line="793" pos:column="1">// Return TRUE if autocompleting should occur</comment>
<comment type="line" pos:line="794" pos:column="1">// Return FALSE if no changes(i.e. autocompletion) should occur</comment>
<typedef pos:line="795" pos:column="1">typedef <function_decl><type><name pos:line="795" pos:column="9">BOOL_SDM</name></type> (<name pos:line="795" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="795" pos:column="32">*</type:modifier> <name pos:line="795" pos:column="34">PFN_AUTOCOMPLETE</name>)<parameter_list pos:line="795" pos:column="51">(<param><decl><type><name pos:line="795" pos:column="52">void</name> <type:modifier pos:line="795" pos:column="57">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="795" pos:column="60">TMC</name></type></decl></param>, <param><decl><type><name pos:line="795" pos:column="65">WCHAR</name> <type:modifier pos:line="795" pos:column="71">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="795" pos:column="74">WCHAR</name> <type:modifier pos:line="795" pos:column="80">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>

<comment type="line" pos:line="797" pos:column="1">// Resize callback</comment>
<comment type="line" pos:line="798" pos:column="1">// first arg = tmc of control being moved</comment>
<comment type="line" pos:line="799" pos:column="1">// second arg = REC pointing at move location</comment>
<typedef pos:line="800" pos:column="1">typedef <function_decl><type><name pos:line="800" pos:column="9">void</name></type> (<name pos:line="800" pos:column="15">SDM_CALLBACK</name> <type:modifier pos:line="800" pos:column="28">*</type:modifier> <name pos:line="800" pos:column="30">PFN_RESIZE</name>)<parameter_list pos:line="800" pos:column="41">(<param><decl><type><name pos:line="800" pos:column="42">TMC</name></type></decl></param>, <param><decl><type><name pos:line="800" pos:column="47">REC</name> <type:modifier pos:line="800" pos:column="51">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>


<comment type="line" pos:line="803" pos:column="1">// Dialog Creation callback</comment>
<comment type="line" pos:line="804" pos:column="1">// Argument is the new dialog hwnd which might be useful for subclassing.</comment>
<typedef pos:line="805" pos:column="1">typedef <function_decl><type><name pos:line="805" pos:column="9">void</name></type> (<name pos:line="805" pos:column="15">SDM_CALLBACK</name> <type:modifier pos:line="805" pos:column="28">*</type:modifier> <name pos:line="805" pos:column="30">PFN_DLGCREATED</name>)<parameter_list pos:line="805" pos:column="45">(<param><decl><type><name pos:line="805" pos:column="46">HWND</name></type></decl></param>)</parameter_list>;</function_decl></typedef>

<comment type="line" pos:line="807" pos:column="1">// Peek/GetMessage callback</comment>
<comment type="line" pos:line="808" pos:column="1">// </comment>
<typedef pos:line="809" pos:column="1">typedef <function_decl><type><name pos:line="809" pos:column="9">BOOL_SDM</name></type> (<name pos:line="809" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="809" pos:column="32">*</type:modifier><name pos:line="809" pos:column="33">SDM_PFNPEEKMESSAGE</name>)<parameter_list pos:line="809" pos:column="52">(<param><decl><type><name pos:line="809" pos:column="53">MSG</name> <type:modifier pos:line="809" pos:column="57">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="809" pos:column="60">HWND</name></type></decl></param>, <param><decl><type><name pos:line="809" pos:column="66">UINT</name></type></decl></param>, <param><decl><type><name pos:line="809" pos:column="72">UINT</name></type></decl></param>, <param><decl><type><name pos:line="809" pos:column="78">UINT</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="810" pos:column="1">typedef <function_decl><type><name pos:line="810" pos:column="9">BOOL_SDM</name></type> (<name pos:line="810" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="810" pos:column="32">*</type:modifier><name pos:line="810" pos:column="33">SDM_PFNGETMESSAGE</name>)<parameter_list pos:line="810" pos:column="51">(<param><decl><type><name pos:line="810" pos:column="52">MSG</name> <type:modifier pos:line="810" pos:column="56">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="810" pos:column="59">HWND</name></type></decl></param>, <param><decl><type><name pos:line="810" pos:column="65">UINT</name></type></decl></param>, <param><decl><type><name pos:line="810" pos:column="71">UINT</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<comment type="line" format="doxygen" pos:line="811" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="812" pos:column="1">// Procedure Templates.							     </comment>


<macro><name pos:line="815" pos:column="1">MSOAPI_</name><argument_list pos:line="815" pos:column="8">(<argument pos:line="815" pos:column="9">HDLG</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="815" pos:column="15">HdlgGetCur</name><argument_list pos:line="815" pos:column="25">( <argument><expr><name pos:line="815" pos:column="27">void</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="816" pos:column="1">MSOAPI_</name><argument_list pos:line="816" pos:column="8">(<argument pos:line="816" pos:column="9">HDLG</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="816" pos:column="15">HdlgGetFocus</name><argument_list pos:line="816" pos:column="27">( <argument><expr><name pos:line="816" pos:column="29">void</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="817" pos:column="1">MSOAPI_</name><argument_list pos:line="817" pos:column="8">(<argument pos:line="817" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="817" pos:column="15">MsoFDlgIsWorkpane</name><argument_list pos:line="817" pos:column="32">(<argument pos:line="817" pos:column="33">HDLG hdlg</argument>)</argument_list></macro><empty_stmt pos:line="817" pos:column="43">;</empty_stmt>
<macro><name pos:line="818" pos:column="1">MSOAPI_</name><argument_list pos:line="818" pos:column="8">(<argument pos:line="818" pos:column="9">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="818" pos:column="15">MsoProtectSDMInWorkpane</name><argument_list pos:line="818" pos:column="38">(<argument><expr><name pos:line="818" pos:column="39">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="819" pos:column="1">MSOAPIX_</name><argument_list pos:line="819" pos:column="9">(<argument pos:line="819" pos:column="10">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="819" pos:column="16">MsoUnprotectSDMInWorkpane</name><argument_list pos:line="819" pos:column="41">(<argument><expr><name pos:line="819" pos:column="42">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="820" pos:column="1">MSOAPI_</name><argument_list pos:line="820" pos:column="8">(<argument pos:line="820" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="820" pos:column="15">MsoNotifySdmOfFocus</name><argument_list pos:line="820" pos:column="34">(<argument pos:line="820" pos:column="35">TMC tmc</argument>, <argument pos:line="820" pos:column="44">BOOL fFocus</argument>)</argument_list></macro><empty_stmt pos:line="820" pos:column="56">;</empty_stmt>
<macro><name pos:line="821" pos:column="1">MSOAPI_</name><argument_list pos:line="821" pos:column="8">(<argument pos:line="821" pos:column="9">FARPROC</argument>)</argument_list></macro> <macro><name pos:line="821" pos:column="18">LpfnMsoSetSdmMessageWrap</name><argument_list pos:line="821" pos:column="42">(<argument pos:line="821" pos:column="43">FARPROC lpfn</argument>, <argument pos:line="821" pos:column="57">int fUnicode</argument>, <argument pos:line="821" pos:column="71">int fPeek</argument>)</argument_list></macro><empty_stmt pos:line="821" pos:column="81">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="824" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="825" pos:column="1">// FtmeIsSdmMessage() return values.					     </comment>

<comment type="line" pos:line="827" pos:column="1">// Need special return values for functions that normally return fTrue/fFalse.</comment>
<typedef pos:line="828" pos:column="1">typedef <type><name pos:line="828" pos:column="9">UINT_SDM</name></type>		<name pos:line="828" pos:column="33">FTME</name>;</typedef>
<cpp:define pos:line="829" pos:column="1">#<cpp:directive pos:line="829" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="829" pos:column="9">ftmeNull</name></cpp:macro>	<cpp:value pos:line="829" pos:column="25">((FTME)0)</cpp:value></cpp:define>
<cpp:define pos:line="830" pos:column="1">#<cpp:directive pos:line="830" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="830" pos:column="9">ftmeTrue</name></cpp:macro>	<cpp:value pos:line="830" pos:column="25">((FTME)1)</cpp:value></cpp:define>
<cpp:define pos:line="831" pos:column="1">#<cpp:directive pos:line="831" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="831" pos:column="9">ftmeError</name></cpp:macro>	<cpp:value pos:line="831" pos:column="25">((FTME)2)</cpp:value></cpp:define>
<cpp:define pos:line="832" pos:column="1">#<cpp:directive pos:line="832" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="832" pos:column="9">ftmeDone</name></cpp:macro>	<cpp:value pos:line="832" pos:column="25">((FTME)4)</cpp:value></cpp:define>
<cpp:define pos:line="833" pos:column="1">#<cpp:directive pos:line="833" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="833" pos:column="9">ftmeEaten</name></cpp:macro>	<cpp:value pos:line="833" pos:column="25">((FTME)8)</cpp:value></cpp:define>	<comment type="line" pos:line="833" pos:column="41">// modal dialog is front window,</comment>
					<comment type="line" pos:line="834" pos:column="41">// and received click on other </comment>
					<comment type="line" pos:line="835" pos:column="41">// window.  App should beep.b</comment>




<comment type="line" format="doxygen" pos:line="840" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="841" pos:column="1">// Hard-coded callbacks.						     </comment>

<comment type="line" pos:line="843" pos:column="1">// Out Of Memory Support. </comment>
<typedef pos:line="844" pos:column="1">typedef	<type><name pos:line="844" pos:column="9">UINT_SDM</name></type>		<name pos:line="844" pos:column="33">SEV</name>;</typedef>
<cpp:define pos:line="845" pos:column="1">#<cpp:directive pos:line="845" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="845" pos:column="9">sevMinor</name></cpp:macro>	<cpp:value pos:line="845" pos:column="25">1</cpp:value></cpp:define>		<comment type="line" pos:line="845" pos:column="41">// Minor (painting) error.</comment>
					<comment type="line" pos:line="846" pos:column="41">// don't cast, since used in MASM</comment>
<cpp:define pos:line="847" pos:column="1">#<cpp:directive pos:line="847" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="847" pos:column="9">sevMajor</name></cpp:macro>	<cpp:value pos:line="847" pos:column="25">((SEV)2)</cpp:value></cpp:define>	<comment type="line" pos:line="847" pos:column="41">// Major error.</comment>
<cpp:define pos:line="848" pos:column="1">#<cpp:directive pos:line="848" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="848" pos:column="9">sevLmem</name></cpp:macro>		<cpp:value pos:line="848" pos:column="25">((SEV)3)</cpp:value></cpp:define>	<comment type="line" pos:line="848" pos:column="41">// Out of LMEM memory.</comment>
<cpp:define pos:line="849" pos:column="1">#<cpp:directive pos:line="849" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="849" pos:column="9">sevHcabFromDlg</name></cpp:macro>	<cpp:value pos:line="849" pos:column="25">((SEV)4)</cpp:value></cpp:define>	<comment type="line" pos:line="849" pos:column="41">// HcabFromDlg() failure.</comment>
<cpp:define pos:line="850" pos:column="1">#<cpp:directive pos:line="850" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="850" pos:column="9">sevList</name></cpp:macro>		<cpp:value pos:line="850" pos:column="25">((SEV)6)</cpp:value></cpp:define>	<comment type="line" pos:line="850" pos:column="41">// ListBox fill failure.</comment>

<comment type="block" pos:line="852" pos:column="1">/* Current SDM mem functions. */</comment>
<cpp:ifndef pos:line="853" pos:column="1">#<cpp:directive pos:line="853" pos:column="2">ifndef</cpp:directive> <name pos:line="853" pos:column="9">PpvSdmAllocCb</name></cpp:ifndef>
<macro><name pos:line="854" pos:column="1">MSOMACAPI_</name><argument_list pos:line="854" pos:column="11">(<argument pos:line="854" pos:column="12">VOID**</argument>)</argument_list></macro> 	<function_decl><type><name pos:line="854" pos:column="25">SDM_CALLBACK</name></type> <name pos:line="854" pos:column="38">PpvSdmAllocCb</name><parameter_list pos:line="854" pos:column="51">(<param><decl><type><name pos:line="854" pos:column="52">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="854" pos:column="60">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<macro><name pos:line="855" pos:column="1">MSOMACAPI_</name><argument_list pos:line="855" pos:column="11">(<argument pos:line="855" pos:column="12">BOOL_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="855" pos:column="22">SDM_CALLBACK</name></type> <name pos:line="855" pos:column="35">FSdmReallocPpv</name><parameter_list pos:line="855" pos:column="49">(<param><decl><type><name pos:line="855" pos:column="50">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="855" pos:column="58">VOID</name> <type:modifier pos:line="855" pos:column="63">*</type:modifier><type:modifier pos:line="855" pos:column="64">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="855" pos:column="67">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<macro><name pos:line="856" pos:column="1">MSOMACAPI_</name><argument_list pos:line="856" pos:column="11">(<argument pos:line="856" pos:column="12">VOID</argument>)</argument_list></macro>		<function_decl><type><name pos:line="856" pos:column="33">SDM_CALLBACK</name></type> <name pos:line="856" pos:column="46">FreeSdmPpv</name><parameter_list pos:line="856" pos:column="56">(<param><decl><type><name pos:line="856" pos:column="57">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="856" pos:column="65">VOID</name> <type:modifier pos:line="856" pos:column="70">*</type:modifier><type:modifier pos:line="856" pos:column="71">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
<cpp:if pos:line="857" pos:column="1">#<cpp:directive pos:line="857" pos:column="2">if</cpp:directive> <expr><name pos:line="857" pos:column="5">VSMSODEBUG</name></expr></cpp:if>
<macro><name pos:line="858" pos:column="1">MSOMACAPI_</name><argument_list pos:line="858" pos:column="11">(<argument pos:line="858" pos:column="12">BOOL_SDM</argument>)</argument_list></macro> <function_decl><type><name pos:line="858" pos:column="22">SDM_CALLBACK</name></type> <name pos:line="858" pos:column="35">FSaveSdmBe</name><parameter_list pos:line="858" pos:column="45">(<param><decl><type><name pos:line="858" pos:column="46">HMSOINST</name></type> <name pos:line="858" pos:column="55">hinst</name></decl></param>, <param><decl><type><name pos:line="858" pos:column="62">LPARAM</name></type> <name pos:line="858" pos:column="69">lparam</name></decl></param>, <param><decl><type><name pos:line="858" pos:column="77">VOID</name><type:modifier pos:line="858" pos:column="81">*</type:modifier><type:modifier pos:line="858" pos:column="82">*</type:modifier></type> <name pos:line="858" pos:column="84">ppv</name></decl></param>, <param><decl><type><name pos:line="858" pos:column="89">int</name></type> <name pos:line="858" pos:column="93">bt</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="859" pos:column="1">#<cpp:directive pos:line="859" pos:column="2">endif</cpp:directive></cpp:endif>
<macro><name pos:line="860" pos:column="1">MSOMACAPI_</name><argument_list pos:line="860" pos:column="11">(<argument pos:line="860" pos:column="12">UINT_SDM</argument>)</argument_list></macro>	<function_decl><type><name pos:line="860" pos:column="25">SDM_CALLBACK</name></type> <name pos:line="860" pos:column="38">CbSdmSizePpv</name><parameter_list pos:line="860" pos:column="50">(<param><decl><type><name pos:line="860" pos:column="51">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="860" pos:column="59">VOID</name> <type:modifier pos:line="860" pos:column="64">*</type:modifier><type:modifier pos:line="860" pos:column="65">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
<macro><name pos:line="861" pos:column="1">MSOMACAPI_</name><argument_list pos:line="861" pos:column="11">(<argument pos:line="861" pos:column="12">BOOL_SDM</argument>)</argument_list></macro>	<function_decl><type><name pos:line="861" pos:column="25">SDM_CALLBACK</name></type> <name pos:line="861" pos:column="38">FSdmDoIdle</name><parameter_list pos:line="861" pos:column="48">(<param><decl><type><name pos:line="861" pos:column="49">BOOL_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<macro><name pos:line="862" pos:column="1">MSOMACAPI_</name><argument_list pos:line="862" pos:column="11">(<argument pos:line="862" pos:column="12">BOOL_SDM</argument>)</argument_list></macro>	<function_decl><type><name pos:line="862" pos:column="25">SDM_CALLBACK</name></type> <name pos:line="862" pos:column="38">FRetrySdmError</name><parameter_list pos:line="862" pos:column="52">(<param><decl><type><name pos:line="862" pos:column="53">UINT_SDM</name></type></decl></param>, <param><decl><type><name pos:line="862" pos:column="63">HDLG</name></type></decl></param>, <param><decl><type><name pos:line="862" pos:column="69">SEV</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="863" pos:column="1">#<cpp:directive pos:line="863" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="865" pos:column="1">/* Default SDM mem functions. */</comment>
<macro><name pos:line="866" pos:column="1">MSOMACAPIX_</name><argument_list pos:line="866" pos:column="12">(<argument pos:line="866" pos:column="13">VOID**</argument>)</argument_list></macro> 	<function_decl><type><name pos:line="866" pos:column="25">SDM_CALLBACK</name></type> <name pos:line="866" pos:column="38">MsoPpvSdmAllocCb</name><parameter_list pos:line="866" pos:column="54">(<param><decl><type><name pos:line="866" pos:column="55">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="866" pos:column="63">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="867" pos:column="1">BOOL_SDM</name> <name pos:line="867" pos:column="10">SDM_CALLBACK</name></type> <name pos:line="867" pos:column="23">MsoFSdmReallocPpv</name><parameter_list pos:line="867" pos:column="40">(<param><decl><type><name pos:line="867" pos:column="41">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="867" pos:column="49">VOID</name> <type:modifier pos:line="867" pos:column="54">*</type:modifier><type:modifier pos:line="867" pos:column="55">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="867" pos:column="58">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="868" pos:column="1">VOID</name>		<name pos:line="868" pos:column="17">SDM_CALLBACK</name></type> <name pos:line="868" pos:column="30">MsoFreeSdmPpv</name><parameter_list pos:line="868" pos:column="43">(<param><decl><type><name pos:line="868" pos:column="44">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="868" pos:column="52">VOID</name> <type:modifier pos:line="868" pos:column="57">*</type:modifier><type:modifier pos:line="868" pos:column="58">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="869" pos:column="1">UINT_SDM</name>	<name pos:line="869" pos:column="17">SDM_CALLBACK</name></type> <name pos:line="869" pos:column="30">MsoCbSdmSizePpv</name><parameter_list pos:line="869" pos:column="45">(<param><decl><type><name pos:line="869" pos:column="46">SB_SDM</name></type></decl></param>, <param><decl><type><name pos:line="869" pos:column="54">VOID</name> <type:modifier pos:line="869" pos:column="59">*</type:modifier><type:modifier pos:line="869" pos:column="60">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
<cpp:if pos:line="870" pos:column="1">#<cpp:directive pos:line="870" pos:column="2">if</cpp:directive> <expr><name pos:line="870" pos:column="5">VSMSODEBUG</name></expr></cpp:if>
<function_decl><type><name pos:line="871" pos:column="1">BOOL_SDM</name> <name pos:line="871" pos:column="10">SDM_CALLBACK</name></type> <name pos:line="871" pos:column="23">MsoFSaveSdmBe</name><parameter_list pos:line="871" pos:column="36">(<param><decl><type><name pos:line="871" pos:column="37">HMSOINST</name></type> <name pos:line="871" pos:column="46">hinst</name></decl></param>, <param><decl><type><name pos:line="871" pos:column="53">LPARAM</name></type> <name pos:line="871" pos:column="60">lparam</name></decl></param>, <param><decl><type><name pos:line="871" pos:column="68">VOID</name><type:modifier pos:line="871" pos:column="72">*</type:modifier><type:modifier pos:line="871" pos:column="73">*</type:modifier></type> <name pos:line="871" pos:column="75">ppv</name></decl></param>, <param><decl><type><name pos:line="871" pos:column="80">int</name></type> <name pos:line="871" pos:column="84">bt</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="872" pos:column="1">#<cpp:directive pos:line="872" pos:column="2">endif</cpp:directive></cpp:endif>
<function_decl><type><name pos:line="873" pos:column="1">BOOL_SDM</name>	<name pos:line="873" pos:column="17">SDM_CALLBACK</name></type> <name pos:line="873" pos:column="30">MsoFSdmDoIdle</name><parameter_list pos:line="873" pos:column="43">(<param><decl><type><name pos:line="873" pos:column="44">BOOL_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="874" pos:column="1">BOOL_SDM</name>	<name pos:line="874" pos:column="17">SDM_CALLBACK</name></type> <name pos:line="874" pos:column="30">MsoFRetrySdmError</name><parameter_list pos:line="874" pos:column="47">(<param><decl><type><name pos:line="874" pos:column="48">UINT_SDM</name></type></decl></param>, <param><decl><type><name pos:line="874" pos:column="58">HDLG</name></type></decl></param>, <param><decl><type><name pos:line="874" pos:column="64">SEV</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="line" pos:line="876" pos:column="1">// Bitmap support - handle from id. </comment>

<typedef pos:line="878" pos:column="1">typedef	<type><name pos:line="878" pos:column="9">HBITMAP</name></type>	<name pos:line="878" pos:column="17">HBITMAP_SDM</name>;</typedef>

<function_decl><type><name pos:line="880" pos:column="1">HBITMAP_SDM</name>	<name pos:line="880" pos:column="17">SDM_CALLBACK</name></type>	<name pos:line="880" pos:column="33">MsoHbmpFromIBmp</name><parameter_list pos:line="880" pos:column="48">(<param><decl><type><name pos:line="880" pos:column="49">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:ifndef pos:line="881" pos:column="1">#<cpp:directive pos:line="881" pos:column="2">ifndef</cpp:directive> <name pos:line="881" pos:column="9">HbmpFromIBmp</name></cpp:ifndef>
<macro><name pos:line="882" pos:column="1">MSOMACAPI_</name><argument_list pos:line="882" pos:column="11">(<argument pos:line="882" pos:column="12">HBITMAP_SDM</argument>)</argument_list></macro>	<function_decl><type><name pos:line="882" pos:column="25">SDM_CALLBACK</name></type> <name pos:line="882" pos:column="38">HbmpFromIBmp</name><parameter_list pos:line="882" pos:column="50">(<param><decl><type><name pos:line="882" pos:column="51">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="883" pos:column="1">#<cpp:directive pos:line="883" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:define pos:line="884" pos:column="1">#<cpp:directive pos:line="884" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="884" pos:column="9">hbmpNull</name></cpp:macro>	<cpp:value pos:line="884" pos:column="25">((HBITMAP_SDM)NULL)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="887" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="888" pos:column="1">// Misc types.								     </comment>

<cpp:define pos:line="890" pos:column="1">#<cpp:directive pos:line="890" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="890" pos:column="9">hNull</name></cpp:macro>		<cpp:value pos:line="890" pos:column="25">NULL</cpp:value></cpp:define>                    	<comment type="line" pos:line="890" pos:column="57">// Generic null handle.</comment>
<cpp:define pos:line="891" pos:column="1">#<cpp:directive pos:line="891" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="891" pos:column="9">ppvNull</name></cpp:macro>		<cpp:value pos:line="891" pos:column="25">NULL</cpp:value></cpp:define>                    	<comment type="line" pos:line="891" pos:column="57">// Null lmem handle.</comment>

<cpp:define pos:line="893" pos:column="1">#<cpp:directive pos:line="893" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="893" pos:column="9">hfontNull</name></cpp:macro>	<cpp:value pos:line="893" pos:column="25">((HFONT)NULL)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="897" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="898" pos:column="1">// SDM Initialization structure.					     </comment>

<typedef pos:line="900" pos:column="1">typedef <type><name pos:line="900" pos:column="9">FARPROC</name></type>	<name pos:line="900" pos:column="17">SDM_FARPROC</name>;</typedef>

<cpp:ifndef pos:line="902" pos:column="1">#<cpp:directive pos:line="902" pos:column="2">ifndef</cpp:directive>	<name pos:line="902" pos:column="9">lpfncompNull</name></cpp:ifndef>
<cpp:define pos:line="903" pos:column="1">#<cpp:directive pos:line="903" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="903" pos:column="9">lpfncompNull</name></cpp:macro>	<cpp:value pos:line="903" pos:column="25">((SDM_FARPROC)NULL)</cpp:value></cpp:define>
<cpp:endif pos:line="904" pos:column="1">#<cpp:directive pos:line="904" pos:column="2">endif</cpp:directive></cpp:endif>	<comment type="line" format="doxygen" pos:line="904" pos:column="9">//!lpfncompNull</comment>


<typedef pos:line="907" pos:column="1">typedef <type><struct pos:line="907" pos:column="9">struct <name pos:line="907" pos:column="16">_sdi</name>
	<block pos:line="908" pos:column="9">{<public type="default" pos:line="908" pos:column="10">
	<decl_stmt><decl><type><name pos:line="909" pos:column="9">char</name> <type:modifier pos:line="909" pos:column="14">*</type:modifier></type>	<name pos:line="909" pos:column="17">szApp</name></decl>;</decl_stmt>			<comment type="line" pos:line="909" pos:column="41">// Unique application name. </comment>
	<decl_stmt><decl><type><name pos:line="910" pos:column="9">HANDLE</name></type>	<name pos:line="910" pos:column="17">hinstCur</name></decl>;</decl_stmt>		<comment type="line" pos:line="910" pos:column="41">// Current application instance. </comment>
	<decl_stmt><decl><type><name pos:line="911" pos:column="9">HANDLE</name></type>	<name pos:line="911" pos:column="17">hinstPrev</name></decl>;</decl_stmt>		<comment type="line" pos:line="911" pos:column="41">// Previous application instance. </comment>
	<decl_stmt><decl><type><name pos:line="912" pos:column="9">HCURSOR</name></type>	<name pos:line="912" pos:column="17">hcursorArrow</name></decl>;</decl_stmt>		<comment type="line" pos:line="912" pos:column="41">// For dialog class</comment>
	<decl_stmt><decl><type><name pos:line="913" pos:column="9">HDC</name></type>	<name pos:line="913" pos:column="17">hdcMem</name></decl>;</decl_stmt>			<comment type="line" pos:line="913" pos:column="41">// Memory DC.</comment>
	<decl_stmt><decl><type><name pos:line="914" pos:column="9">XY_SDM</name></type>	<name pos:line="914" pos:column="17">dyLeading</name></decl>;</decl_stmt>		<comment type="line" pos:line="914" pos:column="41">// TextMetrics tmExternalLeading.</comment>

	<decl_stmt><decl><type><name pos:line="916" pos:column="9">HWND</name></type>	<name pos:line="916" pos:column="17">hwndApp</name></decl>;</decl_stmt>		<comment type="line" pos:line="916" pos:column="41">// Application's main window.</comment>
	<decl_stmt><decl><type><name pos:line="917" pos:column="9">XY_SDM</name></type>	<name pos:line="917" pos:column="17">dxSysFontChar</name></decl>;</decl_stmt>		<comment type="line" pos:line="917" pos:column="41">// Width of system font (average).</comment>
	<decl_stmt><decl><type><name pos:line="918" pos:column="9">XY_SDM</name></type>	<name pos:line="918" pos:column="17">dySysFontChar</name></decl>;</decl_stmt>		<comment type="line" pos:line="918" pos:column="41">// Height of system font (maximum).</comment>
	<decl_stmt><decl><type><name pos:line="919" pos:column="9">XY_SDM</name></type>	<name pos:line="919" pos:column="17">dySysFontAscent</name></decl>;</decl_stmt>	<comment type="line" pos:line="919" pos:column="41">// Height of system font ascenders.</comment>

	<decl_stmt><decl><type><name pos:line="921" pos:column="9">PFN_FILTERMSG</name></type>	<name pos:line="921" pos:column="25">pfnFilterMsg</name></decl>;</decl_stmt>	<comment type="line" pos:line="921" pos:column="41">// Message filter callback.</comment>
	<decl_stmt><decl><type><name pos:line="922" pos:column="9">PFN_ALERT</name></type>		<name pos:line="922" pos:column="33">pfnAlert</name></decl>;</decl_stmt>	<comment type="line" pos:line="922" pos:column="49">// client supplied replacement for MessageBox</comment>

	<decl_stmt><decl><type><name pos:line="924" pos:column="9">SB_SDM</name></type>	<name pos:line="924" pos:column="17">sbEL</name></decl>;</decl_stmt>	<comment type="line" pos:line="924" pos:column="25">// majic number</comment>

	<decl_stmt><decl><type><name pos:line="926" pos:column="9">char</name> <type:modifier pos:line="926" pos:column="14">*</type:modifier></type>	<name pos:line="926" pos:column="17">szFedtClass</name></decl>;</decl_stmt>		<comment type="line" pos:line="926" pos:column="41">// Class name for FEDT. </comment>

	<decl_stmt><decl><type><name pos:line="928" pos:column="9">SDM_FARPROC</name></type>	<name pos:line="928" pos:column="25">lpfncomp</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="929" pos:column="9">char</name> <type:modifier pos:line="929" pos:column="14">*</type:modifier></type>	<name pos:line="929" pos:column="17">szScrollClass</name></decl>;</decl_stmt>		<comment type="line" pos:line="929" pos:column="41">// class for listbox scrollbars</comment>

	<decl_stmt><decl><type><name pos:line="931" pos:column="9">HFONT</name></type>	<name pos:line="931" pos:column="17">hfont</name></decl>;</decl_stmt>			<comment type="line" pos:line="931" pos:column="41">// Font for dialogs; use system font if NULL</comment>
	<decl_stmt><decl><type><name pos:line="932" pos:column="9">HFONT</name></type>	<name pos:line="932" pos:column="17">hfontLight</name></decl>;</decl_stmt>		<comment type="line" pos:line="932" pos:column="41">// Font for "light" text items; use hfont if NULL</comment>
	<decl_stmt><decl><type><name pos:line="933" pos:column="9">HFONT</name></type>	<name pos:line="933" pos:column="17">hfontBold</name></decl>;</decl_stmt>		<comment type="line" pos:line="933" pos:column="41">// Bold font; is hfont for FE</comment>

	<function_decl><type><name pos:line="935" pos:column="9">BOOL_SDM</name></type> (<name pos:line="935" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="935" pos:column="32">*</type:modifier><name pos:line="935" pos:column="33">pfnDlmDlgFilter</name>) <parameter_list pos:line="935" pos:column="50">(<param><decl><type><name pos:line="935" pos:column="51">DLM</name></type></decl></param>, <param><decl><type><name pos:line="935" pos:column="56">TMC</name></type></decl></param>, <param><decl><type><name pos:line="935" pos:column="61">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="935" pos:column="71">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="935" pos:column="81">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="936" pos:column="9">BOOL_SDM</name></type> (<name pos:line="936" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="936" pos:column="32">*</type:modifier><name pos:line="936" pos:column="33">pfnDlmItemFilter</name>) <parameter_list pos:line="936" pos:column="51">(<param><decl><type><name pos:line="936" pos:column="52">TMM</name></type></decl></param>, <param><decl><type><name pos:line="936" pos:column="57">TMC</name></type></decl></param>, <param><decl><type><name pos:line="936" pos:column="62">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="936" pos:column="72">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="936" pos:column="82">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="937" pos:column="9">BOOL_SDM</name></type> (<name pos:line="937" pos:column="19">SDM_CALLBACK</name> <type:modifier pos:line="937" pos:column="32">*</type:modifier><name pos:line="937" pos:column="33">pfnDlmEmDlgFilter</name>) <parameter_list pos:line="937" pos:column="52">(<param><decl><type><name pos:line="937" pos:column="53">TMM</name></type></decl></param>, <param><decl><type><name pos:line="937" pos:column="58">TMC</name></type></decl></param>, <param><decl><type><name pos:line="937" pos:column="63">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="937" pos:column="73">UCBK_SDM</name></type></decl></param>, <param><decl><type><name pos:line="937" pos:column="83">UCBK_SDM</name></type></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="939" pos:column="9">HBITMAP_SDM</name></type> (<name pos:line="939" pos:column="22">SDM_CALLBACK</name> <type:modifier pos:line="939" pos:column="35">*</type:modifier><name pos:line="939" pos:column="36">pfnHbmpFromIBmp</name>) <parameter_list pos:line="939" pos:column="53">(<param><decl><type><name pos:line="939" pos:column="54">UINT_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="940" pos:column="9">BOOL_SDM</name></type>	(<name pos:line="940" pos:column="26">SDM_CALLBACK</name> <type:modifier pos:line="940" pos:column="39">*</type:modifier><name pos:line="940" pos:column="40">pfnFSdmDoIdle</name>)<parameter_list pos:line="940" pos:column="54">(<param><decl><type><name pos:line="940" pos:column="55">BOOL_SDM</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="941" pos:column="9">BOOL_SDM</name></type>	(<name pos:line="941" pos:column="26">SDM_CALLBACK</name> <type:modifier pos:line="941" pos:column="39">*</type:modifier><name pos:line="941" pos:column="40">pfnFRetrySdmError</name>)<parameter_list pos:line="941" pos:column="58">(<param><decl><type><name pos:line="941" pos:column="59">UINT_SDM</name></type></decl></param>, <param><decl><type><name pos:line="941" pos:column="69">HDLG</name></type></decl></param>, <param><decl><type><name pos:line="941" pos:column="75">SEV</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="942" pos:column="9">UINT_SDM</name></type>	<name pos:line="942" pos:column="25">cbWndExtraClient</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="943" pos:column="9">BOOL_SDM</name></type>	<name pos:line="943" pos:column="25">fChisled</name></decl>;</decl_stmt>	<comment type="line" pos:line="943" pos:column="41">//that gratuitous "chisled" look</comment>
	<decl_stmt><decl><type><name pos:line="944" pos:column="9">BOOL_SDM</name></type>	<name pos:line="944" pos:column="25">fPixelScale</name></decl>;</decl_stmt>	<comment type="line" pos:line="944" pos:column="41">// no scaling (JOHNTE)</comment>
	<decl_stmt><decl><type><name pos:line="945" pos:column="9">BOOL_SDM</name></type>	<name pos:line="945" pos:column="25">fExtendedTmm</name></decl>;</decl_stmt>	<comment type="line" pos:line="945" pos:column="41">// extended listboxes get tmmCount?</comment>
	<decl_stmt><decl><type><name pos:line="946" pos:column="9">int</name></type>		<name pos:line="946" pos:column="25">iDBCSCtry</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="948" pos:column="9">WNDPROC</name></type> <name pos:line="948" pos:column="17">pfnLSdmWP</name></decl>;</decl_stmt> <comment type="line" pos:line="948" pos:column="28">// class window proc</comment>
	<decl_stmt><decl><type><name pos:line="949" pos:column="9">UINT_SDM</name></type>	<name pos:line="949" pos:column="25">lid</name></decl>;</decl_stmt>				<comment type="line" pos:line="949" pos:column="57">// Language for dialogs</comment>
	<decl_stmt><decl><type><name pos:line="950" pos:column="9">UINT_SDM</name></type>	<name pos:line="950" pos:column="25">uCodePage</name></decl>;</decl_stmt>			<comment type="line" pos:line="950" pos:column="57">// Code page for dialogs</comment>

	<decl_stmt><decl><type><name pos:line="952" pos:column="9">SDM_PFNPEEKMESSAGE</name></type> <name pos:line="952" pos:column="28">pfnPeekMessageW</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="953" pos:column="9">SDM_PFNPEEKMESSAGE</name></type> <name pos:line="953" pos:column="28">pfnPeekMessageA</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="954" pos:column="9">SDM_PFNGETMESSAGE</name></type>  <name pos:line="954" pos:column="28">pfnGetMessageW</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="955" pos:column="9">SDM_PFNGETMESSAGE</name></type>  <name pos:line="955" pos:column="28">pfnGetMessageA</name></decl>;</decl_stmt>
	</public>}</block></struct></type> <name pos:line="956" pos:column="11">SDI</name>;</typedef>

<cpp:define pos:line="958" pos:column="1">#<cpp:directive pos:line="958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="958" pos:column="9">psdiNull</name></cpp:macro>	<cpp:value pos:line="958" pos:column="25">((SDI *)0)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="962" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="963" pos:column="1">// DLG access. defined here for the following macros that are defined        </comment>

<typedef pos:line="965" pos:column="1">typedef	<type><struct pos:line="965" pos:column="9">struct <name pos:line="965" pos:column="16">_dlh</name>
	<block pos:line="966" pos:column="9">{<public type="default" pos:line="966" pos:column="10">
	<decl_stmt><decl><type pos:line="967" pos:column="9">struct <name pos:line="967" pos:column="16">_dlt</name> <type:modifier pos:line="967" pos:column="21">*</type:modifier> <type:modifier pos:line="967" pos:column="23">*</type:modifier></type> <name pos:line="967" pos:column="25">hdlt</name></decl>;</decl_stmt> <comment type="line" pos:line="967" pos:column="31">// Dialog Template. </comment>
	<decl_stmt><decl><type><name pos:line="968" pos:column="9">HCAB</name></type>	<name pos:line="968" pos:column="17">hcab</name></decl>;</decl_stmt>			<comment type="line" pos:line="968" pos:column="41">// Initial CAB for Dialog.</comment>
	<decl_stmt><decl><type><name pos:line="969" pos:column="9">HWND</name></type>	<name pos:line="969" pos:column="17">hwndDlg</name></decl>;</decl_stmt>		<comment type="line" pos:line="969" pos:column="41">// Dialog's (frame) window. </comment>

<cpp:define pos:line="971" pos:column="1">#<cpp:directive pos:line="971" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="971" pos:column="9">hwndDlgClient</name></cpp:macro>	<cpp:value pos:line="971" pos:column="25">hwndDlg</cpp:value></cpp:define>		<comment type="line" pos:line="971" pos:column="41">// I know its gross, but it saves a lot</comment>
					<comment type="line" pos:line="972" pos:column="41">// of mess in the sdm .c files. </comment>

	<decl_stmt><decl><type><name pos:line="974" pos:column="9">UINT_SDM</name></type> <name pos:line="974" pos:column="18">wRef</name></decl>;</decl_stmt>		<comment type="line" pos:line="974" pos:column="33">// User supplied Dialog word. </comment>
	<decl_stmt><decl><type><name pos:line="975" pos:column="9">FDLG</name></type>	<name pos:line="975" pos:column="17">fdlg</name></decl>;</decl_stmt>			<comment type="line" pos:line="975" pos:column="41">// Dialog flags. </comment>
	<decl_stmt><decl><type><name pos:line="976" pos:column="9">UINT_SDM</name></type>	<name pos:line="976" pos:column="25">hid</name></decl>;</decl_stmt>			<comment type="line" pos:line="976" pos:column="49">// Help ID.</comment>
	<decl_stmt><decl><type><name pos:line="977" pos:column="9">UINT_SDM</name></type>	<name pos:line="977" pos:column="25">hidBase</name></decl>;</decl_stmt>	  	<comment type="line" pos:line="977" pos:column="49">// Base Help ID.</comment>
	<decl_stmt><decl><type><name pos:line="978" pos:column="9">TMC</name></type> <name pos:line="978" pos:column="13">tmcContext</name></decl>;</decl_stmt>	<comment type="line" pos:line="978" pos:column="25">// tmc that was clicked in QuickTip mode</comment>
	<decl_stmt><decl><type><name pos:line="979" pos:column="9">BOOL_SDM</name></type> <name pos:line="979" pos:column="18">fTmcContextEnabled</name></decl>;</decl_stmt>	<comment type="line" pos:line="979" pos:column="41">// was that tmc enabled or not?</comment>
	<decl_stmt><decl><type><name pos:line="980" pos:column="9">PT_SDM</name></type> <name pos:line="980" pos:column="16">ptClick</name></decl>;</decl_stmt>     <comment type="line" pos:line="980" pos:column="29">// Mouse position of click for QuickTip</comment>
	</public>}</block></struct></type> <name pos:line="981" pos:column="11">DLH</name>;</typedef>				<comment type="line" pos:line="981" pos:column="41">// Public part of DLG structure.</comment>



<comment type="line" format="doxygen" pos:line="985" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="986" pos:column="1">// SDS access. (Only defined here for the following macros that are defined  </comment>
<comment type="line" pos:line="987" pos:column="1">// by the SDM project.  This struct is NOT for public use!)                  </comment>


<typedef pos:line="990" pos:column="1">typedef <type><struct pos:line="990" pos:column="9">struct <name pos:line="990" pos:column="16">_sds_sdm</name>			<comment type="line" pos:line="990" pos:column="41">// State of SDM. </comment>
	<block pos:line="991" pos:column="9">{<public type="default" pos:line="991" pos:column="10">
	<decl_stmt><decl><type><name pos:line="992" pos:column="9">SB_SDM</name></type>	<name pos:line="992" pos:column="17">sbDlgCur</name></decl>;</decl_stmt>		<comment type="line" pos:line="992" pos:column="41">// SbDds if not SDM_MULTI_SB. </comment>
	<decl_stmt><decl><type><name pos:line="993" pos:column="9">SB_SDM</name></type>	<name pos:line="993" pos:column="17">sbDlgFocus</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="994" pos:column="9">void</name> <type:modifier pos:line="994" pos:column="14">*</type:modifier> <type:modifier pos:line="994" pos:column="16">*</type:modifier></type> <name pos:line="994" pos:column="18">ppdlgCur</name></decl>;</decl_stmt>	<comment type="line" pos:line="994" pos:column="33">// Current Dialog.</comment>
	<decl_stmt><decl><type><name pos:line="995" pos:column="9">void</name> <type:modifier pos:line="995" pos:column="14">*</type:modifier> <type:modifier pos:line="995" pos:column="16">*</type:modifier></type> <name pos:line="995" pos:column="18">ppdlgFocus</name></decl>;</decl_stmt> <comment type="line" pos:line="995" pos:column="30">// Dialog with input focus.</comment>
	</public>}</block></struct></type> <name pos:line="996" pos:column="11">SDS_SDM</name>;</typedef>
<cpp:define pos:line="997" pos:column="1">#<cpp:directive pos:line="997" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="997" pos:column="9">SbsdmDlgCur</name><parameter_list pos:line="997" pos:column="20">()</parameter_list></cpp:macro>	<cpp:value pos:line="997" pos:column="25">sds.sbDlgCur</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="999" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1000" pos:column="1">// Other common functions </comment>

<comment type="line" pos:line="1002" pos:column="1">// Return the value TMC (first TMC in group usually) or do nothing if not</comment>
<comment type="line" pos:line="1003" pos:column="1">//	grouped.</comment>
<cpp:define pos:line="1004" pos:column="1">#<cpp:directive pos:line="1004" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1004" pos:column="9">TmcValue</name><parameter_list pos:line="1004" pos:column="17">(<param><type><name pos:line="1004" pos:column="18">tmcG</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="1004" pos:column="25">((tmcG) &amp; ~ftmcGrouped)</cpp:value></cpp:define>
<cpp:define pos:line="1005" pos:column="1">#<cpp:directive pos:line="1005" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1005" pos:column="9">FIsGroupTmc</name><parameter_list pos:line="1005" pos:column="20">(<param><type><name pos:line="1005" pos:column="21">tmc</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="1005" pos:column="33">((tmc &amp; ftmcGrouped) != fFalse)</cpp:value></cpp:define>



<comment type="line" format="doxygen" pos:line="1009" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1010" pos:column="1">// General objects support.</comment>

<typedef pos:line="1012" pos:column="1">typedef <type><name pos:line="1012" pos:column="9">VOID</name> <type:modifier pos:line="1012" pos:column="14">*</type:modifier><type:modifier pos:line="1012" pos:column="15">*</type:modifier></type>	<name pos:line="1012" pos:column="17">HOBJ_SDM</name>;</typedef>			<comment type="line" pos:line="1012" pos:column="49">// A near handle.</comment>

<cpp:define pos:line="1014" pos:column="1">#<cpp:directive pos:line="1014" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1014" pos:column="9">hobjNull</name></cpp:macro>	<cpp:value pos:line="1014" pos:column="25">((HOBJ_SDM) NULL)</cpp:value></cpp:define>

<typedef pos:line="1016" pos:column="1">typedef <type><struct pos:line="1016" pos:column="9">struct <name pos:line="1016" pos:column="16">_gobj</name>
	<block pos:line="1017" pos:column="9">{<public type="default" pos:line="1017" pos:column="10">
	<decl_stmt><decl><type><name pos:line="1018" pos:column="9">HOBJ_SDM</name></type>	<name pos:line="1018" pos:column="25">hobjBase</name></decl>;</decl_stmt>	<comment type="line" pos:line="1018" pos:column="41">// Handle to base object.</comment>
	<decl_stmt><decl><type><name pos:line="1019" pos:column="9">BARG_SDM</name></type>	<name pos:line="1019" pos:column="25">bArg</name></decl>;</decl_stmt>		<comment type="line" pos:line="1019" pos:column="41">// Offset from that object.</comment>
	</public>}</block></struct></type> <name pos:line="1020" pos:column="11">GOBJ</name>;</typedef>			<comment type="line" pos:line="1020" pos:column="33">// Reference to any object.</comment>

<cpp:define pos:line="1022" pos:column="1">#<cpp:directive pos:line="1022" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1022" pos:column="9">GobjToGobj</name><parameter_list pos:line="1022" pos:column="19">(<param><type><name pos:line="1022" pos:column="20">g1</name></type></param>, <param><type><name pos:line="1022" pos:column="24">g2</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="1022" pos:column="33">(g2 = g1)</cpp:value></cpp:define>

<cpp:define pos:line="1024" pos:column="1">#<cpp:directive pos:line="1024" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1024" pos:column="9">FIsNullGobj</name><parameter_list pos:line="1024" pos:column="20">(<param><type><name pos:line="1024" pos:column="21">g</name></type></param>)</parameter_list></cpp:macro>		<cpp:value pos:line="1024" pos:column="33">((g).hobjBase == hobjNull &amp;&amp; (g).bArg == 0)</cpp:value></cpp:define>
<cpp:define pos:line="1025" pos:column="1">#<cpp:directive pos:line="1025" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1025" pos:column="9">FIsNullHobjbArg</name><parameter_list pos:line="1025" pos:column="24">(<param><type><name pos:line="1025" pos:column="25">h</name></type></param>, <param><type><name pos:line="1025" pos:column="28">b</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="1025" pos:column="33">((h) == hobjNull &amp;&amp; (b) == 0)</cpp:value></cpp:define>
<cpp:define pos:line="1026" pos:column="1">#<cpp:directive pos:line="1026" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1026" pos:column="9">PvFromGobj</name><parameter_list pos:line="1026" pos:column="19">(<param><type><name pos:line="1026" pos:column="20">h</name></type></param>, <param><type><name pos:line="1026" pos:column="23">b</name></type></param>)</parameter_list></cpp:macro>	\
	<cpp:value pos:line="1027" pos:column="9">((h) == hobjNull ? (VOID *)(b) : *(VOID * *)(h) + (b))</cpp:value></cpp:define>

<cpp:define pos:line="1029" pos:column="1">#<cpp:directive pos:line="1029" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1029" pos:column="9">FIsEmptyGobj</name><parameter_list pos:line="1029" pos:column="21">(<param><type><name pos:line="1029" pos:column="22">g</name></type></param>)</parameter_list></cpp:macro>		<cpp:value pos:line="1029" pos:column="33">FIsEmptyHobjBArg((g).hobjBase, (g).bArg)</cpp:value></cpp:define>

<cpp:define pos:line="1031" pos:column="1">#<cpp:directive pos:line="1031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1031" pos:column="9">FIsEmptyHobjBArg</name><parameter_list pos:line="1031" pos:column="25">(<param><type><name pos:line="1031" pos:column="26">h</name></type></param>, <param><type><name pos:line="1031" pos:column="29">b</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="1031" pos:column="33">((h) == hobjNull &amp;&amp; (b) == 0)</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="1033" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1034" pos:column="1">// Miscellaneous LBOX stuff (for apps that don't include msolbox.h but use the  //</comment>
<comment type="line" pos:line="1035" pos:column="1">// toolbox.								     //</comment>
<comment type="line" format="doxygen" pos:line="1036" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>

<typedef pos:line="1038" pos:column="1">typedef	<type pos:line="1038" pos:column="9">struct	<name pos:line="1038" pos:column="17">_LBX</name> <type:modifier pos:line="1038" pos:column="22">*</type:modifier> <type:modifier pos:line="1038" pos:column="24">*</type:modifier></type>	<name pos:line="1038" pos:column="33">HLBX</name>;</typedef>

<typedef pos:line="1040" pos:column="1">typedef	<type><name pos:line="1040" pos:column="9">RECT</name></type>	<name pos:line="1040" pos:column="17">LBR</name>;</typedef>

<typedef pos:line="1042" pos:column="1">typedef	<type><name pos:line="1042" pos:column="9">UINT_SDM</name></type>	<name pos:line="1042" pos:column="25">LBC</name>;</typedef>

<cpp:define pos:line="1044" pos:column="1">#<cpp:directive pos:line="1044" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1044" pos:column="9">LBOX_CALLBACK</name></cpp:macro>		<cpp:value pos:line="1044" pos:column="33">SDM_CALLBACK</cpp:value></cpp:define>
<cpp:define pos:line="1045" pos:column="1">#<cpp:directive pos:line="1045" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1045" pos:column="9">LBOX_CALLBACK_NAT</name></cpp:macro>	<cpp:value pos:line="1045" pos:column="33">SDM_CALLBACK</cpp:value></cpp:define>


<typedef pos:line="1048" pos:column="1">typedef <type><struct pos:line="1048" pos:column="9">struct <name pos:line="1048" pos:column="16">_lbm</name>
	<block pos:line="1049" pos:column="9">{<public type="default" pos:line="1049" pos:column="10">
	<decl_stmt><decl><type><name pos:line="1050" pos:column="9">HLBX</name></type> <name pos:line="1050" pos:column="14">hlbx</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1051" pos:column="9">ILBE_SDM</name></type> <name pos:line="1051" pos:column="18">cEntryVisible</name></decl>;</decl_stmt>	<comment type="line" pos:line="1051" pos:column="33">// Number of entries visible in list</comment>
	<decl_stmt><decl><type><name pos:line="1052" pos:column="9">XY_SDM</name></type> <name pos:line="1052" pos:column="16">dySmall</name></decl>;</decl_stmt>			<comment type="line" pos:line="1052" pos:column="41">// Height of small list</comment>
	</public>}</block></struct></type> <name pos:line="1053" pos:column="11">LBM</name>;</typedef>

<cpp:define pos:line="1055" pos:column="1">#<cpp:directive pos:line="1055" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1055" pos:column="9">cEntryVariable</name></cpp:macro>	<cpp:value pos:line="1055" pos:column="25">((ILBE_SDM)0x8000)</cpp:value></cpp:define>

<cpp:include pos:line="1057" pos:column="1">#<cpp:directive pos:line="1057" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="1057" pos:column="10">"msosproc.h"</lit:literal></cpp:file></cpp:include>


<comment type="line" format="doxygen" pos:line="1060" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1061" pos:column="1">// rgtmw allocataion stuff</comment>
<comment type="line" format="doxygen" pos:line="1062" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>

<comment type="line" pos:line="1064" pos:column="1">// DOUBLE SUPER WARNING - this is a private SDM structure, here only</comment>
<comment type="line" pos:line="1065" pos:column="1">// because the client has to allocate these things. Use these fields,</comment>
<comment type="line" pos:line="1066" pos:column="1">// and it's guaranteed you will get broken.</comment>
<comment type="line" pos:line="1067" pos:column="1">//</comment>
<comment type="line" pos:line="1068" pos:column="1">// Sizeof runtime space.</comment>
<comment type="line" pos:line="1069" pos:column="1">// WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING</comment>
<comment type="line" pos:line="1070" pos:column="1">// This structure is also defined in sdmnat.asm.  If you change it here,</comment>
<comment type="line" pos:line="1071" pos:column="1">// then change it there!!</comment>
<comment type="line" pos:line="1072" pos:column="1">// WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING</comment>
<typedef pos:line="1073" pos:column="1">typedef <type><name pos:line="1073" pos:column="9">U32_SDM</name></type>	<name pos:line="1073" pos:column="17">FTMW_SDM</name>;</typedef>

<typedef pos:line="1075" pos:column="1">typedef <type><struct pos:line="1075" pos:column="9">struct <name pos:line="1075" pos:column="16">_tmw</name>
	<block pos:line="1076" pos:column="9">{<public type="default" pos:line="1076" pos:column="10">
	<comment type="line" pos:line="1077" pos:column="9">//WARNING: for 32 bit alignment, the items in this structure must</comment>
	<comment type="line" pos:line="1078" pos:column="9">// be ordered with all 32-bit data before any 16-bit data</comment>
	<comment type="line" pos:line="1079" pos:column="9">// (so the hokey CbRuntimeCtm will work out right)</comment>

	<union pos:line="1081" pos:column="9">union
		<block pos:line="1082" pos:column="17">{<public type="default" pos:line="1082" pos:column="18">
		<decl_stmt><decl><type><name pos:line="1083" pos:column="17">HWND</name></type>		     <name pos:line="1083" pos:column="38">hwnd</name></decl>;</decl_stmt>	<comment type="line" pos:line="1083" pos:column="49">// Window handle for edit.</comment>

		<decl_stmt><decl><type><name pos:line="1085" pos:column="17">HLBX</name></type>	<name pos:line="1085" pos:column="25">hlbx</name></decl>;</decl_stmt>	<comment type="line" pos:line="1085" pos:column="33">//list</comment>
		<decl_stmt><decl><type><name pos:line="1086" pos:column="17">WCHAR</name> <type:modifier pos:line="1086" pos:column="23">*</type:modifier> <type:modifier pos:line="1086" pos:column="25">*</type:modifier></type> <name pos:line="1086" pos:column="27">pwzTitle</name></decl>;</decl_stmt>	<comment type="line" pos:line="1086" pos:column="41">// Control text.</comment>
		<decl_stmt><decl><type><name pos:line="1087" pos:column="17">UCAB_SDM</name></type> <name pos:line="1087" pos:column="26">ibmp</name></decl>;</decl_stmt>		<comment type="line" pos:line="1087" pos:column="41">//non-CAB bitmap id</comment>
		</public>}</block> <decl><name pos:line="1088" pos:column="19">ctl</name></decl>;</union>

	<union pos:line="1090" pos:column="9">union
		<block pos:line="1091" pos:column="17">{<public type="default" pos:line="1091" pos:column="18">
		<decl_stmt><decl><type><name pos:line="1092" pos:column="17">GOBJ</name></type>	<name pos:line="1092" pos:column="25">gobjTitle</name></decl>;</decl_stmt>		<comment type="line" pos:line="1092" pos:column="49">// Item title.</comment>
		</public>}</block>;</union>
	<decl_stmt><decl><type><name pos:line="1094" pos:column="9">GOBJ</name></type>	<name pos:line="1094" pos:column="17">gobjData</name></decl>;</decl_stmt>		<comment type="line" pos:line="1094" pos:column="41">// CAB (or other) data.</comment>

	<decl_stmt><decl><type><name pos:line="1096" pos:column="9">REC</name></type>	<name pos:line="1096" pos:column="17">rec</name></decl>;</decl_stmt>			<comment type="line" pos:line="1096" pos:column="41">// Scaled rectangle.</comment>
<cpp:ifdef pos:line="1097" pos:column="1">#<cpp:directive pos:line="1097" pos:column="2">ifdef</cpp:directive> <name pos:line="1097" pos:column="8">DBCS</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="1098" pos:column="9">BYTE</name></type> <name pos:line="1098" pos:column="14">bCharSet</name></decl>;</decl_stmt>
<cpp:endif pos:line="1099" pos:column="1">#<cpp:directive pos:line="1099" pos:column="2">endif</cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="1100" pos:column="9">DWORD</name></type> <name pos:line="1100" pos:column="15">himcOld</name></decl>;</decl_stmt>		<comment type="line" pos:line="1100" pos:column="33">//Original himc assosiated to edit contorol.</comment>

	<decl_stmt><decl><type><name pos:line="1102" pos:column="9">U32_SDM</name></type>	<name pos:line="1102" pos:column="17">lUser</name></decl>;</decl_stmt>			<comment type="line" pos:line="1102" pos:column="41">// User dword</comment>

	<decl_stmt><decl><type><name pos:line="1104" pos:column="9">FTMS</name></type>	<name pos:line="1104" pos:column="17">ftms</name></decl>;</decl_stmt>			<comment type="line" pos:line="1104" pos:column="41">// DialogItem state - see list.</comment>
	<decl_stmt><decl><type><name pos:line="1105" pos:column="9">FTMS</name></type>	<name pos:line="1105" pos:column="17">ftmsOld</name></decl>;</decl_stmt>		<comment type="line" pos:line="1105" pos:column="41">// Previous state (for buttons).</comment>
	<decl_stmt><decl><type><name pos:line="1106" pos:column="9">FTMW_SDM</name></type>	<name pos:line="1106" pos:column="25">ftmw</name></decl>;</decl_stmt>			<comment type="line" pos:line="1106" pos:column="49">// DialogItem flags.</comment>

	<decl_stmt><decl><type><name pos:line="1108" pos:column="9">TMC</name></type>	<name pos:line="1108" pos:column="17">tmc</name></decl>;</decl_stmt>			<comment type="line" pos:line="1108" pos:column="41">// iTeM Code.</comment>
	<decl_stmt><decl><type><name pos:line="1109" pos:column="9">TMT</name></type>	<name pos:line="1109" pos:column="17">tmt</name></decl>;</decl_stmt>			<comment type="line" pos:line="1109" pos:column="41">// Item type.</comment>
	<decl_stmt><decl><type><name pos:line="1110" pos:column="9">UINT_SDM</name></type>	<name pos:line="1110" pos:column="25">cwVal</name></decl>;</decl_stmt>			<comment type="line" pos:line="1110" pos:column="49">// Data size (-1=&gt; var length).</comment>
	<decl_stmt><decl><type><name pos:line="1111" pos:column="9">TMC</name></type>	<name pos:line="1111" pos:column="17">tmcGroup</name></decl>;</decl_stmt>		<comment type="line" pos:line="1111" pos:column="41">// tmcNull or TMC of group (for Combo/</comment>
					<comment type="line" pos:line="1112" pos:column="41">// ListBox/RadioButton).</comment>
	<decl_stmt><decl><type><name pos:line="1113" pos:column="9">int</name></type>	<name pos:line="1113" pos:column="17">tcidIcon</name></decl>;</decl_stmt>	<comment type="line" pos:line="1113" pos:column="33">// tcid of icon used inside a button</comment>
	<decl_stmt><decl><type><name pos:line="1114" pos:column="9">int</name></type> <name pos:line="1114" pos:column="13">iWidth</name></decl>;</decl_stmt>		<comment type="line" pos:line="1114" pos:column="33">// width of the galley control.</comment>

	<decl_stmt><decl><type><name pos:line="1116" pos:column="9">WCHAR</name> <type:modifier pos:line="1116" pos:column="15">*</type:modifier></type><name pos:line="1116" pos:column="16">wtzTooltip</name></decl>;</decl_stmt> <comment type="line" pos:line="1116" pos:column="28">// wtz of the tooltip for this item or NULL</comment>
	<decl_stmt><decl><type><name pos:line="1117" pos:column="9">int</name></type>    <name pos:line="1117" pos:column="16">fmtTip</name></decl>;</decl_stmt>     <comment type="line" pos:line="1117" pos:column="28">// format of the tip</comment>

	<decl_stmt><decl><type><name pos:line="1119" pos:column="9">int</name></type> <name pos:line="1119" pos:column="13">cdxText</name></decl>;</decl_stmt>	<comment type="line" pos:line="1119" pos:column="25">// Used for caching text dimensions for DAL.</comment>
	<decl_stmt><decl><type><name pos:line="1120" pos:column="9">int</name></type> <name pos:line="1120" pos:column="13">cdyText</name></decl>;</decl_stmt>	<comment type="line" pos:line="1120" pos:column="25">// these are only valid if != TEXT_MEASURE_NOT_CACHED</comment>
	<decl_stmt><decl><type><name pos:line="1121" pos:column="9">DWORD</name></type> <name pos:line="1121" pos:column="15">grfSDMTextMeasure</name></decl>;</decl_stmt>

<comment type="line" pos:line="1123" pos:column="1">// SDM_PRIVATE</comment>

<comment type="line" format="doxygen" pos:line="1125" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1126" pos:column="1">// -- Private part of TMW_SDM, only used by sdmtmw</comment>

	<comment type="line" pos:line="1128" pos:column="9">// The following 4/5 fields are indices back into the template.</comment>
	<decl_stmt><decl><type><name pos:line="1129" pos:column="9">UINT_SDM</name></type> <name pos:line="1129" pos:column="18">itmBase</name></decl>;</decl_stmt>		<comment type="line" pos:line="1129" pos:column="41">// Index of base tm for item.</comment>
<comment type="block" pos:line="1130" pos:column="1">/* FMidEast */</comment>
	<decl_stmt><decl><type><name pos:line="1131" pos:column="9">U16_SDM</name></type> <name pos:line="1131" pos:column="17">itmExt2</name></decl>;</decl_stmt>		<comment type="line" pos:line="1131" pos:column="41">// Extension #2 or itmNil.</comment>
	<decl_stmt><decl><type><name pos:line="1132" pos:column="9">U16_SDM</name></type> <name pos:line="1132" pos:column="17">itmExt3</name></decl>;</decl_stmt>		<comment type="line" pos:line="1132" pos:column="41">// Extension #3 or itmNil.</comment>
<comment type="block" pos:line="1133" pos:column="1">/* FMidEast End */</comment>
	<decl_stmt><decl><type><name pos:line="1134" pos:column="9">U16_SDM</name></type> <name pos:line="1134" pos:column="17">itmExt4</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1135" pos:column="9">UINT_SDM</name></type> <name pos:line="1135" pos:column="18">itmTmxdFirst</name></decl>;</decl_stmt>		<comment type="line" pos:line="1135" pos:column="41">// First dummy item or itmNil.</comment>
	<decl_stmt><decl><type><name pos:line="1136" pos:column="9">UINT_SDM</name></type> <name pos:line="1136" pos:column="18">itmTmxiFirst</name></decl>;</decl_stmt>		<comment type="line" pos:line="1136" pos:column="41">// First item proc or itmNil or itmUnknown.</comment>

	<decl_stmt><decl><type><name pos:line="1138" pos:column="9">WCHAR</name></type>	<name pos:line="1138" pos:column="17">ch</name></decl>;</decl_stmt>			<comment type="line" pos:line="1138" pos:column="41">// Accelerator.</comment>
	<decl_stmt><decl><type><name pos:line="1139" pos:column="9">WCHAR</name></type>	<name pos:line="1139" pos:column="17">ch2</name></decl>;</decl_stmt>			<comment type="line" pos:line="1139" pos:column="41">// Kana Accelerator.</comment>
	<decl_stmt><decl><type><name pos:line="1140" pos:column="9">BYTE</name></type>	<name pos:line="1140" pos:column="17">iagData</name></decl>;</decl_stmt>		<comment type="line" pos:line="1140" pos:column="41">// CAB index of value.</comment>
	<macro><name pos:line="1141" pos:column="9">BYTE</name></macro>	<label><name pos:line="1141" pos:column="17">fNonseqTmc</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="1141" pos:column="28">1</lit:literal></expr>;</expr_stmt>		<comment type="line" pos:line="1141" pos:column="41">// =&gt; Special or Imported TMC.</comment>
	<macro><name pos:line="1142" pos:column="9">BYTE</name></macro>	<label><name pos:line="1142" pos:column="17">fHandleData</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="1142" pos:column="29">1</lit:literal></expr>;</expr_stmt>		<comment type="line" pos:line="1142" pos:column="41">// If iagData != iagNil, =&gt; if data is</comment>
					<comment type="line" pos:line="1143" pos:column="41">// handle.</comment>
	<macro><name pos:line="1144" pos:column="9">BYTE</name></macro>	<label><name pos:line="1144" pos:column="17">fAction</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="1144" pos:column="25">1</lit:literal></expr>;</expr_stmt>		<comment type="line" pos:line="1144" pos:column="41">// =&gt; call dialog proc.</comment>
	<macro><name pos:line="1145" pos:column="9">BYTE</name></macro>	<label><name pos:line="1145" pos:column="17">fHelp</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="1145" pos:column="23">1</lit:literal></expr>;</expr_stmt>		<comment type="line" pos:line="1145" pos:column="41">// =&gt; wants context help</comment>
	<macro><name pos:line="1146" pos:column="9">BYTE</name></macro>	<label><name pos:line="1146" pos:column="17">fRichEdit</name> :</label><expr_stmt><expr><lit:literal type="number" pos:line="1146" pos:column="28">1</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="1146" pos:column="31">//Indicates the genralpicture is for Word's RTE.</comment>
	<macro><name pos:line="1147" pos:column="9">BYTE</name></macro>	<label><name pos:line="1147" pos:column="17">fSpecialTab</name> :</label><expr_stmt><expr><lit:literal type="number" pos:line="1147" pos:column="30">1</lit:literal></expr>;</expr_stmt>		<comment type="line" pos:line="1147" pos:column="41">// =&gt; wants the special autocomplete tab behaviour</comment>
	<macro><name pos:line="1148" pos:column="9">BYTE</name></macro>	<label><name pos:line="1148" pos:column="17">fUnused</name> :</label><expr_stmt><expr><lit:literal type="number" pos:line="1148" pos:column="26">2</lit:literal></expr>;</expr_stmt>
<comment type="line" pos:line="1149" pos:column="1">//SDM_PRIVATE</comment>
	</public>}</block></struct></type> <name pos:line="1150" pos:column="11">TMW_SDM_PRIVATE</name>;</typedef>

<cpp:define pos:line="1152" pos:column="1">#<cpp:directive pos:line="1152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1152" pos:column="9">CbRuntimeCtm</name><parameter_list pos:line="1152" pos:column="21">(<param><type><name pos:line="1152" pos:column="22">ctm</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="1152" pos:column="27">((ctm) * sizeof(TMW_SDM_PRIVATE))</cpp:value></cpp:define>

<cpp:define pos:line="1154" pos:column="1">#<cpp:directive pos:line="1154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1154" pos:column="9">iFENone</name></cpp:macro>		<cpp:value pos:line="1154" pos:column="25">0</cpp:value></cpp:define>
<cpp:define pos:line="1155" pos:column="1">#<cpp:directive pos:line="1155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1155" pos:column="9">iFEJapan</name></cpp:macro>	<cpp:value pos:line="1155" pos:column="25">81</cpp:value></cpp:define>
<cpp:define pos:line="1156" pos:column="1">#<cpp:directive pos:line="1156" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1156" pos:column="9">iFEKorea</name></cpp:macro>	<cpp:value pos:line="1156" pos:column="25">82</cpp:value></cpp:define>
<cpp:define pos:line="1157" pos:column="1">#<cpp:directive pos:line="1157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1157" pos:column="9">iFETaiwan</name></cpp:macro>	<cpp:value pos:line="1157" pos:column="25">886</cpp:value></cpp:define>
<cpp:define pos:line="1158" pos:column="1">#<cpp:directive pos:line="1158" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1158" pos:column="9">iFEPRChina</name></cpp:macro>	<cpp:value pos:line="1158" pos:column="25">86</cpp:value></cpp:define>

<comment type="line" pos:line="1160" pos:column="1">// Flags that can be passed in as a grf to MsoUPicContainerEx</comment>
<cpp:define pos:line="1161" pos:column="1">#<cpp:directive pos:line="1161" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1161" pos:column="9">msoupicExtended</name></cpp:macro>         <cpp:value pos:line="1161" pos:column="33">0x00000001</cpp:value></cpp:define>
<cpp:define pos:line="1162" pos:column="1">#<cpp:directive pos:line="1162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1162" pos:column="9">msoupicNoResize</name></cpp:macro>         <cpp:value pos:line="1162" pos:column="33">0x00000002</cpp:value></cpp:define>

<macro><name pos:line="1164" pos:column="1">MSOAPI_</name><argument_list pos:line="1164" pos:column="8">(<argument pos:line="1164" pos:column="9">UCBK_SDM SDM_CALLBACK</argument>)</argument_list></macro> <macro><name pos:line="1164" pos:column="32">MsoWPicContainer</name><argument_list pos:line="1164" pos:column="48">(<argument pos:line="1164" pos:column="49">HMSOINST pinst</argument>,
												<argument pos:line="1165" pos:column="97">void **hwndDlg</argument>,
												<argument pos:line="1166" pos:column="97">TMM tmm</argument>, <argument pos:line="1166" pos:column="106">SDMP *psdmp</argument>,
												<argument pos:line="1167" pos:column="97">UCBK_SDM rsvd2</argument>, <argument pos:line="1167" pos:column="113">UCBK_SDM rsvd</argument>,
												<argument pos:line="1168" pos:column="97">TMC tmc</argument>, <argument pos:line="1168" pos:column="106">UCBK_SDM wBtn</argument>,
												<comment type="block" pos:line="1169" pos:column="97">/* PFNFFillPictureContainer */</comment> <argument pos:line="1169" pos:column="128">void *pfnFPC</argument>)</argument_list></macro><empty_stmt pos:line="1169" pos:column="141">;</empty_stmt>

<macro><name pos:line="1171" pos:column="1">MSOAPI_</name><argument_list pos:line="1171" pos:column="8">(<argument pos:line="1171" pos:column="9">UCBK_SDM SDM_CALLBACK</argument>)</argument_list></macro> <macro><name pos:line="1171" pos:column="32">MsoUPicContainerEx</name><argument_list pos:line="1171" pos:column="50">(<argument pos:line="1171" pos:column="51">HMSOINST pinst</argument>,
												<argument pos:line="1172" pos:column="97">void **hwndDlg</argument>,
												<argument pos:line="1173" pos:column="97">TMM tmm</argument>, <argument pos:line="1173" pos:column="106">SDMP *psdmp</argument>,
												<argument pos:line="1174" pos:column="97">UCBK_SDM rsvd2</argument>, <argument pos:line="1174" pos:column="113">UCBK_SDM rsvd</argument>,
												<argument pos:line="1175" pos:column="97">TMC tmc</argument>, <argument pos:line="1175" pos:column="106">UCBK_SDM wBtn</argument>,
												<argument pos:line="1176" pos:column="97">void *pfnFPC</argument>, <argument pos:line="1176" pos:column="111">UINT grf</argument>)</argument_list></macro><empty_stmt pos:line="1176" pos:column="120">;</empty_stmt>

<comment type="line" pos:line="1178" pos:column="1">// Call to set the contexthelp override</comment>
<macro><name pos:line="1179" pos:column="1">MSOAPIX_</name><argument_list pos:line="1179" pos:column="9">(<argument pos:line="1179" pos:column="10">void</argument>)</argument_list></macro> <macro><name pos:line="1179" pos:column="16">MsoSetContextOverride</name><argument_list pos:line="1179" pos:column="37">(<argument pos:line="1179" pos:column="38">BOOL fContextHelpOverride</argument>)</argument_list></macro><empty_stmt pos:line="1179" pos:column="64">;</empty_stmt>

<comment type="line" pos:line="1181" pos:column="1">// Call to set the autocomplete function for a dialog.</comment>
<macro><name pos:line="1182" pos:column="1">MSOAPI_</name><argument_list pos:line="1182" pos:column="8">(<argument pos:line="1182" pos:column="9">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1182" pos:column="15">MsoSetPfnAutoComplete</name><argument_list pos:line="1182" pos:column="36">(<comment type="block" pos:line="1182" pos:column="37">/*PFN_AUTOCOMPLETE*/</comment> <argument><expr><name pos:line="1182" pos:column="58">void</name> <op:operator pos:line="1182" pos:column="63">*</op:operator><name pos:line="1182" pos:column="64">pfnAutoComplete</name></expr></argument>, <argument><expr><name pos:line="1182" pos:column="81">void</name> <op:operator pos:line="1182" pos:column="86">*</op:operator><name pos:line="1182" pos:column="87">pvData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="1184" pos:column="1">// Return the WhatsThis status</comment>
<macro><name pos:line="1185" pos:column="1">MSOAPIX_</name><argument_list pos:line="1185" pos:column="9">(<argument pos:line="1185" pos:column="10">int</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1185" pos:column="15">MsoSDMWhatsThis</name><argument_list pos:line="1185" pos:column="30">()</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="1187" pos:column="1">//Following is the private message sent by sdm to edit filter </comment>
<comment type="line" pos:line="1188" pos:column="1">//it sends unicode string</comment>
<cpp:define pos:line="1189" pos:column="1">#<cpp:directive pos:line="1189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1189" pos:column="9">msoWmSdmPrivSetTextMsg</name></cpp:macro>	<cpp:value pos:line="1189" pos:column="33">(WM_USER+289)</cpp:value></cpp:define>
<cpp:define pos:line="1190" pos:column="1">#<cpp:directive pos:line="1190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1190" pos:column="9">msoWmSdmPrivGetTextMsg</name></cpp:macro>	<cpp:value pos:line="1190" pos:column="33">(WM_USER+290)</cpp:value></cpp:define>

<cpp:endif pos:line="1192" pos:column="1">#<cpp:directive pos:line="1192" pos:column="2">endif</cpp:directive></cpp:endif>	<comment type="line" format="doxygen" pos:line="1192" pos:column="9">//!SDM_INCLUDED		Entire file.</comment>
</unit>
