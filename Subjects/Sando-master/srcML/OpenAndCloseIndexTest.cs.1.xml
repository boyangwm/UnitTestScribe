<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\IntegrationTests\Search\OpenAndCloseIndexTest.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">NUnit</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">Framework</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Sando</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Sando</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">Indexer</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">System</name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Collections</name><op:operator pos:line="5" pos:column="25">.</op:operator><name pos:line="5" pos:column="26">Generic</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Linq</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Text</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Sando</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">IntegrationTests</name><op:operator pos:line="9" pos:column="33">.</op:operator><name pos:line="9" pos:column="34">Search</name></name>
<block pos:line="10" pos:column="1">{
    <class><attribute pos:line="11" pos:column="5">[<expr><name pos:line="11" pos:column="6">TestFixture</name></expr>]</attribute>
    <specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">OpenAndCloseIndexTest</name><super pos:line="12" pos:column="39">: <name pos:line="12" pos:column="41">AutomaticallyIndexingTestClass</name></super>
    <block pos:line="13" pos:column="5">{

        <function><type><attribute pos:line="15" pos:column="9">[<expr><name pos:line="15" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">void</name></type> <name pos:line="16" pos:column="21">CloseAndReopen</name><parameter_list pos:line="16" pos:column="35">()</parameter_list>
        <block pos:line="17" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">var</name></type> <name pos:line="18" pos:column="17">indexer</name> <init pos:line="18" pos:column="25">= <expr><call><name><name pos:line="18" pos:column="27">ServiceLocator</name><op:operator pos:line="18" pos:column="41">.</op:operator><name><name pos:line="18" pos:column="42">Resolve</name><argument_list pos:line="18" pos:column="49">&lt;<argument><name pos:line="18" pos:column="50">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="18" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">indexer</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Dispose</name></name><argument_list pos:line="19" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">var</name></type> <name pos:line="20" pos:column="17">currentIndexer</name> <init pos:line="20" pos:column="32">= <expr><op:operator pos:line="20" pos:column="34">new</op:operator> <call><name pos:line="20" pos:column="38">DocumentIndexer</name><argument_list pos:line="20" pos:column="53">(<argument><expr><call><name><name pos:line="20" pos:column="54">TimeSpan</name><op:operator pos:line="20" pos:column="62">.</op:operator><name pos:line="20" pos:column="63">FromSeconds</name></name><argument_list pos:line="20" pos:column="74">(<argument><expr><lit:literal type="number" pos:line="20" pos:column="75">10</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="80">GetTimeToCommit</name><argument_list pos:line="20" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">ServiceLocator</name><op:operator pos:line="21" pos:column="27">.</op:operator><name pos:line="21" pos:column="28">RegisterInstance</name></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">currentIndexer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">Assert</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">IsTrue</name></name><argument_list pos:line="22" pos:column="26">(<argument><expr><call><name><name pos:line="22" pos:column="27">currentIndexer</name><op:operator pos:line="22" pos:column="41">.</op:operator><name pos:line="22" pos:column="42">GetNumberOfIndexedDocuments</name></name><argument_list pos:line="22" pos:column="69">()</argument_list></call> <op:operator pos:line="22" pos:column="72">&gt;</op:operator> <lit:literal type="number" pos:line="22" pos:column="74">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="22" pos:column="77">"The index is being destroyed when it is closed and reopened"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="25" pos:column="9">public</specifier> <specifier pos:line="25" pos:column="16">override</specifier> <name pos:line="25" pos:column="25">string</name></type> <name pos:line="25" pos:column="32">GetIndexDirName</name><parameter_list pos:line="25" pos:column="47">()</parameter_list>
        <block pos:line="26" pos:column="9">{
            <return pos:line="27" pos:column="13">return <expr><lit:literal type="string" pos:line="27" pos:column="20">"OpenAndCloseTest"</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="30" pos:column="9">public</specifier> <specifier pos:line="30" pos:column="16">override</specifier> <name pos:line="30" pos:column="25">string</name></type> <name pos:line="30" pos:column="32">GetFilesDirectory</name><parameter_list pos:line="30" pos:column="49">()</parameter_list>
        <block pos:line="31" pos:column="9">{
            <return pos:line="32" pos:column="13">return <expr><lit:literal type="string" pos:line="32" pos:column="20">"..\\..\\Parser"</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="35" pos:column="9">public</specifier> <specifier pos:line="35" pos:column="16">override</specifier> <name pos:line="35" pos:column="25">TimeSpan</name><type:modifier pos:line="35" pos:column="33">?</type:modifier></type> <name pos:line="35" pos:column="35">GetTimeToCommit</name><parameter_list pos:line="35" pos:column="50">()</parameter_list>
        <block pos:line="36" pos:column="9">{
            <return pos:line="37" pos:column="13">return <expr><call><name><name pos:line="37" pos:column="20">TimeSpan</name><op:operator pos:line="37" pos:column="28">.</op:operator><name pos:line="37" pos:column="29">FromSeconds</name></name><argument_list pos:line="37" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="37" pos:column="41">10</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

    }</block></class>
}</block></namespace>
</unit>
