<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\dpkg.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for dpkg.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__dpkg_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__dpkg_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IVsSolutionDebuggingAssistant2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IVsSolutionDebuggingAssistant2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IVsSolutionDebuggingAssistant2</name></type> <name pos:line="53" pos:column="50">IVsSolutionDebuggingAssistant2</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IVsSolutionDebuggingAssistant2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__IVsProvideDebuggingInfo_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__IVsProvideDebuggingInfo_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">IVsProvideDebuggingInfo</name></type> <name pos:line="59" pos:column="43">IVsProvideDebuggingInfo</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __IVsProvideDebuggingInfo_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="63" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="64" pos:column="10">"oaidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="65" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="66" pos:column="10">"vsshell.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifdef</cpp:directive> <name pos:line="68" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="69" pos:column="1">extern <lit:literal type="string" pos:line="69" pos:column="8">"C"</lit:literal><block pos:line="69" pos:column="11">{
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="73" pos:column="1">/* interface __MIDL_itf_dpkg_0000_0000 */</comment>
<comment type="block" pos:line="74" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">VS_GUID_DEPLOYMENT_PACKAGE</name></cpp:macro> <cpp:value pos:line="76" pos:column="36">L"{9BBF7AD1-9153-465C-88FD-6AA23494C136}"</cpp:value></cpp:define>
<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">SID_SVsSolutionDebuggingAssistant2</name></cpp:macro> <cpp:value pos:line="77" pos:column="44">IID_IVsSolutionDebuggingAssistant2</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="80" pos:column="1">extern</specifier> <name pos:line="80" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="80" pos:column="22">__MIDL_itf_dpkg_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="81" pos:column="1">extern</specifier> <name pos:line="81" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="81" pos:column="22">__MIDL_itf_dpkg_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifndef</cpp:directive> <name pos:line="83" pos:column="9">__IVsSolutionDebuggingAssistant2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">__IVsSolutionDebuggingAssistant2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="86" pos:column="1">/* interface IVsSolutionDebuggingAssistant2 */</comment>
<comment type="block" pos:line="87" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="90" pos:column="1">EXTERN_C</name> <specifier pos:line="90" pos:column="10">const</specifier> <name pos:line="90" pos:column="16">IID</name></type> <name pos:line="90" pos:column="20">IID_IVsSolutionDebuggingAssistant2</name></decl>;</decl_stmt>

<cpp:if pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">if</cpp:directive> <expr><call><name pos:line="92" pos:column="5">defined</name><argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="92" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="92" pos:column="29">!</op:operator><call><name pos:line="92" pos:column="30">defined</name><argument_list pos:line="92" pos:column="37">(<argument><expr><name pos:line="92" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="94" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="94" pos:column="19">(<argument pos:line="94" pos:column="20">"0A2EE8D5-53EF-410F-8504-3E0AFDAC5995"</argument>)</argument_list></macro>
    <label><name pos:line="95" pos:column="5">IVsSolutionDebuggingAssistant2</name> :</label> <expr_stmt><expr pos:line="95" pos:column="38">public <name pos:line="95" pos:column="45">IUnknown</name>
    <block pos:line="96" pos:column="5">{
    <expr pos:line="97" pos:column="5">public<op:operator pos:line="97" pos:column="11">:</op:operator>
        virtual <name pos:line="98" pos:column="17">HRESULT</name> <name pos:line="98" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="98" pos:column="43">MapOutputToDeployedURLs</name><argument_list pos:line="98" pos:column="66">( 
            <comment type="block" pos:line="99" pos:column="13">/* [in] */</comment> <argument pos:line="99" pos:column="24">DWORD dwReserved</argument>,
            <comment type="block" pos:line="100" pos:column="13">/* [in] */</comment> <argument pos:line="100" pos:column="24">__RPC__in_opt IVsProjectCfg *pProjectCfg</argument>,
            <comment type="block" pos:line="101" pos:column="13">/* [in] */</comment> <argument pos:line="101" pos:column="24">__RPC__in LPCOLESTR pszOutputCanonicalName</argument>,
            <comment type="block" pos:line="102" pos:column="13">/* [in] */</comment> <argument pos:line="102" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="103" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="103" pos:column="38">__RPC__inout_ecount_full(celt) BSTR rgbstrMachines[  ]</argument>,
            <comment type="block" pos:line="104" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="104" pos:column="38">__RPC__inout_ecount_full(celt) BSTR rgbstrURLs[  ]</argument>,
            <comment type="block" pos:line="105" pos:column="13">/* [out] */</comment> <argument pos:line="105" pos:column="25">__RPC__out ULONG *pcActual</argument>)</argument_list></macro> <op:operator pos:line="105" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="105" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="107" pos:column="9">virtual <name pos:line="107" pos:column="17">HRESULT</name> <name pos:line="107" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="107" pos:column="43">MapDeployedURLToProjectItem</name><argument_list pos:line="107" pos:column="70">( 
            <comment type="block" pos:line="108" pos:column="13">/* [in] */</comment> <argument pos:line="108" pos:column="24">DWORD dwReserved</argument>,
            <comment type="block" pos:line="109" pos:column="13">/* [in] */</comment> <argument pos:line="109" pos:column="24">__RPC__in LPCOLESTR pszDUrl</argument>,
            <comment type="block" pos:line="110" pos:column="13">/* [out] */</comment> <argument pos:line="110" pos:column="25">__RPC__deref_out_opt IVsHierarchy **pphier</argument>,
            <comment type="block" pos:line="111" pos:column="13">/* [out] */</comment> <argument pos:line="111" pos:column="25">__RPC__out VSITEMID *pitemid</argument>)</argument_list></macro> <op:operator pos:line="111" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="111" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="115" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="117" pos:column="5">typedef <type><struct pos:line="117" pos:column="13">struct <name pos:line="117" pos:column="20">IVsSolutionDebuggingAssistant2Vtbl</name>
    <block pos:line="118" pos:column="5">{<public type="default" pos:line="118" pos:column="6">
        <function_decl><type><name pos:line="119" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="121" pos:column="9">HRESULT</name></type> ( <name pos:line="121" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="121" pos:column="37">*</type:modifier><name pos:line="121" pos:column="38">QueryInterface</name> )<parameter_list pos:line="121" pos:column="54">( 
            <param><decl><type><name pos:line="122" pos:column="13">IVsSolutionDebuggingAssistant2</name> <type:modifier pos:line="122" pos:column="44">*</type:modifier></type> <name pos:line="122" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="123" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="123" pos:column="24">__RPC__in</name> <name pos:line="123" pos:column="34">REFIID</name></type> <name pos:line="123" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="124" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="125" pos:column="13">__RPC__deref_out</name>  <name pos:line="125" pos:column="31">void</name> <type:modifier pos:line="125" pos:column="36">*</type:modifier><type:modifier pos:line="125" pos:column="37">*</type:modifier></type><name pos:line="125" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="127" pos:column="9">ULONG</name></type> ( <name pos:line="127" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="127" pos:column="35">*</type:modifier><name pos:line="127" pos:column="36">AddRef</name> )<parameter_list pos:line="127" pos:column="44">( 
            <param><decl><type><name pos:line="128" pos:column="13">IVsSolutionDebuggingAssistant2</name> <type:modifier pos:line="128" pos:column="44">*</type:modifier></type> <name pos:line="128" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="130" pos:column="9">ULONG</name></type> ( <name pos:line="130" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="130" pos:column="35">*</type:modifier><name pos:line="130" pos:column="36">Release</name> )<parameter_list pos:line="130" pos:column="45">( 
            <param><decl><type><name pos:line="131" pos:column="13">IVsSolutionDebuggingAssistant2</name> <type:modifier pos:line="131" pos:column="44">*</type:modifier></type> <name pos:line="131" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="133" pos:column="9">HRESULT</name> <argument_list pos:line="133" pos:column="17">( <argument pos:line="133" pos:column="19">STDMETHODCALLTYPE *MapOutputToDeployedURLs</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="133" pos:column="63">(</op:operator> 
            <name pos:line="134" pos:column="13">IVsSolutionDebuggingAssistant2</name> <op:operator pos:line="134" pos:column="44">*</op:operator> <name pos:line="134" pos:column="46">This</name><op:operator pos:line="134" pos:column="50">,</op:operator>
            <comment type="block" pos:line="135" pos:column="13">/* [in] */</comment> <name pos:line="135" pos:column="24">DWORD</name> <name pos:line="135" pos:column="30">dwReserved</name><op:operator pos:line="135" pos:column="40">,</op:operator>
            <comment type="block" pos:line="136" pos:column="13">/* [in] */</comment> <name pos:line="136" pos:column="24">__RPC__in_opt</name> <name pos:line="136" pos:column="38">IVsProjectCfg</name> <op:operator pos:line="136" pos:column="52">*</op:operator><name pos:line="136" pos:column="53">pProjectCfg</name><op:operator pos:line="136" pos:column="64">,</op:operator>
            <comment type="block" pos:line="137" pos:column="13">/* [in] */</comment> <name pos:line="137" pos:column="24">__RPC__in</name> <name pos:line="137" pos:column="34">LPCOLESTR</name> <name pos:line="137" pos:column="44">pszOutputCanonicalName</name><op:operator pos:line="137" pos:column="66">,</op:operator>
            <comment type="block" pos:line="138" pos:column="13">/* [in] */</comment> <name pos:line="138" pos:column="24">ULONG</name> <name pos:line="138" pos:column="30">celt</name><op:operator pos:line="138" pos:column="34">,</op:operator>
            <comment type="block" pos:line="139" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="139" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="139" pos:column="62">(<argument pos:line="139" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="139" pos:column="69">BSTR</name> <name><name pos:line="139" pos:column="74">rgbstrMachines</name><index pos:line="139" pos:column="88">[  ]</index></name><op:operator pos:line="139" pos:column="92">,</op:operator>
            <comment type="block" pos:line="140" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="140" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="140" pos:column="62">(<argument pos:line="140" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="140" pos:column="69">BSTR</name> <name><name pos:line="140" pos:column="74">rgbstrURLs</name><index pos:line="140" pos:column="84">[  ]</index></name><op:operator pos:line="140" pos:column="88">,</op:operator>
            <comment type="block" pos:line="141" pos:column="13">/* [out] */</comment> <name pos:line="141" pos:column="25">__RPC__out</name> <name pos:line="141" pos:column="36">ULONG</name> <op:operator pos:line="141" pos:column="42">*</op:operator><name pos:line="141" pos:column="43">pcActual</name><op:operator pos:line="141" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="143" pos:column="9">HRESULT</name></type> ( <name pos:line="143" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="143" pos:column="37">*</type:modifier><name pos:line="143" pos:column="38">MapDeployedURLToProjectItem</name> )<parameter_list pos:line="143" pos:column="67">( 
            <param><decl><type><name pos:line="144" pos:column="13">IVsSolutionDebuggingAssistant2</name> <type:modifier pos:line="144" pos:column="44">*</type:modifier></type> <name pos:line="144" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="145" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="145" pos:column="24">DWORD</name></type> <name pos:line="145" pos:column="30">dwReserved</name></decl></param>,
            <comment type="block" pos:line="146" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="146" pos:column="24">__RPC__in</name> <name pos:line="146" pos:column="34">LPCOLESTR</name></type> <name pos:line="146" pos:column="44">pszDUrl</name></decl></param>,
            <comment type="block" pos:line="147" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="147" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="147" pos:column="46">IVsHierarchy</name> <type:modifier pos:line="147" pos:column="59">*</type:modifier><type:modifier pos:line="147" pos:column="60">*</type:modifier></type><name pos:line="147" pos:column="61">pphier</name></decl></param>,
            <comment type="block" pos:line="148" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="148" pos:column="25">__RPC__out</name> <name pos:line="148" pos:column="36">VSITEMID</name> <type:modifier pos:line="148" pos:column="45">*</type:modifier></type><name pos:line="148" pos:column="46">pitemid</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="150" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="151" pos:column="7">IVsSolutionDebuggingAssistant2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="153" pos:column="5">interface</name></type> <name pos:line="153" pos:column="15">IVsSolutionDebuggingAssistant2</name>
    <argument_list pos:line="154" pos:column="5">{
        <argument><expr><name pos:line="155" pos:column="9">CONST_VTBL</name> struct <name pos:line="155" pos:column="27">IVsSolutionDebuggingAssistant2Vtbl</name> <op:operator pos:line="155" pos:column="62">*</op:operator><name pos:line="155" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">ifdef</cpp:directive> <name pos:line="160" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="163" pos:column="9">IVsSolutionDebuggingAssistant2_QueryInterface</name><parameter_list pos:line="163" pos:column="54">(<param><type><name pos:line="163" pos:column="55">This</name></type></param>,<param><type><name pos:line="163" pos:column="60">riid</name></type></param>,<param><type><name pos:line="163" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="164" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="166" pos:column="9">IVsSolutionDebuggingAssistant2_AddRef</name><parameter_list pos:line="166" pos:column="46">(<param><type><name pos:line="166" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="167" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="169" pos:column="9">IVsSolutionDebuggingAssistant2_Release</name><parameter_list pos:line="169" pos:column="47">(<param><type><name pos:line="169" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="170" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="173" pos:column="9">IVsSolutionDebuggingAssistant2_MapOutputToDeployedURLs</name><parameter_list pos:line="173" pos:column="63">(<param><type><name pos:line="173" pos:column="64">This</name></type></param>,<param><type><name pos:line="173" pos:column="69">dwReserved</name></type></param>,<param><type><name pos:line="173" pos:column="80">pProjectCfg</name></type></param>,<param><type><name pos:line="173" pos:column="92">pszOutputCanonicalName</name></type></param>,<param><type><name pos:line="173" pos:column="115">celt</name></type></param>,<param><type><name pos:line="173" pos:column="120">rgbstrMachines</name></type></param>,<param><type><name pos:line="173" pos:column="135">rgbstrURLs</name></type></param>,<param><type><name pos:line="173" pos:column="146">pcActual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="174" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapOutputToDeployedURLs(This,dwReserved,pProjectCfg,pszOutputCanonicalName,celt,rgbstrMachines,rgbstrURLs,pcActual) )</cpp:value></cpp:define> 

<cpp:define pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="176" pos:column="9">IVsSolutionDebuggingAssistant2_MapDeployedURLToProjectItem</name><parameter_list pos:line="176" pos:column="67">(<param><type><name pos:line="176" pos:column="68">This</name></type></param>,<param><type><name pos:line="176" pos:column="73">dwReserved</name></type></param>,<param><type><name pos:line="176" pos:column="84">pszDUrl</name></type></param>,<param><type><name pos:line="176" pos:column="92">pphier</name></type></param>,<param><type><name pos:line="176" pos:column="99">pitemid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="177" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapDeployedURLToProjectItem(This,dwReserved,pszDUrl,pphier,pitemid) )</cpp:value></cpp:define> 

<cpp:endif pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="179" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="182" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="187" pos:column="9">/* __IVsSolutionDebuggingAssistant2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">ifndef</cpp:directive> <name pos:line="190" pos:column="9">__IVsProvideDebuggingInfo_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="191" pos:column="9">__IVsProvideDebuggingInfo_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="193" pos:column="1">/* interface IVsProvideDebuggingInfo */</comment>
<comment type="block" pos:line="194" pos:column="1">/* [object][unique][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="197" pos:column="1">EXTERN_C</name> <specifier pos:line="197" pos:column="10">const</specifier> <name pos:line="197" pos:column="16">IID</name></type> <name pos:line="197" pos:column="20">IID_IVsProvideDebuggingInfo</name></decl>;</decl_stmt>

<cpp:if pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">if</cpp:directive> <expr><call><name pos:line="199" pos:column="5">defined</name><argument_list pos:line="199" pos:column="12">(<argument><expr><name pos:line="199" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="199" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="199" pos:column="29">!</op:operator><call><name pos:line="199" pos:column="30">defined</name><argument_list pos:line="199" pos:column="37">(<argument><expr><name pos:line="199" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="201" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="201" pos:column="19">(<argument pos:line="201" pos:column="20">"665AADC9-DFF5-4DDF-A119-60D2EEA051C6"</argument>)</argument_list></macro>
    <label><name pos:line="202" pos:column="5">IVsProvideDebuggingInfo</name> :</label> <expr_stmt><expr pos:line="202" pos:column="31">public <name pos:line="202" pos:column="38">IUnknown</name>
    <block pos:line="203" pos:column="5">{
    <expr pos:line="204" pos:column="5">public<op:operator pos:line="204" pos:column="11">:</op:operator>
        virtual <name pos:line="205" pos:column="17">HRESULT</name> <name pos:line="205" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="205" pos:column="43">GetDeployedOutputs</name><argument_list pos:line="205" pos:column="61">( 
            <comment type="block" pos:line="206" pos:column="13">/* [in] */</comment> <argument pos:line="206" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="207" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="207" pos:column="38">__RPC__inout_ecount_full(celt) IVsHierarchy *pIVsHierarchy[  ]</argument>,
            <comment type="block" pos:line="208" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="208" pos:column="38">__RPC__inout_ecount_full(celt) IVsProjectCfg *pIVsProjectCfg[  ]</argument>,
            <comment type="block" pos:line="209" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="209" pos:column="38">__RPC__inout_ecount_full(celt) IVsOutput *pIVsOutput[  ]</argument>,
            <comment type="block" pos:line="210" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="210" pos:column="38">__RPC__inout_ecount_full(celt) BSTR rgbstrMachines[  ]</argument>,
            <comment type="block" pos:line="211" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="211" pos:column="38">__RPC__inout_ecount_full(celt) BSTR rgbstrURLs[  ]</argument>,
            <comment type="block" pos:line="212" pos:column="13">/* [out] */</comment> <argument pos:line="212" pos:column="25">__RPC__out ULONG *pcActual</argument>)</argument_list></macro> <op:operator pos:line="212" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="212" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="216" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="218" pos:column="5">typedef <type><struct pos:line="218" pos:column="13">struct <name pos:line="218" pos:column="20">IVsProvideDebuggingInfoVtbl</name>
    <block pos:line="219" pos:column="5">{<public type="default" pos:line="219" pos:column="6">
        <function_decl><type><name pos:line="220" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="222" pos:column="9">HRESULT</name></type> ( <name pos:line="222" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="222" pos:column="37">*</type:modifier><name pos:line="222" pos:column="38">QueryInterface</name> )<parameter_list pos:line="222" pos:column="54">( 
            <param><decl><type><name pos:line="223" pos:column="13">IVsProvideDebuggingInfo</name> <type:modifier pos:line="223" pos:column="37">*</type:modifier></type> <name pos:line="223" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="224" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="224" pos:column="24">__RPC__in</name> <name pos:line="224" pos:column="34">REFIID</name></type> <name pos:line="224" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="225" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="226" pos:column="13">__RPC__deref_out</name>  <name pos:line="226" pos:column="31">void</name> <type:modifier pos:line="226" pos:column="36">*</type:modifier><type:modifier pos:line="226" pos:column="37">*</type:modifier></type><name pos:line="226" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="228" pos:column="9">ULONG</name></type> ( <name pos:line="228" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="228" pos:column="35">*</type:modifier><name pos:line="228" pos:column="36">AddRef</name> )<parameter_list pos:line="228" pos:column="44">( 
            <param><decl><type><name pos:line="229" pos:column="13">IVsProvideDebuggingInfo</name> <type:modifier pos:line="229" pos:column="37">*</type:modifier></type> <name pos:line="229" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="231" pos:column="9">ULONG</name></type> ( <name pos:line="231" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="231" pos:column="35">*</type:modifier><name pos:line="231" pos:column="36">Release</name> )<parameter_list pos:line="231" pos:column="45">( 
            <param><decl><type><name pos:line="232" pos:column="13">IVsProvideDebuggingInfo</name> <type:modifier pos:line="232" pos:column="37">*</type:modifier></type> <name pos:line="232" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="234" pos:column="9">HRESULT</name> <argument_list pos:line="234" pos:column="17">( <argument pos:line="234" pos:column="19">STDMETHODCALLTYPE *GetDeployedOutputs</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="234" pos:column="58">(</op:operator> 
            <name pos:line="235" pos:column="13">IVsProvideDebuggingInfo</name> <op:operator pos:line="235" pos:column="37">*</op:operator> <name pos:line="235" pos:column="39">This</name><op:operator pos:line="235" pos:column="43">,</op:operator>
            <comment type="block" pos:line="236" pos:column="13">/* [in] */</comment> <name pos:line="236" pos:column="24">ULONG</name> <name pos:line="236" pos:column="30">celt</name><op:operator pos:line="236" pos:column="34">,</op:operator>
            <comment type="block" pos:line="237" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="237" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="237" pos:column="62">(<argument pos:line="237" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="237" pos:column="69">IVsHierarchy</name> <op:operator pos:line="237" pos:column="82">*</op:operator><name><name pos:line="237" pos:column="83">pIVsHierarchy</name><index pos:line="237" pos:column="96">[  ]</index></name><op:operator pos:line="237" pos:column="100">,</op:operator>
            <comment type="block" pos:line="238" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="238" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="238" pos:column="62">(<argument pos:line="238" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="238" pos:column="69">IVsProjectCfg</name> <op:operator pos:line="238" pos:column="83">*</op:operator><name><name pos:line="238" pos:column="84">pIVsProjectCfg</name><index pos:line="238" pos:column="98">[  ]</index></name><op:operator pos:line="238" pos:column="102">,</op:operator>
            <comment type="block" pos:line="239" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="239" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="239" pos:column="62">(<argument pos:line="239" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="239" pos:column="69">IVsOutput</name> <op:operator pos:line="239" pos:column="79">*</op:operator><name><name pos:line="239" pos:column="80">pIVsOutput</name><index pos:line="239" pos:column="90">[  ]</index></name><op:operator pos:line="239" pos:column="94">,</op:operator>
            <comment type="block" pos:line="240" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="240" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="240" pos:column="62">(<argument pos:line="240" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="240" pos:column="69">BSTR</name> <name><name pos:line="240" pos:column="74">rgbstrMachines</name><index pos:line="240" pos:column="88">[  ]</index></name><op:operator pos:line="240" pos:column="92">,</op:operator>
            <comment type="block" pos:line="241" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="241" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="241" pos:column="62">(<argument pos:line="241" pos:column="63">celt</argument>)</argument_list></macro> <name pos:line="241" pos:column="69">BSTR</name> <name><name pos:line="241" pos:column="74">rgbstrURLs</name><index pos:line="241" pos:column="84">[  ]</index></name><op:operator pos:line="241" pos:column="88">,</op:operator>
            <comment type="block" pos:line="242" pos:column="13">/* [out] */</comment> <name pos:line="242" pos:column="25">__RPC__out</name> <name pos:line="242" pos:column="36">ULONG</name> <op:operator pos:line="242" pos:column="42">*</op:operator><name pos:line="242" pos:column="43">pcActual</name><op:operator pos:line="242" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="244" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="245" pos:column="7">IVsProvideDebuggingInfoVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="247" pos:column="5">interface</name></type> <name pos:line="247" pos:column="15">IVsProvideDebuggingInfo</name>
    <argument_list pos:line="248" pos:column="5">{
        <argument><expr><name pos:line="249" pos:column="9">CONST_VTBL</name> struct <name pos:line="249" pos:column="27">IVsProvideDebuggingInfoVtbl</name> <op:operator pos:line="249" pos:column="55">*</op:operator><name pos:line="249" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="254" pos:column="1">#<cpp:directive pos:line="254" pos:column="2">ifdef</cpp:directive> <name pos:line="254" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="257" pos:column="9">IVsProvideDebuggingInfo_QueryInterface</name><parameter_list pos:line="257" pos:column="47">(<param><type><name pos:line="257" pos:column="48">This</name></type></param>,<param><type><name pos:line="257" pos:column="53">riid</name></type></param>,<param><type><name pos:line="257" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="258" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="260" pos:column="9">IVsProvideDebuggingInfo_AddRef</name><parameter_list pos:line="260" pos:column="39">(<param><type><name pos:line="260" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="261" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="263" pos:column="9">IVsProvideDebuggingInfo_Release</name><parameter_list pos:line="263" pos:column="40">(<param><type><name pos:line="263" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="264" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="267" pos:column="9">IVsProvideDebuggingInfo_GetDeployedOutputs</name><parameter_list pos:line="267" pos:column="51">(<param><type><name pos:line="267" pos:column="52">This</name></type></param>,<param><type><name pos:line="267" pos:column="57">celt</name></type></param>,<param><type><name pos:line="267" pos:column="62">pIVsHierarchy</name></type></param>,<param><type><name pos:line="267" pos:column="76">pIVsProjectCfg</name></type></param>,<param><type><name pos:line="267" pos:column="91">pIVsOutput</name></type></param>,<param><type><name pos:line="267" pos:column="102">rgbstrMachines</name></type></param>,<param><type><name pos:line="267" pos:column="117">rgbstrURLs</name></type></param>,<param><type><name pos:line="267" pos:column="128">pcActual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="268" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDeployedOutputs(This,celt,pIVsHierarchy,pIVsProjectCfg,pIVsOutput,rgbstrMachines,rgbstrURLs,pcActual) )</cpp:value></cpp:define> 

<cpp:endif pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="270" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="273" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="278" pos:column="1">#<cpp:directive pos:line="278" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="278" pos:column="9">/* __IVsProvideDebuggingInfo_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="281" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<function_decl><type><name pos:line="283" pos:column="1">unsigned</name> <name pos:line="283" pos:column="10">long</name>             <name pos:line="283" pos:column="27">__RPC_USER</name></type>  <name pos:line="283" pos:column="39">BSTR_UserSize</name><parameter_list pos:line="283" pos:column="52">(     <param><decl><type><name pos:line="283" pos:column="58">unsigned</name></type> <name pos:line="283" pos:column="67">long</name> <type:modifier pos:line="283" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="283" pos:column="75">unsigned</name></type> <name pos:line="283" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="283" pos:column="102">BSTR</name> <type:modifier pos:line="283" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="284" pos:column="1">unsigned</name> <name pos:line="284" pos:column="10">char</name> <type:modifier pos:line="284" pos:column="15">*</type:modifier> <name pos:line="284" pos:column="17">__RPC_USER</name></type>  <name pos:line="284" pos:column="29">BSTR_UserMarshal</name><parameter_list pos:line="284" pos:column="45">(  <param><decl><type><name pos:line="284" pos:column="48">unsigned</name></type> <name pos:line="284" pos:column="57">long</name> <type:modifier pos:line="284" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="284" pos:column="65">unsigned</name></type> <name pos:line="284" pos:column="74">char</name> <type:modifier pos:line="284" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="284" pos:column="82">BSTR</name> <type:modifier pos:line="284" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="285" pos:column="1">unsigned</name> <name pos:line="285" pos:column="10">char</name> <type:modifier pos:line="285" pos:column="15">*</type:modifier> <name pos:line="285" pos:column="17">__RPC_USER</name></type>  <name pos:line="285" pos:column="29">BSTR_UserUnmarshal</name><parameter_list pos:line="285" pos:column="47">(<param><decl><type><name pos:line="285" pos:column="48">unsigned</name></type> <name pos:line="285" pos:column="57">long</name> <type:modifier pos:line="285" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="285" pos:column="65">unsigned</name></type> <name pos:line="285" pos:column="74">char</name> <type:modifier pos:line="285" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="285" pos:column="82">BSTR</name> <type:modifier pos:line="285" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="286" pos:column="1">void</name>                      <name pos:line="286" pos:column="27">__RPC_USER</name></type>  <name pos:line="286" pos:column="39">BSTR_UserFree</name><parameter_list pos:line="286" pos:column="52">(     <param><decl><type><name pos:line="286" pos:column="58">unsigned</name></type> <name pos:line="286" pos:column="67">long</name> <type:modifier pos:line="286" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="286" pos:column="75">BSTR</name> <type:modifier pos:line="286" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<comment type="block" pos:line="288" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">ifdef</cpp:directive> <name pos:line="290" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
