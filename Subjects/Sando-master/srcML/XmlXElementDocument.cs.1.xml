<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Indexer\Indexer\Documents\XmlXElementDocument.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Documents</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">ExtensionContracts</name><op:operator pos:line="6" pos:column="31">.</op:operator><name pos:line="6" pos:column="32">ProgramElementContracts</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Sando</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">Indexer</name><op:operator pos:line="8" pos:column="24">.</op:operator><name pos:line="8" pos:column="25">Documents</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">XmlXElementDocument</name> <super pos:line="10" pos:column="38">: <name pos:line="10" pos:column="40">SandoDocument</name></super>
    <block pos:line="11" pos:column="5">{
        <constructor><specifier pos:line="12" pos:column="9">public</specifier> <name pos:line="12" pos:column="16">XmlXElementDocument</name><parameter_list pos:line="12" pos:column="35">(<param><decl><type><name pos:line="12" pos:column="36">ProgramElement</name></type> <name pos:line="12" pos:column="51">programElement</name></decl></param>)</parameter_list> <member_list pos:line="12" pos:column="67">: <call><name pos:line="12" pos:column="69">base</name><argument_list pos:line="12" pos:column="73">(<argument><expr><name pos:line="12" pos:column="74">programElement</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="13" pos:column="9">{
        }</block></constructor>

        <constructor><specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">XmlXElementDocument</name><parameter_list pos:line="16" pos:column="35">(<param><decl><type><name pos:line="16" pos:column="36">Document</name></type> <name pos:line="16" pos:column="45">document</name></decl></param>)</parameter_list> <member_list pos:line="16" pos:column="55">: <call><name pos:line="16" pos:column="57">base</name><argument_list pos:line="16" pos:column="61">(<argument><expr><name pos:line="16" pos:column="62">document</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="17" pos:column="9">{
        }</block></constructor>

        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">override</specifier> <name><name pos:line="20" pos:column="25">List</name><argument_list pos:line="20" pos:column="29">&lt;<argument><name pos:line="20" pos:column="30">Field</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="37">GetFieldsForLucene</name><parameter_list pos:line="20" pos:column="55">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">fields</name> <init pos:line="22" pos:column="24">= <expr><op:operator pos:line="22" pos:column="26">new</op:operator> <call><name><name pos:line="22" pos:column="30">List</name><argument_list pos:line="22" pos:column="34">&lt;<argument><name pos:line="22" pos:column="35">Field</name></argument>&gt;</argument_list></name><argument_list pos:line="22" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">element</name> <init pos:line="23" pos:column="25">= <expr><op:operator pos:line="23" pos:column="27">(</op:operator><name pos:line="23" pos:column="28">XmlXElement</name><op:operator pos:line="23" pos:column="39">)</op:operator><name pos:line="23" pos:column="40">programElement</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">AddBodyField</name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">fields</name></expr></argument>, <argument><expr><op:operator pos:line="24" pos:column="34">new</op:operator> <call><name pos:line="24" pos:column="38">Field</name><argument_list pos:line="24" pos:column="43">(<argument><expr><call><name><name pos:line="24" pos:column="44">SandoField</name><op:operator pos:line="24" pos:column="54">.</op:operator><name pos:line="24" pos:column="55">Body</name><op:operator pos:line="24" pos:column="59">.</op:operator><name pos:line="24" pos:column="60">ToString</name></name><argument_list pos:line="24" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="72">element</name><op:operator pos:line="24" pos:column="79">.</op:operator><name pos:line="24" pos:column="80">Body</name><op:operator pos:line="24" pos:column="84">.</op:operator><name pos:line="24" pos:column="85">ToSandoSearchable</name></name><argument_list pos:line="24" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="106">Field</name><op:operator pos:line="24" pos:column="111">.</op:operator><name pos:line="24" pos:column="112">Store</name><op:operator pos:line="24" pos:column="117">.</op:operator><name pos:line="24" pos:column="118">NO</name></name></expr></argument>,
                   <argument><expr><name><name pos:line="25" pos:column="20">Field</name><op:operator pos:line="25" pos:column="25">.</op:operator><name pos:line="25" pos:column="26">Index</name><op:operator pos:line="25" pos:column="31">.</op:operator><name pos:line="25" pos:column="32">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">fields</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="29" pos:column="9">public</specifier> <specifier pos:line="29" pos:column="16">override</specifier> <name pos:line="29" pos:column="25">object</name><index pos:line="29" pos:column="31">[]</index></type> <name pos:line="29" pos:column="34">GetParametersForConstructor</name><parameter_list pos:line="29" pos:column="61">(<param><decl><type><name pos:line="29" pos:column="62">string</name></type> <name pos:line="29" pos:column="69">name</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="75">ProgramElementType</name></type> <name pos:line="29" pos:column="94">programElementType</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="114">string</name></type> <name pos:line="29" pos:column="121">fullFilePath</name></decl></param>,
            <param><decl><type><name pos:line="30" pos:column="13">int</name></type> <name pos:line="30" pos:column="17">definitionLineNumber</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="39">int</name></type> <name pos:line="30" pos:column="43">definitionColumnNumber</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="67">string</name></type> <name pos:line="30" pos:column="74">snippet</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="83">Document</name></type> <name pos:line="30" pos:column="92">document</name></decl></param>)</parameter_list>
        <block pos:line="31" pos:column="9">{   
            <return pos:line="32" pos:column="13">return <expr><op:operator pos:line="32" pos:column="20">new</op:operator> <name><name pos:line="32" pos:column="24">object</name><index pos:line="32" pos:column="30">[]</index></name> <block pos:line="32" pos:column="33">{<expr><name pos:line="32" pos:column="34">name</name></expr><op:operator pos:line="32" pos:column="38">,</op:operator> <expr><name><name pos:line="32" pos:column="40">String</name><op:operator pos:line="32" pos:column="46">.</op:operator><name pos:line="32" pos:column="47">Empty</name></name></expr><op:operator pos:line="32" pos:column="52">,</op:operator> <expr><name pos:line="32" pos:column="54">definitionLineNumber</name></expr><op:operator pos:line="32" pos:column="74">,</op:operator> <expr><name pos:line="32" pos:column="76">definitionColumnNumber</name></expr><op:operator pos:line="32" pos:column="98">,</op:operator> <expr><name pos:line="32" pos:column="100">fullFilePath</name></expr><op:operator pos:line="32" pos:column="112">,</op:operator> <expr><name pos:line="32" pos:column="114">snippet</name></expr>}</block></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
