<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core\QueryRefomers\IQueryReformer.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Core</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Tools</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Sando</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">Core</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">QueryRefomers</name></name>
<block pos:line="8" pos:column="1">{
    <class type="interface"><specifier pos:line="9" pos:column="5">public</specifier> interface <name pos:line="9" pos:column="22">IInitializable</name>
    <block pos:line="10" pos:column="5">{
        <function_decl><type><name pos:line="11" pos:column="9">void</name></type> <name pos:line="11" pos:column="14">Initialize</name><parameter_list pos:line="11" pos:column="24">(<param><decl><type><name pos:line="11" pos:column="25">string</name></type> <name pos:line="11" pos:column="32">directory</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>


    <class type="interface"><specifier pos:line="15" pos:column="5">public</specifier> interface <name pos:line="15" pos:column="22">IQueryReformer</name>
    <block pos:line="16" pos:column="5">{
        <function_decl><type><name pos:line="17" pos:column="9">void</name></type> <name pos:line="17" pos:column="14">SetOriginalQuery</name><parameter_list pos:line="17" pos:column="30">(<param><decl><type><name><name pos:line="17" pos:column="31">IEnumerable</name><argument_list pos:line="17" pos:column="42">&lt;<argument><name pos:line="17" pos:column="43">String</name></argument>&gt;</argument_list></name></type> <name pos:line="17" pos:column="51">words</name></decl></param>)</parameter_list>;</function_decl>
        <function_decl><type><name pos:line="18" pos:column="9">void</name></type> <name pos:line="18" pos:column="14">Reform</name><parameter_list pos:line="18" pos:column="20">()</parameter_list>;</function_decl>
        <function_decl><type><name><name pos:line="19" pos:column="9">IEnumerable</name><argument_list pos:line="19" pos:column="20">&lt;<argument><name pos:line="19" pos:column="21">IReformedQuery</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="37">GetReformedQueries</name><parameter_list pos:line="19" pos:column="55">()</parameter_list>;</function_decl>
    }</block></class>

    <class type="interface"><specifier pos:line="22" pos:column="5">public</specifier> interface <name pos:line="22" pos:column="22">IReformedQuerySorter</name>
    <block pos:line="23" pos:column="5">{
        <function_decl><type><name><name pos:line="24" pos:column="9">IEnumerable</name><argument_list pos:line="24" pos:column="20">&lt;<argument><name pos:line="24" pos:column="21">IReformedQuery</name></argument>&gt;</argument_list></name></type> <name pos:line="24" pos:column="37">SortReformedQueries</name><parameter_list pos:line="24" pos:column="56">(<param><decl><type><name><name pos:line="24" pos:column="57">IEnumerable</name><argument_list pos:line="24" pos:column="68">&lt;<argument><name pos:line="24" pos:column="69">IReformedQuery</name></argument>&gt;</argument_list></name></type> <name pos:line="24" pos:column="85">queries</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>

    <class><specifier pos:line="27" pos:column="5">public</specifier> <specifier pos:line="27" pos:column="12">abstract</specifier> class <name pos:line="27" pos:column="27">AbstractWordReformer</name>
    <block pos:line="28" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">protected</specifier> <specifier pos:line="29" pos:column="19">readonly</specifier> <name pos:line="29" pos:column="28">DictionaryBasedSplitter</name></type> <name pos:line="29" pos:column="52">localDictionary</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="31" pos:column="9">protected</specifier> <name pos:line="31" pos:column="19">AbstractWordReformer</name><parameter_list pos:line="31" pos:column="39">(<param><decl><type><name pos:line="31" pos:column="40">DictionaryBasedSplitter</name></type> <name pos:line="31" pos:column="64">localDictionary</name></decl></param>)</parameter_list>
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">this</name><op:operator pos:line="33" pos:column="17">.</op:operator><name pos:line="33" pos:column="18">localDictionary</name></name> <op:operator pos:line="33" pos:column="34">=</op:operator> <name pos:line="33" pos:column="36">localDictionary</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="36" pos:column="9">public</specifier> <name><name pos:line="36" pos:column="16">IEnumerable</name><argument_list pos:line="36" pos:column="27">&lt;<argument><name pos:line="36" pos:column="28">ReformedWord</name></argument>&gt;</argument_list></name></type> <name pos:line="36" pos:column="42">GetReformedTarget</name><parameter_list pos:line="36" pos:column="59">(<param><decl><type><name pos:line="36" pos:column="60">String</name></type> <name pos:line="36" pos:column="67">target</name></decl></param>)</parameter_list>
        <block pos:line="37" pos:column="9">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><call><name pos:line="38" pos:column="17">IsReformingWord</name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">target</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="38" pos:column="41">
            <block pos:line="39" pos:column="13">{
                <return pos:line="40" pos:column="17">return <expr><call><name pos:line="40" pos:column="24">GetReformedTargetInternal</name><argument_list pos:line="40" pos:column="49">(<argument><expr><name pos:line="40" pos:column="50">target</name></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="57">.</op:operator><call><name pos:line="40" pos:column="58">Where</name><argument_list pos:line="40" pos:column="63">(<argument><expr><lambda><name pos:line="40" pos:column="64">w</name> <op:operator pos:line="40" pos:column="66">=&gt;</op:operator> <call><name><name pos:line="40" pos:column="69">this</name><op:operator pos:line="40" pos:column="73">.</op:operator><name pos:line="40" pos:column="74">localDictionary</name><op:operator pos:line="40" pos:column="89">.</op:operator>
                    <name pos:line="41" pos:column="21">DoesWordExist</name></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name><name pos:line="41" pos:column="35">w</name><op:operator pos:line="41" pos:column="36">.</op:operator><name pos:line="41" pos:column="37">NewTerm</name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="46">DictionaryOption</name><op:operator pos:line="41" pos:column="62">.</op:operator><name pos:line="41" pos:column="63">IncludingStemming</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="82">.</op:operator>
                        <call><name pos:line="42" pos:column="25">TrimIfOverlyLong</name><argument_list pos:line="42" pos:column="41">(<argument><expr><call><name pos:line="42" pos:column="42">GetMaximumReformCount</name><argument_list pos:line="42" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
            }</block></then></if>
            <return pos:line="44" pos:column="13">return <expr><call><name><name pos:line="44" pos:column="20">Enumerable</name><op:operator pos:line="44" pos:column="30">.</op:operator><name><name pos:line="44" pos:column="31">Empty</name><argument_list pos:line="44" pos:column="36">&lt;<argument><name pos:line="44" pos:column="37">ReformedWord</name></argument>&gt;</argument_list></name></name><argument_list pos:line="44" pos:column="50">()</argument_list></call></expr>;</return>
        }</block></function>

      
        <function><type><specifier pos:line="48" pos:column="9">private</specifier> <name pos:line="48" pos:column="17">bool</name></type> <name pos:line="48" pos:column="22">IsReformingWord</name><parameter_list pos:line="48" pos:column="37">(<param><decl><type><name pos:line="48" pos:column="38">string</name></type> <name pos:line="48" pos:column="45">target</name></decl></param>)</parameter_list>
        <block pos:line="49" pos:column="9">{
            <return pos:line="50" pos:column="13">return <expr><op:operator pos:line="50" pos:column="20">!</op:operator><call><name><name pos:line="50" pos:column="21">localDictionary</name><op:operator pos:line="50" pos:column="36">.</op:operator><name pos:line="50" pos:column="37">DoesWordExist</name></name><argument_list pos:line="50" pos:column="50">(<argument><expr><name pos:line="50" pos:column="51">target</name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="59">DictionaryOption</name><op:operator pos:line="50" pos:column="75">.</op:operator><name pos:line="50" pos:column="76">IncludingStemming</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="50" pos:column="95">&amp;&amp;</op:operator> <name><name pos:line="50" pos:column="98">target</name><op:operator pos:line="50" pos:column="104">.</op:operator><name pos:line="50" pos:column="105">Length</name></name> 
                <op:operator pos:line="51" pos:column="17">&gt;=</op:operator> <name><name pos:line="51" pos:column="20">QuerySuggestionConfigurations</name><op:operator pos:line="51" pos:column="49">.</op:operator><name pos:line="51" pos:column="50">MINIMUM_WORD_LENGTH_TO_REFORM</name></name></expr>;</return>
        }</block></function>

        <function_decl><type><specifier pos:line="54" pos:column="9">protected</specifier> <specifier pos:line="54" pos:column="19">abstract</specifier> <name><name pos:line="54" pos:column="28">IEnumerable</name><argument_list pos:line="54" pos:column="39">&lt;<argument><name pos:line="54" pos:column="40">ReformedWord</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="54">GetReformedTargetInternal</name><parameter_list pos:line="54" pos:column="79">(<param><decl><type><name pos:line="54" pos:column="80">String</name></type> <name pos:line="54" pos:column="87">target</name></decl></param>)</parameter_list>;</function_decl>
        <function_decl><type><specifier pos:line="55" pos:column="9">protected</specifier> <specifier pos:line="55" pos:column="19">abstract</specifier> <name pos:line="55" pos:column="28">int</name></type> <name pos:line="55" pos:column="32">GetMaximumReformCount</name><parameter_list pos:line="55" pos:column="53">()</parameter_list>;</function_decl>
    }</block></class>

    <class><specifier pos:line="58" pos:column="5">public</specifier> <specifier pos:line="58" pos:column="12">abstract</specifier> class <name pos:line="58" pos:column="27">AbstractContextSensitiveWordReformer</name> <super pos:line="58" pos:column="64">: <name pos:line="58" pos:column="66">AbstractWordReformer</name></super>
    <block pos:line="59" pos:column="5">{
        <constructor><specifier pos:line="60" pos:column="9">protected</specifier> <name pos:line="60" pos:column="19">AbstractContextSensitiveWordReformer</name><parameter_list pos:line="60" pos:column="55">(<param><decl><type><name pos:line="60" pos:column="56">DictionaryBasedSplitter</name></type> <name pos:line="60" pos:column="80">localDictionary</name></decl></param>)</parameter_list> 
            <member_list pos:line="61" pos:column="13">: <call><name pos:line="61" pos:column="15">base</name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">localDictionary</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="62" pos:column="9">{
        }</block></constructor>

        <function_decl><type><specifier pos:line="65" pos:column="9">public</specifier> <specifier pos:line="65" pos:column="16">abstract</specifier> <name pos:line="65" pos:column="25">void</name></type> <name pos:line="65" pos:column="30">SetContextWords</name><parameter_list pos:line="65" pos:column="45">(<param><decl><type><name><name pos:line="65" pos:column="46">IEnumerable</name><argument_list pos:line="65" pos:column="57">&lt;<argument><name pos:line="65" pos:column="58">String</name></argument>&gt;</argument_list></name></type> <name pos:line="65" pos:column="66">words</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>

    <enum><specifier pos:line="68" pos:column="5">public</specifier> enum <macro><name pos:line="68" pos:column="17">TermChangeCategory</name></macro>
    <block pos:line="69" pos:column="5">{
        <decl><name pos:line="70" pos:column="9">NOT_CHANGED</name></decl><op:operator pos:line="70" pos:column="20">,</op:operator>
        <decl><name pos:line="71" pos:column="9">MISSPELLING</name></decl><op:operator pos:line="71" pos:column="20">,</op:operator>
        <decl><name pos:line="72" pos:column="9">SE_SYNONYM</name></decl><op:operator pos:line="72" pos:column="19">,</op:operator>
        <decl><name pos:line="73" pos:column="9">GENERAL_SYNONYM</name></decl><op:operator pos:line="73" pos:column="24">,</op:operator>
        <decl><name pos:line="74" pos:column="9">COOCCUR</name></decl><op:operator pos:line="74" pos:column="16">,</op:operator>
        <decl><name pos:line="75" pos:column="9">ACRONYM_EXPAND</name></decl>
    }</block>

    <decl pos:line="78" pos:column="5">public interface <name pos:line="78" pos:column="22">IReformedQuery</name> <op:operator pos:line="78" pos:column="37">:</op:operator> <name><name pos:line="78" pos:column="39">IEquatable</name><argument_list pos:line="78" pos:column="49">&lt;<argument><name pos:line="78" pos:column="50">IReformedQuery</name></argument>&gt;</argument_list></name>
    <block pos:line="79" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="80" pos:column="9">IEnumerable</name><argument_list pos:line="80" pos:column="20">&lt;<argument><name pos:line="80" pos:column="21">ReformedWord</name></argument>&gt;</argument_list></name></type> <name pos:line="80" pos:column="35">ReformedWords</name> <block pos:line="80" pos:column="49">{ <function_decl><name pos:line="80" pos:column="51">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="81" pos:column="9">IEnumerable</name><argument_list pos:line="81" pos:column="20">&lt;<argument><name pos:line="81" pos:column="21">String</name></argument>&gt;</argument_list></name></type> <name pos:line="81" pos:column="29">WordsAfterReform</name> <block pos:line="81" pos:column="46">{ <function_decl><name pos:line="81" pos:column="48">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="82" pos:column="9">String</name></type> <name pos:line="82" pos:column="16">ReformExplanation</name> <block pos:line="82" pos:column="34">{ <function_decl><name pos:line="82" pos:column="36">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="83" pos:column="9">String</name></type> <name pos:line="83" pos:column="16">QueryString</name> <block pos:line="83" pos:column="28">{ <function_decl><name pos:line="83" pos:column="30">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">String</name></type> <name pos:line="84" pos:column="16">OriginalQueryString</name> <block pos:line="84" pos:column="36">{ <function_decl><name pos:line="84" pos:column="38">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">int</name></type> <name pos:line="85" pos:column="13">CoOccurrenceCount</name> <block pos:line="85" pos:column="31">{ <function_decl><name pos:line="85" pos:column="33">get</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><name pos:line="86" pos:column="9">int</name></type> <name pos:line="86" pos:column="13">EditDistance</name> <block pos:line="86" pos:column="26">{ <function_decl><name pos:line="86" pos:column="28">get</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></decl>


    <decl pos:line="90" pos:column="5">public <name pos:line="90" pos:column="12">class</name> <name pos:line="90" pos:column="18">ReformedWord</name> <op:operator pos:line="90" pos:column="31">:</op:operator> <name><name pos:line="90" pos:column="33">IEquatable</name><argument_list pos:line="90" pos:column="43">&lt;<argument><name pos:line="90" pos:column="44">ReformedWord</name></argument>&gt;</argument_list></name>
    <block pos:line="91" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="92" pos:column="9">public</specifier> <name pos:line="92" pos:column="16">TermChangeCategory</name></type> <name pos:line="92" pos:column="35">Category</name> <block pos:line="92" pos:column="44">{ <function_decl><name pos:line="92" pos:column="46">get</name>;</function_decl> <function_decl><specifier pos:line="92" pos:column="51">private</specifier> <name pos:line="92" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="93" pos:column="9">public</specifier> <name pos:line="93" pos:column="16">string</name></type> <name pos:line="93" pos:column="23">OriginalTerm</name> <block pos:line="93" pos:column="36">{ <function_decl><name pos:line="93" pos:column="38">get</name>;</function_decl> <function_decl><specifier pos:line="93" pos:column="43">private</specifier> <name pos:line="93" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="94" pos:column="9">public</specifier> <name pos:line="94" pos:column="16">string</name></type> <name pos:line="94" pos:column="23">NewTerm</name> <block pos:line="94" pos:column="31">{ <function_decl><name pos:line="94" pos:column="33">get</name>;</function_decl> <function_decl><specifier pos:line="94" pos:column="38">private</specifier> <name pos:line="94" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="95" pos:column="9">public</specifier> <name pos:line="95" pos:column="16">int</name></type> <name pos:line="95" pos:column="20">DistanceFromOriginal</name> <block pos:line="95" pos:column="41">{ <function_decl><name pos:line="95" pos:column="43">get</name>;</function_decl> <function_decl><specifier pos:line="95" pos:column="48">private</specifier> <name pos:line="95" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="96" pos:column="9">public</specifier> <name pos:line="96" pos:column="16">string</name></type> <name pos:line="96" pos:column="23">ReformExplanation</name> <block pos:line="96" pos:column="41">{ <function_decl><name pos:line="96" pos:column="43">get</name>;</function_decl> <function_decl><specifier pos:line="96" pos:column="48">private</specifier> <name pos:line="96" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="98" pos:column="9">public</specifier> <name pos:line="98" pos:column="16">ReformedWord</name><parameter_list pos:line="98" pos:column="28">(<param><decl><type><name pos:line="98" pos:column="29">TermChangeCategory</name></type> <name pos:line="98" pos:column="48">category</name></decl></param>, <param><decl><type><name pos:line="98" pos:column="58">String</name></type> <name pos:line="98" pos:column="65">originalTerm</name></decl></param>,
            <param><decl><type><name pos:line="99" pos:column="13">String</name></type> <name pos:line="99" pos:column="20">newTerm</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="29">String</name></type> <name pos:line="99" pos:column="36">reformExplanation</name></decl></param>)</parameter_list>
        <block pos:line="100" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">this</name><op:operator pos:line="101" pos:column="17">.</op:operator><name pos:line="101" pos:column="18">Category</name></name> <op:operator pos:line="101" pos:column="27">=</op:operator> <name pos:line="101" pos:column="29">category</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="102" pos:column="13">this</name><op:operator pos:line="102" pos:column="17">.</op:operator><name pos:line="102" pos:column="18">OriginalTerm</name></name> <op:operator pos:line="102" pos:column="31">=</op:operator> <name pos:line="102" pos:column="33">originalTerm</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">this</name><op:operator pos:line="103" pos:column="17">.</op:operator><name pos:line="103" pos:column="18">NewTerm</name></name> <op:operator pos:line="103" pos:column="26">=</op:operator> <name pos:line="103" pos:column="28">newTerm</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="104" pos:column="13">this</name><op:operator pos:line="104" pos:column="17">.</op:operator><name pos:line="104" pos:column="18">ReformExplanation</name></name> <op:operator pos:line="104" pos:column="36">=</op:operator> <name pos:line="104" pos:column="38">reformExplanation</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">this</name><op:operator pos:line="105" pos:column="17">.</op:operator><name pos:line="105" pos:column="18">DistanceFromOriginal</name></name> <op:operator pos:line="105" pos:column="39">=</op:operator> <op:operator pos:line="105" pos:column="41">new</op:operator> <call><name pos:line="105" pos:column="45">Levenshtein</name><argument_list pos:line="105" pos:column="56">()</argument_list></call><op:operator pos:line="105" pos:column="58">.</op:operator><call><name pos:line="105" pos:column="59">LD</name><argument_list pos:line="105" pos:column="61">(<argument><expr><name><name pos:line="105" pos:column="62">this</name><op:operator pos:line="105" pos:column="66">.</op:operator><name pos:line="105" pos:column="67">OriginalTerm</name></name></expr></argument>,
                <argument><expr><name><name pos:line="106" pos:column="17">this</name><op:operator pos:line="106" pos:column="21">.</op:operator><name pos:line="106" pos:column="22">NewTerm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="109" pos:column="9">public</specifier> <name pos:line="109" pos:column="16">bool</name></type> <name pos:line="109" pos:column="21">Equals</name><parameter_list pos:line="109" pos:column="27">(<param><decl><type><name pos:line="109" pos:column="28">ReformedWord</name></type> <name pos:line="109" pos:column="41">other</name></decl></param>)</parameter_list>
        <block pos:line="110" pos:column="9">{
            <return pos:line="111" pos:column="13">return <expr><call><name><name pos:line="111" pos:column="20">this</name><op:operator pos:line="111" pos:column="24">.</op:operator><name pos:line="111" pos:column="25">OriginalTerm</name><op:operator pos:line="111" pos:column="37">.</op:operator><name pos:line="111" pos:column="38">Equals</name></name><argument_list pos:line="111" pos:column="44">(<argument><expr><name><name pos:line="111" pos:column="45">other</name><op:operator pos:line="111" pos:column="50">.</op:operator><name pos:line="111" pos:column="51">OriginalTerm</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="111" pos:column="65">&amp;&amp;</op:operator> <call><name><name pos:line="111" pos:column="68">this</name><op:operator pos:line="111" pos:column="72">.</op:operator><name pos:line="111" pos:column="73">NewTerm</name><op:operator pos:line="111" pos:column="80">.</op:operator><name pos:line="111" pos:column="81">Equals</name></name><argument_list pos:line="111" pos:column="87">(<argument><expr><name><name pos:line="111" pos:column="88">other</name><op:operator pos:line="111" pos:column="93">.</op:operator><name pos:line="111" pos:column="94">NewTerm</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></decl>

    <decl pos:line="115" pos:column="5">public <name pos:line="115" pos:column="12">class</name> <name pos:line="115" pos:column="18">SynonymReformedWord</name> <op:operator pos:line="115" pos:column="38">:</op:operator> <name pos:line="115" pos:column="40">ReformedWord</name>
    <block pos:line="116" pos:column="5">{
        <constructor><specifier pos:line="117" pos:column="9">public</specifier> <name pos:line="117" pos:column="16">SynonymReformedWord</name><parameter_list pos:line="117" pos:column="35">(<param><decl><type><name pos:line="117" pos:column="36">TermChangeCategory</name></type> <name pos:line="117" pos:column="55">category</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="65">string</name></type> <name pos:line="117" pos:column="72">originalTerm</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="86">string</name></type>
            <name pos:line="118" pos:column="13">newTerm</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="22">string</name></type> <name pos:line="118" pos:column="29">reformExplanation</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="48">int</name></type> <name pos:line="118" pos:column="52">SynonymSimilarityScore</name></decl></param>)</parameter_list>
                <member_list pos:line="119" pos:column="17">: <call><name pos:line="119" pos:column="19">base</name><argument_list pos:line="119" pos:column="23">(<argument><expr><name pos:line="119" pos:column="24">category</name></expr></argument>, <argument><expr><name pos:line="119" pos:column="34">originalTerm</name></expr></argument>, <argument><expr><name pos:line="119" pos:column="48">newTerm</name></expr></argument>, <argument><expr><name pos:line="119" pos:column="57">reformExplanation</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="120" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">this</name><op:operator pos:line="121" pos:column="17">.</op:operator><name pos:line="121" pos:column="18">SynonymSimilarityScore</name></name> <op:operator pos:line="121" pos:column="41">=</op:operator> <name pos:line="121" pos:column="43">SynonymSimilarityScore</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="124" pos:column="9">public</specifier> <name pos:line="124" pos:column="16">int</name></type> <name pos:line="124" pos:column="20">SynonymSimilarityScore</name> <block pos:line="124" pos:column="43">{ <function_decl><specifier pos:line="124" pos:column="45">private</specifier> <name pos:line="124" pos:column="53">set</name>;</function_decl> <function_decl><name pos:line="124" pos:column="58">get</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></decl>
<decl/></enum>}</block></namespace>
</unit>
