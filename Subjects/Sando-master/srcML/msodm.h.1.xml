<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\office10\msodm.h" pos:tabs="8"><cpp:pragma pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">pragma</cpp:directive> once</cpp:pragma>

 <comment type="line" pos:line="3" pos:column="2">// msodm.h - Public header for Office Document Management</comment>
<comment type="line" pos:line="4" pos:column="1">//</comment>
<comment type="line" pos:line="5" pos:column="1">// This header contains the definitions for the Application API to Office</comment>
<comment type="line" pos:line="6" pos:column="1">// File Open and the Office Librarian.</comment>
<comment type="line" pos:line="7" pos:column="1">//</comment>
<comment type="line" pos:line="8" pos:column="1">// The functions and classes defined here are explained in</comment>
<comment type="line" pos:line="9" pos:column="1">// "Find File 2.0 API" and "IMsoOLDocument".  See these documents for details.</comment>

<cpp:ifndef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifndef</cpp:directive> <name pos:line="11" pos:column="9">__MSODM_H__</name></cpp:ifndef>
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">__MSODM_H__</name></cpp:macro></cpp:define>

<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file pos:line="14" pos:column="10">&lt;msostd.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">include</cpp:directive> <cpp:file pos:line="15" pos:column="10">&lt;commctrl.h&gt;</cpp:file></cpp:include>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17" pos:column="5">defined</name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">RSH</name></expr></argument>)</argument_list></call></expr></cpp:if> <comment type="line" pos:line="17" pos:column="18">// for Word -- they define RSH for instrumented version.</comment>
<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">INSTRUMENTED</name></cpp:macro></cpp:define>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="19" pos:column="8">// defined(RSH)</comment>

<cpp:include pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="21" pos:column="10">"msosdm.h"</lit:literal></cpp:file></cpp:include>

<comment type="line" pos:line="23" pos:column="1">// Include debug header if needed</comment>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef</cpp:directive> <name pos:line="24" pos:column="8">VSMSODEBUG</name></cpp:ifdef>
<cpp:include pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="25" pos:column="10">"msodmd.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="26" pos:column="8">// VSMSODEBUG</comment>

<cpp:include pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="28" pos:column="10">"msoprops.h"</lit:literal></cpp:file></cpp:include>   <comment type="line" pos:line="28" pos:column="25">// For SetRenSummInfo</comment>
<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"shlobj.h"</lit:literal></cpp:file></cpp:include>     <comment type="line" pos:line="29" pos:column="25">// For MsoHrHttpUrlToPsfPidl</comment>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"msourl.h"</lit:literal></cpp:file></cpp:include>
<comment type="line" pos:line="31" pos:column="1">// Added for msoFileDialogType</comment>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef</cpp:directive> <name pos:line="32" pos:column="8">__cplusplus</name></cpp:ifdef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"msotl.h"</lit:literal></cpp:file></cpp:include>
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else</cpp:directive></cpp:else>  <comment type="line" pos:line="34" pos:column="8">// __cplusplus</comment>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"msotlc.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif</cpp:directive></cpp:endif>  <comment type="line" pos:line="36" pos:column="9">// __cplusplus</comment>


<comment type="line" pos:line="39" pos:column="1">// Add the DM_DLLFUNC specifier to all functions that we</comment>
<comment type="line" pos:line="40" pos:column="1">// export.</comment>
<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef</cpp:directive> <name pos:line="41" pos:column="8">OFFICE_BUILD</name></cpp:ifdef>
<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">DM_DLLFUNC</name></cpp:macro> <cpp:value pos:line="42" pos:column="20">__declspec(dllexport)</cpp:value></cpp:define>
<cpp:else pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">else</cpp:directive></cpp:else> <comment type="line" pos:line="43" pos:column="7">// OFFICE_BUILD</comment>
<cpp:define pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="44" pos:column="9">DM_DLLFUNC</name></cpp:macro> <cpp:value pos:line="44" pos:column="20">__declspec(dllimport)</cpp:value></cpp:define>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="45" pos:column="8">// OFFICE_BUILD</comment>
<cpp:define pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="46" pos:column="9">DM_DLLFUNCX</name></cpp:macro></cpp:define>


<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef</cpp:directive> <name pos:line="49" pos:column="8">__cplusplus</name></cpp:ifdef>
<cpp:define pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="50" pos:column="9">CONST_METHOD_FF</name></cpp:macro> <cpp:value pos:line="50" pos:column="25">const</cpp:value></cpp:define>
<cpp:else pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">else</cpp:directive></cpp:else> <comment type="line" pos:line="51" pos:column="7">// __cplusplus</comment>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">CONST_METHOD_FF</name></cpp:macro></cpp:define>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="53" pos:column="8">// __cplusplus</comment>

<comment type="line" pos:line="55" pos:column="1">// Standard type of callbacks used by Office Open/Find.  Note that your</comment>
<comment type="line" pos:line="56" pos:column="1">// functions must match this calltype.</comment>
<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive>	<name pos:line="57" pos:column="9">OFFOPEN_CALLBACK</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="58" pos:column="9">OFFOPEN_CALLBACK</name></cpp:macro>	<cpp:value pos:line="58" pos:column="33">__cdecl</cpp:value></cpp:define>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="59" pos:column="8">// OFFOPEN_CALLBACK</comment>

<comment type="line" pos:line="61" pos:column="1">// REVIEW brianwen: Do we really need our own bool, or can we just use office's?</comment>
<typedef pos:line="62" pos:column="1">typedef <type><name pos:line="62" pos:column="9">int</name></type> <name pos:line="62" pos:column="13">MSOBOOL</name>;</typedef>
<typedef pos:line="63" pos:column="1">typedef <type><name pos:line="63" pos:column="9">ULONGLONG</name></type> <name pos:line="63" pos:column="19">MSODMCOOKIE</name>;</typedef>

<decl_stmt><decl><type><name pos:line="65" pos:column="1">EXTERN_C</name> <specifier pos:line="65" pos:column="10">const</specifier> <name pos:line="65" pos:column="16">IID</name></type> <name pos:line="65" pos:column="20">IID_IBindStatusCallback</name></decl>;</decl_stmt>

<comment type="line" pos:line="67" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="68" pos:column="1">// Types and constants.</comment>


<comment type="line" pos:line="71" pos:column="1">// Special HRESULT value used by IMsoSearch::GetSzFileName.</comment>

<cpp:define pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="73" pos:column="9">MSO_S_TRUNCATED</name></cpp:macro>				<cpp:value pos:line="73" pos:column="49">0x00350001</cpp:value></cpp:define>

<comment type="line" pos:line="75" pos:column="1">// Special HRESULT values used by IFindFile::GetHwnd.</comment>

<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">MSO_E_DIALOG_VISIBLE</name></cpp:macro>			<cpp:value pos:line="77" pos:column="49">0x80350002</cpp:value></cpp:define>
<cpp:define pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="78" pos:column="9">MSO_E_DIALOG_NOT_VISIBLE</name></cpp:macro>		<cpp:value pos:line="78" pos:column="49">0x80350003</cpp:value></cpp:define>

<comment type="line" pos:line="80" pos:column="1">// Error codes used with WebFind.  These will come back from</comment>
<comment type="line" pos:line="81" pos:column="1">// ExecuteQuery</comment>
<cpp:define pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="82" pos:column="9">MSO_E_NO_FOLDER</name></cpp:macro>					<cpp:value pos:line="82" pos:column="57">0x80350004</cpp:value></cpp:define>		<comment type="line" pos:line="82" pos:column="81">// only 1 folder</comment>
<cpp:define pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="83" pos:column="9">MSO_E_TOO_MANY_FOLDERS</name></cpp:macro>		<cpp:value pos:line="83" pos:column="41">0x80350005</cpp:value></cpp:define>		<comment type="line" pos:line="83" pos:column="65">// only 1 folder</comment>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">MSO_E_NO_INDEX</name></cpp:macro>					<cpp:value pos:line="84" pos:column="57">0x80350006</cpp:value></cpp:define>		<comment type="line" pos:line="84" pos:column="81">// no index in folder</comment>
<cpp:define pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="85" pos:column="9">MSO_E_NO_SEARCH</name></cpp:macro>					<cpp:value pos:line="85" pos:column="57">0x80350007</cpp:value></cpp:define>		<comment type="line" pos:line="85" pos:column="81">// no text/property search specified</comment>
<cpp:define pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="86" pos:column="9">MSO_E_SYNTAX_ERROR</name></cpp:macro>				<cpp:value pos:line="86" pos:column="57">0x80350008</cpp:value></cpp:define>
<cpp:define pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="87" pos:column="9">MSO_E_ERROR_DURING_SEARCH</name></cpp:macro>		<cpp:value pos:line="87" pos:column="49">0x80350010</cpp:value></cpp:define>		<comment type="line" pos:line="87" pos:column="73">// error while executing search.</comment>

<comment type="line" pos:line="89" pos:column="1">// Special HRESULT value used by IMsoOLDocument::GetMoniker.</comment>

<cpp:define pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="91" pos:column="9">MSO_E_IOL_NO_ODMA_MONIKER</name></cpp:macro>	<cpp:value pos:line="91" pos:column="41">0x80350009</cpp:value></cpp:define>
<cpp:define pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="92" pos:column="9">MSO_E_IOL_ODMA_NOT_AVAIL</name></cpp:macro>		<cpp:value pos:line="92" pos:column="49">0x8035000a</cpp:value></cpp:define>

<comment type="line" pos:line="94" pos:column="1">// Special HRESULT value used by IDMBindStatusCallback.</comment>

<cpp:define pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="96" pos:column="9">MSO_S_BSC_BINARY</name></cpp:macro>				<cpp:value pos:line="96" pos:column="57">0x00350002</cpp:value></cpp:define>

<comment type="line" pos:line="98" pos:column="1">// Special HRESULT values used by IMsoOLDocument::BeginCmd</comment>

<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">MSO_S_IOLCMD_NONE</name></cpp:macro>				<cpp:value pos:line="100" pos:column="57">0x00350000</cpp:value></cpp:define>				<comment type="line" pos:line="100" pos:column="97">// Not used by apps</comment>
<cpp:define pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="101" pos:column="9">MSO_S_IOLCMD_FIRST</name></cpp:macro>				<cpp:value pos:line="101" pos:column="57">0x00350010</cpp:value></cpp:define>
<cpp:define pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="102" pos:column="9">MSO_S_IOLCMD_OPEN</name></cpp:macro>				<cpp:value pos:line="102" pos:column="57">MSO_S_IOLCMD_FIRST</cpp:value></cpp:define>
<cpp:define pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="103" pos:column="9">MSO_S_IOLCMD_OPENRO</name></cpp:macro>			<cpp:value pos:line="103" pos:column="49">(MSO_S_IOLCMD_FIRST + 0x01)</cpp:value></cpp:define>
<cpp:define pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="104" pos:column="9">MSO_S_IOLCMD_NEW</name></cpp:macro>				<cpp:value pos:line="104" pos:column="57">(MSO_S_IOLCMD_FIRST + 0x02)</cpp:value></cpp:define>
<cpp:define pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="105" pos:column="9">MSO_S_IOLCMD_CHECK_IN</name></cpp:macro>			<cpp:value pos:line="105" pos:column="49">(MSO_S_IOLCMD_FIRST + 0x03)</cpp:value></cpp:define>
<cpp:define pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="106" pos:column="9">MSO_S_IOLCMD_CHECK_OUT</name></cpp:macro>		<cpp:value pos:line="106" pos:column="41">(MSO_S_IOLCMD_FIRST + 0x04)</cpp:value></cpp:define>
<cpp:define pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="107" pos:column="9">MSO_S_IOLCMD_SAVE</name></cpp:macro>				<cpp:value pos:line="107" pos:column="57">(MSO_S_IOLCMD_FIRST + 0x05)</cpp:value></cpp:define>
<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">MSO_S_IOLCMD_SAVE_AS_DLG</name></cpp:macro>		<cpp:value pos:line="108" pos:column="49">(MSO_S_IOLCMD_FIRST + 0x06)</cpp:value></cpp:define>
<cpp:define pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="109" pos:column="9">MSO_S_IOLCMD_SAVE_VERSION</name></cpp:macro>	<cpp:value pos:line="109" pos:column="41">(MSO_S_IOLCMD_FIRST + 0x07)</cpp:value></cpp:define>
<cpp:define pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="110" pos:column="9">MSO_S_IOLCMD_CLOSE</name></cpp:macro>				<cpp:value pos:line="110" pos:column="57">(MSO_S_IOLCMD_FIRST + 0x08)</cpp:value></cpp:define>
<cpp:define pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="111" pos:column="9">MSO_S_IOLCMD_APP_MUST_MERGE</name></cpp:macro>	<cpp:value pos:line="111" pos:column="41">(MSO_S_IOLCMD_FIRST + 0x09)</cpp:value></cpp:define>
<cpp:define pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="112" pos:column="9">MSO_S_IOLCMD_ROLLBACK</name></cpp:macro>			<cpp:value pos:line="112" pos:column="49">(MSO_S_IOLCMD_FIRST + 0x0a)</cpp:value></cpp:define>
<cpp:define pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="113" pos:column="9">MSO_S_IOLCMD_CANCEL</name></cpp:macro>			<cpp:value pos:line="113" pos:column="49">(MSO_S_IOLCMD_FIRST + 0x0b)</cpp:value></cpp:define>
<cpp:define pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="114" pos:column="9">MSO_S_IOLCMD_REFRESH</name></cpp:macro>			<cpp:value pos:line="114" pos:column="49">(MSO_S_IOLCMD_FIRST + 0x0c)</cpp:value></cpp:define>
<cpp:define pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="115" pos:column="9">MSO_S_IOLCMD_SAVE_COPY</name></cpp:macro>		<cpp:value pos:line="115" pos:column="41">(MSO_S_IOLCMD_FIRST + 0x0d)</cpp:value></cpp:define>
<cpp:define pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="116" pos:column="9">MSO_S_IOLCMD_LIM</name></cpp:macro>				<cpp:value pos:line="116" pos:column="57">(MSO_S_IOLCMD_FIRST + 0x0e)</cpp:value></cpp:define> <comment type="line" pos:line="116" pos:column="85">// Must be last</comment>

<comment type="line" pos:line="118" pos:column="1">// Error HRESULT values used by IMsoOLDocument::BeginCmd</comment>
<cpp:define pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="119" pos:column="9">MSO_E_IOLCMD_ALREADY_OPENRO</name></cpp:macro>		<cpp:value pos:line="119" pos:column="49">0x8035000b</cpp:value></cpp:define>

<comment type="line" pos:line="121" pos:column="1">// Standard dialog items.</comment>

<typedef pos:line="123" pos:column="1">typedef <type><name pos:line="123" pos:column="9">int</name></type> <name pos:line="123" pos:column="13">MSOIOTM</name>;</typedef>

<enum pos:line="125" pos:column="1">enum
	<block pos:line="126" pos:column="9">{
	<decl><name pos:line="127" pos:column="9">msodmiotmMin</name> <init pos:line="127" pos:column="22">= <expr><op:operator pos:line="127" pos:column="24">-</op:operator><lit:literal type="number" pos:line="127" pos:column="25">13L</lit:literal></expr></init></decl><op:operator pos:line="127" pos:column="28">,</op:operator>
	<decl><name pos:line="128" pos:column="9">msodmiotmAnyTextMRU</name></decl><op:operator pos:line="128" pos:column="28">,</op:operator>	<comment type="line" pos:line="128" pos:column="33">// Any Text edit MRU.</comment>
	<decl><name pos:line="129" pos:column="9">msodmiotmFileNameMRU</name></decl><op:operator pos:line="129" pos:column="29">,</op:operator>	<comment type="line" pos:line="129" pos:column="33">// File name edit control MRU</comment>
	<decl><name pos:line="130" pos:column="9">msodmiotmLocation</name></decl><op:operator pos:line="130" pos:column="26">,</op:operator>		<comment type="line" pos:line="130" pos:column="41">// Location drop list.</comment>
	<decl><name pos:line="131" pos:column="9">msodmiotmFileList</name></decl><op:operator pos:line="131" pos:column="26">,</op:operator>		<comment type="line" pos:line="131" pos:column="41">// File display listbox.</comment>
	<decl><name pos:line="132" pos:column="9">msodmiotmFileName</name></decl><op:operator pos:line="132" pos:column="26">,</op:operator>		<comment type="line" pos:line="132" pos:column="41">// File name edit control.</comment>
	<decl><name pos:line="133" pos:column="9">msodmiotmFileType</name></decl><op:operator pos:line="133" pos:column="26">,</op:operator>	 	<comment type="line" pos:line="133" pos:column="41">// File type drop list.</comment>
	<decl><name pos:line="134" pos:column="9">msodmiotmLastModified</name></decl><op:operator pos:line="134" pos:column="30">,</op:operator>	<comment type="line" pos:line="134" pos:column="33">// Last Modified drop down.</comment>
	<decl><name pos:line="135" pos:column="9">msodmiotmAnyText</name></decl><op:operator pos:line="135" pos:column="25">,</op:operator>		<comment type="line" pos:line="135" pos:column="41">// Any Text edit.</comment>
	<decl><name pos:line="136" pos:column="9">msodmiotmFindNow</name></decl><op:operator pos:line="136" pos:column="25">,</op:operator>		<comment type="line" pos:line="136" pos:column="41">// Find now button.</comment>
	<decl><name pos:line="137" pos:column="9">msodmiotmClear</name></decl><op:operator pos:line="137" pos:column="23">,</op:operator>			<comment type="line" pos:line="137" pos:column="41">// Clear button.</comment>
	<decl><name pos:line="138" pos:column="9">msodmiotmOpenButton</name></decl><op:operator pos:line="138" pos:column="28">,</op:operator>	<comment type="line" pos:line="138" pos:column="33">// Open button.</comment>
	<decl><name pos:line="139" pos:column="9">msodmiotmCancelButton</name></decl><op:operator pos:line="139" pos:column="30">,</op:operator>	<comment type="line" pos:line="139" pos:column="33">// Cancel button.</comment>
	<decl><name pos:line="140" pos:column="9">msodmiotmMax</name></decl>			<comment type="line" pos:line="140" pos:column="41">// MUST BE LAST, should be zero if FF_iotmMin right.</comment>
	}</block>;</enum>

<comment type="line" pos:line="143" pos:column="1">// Buffer lengths.</comment>

<enum pos:line="145" pos:column="1">enum
	<block pos:line="146" pos:column="9">{
	<decl><name pos:line="147" pos:column="9">msodmcchMaxDlgTitle</name>	<init pos:line="147" pos:column="33">= <expr><lit:literal type="number" pos:line="147" pos:column="35">128</lit:literal></expr></init></decl><op:operator pos:line="147" pos:column="38">,</op:operator>	<comment type="line" pos:line="147" pos:column="41">// Dialog title (in title bar).</comment>
	<decl><name pos:line="148" pos:column="9">msodmcchMaxItemTitle</name>	<init pos:line="148" pos:column="33">= <expr><lit:literal type="number" pos:line="148" pos:column="35">52</lit:literal></expr></init></decl><op:operator pos:line="148" pos:column="37">,</op:operator>	<comment type="line" pos:line="148" pos:column="41">// Item title, e.g. "Open" for the open button.</comment>
	<decl><name pos:line="149" pos:column="9">msodmcchMaxSearchName</name><init pos:line="149" pos:column="30">= <expr><lit:literal type="number" pos:line="149" pos:column="32">64</lit:literal></expr></init></decl><op:operator pos:line="149" pos:column="34">,</op:operator>	<comment type="line" pos:line="149" pos:column="41">// Saved search name.</comment>
	<decl><name pos:line="150" pos:column="9">msodmcchMaxType</name>		<init pos:line="150" pos:column="33">= <expr><lit:literal type="number" pos:line="150" pos:column="35">512</lit:literal></expr></init></decl><op:operator pos:line="150" pos:column="38">,</op:operator>	<comment type="line" pos:line="150" pos:column="41">// File type.  Includes description and space</comment>
								<comment type="line" pos:line="151" pos:column="65">// for types (eg. *.doc).</comment>
	<decl><name pos:line="152" pos:column="9">msodmcchMaxEdit</name>		<init pos:line="152" pos:column="33">= <expr><lit:literal type="number" pos:line="152" pos:column="35">256</lit:literal></expr></init></decl><op:operator pos:line="152" pos:column="38">,</op:operator>	<comment type="line" pos:line="152" pos:column="41">// Maximum length of an edit control value.</comment>
	<decl><name pos:line="153" pos:column="9">msodmcchMaxCommand</name>	<init pos:line="153" pos:column="33">= <expr><lit:literal type="number" pos:line="153" pos:column="35">52</lit:literal></expr></init></decl><op:operator pos:line="153" pos:column="37">,</op:operator> 	<comment type="line" pos:line="153" pos:column="41">// Maximum length of a command.</comment>
	<decl><name pos:line="154" pos:column="9">msodmcchMaxCodePage</name>	<init pos:line="154" pos:column="33">= <expr><lit:literal type="number" pos:line="154" pos:column="35">64</lit:literal></expr></init></decl>		<comment type="line" pos:line="154" pos:column="49">// Maximum length of a code page.</comment>
	}</block>;</enum>

<comment type="line" pos:line="157" pos:column="1">// Custom item types.</comment>

<typedef pos:line="159" pos:column="1">typedef <type><name pos:line="159" pos:column="9">int</name></type> <name pos:line="159" pos:column="13">MSOOTP</name>;</typedef>

<enum pos:line="161" pos:column="1">enum
	<block pos:line="162" pos:column="9">{
	<decl><name pos:line="163" pos:column="9">msodmotpNil</name> <init pos:line="163" pos:column="21">= <expr><lit:literal type="number" pos:line="163" pos:column="23">0</lit:literal></expr></init></decl><op:operator pos:line="163" pos:column="24">,</op:operator>
	<decl><name pos:line="164" pos:column="9">msodmotpEdit</name></decl><op:operator pos:line="164" pos:column="21">,</op:operator>					<comment type="line" pos:line="164" pos:column="57">// Edit control.</comment>
	<decl><name pos:line="165" pos:column="9">msodmotpCommand</name></decl><op:operator pos:line="165" pos:column="24">,</op:operator>				<comment type="line" pos:line="165" pos:column="57">// Command (push) button.</comment>
	<decl><name pos:line="166" pos:column="9">msodmotpDescrText</name></decl><op:operator pos:line="166" pos:column="26">,</op:operator>				<comment type="line" pos:line="166" pos:column="57">// Descriptive text.</comment>
	<decl><name pos:line="167" pos:column="9">msodmotpCheckbox</name></decl><op:operator pos:line="167" pos:column="25">,</op:operator>				<comment type="line" pos:line="167" pos:column="57">// Check box.</comment>
	<decl><name pos:line="168" pos:column="9">msodmotpRadioButton</name></decl><op:operator pos:line="168" pos:column="28">,</op:operator>			<comment type="line" pos:line="168" pos:column="49">// Radio button in single radio group.</comment>
	<decl><name pos:line="169" pos:column="9">msodmotpGroupBox</name></decl><op:operator pos:line="169" pos:column="25">,</op:operator>				<comment type="line" pos:line="169" pos:column="57">// Group box.</comment>
	<decl><name pos:line="170" pos:column="9">msodmotpToolsMenuItem</name></decl><op:operator pos:line="170" pos:column="30">,</op:operator>			<comment type="line" pos:line="170" pos:column="49">// Tools menu item</comment>
	<decl><name pos:line="171" pos:column="9">msodmotpToolsMenuDismissItem</name></decl><op:operator pos:line="171" pos:column="37">,</op:operator>	<comment type="line" pos:line="171" pos:column="41">// Tools menu item that dismisses the dialog.</comment>
	<decl><name pos:line="172" pos:column="9">msodmotpToolsMenuCheckbox</name></decl><op:operator pos:line="172" pos:column="34">,</op:operator> 		<comment type="line" pos:line="172" pos:column="49">// Tools menu radio button</comment>
	<decl><name pos:line="173" pos:column="9">msodmotpOpenBtnDropDnItem</name></decl><op:operator pos:line="173" pos:column="34">,</op:operator> 		<comment type="line" pos:line="173" pos:column="49">// Open button dropdown Item:</comment>
	<decl><name pos:line="174" pos:column="9">msodmotpOpenBtnDropDnCheckbox</name></decl><op:operator pos:line="174" pos:column="38">,</op:operator> 	<comment type="line" pos:line="174" pos:column="41">// Open button dropdown radio button</comment>
	<decl><name pos:line="175" pos:column="9">msodmotpStdButton</name></decl><op:operator pos:line="175" pos:column="26">,</op:operator>				<comment type="line" pos:line="175" pos:column="57">// Standard push button.</comment>
	<decl><name pos:line="176" pos:column="9">msodmotpPushButton</name></decl><op:operator pos:line="176" pos:column="27">,</op:operator>				<comment type="line" pos:line="176" pos:column="57">// Normal push button.</comment>
	<decl><name pos:line="177" pos:column="9">msodmotpListBox</name></decl><op:operator pos:line="177" pos:column="24">,</op:operator>				<comment type="line" pos:line="177" pos:column="57">// List box.</comment>
	<decl><name pos:line="178" pos:column="9">msodmotpDropList</name></decl><op:operator pos:line="178" pos:column="25">,</op:operator>				<comment type="line" pos:line="178" pos:column="57">// Drop down.</comment>
	<decl><name pos:line="179" pos:column="9">msodmotpComboBox</name></decl><op:operator pos:line="179" pos:column="25">,</op:operator>				<comment type="line" pos:line="179" pos:column="57">// Combo box.</comment>
	<decl><name pos:line="180" pos:column="9">msodmotpConvertButton</name></decl><op:operator pos:line="180" pos:column="30">,</op:operator>			<comment type="line" pos:line="180" pos:column="49">// Convert button.</comment>
	<decl><name pos:line="181" pos:column="9">msodmotpMax</name></decl>
	}</block>;</enum>


<comment type="line" pos:line="185" pos:column="1">// Event operation codes.</comment>

<typedef pos:line="187" pos:column="1">typedef <type><name pos:line="187" pos:column="9">int</name></type> <name pos:line="187" pos:column="13">MSOIOOP</name>;</typedef>

<enum pos:line="189" pos:column="1">enum
	<block pos:line="190" pos:column="9">{
	<decl><name pos:line="191" pos:column="9">msodmioopChange</name> <init pos:line="191" pos:column="25">= <expr><lit:literal type="number" pos:line="191" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="191" pos:column="28">,</op:operator>		<comment type="line" pos:line="191" pos:column="41">// A standard or custom control was modified.</comment>
	<decl><name pos:line="192" pos:column="9">msodmioopCommand</name></decl><op:operator pos:line="192" pos:column="25">,</op:operator>			<comment type="line" pos:line="192" pos:column="49">// An application defined command was selected.</comment>
	<decl><name pos:line="193" pos:column="9">msodmioopDismiss</name></decl><op:operator pos:line="193" pos:column="25">,</op:operator>			<comment type="line" pos:line="193" pos:column="49">// The dialog is about to be dismissed.</comment>
	<decl><name pos:line="194" pos:column="9">msodmioopQueryFinished</name></decl><op:operator pos:line="194" pos:column="31">,</op:operator>		<comment type="line" pos:line="194" pos:column="41">// A query has just finished executing.</comment>
	<decl><name pos:line="195" pos:column="9">msodmioopDefSaveHelp</name></decl><op:operator pos:line="195" pos:column="29">,</op:operator>		<comment type="line" pos:line="195" pos:column="41">// Help requested from default save alert.</comment>
	<decl><name pos:line="196" pos:column="9">msodmioopDefSavePrompt</name></decl><op:operator pos:line="196" pos:column="31">,</op:operator>		<comment type="line" pos:line="196" pos:column="41">// We are prompting user to save in admin format.</comment>
	<decl><name pos:line="197" pos:column="9">msodmioopMax</name></decl>				<comment type="line" pos:line="197" pos:column="49">// MUST BE LAST</comment>
	}</block>;</enum>

<comment type="line" pos:line="200" pos:column="1">// File system change event operation codes.</comment>
<comment type="line" pos:line="201" pos:column="1">//</comment>
<comment type="line" pos:line="202" pos:column="1">// For each system change event (Rename, Delete, or MakeDir), a "Pre" event</comment>
<comment type="line" pos:line="203" pos:column="1">// (eg. msodmfnPreRename) is sent.  If the app returns MSODMFSCHANGE_YOU_DO_IT,</comment>
<comment type="line" pos:line="204" pos:column="1">// then office does the action (eg. Rename), and sends a Failed or Succeeded event</comment>
<comment type="line" pos:line="205" pos:column="1">// (eg. msodmfnRenameFailed or msodmfnRenameSucceeded).  This gives the</comment>
<comment type="line" pos:line="206" pos:column="1">// app the opportunity to completely override the rename, delete, and makedir</comment>
<comment type="line" pos:line="207" pos:column="1">// verbs, or to allow Office to do the rename, delete, and MakeDir, and have</comment>
<comment type="line" pos:line="208" pos:column="1">// the app notified of the success or failure.</comment>

<typedef pos:line="210" pos:column="1">typedef <type><name pos:line="210" pos:column="9">int</name></type> <name pos:line="210" pos:column="13">MSODMFSCHANGE</name>;</typedef>

<enum pos:line="212" pos:column="1">enum
	<block pos:line="213" pos:column="9">{
	<decl><name pos:line="214" pos:column="9">msodmfnPreRename</name> <init pos:line="214" pos:column="26">= <expr><lit:literal type="number" pos:line="214" pos:column="28">0</lit:literal></expr></init></decl><op:operator pos:line="214" pos:column="29">,</op:operator>		<comment type="line" pos:line="214" pos:column="41">// A file needs to be renamed from wzOld to wzNew</comment>
	<decl><name pos:line="215" pos:column="9">msodmfnRenameFailed</name></decl><op:operator pos:line="215" pos:column="28">,</op:operator>		<comment type="line" pos:line="215" pos:column="41">// Office tried to rename from wzOld to wzNew and failed</comment>
	<decl><name pos:line="216" pos:column="9">msodmfnRenameSucceeded</name></decl><op:operator pos:line="216" pos:column="31">,</op:operator>		<comment type="line" pos:line="216" pos:column="41">// Office renamed from wzOld to wzNew successfully</comment>
	<decl><name pos:line="217" pos:column="9">msodmfnPreDelete</name></decl><op:operator pos:line="217" pos:column="25">,</op:operator>				<comment type="line" pos:line="217" pos:column="57">// A file in wzOld needs to be deleted</comment>
	<decl><name pos:line="218" pos:column="9">msodmfnDeleteFailed</name></decl><op:operator pos:line="218" pos:column="28">,</op:operator>		<comment type="line" pos:line="218" pos:column="41">// Office tried to delete wzOld but failed</comment>
	<decl><name pos:line="219" pos:column="9">msodmfnDeleteSucceeded</name></decl><op:operator pos:line="219" pos:column="31">,</op:operator>		<comment type="line" pos:line="219" pos:column="41">// Office deleted wzOld</comment>
	<decl><name pos:line="220" pos:column="9">msodmfnPreMakeDir</name></decl><op:operator pos:line="220" pos:column="26">,</op:operator>				<comment type="line" pos:line="220" pos:column="57">// A subdirectory named wzNew needs to be created</comment>
	<decl><name pos:line="221" pos:column="9">msodmfnMakeDirFailed</name></decl><op:operator pos:line="221" pos:column="29">,</op:operator>		<comment type="line" pos:line="221" pos:column="41">// Office tried to create subdirectory wzNew and failed</comment>
	<decl><name pos:line="222" pos:column="9">msodmfnMakeDirSucceeded</name></decl><op:operator pos:line="222" pos:column="32">,</op:operator>	<comment type="line" pos:line="222" pos:column="41">// Office created subdirectory wzNew</comment>
	<decl><name pos:line="223" pos:column="9">msodmfnMax</name></decl>					<comment type="line" pos:line="223" pos:column="57">// MUST BE LAST</comment>
	}</block>;</enum>

<comment type="line" pos:line="226" pos:column="1">//	MSODMFSCHANGE_YOU_DO_IT		Office should handle it.</comment>
<comment type="line" pos:line="227" pos:column="1">//	MSODMFSCHANGE_I_DID_IT		App handled it.</comment>
<cpp:define pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="228" pos:column="9">MSODMFSCHANGE_YOU_DO_IT</name></cpp:macro>			<cpp:value pos:line="228" pos:column="49">FALSE</cpp:value></cpp:define>
<cpp:define pos:line="229" pos:column="1">#<cpp:directive pos:line="229" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="229" pos:column="9">MSODMFSCHANGE_I_DID_IT</name></cpp:macro>			<cpp:value pos:line="229" pos:column="49">TRUE</cpp:value></cpp:define>
<comment type="line" pos:line="230" pos:column="1">// Confirm replacement dialog options for save dialog</comment>


<comment type="line" pos:line="233" pos:column="1">// Web-document Server Info codes</comment>
<comment type="line" pos:line="234" pos:column="1">// </comment>
<comment type="line" pos:line="235" pos:column="1">// The structures below were added to tell us what type of server </comment>
<comment type="line" pos:line="236" pos:column="1">// the URL in the OLdoc points to, and in what protocol the server</comment>
<comment type="line" pos:line="237" pos:column="1">// is speaking (dav or wec).  These structures are used with</comment>
<comment type="line" pos:line="238" pos:column="1">// IMsoOLDoc::GetServerInfo.</comment>

<typedef pos:line="240" pos:column="1">typedef <type><name pos:line="240" pos:column="9">int</name></type> <name pos:line="240" pos:column="13">MSODMSERVERTYPE</name>;</typedef>

<enum pos:line="242" pos:column="1">enum
	<block pos:line="243" pos:column="9">{
	<decl><name pos:line="244" pos:column="9">msodmsvrtypeUnknown</name> <init pos:line="244" pos:column="29">= <expr><lit:literal type="number" pos:line="244" pos:column="31">0</lit:literal></expr></init></decl><op:operator pos:line="244" pos:column="32">,</op:operator>  <comment type="line" pos:line="244" pos:column="35">// The specific servertype is unknown, however we may still know dav/wec</comment>
	<decl><name pos:line="245" pos:column="9">msodmsvrtypeOWS</name></decl><op:operator pos:line="245" pos:column="24">,</op:operator>				<comment type="line" pos:line="245" pos:column="57">// OWS</comment>
	<decl><name pos:line="246" pos:column="9">msodmsvrtypePlatinum</name></decl><op:operator pos:line="246" pos:column="29">,</op:operator>	<comment type="line" pos:line="246" pos:column="33">// Exchange Platinum</comment>
	<decl><name pos:line="247" pos:column="9">msodmsvrtypeTahoe</name></decl><op:operator pos:line="247" pos:column="26">,</op:operator>	<comment type="line" pos:line="247" pos:column="33">// Tahoe</comment>
	<decl><name pos:line="248" pos:column="9">msodmsvrtypeTahoeEnhancedFolder</name></decl><op:operator pos:line="248" pos:column="40">,</op:operator> <comment type="line" pos:line="248" pos:column="42">// Tahoe Enhanced Folder</comment>
	<decl><name pos:line="249" pos:column="9">msodmsvrtypeMax</name></decl>  <comment type="line" pos:line="249" pos:column="26">// MUST BE LAST</comment>
	}</block>;</enum>

<typedef pos:line="252" pos:column="1">typedef <type><name pos:line="252" pos:column="9">int</name></type> <name pos:line="252" pos:column="13">MSODMSERVERPROTOCOL</name>;</typedef>

<enum pos:line="254" pos:column="1">enum
	<block pos:line="255" pos:column="9">{
	<decl><name pos:line="256" pos:column="9">msodmsvrprotUnknown</name> <init pos:line="256" pos:column="29">= <expr><lit:literal type="number" pos:line="256" pos:column="31">0</lit:literal></expr></init></decl><op:operator pos:line="256" pos:column="32">,</op:operator> <comment type="line" pos:line="256" pos:column="34">// Server protocol is unknown</comment>
	<decl><name pos:line="257" pos:column="9">msodmsvrprotWEC</name></decl><op:operator pos:line="257" pos:column="24">,</op:operator>	<comment type="line" pos:line="257" pos:column="33">// Server protocol is WEC</comment>
	<decl><name pos:line="258" pos:column="9">msodmsvrprotDAV</name></decl><op:operator pos:line="258" pos:column="24">,</op:operator>  <comment type="line" pos:line="258" pos:column="27">// Server protocl is DAV</comment>
	<decl><name pos:line="259" pos:column="9">msodmsvrprotMax</name></decl>  <comment type="line" pos:line="259" pos:column="26">// MUST BE LAST</comment>
	}</block>;</enum>

<typedef pos:line="262" pos:column="1">typedef <type><struct pos:line="262" pos:column="9">struct <name pos:line="262" pos:column="16">tagMSODMGSI</name>
<block pos:line="263" pos:column="1">{<public type="default" pos:line="263" pos:column="2">
	<decl_stmt><decl><type><name pos:line="264" pos:column="9">MSODMSERVERTYPE</name></type> <name pos:line="264" pos:column="25">type</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="265" pos:column="9">MSODMSERVERPROTOCOL</name></type> <name pos:line="265" pos:column="29">protocol</name></decl>;</decl_stmt>
</public>}</block></struct></type> <name pos:line="266" pos:column="3">MSODMGSI</name>;</typedef>


<comment type="line" pos:line="269" pos:column="1">// GetServerInfo flags</comment>

<typedef pos:line="271" pos:column="1">typedef <type><name pos:line="271" pos:column="9">UINT</name></type> <name pos:line="271" pos:column="14">MSOGSIOPT</name>;</typedef>

<enum pos:line="273" pos:column="1">enum
	<block pos:line="274" pos:column="9">{
	<decl><name pos:line="275" pos:column="9">msodmgsiFailIfNotCached</name> <init pos:line="275" pos:column="33">= <expr><lit:literal type="number" pos:line="275" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="275" pos:column="36">,</op:operator>  <comment type="line" pos:line="275" pos:column="39">// Ensures we will not roundtrip to server, instead we will return a fail code</comment>
	<decl><name pos:line="276" pos:column="9">msodmgsiMax</name> <init pos:line="276" pos:column="21">= <expr><lit:literal type="number" pos:line="276" pos:column="23">2</lit:literal></expr></init></decl> <comment type="line" pos:line="276" pos:column="25">// MUST BE LAST</comment>
	}</block>;</enum>


<typedef pos:line="280" pos:column="1">typedef <type><name pos:line="280" pos:column="9">int</name></type> <name pos:line="280" pos:column="13">MSODMCR</name>;</typedef>

<enum pos:line="282" pos:column="1">enum
	<block pos:line="283" pos:column="9">{
	<decl><name pos:line="284" pos:column="9">msodmcrAlways</name> <init pos:line="284" pos:column="23">= <expr><lit:literal type="number" pos:line="284" pos:column="25">0</lit:literal></expr></init></decl><op:operator pos:line="284" pos:column="26">,</op:operator>			<comment type="line" pos:line="284" pos:column="49">// Always display confirm replace dialog on save</comment>
								<comment type="line" pos:line="285" pos:column="65">// equivalent of SetFConfirmReplace(TRUE)</comment>
	<decl><name pos:line="286" pos:column="9">msodmcrNever</name></decl><op:operator pos:line="286" pos:column="21">,</op:operator>				<comment type="line" pos:line="286" pos:column="49">// Never display confirm replace dialog.</comment>
								<comment type="line" pos:line="287" pos:column="65">// equivalent of SetFConfirmReplace(FALSE)</comment>
	<decl><name pos:line="288" pos:column="9">msodmcrOnlyForURL</name></decl><op:operator pos:line="288" pos:column="26">,</op:operator>			<comment type="line" pos:line="288" pos:column="49">// Confirm replacement only of URLs</comment>
	<decl><name pos:line="289" pos:column="9">msodmcrMax</name></decl>					<comment type="line" pos:line="289" pos:column="57">// MUST BE LAST</comment>
	}</block>;</enum>

<comment type="line" pos:line="292" pos:column="1">// Miscellaneous constants</comment>

<enum pos:line="294" pos:column="1">enum <block pos:line="294" pos:column="6">{ <decl><name pos:line="294" pos:column="8">msodmccstitmMax</name> <init pos:line="294" pos:column="24">= <expr><lit:literal type="number" pos:line="294" pos:column="26">10</lit:literal></expr></init></decl> }</block>;</enum>	<comment type="line" pos:line="294" pos:column="33">// Maximum number of custom items allowed.</comment>

<enum pos:line="296" pos:column="1">enum <block pos:line="296" pos:column="6">{ <decl><name pos:line="296" pos:column="8">msodmiszNil</name> <init pos:line="296" pos:column="20">= <expr><op:operator pos:line="296" pos:column="22">-</op:operator><lit:literal type="number" pos:line="296" pos:column="23">1</lit:literal></expr></init></decl> }</block>;</enum>		<comment type="line" pos:line="296" pos:column="41">// No selected file type.</comment>

<comment type="line" pos:line="298" pos:column="1">// Command values returned to the application.</comment>
<enum pos:line="299" pos:column="1">enum
	<block pos:line="300" pos:column="9">{
	<decl><name pos:line="301" pos:column="9">msodmicmdNone</name>	   <init pos:line="301" pos:column="28">= <expr><lit:literal type="number" pos:line="301" pos:column="30">0</lit:literal></expr></init></decl><op:operator pos:line="301" pos:column="31">,</op:operator>
	<decl><name pos:line="302" pos:column="9">msodmicmdCancel</name>    <init pos:line="302" pos:column="28">= <expr><lit:literal type="number" pos:line="302" pos:column="30">1</lit:literal></expr></init></decl><op:operator pos:line="302" pos:column="31">,</op:operator>           <comment type="line" pos:line="302" pos:column="43">// Cancel or close pressed (also esc. key)</comment>
	<decl><name pos:line="303" pos:column="9">msodmicmdOpen</name></decl><op:operator pos:line="303" pos:column="22">,</op:operator>					<comment type="line" pos:line="303" pos:column="57">// Normal open</comment>
	<decl><name pos:line="304" pos:column="9">msodmicmdOpenInNativeApp</name></decl><op:operator pos:line="304" pos:column="33">,</op:operator>		<comment type="line" pos:line="304" pos:column="49">// Open drop down - "open in current app"</comment>
	<decl><name pos:line="305" pos:column="9">msodmicmdShiftOpen</name></decl><op:operator pos:line="305" pos:column="27">,</op:operator>				<comment type="line" pos:line="305" pos:column="57">// Open with the shift key pressed</comment>
	<decl><name pos:line="306" pos:column="9">msodmicmdOpenRO</name></decl><op:operator pos:line="306" pos:column="24">,</op:operator>					<comment type="line" pos:line="306" pos:column="65">// Open read only from the command button</comment>
	<decl><name pos:line="307" pos:column="9">msodmicmdOpenAsCopy</name></decl><op:operator pos:line="307" pos:column="28">,</op:operator>					<comment type="line" pos:line="307" pos:column="65">// Open As Copy from the command button</comment>
	<decl><name pos:line="308" pos:column="9">msodmicmdPrint</name></decl><op:operator pos:line="308" pos:column="23">,</op:operator>					<comment type="line" pos:line="308" pos:column="57">// Print from the command button</comment>
	<decl><name pos:line="309" pos:column="9">msodmicmdMax</name></decl><op:operator pos:line="309" pos:column="21">,</op:operator>
	<decl><name pos:line="310" pos:column="9">msodmicmdCmdMask</name> 	 <init pos:line="310" pos:column="34">= <expr><lit:literal type="number" pos:line="310" pos:column="36">0xff</lit:literal></expr></init></decl><op:operator pos:line="310" pos:column="40">,</op:operator>	<comment type="line" pos:line="310" pos:column="49">// Masks actual command bits.</comment>
	<comment type="line" pos:line="311" pos:column="9">// The following value may be ORed with other msodmicmd values returned to</comment>
	<comment type="line" pos:line="312" pos:column="9">// the application.</comment>
	<decl><name pos:line="313" pos:column="9">msodmicmdExecQuery</name> <init pos:line="313" pos:column="28">= <expr><lit:literal type="number" pos:line="313" pos:column="30">0x100</lit:literal></expr></init></decl><op:operator pos:line="313" pos:column="35">,</op:operator>		<comment type="line" pos:line="313" pos:column="49">// Indicates that query should be executed.</comment>
	<decl><name pos:line="314" pos:column="9">msodmicmdEndDlgOk</name> <init pos:line="314" pos:column="27">= <expr><lit:literal type="number" pos:line="314" pos:column="29">0x200</lit:literal></expr></init></decl><op:operator pos:line="314" pos:column="34">,</op:operator>
	<decl><name pos:line="315" pos:column="9">msodmicmdEndDlgCancel</name> <init pos:line="315" pos:column="31">= <expr><lit:literal type="number" pos:line="315" pos:column="33">0x400</lit:literal></expr></init></decl><op:operator pos:line="315" pos:column="38">,</op:operator>

	<comment type="line" pos:line="317" pos:column="9">// The application may also use the 13-16 least significant bits to</comment>
	<comment type="line" pos:line="318" pos:column="9">// store application defined information.</comment>
	<decl><name pos:line="319" pos:column="9">msodmicmdUserMin</name>   <init pos:line="319" pos:column="28">= <expr><lit:literal type="number" pos:line="319" pos:column="30">0x1000</lit:literal></expr></init></decl><op:operator pos:line="319" pos:column="36">,</op:operator>		<comment type="line" pos:line="319" pos:column="49">// User bits.</comment>
	<decl><name pos:line="320" pos:column="9">msodmicmdUserMask</name>  <init pos:line="320" pos:column="28">= <expr><lit:literal type="number" pos:line="320" pos:column="30">0x7000</lit:literal></expr></init></decl>
	}</block>;</enum>

<comment type="line" pos:line="323" pos:column="1">// Indices of entries in the commands dropdown in the Open dialog.  These</comment>
<comment type="line" pos:line="324" pos:column="1">// indices are used to enable or disable commands.</comment>
<typedef pos:line="325" pos:column="1">typedef <type><name pos:line="325" pos:column="9">int</name></type> <name pos:line="325" pos:column="13">MSODMICLE</name>;</typedef>

<enum pos:line="327" pos:column="1">enum
	<block pos:line="328" pos:column="9">{
	<decl><name pos:line="329" pos:column="9">msodmicleOpenDefault</name> <init pos:line="329" pos:column="30">= <expr><lit:literal type="number" pos:line="329" pos:column="32">0</lit:literal></expr></init></decl><op:operator pos:line="329" pos:column="33">,</op:operator>	<comment type="line" pos:line="329" pos:column="41">// Perform default button action (Open/Save)</comment>
	<decl><name pos:line="330" pos:column="9">msodmicleOpenRO</name></decl><op:operator pos:line="330" pos:column="24">,</op:operator>				<comment type="line" pos:line="330" pos:column="57">// Open read only from the command button</comment>
	<decl><name pos:line="331" pos:column="9">msodmicleOpenAsCopy</name></decl><op:operator pos:line="331" pos:column="28">,</op:operator>			<comment type="line" pos:line="331" pos:column="49">// Open As Copy from the command button</comment>
	<decl><name pos:line="332" pos:column="9">msodmicleSorting</name></decl><op:operator pos:line="332" pos:column="25">,</op:operator>				<comment type="line" pos:line="332" pos:column="57">// Sorting command list entry</comment>
	<decl><name pos:line="333" pos:column="9">msodmicleIncludeSubfolders</name></decl><op:operator pos:line="333" pos:column="35">,</op:operator>		<comment type="line" pos:line="333" pos:column="49">// Include Subfolders command list entry</comment>
	<decl><name pos:line="334" pos:column="9">msodmicleShowGroups</name></decl><op:operator pos:line="334" pos:column="28">,</op:operator>			<comment type="line" pos:line="334" pos:column="49">// Show Groups command list entry</comment>
	<decl><name pos:line="335" pos:column="9">msodmicleFtpSites</name></decl><op:operator pos:line="335" pos:column="26">,</op:operator>			<comment type="line" pos:line="335" pos:column="49">// Open the FTP sites control dlg</comment>
	<decl><name pos:line="336" pos:column="9">msodmicleToggleFuzzy</name></decl><op:operator pos:line="336" pos:column="29">,</op:operator>		<comment type="line" pos:line="336" pos:column="41">// Toggle fuzzy find on/off (FOR DBCS)</comment>
	<decl><name pos:line="337" pos:column="9">msodmicleOpenInBrowser</name></decl><op:operator pos:line="337" pos:column="31">,</op:operator>		<comment type="line" pos:line="337" pos:column="41">// Launch in default browser</comment>
	<decl><name pos:line="338" pos:column="9">msodmicleOpenInNativeApp</name></decl><op:operator pos:line="338" pos:column="33">,</op:operator>	<comment type="line" pos:line="338" pos:column="41">// Open the file in native app of dialog</comment>
	<decl><name pos:line="339" pos:column="9">msodmicleFind</name></decl><op:operator pos:line="339" pos:column="22">,</op:operator>				<comment type="line" pos:line="339" pos:column="49">// Bring up the Find dialog</comment>
	<decl><name pos:line="340" pos:column="9">msodmicleDelete</name></decl><op:operator pos:line="340" pos:column="24">,</op:operator>			<comment type="line" pos:line="340" pos:column="49">// Delete file</comment>
	<decl><name pos:line="341" pos:column="9">msodmicleRename</name></decl><op:operator pos:line="341" pos:column="24">,</op:operator>				<comment type="line" pos:line="341" pos:column="57">// Rename file in place</comment>
	<decl><name pos:line="342" pos:column="9">msodmiclePrint</name></decl><op:operator pos:line="342" pos:column="23">,</op:operator>					<comment type="line" pos:line="342" pos:column="57">// Print from the command button</comment>
	<decl><name pos:line="343" pos:column="9">msodmicleAddToFavs</name></decl><op:operator pos:line="343" pos:column="27">,</op:operator>				<comment type="line" pos:line="343" pos:column="57">// Add to Favorites</comment>
	<decl><name pos:line="344" pos:column="9">msodmicleAddToPlaces</name></decl><op:operator pos:line="344" pos:column="29">,</op:operator>			<comment type="line" pos:line="344" pos:column="49">// Add to My Places</comment>
	<decl><name pos:line="345" pos:column="9">msodmicleMapNetworkDrive</name></decl><op:operator pos:line="345" pos:column="33">,</op:operator>		<comment type="line" pos:line="345" pos:column="49">// Map Network Drive command list entry</comment>
	<decl><name pos:line="346" pos:column="9">msodmicleProperties</name></decl><op:operator pos:line="346" pos:column="28">,</op:operator>			<comment type="line" pos:line="346" pos:column="49">// Properties command list entry</comment>

	<comment type="line" pos:line="348" pos:column="9">// App specified items for the Tools menu</comment>
	<decl><name pos:line="349" pos:column="9">msodmicleAppToolsFirst</name></decl><op:operator pos:line="349" pos:column="31">,</op:operator>
	<decl><name pos:line="350" pos:column="9">msodmicleAppTools1</name> <init pos:line="350" pos:column="28">= <expr><name pos:line="350" pos:column="30">msodmicleAppToolsFirst</name></expr></init></decl><op:operator pos:line="350" pos:column="52">,</op:operator>
	<decl><name pos:line="351" pos:column="9">msodmicleAppTools2</name></decl><op:operator pos:line="351" pos:column="27">,</op:operator>
	<decl><name pos:line="352" pos:column="9">msodmicleAppTools3</name></decl><op:operator pos:line="352" pos:column="27">,</op:operator>
	<decl><name pos:line="353" pos:column="9">msodmicleAppTools4</name></decl><op:operator pos:line="353" pos:column="27">,</op:operator>
	<decl><name pos:line="354" pos:column="9">msodmicleAppTools5</name></decl><op:operator pos:line="354" pos:column="27">,</op:operator>
	<decl><name pos:line="355" pos:column="9">msodmicleAppTools6</name></decl><op:operator pos:line="355" pos:column="27">,</op:operator>
	<decl><name pos:line="356" pos:column="9">msodmicleAppTools7</name></decl><op:operator pos:line="356" pos:column="27">,</op:operator>
	<decl><name pos:line="357" pos:column="9">msodmicleAppTools8</name></decl><op:operator pos:line="357" pos:column="27">,</op:operator>
	<decl><name pos:line="358" pos:column="9">msodmicleAppTools9</name></decl><op:operator pos:line="358" pos:column="27">,</op:operator>
	<decl><name pos:line="359" pos:column="9">msodmicleAppToolsLast</name> <init pos:line="359" pos:column="31">= <expr><name pos:line="359" pos:column="33">msodmicleAppTools9</name></expr></init></decl><op:operator pos:line="359" pos:column="51">,</op:operator>

	<comment type="line" pos:line="361" pos:column="9">// App specified items for the Open Button Dropdown menu</comment>
	<decl><name pos:line="362" pos:column="9">msodmicleAppOpenDropdnFirst</name></decl><op:operator pos:line="362" pos:column="36">,</op:operator>
	<decl><name pos:line="363" pos:column="9">msodmicleAppOpenDropdn1</name> <init pos:line="363" pos:column="33">= <expr><name pos:line="363" pos:column="35">msodmicleAppOpenDropdnFirst</name></expr></init></decl><op:operator pos:line="363" pos:column="62">,</op:operator>
	<decl><name pos:line="364" pos:column="9">msodmicleAppOpenDropdn2</name></decl><op:operator pos:line="364" pos:column="32">,</op:operator>
	<decl><name pos:line="365" pos:column="9">msodmicleAppOpenDropdn3</name></decl><op:operator pos:line="365" pos:column="32">,</op:operator>
	<decl><name pos:line="366" pos:column="9">msodmicleAppOpenDropdn4</name></decl><op:operator pos:line="366" pos:column="32">,</op:operator>
	<decl><name pos:line="367" pos:column="9">msodmicleAppOpenDropdn5</name></decl><op:operator pos:line="367" pos:column="32">,</op:operator>
	<decl><name pos:line="368" pos:column="9">msodmicleAppOpenDropdn6</name></decl><op:operator pos:line="368" pos:column="32">,</op:operator>
	<decl><name pos:line="369" pos:column="9">msodmicleAppOpenDropdn7</name></decl><op:operator pos:line="369" pos:column="32">,</op:operator>
	<decl><name pos:line="370" pos:column="9">msodmicleAppOpenDropdn8</name></decl><op:operator pos:line="370" pos:column="32">,</op:operator>
	<decl><name pos:line="371" pos:column="9">msodmicleAppOpenDropdn9</name></decl><op:operator pos:line="371" pos:column="32">,</op:operator>
	<decl><name pos:line="372" pos:column="9">msodmicleAppOpenDropdnLast</name> <init pos:line="372" pos:column="36">= <expr><name pos:line="372" pos:column="38">msodmicleAppOpenDropdn9</name></expr></init></decl><op:operator pos:line="372" pos:column="61">,</op:operator>

	<decl><name pos:line="374" pos:column="9">msodmicleClearHistory</name></decl><op:operator pos:line="374" pos:column="30">,</op:operator>			<comment type="line" pos:line="374" pos:column="49">// Clear the shortcuts in History Folder</comment>
	<decl><name pos:line="375" pos:column="9">msodmicleManage</name></decl><op:operator pos:line="375" pos:column="24">,</op:operator>				<comment type="line" pos:line="375" pos:column="57">// Manage webdrives</comment>

	<decl><name pos:line="377" pos:column="9">msodmicleMax</name></decl>
	}</block>;</enum>


<typedef pos:line="381" pos:column="1">typedef <type><enum pos:line="381" pos:column="9">enum
	<block pos:line="382" pos:column="9">{
	<decl><name pos:line="383" pos:column="9">msodmiAppNil</name><init pos:line="383" pos:column="21">=<expr><op:operator pos:line="383" pos:column="22">-</op:operator><lit:literal type="number" pos:line="383" pos:column="23">1</lit:literal></expr></init></decl><op:operator pos:line="383" pos:column="24">,</op:operator>
	<decl><name pos:line="384" pos:column="9">msodmiAppWord</name></decl><op:operator pos:line="384" pos:column="22">,</op:operator>
	<decl><name pos:line="385" pos:column="9">msodmiAppExcel</name></decl><op:operator pos:line="385" pos:column="23">,</op:operator>
	<decl><name pos:line="386" pos:column="9">msodmiAppPowerPoint</name></decl><op:operator pos:line="386" pos:column="28">,</op:operator>
	<decl><name pos:line="387" pos:column="9">msodmiAppAccess</name></decl><op:operator pos:line="387" pos:column="24">,</op:operator>
	<decl><name pos:line="388" pos:column="9">msodmiAppFrontPage</name></decl><op:operator pos:line="388" pos:column="27">,</op:operator>
	<decl><name pos:line="389" pos:column="9">msodmiAppPublisher</name></decl><op:operator pos:line="389" pos:column="27">,</op:operator>
	<decl><name pos:line="390" pos:column="9">msodmiAppWordPad</name></decl><op:operator pos:line="390" pos:column="25">,</op:operator>
	<decl><name pos:line="391" pos:column="9">msodmiAppExplorer</name></decl><op:operator pos:line="391" pos:column="26">,</op:operator>
	<decl><name pos:line="392" pos:column="9">msodmiAppNonMS</name></decl><op:operator pos:line="392" pos:column="23">,</op:operator>
	<decl><name pos:line="393" pos:column="9">msodmiAppNonMSBrowser</name></decl><op:operator pos:line="393" pos:column="30">,</op:operator>
	<decl><name pos:line="394" pos:column="9">msodmcAPPS</name></decl>
	}</block></enum></type> <name pos:line="395" pos:column="11">MSODMAPPID</name>;</typedef>

<comment type="line" pos:line="397" pos:column="1">// Standard properties for calls which get and set the criteria for these</comment>
<comment type="line" pos:line="398" pos:column="1">// properties.  For Word macro language and WebFind only.</comment>

<typedef pos:line="400" pos:column="1">typedef <type><name pos:line="400" pos:column="9">int</name></type> <name pos:line="400" pos:column="13">MSOSTDPROP</name>;</typedef>

<enum pos:line="402" pos:column="1">enum
	<block pos:line="403" pos:column="9">{
	<decl><name pos:line="404" pos:column="9">msodmstdpropTitle</name></decl><op:operator pos:line="404" pos:column="26">,</op:operator>			<comment type="line" pos:line="404" pos:column="49">// Title property.</comment>
	<decl><name pos:line="405" pos:column="9">msodmstdpropAuthor</name></decl><op:operator pos:line="405" pos:column="27">,</op:operator>			<comment type="line" pos:line="405" pos:column="49">// Author property.</comment>
	<decl><name pos:line="406" pos:column="9">msodmstdpropKeywords</name></decl><op:operator pos:line="406" pos:column="29">,</op:operator>		<comment type="line" pos:line="406" pos:column="41">// Keywords property</comment>
	<decl><name pos:line="407" pos:column="9">msodmstdpropSubject</name></decl><op:operator pos:line="407" pos:column="28">,</op:operator>		<comment type="line" pos:line="407" pos:column="41">// Subject property</comment>
	<decl><name pos:line="408" pos:column="9">msodmstdpropText</name></decl><op:operator pos:line="408" pos:column="25">,</op:operator>			<comment type="line" pos:line="408" pos:column="49">// Text property</comment>
	<decl><name pos:line="409" pos:column="9">msodmstdpropDateSavedFrom</name></decl><op:operator pos:line="409" pos:column="34">,</op:operator>	<comment type="line" pos:line="409" pos:column="41">// Starting saved date</comment>
	<decl><name pos:line="410" pos:column="9">msodmstdpropDateSavedTo</name></decl><op:operator pos:line="410" pos:column="32">,</op:operator>	<comment type="line" pos:line="410" pos:column="41">// Ending saved date</comment>
	<decl><name pos:line="411" pos:column="9">msodmstdpropSavedBy</name></decl><op:operator pos:line="411" pos:column="28">,</op:operator>		<comment type="line" pos:line="411" pos:column="41">// Saved by</comment>
	<decl><name pos:line="412" pos:column="9">msodmstdpropDateCreatedFrom</name></decl><op:operator pos:line="412" pos:column="36">,</op:operator><comment type="line" pos:line="412" pos:column="37">// Starting created date</comment>
	<decl><name pos:line="413" pos:column="9">msodmstdpropDateCreatedTo</name></decl><op:operator pos:line="413" pos:column="34">,</op:operator>	<comment type="line" pos:line="413" pos:column="41">// Ending created date</comment>
	<decl><name pos:line="414" pos:column="9">msodmstdpropCreatedBy</name></decl><op:operator pos:line="414" pos:column="30">,</op:operator>		<comment type="line" pos:line="414" pos:column="41">// Created by</comment>
	<decl><name pos:line="415" pos:column="9">msodmstdpropSubDir</name></decl><op:operator pos:line="415" pos:column="27">,</op:operator>			<comment type="line" pos:line="415" pos:column="49">// Include subdirectories</comment>
	<decl><name pos:line="416" pos:column="9">msodmstdpropMatchCase</name></decl><op:operator pos:line="416" pos:column="30">,</op:operator>		<comment type="line" pos:line="416" pos:column="41">// Match Case in text searches</comment>
	<decl><name pos:line="417" pos:column="9">msodmstdpropPatternMatch</name></decl><op:operator pos:line="417" pos:column="33">,</op:operator>	<comment type="line" pos:line="417" pos:column="41">// Treat text as a pattern</comment>
	<decl><name pos:line="418" pos:column="9">msodmstdpropOmitAlwaysAccurate</name></decl><op:operator pos:line="418" pos:column="39">,</op:operator>	<comment type="line" pos:line="418" pos:column="41">// skip always accurate part of search</comment>
<cpp:ifdef pos:line="419" pos:column="1">#<cpp:directive pos:line="419" pos:column="2">ifdef</cpp:directive> <name pos:line="419" pos:column="8">SHILSHOLE_ENABLED</name></cpp:ifdef>
	<decl><name pos:line="420" pos:column="9">msodmstdpropRelevance</name></decl><op:operator pos:line="420" pos:column="30">,</op:operator>		<comment type="line" pos:line="420" pos:column="41">// Relevance property</comment>
	<decl><name pos:line="421" pos:column="9">msodmstdpropWebSearch</name></decl><op:operator pos:line="421" pos:column="30">,</op:operator>		<comment type="line" pos:line="421" pos:column="41">// Searching web, don't apply directory screen.</comment>
	<decl><name pos:line="422" pos:column="9">msodmstdpropHttpURL</name></decl><op:operator pos:line="422" pos:column="28">,</op:operator>		<comment type="line" pos:line="422" pos:column="41">// want http: URLs returned (otherwise get file)</comment>
								<comment type="line" pos:line="423" pos:column="65">// only used with Web Search.</comment>
<cpp:endif pos:line="424" pos:column="1">#<cpp:directive pos:line="424" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="424" pos:column="8">// SHILSHOLE_ENABLED</comment>
	<decl><name pos:line="425" pos:column="9">msodmstdpropComments</name></decl><op:operator pos:line="425" pos:column="29">,</op:operator>		<comment type="line" pos:line="425" pos:column="41">// Comments</comment>
	<decl><name pos:line="426" pos:column="9">msodmstdpropCategory</name></decl><op:operator pos:line="426" pos:column="29">,</op:operator>		<comment type="line" pos:line="426" pos:column="41">// Category of document</comment>

<cpp:ifdef pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">ifdef</cpp:directive> <name pos:line="428" pos:column="8">SHILSHOLE_ENABLED</name></cpp:ifdef>
	<comment type="line" pos:line="429" pos:column="9">// Following values are for WebFind retrieval only.  DON'T use with</comment>
	<comment type="line" pos:line="430" pos:column="9">// WordBasic.</comment>
	<decl><name pos:line="431" pos:column="9">msodmstdpropSize</name></decl><op:operator pos:line="431" pos:column="25">,</op:operator>
	<decl><name pos:line="432" pos:column="9">msodmstdpropContents</name></decl><op:operator pos:line="432" pos:column="29">,</op:operator>
	<decl><name pos:line="433" pos:column="9">msodmstdpropAppName</name></decl><op:operator pos:line="433" pos:column="28">,</op:operator>

	<decl><name pos:line="435" pos:column="9">msodmstdpropExtendedProperties</name></decl><op:operator pos:line="435" pos:column="39">,</op:operator>		<comment type="line" pos:line="435" pos:column="49">// Return extended property list.</comment>
									<comment type="line" pos:line="436" pos:column="73">// For Task Center.</comment>
	<decl><name pos:line="437" pos:column="9">msodmstdpropDumpDocList</name></decl><op:operator pos:line="437" pos:column="32">,</op:operator>		<comment type="line" pos:line="437" pos:column="49">// For Yahoo categorization, return entire</comment>
									<comment type="line" pos:line="438" pos:column="73">// doclist.</comment>
	<decl><name pos:line="439" pos:column="9">msodmstdpropStartingHit</name></decl><op:operator pos:line="439" pos:column="32">,</op:operator>		<comment type="line" pos:line="439" pos:column="49">// Start returning hits at this item (default 0).</comment>
	<decl><name pos:line="440" pos:column="9">msodmstdpropNumberHits</name></decl><op:operator pos:line="440" pos:column="31">,</op:operator>			<comment type="line" pos:line="440" pos:column="49">// Limit return to n hits (default all hits).</comment>
<cpp:endif pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="441" pos:column="8">// SHILSHOLE_ENABLED</comment>

	<decl><name pos:line="443" pos:column="9">msodmstdpropMax</name></decl>				<comment type="line" pos:line="443" pos:column="49">// MUST BE LAST</comment>
 	}</block>;</enum>


<comment type="line" pos:line="447" pos:column="1">// Sort fields  For Word macro language only.  Note order</comment>
<comment type="line" pos:line="448" pos:column="1">// is set to match WordBasic macro values.</comment>

<typedef pos:line="450" pos:column="1">typedef <type><name pos:line="450" pos:column="9">int</name></type> <name pos:line="450" pos:column="13">MSOSORT</name>;</typedef>

<enum pos:line="452" pos:column="1">enum
	<block pos:line="453" pos:column="9">{
	<decl><name pos:line="454" pos:column="9">msodmsortOther</name><init pos:line="454" pos:column="23">=<expr><op:operator pos:line="454" pos:column="24">-</op:operator><lit:literal type="number" pos:line="454" pos:column="25">1</lit:literal></expr></init></decl><op:operator pos:line="454" pos:column="26">,</op:operator>			<comment type="line" pos:line="454" pos:column="49">// Sorting by some non-standard property.</comment>
	<decl><name pos:line="455" pos:column="9">msodmsortAuthor</name></decl><op:operator pos:line="455" pos:column="24">,</op:operator>			<comment type="line" pos:line="455" pos:column="49">// Author property.</comment>
	<decl><name pos:line="456" pos:column="9">msodmsortCreationDate</name></decl><op:operator pos:line="456" pos:column="30">,</op:operator>		<comment type="line" pos:line="456" pos:column="41">// Creation Date property.</comment>
	<decl><name pos:line="457" pos:column="9">msodmsortSavedBy</name></decl><op:operator pos:line="457" pos:column="25">,</op:operator>			<comment type="line" pos:line="457" pos:column="49">// Last Modifier property.</comment>
	<decl><name pos:line="458" pos:column="9">msodmsortSavedDate</name></decl><op:operator pos:line="458" pos:column="27">,</op:operator>			<comment type="line" pos:line="458" pos:column="49">// Last Modified property.</comment>
	<decl><name pos:line="459" pos:column="9">msodmsortFilename</name></decl><op:operator pos:line="459" pos:column="26">,</op:operator>			<comment type="line" pos:line="459" pos:column="49">// Filename property.</comment>
	<decl><name pos:line="460" pos:column="9">msodmsortSize</name></decl><op:operator pos:line="460" pos:column="22">,</op:operator>				<comment type="line" pos:line="460" pos:column="49">// Size property.</comment>
<cpp:ifdef pos:line="461" pos:column="1">#<cpp:directive pos:line="461" pos:column="2">ifdef</cpp:directive> <name pos:line="461" pos:column="8">SHILSHOLE_ENABLED</name></cpp:ifdef>
	<decl><name pos:line="462" pos:column="9">msodmsortRelevance</name></decl><op:operator pos:line="462" pos:column="27">,</op:operator>			<comment type="line" pos:line="462" pos:column="49">// Relevance property.</comment>
<cpp:endif pos:line="463" pos:column="1">#<cpp:directive pos:line="463" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="463" pos:column="8">// SHILSHOLE_ENABLED</comment>
	<decl><name pos:line="464" pos:column="9">msodmsortFileType</name></decl><op:operator pos:line="464" pos:column="26">,</op:operator>			<comment type="line" pos:line="464" pos:column="49">// File Type property</comment>
	<decl><name pos:line="465" pos:column="9">msodmsortMax</name></decl>				<comment type="line" pos:line="465" pos:column="49">// MUST BE LAST</comment>
	}</block>;</enum>

<comment type="line" pos:line="468" pos:column="1">// Views available in the dialog.  This is used to set which type</comment>
<comment type="line" pos:line="469" pos:column="1">// of view is visible.  Note order is set to match WordBasic values.</comment>

<typedef pos:line="471" pos:column="1">typedef <type><name pos:line="471" pos:column="9">int</name></type> <name pos:line="471" pos:column="13">MSOVIEW</name>;</typedef>

<enum pos:line="473" pos:column="1">enum
	<block pos:line="474" pos:column="9">{
	<decl><name pos:line="475" pos:column="9">msodmviewDetails</name></decl><op:operator pos:line="475" pos:column="25">,</op:operator>		<comment type="line" pos:line="475" pos:column="41">// Details view.</comment>
	<decl><name pos:line="476" pos:column="9">msodmviewPreview</name></decl><op:operator pos:line="476" pos:column="25">,</op:operator>		<comment type="line" pos:line="476" pos:column="41">// Preview view.</comment>
	<decl><name pos:line="477" pos:column="9">msodmviewProperties</name></decl><op:operator pos:line="477" pos:column="28">,</op:operator>	<comment type="line" pos:line="477" pos:column="33">// Properties view.</comment>
	<decl><name pos:line="478" pos:column="9">msodmviewList</name></decl><op:operator pos:line="478" pos:column="22">,</op:operator>			<comment type="line" pos:line="478" pos:column="41">// List view.</comment>
	<decl><name pos:line="479" pos:column="9">msodmviewThumbnail</name></decl><op:operator pos:line="479" pos:column="27">,</op:operator>		<comment type="line" pos:line="479" pos:column="41">// Thumbnail view.</comment>
	<decl><name pos:line="480" pos:column="9">msodmviewLargeIcons</name></decl><op:operator pos:line="480" pos:column="28">,</op:operator>	<comment type="line" pos:line="480" pos:column="33">// Large Icons view.</comment>
	<decl><name pos:line="481" pos:column="9">msodmviewSmallIcons</name></decl><op:operator pos:line="481" pos:column="28">,</op:operator>	<comment type="line" pos:line="481" pos:column="33">// Small Icons view.</comment>
	<decl><name pos:line="482" pos:column="9">msodmviewWebView</name></decl><op:operator pos:line="482" pos:column="25">,</op:operator>
	<decl><name pos:line="483" pos:column="9">msodmviewMax</name></decl>			<comment type="line" pos:line="483" pos:column="41">// MUST BE LAST</comment>
	}</block>;</enum>


<comment type="line" pos:line="487" pos:column="1">// The different fonts you can set in the dialog.</comment>

<typedef pos:line="489" pos:column="1">typedef <type><name pos:line="489" pos:column="9">int</name></type> <name pos:line="489" pos:column="13">MSOFONT</name>;</typedef>

<enum pos:line="491" pos:column="1">enum
	<block pos:line="492" pos:column="9">{
	<decl><name pos:line="493" pos:column="9">msodmfontNormal</name></decl><op:operator pos:line="493" pos:column="24">,</op:operator>		<comment type="line" pos:line="493" pos:column="41">// Normal font.</comment>
	<decl><name pos:line="494" pos:column="9">msodmfontLight</name></decl><op:operator pos:line="494" pos:column="23">,</op:operator>			<comment type="line" pos:line="494" pos:column="41">// Light dialog font.</comment>
	<decl><name pos:line="495" pos:column="9">msodmfontBold</name></decl><op:operator pos:line="495" pos:column="22">,</op:operator>			<comment type="line" pos:line="495" pos:column="41">// Bold dialog font.</comment>
	<decl><name pos:line="496" pos:column="9">msodmfontItalic</name></decl><op:operator pos:line="496" pos:column="24">,</op:operator>		<comment type="line" pos:line="496" pos:column="41">// Italics.</comment>
	<decl><name pos:line="497" pos:column="9">msodmfontMax</name></decl>			<comment type="line" pos:line="497" pos:column="41">// Leave as last.</comment>
	}</block>;</enum>


<comment type="line" pos:line="501" pos:column="1">// Search Connector options</comment>

<typedef pos:line="503" pos:column="1">typedef <type><name pos:line="503" pos:column="9">int</name></type> <name pos:line="503" pos:column="13">MSODMCONN</name>;</typedef>

<enum pos:line="505" pos:column="1">enum
	<block pos:line="506" pos:column="9">{
	<decl><name pos:line="507" pos:column="9">msodmconnOr</name></decl><op:operator pos:line="507" pos:column="20">,</op:operator>
	<decl><name pos:line="508" pos:column="9">msodmconnAnd</name></decl><op:operator pos:line="508" pos:column="21">,</op:operator>
	<decl><name pos:line="509" pos:column="9">msodmconnMax</name></decl>			<comment type="line" pos:line="509" pos:column="41">// Leave as last.</comment>
	}</block>;</enum>


<comment type="line" pos:line="513" pos:column="1">// Three layout styles to enable extra sections for SaveAsWebPage.</comment>

<typedef pos:line="515" pos:column="1">typedef <type><name pos:line="515" pos:column="9">int</name></type> <name pos:line="515" pos:column="13">MSODMLAYOUT</name>;</typedef>

<enum pos:line="517" pos:column="1">enum <block pos:line="517" pos:column="6">{
	<decl><name pos:line="518" pos:column="9">msodmlayoutNormal</name></decl><op:operator pos:line="518" pos:column="26">,</op:operator>
	<decl><name pos:line="519" pos:column="9">msodmlayoutOneExtraGroup</name></decl><op:operator pos:line="519" pos:column="33">,</op:operator>
	<decl><name pos:line="520" pos:column="9">msodmlayoutTwoExtraGroups</name></decl>
	}</block>;</enum>


<comment type="line" pos:line="524" pos:column="1">// File Type flags (for describing file types appended to</comment>
<comment type="line" pos:line="525" pos:column="1">// the file type list using IMsoFileType::AppendEx</comment>

<typedef pos:line="527" pos:column="1">typedef <type><name pos:line="527" pos:column="9">ULONG</name></type> <name pos:line="527" pos:column="15">MSOFTF</name>;</typedef>


<cpp:define pos:line="530" pos:column="1">#<cpp:directive pos:line="530" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="530" pos:column="9">msoftfNone</name></cpp:macro>					<cpp:value pos:line="530" pos:column="57">0x0</cpp:value></cpp:define>
<cpp:define pos:line="531" pos:column="1">#<cpp:directive pos:line="531" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="531" pos:column="9">msoftfVersionMask</name></cpp:macro>			<cpp:value pos:line="531" pos:column="49">0x000000FF</cpp:value></cpp:define>		<comment type="line" pos:line="531" pos:column="73">// file type version bits</comment>
<cpp:define pos:line="532" pos:column="1">#<cpp:directive pos:line="532" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="532" pos:column="9">msoftfNotAppDocType</name></cpp:macro>			<cpp:value pos:line="532" pos:column="49">0x00000000</cpp:value></cpp:define>		<comment type="line" pos:line="532" pos:column="73">// Not a native app type</comment>
<cpp:define pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="533" pos:column="9">msoftfVersion1Doc</name></cpp:macro>			<cpp:value pos:line="533" pos:column="49">0x00000001</cpp:value></cpp:define>		<comment type="line" pos:line="533" pos:column="73">// From app v1</comment>
<cpp:define pos:line="534" pos:column="1">#<cpp:directive pos:line="534" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="534" pos:column="9">msoftfVersion2Doc</name></cpp:macro>			<cpp:value pos:line="534" pos:column="49">0x00000002</cpp:value></cpp:define>		<comment type="line" pos:line="534" pos:column="73">// From app v2</comment>
<cpp:define pos:line="535" pos:column="1">#<cpp:directive pos:line="535" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="535" pos:column="9">msoftfVersion3Doc</name></cpp:macro>			<cpp:value pos:line="535" pos:column="49">0x00000003</cpp:value></cpp:define>		<comment type="line" pos:line="535" pos:column="73">// From app v3</comment>
<cpp:define pos:line="536" pos:column="1">#<cpp:directive pos:line="536" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="536" pos:column="9">msoftfVersion4Doc</name></cpp:macro>			<cpp:value pos:line="536" pos:column="49">0x00000004</cpp:value></cpp:define>		<comment type="line" pos:line="536" pos:column="73">// From app v4</comment>
<cpp:define pos:line="537" pos:column="1">#<cpp:directive pos:line="537" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="537" pos:column="9">msoftfVersion5Doc</name></cpp:macro>			<cpp:value pos:line="537" pos:column="49">0x00000005</cpp:value></cpp:define>		<comment type="line" pos:line="537" pos:column="73">// From app v5</comment>
<cpp:define pos:line="538" pos:column="1">#<cpp:directive pos:line="538" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="538" pos:column="9">msoftfVersion6Doc</name></cpp:macro>			<cpp:value pos:line="538" pos:column="49">0x00000006</cpp:value></cpp:define>		<comment type="line" pos:line="538" pos:column="73">// From app v6</comment>
<cpp:define pos:line="539" pos:column="1">#<cpp:directive pos:line="539" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="539" pos:column="9">msoftfVersion7Doc</name></cpp:macro>			<cpp:value pos:line="539" pos:column="49">0x00000007</cpp:value></cpp:define>		<comment type="line" pos:line="539" pos:column="73">// From app v7</comment>
<cpp:define pos:line="540" pos:column="1">#<cpp:directive pos:line="540" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="540" pos:column="9">msoftfVersion8Doc</name></cpp:macro>			<cpp:value pos:line="540" pos:column="49">0x00000008</cpp:value></cpp:define>		<comment type="line" pos:line="540" pos:column="73">// From app v8</comment>
<cpp:define pos:line="541" pos:column="1">#<cpp:directive pos:line="541" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="541" pos:column="9">msoftfVersion9Doc</name></cpp:macro>			<cpp:value pos:line="541" pos:column="49">0x00000009</cpp:value></cpp:define>		<comment type="line" pos:line="541" pos:column="73">// From app v9</comment>
<cpp:define pos:line="542" pos:column="1">#<cpp:directive pos:line="542" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="542" pos:column="9">msoftfVersion10Doc</name></cpp:macro>			<cpp:value pos:line="542" pos:column="49">0x0000000A</cpp:value></cpp:define>		<comment type="line" pos:line="542" pos:column="73">// From app v10</comment>
<cpp:define pos:line="543" pos:column="1">#<cpp:directive pos:line="543" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="543" pos:column="9">msoftfVersion11Doc</name></cpp:macro>			<cpp:value pos:line="543" pos:column="49">0x0000000B</cpp:value></cpp:define>		<comment type="line" pos:line="543" pos:column="73">// From app v11</comment>
<cpp:define pos:line="544" pos:column="1">#<cpp:directive pos:line="544" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="544" pos:column="9">msoftfFreezeDir</name></cpp:macro>				<cpp:value pos:line="544" pos:column="49">0x00000100</cpp:value></cpp:define>		<comment type="line" pos:line="544" pos:column="73">// fFreezeDir</comment>
<cpp:define pos:line="545" pos:column="1">#<cpp:directive pos:line="545" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="545" pos:column="9">msoftfAddIn</name></cpp:macro>					<cpp:value pos:line="545" pos:column="57">0x00000200</cpp:value></cpp:define>		<comment type="line" pos:line="545" pos:column="81">// Add in type</comment>
<cpp:define pos:line="546" pos:column="1">#<cpp:directive pos:line="546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="546" pos:column="9">msoftfHtml</name></cpp:macro>					<cpp:value pos:line="546" pos:column="57">0x00000400</cpp:value></cpp:define>		<comment type="line" pos:line="546" pos:column="81">// HTML type</comment>
<cpp:define pos:line="547" pos:column="1">#<cpp:directive pos:line="547" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="547" pos:column="9">msoftfSimulatesFreezeDir</name></cpp:macro>	<cpp:value pos:line="547" pos:column="41">0x00000800</cpp:value></cpp:define>		<comment type="line" pos:line="547" pos:column="65">// Tries to simulate freeze dir</comment>
													<comment type="line" pos:line="548" pos:column="105">// by changing directory on type</comment>
													<comment type="line" pos:line="549" pos:column="105">// change event</comment>

<cpp:define pos:line="551" pos:column="1">#<cpp:directive pos:line="551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="551" pos:column="9">msoftfCurrentVersionDoc</name></cpp:macro>		<cpp:value pos:line="551" pos:column="41">msoftfVersion9Doc</cpp:value></cpp:define>	<comment type="line" pos:line="551" pos:column="65">// change for 10!!</comment>


<comment type="line" pos:line="554" pos:column="1">// Shell Settings flags (for querying shell settings using MsoDwGetShellSetting</comment>

<typedef pos:line="556" pos:column="1">typedef <type><name pos:line="556" pos:column="9">ULONG</name></type> <name pos:line="556" pos:column="15">MSOSSF</name>;</typedef>

<cpp:define pos:line="558" pos:column="1">#<cpp:directive pos:line="558" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="558" pos:column="9">msosffNone</name></cpp:macro>					<cpp:value pos:line="558" pos:column="57">0x0</cpp:value></cpp:define>
<cpp:define pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="559" pos:column="9">msosffShowExtensions</name></cpp:macro>		<cpp:value pos:line="559" pos:column="41">0x00000001</cpp:value></cpp:define>		<comment type="line" pos:line="559" pos:column="65">// show file extensions</comment>
<cpp:define pos:line="560" pos:column="1">#<cpp:directive pos:line="560" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="560" pos:column="9">msosffShowHidden</name></cpp:macro>			<cpp:value pos:line="560" pos:column="49">0x00000002</cpp:value></cpp:define>		<comment type="line" pos:line="560" pos:column="73">// show hidden files</comment>
<cpp:define pos:line="561" pos:column="1">#<cpp:directive pos:line="561" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="561" pos:column="9">msosffShowSystem</name></cpp:macro>			<cpp:value pos:line="561" pos:column="49">0x00000004</cpp:value></cpp:define>		<comment type="line" pos:line="561" pos:column="73">// show protected system files</comment>

<comment type="line" pos:line="563" pos:column="1">// IMsoOLDocument string options for GetWzPcchGdn and SetWzGdn.</comment>

<typedef pos:line="565" pos:column="1">typedef <type><name pos:line="565" pos:column="9">int</name></type> <name pos:line="565" pos:column="13">MSOIOLGDN</name>;</typedef>

<enum pos:line="567" pos:column="1">enum
	<block pos:line="568" pos:column="9">{
	<decl><name pos:line="569" pos:column="9">msoiolgdnTitle</name></decl><op:operator pos:line="569" pos:column="23">,</op:operator>							<comment type="line" pos:line="569" pos:column="73">// Only used in window titles</comment>
	<decl><name pos:line="570" pos:column="9">msoiolgdnNameOnly</name></decl><op:operator pos:line="570" pos:column="26">,</op:operator>						<comment type="line" pos:line="570" pos:column="73">// Used in messages and menus</comment>
	<decl><name pos:line="571" pos:column="9">msoiolgdnMRUName</name></decl><op:operator pos:line="571" pos:column="25">,</op:operator>							<comment type="line" pos:line="571" pos:column="81">// Used in messages and menus</comment>
	<decl><name pos:line="572" pos:column="9">msoiolgdnPersistent</name></decl><op:operator pos:line="572" pos:column="28">,</op:operator>						<comment type="line" pos:line="572" pos:column="73">// Identifies a document</comment>
	<decl><name pos:line="573" pos:column="9">msoiolgdnPersistDir</name></decl><op:operator pos:line="573" pos:column="28">,</op:operator>						<comment type="line" pos:line="573" pos:column="73">// Dir for FAT and URLs.  (N/A w/ ODMA)</comment>
	<decl><name pos:line="574" pos:column="9">msoiolgdnPersistLeafWithExt</name></decl><op:operator pos:line="574" pos:column="36">,</op:operator>			<comment type="line" pos:line="574" pos:column="57">// May be used internally</comment>
	<decl><name pos:line="575" pos:column="9">msoiolgdnPersistLeafWoExt</name></decl><op:operator pos:line="575" pos:column="34">,</op:operator>				<comment type="line" pos:line="575" pos:column="65">// May be used internally</comment>
	<decl><name pos:line="576" pos:column="9">msoiolgdnPersistExt</name></decl><op:operator pos:line="576" pos:column="28">,</op:operator>						<comment type="line" pos:line="576" pos:column="73">// File extension.  Used internally</comment>

	<decl><name pos:line="578" pos:column="9">msoiolgdnTempFilePath</name></decl><op:operator pos:line="578" pos:column="30">,</op:operator>					<comment type="line" pos:line="578" pos:column="65">// Where the document is stored</comment>
	<decl><name pos:line="579" pos:column="9">msoiolgdnTempFileDir</name></decl><op:operator pos:line="579" pos:column="29">,</op:operator>					<comment type="line" pos:line="579" pos:column="65">// Where temp doc is stored</comment>
	<decl><name pos:line="580" pos:column="9">msoiolgdnTempFileLeafWithExt</name></decl><op:operator pos:line="580" pos:column="37">,</op:operator>			<comment type="line" pos:line="580" pos:column="57">// May be used internally</comment>
	<decl><name pos:line="581" pos:column="9">msoiolgdnTempFileLeafWoExt</name></decl><op:operator pos:line="581" pos:column="35">,</op:operator>			<comment type="line" pos:line="581" pos:column="57">// May be used internally</comment>
	<decl><name pos:line="582" pos:column="9">msoiolgdnTempFileExt</name></decl><op:operator pos:line="582" pos:column="29">,</op:operator>					<comment type="line" pos:line="582" pos:column="65">// File extension.  Used internally</comment>

	<decl><name pos:line="584" pos:column="9">msoiolgdnAuthor</name></decl><op:operator pos:line="584" pos:column="24">,</op:operator>							<comment type="line" pos:line="584" pos:column="81">// Author of this document</comment>
	<decl><name pos:line="585" pos:column="9">msoiolgdnManager</name></decl><op:operator pos:line="585" pos:column="25">,</op:operator>							<comment type="line" pos:line="585" pos:column="81">// Manager progerty for this document</comment>
	<decl><name pos:line="586" pos:column="9">msoiolgdnCompany</name></decl><op:operator pos:line="586" pos:column="25">,</op:operator>							<comment type="line" pos:line="586" pos:column="81">// Company progerty for this document</comment>
	<decl><name pos:line="587" pos:column="9">msoiolgdnKeywords</name></decl><op:operator pos:line="587" pos:column="26">,</op:operator>						<comment type="line" pos:line="587" pos:column="73">// Keywords progerty for this document</comment>
	<decl><name pos:line="588" pos:column="9">msoiolgdnTempFileToCopy</name></decl><op:operator pos:line="588" pos:column="32">,</op:operator>				<comment type="line" pos:line="588" pos:column="65">// Used with Refresh of Web documents</comment>
	<decl><name pos:line="589" pos:column="9">msoiolgdnVBAFullName</name></decl><op:operator pos:line="589" pos:column="29">,</op:operator>					<comment type="line" pos:line="589" pos:column="65">// Used with VBA</comment>
	<decl><name pos:line="590" pos:column="9">msoiolgdnRedirectedURL</name></decl><op:operator pos:line="590" pos:column="31">,</op:operator>					<comment type="line" pos:line="590" pos:column="65">// Set in download if URL is redirected</comment>

	<decl><name pos:line="592" pos:column="9">msoiolgdnPersistVolume</name></decl><op:operator pos:line="592" pos:column="31">,</op:operator>
	<decl><name pos:line="593" pos:column="9">msoiolgdnTempFileVolume</name></decl><op:operator pos:line="593" pos:column="32">,</op:operator>

	<decl><name pos:line="595" pos:column="9">msoiolgdnCurrentUser</name></decl><op:operator pos:line="595" pos:column="29">,</op:operator>					<comment type="line" pos:line="595" pos:column="65">// User currently editing this document</comment>
	<decl><name pos:line="596" pos:column="9">msoiolgdnURLBookmark</name></decl><op:operator pos:line="596" pos:column="29">,</op:operator>
	<decl><name pos:line="597" pos:column="9">msoiolgdnFolderSuffix</name></decl><op:operator pos:line="597" pos:column="30">,</op:operator>
	<decl><name pos:line="598" pos:column="9">msoiolgdnTempFolderPath</name></decl><op:operator pos:line="598" pos:column="32">,</op:operator>    			<comment type="line" pos:line="598" pos:column="57">// Temp folder used for web-case. Internal only.</comment>

	<decl><name pos:line="600" pos:column="9">msoiolgdnPersistLeafWithExtNoDecode</name></decl><op:operator pos:line="600" pos:column="44">,</op:operator>
	<decl><name pos:line="601" pos:column="9">msoiolgdnPersistLeafWoExtNoDecode</name></decl><op:operator pos:line="601" pos:column="42">,</op:operator>
	<decl><name pos:line="602" pos:column="9">msoiolgdnPersistExtNoDecode</name></decl><op:operator pos:line="602" pos:column="36">,</op:operator>

	<decl><name pos:line="604" pos:column="9">msoiolgdnODMADocId</name></decl><op:operator pos:line="604" pos:column="27">,</op:operator>						<comment type="line" pos:line="604" pos:column="73">// Supported ODMA attributes:-</comment>

	<decl><name pos:line="606" pos:column="9">msoiolgdnMax</name></decl>
	}</block>;</enum>

<comment type="line" pos:line="609" pos:column="1">// IMsoOLDocument BeginCmd command specifiers.</comment>

<typedef pos:line="611" pos:column="1">typedef <type><name pos:line="611" pos:column="9">ULONG</name></type> <name pos:line="611" pos:column="15">MSOIOLCMD</name>;</typedef>

<cpp:define pos:line="613" pos:column="1">#<cpp:directive pos:line="613" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="613" pos:column="9">msoiolcmdNone</name></cpp:macro>				<cpp:value pos:line="613" pos:column="49">0</cpp:value></cpp:define>
<cpp:define pos:line="614" pos:column="1">#<cpp:directive pos:line="614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="614" pos:column="9">msoiolcmdNew</name></cpp:macro>				<cpp:value pos:line="614" pos:column="49">0x00000001</cpp:value></cpp:define>
<cpp:define pos:line="615" pos:column="1">#<cpp:directive pos:line="615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="615" pos:column="9">msoiolcmdOpen</name></cpp:macro>				<cpp:value pos:line="615" pos:column="49">0x00000002</cpp:value></cpp:define>
<cpp:define pos:line="616" pos:column="1">#<cpp:directive pos:line="616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="616" pos:column="9">msoiolcmdOpenRO</name></cpp:macro>				<cpp:value pos:line="616" pos:column="49">0x00000004</cpp:value></cpp:define>
<cpp:define pos:line="617" pos:column="1">#<cpp:directive pos:line="617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="617" pos:column="9">msoiolcmdClose</name></cpp:macro>				<cpp:value pos:line="617" pos:column="49">0x00000008</cpp:value></cpp:define>
<cpp:define pos:line="618" pos:column="1">#<cpp:directive pos:line="618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="618" pos:column="9">msoiolcmdSaveAsDlg</name></cpp:macro>			<cpp:value pos:line="618" pos:column="49">0x00000010</cpp:value></cpp:define>
<cpp:define pos:line="619" pos:column="1">#<cpp:directive pos:line="619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="619" pos:column="9">msoiolcmdRefresh</name></cpp:macro>			<cpp:value pos:line="619" pos:column="49">0x00000020</cpp:value></cpp:define>
<cpp:define pos:line="620" pos:column="1">#<cpp:directive pos:line="620" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="620" pos:column="9">msoiolcmdSave</name></cpp:macro>				<cpp:value pos:line="620" pos:column="49">0x00000040</cpp:value></cpp:define>
<cpp:define pos:line="621" pos:column="1">#<cpp:directive pos:line="621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="621" pos:column="9">msoiolcmdSaveCopy</name></cpp:macro>			<cpp:value pos:line="621" pos:column="49">0x00000080</cpp:value></cpp:define>
<cpp:define pos:line="622" pos:column="1">#<cpp:directive pos:line="622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="622" pos:column="9">msoiolcmdSaveVersion</name></cpp:macro>		<cpp:value pos:line="622" pos:column="41">0x00001000</cpp:value></cpp:define>	<comment type="line" pos:line="622" pos:column="57">// Not used in MSO97</comment>
<cpp:define pos:line="623" pos:column="1">#<cpp:directive pos:line="623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="623" pos:column="9">msoiolcmdCheckIn</name></cpp:macro>			<cpp:value pos:line="623" pos:column="49">0x00002000</cpp:value></cpp:define>	<comment type="line" pos:line="623" pos:column="65">// Not used in MSO97</comment>
<cpp:define pos:line="624" pos:column="1">#<cpp:directive pos:line="624" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="624" pos:column="9">msoiolcmdCheckOut</name></cpp:macro>			<cpp:value pos:line="624" pos:column="49">0x00004000</cpp:value></cpp:define>	<comment type="line" pos:line="624" pos:column="65">// Not used in MSO97</comment>

<cpp:define pos:line="626" pos:column="1">#<cpp:directive pos:line="626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="626" pos:column="9">msoiolcmdOpenMask</name></cpp:macro>			<cpp:value pos:line="626" pos:column="49">(msoiolcmdOpen | msoiolcmdOpenRO)</cpp:value></cpp:define>
<cpp:define pos:line="627" pos:column="1">#<cpp:directive pos:line="627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="627" pos:column="9">msoiolcmdMask</name></cpp:macro>				<cpp:value pos:line="627" pos:column="49">0x0000ffff</cpp:value></cpp:define>	<comment type="line" pos:line="627" pos:column="65">// All MSOIOLCMD values must be</comment>
															<comment type="line" pos:line="628" pos:column="121">// in this range.</comment>

<comment type="line" pos:line="630" pos:column="1">// IMsoOLDocument events.</comment>

<typedef pos:line="632" pos:column="1">typedef <type><name pos:line="632" pos:column="9">ULONG</name></type> <name pos:line="632" pos:column="15">MSOIOLEVT</name>;</typedef>

<cpp:define pos:line="634" pos:column="1">#<cpp:directive pos:line="634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="634" pos:column="9">msoiolevtNew</name></cpp:macro>					<cpp:value pos:line="634" pos:column="57">msoiolcmdNew</cpp:value></cpp:define>
<cpp:define pos:line="635" pos:column="1">#<cpp:directive pos:line="635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="635" pos:column="9">msoiolevtOpen</name></cpp:macro>				<cpp:value pos:line="635" pos:column="49">msoiolcmdOpen</cpp:value></cpp:define>
<cpp:define pos:line="636" pos:column="1">#<cpp:directive pos:line="636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="636" pos:column="9">msoiolevtOpenRO</name></cpp:macro>				<cpp:value pos:line="636" pos:column="49">msoiolcmdOpenRO</cpp:value></cpp:define>
<cpp:define pos:line="637" pos:column="1">#<cpp:directive pos:line="637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="637" pos:column="9">msoiolevtOpenShared</name></cpp:macro>		<cpp:value pos:line="637" pos:column="41">(msoiolcmdOpen | msoiolcmdOpenRO)</cpp:value></cpp:define>
<cpp:define pos:line="638" pos:column="1">#<cpp:directive pos:line="638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="638" pos:column="9">msoiolevtClose</name></cpp:macro>				<cpp:value pos:line="638" pos:column="49">msoiolcmdClose</cpp:value></cpp:define>
<cpp:define pos:line="639" pos:column="1">#<cpp:directive pos:line="639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="639" pos:column="9">msoiolevtSaveAsDlg</name></cpp:macro>			<cpp:value pos:line="639" pos:column="49">msoiolcmdSaveAsDlg</cpp:value></cpp:define>
<cpp:define pos:line="640" pos:column="1">#<cpp:directive pos:line="640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="640" pos:column="9">msoiolevtRefresh</name></cpp:macro>			<cpp:value pos:line="640" pos:column="49">msoiolcmdRefresh</cpp:value></cpp:define>
<cpp:define pos:line="641" pos:column="1">#<cpp:directive pos:line="641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="641" pos:column="9">msoiolevtSave</name></cpp:macro>				<cpp:value pos:line="641" pos:column="49">msoiolcmdSave</cpp:value></cpp:define>
<cpp:define pos:line="642" pos:column="1">#<cpp:directive pos:line="642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="642" pos:column="9">msoiolevtSaveCopy</name></cpp:macro>			<cpp:value pos:line="642" pos:column="49">msoiolcmdSaveCopy</cpp:value></cpp:define>
<cpp:define pos:line="643" pos:column="1">#<cpp:directive pos:line="643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="643" pos:column="9">msoiolevtSaveVersion</name></cpp:macro>		<cpp:value pos:line="643" pos:column="41">msoiolcmdSaveVersion</cpp:value></cpp:define>
<cpp:define pos:line="644" pos:column="1">#<cpp:directive pos:line="644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="644" pos:column="9">msoiolevtCheckIn</name></cpp:macro>			<cpp:value pos:line="644" pos:column="49">msoiolcmdCheckIn</cpp:value></cpp:define>
<cpp:define pos:line="645" pos:column="1">#<cpp:directive pos:line="645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="645" pos:column="9">msoiolevtCheckOut</name></cpp:macro>			<cpp:value pos:line="645" pos:column="49">msoiolcmdCheckOut</cpp:value></cpp:define>

<cpp:define pos:line="647" pos:column="1">#<cpp:directive pos:line="647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="647" pos:column="9">msoiolevtCopy</name></cpp:macro>				<cpp:value pos:line="647" pos:column="49">0x00010000</cpp:value></cpp:define>	<comment type="line" pos:line="647" pos:column="65">// Not sure if this is needed.</comment>
<cpp:define pos:line="648" pos:column="1">#<cpp:directive pos:line="648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="648" pos:column="9">msoiolevtMove</name></cpp:macro>				<cpp:value pos:line="648" pos:column="49">0x00020000</cpp:value></cpp:define>
<cpp:define pos:line="649" pos:column="1">#<cpp:directive pos:line="649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="649" pos:column="9">msoiolevtRename</name></cpp:macro>				<cpp:value pos:line="649" pos:column="49">0x00040000</cpp:value></cpp:define>
<cpp:define pos:line="650" pos:column="1">#<cpp:directive pos:line="650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="650" pos:column="9">msoiolevtPrint</name></cpp:macro>				<cpp:value pos:line="650" pos:column="49">0x00080000</cpp:value></cpp:define>
<cpp:define pos:line="651" pos:column="1">#<cpp:directive pos:line="651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="651" pos:column="9">msoiolevtRoute</name></cpp:macro>				<cpp:value pos:line="651" pos:column="49">0x00100000</cpp:value></cpp:define>
<cpp:define pos:line="652" pos:column="1">#<cpp:directive pos:line="652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="652" pos:column="9">msoiolevtSend</name></cpp:macro>				<cpp:value pos:line="652" pos:column="49">0x00200000</cpp:value></cpp:define>
<cpp:define pos:line="653" pos:column="1">#<cpp:directive pos:line="653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="653" pos:column="9">msoiolevtPost</name></cpp:macro>				<cpp:value pos:line="653" pos:column="49">0x00400000</cpp:value></cpp:define>

<cpp:define pos:line="655" pos:column="1">#<cpp:directive pos:line="655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="655" pos:column="9">msoiolevtCmdCompleted</name></cpp:macro>		<cpp:value pos:line="655" pos:column="41">0x40000000</cpp:value></cpp:define>	<comment type="line" pos:line="655" pos:column="57">// Cmd from perv BeginCmd call</comment>

<cpp:define pos:line="657" pos:column="1">#<cpp:directive pos:line="657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="657" pos:column="9">msoiolevtOpenMask</name></cpp:macro>			\
					<cpp:value pos:line="658" pos:column="41">(msoiolevtOpen | msoiolevtOpenRO | msoiolevtOpenShared)</cpp:value></cpp:define>


<comment type="line" pos:line="661" pos:column="1">// IMsoOLDocument event logging state.</comment>

<cpp:define pos:line="663" pos:column="1">#<cpp:directive pos:line="663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="663" pos:column="9">MSO_S_IOLELS_NO_LOGGING</name></cpp:macro>	<cpp:value pos:line="663" pos:column="33">0x00</cpp:value></cpp:define>
<cpp:define pos:line="664" pos:column="1">#<cpp:directive pos:line="664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="664" pos:column="9">MSO_S_IOLELS_REN_LOGGING</name></cpp:macro>	<cpp:value pos:line="664" pos:column="41">0x01</cpp:value></cpp:define>

<typedef pos:line="666" pos:column="1">typedef <type><name pos:line="666" pos:column="9">int</name></type> <name pos:line="666" pos:column="13">MSOIOLELS</name>;</typedef>

<cpp:define pos:line="668" pos:column="1">#<cpp:directive pos:line="668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="668" pos:column="9">msoiolelsNoLogging</name></cpp:macro>			<cpp:value pos:line="668" pos:column="49">MSO_S_IOLELS_NO_LOGGING</cpp:value></cpp:define>
<cpp:define pos:line="669" pos:column="1">#<cpp:directive pos:line="669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="669" pos:column="9">msoiolelsRenLogging</name></cpp:macro>		<cpp:value pos:line="669" pos:column="41">MSO_S_IOLELS_REN_LOGGING</cpp:value></cpp:define>



<comment type="line" pos:line="673" pos:column="1">// IMsoOLDocument type specifying integers which give information about a</comment>
<comment type="line" pos:line="674" pos:column="1">// document.</comment>

<typedef pos:line="676" pos:column="1">typedef <type><name pos:line="676" pos:column="9">ULONG</name></type> <name pos:line="676" pos:column="15">MSOIOLTDI</name>;</typedef>

<enum pos:line="678" pos:column="1">enum
	<block pos:line="679" pos:column="9">{
	<decl><name pos:line="680" pos:column="9">msoioltdiFirst</name>					<init pos:line="680" pos:column="57">=	<expr><lit:literal type="number" pos:line="680" pos:column="65">1</lit:literal></expr></init></decl><op:operator pos:line="680" pos:column="66">,</op:operator>
	<decl><name pos:line="681" pos:column="9">msoioltdiAttr</name>					<init pos:line="681" pos:column="57">=	<expr><lit:literal type="number" pos:line="681" pos:column="65">1</lit:literal></expr></init></decl><op:operator pos:line="681" pos:column="66">,</op:operator>		<comment type="line" pos:line="681" pos:column="81">// Document attributes</comment>
	<decl><name pos:line="682" pos:column="9">msoioltdiCPagesPrinted</name></decl><op:operator pos:line="682" pos:column="31">,</op:operator>					<comment type="line" pos:line="682" pos:column="65">// Count of pages printed during the</comment>
													<comment type="line" pos:line="683" pos:column="105">// current editing session.  (This may</comment>
													<comment type="line" pos:line="684" pos:column="105">// be negative if the current count of</comment>
													<comment type="line" pos:line="685" pos:column="105">// pages printed is not known.)</comment>
	<decl><name pos:line="686" pos:column="9">msoioltdiDcPagesPrinted</name></decl><op:operator pos:line="686" pos:column="32">,</op:operator>				<comment type="line" pos:line="686" pos:column="65">// Change in the count of pages printed</comment>
													<comment type="line" pos:line="687" pos:column="105">// during the current editing session.</comment>
													<comment type="line" pos:line="688" pos:column="105">// (This may be negative.)</comment>
	<decl><name pos:line="689" pos:column="9">msoioltdiModeIStorage</name></decl><op:operator pos:line="689" pos:column="30">,</op:operator>					<comment type="line" pos:line="689" pos:column="65">// Open mode used with an IStorage</comment>
													<comment type="line" pos:line="690" pos:column="105">// interface.</comment>
	<decl><name pos:line="691" pos:column="9">msoioltdiOWSStgError</name></decl><op:operator pos:line="691" pos:column="29">,</op:operator>					<comment type="line" pos:line="691" pos:column="65">// The document opened for RW on OWS gave</comment>
													<comment type="line" pos:line="692" pos:column="105">// this storage error</comment>
	<decl><name pos:line="693" pos:column="9">msoioltdiReDownload</name></decl><op:operator pos:line="693" pos:column="28">,</op:operator>						<comment type="line" pos:line="693" pos:column="73">// Set this to force OLDoc to redownload the web document</comment>
													<comment type="line" pos:line="694" pos:column="105">// By default this is set to 0;</comment>
													<comment type="line" pos:line="695" pos:column="105">// setting this to 1 enables the redownload on the next call</comment>
													<comment type="line" pos:line="696" pos:column="105">// to GetWzGdn(msoiolgdnTempFilePath).</comment>
													<comment type="line" pos:line="697" pos:column="105">// Note: the redownload will only happen on the first call to</comment>
													<comment type="line" pos:line="698" pos:column="105">// GetWzGdn.</comment>
													<comment type="line" pos:line="699" pos:column="105">// Resetting this to 0 is a success condition that the caller</comment>
													<comment type="line" pos:line="700" pos:column="105">// accepts the redownloaded file and office should discard the</comment>
													<comment type="line" pos:line="701" pos:column="105">// old interface and file handle.</comment>
													<comment type="line" pos:line="702" pos:column="105">// setting this to -1 indicates error and office should reinstate</comment>
													<comment type="line" pos:line="703" pos:column="105">// the original state of OLDoc.</comment>
	<decl><name pos:line="704" pos:column="9">msoioltdiRedirected</name></decl><op:operator pos:line="704" pos:column="28">,</op:operator>						<comment type="line" pos:line="704" pos:column="73">// If this is set (usually after a call to GetFilePath (for urls)</comment>
													<comment type="line" pos:line="705" pos:column="105">// or GetDisplayName (for InFileSys files)) then the persistent</comment>
													<comment type="line" pos:line="706" pos:column="105">// name for this file has changed and needs to be updated in the</comment>
													<comment type="line" pos:line="707" pos:column="105">// apps data structure by calling GetDisplayName(persist)</comment>
													<comment type="line" pos:line="708" pos:column="105">// or something again.</comment>
	<decl><name pos:line="709" pos:column="9">msoioltdiEnableRedirect</name></decl><op:operator pos:line="709" pos:column="32">,</op:operator>				<comment type="line" pos:line="709" pos:column="65">// This flag determines whether or not redirect is allowed.</comment>
	<decl><name pos:line="710" pos:column="9">msoioltdiSniffed</name></decl><op:operator pos:line="710" pos:column="25">,</op:operator>							<comment type="line" pos:line="710" pos:column="81">// Set if we sniffed the file type.</comment>
	<decl><name pos:line="711" pos:column="9">msoioltdiHtml</name></decl><op:operator pos:line="711" pos:column="22">,</op:operator>								<comment type="line" pos:line="711" pos:column="81">// Set if redirect detects as HTML</comment>
	<decl><name pos:line="712" pos:column="9">msoioltdiMHtml</name></decl><op:operator pos:line="712" pos:column="23">,</op:operator>							<comment type="line" pos:line="712" pos:column="73">// Set if redirect detects as MHTML</comment>
	<decl><name pos:line="713" pos:column="9">msoioltdiXml</name></decl><op:operator pos:line="713" pos:column="21">,</op:operator>						<comment type="line" pos:line="713" pos:column="65">// Set if redirect detects as XML</comment>
	<decl><name pos:line="714" pos:column="9">msoioltdiUseDefaultFolderSuffix</name></decl><op:operator pos:line="714" pos:column="40">,</op:operator>    <comment type="line" pos:line="714" pos:column="45">// Set if app overrides existing folder</comment>
	<decl><name pos:line="715" pos:column="9">msoioltdiCodepage</name></decl><op:operator pos:line="715" pos:column="26">,</op:operator>						<comment type="line" pos:line="715" pos:column="73">// The codepage of the document</comment>
	<decl><name pos:line="716" pos:column="9">msoioltdiOWSLowDateTime</name></decl><op:operator pos:line="716" pos:column="32">,</op:operator>				<comment type="line" pos:line="716" pos:column="65">// dwLowDateTime for OWS Urls</comment>
	<decl><name pos:line="717" pos:column="9">msoioltdiOWSHighDateTime</name></decl><op:operator pos:line="717" pos:column="33">,</op:operator>				<comment type="line" pos:line="717" pos:column="65">// dwHighDateTime for OWS Urls</comment>
	<decl><name pos:line="718" pos:column="9">msoioltdiURLSyntax</name></decl><op:operator pos:line="718" pos:column="27">,</op:operator>					<comment type="line" pos:line="718" pos:column="65">// The URL syntax of the Persistent Name</comment>
	<decl><name pos:line="719" pos:column="9">msoioltdiEnableCheckout</name></decl><op:operator pos:line="719" pos:column="32">,</op:operator>				<comment type="line" pos:line="719" pos:column="65">// Enable checkout on open</comment>
	<decl><name pos:line="720" pos:column="9">msoioltdiDelayedCancel</name></decl><op:operator pos:line="720" pos:column="31">,</op:operator>					<comment type="line" pos:line="720" pos:column="65">// Set by OLDoc to abort current operation in a command which cannot</comment>
													<comment type="line" pos:line="721" pos:column="105">// return MSO_S_IOLCMD_CANCEL result back to the app (due to functions</comment>
													<comment type="line" pos:line="722" pos:column="105">// further up the stack dropping the result), the app should check for</comment>
													<comment type="line" pos:line="723" pos:column="105">// this flag when it can safely abort the (open/close) operation.</comment>
	<decl><name pos:line="724" pos:column="9">msoioltdiNoASPRedirection</name></decl><op:operator pos:line="724" pos:column="34">,</op:operator>
	<decl><name pos:line="725" pos:column="9">msoioltdiLim</name></decl>
	}</block>;</enum>


<comment type="line" pos:line="729" pos:column="1">// IMsoOLDocument type for adding additional file and server operations.</comment>
<typedef pos:line="730" pos:column="1">typedef <type><name pos:line="730" pos:column="9">ULONG</name></type> <name pos:line="730" pos:column="15">MSOIOLFOPTYPE</name>;</typedef>
<enum pos:line="731" pos:column="1">enum
	<block pos:line="732" pos:column="9">{
	<decl><name pos:line="733" pos:column="9">msoiolfopFirst</name>					<init pos:line="733" pos:column="57">= <expr><lit:literal type="number" pos:line="733" pos:column="59">1</lit:literal></expr></init></decl><op:operator pos:line="733" pos:column="60">,</op:operator>
	<decl><name pos:line="734" pos:column="9">msoiolfopRename</name>				<init pos:line="734" pos:column="49">= <expr><lit:literal type="number" pos:line="734" pos:column="51">1</lit:literal></expr></init></decl><op:operator pos:line="734" pos:column="52">,</op:operator>		<comment type="line" pos:line="734" pos:column="65">// Rename the file - talk to brianwen if you really need this.</comment>
	<decl><name pos:line="735" pos:column="9">msoiolfopDelete</name></decl><op:operator pos:line="735" pos:column="24">,</op:operator>							<comment type="line" pos:line="735" pos:column="81">// Delete the file</comment>
	<decl><name pos:line="736" pos:column="9">msoiolfopSave</name></decl><op:operator pos:line="736" pos:column="22">,</op:operator>								<comment type="line" pos:line="736" pos:column="81">// Save the file</comment>
	<decl><name pos:line="737" pos:column="9">msoiolfopCreateDir</name></decl><op:operator pos:line="737" pos:column="27">,</op:operator>						<comment type="line" pos:line="737" pos:column="73">// Create a directory on the server if needed</comment>
	<decl><name pos:line="738" pos:column="9">msoiolfopClearFopList</name></decl><op:operator pos:line="738" pos:column="30">,</op:operator>					<comment type="line" pos:line="738" pos:column="65">// Empty the fop list for the document.</comment>
	<decl><name pos:line="739" pos:column="9">msoiolfopLim</name></decl>
	}</block>;</enum>

<typedef pos:line="742" pos:column="1">typedef <type><struct pos:line="742" pos:column="9">struct <name pos:line="742" pos:column="16">tagMSOIOLFOP</name>
<block pos:line="743" pos:column="1">{<public type="default" pos:line="743" pos:column="2">
	<decl_stmt><decl><type><name pos:line="744" pos:column="9">MSOIOLFOPTYPE</name></type> 		<name pos:line="744" pos:column="33">fop</name></decl>;</decl_stmt>					<comment type="line" pos:line="744" pos:column="73">// What you want to do</comment>
	<decl_stmt><decl><type><name pos:line="745" pos:column="9">WCHAR</name> <type:modifier pos:line="745" pos:column="15">*</type:modifier></type>				<name pos:line="745" pos:column="41">pwzFile</name></decl>;</decl_stmt>				<comment type="line" pos:line="745" pos:column="81">// The filename to act on</comment>
													<comment type="line" pos:line="746" pos:column="105">//		For fopSave, this is the full local pathname or relative</comment>
													<comment type="line" pos:line="747" pos:column="105">//			to the current directory.</comment>
													<comment type="line" pos:line="748" pos:column="105">//		For fopDelete &amp; fopRename, relative to the</comment>
													<comment type="line" pos:line="749" pos:column="105">//			doc location.</comment>
	<decl_stmt><decl><type><name pos:line="750" pos:column="9">WCHAR</name> <type:modifier pos:line="750" pos:column="15">*</type:modifier></type>				<name pos:line="750" pos:column="41">pwzNewFile</name></decl>;</decl_stmt>			<comment type="line" pos:line="750" pos:column="73">// The new file name</comment>
													<comment type="line" pos:line="751" pos:column="105">//		For fopRename, this is the new file name, relative to the</comment>
													<comment type="line" pos:line="752" pos:column="105">//			doc location.</comment>
													<comment type="line" pos:line="753" pos:column="105">//		For fopSave, this is the name of the file on the server</comment>
													<comment type="line" pos:line="754" pos:column="105">//			relative to the doc location.  If pwzFile is relative</comment>
													<comment type="line" pos:line="755" pos:column="105">//			then you may set pwzNewFile = pwzFile.</comment>
</public>}</block></struct></type> <name pos:line="756" pos:column="3">MSOIOLFOP</name><op:operator pos:line="756" pos:column="12">,</op:operator> *<name pos:line="756" pos:column="15">LPMSOIOLFOP</name>;</typedef>


<comment type="line" pos:line="759" pos:column="1">// IMsoOLDocument attributes.</comment>

<typedef pos:line="761" pos:column="1">typedef <type><name pos:line="761" pos:column="9">ULONG</name></type> <name pos:line="761" pos:column="15">MSOIOLATTR</name>;</typedef>

<cpp:define pos:line="763" pos:column="1">#<cpp:directive pos:line="763" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="763" pos:column="9">msoiolattrRenLogging</name></cpp:macro>				<cpp:value pos:line="763" pos:column="57">0x00000001</cpp:value></cpp:define>
<cpp:define pos:line="764" pos:column="1">#<cpp:directive pos:line="764" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="764" pos:column="9">msoiolattrNewDocument</name></cpp:macro>				<cpp:value pos:line="764" pos:column="57">0x00000002</cpp:value></cpp:define>
<cpp:define pos:line="765" pos:column="1">#<cpp:directive pos:line="765" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="765" pos:column="9">msoiolattrInFileSys</name></cpp:macro>					<cpp:value pos:line="765" pos:column="65">0x00000004</cpp:value></cpp:define>
<cpp:define pos:line="766" pos:column="1">#<cpp:directive pos:line="766" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="766" pos:column="9">msoiolattrWebDocument</name></cpp:macro>				<cpp:value pos:line="766" pos:column="57">0x00000008</cpp:value></cpp:define>
<cpp:define pos:line="767" pos:column="1">#<cpp:directive pos:line="767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="767" pos:column="9">msoiolattrODMADocument</name></cpp:macro>				<cpp:value pos:line="767" pos:column="57">0x00000010</cpp:value></cpp:define>
<cpp:define pos:line="768" pos:column="1">#<cpp:directive pos:line="768" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="768" pos:column="9">msoiolattrOpen</name></cpp:macro>						<cpp:value pos:line="768" pos:column="65">0x00000020</cpp:value></cpp:define>
<cpp:define pos:line="769" pos:column="1">#<cpp:directive pos:line="769" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="769" pos:column="9">msoiolattrReadOnly</name></cpp:macro>					<cpp:value pos:line="769" pos:column="65">0x00000040</cpp:value></cpp:define>
<cpp:define pos:line="770" pos:column="1">#<cpp:directive pos:line="770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="770" pos:column="9">msoiolattrShared</name></cpp:macro>					<cpp:value pos:line="770" pos:column="65">0x00000080</cpp:value></cpp:define>
<cpp:define pos:line="771" pos:column="1">#<cpp:directive pos:line="771" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="771" pos:column="9">msoiolattrNewlyCreated</name></cpp:macro>				<cpp:value pos:line="771" pos:column="57">0x00000100</cpp:value></cpp:define>
<cpp:define pos:line="772" pos:column="1">#<cpp:directive pos:line="772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="772" pos:column="9">msoiolattrCanChange</name></cpp:macro>					<cpp:value pos:line="772" pos:column="65">0x00000200</cpp:value></cpp:define>
<cpp:define pos:line="773" pos:column="1">#<cpp:directive pos:line="773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="773" pos:column="9">msoiolattrOldVersion</name></cpp:macro>				<cpp:value pos:line="773" pos:column="57">0x00000400</cpp:value></cpp:define>
<cpp:define pos:line="774" pos:column="1">#<cpp:directive pos:line="774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="774" pos:column="9">msoiolattrSaveVersion</name></cpp:macro>				<cpp:value pos:line="774" pos:column="57">0x00000800</cpp:value></cpp:define>
<cpp:define pos:line="775" pos:column="1">#<cpp:directive pos:line="775" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="775" pos:column="9">msoiolattrCheckedOut</name></cpp:macro>				<cpp:value pos:line="775" pos:column="57">0x00001000</cpp:value></cpp:define>
<cpp:define pos:line="776" pos:column="1">#<cpp:directive pos:line="776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="776" pos:column="9">msoiolattrCanCheckOut</name></cpp:macro>				<cpp:value pos:line="776" pos:column="57">0x00002000</cpp:value></cpp:define>
<cpp:define pos:line="777" pos:column="1">#<cpp:directive pos:line="777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="777" pos:column="9">msoiolattrCanToggleRO</name></cpp:macro>				<cpp:value pos:line="777" pos:column="57">0x00004000</cpp:value></cpp:define>
<cpp:define pos:line="778" pos:column="1">#<cpp:directive pos:line="778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="778" pos:column="9">msoiolattrUseCritSection</name></cpp:macro>			<cpp:value pos:line="778" pos:column="57">0x00008000</cpp:value></cpp:define>
<cpp:define pos:line="779" pos:column="1">#<cpp:directive pos:line="779" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="779" pos:column="9">msoiolattrDeleteTemp</name></cpp:macro>				<cpp:value pos:line="779" pos:column="57">0x00010000</cpp:value></cpp:define>
<cpp:define pos:line="780" pos:column="1">#<cpp:directive pos:line="780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="780" pos:column="9">msoiolattrShowUI</name></cpp:macro>					<cpp:value pos:line="780" pos:column="65">0x00020000</cpp:value></cpp:define>
<cpp:define pos:line="781" pos:column="1">#<cpp:directive pos:line="781" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="781" pos:column="9">msoiolattrCmdInProgress</name></cpp:macro>				<cpp:value pos:line="781" pos:column="57">0x00040000</cpp:value></cpp:define>
<cpp:define pos:line="782" pos:column="1">#<cpp:directive pos:line="782" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="782" pos:column="9">msoiolattrReDownload</name></cpp:macro>				<cpp:value pos:line="782" pos:column="57">0x00080000</cpp:value></cpp:define>
<cpp:define pos:line="783" pos:column="1">#<cpp:directive pos:line="783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="783" pos:column="9">msoiolattrAddToRecent</name></cpp:macro>				<cpp:value pos:line="783" pos:column="57">0x00100000</cpp:value></cpp:define>
<cpp:define pos:line="784" pos:column="1">#<cpp:directive pos:line="784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="784" pos:column="9">msoiolattrNotPublishable</name></cpp:macro>			<cpp:value pos:line="784" pos:column="57">0x00200000</cpp:value></cpp:define>
<cpp:define pos:line="785" pos:column="1">#<cpp:directive pos:line="785" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="785" pos:column="9">msoiolattrAsyncStream</name></cpp:macro>				<cpp:value pos:line="785" pos:column="57">0x00400000</cpp:value></cpp:define>
<cpp:define pos:line="786" pos:column="1">#<cpp:directive pos:line="786" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="786" pos:column="9">msoiolattrDoNotUploadPrimaryFile</name></cpp:macro>  	<cpp:value pos:line="786" pos:column="49">0x00800000</cpp:value></cpp:define>
<cpp:define pos:line="787" pos:column="1">#<cpp:directive pos:line="787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="787" pos:column="9">msoiolattrSamePersTempName</name></cpp:macro>			<cpp:value pos:line="787" pos:column="57">0x01000000</cpp:value></cpp:define>
<cpp:define pos:line="788" pos:column="1">#<cpp:directive pos:line="788" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="788" pos:column="9">msoiolattrGroupPrimaryFile</name></cpp:macro>          <cpp:value pos:line="788" pos:column="45">0x02000000</cpp:value></cpp:define>
<cpp:define pos:line="789" pos:column="1">#<cpp:directive pos:line="789" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="789" pos:column="9">msoiolattrOLEEmbedded</name></cpp:macro>				<cpp:value pos:line="789" pos:column="57">0x04000000</cpp:value></cpp:define>
<cpp:define pos:line="790" pos:column="1">#<cpp:directive pos:line="790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="790" pos:column="9">msoiolattrForcePubMon</name></cpp:macro>				<cpp:value pos:line="790" pos:column="57">0x08000000</cpp:value></cpp:define>
<comment type="line" pos:line="791" pos:column="1">// hotfix 641/Office9 254817, bypass rosebud in the save as operations... </comment>
<cpp:define pos:line="792" pos:column="1">#<cpp:directive pos:line="792" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="792" pos:column="9">msoiolattrBypassRosebud</name></cpp:macro>				<cpp:value pos:line="792" pos:column="57">0x10000000</cpp:value></cpp:define>
<cpp:define pos:line="793" pos:column="1">#<cpp:directive pos:line="793" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="793" pos:column="9">msoiolattrNoRosebudPrompt</name></cpp:macro>			<cpp:value pos:line="793" pos:column="57">0x20000000</cpp:value></cpp:define>

<cpp:define pos:line="795" pos:column="1">#<cpp:directive pos:line="795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="795" pos:column="9">msoiolattrDocStoreMask</name></cpp:macro>	<cpp:value pos:line="795" pos:column="33">(msoiolattrNewDocument \
												| msoiolattrInFileSys \
												| msoiolattrWebDocument \
												| msoiolattrODMADocument)</cpp:value></cpp:define>

<cpp:define pos:line="800" pos:column="1">#<cpp:directive pos:line="800" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="800" pos:column="9">msoiolattrOpenModeMask</name></cpp:macro>	<cpp:value pos:line="800" pos:column="33">(msoiolattrOpen \
												| msoiolattrReadOnly \
												| msoiolattrShared)</cpp:value></cpp:define>


<comment type="line" pos:line="805" pos:column="1">// IMsoOLDocument (globals) options.</comment>

<typedef pos:line="807" pos:column="1">typedef <type><name pos:line="807" pos:column="9">ULONG</name></type> <name pos:line="807" pos:column="15">MSOIOLOPT</name>;</typedef>

<cpp:define pos:line="809" pos:column="1">#<cpp:directive pos:line="809" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="809" pos:column="9">msoioloptRenLogging</name></cpp:macro>		<cpp:value pos:line="809" pos:column="41">0x00000001</cpp:value></cpp:define>
<cpp:define pos:line="810" pos:column="1">#<cpp:directive pos:line="810" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="810" pos:column="9">msoioloptOnlyInFileSys</name></cpp:macro>	<cpp:value pos:line="810" pos:column="33">0x00000002</cpp:value></cpp:define>
<cpp:define pos:line="811" pos:column="1">#<cpp:directive pos:line="811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="811" pos:column="9">msoioloptAllowURLs</name></cpp:macro>			<cpp:value pos:line="811" pos:column="49">0x00000004</cpp:value></cpp:define>
<cpp:define pos:line="812" pos:column="1">#<cpp:directive pos:line="812" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="812" pos:column="9">msoioloptAllowODMA</name></cpp:macro>			<cpp:value pos:line="812" pos:column="49">0x00000008</cpp:value></cpp:define>
<cpp:define pos:line="813" pos:column="1">#<cpp:directive pos:line="813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="813" pos:column="9">msoioloptShortTempPaths</name></cpp:macro>	<cpp:value pos:line="813" pos:column="33">0x00000010</cpp:value></cpp:define>
<cpp:define pos:line="814" pos:column="1">#<cpp:directive pos:line="814" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="814" pos:column="9">msoioloptANSITempPaths</name></cpp:macro>	<cpp:value pos:line="814" pos:column="33">0x00000020</cpp:value></cpp:define>
<cpp:define pos:line="815" pos:column="1">#<cpp:directive pos:line="815" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="815" pos:column="9">msoioloptShortDispNames</name></cpp:macro>	<cpp:value pos:line="815" pos:column="33">0x00000040</cpp:value></cpp:define>
<cpp:define pos:line="816" pos:column="1">#<cpp:directive pos:line="816" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="816" pos:column="9">msoioloptANSIDispNames</name></cpp:macro>	<cpp:value pos:line="816" pos:column="33">0x00000080</cpp:value></cpp:define>
<cpp:define pos:line="817" pos:column="1">#<cpp:directive pos:line="817" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="817" pos:column="9">msoioloptANSISaveChars</name></cpp:macro>	<cpp:value pos:line="817" pos:column="33">0x00000100</cpp:value></cpp:define>
<cpp:define pos:line="818" pos:column="1">#<cpp:directive pos:line="818" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="818" pos:column="9">msoioloptNewIsInFileSys</name></cpp:macro>	<cpp:value pos:line="818" pos:column="33">0x00000200</cpp:value></cpp:define>

<cpp:define pos:line="820" pos:column="1">#<cpp:directive pos:line="820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="820" pos:column="9">msoioloptDefault</name></cpp:macro>			<cpp:value pos:line="820" pos:column="49">( msoioloptRenLogging \
												| msoioloptAllowURLs \
												| msoioloptAllowODMA \
												| msoioloptNewIsInFileSys )</cpp:value></cpp:define>


<comment type="line" pos:line="826" pos:column="1">// IMsoOLDocument GUIDs.</comment>

<typedef pos:line="828" pos:column="1">typedef <type><name pos:line="828" pos:column="9">ULONG</name></type> <name pos:line="828" pos:column="15">MSOIOLTOG</name>;</typedef>

<cpp:define pos:line="830" pos:column="1">#<cpp:directive pos:line="830" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="830" pos:column="9">msoioltogRollbackLimit</name></cpp:macro>	<cpp:value pos:line="830" pos:column="33">0x00000001</cpp:value></cpp:define>


<comment type="line" pos:line="833" pos:column="1">// IMsoOLDocument Office Librarian Operations.</comment>

<typedef pos:line="835" pos:column="1">typedef <type><name pos:line="835" pos:column="9">ULONG</name></type> <name pos:line="835" pos:column="15">MSOIOLOP</name>;</typedef>

<cpp:define pos:line="837" pos:column="1">#<cpp:directive pos:line="837" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="837" pos:column="9">msoiolopVersionHist</name></cpp:macro>		<cpp:value pos:line="837" pos:column="41">0x00000001</cpp:value></cpp:define>	<comment type="line" pos:line="837" pos:column="57">// The Version History dialog.</comment>


<comment type="line" pos:line="840" pos:column="1">// Maximum number of displayable findfile dialogs.</comment>

<enum pos:line="842" pos:column="1">enum <block pos:line="842" pos:column="6">{ <decl><name pos:line="842" pos:column="8">msodmfindfileMax</name> <init pos:line="842" pos:column="25">= <expr><lit:literal type="number" pos:line="842" pos:column="27">10</lit:literal></expr></init></decl> }</block>;</enum>

<comment type="line" pos:line="844" pos:column="1">// Event handlers from the apps.</comment>

<decl_stmt><decl><type><name pos:line="846" pos:column="1">interface</name></type> <name pos:line="846" pos:column="11">IMsoFindFile</name></decl>;</decl_stmt>			<comment type="line" pos:line="846" pos:column="41">// Forward declare.</comment>

<decl_stmt><decl><type><name pos:line="848" pos:column="1">interface</name></type> <name pos:line="848" pos:column="11">IMsoOLDocument</name></decl>;</decl_stmt>			<comment type="line" pos:line="848" pos:column="49">// Forward declare.</comment>

<decl_stmt><decl><type><name pos:line="850" pos:column="1">interface</name></type> <name pos:line="850" pos:column="11">IMsoDocumentNotifyList</name></decl>;</decl_stmt>		<comment type="line" pos:line="850" pos:column="49">// Forward declare</comment>

<decl_stmt><decl><type><name pos:line="852" pos:column="1">interface</name></type> <name pos:line="852" pos:column="11">IMsoPKMClient</name></decl>;</decl_stmt>	<comment type="line" pos:line="852" pos:column="33">// Forward declare.</comment>

<typedef pos:line="854" pos:column="1">typedef <type><name pos:line="854" pos:column="9">int</name></type> <name pos:line="854" pos:column="13">MSOINOTIFYVAL</name>;</typedef>

<typedef pos:line="856" pos:column="1">typedef <function_decl><type><name pos:line="856" pos:column="9">HRESULT</name></type> (<name pos:line="856" pos:column="18">OFFOPEN_CALLBACK</name> <type:modifier pos:line="856" pos:column="35">*</type:modifier><name pos:line="856" pos:column="36">PFNDOCNOTIFYCALLBACK</name>) <parameter_list pos:line="856" pos:column="58">(<param><decl><type><specifier pos:line="856" pos:column="59">const</specifier></type> <name pos:line="856" pos:column="65">WCHAR</name> <type:modifier pos:line="856" pos:column="71">*</type:modifier></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="858" pos:column="1">typedef <function_decl><type><name pos:line="858" pos:column="9">HRESULT</name></type> (<name pos:line="858" pos:column="18">OFFOPEN_CALLBACK</name> <type:modifier pos:line="858" pos:column="35">*</type:modifier><name pos:line="858" pos:column="36">PFNDODOCRONOTIFYDLG</name>) <parameter_list pos:line="858" pos:column="57">(<param><decl><type><specifier pos:line="858" pos:column="58">const</specifier></type> <name pos:line="858" pos:column="64">WCHAR</name> <type:modifier pos:line="858" pos:column="70">*</type:modifier></decl></param>, <param><decl><type><specifier pos:line="858" pos:column="73">const</specifier></type> <name pos:line="858" pos:column="79">WCHAR</name> <type:modifier pos:line="858" pos:column="85">*</type:modifier></decl></param>, <param><decl><type><name pos:line="858" pos:column="88">MSOINOTIFYVAL</name> <type:modifier pos:line="858" pos:column="102">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="860" pos:column="1">typedef <function_decl><type><name pos:line="860" pos:column="9">HRESULT</name></type> (<name pos:line="860" pos:column="18">OFFOPEN_CALLBACK</name> <type:modifier pos:line="860" pos:column="35">*</type:modifier><name pos:line="860" pos:column="36">PFNDODOCRWNOTIFYDLG</name>) <parameter_list pos:line="860" pos:column="57">(<param><decl><type><specifier pos:line="860" pos:column="58">const</specifier></type> <name pos:line="860" pos:column="64">WCHAR</name> <type:modifier pos:line="860" pos:column="70">*</type:modifier></decl></param>, <param><decl><type><specifier pos:line="860" pos:column="73">const</specifier></type> <name pos:line="860" pos:column="79">WCHAR</name> <type:modifier pos:line="860" pos:column="85">*</type:modifier></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="862" pos:column="1">typedef <function_decl><type><name pos:line="862" pos:column="9">HRESULT</name></type> (<name pos:line="862" pos:column="18">OFFOPEN_CALLBACK</name> <type:modifier pos:line="862" pos:column="35">*</type:modifier><name pos:line="862" pos:column="36">PFNOPENEVENT</name>) <parameter_list pos:line="862" pos:column="50">(<param><decl><type><name pos:line="862" pos:column="51">MSOIOOP</name></type></decl></param>,
		<param><decl><type><name pos:line="863" pos:column="17">interface</name></type> <name pos:line="863" pos:column="27">IMsoFindFile</name> <type:modifier pos:line="863" pos:column="40">*</type:modifier></decl></param>, <param><decl><type><name pos:line="863" pos:column="43">int</name></type></decl></param>, <param><decl><type><name pos:line="863" pos:column="48">int</name></type></decl></param>, <param><decl><type><name pos:line="863" pos:column="53">int</name></type></decl></param>, <param><decl><type><name pos:line="863" pos:column="58">int</name> <type:modifier pos:line="863" pos:column="62">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="865" pos:column="1">typedef <function_decl><type><name pos:line="865" pos:column="9">BOOL</name></type> (<name pos:line="865" pos:column="15">OFFOPEN_CALLBACK</name> <type:modifier pos:line="865" pos:column="32">*</type:modifier><name pos:line="865" pos:column="33">PFNDMFSCHANGE</name>) <parameter_list pos:line="865" pos:column="48">(<param><decl><type><name pos:line="865" pos:column="49">MSODMFSCHANGE</name></type></decl></param>, <param><decl><type><name pos:line="865" pos:column="64">WCHAR</name> <type:modifier pos:line="865" pos:column="70">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="865" pos:column="73">WCHAR</name> <type:modifier pos:line="865" pos:column="79">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="867" pos:column="1">typedef <function_decl><type><name pos:line="867" pos:column="9">BOOL</name></type> (<name pos:line="867" pos:column="15">OFFOPEN_CALLBACK</name> <type:modifier pos:line="867" pos:column="32">*</type:modifier><name pos:line="867" pos:column="33">PFNDMFLDRICONHDLR</name>) <parameter_list pos:line="867" pos:column="52">(<param><decl><type><name pos:line="867" pos:column="53">WCHAR</name> <type:modifier pos:line="867" pos:column="59">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="867" pos:column="62">BOOL</name></type></decl></param>, <param><decl><type><name pos:line="867" pos:column="68">HIMAGELIST</name></type></decl></param>, <param><decl><type><name pos:line="867" pos:column="80">int</name> <type:modifier pos:line="867" pos:column="84">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="869" pos:column="1">typedef <function_decl><type><name pos:line="869" pos:column="9">HRESULT</name></type> (<name pos:line="869" pos:column="18">OFFOPEN_CALLBACK</name> <type:modifier pos:line="869" pos:column="35">*</type:modifier><name pos:line="869" pos:column="36">PFNCHECKDOCAVAILABLERW</name>) <parameter_list pos:line="869" pos:column="60">(<param><decl><type><specifier pos:line="869" pos:column="61">const</specifier></type> <name pos:line="869" pos:column="67">WCHAR</name> <type:modifier pos:line="869" pos:column="73">*</type:modifier></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="871" pos:column="1">typedef <function_decl><type><name pos:line="871" pos:column="9">HRESULT</name></type> (<name pos:line="871" pos:column="18">OFFOPEN_CALLBACK</name> <type:modifier pos:line="871" pos:column="35">*</type:modifier><name pos:line="871" pos:column="36">PFNCOMPAREDOCTIMESTAMP</name>) <parameter_list pos:line="871" pos:column="60">(<param><decl><type><specifier pos:line="871" pos:column="61">const</specifier></type> <name pos:line="871" pos:column="67">WCHAR</name> <type:modifier pos:line="871" pos:column="73">*</type:modifier></decl></param>, <param><decl><type><name pos:line="871" pos:column="76">FILETIME</name></type></decl></param>, <param><decl><type><name pos:line="871" pos:column="86">MSOINOTIFYVAL</name> <type:modifier pos:line="871" pos:column="100">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="873" pos:column="1">typedef <function_decl><type><name pos:line="873" pos:column="9">BOOL</name></type> (<name pos:line="873" pos:column="15">OFFOPEN_CALLBACK</name> <type:modifier pos:line="873" pos:column="32">*</type:modifier><name pos:line="873" pos:column="33">PFNTRANSLATECODEPAGE</name>) <parameter_list pos:line="873" pos:column="55">(<param><decl><type><name pos:line="873" pos:column="56">LPSTR</name></type></decl></param>, <param><decl><type><name pos:line="873" pos:column="63">DWORD</name></type></decl></param>, <param><decl><type><name pos:line="873" pos:column="70">DWORD</name></type></decl></param>, <param><decl><type><name pos:line="873" pos:column="77">BOOL</name></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="875" pos:column="1">typedef <function_decl><type><name pos:line="875" pos:column="9">BOOL</name></type> (<name pos:line="875" pos:column="15">OFFOPEN_CALLBACK</name> <type:modifier pos:line="875" pos:column="32">*</type:modifier><name pos:line="875" pos:column="33">PFNAPPREADWRITEPROP</name>) <parameter_list pos:line="875" pos:column="54">(<param><decl><type><name pos:line="875" pos:column="55">WCHAR</name> <type:modifier pos:line="875" pos:column="61">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="875" pos:column="64">WCHAR</name> <type:modifier pos:line="875" pos:column="70">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="875" pos:column="73">void</name> <type:modifier pos:line="875" pos:column="78">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="875" pos:column="81">BOOL</name></type></decl></param>, <param><decl><type><name pos:line="875" pos:column="87">BOOL</name></type></decl></param>)</parameter_list>;</function_decl></typedef>

<typedef pos:line="877" pos:column="1">typedef <function_decl><type><name pos:line="877" pos:column="9">BOOL</name></type> (<name pos:line="877" pos:column="15">OFFOPEN_CALLBACK</name> <type:modifier pos:line="877" pos:column="32">*</type:modifier><name pos:line="877" pos:column="33">PFNFDAACTIONFUNCTION</name>) <parameter_list pos:line="877" pos:column="55">(<param><decl><type><specifier pos:line="877" pos:column="56">const</specifier></type> <name pos:line="877" pos:column="62">WCHAR</name> <type:modifier pos:line="877" pos:column="68">*</type:modifier></decl></param>, <param><decl><type><name pos:line="877" pos:column="71">int</name></type></decl></param>)</parameter_list>;</function_decl></typedef>

<comment type="line" pos:line="879" pos:column="1">// IMsoSearch SetSearchPathEx flags.</comment>

<typedef pos:line="881" pos:column="1">typedef <type><name pos:line="881" pos:column="9">DWORD</name></type> <name pos:line="881" pos:column="15">MSOSPF</name>;</typedef>

<cpp:define pos:line="883" pos:column="1">#<cpp:directive pos:line="883" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="883" pos:column="9">msospfNone</name></cpp:macro>					<cpp:value pos:line="883" pos:column="57">0</cpp:value></cpp:define>
<cpp:define pos:line="884" pos:column="1">#<cpp:directive pos:line="884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="884" pos:column="9">msospfDontClearFirst</name></cpp:macro>		<cpp:value pos:line="884" pos:column="41">0x00000001</cpp:value></cpp:define>		<comment type="line" pos:line="884" pos:column="65">// Don't clear the query first</comment>

<comment type="line" pos:line="886" pos:column="1">// instrumented version only</comment>
<comment type="line" pos:line="887" pos:column="1">// This is an api we export to client apps so they can give us their</comment>
<comment type="line" pos:line="888" pos:column="1">// instrumentation proc</comment>

<comment type="line" pos:line="890" pos:column="1">// type for the instrumentation proc</comment>
<typedef pos:line="891" pos:column="1">typedef <function_decl><type><name pos:line="891" pos:column="9">BOOL_SDM</name></type> (<name pos:line="891" pos:column="19">CALLBACK</name> <type:modifier pos:line="891" pos:column="28">*</type:modifier><name pos:line="891" pos:column="29">PFNINSTRUMENTED</name>)<parameter_list pos:line="891" pos:column="45">(<param><decl><type><name pos:line="891" pos:column="46">DLM</name></type> <name pos:line="891" pos:column="50">dlm</name></decl></param>, <param><decl><type><name pos:line="891" pos:column="55">TMC</name></type> <name pos:line="891" pos:column="59">tmc</name></decl></param>, <param><decl><type><name pos:line="891" pos:column="64">UCBK_SDM</name></type> <name pos:line="891" pos:column="73">wNew</name></decl></param>,
		<param><decl><type><name pos:line="892" pos:column="17">UCBK_SDM</name></type> <name pos:line="892" pos:column="26">wOld</name></decl></param>, <param><decl><type><name pos:line="892" pos:column="32">UCBK_SDM</name></type> <name pos:line="892" pos:column="41">wParam</name></decl></param>)</parameter_list>;</function_decl></typedef>

<cpp:ifdef pos:line="894" pos:column="1">#<cpp:directive pos:line="894" pos:column="2">ifdef</cpp:directive> <name pos:line="894" pos:column="8">INSTRUMENTED</name></cpp:ifdef>
<macro><name pos:line="895" pos:column="1">MSOAPI_</name><argument_list pos:line="895" pos:column="8">(<argument pos:line="895" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="895" pos:column="15">RegisterPfnInstrumented</name><argument_list pos:line="895" pos:column="38">(<argument pos:line="895" pos:column="39">PFNINSTRUMENTED pfnInstrumented</argument>)</argument_list></macro><empty_stmt pos:line="895" pos:column="71">;</empty_stmt>
<cpp:endif pos:line="896" pos:column="1">#<cpp:directive pos:line="896" pos:column="2">endif</cpp:directive></cpp:endif>


<comment type="line" pos:line="899" pos:column="1">// defines for false tmc's used by instrumented version</comment>
<comment type="line" pos:line="900" pos:column="1">// in order to treat certain types of information as</comment>
<comment type="line" pos:line="901" pos:column="1">// data from a control</comment>
<cpp:ifdef pos:line="902" pos:column="1">#<cpp:directive pos:line="902" pos:column="2">ifdef</cpp:directive> <name pos:line="902" pos:column="8">INSTRUMENTED</name></cpp:ifdef>
<cpp:define pos:line="903" pos:column="1">#<cpp:directive pos:line="903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="903" pos:column="9">tmcInstrumentedFakeStart</name></cpp:macro> <cpp:value pos:line="903" pos:column="34">(TMC)(0x300)</cpp:value></cpp:define>
<cpp:define pos:line="904" pos:column="1">#<cpp:directive pos:line="904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="904" pos:column="9">tmcFakeToolbarStart</name></cpp:macro> <cpp:value pos:line="904" pos:column="29">(TMC)(tmcInstrumentedFakeStart + 0x10)</cpp:value></cpp:define>
<cpp:define pos:line="905" pos:column="1">#<cpp:directive pos:line="905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="905" pos:column="9">tmcFakeQueryInfStart</name></cpp:macro> <cpp:value pos:line="905" pos:column="30">(TMC)(tmcInstrumentedFakeStart + 0x80)</cpp:value></cpp:define>

<comment type="line" pos:line="907" pos:column="1">// fake tmc's for the toolbar buttons</comment>
<cpp:define pos:line="908" pos:column="1">#<cpp:directive pos:line="908" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="908" pos:column="9">tmcFakeTBtnFileInfo</name></cpp:macro> <cpp:value pos:line="908" pos:column="29">(TMC)(tmcFakeToolbarStart + 2)</cpp:value></cpp:define>
<cpp:define pos:line="909" pos:column="1">#<cpp:directive pos:line="909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="909" pos:column="9">tmcFakeTBtnSummary</name></cpp:macro> <cpp:value pos:line="909" pos:column="28">(TMC)(tmcFakeToolbarStart + 3)</cpp:value></cpp:define>
<cpp:define pos:line="910" pos:column="1">#<cpp:directive pos:line="910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="910" pos:column="9">tmcFakeTBtnPreview</name></cpp:macro> <cpp:value pos:line="910" pos:column="28">(TMC)(tmcFakeToolbarStart + 4)</cpp:value></cpp:define>
<cpp:define pos:line="911" pos:column="1">#<cpp:directive pos:line="911" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="911" pos:column="9">tmcFakeTBtnCommands</name></cpp:macro> <cpp:value pos:line="911" pos:column="29">(TMC)(tmcFakeToolbarStart + 5)</cpp:value></cpp:define>
<cpp:define pos:line="912" pos:column="1">#<cpp:directive pos:line="912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="912" pos:column="9">tmcFakeTBtnFind</name></cpp:macro> <cpp:value pos:line="912" pos:column="25">(TMC)(tmcFakeToolbarStart + 6)</cpp:value></cpp:define>
<cpp:define pos:line="913" pos:column="1">#<cpp:directive pos:line="913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="913" pos:column="9">tmcFakeTBtnParentFolder</name></cpp:macro> <cpp:value pos:line="913" pos:column="33">(TMC)(tmcFakeToolbarStart + 7)</cpp:value></cpp:define>
<cpp:define pos:line="914" pos:column="1">#<cpp:directive pos:line="914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="914" pos:column="9">tmcFakeTBtnNewFolder</name></cpp:macro> <cpp:value pos:line="914" pos:column="30">(TMC)(tmcFakeToolbarStart + 8)</cpp:value></cpp:define>
<cpp:define pos:line="915" pos:column="1">#<cpp:directive pos:line="915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="915" pos:column="9">tmcFakeTBtnQueryMenu</name></cpp:macro> <cpp:value pos:line="915" pos:column="30">(TMC)(tmcFakeToolbarStart + 10)</cpp:value></cpp:define>
<cpp:define pos:line="916" pos:column="1">#<cpp:directive pos:line="916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="916" pos:column="9">tmcFakeTBtnCmdMenu</name></cpp:macro> <cpp:value pos:line="916" pos:column="28">(TMC)(tmcFakeToolbarStart + 11)</cpp:value></cpp:define>
<cpp:define pos:line="917" pos:column="1">#<cpp:directive pos:line="917" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="917" pos:column="9">tmcFakeTBtnGotoFav</name></cpp:macro> <cpp:value pos:line="917" pos:column="28">(TMC)(tmcFakeToolbarStart + 12)</cpp:value></cpp:define>
<cpp:define pos:line="918" pos:column="1">#<cpp:directive pos:line="918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="918" pos:column="9">tmcFakeTBtnFavMenu</name></cpp:macro> <cpp:value pos:line="918" pos:column="28">(TMC)(tmcFakeToolbarStart + 13)</cpp:value></cpp:define>

<comment type="line" pos:line="920" pos:column="1">// fake tmc's for various bits of query information</comment>
<cpp:define pos:line="921" pos:column="1">#<cpp:directive pos:line="921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="921" pos:column="9">tmcFakeQueryMultiDirs</name></cpp:macro> <cpp:value pos:line="921" pos:column="31">(TMC)(tmcFakeQueryInfStart+0)</cpp:value></cpp:define>
<cpp:define pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="922" pos:column="9">tmcFakeQueryTextOrPropUsed</name></cpp:macro> <cpp:value pos:line="922" pos:column="36">(TMC)(tmcFakeQueryInfStart + 1)</cpp:value></cpp:define>
<cpp:define pos:line="923" pos:column="1">#<cpp:directive pos:line="923" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="923" pos:column="9">tmcFakeQueryMultiWords</name></cpp:macro> <cpp:value pos:line="923" pos:column="32">(TMC)(tmcFakeQueryInfStart+2)</cpp:value></cpp:define>
<cpp:define pos:line="924" pos:column="1">#<cpp:directive pos:line="924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="924" pos:column="9">tmcFakeQueryLastModUsed</name></cpp:macro> <cpp:value pos:line="924" pos:column="33">(TMC)(tmcFakeQueryInfStart +3)</cpp:value></cpp:define>
<cpp:define pos:line="925" pos:column="1">#<cpp:directive pos:line="925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="925" pos:column="9">tmcFakeQueryFilenameUsed</name></cpp:macro> <cpp:value pos:line="925" pos:column="34">(TMC)(tmcFakeQueryInfStart + 4)</cpp:value></cpp:define>
<cpp:define pos:line="926" pos:column="1">#<cpp:directive pos:line="926" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="926" pos:column="9">tmcFakeQueryAdvancedUsed</name></cpp:macro> <cpp:value pos:line="926" pos:column="34">(TMC)(tmcFakeQueryInfStart + 5)</cpp:value></cpp:define>
<cpp:define pos:line="927" pos:column="1">#<cpp:directive pos:line="927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="927" pos:column="9">tmcFakeQueryIndexUsed</name></cpp:macro> <cpp:value pos:line="927" pos:column="31">(TMC)(tmcFakeQueryInfStart + 6)</cpp:value></cpp:define>
<cpp:define pos:line="928" pos:column="1">#<cpp:directive pos:line="928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="928" pos:column="9">tmcFakeQueryMatchAllWords</name></cpp:macro> <cpp:value pos:line="928" pos:column="35">(TMC)(tmcFakeQueryInfStart+7)</cpp:value></cpp:define>
<cpp:define pos:line="929" pos:column="1">#<cpp:directive pos:line="929" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="929" pos:column="9">tmcFakeQueryMatchCase</name></cpp:macro> <cpp:value pos:line="929" pos:column="31">(TMC)(tmcFakeQueryInfStart+8)</cpp:value></cpp:define>
<cpp:define pos:line="930" pos:column="1">#<cpp:directive pos:line="930" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="930" pos:column="9">tmcFakeQuerySearchSub</name></cpp:macro> <cpp:value pos:line="930" pos:column="31">(TMC)(tmcFakeQueryInfStart+9)</cpp:value></cpp:define>
<cpp:define pos:line="931" pos:column="1">#<cpp:directive pos:line="931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="931" pos:column="9">tmcFakeQueryGroupFolder</name></cpp:macro> <cpp:value pos:line="931" pos:column="33">(TMC)(tmcFakeQueryInfStart+10)</cpp:value></cpp:define>
<cpp:define pos:line="932" pos:column="1">#<cpp:directive pos:line="932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="932" pos:column="9">tmcFakeQuerySortSet</name></cpp:macro> <cpp:value pos:line="932" pos:column="29">(TMC)(tmcFakeQueryInfStart + 11)</cpp:value></cpp:define>
<cpp:define pos:line="933" pos:column="1">#<cpp:directive pos:line="933" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="933" pos:column="9">tmcFakeQueryOnlyFoldChanged</name></cpp:macro> <cpp:value pos:line="933" pos:column="37">(TMC)(tmcFakeQueryInfStart + 12)</cpp:value></cpp:define>
<cpp:define pos:line="934" pos:column="1">#<cpp:directive pos:line="934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="934" pos:column="9">tmcFakeQueryActiveView0</name></cpp:macro> <cpp:value pos:line="934" pos:column="33">(TMC)(tmcFakeQueryInfStart + 13)</cpp:value></cpp:define>
<cpp:define pos:line="935" pos:column="1">#<cpp:directive pos:line="935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="935" pos:column="9">tmcFakeQueryIndexerActive</name></cpp:macro> <cpp:value pos:line="935" pos:column="35">(TMC)(tmcFakeQueryInfStart + 14)</cpp:value></cpp:define>
<cpp:define pos:line="936" pos:column="1">#<cpp:directive pos:line="936" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="936" pos:column="9">tmcFakeQueryDismissAction</name></cpp:macro> <cpp:value pos:line="936" pos:column="35">(TMC)(tmcFakeQueryInfStart + 15)</cpp:value></cpp:define>
<cpp:define pos:line="937" pos:column="1">#<cpp:directive pos:line="937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="937" pos:column="9">tmcFakeQueryInaccurateResults</name></cpp:macro> <cpp:value pos:line="937" pos:column="39">(TMC)(tmcFakeQueryInfStart + 16)</cpp:value></cpp:define>
<cpp:define pos:line="938" pos:column="1">#<cpp:directive pos:line="938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="938" pos:column="9">tmcFakeQueryClickOpen</name></cpp:macro> <cpp:value pos:line="938" pos:column="31">(TMC)(tmcFakeQueryInfStart + 17)</cpp:value></cpp:define>
<cpp:define pos:line="939" pos:column="1">#<cpp:directive pos:line="939" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="939" pos:column="9">tmcFakeQueryNonClickOpen</name></cpp:macro> <cpp:value pos:line="939" pos:column="34">(TMC)(tmcFakeQueryInfStart + 18)</cpp:value></cpp:define>
<cpp:define pos:line="940" pos:column="1">#<cpp:directive pos:line="940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="940" pos:column="9">tmcFakeQueryActiveView1</name></cpp:macro> <cpp:value pos:line="940" pos:column="33">(TMC)(tmcFakeQueryInfStart + 23)</cpp:value></cpp:define>

<comment type="line" pos:line="942" pos:column="1">// miscellaneous fake tmc's</comment>
<cpp:define pos:line="943" pos:column="1">#<cpp:directive pos:line="943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="943" pos:column="9">tmcFakeFolderDblClick</name></cpp:macro> <cpp:value pos:line="943" pos:column="31">(TMC)(tmcFakeQueryInfStart + 19)</cpp:value></cpp:define>
<cpp:define pos:line="944" pos:column="1">#<cpp:directive pos:line="944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="944" pos:column="9">tmcFakeDialogDismiss</name></cpp:macro> <cpp:value pos:line="944" pos:column="30">(TMC)(tmcFakeQueryInfStart + 20)</cpp:value></cpp:define>
<cpp:define pos:line="945" pos:column="1">#<cpp:directive pos:line="945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="945" pos:column="9">tmcFakeEnteredDirName</name></cpp:macro> <cpp:value pos:line="945" pos:column="31">(TMC)(tmcFakeQueryInfStart + 21)</cpp:value></cpp:define>
<cpp:define pos:line="946" pos:column="1">#<cpp:directive pos:line="946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="946" pos:column="9">tmcFakeStopButton</name></cpp:macro> <cpp:value pos:line="946" pos:column="27">(TMC)(tmcFakeQueryInfStart + 22)</cpp:value></cpp:define>

<comment type="line" pos:line="948" pos:column="1">// fake fci's (dialog identifiers) for instrumentation</comment>
<cpp:define pos:line="949" pos:column="1">#<cpp:directive pos:line="949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="949" pos:column="9">fciFakeDlgFind</name></cpp:macro> <cpp:value pos:line="949" pos:column="24">(0xC032)</cpp:value></cpp:define>
<cpp:define pos:line="950" pos:column="1">#<cpp:directive pos:line="950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="950" pos:column="9">fciFakeDlgOpen</name></cpp:macro> <cpp:value pos:line="950" pos:column="24">(0xC038)</cpp:value></cpp:define>

<comment type="line" pos:line="952" pos:column="1">// fake dialog message to tell word that our query is finished</comment>
<comment type="line" pos:line="953" pos:column="1">// and that word should log the query flags</comment>
<cpp:define pos:line="954" pos:column="1">#<cpp:directive pos:line="954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="954" pos:column="9">dlmLogQueryInfo</name></cpp:macro> <cpp:value pos:line="954" pos:column="25">(dlmUserMin + 2)</cpp:value></cpp:define>

<cpp:endif pos:line="956" pos:column="1">#<cpp:directive pos:line="956" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="956" pos:column="8">//defined(INSTRUMENTED)</comment>


<comment type="line" format="doxygen" pos:line="959" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="960" pos:column="1">// Places constants</comment>
<comment type="line" pos:line="961" pos:column="1">// </comment>
<cpp:define pos:line="962" pos:column="1">#<cpp:directive pos:line="962" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="962" pos:column="9">MSODMFFPLACES_HISTORY</name></cpp:macro>		<cpp:value pos:line="962" pos:column="41">0x00000001</cpp:value></cpp:define>
<cpp:define pos:line="963" pos:column="1">#<cpp:directive pos:line="963" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="963" pos:column="9">MSODMFFPLACES_MYDOCUMENTS</name></cpp:macro>   <cpp:value pos:line="963" pos:column="37">0x00000002</cpp:value></cpp:define>
<cpp:define pos:line="964" pos:column="1">#<cpp:directive pos:line="964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="964" pos:column="9">MSODMFFPLACES_DESKTOP</name></cpp:macro>       <cpp:value pos:line="964" pos:column="37">0x00000004</cpp:value></cpp:define>
<cpp:define pos:line="965" pos:column="1">#<cpp:directive pos:line="965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="965" pos:column="9">MSODMFFPLACES_FAVORITES</name></cpp:macro>		<cpp:value pos:line="965" pos:column="41">0x00000008</cpp:value></cpp:define>
<cpp:define pos:line="966" pos:column="1">#<cpp:directive pos:line="966" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="966" pos:column="9">MSODMFFPLACES_WEBFOLDERS</name></cpp:macro>	<cpp:value pos:line="966" pos:column="41">0x00000010</cpp:value></cpp:define>
<cpp:define pos:line="967" pos:column="1">#<cpp:directive pos:line="967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="967" pos:column="9">MSODMFFPLACES_ALL</name></cpp:macro>			<cpp:value pos:line="967" pos:column="49">(MSODMFFPLACES_HISTORY | MSODMFFPLACES_MYDOCUMENTS | MSODMFFPLACES_DESKTOP | MSODMFFPLACES_FAVORITES | MSODMFFPLACES_WEBFOLDERS)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="970" pos:column="1">/////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="971" pos:column="1">// Places Icons</comment>
<comment type="line" pos:line="972" pos:column="1">//</comment>
<typedef pos:line="973" pos:column="1">typedef <type><name pos:line="973" pos:column="9">int</name></type> <name pos:line="973" pos:column="13">MSODMFFPI</name>;</typedef>

<enum pos:line="975" pos:column="1">enum
	<block pos:line="976" pos:column="9">{
	<decl><name pos:line="977" pos:column="9">msodmffpiFirst</name></decl><op:operator pos:line="977" pos:column="23">,</op:operator> <decl><name pos:line="977" pos:column="25">msodmffpiMin</name> <init pos:line="977" pos:column="38">= <expr><name pos:line="977" pos:column="40">msodmffpiFirst</name></expr></init></decl><op:operator pos:line="977" pos:column="54">,</op:operator> <decl><name pos:line="977" pos:column="56">msodmffpiMinLessOne</name> <init pos:line="977" pos:column="76">= <expr><name pos:line="977" pos:column="78">msodmffpiMin</name> <op:operator pos:line="977" pos:column="91">-</op:operator> <lit:literal type="number" pos:line="977" pos:column="93">1</lit:literal></expr></init></decl><op:operator pos:line="977" pos:column="94">,</op:operator>

	<decl><name pos:line="979" pos:column="9">msodmffpiActiveDesktop</name></decl><op:operator pos:line="979" pos:column="31">,</op:operator>
	<decl><name pos:line="980" pos:column="9">msodmffpiUser</name></decl><op:operator pos:line="980" pos:column="22">,</op:operator>
	<decl><name pos:line="981" pos:column="9">msodmffpiFavorites</name></decl><op:operator pos:line="981" pos:column="27">,</op:operator>
	<decl><name pos:line="982" pos:column="9">msodmffpiDesktop</name></decl><op:operator pos:line="982" pos:column="25">,</op:operator>
	<decl><name pos:line="983" pos:column="9">msodmffpiPublishing</name></decl><op:operator pos:line="983" pos:column="28">,</op:operator>
	<decl><name pos:line="984" pos:column="9">msodmffpiAdmin</name></decl><op:operator pos:line="984" pos:column="23">,</op:operator>
	<decl><name pos:line="985" pos:column="9">msodmffpiRecent</name></decl><op:operator pos:line="985" pos:column="24">,</op:operator>

	<decl><name pos:line="987" pos:column="9">msodmffpiMax</name></decl><op:operator pos:line="987" pos:column="21">,</op:operator> <decl><name pos:line="987" pos:column="23">msodmffpiLast</name> <init pos:line="987" pos:column="37">= <expr><name pos:line="987" pos:column="39">msodmffpiMax</name> <op:operator pos:line="987" pos:column="52">-</op:operator> <lit:literal type="number" pos:line="987" pos:column="54">1</lit:literal></expr></init></decl>
	}</block>;</enum>


<comment type="line" format="doxygen" pos:line="991" pos:column="1">/////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="992" pos:column="1">// Dynamic Places Structure</comment>
<comment type="line" pos:line="993" pos:column="1">//</comment>
<typedef pos:line="994" pos:column="1">typedef <type><struct pos:line="994" pos:column="9">struct <name pos:line="994" pos:column="16">tagMSODMFFDP</name>
<block pos:line="995" pos:column="1">{<public type="default" pos:line="995" pos:column="2">
	<decl_stmt><decl><type><name pos:line="996" pos:column="9">MSODMFFPI</name></type> <name pos:line="996" pos:column="19">pi</name></decl>;</decl_stmt>                 <comment type="line" pos:line="996" pos:column="39">// Which icon to show</comment>
	<decl_stmt><decl><type><specifier pos:line="997" pos:column="9">const</specifier> <name pos:line="997" pos:column="15">WCHAR</name> <type:modifier pos:line="997" pos:column="21">*</type:modifier></type><name pos:line="997" pos:column="22">wzDisplayName</name></decl>;</decl_stmt>   <comment type="line" pos:line="997" pos:column="39">// The display name of the place</comment>
	<decl_stmt><decl><type><specifier pos:line="998" pos:column="9">const</specifier> <name pos:line="998" pos:column="15">WCHAR</name> <type:modifier pos:line="998" pos:column="21">*</type:modifier></type><name pos:line="998" pos:column="22">wzPath</name></decl>;</decl_stmt>          <comment type="line" pos:line="998" pos:column="39">// The physical location the place points to</comment>
</public>}</block></struct></type> <name pos:line="999" pos:column="3">MSODMFFDP</name><op:operator pos:line="999" pos:column="12">,</op:operator> *<name pos:line="999" pos:column="15">PMSODMFFDP</name>;</typedef>


<comment type="line" format="doxygen" pos:line="1002" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1003" pos:column="1">// IMsoFindFile</comment>
<comment type="line" pos:line="1004" pos:column="1">//</comment>
<comment type="line" pos:line="1005" pos:column="1">// IFindFile represents an instance of Find File.</comment>

<decl_stmt><decl><type><name pos:line="1007" pos:column="1">interface</name></type> <name pos:line="1007" pos:column="11">IMsoSearch</name></decl>;</decl_stmt>				<comment type="line" pos:line="1007" pos:column="49">// Forward declare</comment>
<decl_stmt><decl><type><name pos:line="1008" pos:column="1">interface</name></type> <name pos:line="1008" pos:column="11">IMsoFileTypeList</name></decl>;</decl_stmt>		<comment type="line" pos:line="1008" pos:column="41">// Forward declare</comment>
<decl_stmt><decl><type><name pos:line="1009" pos:column="1">interface</name></type> <name pos:line="1009" pos:column="11">IMsoControlList</name></decl>;</decl_stmt>			<comment type="line" pos:line="1009" pos:column="49">// Forward declare</comment>
<decl_stmt><decl><type><name pos:line="1010" pos:column="1">interface</name></type> <name pos:line="1010" pos:column="11">IMsoCommandList</name></decl>;</decl_stmt>			<comment type="line" pos:line="1010" pos:column="49">// Forward declare</comment>
<decl_stmt><decl><type><name pos:line="1011" pos:column="1">interface</name></type> <name pos:line="1011" pos:column="11">IMsoAppPreview</name></decl>;</decl_stmt>			<comment type="line" pos:line="1011" pos:column="49">// Forward declare</comment>
<decl_stmt><decl><type><name pos:line="1012" pos:column="1">interface</name></type> <name pos:line="1012" pos:column="11">IMsoCodePageList</name></decl>;</decl_stmt>        <comment type="line" pos:line="1012" pos:column="36">// Forward declare</comment>

<cpp:undef pos:line="1014" pos:column="1">#<cpp:directive pos:line="1014" pos:column="2">undef</cpp:directive> <name pos:line="1014" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="1015" pos:column="1">#<cpp:directive pos:line="1015" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1015" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="1015" pos:column="19">IMsoFindFile</cpp:value></cpp:define>

<macro><name pos:line="1017" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="1017" pos:column="19">(<argument pos:line="1017" pos:column="20">IMsoFindFile</argument>, <argument pos:line="1017" pos:column="34">IUnknown</argument>)</argument_list></macro>
<block pos:line="1018" pos:column="1">{
	<comment type="line" pos:line="1019" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1020" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="1021" pos:column="9">//</comment>
	<comment type="line" pos:line="1022" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="1023" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="1025" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1026" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="1028" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1028" pos:column="19">QueryInterface</name>) <parameter_list pos:line="1028" pos:column="35">(<param><decl><type><name pos:line="1028" pos:column="36">THIS_</name> <name pos:line="1028" pos:column="42">REFIID</name></type> <name pos:line="1028" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="1028" pos:column="57">void</name> <type:modifier pos:line="1028" pos:column="62">*</type:modifier> <type:modifier pos:line="1028" pos:column="64">*</type:modifier></type> <name pos:line="1028" pos:column="66">ppvObject</name></decl></param>)</parameter_list> <name pos:line="1028" pos:column="77">PURE</name>;</function_decl>

	<macro><name pos:line="1030" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1030" pos:column="19">(<argument pos:line="1030" pos:column="20">ULONG</argument>, <argument pos:line="1030" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1030" pos:column="35">(</op:operator><name pos:line="1030" pos:column="36">THIS</name><op:operator pos:line="1030" pos:column="40">)</op:operator> <name pos:line="1030" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="1032" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1032" pos:column="19">(<argument pos:line="1032" pos:column="20">ULONG</argument>, <argument pos:line="1032" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1032" pos:column="36">(</op:operator><name pos:line="1032" pos:column="37">THIS</name><op:operator pos:line="1032" pos:column="41">)</op:operator> <name pos:line="1032" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1034" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1035" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="1036" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="1038" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1039" pos:column="9">// Base dialog configuration methods.</comment>

	<comment type="line" pos:line="1041" pos:column="9">// FSaveAs() - Returns fTrue if this is a Save As dialog.</comment>

	<name pos:line="1043" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1043" pos:column="19">(<argument><expr><name pos:line="1043" pos:column="20">MSOBOOL</name></expr></argument>, <argument><expr><name pos:line="1043" pos:column="29">FSaveAs</name></expr></argument>)</argument_list> <argument_list pos:line="1043" pos:column="38">(<argument><expr><name pos:line="1043" pos:column="39">THIS</name></expr></argument>)</argument_list> <name pos:line="1043" pos:column="45">CONST_METHOD_FF</name> <name pos:line="1043" pos:column="61">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1045" pos:column="9">// SetFSaveAs() - Changes the dialog from an Open to a Save As dialog</comment>
	<comment type="line" pos:line="1046" pos:column="9">// or back.  Can be set only when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1048" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1048" pos:column="19">SetFSaveAs</name>) <parameter_list pos:line="1048" pos:column="31">(<param><decl><type><name pos:line="1048" pos:column="32">THIS_</name> <name pos:line="1048" pos:column="38">MSOBOOL</name></type> <name pos:line="1048" pos:column="46">fSaveAs</name></decl></param>)</parameter_list> <name pos:line="1048" pos:column="55">PURE</name>;</function_decl>

	<comment type="line" pos:line="1050" pos:column="9">// FSearchEnabled() - Returns fTrue if searching is enabled in the dialog.</comment>

	<macro><name pos:line="1052" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1052" pos:column="19">(<argument pos:line="1052" pos:column="20">MSOBOOL</argument>, <argument pos:line="1052" pos:column="29">FSearchEnabled</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1052" pos:column="45">(</op:operator><name pos:line="1052" pos:column="46">THIS</name><op:operator pos:line="1052" pos:column="50">)</op:operator> <name pos:line="1052" pos:column="52">CONST_METHOD_FF</name> <name pos:line="1052" pos:column="68">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1054" pos:column="9">// EnableSearch() - Enables or disables the search.  Can be set only when</comment>
	<comment type="line" pos:line="1055" pos:column="9">//					the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1057" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1057" pos:column="19">EnableSearch</name>) <parameter_list pos:line="1057" pos:column="33">(<param><decl><type><name pos:line="1057" pos:column="34">THIS_</name> <name pos:line="1057" pos:column="40">MSOBOOL</name></type> <name pos:line="1057" pos:column="48">fSearchEnabled</name></decl></param>)</parameter_list> <name pos:line="1057" pos:column="64">PURE</name>;</function_decl>

	<comment type="line" pos:line="1059" pos:column="9">// FPreviewEnabled() - Returns fTrue if previews are enabled in the</comment>
	<comment type="line" pos:line="1060" pos:column="9">//					   dialog.</comment>

	<macro><name pos:line="1062" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1062" pos:column="19">(<argument pos:line="1062" pos:column="20">MSOBOOL</argument>, <argument pos:line="1062" pos:column="29">FPreviewEnabled</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1062" pos:column="46">(</op:operator><name pos:line="1062" pos:column="47">THIS</name><op:operator pos:line="1062" pos:column="51">)</op:operator> <name pos:line="1062" pos:column="53">CONST_METHOD_FF</name> <name pos:line="1062" pos:column="69">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1064" pos:column="9">// EnablePreview() - Enables preview in the dialog.  Can be set only when</comment>
	<comment type="line" pos:line="1065" pos:column="9">//					 the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1067" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1067" pos:column="19">EnablePreview</name>) <parameter_list pos:line="1067" pos:column="34">(<param><decl><type><name pos:line="1067" pos:column="35">THIS_</name> <name pos:line="1067" pos:column="41">MSOBOOL</name></type> <name pos:line="1067" pos:column="49">fEnablePreview</name></decl></param>,
							  <param><decl><type><name pos:line="1068" pos:column="59">interface</name> <name pos:line="1068" pos:column="69">IMsoAppPreview</name> <type:modifier pos:line="1068" pos:column="84">*</type:modifier></type><name pos:line="1068" pos:column="85">pvInterface</name></decl></param>)</parameter_list> <name pos:line="1068" pos:column="98">PURE</name>;</function_decl>

	<comment type="line" pos:line="1070" pos:column="9">// FDirPicker() - Returns fTrue if the dialog is a directory picker dialog,</comment>
	<comment type="line" pos:line="1071" pos:column="9">//				  fFalse otherwise, default is fFalse.</comment>

	<macro><name pos:line="1073" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1073" pos:column="19">(<argument pos:line="1073" pos:column="20">MSOBOOL</argument>, <argument pos:line="1073" pos:column="29">FDirPicker</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1073" pos:column="41">(</op:operator><name pos:line="1073" pos:column="42">THIS</name><op:operator pos:line="1073" pos:column="46">)</op:operator> <name pos:line="1073" pos:column="48">CONST_METHOD_FF</name> <name pos:line="1073" pos:column="64">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1075" pos:column="9">// SetFDirPicker() - Sets the dialog to be a directory picker dialog.</comment>
	<comment type="line" pos:line="1076" pos:column="9">//					 Can only be set when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1078" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1078" pos:column="19">SetFDirPicker</name>) <parameter_list pos:line="1078" pos:column="34">(<param><decl><type><name pos:line="1078" pos:column="35">THIS_</name> <name pos:line="1078" pos:column="41">MSOBOOL</name></type> <name pos:line="1078" pos:column="49">fDirPicker</name></decl></param>)</parameter_list> <name pos:line="1078" pos:column="61">PURE</name>;</function_decl>

	<comment type="line" pos:line="1080" pos:column="9">// FMultiSelect() - Returns fTrue if the dialog is a multi-select dialog.</comment>

	<macro><name pos:line="1082" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1082" pos:column="19">(<argument pos:line="1082" pos:column="20">MSOBOOL</argument>, <argument pos:line="1082" pos:column="29">FMultiSelect</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1082" pos:column="43">(</op:operator><name pos:line="1082" pos:column="44">THIS</name><op:operator pos:line="1082" pos:column="48">)</op:operator> <name pos:line="1082" pos:column="50">CONST_METHOD_FF</name> <name pos:line="1082" pos:column="66">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1084" pos:column="9">// SetFMultiSelect() - Makes the dialog multi-select or single-select.</comment>
	<comment type="line" pos:line="1085" pos:column="9">//					   Can be set only when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1087" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1087" pos:column="19">SetFMultiSelect</name>) <parameter_list pos:line="1087" pos:column="36">(<param><decl><type><name pos:line="1087" pos:column="37">THIS_</name> <name pos:line="1087" pos:column="43">MSOBOOL</name></type> <name pos:line="1087" pos:column="51">fMultiSelect</name></decl></param>)</parameter_list> <name pos:line="1087" pos:column="65">PURE</name>;</function_decl>

	<comment type="line" pos:line="1089" pos:column="9">// FChangeDir() - Specifies whether find file will change the current</comment>
	<comment type="line" pos:line="1090" pos:column="9">// directory to the directory set by the user.</comment>

	<macro><name pos:line="1092" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1092" pos:column="19">(<argument pos:line="1092" pos:column="20">MSOBOOL</argument>, <argument pos:line="1092" pos:column="29">FChangeDir</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1092" pos:column="41">(</op:operator><name pos:line="1092" pos:column="42">THIS</name><op:operator pos:line="1092" pos:column="46">)</op:operator> <name pos:line="1092" pos:column="48">CONST_METHOD_FF</name> <name pos:line="1092" pos:column="64">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1094" pos:column="9">// SetFChangeDir() - If set to fTrue, Find File will change the current</comment>
	<comment type="line" pos:line="1095" pos:column="9">// directory to the search directory, if there is only one search</comment>
	<comment type="line" pos:line="1096" pos:column="9">// directory.  Otherwise, Find File will not change the directory at</comment>
	<comment type="line" pos:line="1097" pos:column="9">// all.</comment>

	<function_decl><type><name pos:line="1099" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1099" pos:column="19">SetFChangeDir</name>) <parameter_list pos:line="1099" pos:column="34">(<param><decl><type><name pos:line="1099" pos:column="35">THIS_</name> <name pos:line="1099" pos:column="41">MSOBOOL</name></type> <name pos:line="1099" pos:column="49">fChangeDir</name></decl></param>)</parameter_list> <name pos:line="1099" pos:column="61">PURE</name>;</function_decl>

	<comment type="line" pos:line="1101" pos:column="9">// GetFreezeDir() - Copies the freeze directory into the buffer argument.</comment>
	<comment type="line" pos:line="1102" pos:column="9">// The directory name will be truncated and null terminated if it cannot</comment>
	<comment type="line" pos:line="1103" pos:column="9">// fit inside the buffer as is.</comment>

	<function_decl><type><name pos:line="1105" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1105" pos:column="19">GetFreezeDir</name>) <parameter_list pos:line="1105" pos:column="33">(<param><decl><type><name pos:line="1105" pos:column="34">THIS_</name> <name pos:line="1105" pos:column="40">WCHAR</name> <type:modifier pos:line="1105" pos:column="46">*</type:modifier></type> <name pos:line="1105" pos:column="48">szDir</name></decl></param>, <param><decl><type><name pos:line="1105" pos:column="55">int</name></type> <name pos:line="1105" pos:column="59">cb</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1105" pos:column="63">CONST_METHOD_FF</name></type> <name pos:line="1105" pos:column="79">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1107" pos:column="9">// SetFreezeDir() - Sets the freeze directory to the contents of the</comment>
	<comment type="line" pos:line="1108" pos:column="9">// buffer.  The freeze directory can only be set when the dialog is</comment>
	<comment type="line" pos:line="1109" pos:column="9">// not shown and if at least one of the types in the dialog's list of</comment>
	<comment type="line" pos:line="1110" pos:column="9">// types has the "frozen directory" flag set.</comment>

	<name pos:line="1112" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1112" pos:column="18">(<param><decl><type><name pos:line="1112" pos:column="19">SetFreezeDir</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1112" pos:column="33">(<param><decl><type><name pos:line="1112" pos:column="34">THIS_</name> <specifier pos:line="1112" pos:column="40">const</specifier> <name pos:line="1112" pos:column="46">WCHAR</name> <type:modifier pos:line="1112" pos:column="52">*</type:modifier></type> <name pos:line="1112" pos:column="54">szDir</name></decl></param>)</parameter_list> <name pos:line="1112" pos:column="61">PURE</name>;</function_decl>

	<comment type="line" pos:line="1114" pos:column="9">// FConfirmReplace() - Specifies whether Find File (Save As dialog only)</comment>
	<comment type="line" pos:line="1115" pos:column="9">// will put up an alert when an existing filename is specified in the file</comment>
	<comment type="line" pos:line="1116" pos:column="9">// name control.</comment>

	<macro><name pos:line="1118" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1118" pos:column="19">(<argument pos:line="1118" pos:column="20">MSOBOOL</argument>, <argument pos:line="1118" pos:column="29">FConfirmReplace</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1118" pos:column="46">(</op:operator><name pos:line="1118" pos:column="47">THIS</name><op:operator pos:line="1118" pos:column="51">)</op:operator> <name pos:line="1118" pos:column="53">CONST_METHOD_FF</name> <name pos:line="1118" pos:column="69">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1120" pos:column="9">// SetFConfirmReplace() - If set to fTrue, Find File will alert the user</comment>
	<comment type="line" pos:line="1121" pos:column="9">// when an existing file name is specified in the Save As dialog.</comment>
	<comment type="line" pos:line="1122" pos:column="9">// Deprecated API - see SetConfirmReplaceEx, which provides more</comment>
	<comment type="line" pos:line="1123" pos:column="9">// options.</comment>

	<function_decl><type><name pos:line="1125" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1125" pos:column="19">SetFConfirmReplace</name>) <parameter_list pos:line="1125" pos:column="39">(<param><decl><type><name pos:line="1125" pos:column="40">THIS_</name> <name pos:line="1125" pos:column="46">MSOBOOL</name></type> <name pos:line="1125" pos:column="54">fConfirmReplace</name></decl></param>)</parameter_list> <name pos:line="1125" pos:column="71">PURE</name>;</function_decl>

	<comment type="line" pos:line="1127" pos:column="9">// GetDefaultFileName() - Copies the default file name into the buffe</comment>
	<comment type="line" pos:line="1128" pos:column="9">// argument.  The name will be truncated and null terminated if it cannot</comment>
	<comment type="line" pos:line="1129" pos:column="9">// fit inside the buffer as is.</comment>

	<function_decl><type><name pos:line="1131" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1131" pos:column="19">GetDefaultFileName</name>) <parameter_list pos:line="1131" pos:column="39">(<param><decl><type><name pos:line="1131" pos:column="40">THIS_</name> <name pos:line="1131" pos:column="46">WCHAR</name> <type:modifier pos:line="1131" pos:column="52">*</type:modifier></type> <name pos:line="1131" pos:column="54">szFile</name></decl></param>, <param><decl><type><name pos:line="1131" pos:column="62">int</name></type> <name pos:line="1131" pos:column="66">cb</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1131" pos:column="70">CONST_METHOD_FF</name></type> <name pos:line="1131" pos:column="86">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1133" pos:column="9">// SetDefaultFileName() - Sets the default file name.  This can only be</comment>
	<comment type="line" pos:line="1134" pos:column="9">// set if the dialog is not yet visible.</comment>

	<name pos:line="1136" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1136" pos:column="18">(<param><decl><type><name pos:line="1136" pos:column="19">SetDefaultFileName</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1136" pos:column="39">(<param><decl><type><name pos:line="1136" pos:column="40">THIS_</name> <specifier pos:line="1136" pos:column="46">const</specifier> <name pos:line="1136" pos:column="52">WCHAR</name> <type:modifier pos:line="1136" pos:column="58">*</type:modifier></type> <name pos:line="1136" pos:column="60">szFile</name></decl></param>)</parameter_list> <name pos:line="1136" pos:column="68">PURE</name>;</function_decl>

	<comment type="line" pos:line="1138" pos:column="9">// FKeepSelectedType() - Returns the flag indicating whether or not the</comment>
	<comment type="line" pos:line="1139" pos:column="9">// type list blanks on an unrecognized type.</comment>

	<macro><name pos:line="1141" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1141" pos:column="19">(<argument pos:line="1141" pos:column="20">MSOBOOL</argument>, <argument pos:line="1141" pos:column="29">FKeepSelectedType</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1141" pos:column="48">(</op:operator><name pos:line="1141" pos:column="49">THIS</name><op:operator pos:line="1141" pos:column="53">)</op:operator> <name pos:line="1141" pos:column="55">CONST_METHOD_FF</name> <name pos:line="1141" pos:column="71">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1143" pos:column="9">// SetFKeepSelectedType() - Sets the flag indicating whether or not the</comment>
	<comment type="line" pos:line="1144" pos:column="9">// type list blanks on an unrecognized type.  This flag defaults to FALSE.</comment>

	<function_decl><type><name pos:line="1146" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1146" pos:column="19">SetFKeepSelectedType</name>) <parameter_list pos:line="1146" pos:column="41">(<param><decl><type><name pos:line="1146" pos:column="42">THIS_</name> <name pos:line="1146" pos:column="48">MSOBOOL</name></type> <name pos:line="1146" pos:column="56">fKeepSelectedType</name></decl></param>)</parameter_list> <name pos:line="1146" pos:column="75">PURE</name>;</function_decl>

	<comment type="line" pos:line="1148" pos:column="9">// FSysDirPicker() - Returns the flag indicating whether or not the</comment>
	<comment type="line" pos:line="1149" pos:column="9">// system directory browser should be used instead of our own SDM dir picker.</comment>

	<macro><name pos:line="1151" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1151" pos:column="19">(<argument pos:line="1151" pos:column="20">MSOBOOL</argument>, <argument pos:line="1151" pos:column="29">FSysDirPicker</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1151" pos:column="44">(</op:operator><name pos:line="1151" pos:column="45">THIS</name><op:operator pos:line="1151" pos:column="49">)</op:operator> <name pos:line="1151" pos:column="51">CONST_METHOD_FF</name> <name pos:line="1151" pos:column="67">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1153" pos:column="9">// SetFSysDirPicker() - Sets the flag indicating whether or not the</comment>
	<comment type="line" pos:line="1154" pos:column="9">// system directory browser should be used instead of our own SDM dir picker.</comment>

	<function_decl><type><name pos:line="1156" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1156" pos:column="19">SetFSysDirPicker</name>) <parameter_list pos:line="1156" pos:column="37">(<param><decl><type><name pos:line="1156" pos:column="38">THIS_</name> <name pos:line="1156" pos:column="44">MSOBOOL</name></type> <name pos:line="1156" pos:column="52">fSysDirPicker</name></decl></param>)</parameter_list> <name pos:line="1156" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="1158" pos:column="9">// -----------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1159" pos:column="9">// Cosmetic dialog customization.</comment>

	<comment type="line" pos:line="1161" pos:column="9">// GetAppName() - Returns the current name for the application.  This</comment>
	<comment type="line" pos:line="1162" pos:column="9">//				  name is used in message box titles.  The given buffer</comment>
	<comment type="line" pos:line="1163" pos:column="9">//				  must be at least of length cbMaxDlgTitle.  The name is</comment>
	<comment type="line" pos:line="1164" pos:column="9">//				  zero-terminated.</comment>

	<macro><name pos:line="1166" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1166" pos:column="19">(<argument pos:line="1166" pos:column="20">void</argument>, <argument pos:line="1166" pos:column="26">GetAppName</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1166" pos:column="38">(</op:operator><name pos:line="1166" pos:column="39">THIS_</name> <name pos:line="1166" pos:column="45">WCHAR</name> <op:operator pos:line="1166" pos:column="51">*</op:operator> <name pos:line="1166" pos:column="53">szAppName</name><op:operator pos:line="1166" pos:column="62">)</op:operator> <name pos:line="1166" pos:column="64">CONST_METHOD_FF</name> <name pos:line="1166" pos:column="80">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1168" pos:column="9">// SetAppName() - Sets the current name for the application.  This name is</comment>
	<comment type="line" pos:line="1169" pos:column="9">//				  used in message box titles.  The name must be zero-</comment>
	<comment type="line" pos:line="1170" pos:column="9">//				  terminated in a buffer no larger than cbMaxDlgTitle.</comment>
	<comment type="line" pos:line="1171" pos:column="9">//				  The title can be set only when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1173" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1173" pos:column="19">SetAppName</name>) <parameter_list pos:line="1173" pos:column="31">(<param><decl><type><name pos:line="1173" pos:column="32">THIS_</name> <specifier pos:line="1173" pos:column="38">const</specifier> <name pos:line="1173" pos:column="44">WCHAR</name> <type:modifier pos:line="1173" pos:column="50">*</type:modifier></type> <name pos:line="1173" pos:column="52">szAppName</name></decl></param>)</parameter_list> <name pos:line="1173" pos:column="63">PURE</name>;</function_decl>

	<comment type="line" pos:line="1175" pos:column="9">// GetDlgTitle() - Returns the dialog title in the given buffer, which</comment>
	<comment type="line" pos:line="1176" pos:column="9">//				   must be at least of length cbMaxDlgTitle.  The title</comment>
	<comment type="line" pos:line="1177" pos:column="9">//				   is null-terminated.</comment>

	<macro><name pos:line="1179" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1179" pos:column="19">(<argument pos:line="1179" pos:column="20">void</argument>, <argument pos:line="1179" pos:column="26">GetDlgTitle</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1179" pos:column="39">(</op:operator><name pos:line="1179" pos:column="40">THIS_</name> <name pos:line="1179" pos:column="46">WCHAR</name> <op:operator pos:line="1179" pos:column="52">*</op:operator> <name pos:line="1179" pos:column="54">szTitle</name><op:operator pos:line="1179" pos:column="61">)</op:operator> <name pos:line="1179" pos:column="63">CONST_METHOD_FF</name> <name pos:line="1179" pos:column="79">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1181" pos:column="9">// SetDlgTitle() - Sets the dialog title with the given title.  The title</comment>
	<comment type="line" pos:line="1182" pos:column="9">// must be zero-terminated in a buffer no larger than cbMaxDlgTitle.  The</comment>
	<comment type="line" pos:line="1183" pos:column="9">// title can be set only when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1185" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1185" pos:column="19">SetDlgTitle</name>) <parameter_list pos:line="1185" pos:column="32">(<param><decl><type><name pos:line="1185" pos:column="33">THIS_</name> <specifier pos:line="1185" pos:column="39">const</specifier> <name pos:line="1185" pos:column="45">WCHAR</name> <type:modifier pos:line="1185" pos:column="51">*</type:modifier></type><name pos:line="1185" pos:column="52">szTitle</name></decl></param>)</parameter_list> <name pos:line="1185" pos:column="61">PURE</name>;</function_decl>

<comment type="line" pos:line="1187" pos:column="1">//	MSOMETHOD(SetDlgTitle) (THIS_ const char *szTitle) PURE;</comment>

	<comment type="line" pos:line="1189" pos:column="9">// GetXY() - Returns the the current position of the dialog (whether it's</comment>
	<comment type="line" pos:line="1190" pos:column="9">// 			 visible or not).  In pixels.</comment>

	<macro><name pos:line="1192" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1192" pos:column="19">(<argument pos:line="1192" pos:column="20">void</argument>, <argument pos:line="1192" pos:column="26">GetXY</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1192" pos:column="33">(</op:operator><name pos:line="1192" pos:column="34">THIS_</name> <name pos:line="1192" pos:column="40">int</name> <op:operator pos:line="1192" pos:column="44">*</op:operator><name pos:line="1192" pos:column="45">px</name><op:operator pos:line="1192" pos:column="47">,</op:operator> <name pos:line="1192" pos:column="49">int</name> <op:operator pos:line="1192" pos:column="53">*</op:operator><name pos:line="1192" pos:column="54">py</name><op:operator pos:line="1192" pos:column="56">)</op:operator> <name pos:line="1192" pos:column="58">CONST_METHOD_FF</name> <name pos:line="1192" pos:column="74">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1194" pos:column="9">// SetXY() - Sets the position of the dialog when it is displayed.  Can</comment>
	<comment type="line" pos:line="1195" pos:column="9">//			 be set only when the dialog is not visible.  In pixels.</comment>

	<function_decl><type><name pos:line="1197" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1197" pos:column="19">SetXY</name>) <parameter_list pos:line="1197" pos:column="26">(<param><decl><type><name pos:line="1197" pos:column="27">THIS_</name> <name pos:line="1197" pos:column="33">int</name></type> <name pos:line="1197" pos:column="37">x</name></decl></param>, <param><decl><type><name pos:line="1197" pos:column="40">int</name></type> <name pos:line="1197" pos:column="44">y</name></decl></param>)</parameter_list> <name pos:line="1197" pos:column="47">PURE</name>;</function_decl>

	<comment type="line" pos:line="1199" pos:column="9">// GetCenterXY() - Returns the the current position of the dialog's center</comment>
	<comment type="line" pos:line="1200" pos:column="9">//				   (whether it's visible or not).  In pixels.</comment>

	<macro><name pos:line="1202" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1202" pos:column="19">(<argument pos:line="1202" pos:column="20">void</argument>, <argument pos:line="1202" pos:column="26">GetCenterXY</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1202" pos:column="39">(</op:operator><name pos:line="1202" pos:column="40">THIS_</name> <name pos:line="1202" pos:column="46">int</name> <op:operator pos:line="1202" pos:column="50">*</op:operator><name pos:line="1202" pos:column="51">px</name><op:operator pos:line="1202" pos:column="53">,</op:operator> <name pos:line="1202" pos:column="55">int</name> <op:operator pos:line="1202" pos:column="59">*</op:operator><name pos:line="1202" pos:column="60">py</name><op:operator pos:line="1202" pos:column="62">)</op:operator> <name pos:line="1202" pos:column="64">CONST_METHOD_FF</name> <name pos:line="1202" pos:column="80">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1204" pos:column="9">// SetCenterXY() - Sets the center position of the dialog when it is</comment>
	<comment type="line" pos:line="1205" pos:column="9">//			 	   displayed.  Can be set only when the dialog is not</comment>
	<comment type="line" pos:line="1206" pos:column="9">// 				   visible.  In pixels.</comment>

	<function_decl><type><name pos:line="1208" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1208" pos:column="19">SetCenterXY</name>) <parameter_list pos:line="1208" pos:column="32">(<param><decl><type><name pos:line="1208" pos:column="33">THIS_</name> <name pos:line="1208" pos:column="39">int</name></type> <name pos:line="1208" pos:column="43">x</name></decl></param>, <param><decl><type><name pos:line="1208" pos:column="46">int</name></type> <name pos:line="1208" pos:column="50">y</name></decl></param>)</parameter_list> <name pos:line="1208" pos:column="53">PURE</name>;</function_decl>


	<comment type="line" pos:line="1211" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1212" pos:column="9">// Dialog display methods.</comment>

	<comment type="line" pos:line="1214" pos:column="9">// ShowDlg() - Shows the dialog.  Only one dialog can be shown per</comment>
	<comment type="line" pos:line="1215" pos:column="9">// process calling the .dll.</comment>

	<function_decl><type><name pos:line="1217" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1217" pos:column="19">ShowDlg</name>) <parameter_list pos:line="1217" pos:column="28">(<param><decl><type><name pos:line="1217" pos:column="29">THIS_</name> <name pos:line="1217" pos:column="35">int</name> <type:modifier pos:line="1217" pos:column="39">*</type:modifier></type> <name pos:line="1217" pos:column="41">picmd</name></decl></param>, <param><decl><type><name pos:line="1217" pos:column="48">HWND</name></type> <name pos:line="1217" pos:column="53">hwnd</name></decl></param>)</parameter_list> <name pos:line="1217" pos:column="59">PURE</name>;</function_decl>

	<comment type="line" pos:line="1219" pos:column="9">// GetHwnd() - Returns the hwnd of the dialog client.  Only works if the</comment>
	<comment type="line" pos:line="1220" pos:column="9">// dialog is up.</comment>

	<function_decl><type><name pos:line="1222" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1222" pos:column="19">GetHwnd</name>) <parameter_list pos:line="1222" pos:column="28">(<param><decl><type><name pos:line="1222" pos:column="29">THIS_</name> <name pos:line="1222" pos:column="35">HWND</name> <type:modifier pos:line="1222" pos:column="40">*</type:modifier></type> <name pos:line="1222" pos:column="42">hwnd</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1222" pos:column="48">CONST_METHOD_FF</name></type> <name pos:line="1222" pos:column="64">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1224" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1225" pos:column="9">// Events.</comment>

	<comment type="line" pos:line="1227" pos:column="9">// RegisterPfnEvent() - Register an event handler pointed to by pfnEvent.</comment>
	<comment type="line" pos:line="1228" pos:column="9">// The event handler must be of the form</comment>

	<comment type="line" pos:line="1230" pos:column="9">// HRESULT OpenEventHandler(IOOP, IFindFile *, int, int, int, int *)</comment>

	<name pos:line="1232" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1232" pos:column="18">(<param><decl><type><name pos:line="1232" pos:column="19">RegisterPfnEvent</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1232" pos:column="37">(<param><decl><type><name pos:line="1232" pos:column="38">THIS_</name> <name pos:line="1232" pos:column="44">PFNOPENEVENT</name></type> <name pos:line="1232" pos:column="57">pfnEvent</name></decl></param>, <param><decl><type><name pos:line="1232" pos:column="67">int</name></type> <name pos:line="1232" pos:column="71">wApp</name></decl></param>)</parameter_list> <name pos:line="1232" pos:column="77">PURE</name>;</function_decl>


	<comment type="line" pos:line="1235" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1236" pos:column="9">// Short-cut methods.</comment>

	<comment type="line" pos:line="1238" pos:column="9">// GetOpenTitle() - Gets the current title for the "Open" command button.</comment>
	<comment type="line" pos:line="1239" pos:column="9">//				    The given buffer must be at least cbMaxItemTitle in</comment>
	<comment type="line" pos:line="1240" pos:column="9">//					length.  The title will be zero-terminated.</comment>

	<macro><name pos:line="1242" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1242" pos:column="19">(<argument pos:line="1242" pos:column="20">void</argument>, <argument pos:line="1242" pos:column="26">GetOpenTitle</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1242" pos:column="40">(</op:operator><name pos:line="1242" pos:column="41">THIS_</name> <name pos:line="1242" pos:column="47">WCHAR</name> <op:operator pos:line="1242" pos:column="53">*</op:operator> <name pos:line="1242" pos:column="55">szTitle</name><op:operator pos:line="1242" pos:column="62">)</op:operator> <name pos:line="1242" pos:column="64">CONST_METHOD_FF</name> <name pos:line="1242" pos:column="80">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1244" pos:column="9">// SetOpenTitle() - Sets the current title for the "Open" command button.</comment>
	<comment type="line" pos:line="1245" pos:column="9">//					The title must be zero-terminated in a buffer no</comment>
	<comment type="line" pos:line="1246" pos:column="9">//					larger than cbMaxItemTitle.  The title can only be</comment>
	<comment type="line" pos:line="1247" pos:column="9">//					set when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1249" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1249" pos:column="19">SetOpenTitle</name>) <parameter_list pos:line="1249" pos:column="33">(<param><decl><type><name pos:line="1249" pos:column="34">THIS_</name> <specifier pos:line="1249" pos:column="40">const</specifier> <name pos:line="1249" pos:column="46">WCHAR</name> <type:modifier pos:line="1249" pos:column="52">*</type:modifier></type> <name pos:line="1249" pos:column="54">szTitle</name></decl></param>)</parameter_list> <name pos:line="1249" pos:column="63">PURE</name>;</function_decl>

	<comment type="line" pos:line="1251" pos:column="9">// GetIcntrlValue() - Shortcuts to return the values of controls.</comment>
	<comment type="line" pos:line="1252" pos:column="9">//					   Return E_INVALIDARG if the wrong flavor was used.</comment>
	<comment type="line" pos:line="1253" pos:column="9">//					   Use "W" for checkboxes, radiogroups, and list boxes.</comment>
	<comment type="line" pos:line="1254" pos:column="9">//					   Returns S_TRUNCATED if the return string was</comment>
	<comment type="line" pos:line="1255" pos:column="9">//					   truncated, and S_OK otherwise.</comment>

	<function_decl><type><name pos:line="1257" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1257" pos:column="19">GetIcntrlValueW</name>) <parameter_list pos:line="1257" pos:column="36">(<param><decl><type><name pos:line="1257" pos:column="37">THIS_</name> <name pos:line="1257" pos:column="43">int</name></type> <name pos:line="1257" pos:column="47">icntrl</name></decl></param>, <param><decl><type><name pos:line="1257" pos:column="55">int</name> <type:modifier pos:line="1257" pos:column="59">*</type:modifier></type> <name pos:line="1257" pos:column="61">pval</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1257" pos:column="67">CONST_METHOD_FF</name></type> <name pos:line="1257" pos:column="83">PURE</name></decl>;</decl_stmt>

	<name pos:line="1259" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1259" pos:column="18">(<param><decl><type><name pos:line="1259" pos:column="19">GetIcntrlValueSz</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1259" pos:column="37">(<param><decl><type><name pos:line="1259" pos:column="38">THIS_</name> <name pos:line="1259" pos:column="44">int</name></type> <name pos:line="1259" pos:column="48">icntrl</name></decl></param>, <param><decl><type><name pos:line="1259" pos:column="56">WCHAR</name> <type:modifier pos:line="1259" pos:column="62">*</type:modifier></type> <name pos:line="1259" pos:column="64">szVal</name></decl></param>, <param><decl><type><name pos:line="1259" pos:column="71">int</name></type> <name pos:line="1259" pos:column="75">cbVal</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="1260" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="1260" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1262" pos:column="9">// SetIcntrlValue() - Shortcuts to set the value of controls.  Return</comment>
	<comment type="line" pos:line="1263" pos:column="9">//					   E_INVALIDARG if the wrong flavor was used.  Returns</comment>
	<comment type="line" pos:line="1264" pos:column="9">//					   Resource allocation failures, and S_OK otherwise.</comment>

	<name pos:line="1266" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1266" pos:column="18">(<param><decl><type><name pos:line="1266" pos:column="19">SetIcntrlValueW</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1266" pos:column="36">(<param><decl><type><name pos:line="1266" pos:column="37">THIS_</name> <name pos:line="1266" pos:column="43">int</name></type> <name pos:line="1266" pos:column="47">icntrl</name></decl></param>, <param><decl><type><name pos:line="1266" pos:column="55">int</name></type> <name pos:line="1266" pos:column="59">val</name></decl></param>)</parameter_list> <name pos:line="1266" pos:column="64">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="1268" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1268" pos:column="19">SetIcntrlValueSz</name>) <parameter_list pos:line="1268" pos:column="37">(<param><decl><type><name pos:line="1268" pos:column="38">THIS_</name> <name pos:line="1268" pos:column="44">int</name></type> <name pos:line="1268" pos:column="48">icntrl</name></decl></param>, <param><decl><type><specifier pos:line="1268" pos:column="56">const</specifier> <name pos:line="1268" pos:column="62">WCHAR</name> <type:modifier pos:line="1268" pos:column="68">*</type:modifier></type> <name pos:line="1268" pos:column="70">szVal</name></decl></param>)</parameter_list> <name pos:line="1268" pos:column="77">PURE</name>;</function_decl>

	<comment type="line" pos:line="1270" pos:column="9">// FEnabledIcntrl() - Returns fTrue if the given control is enabled, fFalse</comment>
	<comment type="line" pos:line="1271" pos:column="9">//					  otherwise.  The default is fTrue.</comment>

	<macro><name pos:line="1273" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1273" pos:column="19">(<argument pos:line="1273" pos:column="20">MSOBOOL</argument>, <argument pos:line="1273" pos:column="29">FEnabledIcntrl</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1273" pos:column="45">(</op:operator><name pos:line="1273" pos:column="46">THIS_</name> <name pos:line="1273" pos:column="52">int</name> <name pos:line="1273" pos:column="56">icntrl</name><op:operator pos:line="1273" pos:column="62">)</op:operator> <name pos:line="1273" pos:column="64">CONST_METHOD_FF</name> <name pos:line="1273" pos:column="80">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1275" pos:column="9">// EnableIcntrl() - Enables/disables the given control.</comment>

	<function_decl><type><name pos:line="1277" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1277" pos:column="19">EnableIcntrl</name>) <parameter_list pos:line="1277" pos:column="33">(<param><decl><type><name pos:line="1277" pos:column="34">THIS_</name> <name pos:line="1277" pos:column="40">int</name></type> <name pos:line="1277" pos:column="44">icntrl</name></decl></param>, <param><decl><type><name pos:line="1277" pos:column="52">MSOBOOL</name></type> <name pos:line="1277" pos:column="60">fEnable</name></decl></param>)</parameter_list> <name pos:line="1277" pos:column="69">PURE</name>;</function_decl>

	<comment type="line" pos:line="1279" pos:column="9">// SetFocusIcntrl() - Sets the focus to be on the given icntrl.</comment>

	<function_decl><type><name pos:line="1281" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1281" pos:column="19">SetFocusIcntrl</name>) <parameter_list pos:line="1281" pos:column="35">(<param><decl><type><name pos:line="1281" pos:column="36">THIS_</name> <name pos:line="1281" pos:column="42">int</name></type> <name pos:line="1281" pos:column="46">icntrl</name></decl></param>)</parameter_list> <name pos:line="1281" pos:column="54">PURE</name>;</function_decl>

	<comment type="line" pos:line="1283" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1284" pos:column="9">// Query Definition Short-cut methods</comment>

	<comment type="line" pos:line="1286" pos:column="9">// SetSearchPath() - Sets the query for this find file to search for the</comment>
	<comment type="line" pos:line="1287" pos:column="9">// default file types (as set using IFileTypeList::SetIszDefault()), with</comment>
	<comment type="line" pos:line="1288" pos:column="9">// no other selection criteria.  If NULL, the current directory is used.</comment>
	<comment type="line" pos:line="1289" pos:column="9">// This method short-cuts using the IMsoSearch object for this find file</comment>
	<comment type="line" pos:line="1290" pos:column="9">// object.</comment>

	<function_decl><type><name pos:line="1292" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1292" pos:column="19">SetSearchPath</name>) <parameter_list pos:line="1292" pos:column="34">(<param><decl><type><name pos:line="1292" pos:column="35">THIS_</name> <specifier pos:line="1292" pos:column="41">const</specifier> <name pos:line="1292" pos:column="47">WCHAR</name> <type:modifier pos:line="1292" pos:column="53">*</type:modifier></type> <name pos:line="1292" pos:column="55">szPath</name></decl></param>)</parameter_list> <name pos:line="1292" pos:column="63">PURE</name>;</function_decl>

	<comment type="line" pos:line="1294" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1295" pos:column="9">// Search for extension.</comment>

	<comment type="line" pos:line="1297" pos:column="9">// IszFileTypeGet() - Returns the currently selected file type.  Returns</comment>
	<comment type="line" pos:line="1298" pos:column="9">// iszNil if nothing is selected.</comment>

	<macro><name pos:line="1300" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1300" pos:column="19">(<argument pos:line="1300" pos:column="20">int</argument>, <argument pos:line="1300" pos:column="25">IszFileTypeGet</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1300" pos:column="41">(</op:operator><name pos:line="1300" pos:column="42">THIS</name><op:operator pos:line="1300" pos:column="46">)</op:operator> <name pos:line="1300" pos:column="48">CONST_METHOD_FF</name> <name pos:line="1300" pos:column="64">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1302" pos:column="9">// SetIszFileType() - Used to set the current file type.  Default upon</comment>
	<comment type="line" pos:line="1303" pos:column="9">// dialog startup is set in the file type list itself.</comment>

	<function_decl><type><name pos:line="1305" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1305" pos:column="19">SetIszFileType</name>) <parameter_list pos:line="1305" pos:column="35">(<param><decl><type><name pos:line="1305" pos:column="36">THIS_</name> <name pos:line="1305" pos:column="42">int</name></type> <name pos:line="1305" pos:column="46">iszFileType</name></decl></param>)</parameter_list> <name pos:line="1305" pos:column="59">PURE</name>;</function_decl>

	<comment type="line" pos:line="1307" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1308" pos:column="9">// Query Definition and Search Results</comment>

	<macro><name pos:line="1310" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1310" pos:column="19">(<argument pos:line="1310" pos:column="20">void</argument>, <argument pos:line="1310" pos:column="26">GetActiveIMsoSearch</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1310" pos:column="47">(</op:operator><name pos:line="1310" pos:column="48">THIS_</name> <name pos:line="1310" pos:column="54">interface</name> <name pos:line="1310" pos:column="64">IMsoSearch</name> <op:operator pos:line="1310" pos:column="75">*</op:operator><op:operator pos:line="1310" pos:column="76">*</op:operator> <name pos:line="1310" pos:column="78">ppsrch</name><op:operator pos:line="1310" pos:column="84">)</op:operator>
			<name pos:line="1311" pos:column="25">CONST_METHOD_FF</name> <name pos:line="1311" pos:column="41">PURE</name></expr>;</expr_stmt>


	<comment type="line" pos:line="1314" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1315" pos:column="9">// Collection methods</comment>

	<comment type="line" pos:line="1317" pos:column="9">// GetIMsoControlList() - Returns a pointer to the custom item list.</comment>
	<comment type="line" pos:line="1318" pos:column="9">// This is a pointer to the list in the object referenced by IMsoFindFile,</comment>
	<comment type="line" pos:line="1319" pos:column="9">// not a copy.  Should be released when through.</comment>

	<macro><name pos:line="1321" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1321" pos:column="19">(<argument pos:line="1321" pos:column="20">void</argument>, <argument pos:line="1321" pos:column="26">GetIMsoFileTypeList</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1321" pos:column="47">(</op:operator><name pos:line="1321" pos:column="48">THIS_</name>
			<name pos:line="1322" pos:column="25">interface</name> <name pos:line="1322" pos:column="35">IMsoFileTypeList</name> <op:operator pos:line="1322" pos:column="52">*</op:operator><op:operator pos:line="1322" pos:column="53">*</op:operator> <name pos:line="1322" pos:column="55">ppfiltyplist</name><op:operator pos:line="1322" pos:column="67">)</op:operator> <name pos:line="1322" pos:column="69">CONST_METHOD_FF</name> <name pos:line="1322" pos:column="85">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="1324" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1324" pos:column="19">(<argument pos:line="1324" pos:column="20">void</argument>, <argument pos:line="1324" pos:column="26">GetIMsoControlList</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1324" pos:column="46">(</op:operator><name pos:line="1324" pos:column="47">THIS_</name>
			<name pos:line="1325" pos:column="25">interface</name> <name pos:line="1325" pos:column="35">IMsoControlList</name> <op:operator pos:line="1325" pos:column="51">*</op:operator><op:operator pos:line="1325" pos:column="52">*</op:operator> <name pos:line="1325" pos:column="54">ppcstitmlist</name><op:operator pos:line="1325" pos:column="66">)</op:operator> <name pos:line="1325" pos:column="68">CONST_METHOD_FF</name> <name pos:line="1325" pos:column="84">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="1327" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1327" pos:column="19">(<argument pos:line="1327" pos:column="20">void</argument>, <argument pos:line="1327" pos:column="26">GetIMsoCommandList</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1327" pos:column="46">(</op:operator><name pos:line="1327" pos:column="47">THIS_</name>
			<name pos:line="1328" pos:column="25">interface</name> <name pos:line="1328" pos:column="35">IMsoCommandList</name> <op:operator pos:line="1328" pos:column="51">*</op:operator><op:operator pos:line="1328" pos:column="52">*</op:operator> <name pos:line="1328" pos:column="54">ppcmdlist</name><op:operator pos:line="1328" pos:column="63">)</op:operator> <name pos:line="1328" pos:column="65">CONST_METHOD_FF</name> <name pos:line="1328" pos:column="81">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1330" pos:column="9">// UNDONE:  Move these two APIs to where they belong.  /Steve</comment>

	<comment type="line" pos:line="1332" pos:column="9">// FAdvSearchEnabled() - Returns fTrue if the advanced search dialog is</comment>
	<comment type="line" pos:line="1333" pos:column="9">// 						 enabled.  This returns the setting of this flag,</comment>
	<comment type="line" pos:line="1334" pos:column="9">//						 and the flag could be fTrue even though advanced</comment>
	<comment type="line" pos:line="1335" pos:column="9">//						 search is disabled if it is disabled by another</comment>
	<comment type="line" pos:line="1336" pos:column="9">//						 dialog setting (such as the fSearchEnabled flag).</comment>

	<macro><name pos:line="1338" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1338" pos:column="19">(<argument pos:line="1338" pos:column="20">MSOBOOL</argument>, <argument pos:line="1338" pos:column="29">FAdvSearchEnabled</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1338" pos:column="48">(</op:operator><name pos:line="1338" pos:column="49">THIS</name><op:operator pos:line="1338" pos:column="53">)</op:operator> <name pos:line="1338" pos:column="55">CONST_METHOD_FF</name> <name pos:line="1338" pos:column="71">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1340" pos:column="9">// EnableAdvSearch() - Enables or disables the advance search dialog.  Can</comment>
	<comment type="line" pos:line="1341" pos:column="9">//					   only be set when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1343" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1343" pos:column="19">EnableAdvSearch</name>) <parameter_list pos:line="1343" pos:column="36">(<param><decl><type><name pos:line="1343" pos:column="37">THIS_</name> <name pos:line="1343" pos:column="43">MSOBOOL</name></type> <name pos:line="1343" pos:column="51">fAdvSearchEnabled</name></decl></param>)</parameter_list> <name pos:line="1343" pos:column="70">PURE</name>;</function_decl>

	<comment type="line" pos:line="1345" pos:column="9">// FFileDirPicker() - Returns fTrue if the dialog is a file/dir picker</comment>
	<comment type="line" pos:line="1346" pos:column="9">//					  dialog, fFalse otherwise.  fFalse is default.</comment>

	<macro><name pos:line="1348" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1348" pos:column="19">(<argument pos:line="1348" pos:column="20">MSOBOOL</argument>, <argument pos:line="1348" pos:column="29">FFileDirPicker</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1348" pos:column="45">(</op:operator><name pos:line="1348" pos:column="46">THIS</name><op:operator pos:line="1348" pos:column="50">)</op:operator> <name pos:line="1348" pos:column="52">CONST_METHOD_FF</name> <name pos:line="1348" pos:column="68">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1350" pos:column="9">// SetFFileDirPicker() - Sets the dialog to be a file/dir picker dialog.</comment>
	<comment type="line" pos:line="1351" pos:column="9">//						 Can only be set when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1353" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1353" pos:column="19">SetFFileDirPicker</name>) <parameter_list pos:line="1353" pos:column="38">(<param><decl><type><name pos:line="1353" pos:column="39">THIS_</name> <name pos:line="1353" pos:column="45">MSOBOOL</name></type> <name pos:line="1353" pos:column="53">fFileDirPicker</name></decl></param>)</parameter_list> <name pos:line="1353" pos:column="69">PURE</name>;</function_decl>

	<comment type="line" pos:line="1355" pos:column="9">// SetView() - Sets the "view" shown in the dialog.  Not valid</comment>
	<comment type="line" pos:line="1356" pos:column="9">// to do this while the dialog is visible.</comment>

	<function_decl><type><name pos:line="1358" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1358" pos:column="19">SetView</name>) <parameter_list pos:line="1358" pos:column="28">(<param><decl><type><name pos:line="1358" pos:column="29">THIS_</name> <name pos:line="1358" pos:column="35">MSOVIEW</name></type> <name pos:line="1358" pos:column="43">ff</name></decl></param>)</parameter_list> <name pos:line="1358" pos:column="47">PURE</name>;</function_decl>

	<comment type="line" pos:line="1360" pos:column="9">// GetView() - Gets the "view" shown in the dialog.</comment>

	<function_decl><type><name pos:line="1362" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1362" pos:column="19">GetView</name>) <parameter_list pos:line="1362" pos:column="28">(<param><decl><type><name pos:line="1362" pos:column="29">THIS_</name> <name pos:line="1362" pos:column="35">MSOVIEW</name> <type:modifier pos:line="1362" pos:column="43">*</type:modifier></type> <name pos:line="1362" pos:column="45">pvff</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1362" pos:column="51">CONST_METHOD_FF</name></type> <name pos:line="1362" pos:column="67">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1364" pos:column="9">// SetFShowGroups() - Sets the dialog groups hits by directory</comment>
	<comment type="line" pos:line="1365" pos:column="9">// or not.  Not valid to do this when the dialog is visible.</comment>

	<name pos:line="1367" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1367" pos:column="18">(<param><decl><type><name pos:line="1367" pos:column="19">SetFShowGroups</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1367" pos:column="35">(<param><decl><type><name pos:line="1367" pos:column="36">THIS_</name> <name pos:line="1367" pos:column="42">MSOBOOL</name></type> <name pos:line="1367" pos:column="50">fShowGroups</name></decl></param>)</parameter_list> <name pos:line="1367" pos:column="63">PURE</name>;</function_decl>

	<comment type="line" pos:line="1369" pos:column="9">// GetView() - Gets whether or not the dialog groups hits by</comment>
	<comment type="line" pos:line="1370" pos:column="9">// directory.</comment>

	<macro><name pos:line="1372" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1372" pos:column="19">(<argument pos:line="1372" pos:column="20">MSOBOOL</argument>, <argument pos:line="1372" pos:column="29">FShowGroups</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1372" pos:column="42">(</op:operator><name pos:line="1372" pos:column="43">THIS</name><op:operator pos:line="1372" pos:column="47">)</op:operator> <name pos:line="1372" pos:column="49">CONST_METHOD_FF</name> <name pos:line="1372" pos:column="65">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1374" pos:column="9">// SetSort() - Sets the field used to sort hits shown in the dialog.</comment>
	<comment type="line" pos:line="1375" pos:column="9">// Not valid to do this while the dialog is visible.</comment>

	<function_decl><type><name pos:line="1377" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1377" pos:column="19">SetSort</name>) <parameter_list pos:line="1377" pos:column="28">(<param><decl><type><name pos:line="1377" pos:column="29">THIS_</name> <name pos:line="1377" pos:column="35">MSOSORT</name></type> <name pos:line="1377" pos:column="43">sff</name></decl></param>)</parameter_list> <name pos:line="1377" pos:column="48">PURE</name>;</function_decl>

	<comment type="line" pos:line="1379" pos:column="9">// GetView() - Gets the field the dialog hits are sorted on.</comment>

	<function_decl><type><name pos:line="1381" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1381" pos:column="19">GetSort</name>) <parameter_list pos:line="1381" pos:column="28">(<param><decl><type><name pos:line="1381" pos:column="29">THIS_</name> <name pos:line="1381" pos:column="35">MSOSORT</name> <type:modifier pos:line="1381" pos:column="43">*</type:modifier></type> <name pos:line="1381" pos:column="45">psff</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1381" pos:column="51">CONST_METHOD_FF</name></type> <name pos:line="1381" pos:column="67">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1383" pos:column="9">// ExecuteQuery() - Executes the active search without showing the</comment>
	<comment type="line" pos:line="1384" pos:column="9">// dialog.  This updates the results list.  It is not valid to do this</comment>
	<comment type="line" pos:line="1385" pos:column="9">// when a dialog is visible.</comment>

	<name pos:line="1387" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1387" pos:column="18">(<param><decl><type><name pos:line="1387" pos:column="19">ExecuteQuery</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1387" pos:column="33">(<param><decl><type><name pos:line="1387" pos:column="34">THIS</name></type></decl></param>)</parameter_list> <name pos:line="1387" pos:column="40">PURE</name>;</function_decl>

<comment type="block" pos:line="1389" pos:column="1">/* FMidEast */</comment>

<comment type="block" pos:line="1391" pos:column="1">/* FMidEast End */</comment>

	<comment type="line" pos:line="1393" pos:column="9">// SetPfnTranslateCodepage() - Sets the pointer to a fucntion used to</comment>
	<comment type="line" pos:line="1394" pos:column="9">// translate code pages</comment>
	<macro><name pos:line="1395" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1395" pos:column="19">(<argument pos:line="1395" pos:column="20">void</argument>, <argument pos:line="1395" pos:column="26">SetPfnTranslateCodepage</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1395" pos:column="51">(</op:operator><name pos:line="1395" pos:column="52">THIS_</name>
					<name pos:line="1396" pos:column="41">PFNTRANSLATECODEPAGE</name> <name pos:line="1396" pos:column="62">pfnXlateCodepg</name><op:operator pos:line="1396" pos:column="76">)</op:operator> <name pos:line="1396" pos:column="78">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1398" pos:column="9">// PfnTranslateCodepageGet() - Gets the pointer to a fucntion used to</comment>
	<comment type="line" pos:line="1399" pos:column="9">// translate code pages.  Returns NULL if SetPfnTranslateCodepage has</comment>
	<comment type="line" pos:line="1400" pos:column="9">// not been called.</comment>
	<macro><name pos:line="1401" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1401" pos:column="19">(<argument pos:line="1401" pos:column="20">PFNTRANSLATECODEPAGE</argument>, <argument pos:line="1401" pos:column="42">PfnTranslateCodepageGet</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1401" pos:column="67">(</op:operator><name pos:line="1401" pos:column="68">THIS</name><op:operator pos:line="1401" pos:column="72">)</op:operator> <name pos:line="1401" pos:column="74">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1403" pos:column="9">// SetFPreserveQuotes() - Sets whether double quotes in a file name are</comment>
	<comment type="line" pos:line="1404" pos:column="9">// preserved in the name returned to the app.</comment>
	<comment type="line" pos:line="1405" pos:column="9">//</comment>
	<function_decl><type><name pos:line="1406" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1406" pos:column="19">SetFPreserveQuotes</name>) <parameter_list pos:line="1406" pos:column="39">(<param><decl><type><name pos:line="1406" pos:column="40">THIS_</name> <name pos:line="1406" pos:column="46">MSOBOOL</name></type> <name pos:line="1406" pos:column="54">fPreserveQuotes</name></decl></param>)</parameter_list> <name pos:line="1406" pos:column="71">PURE</name>;</function_decl>

	<comment type="line" pos:line="1408" pos:column="9">// FPreserveQuotes() - Returns fTrue if set to preserve double quotes</comment>
	<comment type="line" pos:line="1409" pos:column="9">// around a non-standard file name.</comment>
	<macro><name pos:line="1410" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1410" pos:column="19">(<argument pos:line="1410" pos:column="20">MSOBOOL</argument>, <argument pos:line="1410" pos:column="29">FPreserveQuotes</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1410" pos:column="46">(</op:operator><name pos:line="1410" pos:column="47">THIS</name><op:operator pos:line="1410" pos:column="51">)</op:operator> <name pos:line="1410" pos:column="53">CONST_METHOD_FF</name> <name pos:line="1410" pos:column="69">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1412" pos:column="9">// DontUseODMAInNextDlg() - Set an internal flag which will be used to</comment>
	<comment type="line" pos:line="1413" pos:column="9">// make sure that the next call to ShowDlg uses our standard dialogs,</comment>
	<comment type="line" pos:line="1414" pos:column="9">// not the ODMA dialogs (which might normally be used if the user has</comment>
	<comment type="line" pos:line="1415" pos:column="9">// ODMA installed).</comment>
	<macro><name pos:line="1416" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1416" pos:column="19">(<argument pos:line="1416" pos:column="20">void</argument>, <argument pos:line="1416" pos:column="26">DontUseODMAInNextDlg</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1416" pos:column="48">(</op:operator><name pos:line="1416" pos:column="49">THIS</name><op:operator pos:line="1416" pos:column="53">)</op:operator> <name pos:line="1416" pos:column="55">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1418" pos:column="9">// FOnlyFileSys() - Returns fTrue if the dialog only allows items in the</comment>
	<comment type="line" pos:line="1419" pos:column="9">// file system to be selected (as opposed to eg. URLs).</comment>

	<macro><name pos:line="1421" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1421" pos:column="19">(<argument pos:line="1421" pos:column="20">MSOBOOL</argument>, <argument pos:line="1421" pos:column="29">FOnlyFileSys</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1421" pos:column="43">(</op:operator><name pos:line="1421" pos:column="44">THIS</name><op:operator pos:line="1421" pos:column="48">)</op:operator> <name pos:line="1421" pos:column="50">CONST_METHOD_FF</name> <name pos:line="1421" pos:column="66">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1423" pos:column="9">// SetFOnlyFileSys() - Sets whether the dialog allows only items in the</comment>
	<comment type="line" pos:line="1424" pos:column="9">// file system to be selected (as opposed to e.g. URLs).   The default</comment>
	<comment type="line" pos:line="1425" pos:column="9">// is that items may be selected from any supported store.</comment>

	<function_decl><type><name pos:line="1427" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1427" pos:column="19">SetFOnlyFileSys</name>) <parameter_list pos:line="1427" pos:column="36">(<param><decl><type><name pos:line="1427" pos:column="37">THIS_</name> <name pos:line="1427" pos:column="43">MSOBOOL</name></type> <name pos:line="1427" pos:column="51">fOnlyFileSys</name></decl></param>)</parameter_list> <name pos:line="1427" pos:column="65">PURE</name>;</function_decl>

<cpp:if pos:line="1429" pos:column="1">#<cpp:directive pos:line="1429" pos:column="2">if</cpp:directive>	<expr><name pos:line="1429" pos:column="9">VSMSODEBUG</name></expr></cpp:if>
	<comment type="line" pos:line="1430" pos:column="9">// SetFNoLoadIcon - For Powerpoint, to not do LoadIcon on NT which</comment>
	<comment type="line" pos:line="1431" pos:column="9">// causes an Access Violation and makes debugging powerpoint difficult.</comment>
	<comment type="line" pos:line="1432" pos:column="9">// Office '96 bug 40614</comment>

	<function_decl><type><name pos:line="1434" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1434" pos:column="19">SetFNoLoadIcon</name>) <parameter_list pos:line="1434" pos:column="35">(<param><decl><type><name pos:line="1434" pos:column="36">THIS_</name> <name pos:line="1434" pos:column="42">MSOBOOL</name></type> <name pos:line="1434" pos:column="50">fNoLoadIcon</name></decl></param>)</parameter_list> <name pos:line="1434" pos:column="63">PURE</name>;</function_decl>
<cpp:endif pos:line="1435" pos:column="1">#<cpp:directive pos:line="1435" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="1435" pos:column="8">// VSMSODEBUG</comment>

	<comment type="line" pos:line="1437" pos:column="9">// SetFResolveLinks() - Sets whether links should be resolved or not.</comment>
	<comment type="line" pos:line="1438" pos:column="9">// The default is to resolve them.</comment>

	<function_decl><type><name pos:line="1440" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1440" pos:column="19">SetFResolveLinks</name>) <parameter_list pos:line="1440" pos:column="37">(<param><decl><type><name pos:line="1440" pos:column="38">THIS_</name> <name pos:line="1440" pos:column="44">MSOBOOL</name></type> <name pos:line="1440" pos:column="52">fResolveLinks</name></decl></param>)</parameter_list> <name pos:line="1440" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="1442" pos:column="9">// SetHmsoinst() - Sets the HMSOINST for this IMsoFindFile</comment>
	<comment type="line" pos:line="1443" pos:column="9">// instance.  If not called, the last HMSOINST that called</comment>
 	<comment type="line" pos:line="1444" pos:column="9">// FInitOffice prior to MakeFindFile being called for this</comment>
	<comment type="line" pos:line="1445" pos:column="9">// IMsoFindFile instance is used.</comment>

	<function_decl><type><name pos:line="1447" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1447" pos:column="19">SetHmsoinst</name>) <parameter_list pos:line="1447" pos:column="32">(<param><decl><type><name pos:line="1447" pos:column="33">THIS_</name> <name pos:line="1447" pos:column="39">HMSOINST</name></type> <name pos:line="1447" pos:column="48">hmsoinst</name></decl></param>)</parameter_list> <name pos:line="1447" pos:column="58">PURE</name>;</function_decl>

	<comment type="line" pos:line="1449" pos:column="9">// GetQueryErrorMessage() - If ExecuteQuery returns an error,</comment>
	<comment type="line" pos:line="1450" pos:column="9">// this routine may be used to get a more detailed error message.</comment>
 	<comment type="line" pos:line="1451" pos:column="9">// Useful primarily for automation and Web Find.  The buffer pointed</comment>
 	<comment type="line" pos:line="1452" pos:column="9">// by wzMsg should be at least 255 characters long.  If no error</comment>
 	<comment type="line" pos:line="1453" pos:column="9">// occurred, or there is no more detailed error message available,</comment>
 	<comment type="line" pos:line="1454" pos:column="9">// the buffer will be empty on return.</comment>

	<function_decl><type><name pos:line="1456" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1456" pos:column="19">GetQueryErrorMessage</name>) <parameter_list pos:line="1456" pos:column="41">(<param><decl><type><name pos:line="1456" pos:column="42">THIS_</name> <name pos:line="1456" pos:column="48">WCHAR</name> <type:modifier pos:line="1456" pos:column="54">*</type:modifier></type><name pos:line="1456" pos:column="55">wzMsg</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1456" pos:column="62">CONST_METHOD_FF</name></type> <name pos:line="1456" pos:column="78">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1458" pos:column="9">// EnbalePreviewButton - Sets a flag to enable/disable the preview</comment>
	<comment type="line" pos:line="1459" pos:column="9">// button on the toolbar.</comment>
	<name pos:line="1460" pos:column="9">MSOMETHOD_</name><parameter_list pos:line="1460" pos:column="19">(<param><decl><type><name pos:line="1460" pos:column="20">void</name></type></decl></param>, <param><decl><type><name pos:line="1460" pos:column="26">EnablePreviewButton</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1460" pos:column="47">(<param><decl><type><name pos:line="1460" pos:column="48">THIS_</name> <name pos:line="1460" pos:column="54">MSOBOOL</name></type> <name pos:line="1460" pos:column="62">f</name></decl></param>)</parameter_list> <name pos:line="1460" pos:column="65">PURE</name>;</function_decl>

<cpp:ifdef pos:line="1462" pos:column="1">#<cpp:directive pos:line="1462" pos:column="2">ifdef</cpp:directive> <name pos:line="1462" pos:column="8">SHILSHOLE_ENABLED</name></cpp:ifdef>
	<comment type="line" pos:line="1463" pos:column="9">// GetTotalHitsAvailable() - For Web Search, we provide a mechanism</comment>
	<comment type="line" pos:line="1464" pos:column="9">// to limit the total hits returned for performance reasons.  To</comment>
	<comment type="line" pos:line="1465" pos:column="9">// allow displaying the number of hits available, the ISAPI module</comment>
	<comment type="line" pos:line="1466" pos:column="9">// can call this routine.  Note that this will work only with Web</comment>
	<comment type="line" pos:line="1467" pos:column="9">// Find.  It does not return the number of items on the Found File</comment>
	<comment type="line" pos:line="1468" pos:column="9">// list, but the actual count of hits retrieved by the retrieve</comment>
	<comment type="line" pos:line="1469" pos:column="9">// enumerator.</comment>

	<function_decl><type><name pos:line="1471" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1471" pos:column="19">GetTotalHitsAvailable</name>) <parameter_list pos:line="1471" pos:column="42">(<param><decl><type><name pos:line="1471" pos:column="43">THIS_</name> <name pos:line="1471" pos:column="49">unsigned</name> <type:modifier pos:line="1471" pos:column="58">*</type:modifier></type><name pos:line="1471" pos:column="59">pchitTotal</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1471" pos:column="71">CONST_METHOD_FF</name></type> <name pos:line="1471" pos:column="87">PURE</name></decl>;</decl_stmt>
<cpp:endif pos:line="1472" pos:column="1">#<cpp:directive pos:line="1472" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="1472" pos:column="8">// SHILSHOLE_ENABLED</comment>

	<comment type="line" pos:line="1474" pos:column="9">// SetConfirmReplaceEx() - A more functional version of SetFConfirmReplace.</comment>
	<comment type="line" pos:line="1475" pos:column="9">// Allows app to take responsibility only for overwrite checking in</comment>
	<comment type="line" pos:line="1476" pos:column="9">// file system (added mainly for word).</comment>

	<name pos:line="1478" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1478" pos:column="18">(<param><decl><type><name pos:line="1478" pos:column="19">SetConfirmReplaceEx</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1478" pos:column="40">(<param><decl><type><name pos:line="1478" pos:column="41">THIS_</name> <name pos:line="1478" pos:column="47">MSODMCR</name></type> <name pos:line="1478" pos:column="55">msocr</name></decl></param>)</parameter_list> <name pos:line="1478" pos:column="62">PURE</name>;</function_decl>

<comment type="block" pos:line="1480" pos:column="1">/* FMidEast */</comment>

<comment type="block" pos:line="1482" pos:column="1">/* FMidEast End */</comment>

	<comment type="line" pos:line="1484" pos:column="9">// SetIszFileTypePolicyDefault() - For "Default Save" feature, set</comment>
	<comment type="line" pos:line="1485" pos:column="9">// the index in the file type list of the type recommended by</comment>
	<comment type="line" pos:line="1486" pos:column="9">// administrative policy.  If not set, the default save feature is</comment>
	<comment type="line" pos:line="1487" pos:column="9">// not enabled.</comment>

	<function_decl><type><name pos:line="1489" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1489" pos:column="19">SetIszFileTypePolicyDefault</name>) <parameter_list pos:line="1489" pos:column="48">(<param><decl><type><name pos:line="1489" pos:column="49">THIS_</name> <name pos:line="1489" pos:column="55">int</name></type> <name pos:line="1489" pos:column="59">iszFileType</name></decl></param>)</parameter_list> <name pos:line="1489" pos:column="72">PURE</name>;</function_decl>

	<comment type="line" pos:line="1491" pos:column="9">// GetIszFileTypePolicyDefault() - For "Default Save" feature, get</comment>
	<comment type="line" pos:line="1492" pos:column="9">// the index in the file type list of the type recommended by</comment>
	<comment type="line" pos:line="1493" pos:column="9">// administrative policy.  If not set, the default save feature is</comment>
	<comment type="line" pos:line="1494" pos:column="9">// not enabled.</comment>

	<macro><name pos:line="1496" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1496" pos:column="19">(<argument pos:line="1496" pos:column="20">int</argument>, <argument pos:line="1496" pos:column="25">GetIszFileTypePolicyDefault</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1496" pos:column="54">(</op:operator><name pos:line="1496" pos:column="55">THIS</name><op:operator pos:line="1496" pos:column="59">)</op:operator> <name pos:line="1496" pos:column="61">CONST_METHOD_FF</name> <name pos:line="1496" pos:column="77">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1498" pos:column="9">// SetSearchPathPidl() - Sets the query for this find file to search for the</comment>
	<comment type="line" pos:line="1499" pos:column="9">// default file types (as set using IFileTypeList::SetIszDefault()), with</comment>
	<comment type="line" pos:line="1500" pos:column="9">// no other selection criteria.  If NULL, the current directory is used.</comment>
	<comment type="line" pos:line="1501" pos:column="9">// This method short-cuts using the IMsoSearch object for this find file</comment>
	<comment type="line" pos:line="1502" pos:column="9">// object. The ppidl is an array of pidl (so multpile pidl folders can be</comment>
	<comment type="line" pos:line="1503" pos:column="9">// passed). Each pidl passed should be relative to desktop folder (or in other</comment>
	<comment type="line" pos:line="1504" pos:column="9">// words, absolute pidl). cpidl is the number of pidls passed.</comment>
	<comment type="line" pos:line="1505" pos:column="9">// NOTE: ppidl is taken as a void* parameter. However, it should be LPITEMIDLIST*</comment>
	<comment type="line" pos:line="1506" pos:column="9">// The reason for it being void here is that LPITEMIDLIST's definition is in</comment>
	<comment type="line" pos:line="1507" pos:column="9">// shlobj.h and excel fails to compile if you include it in this file.</comment>

	<function_decl><type><name pos:line="1509" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1509" pos:column="19">SetSearchPathPidl</name>) <parameter_list pos:line="1509" pos:column="38">(<param><decl><type><name pos:line="1509" pos:column="39">THIS_</name> <specifier pos:line="1509" pos:column="45">const</specifier> <name pos:line="1509" pos:column="51">void</name> <type:modifier pos:line="1509" pos:column="56">*</type:modifier></type><name pos:line="1509" pos:column="57">ppidl</name></decl></param>, <param><decl><type><name pos:line="1509" pos:column="64">int</name></type> <name pos:line="1509" pos:column="68">cpidl</name></decl></param>)</parameter_list> <name pos:line="1509" pos:column="75">PURE</name>;</function_decl>

	<comment type="line" pos:line="1511" pos:column="9">// EnableOpenInNativeApp - enables opening of the selected files in their respective</comment>
	<comment type="line" pos:line="1512" pos:column="9">// apps. This method is valid only for Open dialogs. The flag will be neglected for</comment>
	<comment type="line" pos:line="1513" pos:column="9">// other variations of the dialog.</comment>
	<comment type="line" pos:line="1514" pos:column="9">// Default: Flag is false.</comment>
	<function_decl><type><name pos:line="1515" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1515" pos:column="19">EnableOpenInNativeApp</name>) <parameter_list pos:line="1515" pos:column="42">(<param><decl><type><name pos:line="1515" pos:column="43">THIS_</name> <name pos:line="1515" pos:column="49">MSOBOOL</name></type> <name pos:line="1515" pos:column="57">fEnable</name></decl></param>, <param><decl><type><name pos:line="1515" pos:column="66">MSOBOOL</name></type> <name pos:line="1515" pos:column="74">fOpensUnknown</name></decl></param>,
									  <param><decl><type><name pos:line="1516" pos:column="75">MSODMAPPID</name></type> <name pos:line="1516" pos:column="86">appidCurrentApp</name></decl></param>)</parameter_list> <name pos:line="1516" pos:column="103">PURE</name>;</function_decl>

	<comment type="line" pos:line="1518" pos:column="9">// EnableSaveAsWebOptions - enables switching layout for SaveAsWebPage</comment>
	<function_decl><type><name pos:line="1519" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1519" pos:column="19">EnableSaveAsWebOptions</name>) <parameter_list pos:line="1519" pos:column="43">(<param><decl><type><name pos:line="1519" pos:column="44">THIS_</name> <name pos:line="1519" pos:column="50">int</name></type> <name pos:line="1519" pos:column="54">iHtmlTypeFamily</name></decl></param>,
									  <param><decl><type><name pos:line="1520" pos:column="75">MSODMLAYOUT</name></type> <name pos:line="1520" pos:column="87">layoutStyle</name></decl></param>)</parameter_list> <name pos:line="1520" pos:column="100">PURE</name>;</function_decl>

	<comment type="line" pos:line="1522" pos:column="9">// DisableSaveAsWebOptions - disables switching layout for SaveAsWebPage</comment>
	<function_decl><type><name pos:line="1523" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1523" pos:column="19">DisableSaveAsWebOptions</name>) <parameter_list pos:line="1523" pos:column="44">(<param><decl><type><name pos:line="1523" pos:column="45">THIS</name></type></decl></param>)</parameter_list> <name pos:line="1523" pos:column="51">PURE</name>;</function_decl>

	<comment type="line" pos:line="1525" pos:column="9">// Returns index into type list of the html type set by EnableSaveAsWebOptions</comment>
	<comment type="line" pos:line="1526" pos:column="9">// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</comment>
	<comment type="line" pos:line="1527" pos:column="9">// This method is obsolete and is kept here to maintain backward compatibility with mso9</comment>
	<function_decl><type><name pos:line="1528" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1528" pos:column="19">GetIHtmlTypeFamily</name>) <parameter_list pos:line="1528" pos:column="39">(<param><decl><type><name pos:line="1528" pos:column="40">THIS_</name> <name pos:line="1528" pos:column="46">int</name> <type:modifier pos:line="1528" pos:column="50">*</type:modifier></type><name pos:line="1528" pos:column="51">iHtmlTypeFamily</name></decl></param>)</parameter_list> <name pos:line="1528" pos:column="68">PURE</name>;</function_decl>

	<comment type="line" pos:line="1530" pos:column="9">// Returns layout style set by EnableSaveAsWebOptions</comment>
	<comment type="line" pos:line="1531" pos:column="9">// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</comment>
	<comment type="line" pos:line="1532" pos:column="9">// This method is obsolete and is kept here to maintain backward compatibility with mso9</comment>
	<function_decl><type><name pos:line="1533" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1533" pos:column="19">GetLayoutStyle</name>) <parameter_list pos:line="1533" pos:column="35">(<param><decl><type><name pos:line="1533" pos:column="36">THIS_</name> <name pos:line="1533" pos:column="42">MSODMLAYOUT</name>  <type:modifier pos:line="1533" pos:column="55">*</type:modifier></type><name pos:line="1533" pos:column="56">layoutStyle</name></decl></param>)</parameter_list> <name pos:line="1533" pos:column="69">PURE</name>;</function_decl>

	<comment type="line" pos:line="1535" pos:column="9">// SetShortFileName() - Specifies whether Find File (Save As dialog only)</comment>
	<comment type="line" pos:line="1536" pos:column="9">// will force 8.3 file names.</comment>

	<macro><name pos:line="1538" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1538" pos:column="19">(<argument pos:line="1538" pos:column="20">void</argument>, <argument pos:line="1538" pos:column="26">SetShortFileName</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1538" pos:column="44">(</op:operator><name pos:line="1538" pos:column="45">THIS_</name> <name pos:line="1538" pos:column="51">MSOBOOL</name> <name pos:line="1538" pos:column="59">fSet</name><op:operator pos:line="1538" pos:column="63">)</op:operator> <name pos:line="1538" pos:column="65">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1540" pos:column="9">// Sets the tcid for the two group picture</comment>
	<function_decl><type><name pos:line="1541" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1541" pos:column="19">TcidTwoGroupPictSet</name>) <parameter_list pos:line="1541" pos:column="40">(<param><decl><type><name pos:line="1541" pos:column="41">THIS_</name> <name pos:line="1541" pos:column="47">int</name></type> <name pos:line="1541" pos:column="51">tcid</name></decl></param>)</parameter_list> <name pos:line="1541" pos:column="57">PURE</name>;</function_decl>

	<comment type="line" pos:line="1543" pos:column="9">// Gets the tcid for the two group picture</comment>
	<function_decl><type><name pos:line="1544" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1544" pos:column="19">TcidTwoGroupPictGet</name>) <parameter_list pos:line="1544" pos:column="40">(<param><decl><type><name pos:line="1544" pos:column="41">THIS_</name> <name pos:line="1544" pos:column="47">int</name> <type:modifier pos:line="1544" pos:column="51">*</type:modifier></type><name pos:line="1544" pos:column="52">ptcid</name></decl></param>)</parameter_list> <name pos:line="1544" pos:column="59">PURE</name>;</function_decl>

	<comment type="line" pos:line="1546" pos:column="9">// Sets the tcid for the open button picture</comment>
	<function_decl><type><name pos:line="1547" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1547" pos:column="19">SetOpenBtnTcid</name>) <parameter_list pos:line="1547" pos:column="35">(<param><decl><type><name pos:line="1547" pos:column="36">THIS_</name> <name pos:line="1547" pos:column="42">int</name></type> <name pos:line="1547" pos:column="46">tcid</name></decl></param>)</parameter_list> <name pos:line="1547" pos:column="52">PURE</name>;</function_decl>

	<comment type="line" pos:line="1549" pos:column="9">// Gets the tcid for the open button picture</comment>
	<function_decl><type><name pos:line="1550" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1550" pos:column="19">GetOpenBtnTcid</name>) <parameter_list pos:line="1550" pos:column="35">(<param><decl><type><name pos:line="1550" pos:column="36">THIS_</name> <name pos:line="1550" pos:column="42">int</name> <type:modifier pos:line="1550" pos:column="46">*</type:modifier></type><name pos:line="1550" pos:column="47">ptcid</name></decl></param>)</parameter_list> <name pos:line="1550" pos:column="54">PURE</name>;</function_decl>

	<comment type="line" pos:line="1552" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1553" pos:column="9">// File system change events that can be handled by the app</comment>

	<comment type="line" pos:line="1555" pos:column="9">// RegisterPfnFSChangeHandler() - Register a change handler pointed to by pfnFSChange.</comment>
	<comment type="line" pos:line="1556" pos:column="9">// The handler must be of the form</comment>

	<comment type="line" pos:line="1558" pos:column="9">// BOOL FFileSystemChangeHandler(MSODMFSCHANGE fsChangeType, WCHAR * wzOld, WCHAR *wzNew);</comment>

	<function_decl><type><name pos:line="1560" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1560" pos:column="19">RegisterPfnFSChangeHandler</name>) <parameter_list pos:line="1560" pos:column="47">(<param><decl><type><name pos:line="1560" pos:column="48">THIS_</name> <name pos:line="1560" pos:column="54">PFNDMFSCHANGE</name></type> <name pos:line="1560" pos:column="68">pfnFSChange</name></decl></param>)</parameter_list> <name pos:line="1560" pos:column="81">PURE</name>;</function_decl>

	<comment type="line" pos:line="1562" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1563" pos:column="9">// RegisterPfnFolderIconHandler() - Register a callback that lets the app</comment>
	<comment type="line" pos:line="1564" pos:column="9">// override the icons for folders.</comment>
	<comment type="line" pos:line="1565" pos:column="9">// The handler must be of the form</comment>

	<comment type="line" pos:line="1567" pos:column="9">// BOOL FFolderIconHandler(WCHAR *wzPath, BOOL fOpenFolder, HIMAGELIST himl, int *piiml);</comment>

	<function_decl><type><name pos:line="1569" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1569" pos:column="19">RegisterPfnFolderIconHandler</name>) <parameter_list pos:line="1569" pos:column="49">(<param><decl><type><name pos:line="1569" pos:column="50">THIS_</name> <name pos:line="1569" pos:column="56">PFNDMFLDRICONHDLR</name></type> <name pos:line="1569" pos:column="74">pfnFolderIconHandler</name></decl></param>)</parameter_list> <name pos:line="1569" pos:column="96">PURE</name>;</function_decl>

	<comment type="line" pos:line="1571" pos:column="9">// FIgnoreVtiDirs()</comment>

	<macro><name pos:line="1573" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1573" pos:column="19">(<argument pos:line="1573" pos:column="20">MSOBOOL</argument>, <argument pos:line="1573" pos:column="29">FIgnoreVtiDirs</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1573" pos:column="45">(</op:operator><name pos:line="1573" pos:column="46">THIS</name><op:operator pos:line="1573" pos:column="50">)</op:operator> <name pos:line="1573" pos:column="52">CONST_METHOD_FF</name> <name pos:line="1573" pos:column="68">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1575" pos:column="9">// SetFIgnoreVtiDirs() - Makes the dialog not display _VTI_* dirs</comment>
	<comment type="line" pos:line="1576" pos:column="9">//					   Can be set only when the dialog is not visible.</comment>

	<function_decl><type><name pos:line="1578" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1578" pos:column="19">SetFIgnoreVtiDirs</name>) <parameter_list pos:line="1578" pos:column="38">(<param><decl><type><name pos:line="1578" pos:column="39">THIS_</name> <name pos:line="1578" pos:column="45">MSOBOOL</name></type> <name pos:line="1578" pos:column="53">fIgnoreVtiDirs</name></decl></param>)</parameter_list> <name pos:line="1578" pos:column="69">PURE</name>;</function_decl>

	<comment type="line" pos:line="1580" pos:column="9">// SetGrfPlaces() - Sets which standard places will appear. By default, all standard places will be displayed. Calling this</comment>
	<comment type="line" pos:line="1581" pos:column="9">// will override that behavior.</comment>
	<comment type="line" pos:line="1582" pos:column="9">//(MSODMFFPLACES_HISTORY | MSODMFFPLACES_MYDOCUMENTS | MSODMFFPLACES_DESKTOP | MSODMFFPLACES_FAVORITES | MSODMFFPLACES_WEBFOLDERS)</comment>
	<function_decl><type><name pos:line="1583" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1583" pos:column="19">SetGrfPlaces</name>)<parameter_list pos:line="1583" pos:column="32">(<param><decl><type><name pos:line="1583" pos:column="33">THIS_</name> <name pos:line="1583" pos:column="39">ULONG</name></type> <name pos:line="1583" pos:column="45">grfPlaces</name></decl></param>)</parameter_list> <name pos:line="1583" pos:column="56">PURE</name>;</function_decl>

	<comment type="line" pos:line="1585" pos:column="9">// GrfPlaces() - Returns which standard places will appear. By default, will be MSODMFFPLACES_ALL.</comment>
	<comment type="line" pos:line="1586" pos:column="9">//(MSODMFFPLACES_HISTORY | MSODMFFPLACES_MYDOCUMENTS | MSODMFFPLACES_DESKTOP | MSODMFFPLACES_FAVORITES | MSODMFFPLACES_WEBFOLDERS)</comment>
	<macro><name pos:line="1587" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1587" pos:column="19">(<argument pos:line="1587" pos:column="20">DWORD</argument>, <argument pos:line="1587" pos:column="27">GrfPlaces</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="1587" pos:column="37">(</op:operator><name pos:line="1587" pos:column="38">THIS</name><op:operator pos:line="1587" pos:column="42">)</op:operator> <name pos:line="1587" pos:column="44">CONST_METHOD_FF</name> <name pos:line="1587" pos:column="60">PURE</name></expr>;</expr_stmt>
	
	<comment type="line" pos:line="1589" pos:column="9">// SetFShowPlacesBar - Sets whether the Places Bar will appear or not. By default, set to TRUE.</comment>
	<function_decl><type><name pos:line="1590" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1590" pos:column="19">SetFShowPlacesBar</name>)<parameter_list pos:line="1590" pos:column="37">(<param><decl><type><name pos:line="1590" pos:column="38">THIS_</name> <name pos:line="1590" pos:column="44">MSOBOOL</name></type> <name pos:line="1590" pos:column="52">fShow</name></decl></param>)</parameter_list> <name pos:line="1590" pos:column="59">PURE</name>;</function_decl>

	<comment type="line" pos:line="1592" pos:column="9">// FShowPlacesBar - Returns whether the Places Bar will appear or not. By default, returns TRUE.</comment>
	<macro><name pos:line="1593" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1593" pos:column="19">(<argument pos:line="1593" pos:column="20">MSOBOOL</argument>,<argument pos:line="1593" pos:column="28">FShowPlacesBar</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="1593" pos:column="43">(</op:operator><name pos:line="1593" pos:column="44">THIS</name><op:operator pos:line="1593" pos:column="48">)</op:operator> <name pos:line="1593" pos:column="50">CONST_METHOD_FF</name> <name pos:line="1593" pos:column="66">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1595" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1596" pos:column="9">// Dialog display methods.</comment>

	<comment type="line" pos:line="1598" pos:column="9">// GetHwndParent() - Returns the hwnd of the dialog client's parent.</comment>
	<function_decl><type><name pos:line="1599" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1599" pos:column="19">GetHwndParent</name>)<parameter_list pos:line="1599" pos:column="33">(<param><decl><type><name pos:line="1599" pos:column="34">THIS_</name> <name pos:line="1599" pos:column="40">HWND</name> <type:modifier pos:line="1599" pos:column="45">*</type:modifier></type> <name pos:line="1599" pos:column="47">hwnd</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1599" pos:column="53">CONST_METHOD_FF</name></type> <name pos:line="1599" pos:column="69">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1601" pos:column="9">// SetHwndParent() - Sets the dialog client's parent.</comment>
	<name pos:line="1602" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1602" pos:column="18">(<param><decl><type><name pos:line="1602" pos:column="19">SetHwndParent</name></type></decl></param>)</parameter_list><parameter_list pos:line="1602" pos:column="33">(<param><decl><type><name pos:line="1602" pos:column="34">THIS_</name> <name pos:line="1602" pos:column="40">HWND</name></type> <name pos:line="1602" pos:column="45">hwnd</name></decl></param>)</parameter_list> <name pos:line="1602" pos:column="51">PURE</name>;</function_decl>
	
	<comment type="line" pos:line="1604" pos:column="9">// GetWzFilenameTitle() - Sets the "File Name:" static text dialog field.</comment>
	<macro><name pos:line="1605" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1605" pos:column="19">(<argument pos:line="1605" pos:column="20">void</argument>, <argument pos:line="1605" pos:column="26">GetWzFilenameTitle</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1605" pos:column="46">(</op:operator><name pos:line="1605" pos:column="47">THIS_</name> <name pos:line="1605" pos:column="53">WCHAR</name> <op:operator pos:line="1605" pos:column="59">*</op:operator> <name pos:line="1605" pos:column="61">wzFilenameTitle</name><op:operator pos:line="1605" pos:column="76">)</op:operator> <name pos:line="1605" pos:column="78">CONST_METHOD_FF</name> <name pos:line="1605" pos:column="94">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1607" pos:column="9">// SetWzFilenameTitle() - Sets the "File Name:" static text dialog field.</comment>
	<function_decl><type><name pos:line="1608" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1608" pos:column="19">SetWzFilenameTitle</name>)<parameter_list pos:line="1608" pos:column="38">(<param><decl><type><name pos:line="1608" pos:column="39">THIS_</name> <name pos:line="1608" pos:column="45">WCHAR</name> <type:modifier pos:line="1608" pos:column="51">*</type:modifier></type><name pos:line="1608" pos:column="52">wzFolderTitle</name></decl></param>)</parameter_list> <name pos:line="1608" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="1610" pos:column="9">// HrSetDynamicPlaces - Set the array of dynamic places.  The array</comment>
	<comment type="line" pos:line="1611" pos:column="9">//                      should be terminated with a NULL pointer.  Can</comment>
	<comment type="line" pos:line="1612" pos:column="9">//                      only be set when the dialog is not visible.</comment>
	<function_decl><type><name pos:line="1613" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1613" pos:column="19">HrSetDynamicPlaces</name>) <parameter_list pos:line="1613" pos:column="39">(<param><decl><type><name pos:line="1613" pos:column="40">THIS_</name> <name pos:line="1613" pos:column="46">MSODMFFDP</name> <type:modifier pos:line="1613" pos:column="56">*</type:modifier><type:modifier pos:line="1613" pos:column="57">*</type:modifier></type><name pos:line="1613" pos:column="58">rgpdp</name></decl></param>)</parameter_list> <name pos:line="1613" pos:column="65">PURE</name>;</function_decl>

	<comment type="line" pos:line="1615" pos:column="9">// DisableFileTypeDropdown - disable the dropdown control for the file type list</comment>
	<macro><name pos:line="1616" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1616" pos:column="19">(<argument pos:line="1616" pos:column="20">void</argument>, <argument pos:line="1616" pos:column="26">DisableFileTypeDropdown</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1616" pos:column="51">(</op:operator><name pos:line="1616" pos:column="52">THIS</name><op:operator pos:line="1616" pos:column="56">)</op:operator> <name pos:line="1616" pos:column="58">PURE</name></expr>;</expr_stmt>
	<comment type="line" pos:line="1617" pos:column="9">// SetOpenAsNew - open the selected file into its native app but as a new doc</comment>
	<macro><name pos:line="1618" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1618" pos:column="19">(<argument pos:line="1618" pos:column="20">void</argument>, <argument pos:line="1618" pos:column="26">SetOpenAsNew</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1618" pos:column="40">(</op:operator><name pos:line="1618" pos:column="41">THIS</name><op:operator pos:line="1618" pos:column="45">)</op:operator> <name pos:line="1618" pos:column="47">PURE</name></expr>;</expr_stmt>
	<comment type="line" pos:line="1619" pos:column="9">// SetFileNewWebTemplates - when one is in the Templates for my projects dialog</comment>
	<macro><name pos:line="1620" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1620" pos:column="19">(<argument pos:line="1620" pos:column="20">void</argument>, <argument pos:line="1620" pos:column="26">SetFileNewWebTemplates</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1620" pos:column="50">(</op:operator><name pos:line="1620" pos:column="51">THIS</name><op:operator pos:line="1620" pos:column="55">)</op:operator> <name pos:line="1620" pos:column="57">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1622" pos:column="9">//SetFFilenameFiltering - Don't use this. This is for Word.</comment>
	<macro><name pos:line="1623" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1623" pos:column="19">(<argument pos:line="1623" pos:column="20">void</argument>, <argument pos:line="1623" pos:column="26">SetFFilenameFiltering</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="1623" pos:column="48">(</op:operator><name pos:line="1623" pos:column="49">THIS_</name> <name pos:line="1623" pos:column="55">MSOBOOL</name> <name pos:line="1623" pos:column="63">fFiltering</name><op:operator pos:line="1623" pos:column="73">)</op:operator> <name pos:line="1623" pos:column="75">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1625" pos:column="9">//SetFInitialFiltering - Don't use this. This is for Word.</comment>
	<macro><name pos:line="1626" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1626" pos:column="19">(<argument pos:line="1626" pos:column="20">MSOBOOL</argument>, <argument pos:line="1626" pos:column="29">FFilenameFiltering</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="1626" pos:column="48">(</op:operator><name pos:line="1626" pos:column="49">THIS</name><op:operator pos:line="1626" pos:column="53">)</op:operator> <name pos:line="1626" pos:column="55">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1628" pos:column="9">// ActivateDefaultSaveURLForTemplates - use Web Forms to get the default save</comment>
	<comment type="line" pos:line="1629" pos:column="9">//                                      for the URL but only when the file type </comment>
	<comment type="line" pos:line="1630" pos:column="9">//                                      selected is the same as 'iwz'</comment>
	<macro><name pos:line="1631" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1631" pos:column="19">(<argument pos:line="1631" pos:column="20">void</argument>, <argument pos:line="1631" pos:column="26">ActivateDefaultSaveURLForTemplates</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1631" pos:column="62">(</op:operator><name pos:line="1631" pos:column="63">THIS_</name> <name pos:line="1631" pos:column="69">int</name> <name pos:line="1631" pos:column="73">iwz</name><op:operator pos:line="1631" pos:column="76">)</op:operator> <name pos:line="1631" pos:column="78">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1633" pos:column="9">// SetLimitScopeInWebFolders - only show Web Folders, plus only http folders</comment>
	<comment type="line" pos:line="1634" pos:column="9">// that are non-WebDrives and enumerable</comment>
	<macro><name pos:line="1635" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1635" pos:column="19">(<argument pos:line="1635" pos:column="20">void</argument>, <argument pos:line="1635" pos:column="26">SetLimitScopeInWebFolders</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1635" pos:column="53">(</op:operator><name pos:line="1635" pos:column="54">THIS</name><op:operator pos:line="1635" pos:column="58">)</op:operator> <name pos:line="1635" pos:column="60">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="1637" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1637" pos:column="19">(<argument pos:line="1637" pos:column="20">void</argument>, <argument pos:line="1637" pos:column="26">SetPfnAppReadWriteProp</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1637" pos:column="50">(</op:operator><name pos:line="1637" pos:column="51">THIS_</name>
				<name pos:line="1638" pos:column="33">PFNAPPREADWRITEPROP</name> <name pos:line="1638" pos:column="53">pfnAppReadWriteProp</name><op:operator pos:line="1638" pos:column="72">,</op:operator> <name pos:line="1638" pos:column="74">DWORD</name> <name pos:line="1638" pos:column="80">dwPrvData</name><op:operator pos:line="1638" pos:column="89">)</op:operator> <name pos:line="1638" pos:column="91">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1640" pos:column="9">// PfnAppReadWriteProp() - Gets the pointer to a function used to</comment>
	<comment type="line" pos:line="1641" pos:column="9">// read\write app doc property.  Returns NULL if SetPfnAppReadWriteProp has</comment>
	<comment type="line" pos:line="1642" pos:column="9">// not been called.</comment>
	<macro><name pos:line="1643" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1643" pos:column="19">(<argument pos:line="1643" pos:column="20">PFNAPPREADWRITEPROP</argument>, <argument pos:line="1643" pos:column="41">PfnAppReadWriteProp</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1643" pos:column="62">(</op:operator><name pos:line="1643" pos:column="63">THIS</name><op:operator pos:line="1643" pos:column="67">)</op:operator> <name pos:line="1643" pos:column="69">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="1645" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1645" pos:column="19">(<argument pos:line="1645" pos:column="20">DWORD</argument>, <argument pos:line="1645" pos:column="27">GetMetaDataPrvData</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1645" pos:column="47">(</op:operator><name pos:line="1645" pos:column="48">THIS</name><op:operator pos:line="1645" pos:column="52">)</op:operator> <name pos:line="1645" pos:column="54">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1647" pos:column="9">// FEnableThumbnails() - Returns fTrue if thumbnail support is enabled.</comment>
	<comment type="line" pos:line="1648" pos:column="9">//					  fFalse is default.</comment>
	<macro><name pos:line="1649" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1649" pos:column="19">(<argument pos:line="1649" pos:column="20">MSOBOOL</argument>, <argument pos:line="1649" pos:column="29">FEnableThumbnails</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1649" pos:column="48">(</op:operator><name pos:line="1649" pos:column="49">THIS</name><op:operator pos:line="1649" pos:column="53">)</op:operator> <name pos:line="1649" pos:column="55">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1651" pos:column="9">// SetFEnableThumbnails() - Enables or disables thumbnail support.</comment>
	<comment type="line" pos:line="1652" pos:column="9">//						 Can only be set when the dialog is not visible.</comment>
	<macro><name pos:line="1653" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1653" pos:column="19">(<argument pos:line="1653" pos:column="20">void</argument>, <argument pos:line="1653" pos:column="26">SetFEnableThumbnails</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1653" pos:column="48">(</op:operator><name pos:line="1653" pos:column="49">THIS_</name> <name pos:line="1653" pos:column="55">MSOBOOL</name> <name pos:line="1653" pos:column="63">fEnable</name><op:operator pos:line="1653" pos:column="70">)</op:operator> <name pos:line="1653" pos:column="72">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1655" pos:column="9">// SetFormsURLForFileNew() - passes in the retrieved FormsURL of the</comment>
	<comment type="line" pos:line="1656" pos:column="9">// default path so File Open will show it in Web View properly</comment>
	<macro><name pos:line="1657" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1657" pos:column="19">(<argument pos:line="1657" pos:column="20">void</argument>, <argument pos:line="1657" pos:column="26">SetFormsURLForFileNew</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="1657" pos:column="48">(</op:operator><name pos:line="1657" pos:column="49">THIS_</name> <name pos:line="1657" pos:column="55">LPWSTR</name> <name pos:line="1657" pos:column="62">pwzURL</name><op:operator pos:line="1657" pos:column="68">)</op:operator> <name pos:line="1657" pos:column="70">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1659" pos:column="9">// FNoFormDialog() - Specifies whether Find File (Save As dialog only)</comment>
	<comment type="line" pos:line="1660" pos:column="9">// will try to bring up the form dialog</comment>
	<macro><name pos:line="1661" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1661" pos:column="19">(<argument pos:line="1661" pos:column="20">MSOBOOL</argument>, <argument pos:line="1661" pos:column="29">FNoFormDialog</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1661" pos:column="44">(</op:operator><name pos:line="1661" pos:column="45">THIS</name><op:operator pos:line="1661" pos:column="49">)</op:operator> <name pos:line="1661" pos:column="51">CONST_METHOD_FF</name> <name pos:line="1661" pos:column="67">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1663" pos:column="9">// SetFNoFormDialog() - If set to fTrue, Find File (Save As) will NOT</comment>
	<comment type="line" pos:line="1664" pos:column="9">// try to bring up the form dialog</comment>
	<function_decl><type><name pos:line="1665" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1665" pos:column="19">SetFNoFormDialog</name>) <parameter_list pos:line="1665" pos:column="37">(<param><decl><type><name pos:line="1665" pos:column="38">THIS_</name> <name pos:line="1665" pos:column="44">MSOBOOL</name></type> <name pos:line="1665" pos:column="52">fNoFormDialog</name></decl></param>)</parameter_list> <name pos:line="1665" pos:column="67">PURE</name>;</function_decl>

   <comment type="line" pos:line="1667" pos:column="4">// SetFNoWow() - If set to fTrue, the Add Web Folder wizard item</comment>
   <comment type="line" pos:line="1668" pos:column="4">// will not be displayed.</comment>
	<function_decl><type><name pos:line="1669" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1669" pos:column="19">SetFNoWOW</name>) <parameter_list pos:line="1669" pos:column="30">(<param><decl><type><name pos:line="1669" pos:column="31">THIS_</name> <name pos:line="1669" pos:column="37">MSOBOOL</name></type> <name pos:line="1669" pos:column="45">fNoWOW</name></decl></param>)</parameter_list> <name pos:line="1669" pos:column="53">PURE</name>;</function_decl>

   <comment type="line" pos:line="1671" pos:column="4">// FNoWow() - Specifies whether the Add Web Folder wizard item</comment>
   <comment type="line" pos:line="1672" pos:column="4">// should be displayed.</comment>
   <macro><name pos:line="1673" pos:column="4">MSOMETHOD_</name><argument_list pos:line="1673" pos:column="14">(<argument pos:line="1673" pos:column="15">MSOBOOL</argument>, <argument pos:line="1673" pos:column="24">FNoWOW</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1673" pos:column="32">(</op:operator><name pos:line="1673" pos:column="33">THIS</name><op:operator pos:line="1673" pos:column="37">)</op:operator> <name pos:line="1673" pos:column="39">CONST_METHOD_FF</name> <name pos:line="1673" pos:column="55">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1675" pos:column="9">// SetHaveFileNewDefaultPath - default path is given for File New dialog</comment>
	<macro><name pos:line="1676" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1676" pos:column="19">(<argument pos:line="1676" pos:column="20">void</argument>, <argument pos:line="1676" pos:column="26">SetHaveFileNewDefaultPath</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1676" pos:column="53">(</op:operator><name pos:line="1676" pos:column="54">THIS</name><op:operator pos:line="1676" pos:column="58">)</op:operator> <name pos:line="1676" pos:column="60">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1678" pos:column="9">//O10 139844 - SetFEnableWebView - enable/disable webview in File Dialogs for </comment>
	<comment type="line" pos:line="1679" pos:column="9">//OWS10 Office.Net sites and document libraries.</comment>
	<function_decl><type><name pos:line="1680" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1680" pos:column="19">SetFEnableWebView</name>) <parameter_list pos:line="1680" pos:column="38">(<param><decl><type><name pos:line="1680" pos:column="39">THIS_</name> <name pos:line="1680" pos:column="45">MSOBOOL</name></type> <name pos:line="1680" pos:column="53">fWebView</name></decl></param>)</parameter_list> <name pos:line="1680" pos:column="63">PURE</name>;</function_decl>

	<comment type="line" pos:line="1682" pos:column="9">//FEnableWebView - is webview in File Dialogs for </comment>
	<comment type="line" pos:line="1683" pos:column="9">//OWS10 Office.Net sites and document libraries enabled?</comment>
	<macro><name pos:line="1684" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1684" pos:column="19">(<argument pos:line="1684" pos:column="20">MSOBOOL</argument>, <argument pos:line="1684" pos:column="29">FEnableWebView</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1684" pos:column="45">(</op:operator><name pos:line="1684" pos:column="46">THIS</name><op:operator pos:line="1684" pos:column="50">)</op:operator> <name pos:line="1684" pos:column="52">CONST_METHOD_FF</name> <name pos:line="1684" pos:column="68">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1686" pos:column="9">//O10 221942 - SetFDefaultWebView - We default to webview in </comment>
	<comment type="line" pos:line="1687" pos:column="9">//File Dialogs for OWS10 Office.Net sites and document libraries </comment>
	<comment type="line" pos:line="1688" pos:column="9">//We won't default if fDefault is FALSE. </comment>
	<function_decl><type><name pos:line="1689" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1689" pos:column="19">SetFDefaultWebView</name>) <parameter_list pos:line="1689" pos:column="39">(<param><decl><type><name pos:line="1689" pos:column="40">THIS_</name> <name pos:line="1689" pos:column="46">MSOBOOL</name></type> <name pos:line="1689" pos:column="54">fDefault</name></decl></param>)</parameter_list> <name pos:line="1689" pos:column="64">PURE</name>;</function_decl>

	<comment type="line" pos:line="1691" pos:column="9">//FDefaultWebView - we don't default to webview for </comment>
	<comment type="line" pos:line="1692" pos:column="9">//OWS10 Office.Net sites and document libraries if this returns FALSE</comment>
	<macro><name pos:line="1693" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1693" pos:column="19">(<argument pos:line="1693" pos:column="20">MSOBOOL</argument>, <argument pos:line="1693" pos:column="29">FDefaultWebView</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1693" pos:column="46">(</op:operator><name pos:line="1693" pos:column="47">THIS</name><op:operator pos:line="1693" pos:column="51">)</op:operator> <name pos:line="1693" pos:column="53">CONST_METHOD_FF</name> <name pos:line="1693" pos:column="69">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1695" pos:column="9">// FOtherAppFiles - file(s) launched into other app(s)</comment>
	<macro><name pos:line="1696" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1696" pos:column="19">(<argument pos:line="1696" pos:column="20">MSOBOOL</argument>, <argument pos:line="1696" pos:column="29">FOtherAppFiles</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1696" pos:column="45">(</op:operator><name pos:line="1696" pos:column="46">THIS_</name> <name pos:line="1696" pos:column="52">interface</name> <name pos:line="1696" pos:column="62">IMsoString</name> <op:operator pos:line="1696" pos:column="73">*</op:operator><name pos:line="1696" pos:column="74">pstr</name><op:operator pos:line="1696" pos:column="78">)</op:operator> <name pos:line="1696" pos:column="80">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1698" pos:column="9">//SetFWordMail</comment>
	<function_decl><type><name pos:line="1699" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1699" pos:column="19">SetFWordMail</name>) <parameter_list pos:line="1699" pos:column="33">(<param><decl><type><name pos:line="1699" pos:column="34">THIS_</name> <name pos:line="1699" pos:column="40">MSOBOOL</name></type> <name pos:line="1699" pos:column="48">fWordMail</name></decl></param>)</parameter_list> <name pos:line="1699" pos:column="59">PURE</name>;</function_decl>

	<comment type="line" pos:line="1701" pos:column="9">//FWordMail</comment>
	<macro><name pos:line="1702" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1702" pos:column="19">(<argument pos:line="1702" pos:column="20">MSOBOOL</argument>, <argument pos:line="1702" pos:column="29">FWordMail</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1702" pos:column="40">(</op:operator><name pos:line="1702" pos:column="41">THIS</name><op:operator pos:line="1702" pos:column="45">)</op:operator> <name pos:line="1702" pos:column="47">CONST_METHOD_FF</name> <name pos:line="1702" pos:column="63">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1704" pos:column="9">//SetFEnableShellBrowser</comment>
	<function_decl><type><name pos:line="1705" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1705" pos:column="19">SetFEnableShellBrowser</name>) <parameter_list pos:line="1705" pos:column="43">(<param><decl><type><name pos:line="1705" pos:column="44">THIS_</name> <name pos:line="1705" pos:column="50">MSOBOOL</name></type> <name pos:line="1705" pos:column="58">fEnable</name></decl></param>)</parameter_list> <name pos:line="1705" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="1707" pos:column="9">//FEnableShellBrowser</comment>
	<macro><name pos:line="1708" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1708" pos:column="19">(<argument pos:line="1708" pos:column="20">MSOBOOL</argument>, <argument pos:line="1708" pos:column="29">FEnableShellBrowser</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1708" pos:column="50">(</op:operator><name pos:line="1708" pos:column="51">THIS</name><op:operator pos:line="1708" pos:column="55">)</op:operator> <name pos:line="1708" pos:column="57">CONST_METHOD_FF</name> <name pos:line="1708" pos:column="73">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1710" pos:column="9">//SetFEnableSearchTheWeb</comment>
	<function_decl><type><name pos:line="1711" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1711" pos:column="19">SetFEnableSearchTheWeb</name>) <parameter_list pos:line="1711" pos:column="43">(<param><decl><type><name pos:line="1711" pos:column="44">THIS_</name> <name pos:line="1711" pos:column="50">MSOBOOL</name></type> <name pos:line="1711" pos:column="58">fEnable</name></decl></param>)</parameter_list> <name pos:line="1711" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="1713" pos:column="9">//FEnableSearchTheWeb</comment>
	<macro><name pos:line="1714" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1714" pos:column="19">(<argument pos:line="1714" pos:column="20">MSOBOOL</argument>, <argument pos:line="1714" pos:column="29">FEnableSearchTheWeb</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1714" pos:column="50">(</op:operator><name pos:line="1714" pos:column="51">THIS</name><op:operator pos:line="1714" pos:column="55">)</op:operator> <name pos:line="1714" pos:column="57">CONST_METHOD_FF</name> <name pos:line="1714" pos:column="73">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1716" pos:column="9">//SetWVDefaultSaveLocationWz</comment>
	<macro><name pos:line="1717" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1717" pos:column="19">(<argument pos:line="1717" pos:column="20">void</argument>, <argument pos:line="1717" pos:column="26">SetWVDefaultSaveLocationWz</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1717" pos:column="54">(</op:operator><name pos:line="1717" pos:column="55">THIS_</name> <name pos:line="1717" pos:column="61">LPCWSTR</name> <name pos:line="1717" pos:column="69">pwz</name><op:operator pos:line="1717" pos:column="72">)</op:operator> <name pos:line="1717" pos:column="74">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1719" pos:column="9">//WzGetWVDefaultSaveLocation</comment>
	<macro><name pos:line="1720" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1720" pos:column="19">(<argument pos:line="1720" pos:column="20">LPCWSTR</argument>, <argument pos:line="1720" pos:column="29">WzGetWVDefaultSaveLocation</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1720" pos:column="57">(</op:operator><name pos:line="1720" pos:column="58">THIS</name><op:operator pos:line="1720" pos:column="62">)</op:operator> <name pos:line="1720" pos:column="64">PURE</name></expr>;</expr_stmt>

}</block><empty_stmt pos:line="1722" pos:column="2">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="1725" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1726" pos:column="1">// MsoMakeFindFile</comment>
<comment type="line" pos:line="1727" pos:column="1">//</comment>
<comment type="line" pos:line="1728" pos:column="1">// Returns a new IMsoFindFile instance.  Will return CO_E_DLLNOTFOUND if a</comment>
<comment type="line" pos:line="1729" pos:column="1">// required DLL is missing.</comment>

<macro><name pos:line="1731" pos:column="1">MSOAPI_</name><argument_list pos:line="1731" pos:column="8">(<argument pos:line="1731" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1731" pos:column="18">MsoMakeFindFile</name><argument_list pos:line="1731" pos:column="33">(<argument><expr><name pos:line="1731" pos:column="34">IMsoFindFile</name> <op:operator pos:line="1731" pos:column="47">*</op:operator><op:operator pos:line="1731" pos:column="48">*</op:operator> <name pos:line="1731" pos:column="50">ppfndfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="1734" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1735" pos:column="1">// MsoHrDoSimpleEditDlg</comment>
<comment type="line" pos:line="1736" pos:column="1">//</comment>

<macro><name pos:line="1738" pos:column="1">MSOAPI_</name><argument_list pos:line="1738" pos:column="8">(<argument pos:line="1738" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="1738" pos:column="18">MsoHrDoSimpleEditDlg</name><argument_list pos:line="1738" pos:column="38">(<argument pos:line="1738" pos:column="39">HMSOINST pinst</argument>,
									  <argument pos:line="1739" pos:column="75">const WCHAR *wzDlgTitle</argument>,
									  <argument pos:line="1740" pos:column="75">const WCHAR *wzEditTitle</argument>,
									  <argument pos:line="1741" pos:column="75">WCHAR *wzEdit</argument>,
									  <argument pos:line="1742" pos:column="75">const WCHAR *wzDescrText</argument>)</argument_list></macro><empty_stmt pos:line="1742" pos:column="100">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="1744" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1745" pos:column="1">// MsoFRosebudMonikerProvider</comment>
<comment type="line" pos:line="1746" pos:column="1">//</comment>

<macro><name pos:line="1748" pos:column="1">MSOAPIX_</name><argument_list pos:line="1748" pos:column="9">(<argument pos:line="1748" pos:column="10">BOOL</argument>)</argument_list></macro> <macro><name pos:line="1748" pos:column="16">MsoFRosebudMonikerProvider</name><argument_list pos:line="1748" pos:column="42">(<argument pos:line="1748" pos:column="43">const WCHAR *wzUrl</argument>, <argument pos:line="1748" pos:column="63">DWORD cp</argument>)</argument_list></macro><empty_stmt pos:line="1748" pos:column="72">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="1750" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1751" pos:column="1">// MsoDontMakeFindFile</comment>
<comment type="line" pos:line="1752" pos:column="1">//</comment>
<comment type="line" pos:line="1753" pos:column="1">// This is called by Ren only, just before FLoadFileOpen (or any future apps</comment>
<comment type="line" pos:line="1754" pos:column="1">// that won't need our dialog).  Don't create a default CFindFile object in</comment>
<comment type="line" pos:line="1755" pos:column="1">// FLoadFileOpen.</comment>
<comment type="line" pos:line="1756" pos:column="1">//</comment>
<macro><name pos:line="1757" pos:column="1">MSOAPI_</name><argument_list pos:line="1757" pos:column="8">(<argument pos:line="1757" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1757" pos:column="18">MsoDontMakeFindFile</name> <argument_list pos:line="1757" pos:column="38">()</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:line="1759" pos:column="1">#<cpp:directive pos:line="1759" pos:column="2">ifdef</cpp:directive> <name pos:line="1759" pos:column="8">SHILSHOLE_ENABLED</name></cpp:ifdef>
<comment type="line" format="doxygen" pos:line="1760" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1761" pos:column="1">// MsoGetIndexInformation</comment>
<comment type="line" pos:line="1762" pos:column="1">//</comment>
<comment type="line" pos:line="1763" pos:column="1">// Return information about an index in the directory wzDir.  Any of the</comment>
<comment type="line" pos:line="1764" pos:column="1">// other parameters may be NULL if you don't care about that particular piece</comment>
<comment type="line" pos:line="1765" pos:column="1">// of information.  Returns S_OK if OK, E_INVALID if the directory is invalid</comment>
<comment type="line" pos:line="1766" pos:column="1">// or does not contain an index.  The buffers passed for dates should be at</comment>
<comment type="line" pos:line="1767" pos:column="1">// least 255 characters long to accomdate all localized forms of dates.</comment>
<comment type="line" pos:line="1768" pos:column="1">//</comment>
<macro><name pos:line="1769" pos:column="1">MSOAPI_</name><argument_list pos:line="1769" pos:column="8">(<argument pos:line="1769" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1769" pos:column="18">MsoGetIndexInformation</name><argument_list pos:line="1769" pos:column="40">(
	<argument><expr pos:line="1770" pos:column="9">const <name pos:line="1770" pos:column="15">WCHAR</name>		<op:operator pos:line="1770" pos:column="33">*</op:operator><name pos:line="1770" pos:column="34">wzDir</name></expr></argument>,
	<argument><expr><name pos:line="1771" pos:column="9">WCHAR</name>			<op:operator pos:line="1771" pos:column="33">*</op:operator><name pos:line="1771" pos:column="34">wzCreatedDate</name></expr></argument>,			<comment type="line" pos:line="1771" pos:column="65">// formatted date strings</comment>
	<argument><expr><name pos:line="1772" pos:column="9">WCHAR</name>			<op:operator pos:line="1772" pos:column="33">*</op:operator><name pos:line="1772" pos:column="34">wzModifiedDate</name></expr></argument>,
	<argument><expr><name pos:line="1773" pos:column="9">WCHAR</name>			<op:operator pos:line="1773" pos:column="33">*</op:operator><name pos:line="1773" pos:column="34">wzDocTypes</name></expr></argument>,			<comment type="line" pos:line="1773" pos:column="65">// e.g. "Microsoft Office Documents"</comment>
	<argument><expr><name pos:line="1774" pos:column="9">DWORD</name>			<op:operator pos:line="1774" pos:column="33">*</op:operator><name pos:line="1774" pos:column="34">pdwNumDocs</name></expr></argument>,			<comment type="line" pos:line="1774" pos:column="65">// Number of documents in the index</comment>
	<argument><expr><name pos:line="1775" pos:column="9">BOOL</name>			<op:operator pos:line="1775" pos:column="33">*</op:operator><name pos:line="1775" pos:column="34">pfRelevance</name></expr></argument>,			<comment type="line" pos:line="1775" pos:column="65">// TRUE if index supports relevance ranking</comment>
	<argument><expr><name pos:line="1776" pos:column="9">BOOL</name>			<op:operator pos:line="1776" pos:column="33">*</op:operator><name pos:line="1776" pos:column="34">pfPropCache</name></expr></argument>,			<comment type="line" pos:line="1776" pos:column="65">// TRUE if the index includes a property cache</comment>
	<argument><expr><name pos:line="1777" pos:column="9">BOOL</name>			<op:operator pos:line="1777" pos:column="33">*</op:operator><name pos:line="1777" pos:column="34">pfPhraseSearch</name></expr></argument>,		<comment type="line" pos:line="1777" pos:column="65">// TRUE if the index supports phrase searches</comment>
	<argument><expr><name pos:line="1778" pos:column="9">BOOL</name>			<op:operator pos:line="1778" pos:column="33">*</op:operator><name pos:line="1778" pos:column="34">pfHttpMappings</name></expr></argument>,		<comment type="line" pos:line="1778" pos:column="65">// TRUE if the index supports http returns.</comment>
	<argument><expr><name pos:line="1779" pos:column="9">DWORD</name>			<op:operator pos:line="1779" pos:column="33">*</op:operator><name pos:line="1779" pos:column="34">pdwMaxReturnedDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="1779" pos:column="57">// Maximum number of documents that will be</comment>
											<comment type="line" pos:line="1780" pos:column="89">// returned from a retrieval request</comment>
											<comment type="line" pos:line="1781" pos:column="89">// (0xFFFFFFFF -&gt; no limit)</comment>
<cpp:endif pos:line="1782" pos:column="1">#<cpp:directive pos:line="1782" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="1782" pos:column="8">// SHILSHOLE_ENABLED</comment>

<comment type="line" format="doxygen" pos:line="1784" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1785" pos:column="1">// MsoDontInitializeVisibles</comment>
<comment type="line" pos:line="1786" pos:column="1">//</comment>
<comment type="line" pos:line="1787" pos:column="1">// This is called by FindFast NT Service only, just before FLoadFileOpen</comment>
<comment type="line" pos:line="1788" pos:column="1">// It prevents FLoadFileOpen from initializing the message window, etc.</comment>
<comment type="line" pos:line="1789" pos:column="1">//</comment>
<macro><name pos:line="1790" pos:column="1">MSOAPI_</name><argument_list pos:line="1790" pos:column="8">(<argument pos:line="1790" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1790" pos:column="18">MsoDontInitializeVisibles</name><argument_list pos:line="1790" pos:column="43">()</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="1793" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1794" pos:column="1">// MsoFLoadFileOpen</comment>
<comment type="line" pos:line="1795" pos:column="1">//</comment>
<comment type="line" pos:line="1796" pos:column="1">// Load the language-specific DLL for File Open and initialize the structures</comment>
<comment type="line" pos:line="1797" pos:column="1">// used by File Open.  This can be called at idle time, after Office is</comment>
<comment type="line" pos:line="1798" pos:column="1">// initialized.  MakeFindFile will call FLoadFileOpen if FLoadFileOpen is</comment>
<comment type="line" pos:line="1799" pos:column="1">// not called before MakeFindFile is called.</comment>
<comment type="line" pos:line="1800" pos:column="1">// The NoUI version of MsoFLoadFileOpen does non-ui initialization only.  If</comment>
<comment type="line" pos:line="1801" pos:column="1">// it is called, then MsoFLoadFileOpen with UI must also be called afterward.</comment>

<macro><name pos:line="1803" pos:column="1">MSOAPI_</name><argument_list pos:line="1803" pos:column="8">(<argument pos:line="1803" pos:column="9">MSOBOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1803" pos:column="18">MsoFLoadFileOpen</name><argument_list pos:line="1803" pos:column="34">(<argument><expr><name pos:line="1803" pos:column="35">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="1804" pos:column="1">MSOAPIX_</name><argument_list pos:line="1804" pos:column="9">(<argument pos:line="1804" pos:column="10">MSOBOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1804" pos:column="19">MsoFLoadFileOpenNoUI</name><argument_list pos:line="1804" pos:column="39">(<argument><expr><name pos:line="1804" pos:column="40">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="1807" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1808" pos:column="1">// MsoSetOlDocLogHandle()</comment>
<comment type="line" pos:line="1809" pos:column="1">//</comment>
<comment type="line" pos:line="1810" pos:column="1">// This must be called before any IOLDocument events can be logged to Ren.</comment>
<comment type="line" pos:line="1811" pos:column="1">// The hOutlook handle should be obtained from MsoFInitLogging and released</comment>
<comment type="line" pos:line="1812" pos:column="1">// using MsoFUninitLogging.</comment>
<macro><name pos:line="1813" pos:column="1">MSOAPI_</name><argument_list pos:line="1813" pos:column="8">(<argument pos:line="1813" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="1813" pos:column="15">MsoSetOlDocLogHandle</name><argument_list pos:line="1813" pos:column="35">(<argument pos:line="1813" pos:column="36">HANDLE hOutlook</argument>)</argument_list></macro><empty_stmt pos:line="1813" pos:column="52">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="1815" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1816" pos:column="1">// MsoSetElsGlobalLoggingState()</comment>
<comment type="line" pos:line="1817" pos:column="1">//</comment>
<comment type="line" pos:line="1818" pos:column="1">// This can be called to globally enable/disable Ren logging for IOLDocuments.</comment>
<comment type="line" pos:line="1819" pos:column="1">// This is set to msoiolelsRenLogging by default.</comment>
<macro><name pos:line="1820" pos:column="1">MSOAPI_</name><argument_list pos:line="1820" pos:column="8">(<argument pos:line="1820" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="1820" pos:column="15">MsoSetElsGlobalLoggingState</name><argument_list pos:line="1820" pos:column="42">(<argument pos:line="1820" pos:column="43">MSOIOLELS elsLoggingState</argument>)</argument_list></macro><empty_stmt pos:line="1820" pos:column="69">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="1822" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1823" pos:column="1">// MsoGetElsGlobalLoggingState()</comment>
<comment type="line" pos:line="1824" pos:column="1">//</comment>
<comment type="line" pos:line="1825" pos:column="1">// This can be called to retrieve the global Ren logging state for IOLDocuments.</comment>
<comment type="line" pos:line="1826" pos:column="1">// This is set to msoiolelsRenLogging by default.</comment>
<macro><name pos:line="1827" pos:column="1">MSOAPIX_</name><argument_list pos:line="1827" pos:column="9">(<argument pos:line="1827" pos:column="10">MSOIOLELS</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1827" pos:column="21">MsoGetElsGlobalLoggingState</name><argument_list pos:line="1827" pos:column="48">()</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="1830" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1831" pos:column="1">// MsoHcursorFindFile</comment>
<comment type="line" pos:line="1832" pos:column="1">//</comment>
<comment type="line" pos:line="1833" pos:column="1">// Gets the current mouse cursor.  This should be used by client apps.</comment>
<comment type="line" pos:line="1834" pos:column="1">// when responding to WM_SETCURSOR messages while an Office dialog is up.</comment>

<macro><name pos:line="1836" pos:column="1">MSOAPI_</name><argument_list pos:line="1836" pos:column="8">(<argument pos:line="1836" pos:column="9">HCURSOR</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1836" pos:column="18">MsoHcursorFindFile</name><argument_list pos:line="1836" pos:column="36">()</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="1839" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1840" pos:column="1">// MsoSetFindFileFont</comment>
<comment type="line" pos:line="1841" pos:column="1">//</comment>
<comment type="line" pos:line="1842" pos:column="1">// Set the fonts for the current find file object.  This should be called</comment>
<comment type="line" pos:line="1843" pos:column="1">// prior to calling MakeFindFile.  At that point, FindFile will create its own</comment>
<comment type="line" pos:line="1844" pos:column="1">// fonts if the fonts are NULL.  (It will also create whatever fonts are</comment>
<comment type="line" pos:line="1845" pos:column="1">// missing.</comment>
<comment type="line" pos:line="1846" pos:column="1">//</comment>
<macro><name pos:line="1847" pos:column="1">MSOAPIX_</name><argument_list pos:line="1847" pos:column="9">(<argument pos:line="1847" pos:column="10">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="1847" pos:column="19">MsoSetFindFileFont</name><argument_list pos:line="1847" pos:column="37">(<argument pos:line="1847" pos:column="38">HFONT hfont</argument>, <argument pos:line="1847" pos:column="51">MSOFONT ifont</argument>)</argument_list></macro><empty_stmt pos:line="1847" pos:column="65">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="1850" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1851" pos:column="1">// MsoCreateMonitorWindow</comment>
<comment type="line" pos:line="1852" pos:column="1">//</comment>
<comment type="line" pos:line="1853" pos:column="1">// Apps which call FLoadFileOpen in a thread (Word) must first call this</comment>
<comment type="line" pos:line="1854" pos:column="1">// routine from the main thread (where they will call ShowDlg from) in order</comment>
<comment type="line" pos:line="1855" pos:column="1">// to create a little monitor window we use for Plug and Play messages.  This</comment>
<comment type="line" pos:line="1856" pos:column="1">// must be created BEFORE FLoadFileOpen is called.</comment>
<comment type="line" pos:line="1857" pos:column="1">//</comment>
<macro><name pos:line="1858" pos:column="1">MSOAPI_</name><argument_list pos:line="1858" pos:column="8">(<argument pos:line="1858" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="1858" pos:column="18">MsoCreateMonitorWindow</name><argument_list pos:line="1858" pos:column="40">(<argument><expr><name pos:line="1858" pos:column="41">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="1861" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1862" pos:column="1">// MsoDwGetShellSetting</comment>
<comment type="line" pos:line="1863" pos:column="1">//</comment>
<comment type="line" pos:line="1864" pos:column="1">// Get a shell setting.</comment>
<comment type="line" pos:line="1865" pos:column="1">//</comment>
<macro><name pos:line="1866" pos:column="1">MSOAPI_</name><argument_list pos:line="1866" pos:column="8">(<argument pos:line="1866" pos:column="9">DWORD</argument>)</argument_list></macro> <macro><name pos:line="1866" pos:column="16">MsoDwGetShellSetting</name><argument_list pos:line="1866" pos:column="36">(<argument pos:line="1866" pos:column="37">MSOSSF msossf</argument>)</argument_list></macro><empty_stmt pos:line="1866" pos:column="51">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="1869" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="1870" pos:column="1">// IMsoSearch</comment>
<comment type="line" pos:line="1871" pos:column="1">//</comment>
<comment type="line" pos:line="1872" pos:column="1">// Represents a search and the search results.</comment>

<decl_stmt><decl><type><name pos:line="1874" pos:column="1">interface</name></type> <name pos:line="1874" pos:column="11">IMsoFoundFileList</name></decl>;</decl_stmt>		<comment type="line" pos:line="1874" pos:column="41">// Forward declare</comment>
<decl_stmt><decl><type><name pos:line="1875" pos:column="1">interface</name></type> <name pos:line="1875" pos:column="11">IMsoSelectedFileList</name></decl>;</decl_stmt>	<comment type="line" pos:line="1875" pos:column="33">// Forward declare</comment>

<cpp:undef pos:line="1877" pos:column="1">#<cpp:directive pos:line="1877" pos:column="2">undef</cpp:directive> <name pos:line="1877" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="1878" pos:column="1">#<cpp:directive pos:line="1878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1878" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="1878" pos:column="19">IMsoSearch</cpp:value></cpp:define>

<macro><name pos:line="1880" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="1880" pos:column="19">(<argument pos:line="1880" pos:column="20">IMsoSearch</argument>, <argument pos:line="1880" pos:column="32">IUnknown</argument>)</argument_list></macro>
<block pos:line="1881" pos:column="1">{
	<comment type="line" pos:line="1882" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1883" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="1884" pos:column="9">//</comment>
	<comment type="line" pos:line="1885" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="1886" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="1888" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1889" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="1891" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1891" pos:column="19">QueryInterface</name>) <parameter_list pos:line="1891" pos:column="35">(<param><decl><type><name pos:line="1891" pos:column="36">THIS_</name> <name pos:line="1891" pos:column="42">REFIID</name></type> <name pos:line="1891" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="1891" pos:column="57">void</name> <type:modifier pos:line="1891" pos:column="62">*</type:modifier><type:modifier pos:line="1891" pos:column="63">*</type:modifier></type><name pos:line="1891" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="1891" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="1893" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1893" pos:column="19">(<argument pos:line="1893" pos:column="20">ULONG</argument>, <argument pos:line="1893" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1893" pos:column="35">(</op:operator><name pos:line="1893" pos:column="36">THIS</name><op:operator pos:line="1893" pos:column="40">)</op:operator> <name pos:line="1893" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="1895" pos:column="9">MSOMETHOD_</name><argument_list pos:line="1895" pos:column="19">(<argument pos:line="1895" pos:column="20">ULONG</argument>, <argument pos:line="1895" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="1895" pos:column="36">(</op:operator><name pos:line="1895" pos:column="37">THIS</name><op:operator pos:line="1895" pos:column="41">)</op:operator> <name pos:line="1895" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1897" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1898" pos:column="9">// Standard Office Debug method</comment>
	<function_decl><type><name pos:line="1899" pos:column="9">MSODEBUGMETHOD</name>

	<comment type="line" pos:line="1901" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1902" pos:column="9">// Query Modification</comment>

	<comment type="line" pos:line="1904" pos:column="9">// GetSzFileName() - Retrieves the file name for this search.  A blank</comment>
	<comment type="line" pos:line="1905" pos:column="9">// file name implies that all files will match (subject to other</comment>
	<comment type="line" pos:line="1906" pos:column="9">// criteria).  FF_S_TRUNCATED is returned if the file name was truncated.</comment>

	<name pos:line="1908" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1908" pos:column="19">GetSzFileName</name>) <parameter_list pos:line="1908" pos:column="34">(<param><decl><type><name pos:line="1908" pos:column="35">THIS_</name> <name pos:line="1908" pos:column="41">WCHAR</name> <type:modifier pos:line="1908" pos:column="47">*</type:modifier></type><name pos:line="1908" pos:column="48">szFileName</name></decl></param>, <param><decl><type><name pos:line="1908" pos:column="60">int</name></type> <name pos:line="1908" pos:column="64">cb</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="1909" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="1909" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1911" pos:column="9">// SetSzFileName() - Sets the file name for the search.  A zero-length</comment>
	<comment type="line" pos:line="1912" pos:column="9">// or NULL file name are both treated as matching all files.</comment>

	<name pos:line="1914" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1914" pos:column="18">(<param><decl><type><name pos:line="1914" pos:column="19">SetSzFileName</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1914" pos:column="34">(<param><decl><type><name pos:line="1914" pos:column="35">THIS_</name> <specifier pos:line="1914" pos:column="41">const</specifier> <name pos:line="1914" pos:column="47">WCHAR</name> <type:modifier pos:line="1914" pos:column="53">*</type:modifier></type><name pos:line="1914" pos:column="54">szFileName</name></decl></param>)</parameter_list> <name pos:line="1914" pos:column="66">PURE</name>;</function_decl>

	<comment type="line" pos:line="1916" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="1917" pos:column="9">// Search Results</comment>

	<comment type="line" pos:line="1919" pos:column="9">// GetIMsoFoundFileList() - Returns the object representing the list of</comment>
	<comment type="line" pos:line="1920" pos:column="9">// found files.</comment>

	<function_decl><type><name pos:line="1922" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1922" pos:column="19">GetIMsoFoundFileList</name>) <parameter_list pos:line="1922" pos:column="41">(<param><decl><type><name pos:line="1922" pos:column="42">THIS_</name>
			<name pos:line="1923" pos:column="25">interface</name> <name pos:line="1923" pos:column="35">IMsoFoundFileList</name> <type:modifier pos:line="1923" pos:column="53">*</type:modifier><type:modifier pos:line="1923" pos:column="54">*</type:modifier></type> <name pos:line="1923" pos:column="56">ppffilelist</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="1924" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="1924" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1926" pos:column="9">// GetISelectedFileList() - Returns the object representing the list of</comment>
	<comment type="line" pos:line="1927" pos:column="9">// selected files.</comment>

	<name pos:line="1929" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1929" pos:column="18">(<param><decl><type><name pos:line="1929" pos:column="19">GetIMsoSelectedFileList</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1929" pos:column="44">(<param><decl><type><name pos:line="1929" pos:column="45">THIS_</name>
			<name pos:line="1930" pos:column="25">interface</name> <name pos:line="1930" pos:column="35">IMsoSelectedFileList</name> <type:modifier pos:line="1930" pos:column="56">*</type:modifier><type:modifier pos:line="1930" pos:column="57">*</type:modifier></type> <name pos:line="1930" pos:column="59">ppselfilelist</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1930" pos:column="74">CONST_METHOD_FF</name></type> <name pos:line="1930" pos:column="90">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1932" pos:column="9">// UNDONE:  Move these APIs to where they belong. /Steve</comment>

	<comment type="line" pos:line="1934" pos:column="9">// FGetPropSzValMacro() - Gets the value of the contraint on the property</comment>
	<comment type="line" pos:line="1935" pos:column="9">// specified by the enumerated type.  FFalse is returned if the contraint</comment>
	<comment type="line" pos:line="1936" pos:column="9">// on this property is too complex, i.e. that there is more than one</comment>
	<comment type="line" pos:line="1937" pos:column="9">// criterion on the given property.  Otherwise, fTrue is returned, even</comment>
	<comment type="line" pos:line="1938" pos:column="9">// if there is no criterion on this property, in which case the returned</comment>
	<comment type="line" pos:line="1939" pos:column="9">// string is zero-length.</comment>

	<name pos:line="1941" pos:column="9">MSOMETHOD_</name><parameter_list pos:line="1941" pos:column="19">(<param><decl><type><name pos:line="1941" pos:column="20">BOOL</name></type></decl></param>, <param><decl><type><name pos:line="1941" pos:column="26">FGetPropSzValMacro</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1941" pos:column="46">(<param><decl><type><name pos:line="1941" pos:column="47">THIS_</name> <name pos:line="1941" pos:column="53">MSOSTDPROP</name></type> <name pos:line="1941" pos:column="64">stdprop</name></decl></param>,
			<param><decl><type><name pos:line="1942" pos:column="25">WCHAR</name> <type:modifier pos:line="1942" pos:column="31">*</type:modifier></type><name pos:line="1942" pos:column="32">szPropVal</name></decl></param>, <param><decl><type><name pos:line="1942" pos:column="43">int</name></type> <name pos:line="1942" pos:column="47">cb</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="1943" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="1943" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1945" pos:column="9">// SetPropSzValMacro() - Sets the value for the criterion of the given</comment>
	<comment type="line" pos:line="1946" pos:column="9">// property, removing all other criteria for the property, even if the</comment>
	<comment type="line" pos:line="1947" pos:column="9">// pre-existing criteria were complex.  No criteria is set for the property</comment>
	<comment type="line" pos:line="1948" pos:column="9">// if the given string is zero-length.  If wzErrMsg is non-NULL, it should</comment>
	<comment type="line" pos:line="1949" pos:column="9">// point to a buffer that will contain an error message if this routine</comment>
	<comment type="line" pos:line="1950" pos:column="9">// returns MSO_E_SYNTAX_ERROR.  In this case, cchErrMsg is the size of</comment>
	<comment type="line" pos:line="1951" pos:column="9">// the buffer passed.  Make this buffer at least 300 characters to insure</comment>
	<comment type="line" pos:line="1952" pos:column="9">// that you can hold all error messages.  If an error is returned and</comment>
	<comment type="line" pos:line="1953" pos:column="9">// pichFirst and pichLim are non-NULL, the integers they point to will be</comment>
	<comment type="line" pos:line="1954" pos:column="9">// set to the character positions within the input string (szPropVal)</comment>
	<comment type="line" pos:line="1955" pos:column="9">// that delimit the error.</comment>

	<name pos:line="1957" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1957" pos:column="18">(<param><decl><type><name pos:line="1957" pos:column="19">SetPropSzValMacro</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1957" pos:column="38">(<param><decl><type><name pos:line="1957" pos:column="39">THIS_</name> <name pos:line="1957" pos:column="45">MSOSTDPROP</name></type> <name pos:line="1957" pos:column="56">stdprop</name></decl></param>,
			<param><decl><type><specifier pos:line="1958" pos:column="25">const</specifier> <name pos:line="1958" pos:column="31">WCHAR</name> <type:modifier pos:line="1958" pos:column="37">*</type:modifier></type><name pos:line="1958" pos:column="38">szPropVal</name></decl></param>,
			<param><decl><type><name pos:line="1959" pos:column="25">WCHAR</name> <type:modifier pos:line="1959" pos:column="31">*</type:modifier></type><name pos:line="1959" pos:column="32">wzErrMsg</name></decl></param>,
			<param><decl><type><name pos:line="1960" pos:column="25">unsigned</name></type> <name pos:line="1960" pos:column="34">cchErrMsg</name></decl></param>,
			<param><decl><type><name pos:line="1961" pos:column="25">int</name>	<type:modifier pos:line="1961" pos:column="33">*</type:modifier></type><name pos:line="1961" pos:column="34">pichFirst</name></decl></param>,
			<param><decl><type><name pos:line="1962" pos:column="25">int</name> <type:modifier pos:line="1962" pos:column="29">*</type:modifier></type><name pos:line="1962" pos:column="30">pichLim</name></decl></param>)</parameter_list> <name pos:line="1962" pos:column="39">PURE</name>;</function_decl>

	<comment type="line" pos:line="1964" pos:column="9">// Clear() - Clears the search.</comment>

	<function_decl><type><name pos:line="1966" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1966" pos:column="19">Clear</name>) <parameter_list pos:line="1966" pos:column="26">(<param><decl><type><name pos:line="1966" pos:column="27">THIS</name></type></decl></param>)</parameter_list> <name pos:line="1966" pos:column="33">PURE</name>;</function_decl>

	<comment type="line" pos:line="1968" pos:column="9">// SetSearchPath() - Sets the directory(s) to search.</comment>
	<comment type="line" pos:line="1969" pos:column="9">// If NULL, the current directory is used.  The directories</comment>
	<comment type="line" pos:line="1970" pos:column="9">// should be a list separated with the list separator.</comment>

	<function_decl><type><name pos:line="1972" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1972" pos:column="19">SetSearchPath</name>) <parameter_list pos:line="1972" pos:column="34">(<param><decl><type><name pos:line="1972" pos:column="35">THIS_</name> <specifier pos:line="1972" pos:column="41">const</specifier> <name pos:line="1972" pos:column="47">WCHAR</name> <type:modifier pos:line="1972" pos:column="53">*</type:modifier></type> <name pos:line="1972" pos:column="55">szPath</name></decl></param>)</parameter_list> <name pos:line="1972" pos:column="63">PURE</name>;</function_decl>

	<comment type="line" pos:line="1974" pos:column="9">// GetSearchPath() - Gets the directory(s) to search.</comment>
	<comment type="line" pos:line="1975" pos:column="9">// The list of directories is returned as a list</comment>
	<comment type="line" pos:line="1976" pos:column="9">// separated with the list separator.  The buffer pointed</comment>
	<comment type="line" pos:line="1977" pos:column="9">// to by szPath is cbMax bytes long.</comment>

	<function_decl><type><name pos:line="1979" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1979" pos:column="19">GetSearchPath</name>) <parameter_list pos:line="1979" pos:column="34">(<param><decl><type><name pos:line="1979" pos:column="35">THIS_</name> <name pos:line="1979" pos:column="41">WCHAR</name> <type:modifier pos:line="1979" pos:column="47">*</type:modifier></type> <name pos:line="1979" pos:column="49">szPath</name></decl></param>, <param><decl><type><name pos:line="1979" pos:column="57">int</name></type> <name pos:line="1979" pos:column="61">cbMax</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1979" pos:column="68">CONST_METHOD_FF</name></type> <name pos:line="1979" pos:column="84">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1981" pos:column="9">// GetName() - Gets the name of the search.</comment>
	<comment type="line" pos:line="1982" pos:column="9">// The buffer pointed to by szName is cbMax bytes long.</comment>
	<comment type="line" pos:line="1983" pos:column="9">// Note that all searches have generated names.</comment>

	<name pos:line="1985" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1985" pos:column="18">(<param><decl><type><name pos:line="1985" pos:column="19">GetName</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1985" pos:column="28">(<param><decl><type><name pos:line="1985" pos:column="29">THIS_</name> <name pos:line="1985" pos:column="35">WCHAR</name> <type:modifier pos:line="1985" pos:column="41">*</type:modifier></type> <name pos:line="1985" pos:column="43">szName</name></decl></param>, <param><decl><type><name pos:line="1985" pos:column="51">int</name></type> <name pos:line="1985" pos:column="55">cbMax</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="1985" pos:column="62">CONST_METHOD_FF</name></type>  <name pos:line="1985" pos:column="79">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1987" pos:column="9">// SaveAs() - Saves the search under the name given.</comment>

	<name pos:line="1989" pos:column="9">MSOMETHOD</name><parameter_list pos:line="1989" pos:column="18">(<param><decl><type><name pos:line="1989" pos:column="19">SaveAs</name></type></decl></param>)</parameter_list> <parameter_list pos:line="1989" pos:column="27">(<param><decl><type><name pos:line="1989" pos:column="28">THIS_</name> <specifier pos:line="1989" pos:column="34">const</specifier> <name pos:line="1989" pos:column="40">WCHAR</name> <type:modifier pos:line="1989" pos:column="46">*</type:modifier></type> <name pos:line="1989" pos:column="48">szName</name></decl></param>)</parameter_list> <name pos:line="1989" pos:column="56">PURE</name>;</function_decl>

	<comment type="line" pos:line="1991" pos:column="9">// Load() - Loads the named search given.</comment>

	<function_decl><type><name pos:line="1993" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1993" pos:column="19">Load</name>) <parameter_list pos:line="1993" pos:column="25">(<param><decl><type><name pos:line="1993" pos:column="26">THIS_</name> <specifier pos:line="1993" pos:column="32">const</specifier> <name pos:line="1993" pos:column="38">WCHAR</name> <type:modifier pos:line="1993" pos:column="44">*</type:modifier></type> <name pos:line="1993" pos:column="46">szName</name></decl></param>)</parameter_list> <name pos:line="1993" pos:column="54">PURE</name>;</function_decl>

	<comment type="line" pos:line="1995" pos:column="9">// Delete() - Deletes the search.</comment>

	<function_decl><type><name pos:line="1997" pos:column="9">MSOMETHOD</name></type>(<name pos:line="1997" pos:column="19">Delete</name>) <parameter_list pos:line="1997" pos:column="27">(<param><decl><type><name pos:line="1997" pos:column="28">THIS</name></type></decl></param>)</parameter_list> <name pos:line="1997" pos:column="34">PURE</name>;</function_decl>

	<comment type="line" pos:line="1999" pos:column="9">// SetSearchConnector() - Sets whether to connect criteria specified</comment>
	<comment type="line" pos:line="2000" pos:column="9">// with SetPropSzValMacro should be connected with AND or OR.  Default</comment>
	<comment type="line" pos:line="2001" pos:column="9">// is AND.  The same connector should be used for all the things set</comment>
	<comment type="line" pos:line="2002" pos:column="9">// through SetPropSzValMacro.</comment>

	<function_decl><type><name pos:line="2004" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2004" pos:column="19">SetSearchConnector</name>) <parameter_list pos:line="2004" pos:column="39">(<param><decl><type><name pos:line="2004" pos:column="40">THIS_</name> <name pos:line="2004" pos:column="46">MSODMCONN</name></type> <name pos:line="2004" pos:column="56">msodmconn</name></decl></param>)</parameter_list> <name pos:line="2004" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="2006" pos:column="9">// SetSearchPathEx() - Sets the directory(s) to search.</comment>
	<comment type="line" pos:line="2007" pos:column="9">// If NULL, the current directory is used.  The directories</comment>
	<comment type="line" pos:line="2008" pos:column="9">// should be a list separated with the list separator.  The msospf</comment>
	<comment type="line" pos:line="2009" pos:column="9">// may be used to pass additional flags (see above).</comment>

	<function_decl><type><name pos:line="2011" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2011" pos:column="19">SetSearchPathEx</name>) <parameter_list pos:line="2011" pos:column="36">(<param><decl><type><name pos:line="2011" pos:column="37">THIS_</name> <specifier pos:line="2011" pos:column="43">const</specifier> <name pos:line="2011" pos:column="49">WCHAR</name> <type:modifier pos:line="2011" pos:column="55">*</type:modifier></type> <name pos:line="2011" pos:column="57">szPath</name></decl></param>, <param><decl><type><name pos:line="2011" pos:column="65">MSOSPF</name></type> <name pos:line="2011" pos:column="72">msospf</name></decl></param>)</parameter_list> <name pos:line="2011" pos:column="80">PURE</name>;</function_decl>

	<comment type="line" pos:line="2013" pos:column="9">// SetSearchPathPidl() - Sets the directory(s) to search.</comment>
	<comment type="line" pos:line="2014" pos:column="9">// The ppidl is an array of pidl (so multpile pidl folders can be</comment>
	<comment type="line" pos:line="2015" pos:column="9">// passed). Each pidl passed should be relative to desktop folder (or in other</comment>
	<comment type="line" pos:line="2016" pos:column="9">// words, absolute pidl). cpidl is the number of pidls passed.</comment>
	<comment type="line" pos:line="2017" pos:column="9">// NOTE: ppidl is taken as a void* parameter. However, it should be LPITEMIDLIST*</comment>
	<comment type="line" pos:line="2018" pos:column="9">// The reason for it being void here is that LPITEMIDLIST's definition is in</comment>
	<comment type="line" pos:line="2019" pos:column="9">// shlobj.h and excel fails to compile if you include it in this file.</comment>

	<function_decl><type><name pos:line="2021" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2021" pos:column="19">SetSearchPathPidl</name>) <parameter_list pos:line="2021" pos:column="38">(<param><decl><type><name pos:line="2021" pos:column="39">THIS_</name> <specifier pos:line="2021" pos:column="45">const</specifier> <name pos:line="2021" pos:column="51">void</name> <type:modifier pos:line="2021" pos:column="56">*</type:modifier></type><name pos:line="2021" pos:column="57">ppidl</name></decl></param>, <param><decl><type><name pos:line="2021" pos:column="64">int</name></type> <name pos:line="2021" pos:column="68">cpidl</name></decl></param>, <param><decl><type><name pos:line="2021" pos:column="75">MSOSPF</name></type> <name pos:line="2021" pos:column="82">msospf</name></decl></param>)</parameter_list> <name pos:line="2021" pos:column="90">PURE</name>;</function_decl>
}</block><empty_stmt pos:line="2022" pos:column="2">;</empty_stmt>


<comment type="block" pos:line="2025" pos:column="1">/* Get the magic pidl for Publishing Places
   NOTE: ppidl is taken as a void* parameter. However, it should be LPITEMIDLIST*
   The reason for it being void here is that LPITEMIDLIST's definition is in
   shlobj.h and excel fails to compile if you include it in this file.
   This function should always be called in pairs. First time with fAlloc == fTrue. The
   pidl will be allocated in this case. Second time with fAlloc == fFalse. The pidl
   will be freed and no longer usable. */</comment>
<macro><name pos:line="2032" pos:column="1">MSOAPI_</name><argument_list pos:line="2032" pos:column="8">(<argument pos:line="2032" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="2032" pos:column="18">MsoGetPublishingPlacesPidl</name><argument_list pos:line="2032" pos:column="44">(<argument pos:line="2032" pos:column="45">void *ppidl</argument>, <argument pos:line="2032" pos:column="58">BOOL fAlloc</argument>)</argument_list></macro><empty_stmt pos:line="2032" pos:column="70">;</empty_stmt>
<macro><name pos:line="2033" pos:column="1">MSOAPI_</name><argument_list pos:line="2033" pos:column="8">(<argument pos:line="2033" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="2033" pos:column="18">MsoHrCreatePublishingPlace</name><argument_list pos:line="2033" pos:column="44">(<argument pos:line="2033" pos:column="45">HWND hwndParent</argument>, <argument pos:line="2033" pos:column="62">LPCWSTR wzUrl</argument>, <argument pos:line="2033" pos:column="77">LPCWSTR wzFriendlyName</argument>)</argument_list></macro><empty_stmt pos:line="2033" pos:column="100">;</empty_stmt>
<comment type="line" format="doxygen" pos:line="2034" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2035" pos:column="1">// IMsoFoundFileList</comment>
<comment type="line" pos:line="2036" pos:column="1">//</comment>
<comment type="line" pos:line="2037" pos:column="1">// Represents the list of found files.</comment>

<decl_stmt><decl><type><name pos:line="2039" pos:column="1">interface</name></type> <name pos:line="2039" pos:column="11">IMsoFoundFile</name></decl>;</decl_stmt>			<comment type="line" pos:line="2039" pos:column="49">// Forward declare</comment>

<cpp:undef pos:line="2041" pos:column="1">#<cpp:directive pos:line="2041" pos:column="2">undef</cpp:directive> <name pos:line="2041" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2042" pos:column="1">#<cpp:directive pos:line="2042" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2042" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2042" pos:column="19">IMsoFoundFileList</cpp:value></cpp:define>

<macro><name pos:line="2044" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2044" pos:column="19">(<argument pos:line="2044" pos:column="20">IMsoFoundFileList</argument>, <argument pos:line="2044" pos:column="39">IUnknown</argument>)</argument_list></macro>
<block pos:line="2045" pos:column="1">{
	<comment type="line" pos:line="2046" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2047" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2048" pos:column="9">//</comment>
	<comment type="line" pos:line="2049" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2050" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2052" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2053" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2055" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2055" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2055" pos:column="35">(<param><decl><type><name pos:line="2055" pos:column="36">THIS_</name> <name pos:line="2055" pos:column="42">REFIID</name></type> <name pos:line="2055" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2055" pos:column="57">void</name> <type:modifier pos:line="2055" pos:column="62">*</type:modifier><type:modifier pos:line="2055" pos:column="63">*</type:modifier></type><name pos:line="2055" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2055" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2057" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2057" pos:column="19">(<argument pos:line="2057" pos:column="20">ULONG</argument>, <argument pos:line="2057" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2057" pos:column="35">(</op:operator><name pos:line="2057" pos:column="36">THIS</name><op:operator pos:line="2057" pos:column="40">)</op:operator> <name pos:line="2057" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2059" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2059" pos:column="19">(<argument pos:line="2059" pos:column="20">ULONG</argument>, <argument pos:line="2059" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2059" pos:column="36">(</op:operator><name pos:line="2059" pos:column="37">THIS</name><op:operator pos:line="2059" pos:column="41">)</op:operator> <name pos:line="2059" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2061" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2062" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2063" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2065" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2066" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2068" pos:column="9">// CffGet() - Returns the count of found files in the collection.</comment>

	<name pos:line="2070" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2070" pos:column="19">(<argument><expr><name pos:line="2070" pos:column="20">int</name></expr></argument>, <argument><expr><name pos:line="2070" pos:column="25">CffGet</name></expr></argument>)</argument_list> <argument_list pos:line="2070" pos:column="33">(<argument><expr><name pos:line="2070" pos:column="34">THIS</name></expr></argument>)</argument_list> <name pos:line="2070" pos:column="40">CONST_METHOD_FF</name> <name pos:line="2070" pos:column="56">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2072" pos:column="9">// GetIMsoFoundFile()</comment>

	<function_decl><type><name pos:line="2074" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2074" pos:column="19">GetIMsoFoundFile</name>) <parameter_list pos:line="2074" pos:column="37">(<param><decl><type><name pos:line="2074" pos:column="38">THIS_</name> <name pos:line="2074" pos:column="44">int</name></type> <name pos:line="2074" pos:column="48">iff</name></decl></param>, <param><decl><type><name pos:line="2074" pos:column="53">interface</name> <name pos:line="2074" pos:column="63">IMsoFoundFile</name> <type:modifier pos:line="2074" pos:column="77">*</type:modifier><type:modifier pos:line="2074" pos:column="78">*</type:modifier></type> <name pos:line="2074" pos:column="80">ppffile</name></decl></param>)</parameter_list>
			<name pos:line="2075" pos:column="25">PURE</name>;</function_decl>

	<comment type="line" pos:line="2077" pos:column="9">// GetIMsoOLDocumentI() - Returns an IMsoOLDocument interface for the found file.</comment>

	<function_decl><type><name pos:line="2079" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2079" pos:column="19">GetIMsoOLDocumentI</name>) <parameter_list pos:line="2079" pos:column="39">(<param><decl><type><name pos:line="2079" pos:column="40">THIS_</name> <name pos:line="2079" pos:column="46">interface</name> <name pos:line="2079" pos:column="56">IMsoOLDocument</name> <type:modifier pos:line="2079" pos:column="71">*</type:modifier><type:modifier pos:line="2079" pos:column="72">*</type:modifier></type><name pos:line="2079" pos:column="73">ppIOLDocument</name></decl></param>,
			<param><decl><type><name pos:line="2080" pos:column="25">int</name></type> <name pos:line="2080" pos:column="29">iFile</name></decl></param>)</parameter_list> <name pos:line="2080" pos:column="36">PURE</name>;</function_decl>

	<comment type="line" pos:line="2082" pos:column="9">// GetPropI() - Returns a standard property for the iffth found file.  This</comment>
	<comment type="line" pos:line="2083" pos:column="9">// returns the raw data in the VARIANT passed in.  This function calls</comment>
	<comment type="line" pos:line="2084" pos:column="9">// VariantInit, not VariantClear, on pvarg, so the caller is responsible for</comment>
	<comment type="line" pos:line="2085" pos:column="9">// freeing any memory before calling this function as well as, of course,</comment>
	<comment type="line" pos:line="2086" pos:column="9">// afterwards.</comment>

	<function_decl><type><name pos:line="2088" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2088" pos:column="19">GetPropI</name>) <parameter_list pos:line="2088" pos:column="29">(<param><decl><type><name pos:line="2088" pos:column="30">THIS_</name> <name pos:line="2088" pos:column="36">int</name></type> <name pos:line="2088" pos:column="40">iff</name></decl></param>, <param><decl><type><name pos:line="2088" pos:column="45">MSOSTDPROP</name></type> <name pos:line="2088" pos:column="56">prop</name></decl></param>, <param><decl><type><name pos:line="2088" pos:column="62">VARIANTARG</name><type:modifier pos:line="2088" pos:column="72">*</type:modifier></type> <name pos:line="2088" pos:column="74">pvarg</name></decl></param>)</parameter_list> <name pos:line="2088" pos:column="81">PURE</name>;</function_decl>

	<comment type="line" pos:line="2090" pos:column="9">// GetPropISz() - Returns a standard property for the iffth found file as</comment>
	<comment type="line" pos:line="2091" pos:column="9">// a string, properly formatted.  Note, for unicode the cb parameter is</comment>
	<comment type="line" pos:line="2092" pos:column="9">// actually cch (in the confusing manner of all windows APIs).</comment>

	<function_decl><type><name pos:line="2094" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2094" pos:column="19">GetPropISz</name>) <parameter_list pos:line="2094" pos:column="31">(<param><decl><type><name pos:line="2094" pos:column="32">THIS_</name> <name pos:line="2094" pos:column="38">int</name></type> <name pos:line="2094" pos:column="42">iff</name></decl></param>, <param><decl><type><name pos:line="2094" pos:column="47">MSOSTDPROP</name></type> <name pos:line="2094" pos:column="58">prop</name></decl></param>, <param><decl><type><name pos:line="2094" pos:column="64">WCHAR</name> <type:modifier pos:line="2094" pos:column="70">*</type:modifier></type><name pos:line="2094" pos:column="71">psz</name></decl></param>, <param><decl><type><name pos:line="2094" pos:column="76">int</name></type> <name pos:line="2094" pos:column="80">cb</name></decl></param>)</parameter_list> <name pos:line="2094" pos:column="84">PURE</name>;</function_decl>
}</block><empty_stmt pos:line="2095" pos:column="2">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="2099" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2100" pos:column="1">// IMsoSelectedFileList</comment>
<comment type="line" pos:line="2101" pos:column="1">//</comment>
<comment type="line" pos:line="2102" pos:column="1">// Represents the list of selected files.</comment>

<decl_stmt><decl><type><name pos:line="2104" pos:column="1">interface</name></type> <name pos:line="2104" pos:column="11">IMsoFoundFile</name></decl>;</decl_stmt>			<comment type="line" pos:line="2104" pos:column="49">// Forward declare</comment>

<cpp:undef pos:line="2106" pos:column="1">#<cpp:directive pos:line="2106" pos:column="2">undef</cpp:directive> <name pos:line="2106" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2107" pos:column="1">#<cpp:directive pos:line="2107" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2107" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2107" pos:column="19">IMsoSelectedFileList</cpp:value></cpp:define>

<macro><name pos:line="2109" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2109" pos:column="19">(<argument pos:line="2109" pos:column="20">IMsoSelectedFileList</argument>, <argument pos:line="2109" pos:column="42">IUnknown</argument>)</argument_list></macro>
<block pos:line="2110" pos:column="1">{
	<comment type="line" pos:line="2111" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2112" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2113" pos:column="9">//</comment>
	<comment type="line" pos:line="2114" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2115" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2117" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2118" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2120" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2120" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2120" pos:column="35">(<param><decl><type><name pos:line="2120" pos:column="36">THIS_</name> <name pos:line="2120" pos:column="42">REFIID</name></type> <name pos:line="2120" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2120" pos:column="57">void</name> <type:modifier pos:line="2120" pos:column="62">*</type:modifier><type:modifier pos:line="2120" pos:column="63">*</type:modifier></type><name pos:line="2120" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2120" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2122" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2122" pos:column="19">(<argument pos:line="2122" pos:column="20">ULONG</argument>, <argument pos:line="2122" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2122" pos:column="35">(</op:operator><name pos:line="2122" pos:column="36">THIS</name><op:operator pos:line="2122" pos:column="40">)</op:operator> <name pos:line="2122" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2124" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2124" pos:column="19">(<argument pos:line="2124" pos:column="20">ULONG</argument>, <argument pos:line="2124" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2124" pos:column="36">(</op:operator><name pos:line="2124" pos:column="37">THIS</name><op:operator pos:line="2124" pos:column="41">)</op:operator> <name pos:line="2124" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2126" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2127" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2128" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2130" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2131" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2133" pos:column="9">// CffGet() - Returns the count of found files in the collection.</comment>

	<name pos:line="2135" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2135" pos:column="19">(<argument><expr><name pos:line="2135" pos:column="20">int</name></expr></argument>, <argument><expr><name pos:line="2135" pos:column="25">CffGet</name></expr></argument>)</argument_list> <argument_list pos:line="2135" pos:column="33">(<argument><expr><name pos:line="2135" pos:column="34">THIS</name></expr></argument>)</argument_list> <name pos:line="2135" pos:column="40">CONST_METHOD_FF</name> <name pos:line="2135" pos:column="56">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2137" pos:column="9">// GetIMsoFoundFile()</comment>

	<function_decl><type><name pos:line="2139" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2139" pos:column="19">GetIMsoFoundFile</name>) <parameter_list pos:line="2139" pos:column="37">(<param><decl><type><name pos:line="2139" pos:column="38">THIS_</name> <name pos:line="2139" pos:column="44">int</name></type> <name pos:line="2139" pos:column="48">iff</name></decl></param>, <param><decl><type><name pos:line="2139" pos:column="53">interface</name> <name pos:line="2139" pos:column="63">IMsoFoundFile</name> <type:modifier pos:line="2139" pos:column="77">*</type:modifier><type:modifier pos:line="2139" pos:column="78">*</type:modifier></type> <name pos:line="2139" pos:column="80">ppffile</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="2140" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="2140" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2142" pos:column="9">// GetIMsoOLDocumentI() - Returns an IMsoOLDocument interface for the selected</comment>
	<comment type="line" pos:line="2143" pos:column="9">//					   file.</comment>

	<name pos:line="2145" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2145" pos:column="18">(<param><decl><type><name pos:line="2145" pos:column="19">GetIMsoOLDocumentI</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2145" pos:column="39">(<param><decl><type><name pos:line="2145" pos:column="40">THIS_</name> <name pos:line="2145" pos:column="46">interface</name> <name pos:line="2145" pos:column="56">IMsoOLDocument</name> <type:modifier pos:line="2145" pos:column="71">*</type:modifier><type:modifier pos:line="2145" pos:column="72">*</type:modifier></type><name pos:line="2145" pos:column="73">ppIOLDocument</name></decl></param>,
			<param><decl><type><name pos:line="2146" pos:column="25">int</name></type> <name pos:line="2146" pos:column="29">iFile</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="2146" pos:column="36">CONST_METHOD_FF</name></type> <name pos:line="2146" pos:column="52">PURE</name></decl>;</decl_stmt></function_decl>
}</block><empty_stmt pos:line="2147" pos:column="2">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="2151" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2152" pos:column="1">// IMsoFoundFile</comment>
<comment type="line" pos:line="2153" pos:column="1">//</comment>
<comment type="line" pos:line="2154" pos:column="1">// Represents a single found file.</comment>

<cpp:undef pos:line="2156" pos:column="1">#<cpp:directive pos:line="2156" pos:column="2">undef</cpp:directive> <name pos:line="2156" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2157" pos:column="1">#<cpp:directive pos:line="2157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2157" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2157" pos:column="19">IMsoFoundFile</cpp:value></cpp:define>

<macro><name pos:line="2159" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2159" pos:column="19">(<argument pos:line="2159" pos:column="20">IMsoFoundFile</argument>, <argument pos:line="2159" pos:column="35">IUnknown</argument>)</argument_list></macro>
<block pos:line="2160" pos:column="1">{
	<comment type="line" pos:line="2161" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2162" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2163" pos:column="9">//</comment>
	<comment type="line" pos:line="2164" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2165" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2167" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2168" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2170" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2170" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2170" pos:column="35">(<param><decl><type><name pos:line="2170" pos:column="36">THIS_</name> <name pos:line="2170" pos:column="42">REFIID</name></type> <name pos:line="2170" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2170" pos:column="57">void</name> <type:modifier pos:line="2170" pos:column="62">*</type:modifier><type:modifier pos:line="2170" pos:column="63">*</type:modifier></type><name pos:line="2170" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2170" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2172" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2172" pos:column="19">(<argument pos:line="2172" pos:column="20">ULONG</argument>, <argument pos:line="2172" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2172" pos:column="35">(</op:operator><name pos:line="2172" pos:column="36">THIS</name><op:operator pos:line="2172" pos:column="40">)</op:operator> <name pos:line="2172" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2174" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2174" pos:column="19">(<argument pos:line="2174" pos:column="20">ULONG</argument>, <argument pos:line="2174" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2174" pos:column="36">(</op:operator><name pos:line="2174" pos:column="37">THIS</name><op:operator pos:line="2174" pos:column="41">)</op:operator> <name pos:line="2174" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2176" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2177" pos:column="9">// Standard Office Debug method</comment>
	<function_decl><type><name pos:line="2178" pos:column="9">MSODEBUGMETHOD</name>

	<comment type="line" pos:line="2180" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2181" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2183" pos:column="9">// GetPath() - Returns the path of the found file.</comment>

	<name pos:line="2185" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2185" pos:column="19">GetPath</name>) <parameter_list pos:line="2185" pos:column="28">(<param><decl><type><name pos:line="2185" pos:column="29">THIS_</name> <name pos:line="2185" pos:column="35">WCHAR</name> <type:modifier pos:line="2185" pos:column="41">*</type:modifier></type> <name pos:line="2185" pos:column="43">szPath</name></decl></param>, <param><decl><type><name pos:line="2185" pos:column="51">int</name></type> <name pos:line="2185" pos:column="55">cbPath</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="2185" pos:column="63">CONST_METHOD_FF</name></type> <name pos:line="2185" pos:column="79">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2187" pos:column="9">// GetIMsofile() - Returns the index of the found file.</comment>

	<name pos:line="2189" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2189" pos:column="18">(<param><decl><type><name pos:line="2189" pos:column="19">GetIfile</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2189" pos:column="29">(<param><decl><type><name pos:line="2189" pos:column="30">THIS_</name> <name pos:line="2189" pos:column="36">int</name> <type:modifier pos:line="2189" pos:column="40">*</type:modifier></type><name pos:line="2189" pos:column="41">pifile</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="2189" pos:column="49">CONST_METHOD_FF</name></type> <name pos:line="2189" pos:column="65">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2191" pos:column="9">// GetIMsoOLDocument() - Returns an IOLDocument interface for the found file.</comment>

	<name pos:line="2193" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2193" pos:column="18">(<param><decl><type><name pos:line="2193" pos:column="19">GetIMsoOLDocument</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2193" pos:column="38">(<param><decl><type><name pos:line="2193" pos:column="39">THIS_</name> <name pos:line="2193" pos:column="45">interface</name> <name pos:line="2193" pos:column="55">IMsoOLDocument</name> <type:modifier pos:line="2193" pos:column="70">*</type:modifier><type:modifier pos:line="2193" pos:column="71">*</type:modifier></type><name pos:line="2193" pos:column="72">ppIOLDocument</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="2194" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="2194" pos:column="41">PURE</name></decl>;</decl_stmt></function_decl>
}</block><empty_stmt pos:line="2195" pos:column="2">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="2199" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2200" pos:column="1">// IMsoDMControl</comment>
<comment type="line" pos:line="2201" pos:column="1">//</comment>
<comment type="line" pos:line="2202" pos:column="1">// Represents a custom item.  Used to create it in a Find File dialog, and</comment>
<comment type="line" pos:line="2203" pos:column="1">// also to get and set it's value.</comment>

<cpp:undef pos:line="2205" pos:column="1">#<cpp:directive pos:line="2205" pos:column="2">undef</cpp:directive> <name pos:line="2205" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2206" pos:column="1">#<cpp:directive pos:line="2206" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2206" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2206" pos:column="19">IMsoDMControl</cpp:value></cpp:define>

<macro><name pos:line="2208" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2208" pos:column="19">(<argument pos:line="2208" pos:column="20">IMsoDMControl</argument>, <argument pos:line="2208" pos:column="35">IUnknown</argument>)</argument_list></macro>
<block pos:line="2209" pos:column="1">{
	<comment type="line" pos:line="2210" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2211" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2212" pos:column="9">//</comment>
	<comment type="line" pos:line="2213" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2214" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2216" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2217" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2219" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2219" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2219" pos:column="35">(<param><decl><type><name pos:line="2219" pos:column="36">THIS_</name> <name pos:line="2219" pos:column="42">REFIID</name></type> <name pos:line="2219" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2219" pos:column="57">void</name> <type:modifier pos:line="2219" pos:column="62">*</type:modifier><type:modifier pos:line="2219" pos:column="63">*</type:modifier></type><name pos:line="2219" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2219" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2221" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2221" pos:column="19">(<argument pos:line="2221" pos:column="20">ULONG</argument>, <argument pos:line="2221" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2221" pos:column="35">(</op:operator><name pos:line="2221" pos:column="36">THIS</name><op:operator pos:line="2221" pos:column="40">)</op:operator> <name pos:line="2221" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2223" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2223" pos:column="19">(<argument pos:line="2223" pos:column="20">ULONG</argument>, <argument pos:line="2223" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2223" pos:column="36">(</op:operator><name pos:line="2223" pos:column="37">THIS</name><op:operator pos:line="2223" pos:column="41">)</op:operator> <name pos:line="2223" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2225" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2226" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2227" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2229" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2230" pos:column="9">// Methods to get and set the properties of a custom item.  Unless</comment>
	<comment type="line" pos:line="2231" pos:column="9">// otherwise specified, the methods that set properties can only be</comment>
	<comment type="line" pos:line="2232" pos:column="9">// called when the dialog is visible.</comment>

	<comment type="line" pos:line="2234" pos:column="9">// Otp() - Returns the item type of the custom item.</comment>

	<name pos:line="2236" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2236" pos:column="19">(<argument><expr><name pos:line="2236" pos:column="20">MSOOTP</name></expr></argument>, <argument><expr><name pos:line="2236" pos:column="28">Otp</name></expr></argument>)</argument_list> <argument_list pos:line="2236" pos:column="33">(<argument><expr><name pos:line="2236" pos:column="34">THIS</name></expr></argument>)</argument_list> <name pos:line="2236" pos:column="40">CONST_METHOD_FF</name> <name pos:line="2236" pos:column="56">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2238" pos:column="9">// SetOtp() - Sets the item type of the custom item.</comment>

	<function_decl><type><name pos:line="2240" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2240" pos:column="19">SetOtp</name>) <parameter_list pos:line="2240" pos:column="27">(<param><decl><type><name pos:line="2240" pos:column="28">THIS_</name> <name pos:line="2240" pos:column="34">MSOOTP</name></type> <name pos:line="2240" pos:column="41">otp</name></decl></param>)</parameter_list> <name pos:line="2240" pos:column="46">PURE</name>;</function_decl>

	<comment type="line" pos:line="2242" pos:column="9">// GetSzTitle() - Gets the title of the item and places it in the given</comment>
	<comment type="line" pos:line="2243" pos:column="9">// buffer, null-terminated.  The buffer must be at least</comment>
	<comment type="line" pos:line="2244" pos:column="9">// IFindFile::cbMaxItemTitle in length.</comment>

	<macro><name pos:line="2246" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2246" pos:column="19">(<argument pos:line="2246" pos:column="20">void</argument>, <argument pos:line="2246" pos:column="26">GetSzTitle</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2246" pos:column="38">(</op:operator><name pos:line="2246" pos:column="39">THIS_</name> <name pos:line="2246" pos:column="45">WCHAR</name> <op:operator pos:line="2246" pos:column="51">*</op:operator> <name pos:line="2246" pos:column="53">szTitle</name><op:operator pos:line="2246" pos:column="60">)</op:operator> <name pos:line="2246" pos:column="62">CONST_METHOD_FF</name> <name pos:line="2246" pos:column="78">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2248" pos:column="9">// SetSzTitle() - Sets the title of the item.  The given title must be</comment>
	<comment type="line" pos:line="2249" pos:column="9">// null-terminated, and no longer than IFindFile::cbMaxItemTitle with</comment>
	<comment type="line" pos:line="2250" pos:column="9">// the terminator.</comment>

	<function_decl><type><name pos:line="2252" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2252" pos:column="19">SetSzTitle</name>) <parameter_list pos:line="2252" pos:column="31">(<param><decl><type><name pos:line="2252" pos:column="32">THIS_</name> <specifier pos:line="2252" pos:column="38">const</specifier> <name pos:line="2252" pos:column="44">WCHAR</name> <type:modifier pos:line="2252" pos:column="50">*</type:modifier></type> <name pos:line="2252" pos:column="52">szTitle</name></decl></param>)</parameter_list> <name pos:line="2252" pos:column="61">PURE</name>;</function_decl>

	<comment type="line" pos:line="2254" pos:column="9">// FEnabled() - Returns fTrue if the item is enabled.</comment>

	<macro><name pos:line="2256" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2256" pos:column="19">(<argument pos:line="2256" pos:column="20">MSOBOOL</argument>, <argument pos:line="2256" pos:column="29">FEnabled</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2256" pos:column="39">(</op:operator><name pos:line="2256" pos:column="40">THIS</name><op:operator pos:line="2256" pos:column="44">)</op:operator> <name pos:line="2256" pos:column="46">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2258" pos:column="9">// Enable() - Enables or disables the item.  Can be set while the dialog</comment>
	<comment type="line" pos:line="2259" pos:column="9">// is visible.</comment>

	<macro><name pos:line="2261" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2261" pos:column="19">(<argument pos:line="2261" pos:column="20">void</argument>, <argument pos:line="2261" pos:column="26">Enable</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2261" pos:column="34">(</op:operator><name pos:line="2261" pos:column="35">THIS_</name> <name pos:line="2261" pos:column="41">MSOBOOL</name> <name pos:line="2261" pos:column="49">fEnable</name><op:operator pos:line="2261" pos:column="56">)</op:operator> <name pos:line="2261" pos:column="58">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2263" pos:column="9">// GetValue() - Gets the value for the item.  If it is a checkbox or</comment>
	<comment type="line" pos:line="2264" pos:column="9">// radio group, then the one returning an int should be used.  Otherwise,</comment>
	<comment type="line" pos:line="2265" pos:column="9">// the one returning a text string should be used.</comment>

	<function_decl><type><name pos:line="2267" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2267" pos:column="19">GetValueW</name>) <parameter_list pos:line="2267" pos:column="30">(<param><decl><type><name pos:line="2267" pos:column="31">THIS_</name> <name pos:line="2267" pos:column="37">int</name> <type:modifier pos:line="2267" pos:column="41">*</type:modifier></type> <name pos:line="2267" pos:column="43">pval</name></decl></param>)</parameter_list> <name pos:line="2267" pos:column="49">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="2269" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2269" pos:column="19">GetValueSz</name>) <parameter_list pos:line="2269" pos:column="31">(<param><decl><type><name pos:line="2269" pos:column="32">THIS_</name> <name pos:line="2269" pos:column="38">WCHAR</name> <type:modifier pos:line="2269" pos:column="44">*</type:modifier></type> <name pos:line="2269" pos:column="46">szVal</name></decl></param>, <param><decl><type><name pos:line="2269" pos:column="53">int</name></type> <name pos:line="2269" pos:column="57">cbVal</name></decl></param>)</parameter_list> <name pos:line="2269" pos:column="64">PURE</name>;</function_decl>

	<comment type="line" pos:line="2271" pos:column="9">// SetValue() - Sets the value for the item.  If a checkbox or radio</comment>
	<comment type="line" pos:line="2272" pos:column="9">// group, use the int version.  Otherwise, use the text string version.</comment>

	<function_decl><type><name pos:line="2274" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2274" pos:column="19">SetValueW</name>) <parameter_list pos:line="2274" pos:column="30">(<param><decl><type><name pos:line="2274" pos:column="31">THIS_</name> <name pos:line="2274" pos:column="37">int</name></type> <name pos:line="2274" pos:column="41">val</name></decl></param>)</parameter_list> <name pos:line="2274" pos:column="46">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="2276" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2276" pos:column="19">SetValueSz</name>) <parameter_list pos:line="2276" pos:column="31">(<param><decl><type><name pos:line="2276" pos:column="32">THIS_</name> <specifier pos:line="2276" pos:column="38">const</specifier> <name pos:line="2276" pos:column="44">WCHAR</name> <type:modifier pos:line="2276" pos:column="50">*</type:modifier></type> <name pos:line="2276" pos:column="52">wzVal</name></decl></param>)</parameter_list> <name pos:line="2276" pos:column="59">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="2278" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2278" pos:column="19">SetValueSzEx</name>) <parameter_list pos:line="2278" pos:column="33">(<param><decl><type><name pos:line="2278" pos:column="34">THIS_</name> <specifier pos:line="2278" pos:column="40">const</specifier> <name pos:line="2278" pos:column="46">WCHAR</name> <type:modifier pos:line="2278" pos:column="52">*</type:modifier></type> <name pos:line="2278" pos:column="54">wzVal</name></decl></param>,
								   <param><decl><type><specifier pos:line="2279" pos:column="68">const</specifier> <name pos:line="2279" pos:column="74">WCHAR</name> <type:modifier pos:line="2279" pos:column="80">*</type:modifier></type> <name pos:line="2279" pos:column="82">wzBtnText</name></decl></param>,
								   <param><decl><type><specifier pos:line="2280" pos:column="68">const</specifier> <name pos:line="2280" pos:column="74">WCHAR</name> <type:modifier pos:line="2280" pos:column="80">*</type:modifier></type> <name pos:line="2280" pos:column="82">wzDlgTitle</name></decl></param>,
								   <param><decl><type><specifier pos:line="2281" pos:column="68">const</specifier> <name pos:line="2281" pos:column="74">WCHAR</name> <type:modifier pos:line="2281" pos:column="80">*</type:modifier></type> <name pos:line="2281" pos:column="82">wzDescrText</name></decl></param>)</parameter_list> <name pos:line="2281" pos:column="95">PURE</name>;</function_decl>

	<comment type="line" pos:line="2283" pos:column="9">// SetFEnableWithOK ties enabling of a custom control to enabling of OK button</comment>
	<macro><name pos:line="2284" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2284" pos:column="19">(<argument pos:line="2284" pos:column="20">void</argument>, <argument pos:line="2284" pos:column="26">SetFEnableWithOK</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2284" pos:column="44">(</op:operator><name pos:line="2284" pos:column="45">THIS_</name> <name pos:line="2284" pos:column="51">MSOBOOL</name> <name pos:line="2284" pos:column="59">fEnableWithOKButton</name><op:operator pos:line="2284" pos:column="78">)</op:operator> <name pos:line="2284" pos:column="80">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2286" pos:column="9">// Returns whether control's enabledment is tied to that of OK button</comment>
	<macro><name pos:line="2287" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2287" pos:column="19">(<argument pos:line="2287" pos:column="20">MSOBOOL</argument>, <argument pos:line="2287" pos:column="29">FEnabledWithOK</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2287" pos:column="45">(</op:operator><name pos:line="2287" pos:column="46">THIS</name><op:operator pos:line="2287" pos:column="50">)</op:operator> <name pos:line="2287" pos:column="52">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2289" pos:column="9">// Sets the index into the command list for a control.  This is called</comment>
	<comment type="line" pos:line="2290" pos:column="9">// at dialog init time by the Open code, and the apps should not call this.</comment>
	<comment type="line" pos:line="2291" pos:column="9">// Once this is set (automatically at dialog init time), the app can call</comment>
	<comment type="line" pos:line="2292" pos:column="9">// the associated Get method (ICleGet()).</comment>
	<macro><name pos:line="2293" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2293" pos:column="19">(<argument pos:line="2293" pos:column="20">void</argument>, <argument pos:line="2293" pos:column="26">SetICle</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2293" pos:column="35">(</op:operator><name pos:line="2293" pos:column="36">THIS_</name> <name pos:line="2293" pos:column="42">MSODMICLE</name> <name pos:line="2293" pos:column="52">icle</name><op:operator pos:line="2293" pos:column="56">)</op:operator> <name pos:line="2293" pos:column="58">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2295" pos:column="9">// Returns the command list index for this control, which is automatically</comment>
	<comment type="line" pos:line="2296" pos:column="9">// set at dialog init time.  The app never actually needs to call this</comment>
	<comment type="line" pos:line="2297" pos:column="9">// since we guarantee that the order of the custom commands matches the</comment>
	<comment type="line" pos:line="2298" pos:column="9">// order of the custom controls.  So the first custom toolbar control added</comment>
	<comment type="line" pos:line="2299" pos:column="9">// is assigned msodmicleAppToolsFirst, the second is assigned</comment>
	<comment type="line" pos:line="2300" pos:column="9">// msodmicleAppToolsFirst+1 and so on.  Similarly, the first Open Button</comment>
	<comment type="line" pos:line="2301" pos:column="9">// Dropdown custom item is msodmicleAppOpenDropdnFirst, the second is</comment>
	<comment type="line" pos:line="2302" pos:column="9">// msodmicleAppOpenDropdnFirst+1, and so on.</comment>
	<macro><name pos:line="2303" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2303" pos:column="19">(<argument pos:line="2303" pos:column="20">MSODMICLE</argument>, <argument pos:line="2303" pos:column="31">ICleGet</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2303" pos:column="40">(</op:operator><name pos:line="2303" pos:column="41">THIS</name><op:operator pos:line="2303" pos:column="45">)</op:operator> <name pos:line="2303" pos:column="47">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2305" pos:column="9">// SetFDisablesOKDropDown ties disabling of the OK button drop down to the custom control</comment>
	<macro><name pos:line="2306" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2306" pos:column="19">(<argument pos:line="2306" pos:column="20">void</argument>, <argument pos:line="2306" pos:column="26">SetFDisablesOKDropDown</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2306" pos:column="50">(</op:operator><name pos:line="2306" pos:column="51">THIS_</name> <name pos:line="2306" pos:column="57">MSOBOOL</name> <name pos:line="2306" pos:column="65">fDisablesOKDropDown</name><op:operator pos:line="2306" pos:column="84">)</op:operator> <name pos:line="2306" pos:column="86">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2308" pos:column="9">// Returns whether control disables the OK button drop down</comment>
	<macro><name pos:line="2309" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2309" pos:column="19">(<argument pos:line="2309" pos:column="20">MSOBOOL</argument>, <argument pos:line="2309" pos:column="29">FDisablesOKDropDown</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2309" pos:column="50">(</op:operator><name pos:line="2309" pos:column="51">THIS</name><op:operator pos:line="2309" pos:column="55">)</op:operator> <name pos:line="2309" pos:column="57">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2311" pos:column="9">// Sets alternate OK button title tied to the custom control</comment>
	<function_decl><type><name pos:line="2312" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2312" pos:column="19">SetAltOpenTitle</name>) <parameter_list pos:line="2312" pos:column="36">(<param><decl><type><name pos:line="2312" pos:column="37">THIS_</name> <specifier pos:line="2312" pos:column="43">const</specifier> <name pos:line="2312" pos:column="49">WCHAR</name> <type:modifier pos:line="2312" pos:column="55">*</type:modifier></type> <name pos:line="2312" pos:column="57">wzTitle</name></decl></param>)</parameter_list> <name pos:line="2312" pos:column="66">PURE</name>;</function_decl>

	<comment type="line" pos:line="2314" pos:column="9">// Gets alternate OK button title tied to the custom control</comment>
	<macro><name pos:line="2315" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2315" pos:column="19">(<argument pos:line="2315" pos:column="20">void</argument>, <argument pos:line="2315" pos:column="26">GetAltOpenTitle</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2315" pos:column="43">(</op:operator><name pos:line="2315" pos:column="44">THIS_</name> <name pos:line="2315" pos:column="50">WCHAR</name> <op:operator pos:line="2315" pos:column="56">*</op:operator> <name pos:line="2315" pos:column="58">wzTitle</name><op:operator pos:line="2315" pos:column="65">)</op:operator> <name pos:line="2315" pos:column="67">PURE</name></expr>;</expr_stmt>
}</block><empty_stmt pos:line="2316" pos:column="2">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="2320" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2321" pos:column="1">// MsoMakeCustomItem</comment>
<comment type="line" pos:line="2322" pos:column="1">//</comment>
<comment type="line" pos:line="2323" pos:column="1">// Returns a new IMsoDMControl instance.</comment>

<macro><name pos:line="2325" pos:column="1">MSOAPI_</name><argument_list pos:line="2325" pos:column="8">(<argument pos:line="2325" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2325" pos:column="18">MsoMakeCustomItem</name><argument_list pos:line="2325" pos:column="35">(<argument><expr><name pos:line="2325" pos:column="36">IMsoDMControl</name> <op:operator pos:line="2325" pos:column="50">*</op:operator><op:operator pos:line="2325" pos:column="51">*</op:operator> <name pos:line="2325" pos:column="53">ppcstitm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" format="doxygen" pos:line="2329" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2330" pos:column="1">// IMsoControlList</comment>
<comment type="line" pos:line="2331" pos:column="1">//</comment>
<comment type="line" pos:line="2332" pos:column="1">// The collection of custom items.</comment>

<cpp:undef pos:line="2334" pos:column="1">#<cpp:directive pos:line="2334" pos:column="2">undef</cpp:directive> <name pos:line="2334" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2335" pos:column="1">#<cpp:directive pos:line="2335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2335" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2335" pos:column="19">IMsoControlList</cpp:value></cpp:define>
<macro><name pos:line="2336" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2336" pos:column="19">(<argument pos:line="2336" pos:column="20">IMsoControlList</argument>, <argument pos:line="2336" pos:column="37">IUnknown</argument>)</argument_list></macro>
<block pos:line="2337" pos:column="1">{
	<comment type="line" pos:line="2338" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2339" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2340" pos:column="9">//</comment>
	<comment type="line" pos:line="2341" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2342" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2344" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2345" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2347" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2347" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2347" pos:column="35">(<param><decl><type><name pos:line="2347" pos:column="36">THIS_</name> <name pos:line="2347" pos:column="42">REFIID</name></type> <name pos:line="2347" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2347" pos:column="57">void</name> <type:modifier pos:line="2347" pos:column="62">*</type:modifier><type:modifier pos:line="2347" pos:column="63">*</type:modifier></type><name pos:line="2347" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2347" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2349" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2349" pos:column="19">(<argument pos:line="2349" pos:column="20">ULONG</argument>, <argument pos:line="2349" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2349" pos:column="35">(</op:operator><name pos:line="2349" pos:column="36">THIS</name><op:operator pos:line="2349" pos:column="40">)</op:operator> <name pos:line="2349" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2351" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2351" pos:column="19">(<argument pos:line="2351" pos:column="20">ULONG</argument>, <argument pos:line="2351" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2351" pos:column="36">(</op:operator><name pos:line="2351" pos:column="37">THIS</name><op:operator pos:line="2351" pos:column="41">)</op:operator> <name pos:line="2351" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2353" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2354" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2355" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2357" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2358" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2360" pos:column="9">// CcntrlGet() - Returns the number of custom controls in the collection.</comment>

	<name pos:line="2362" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2362" pos:column="19">(<argument><expr><name pos:line="2362" pos:column="20">int</name></expr></argument>, <argument><expr><name pos:line="2362" pos:column="25">CcntrlGet</name></expr></argument>)</argument_list> <argument_list pos:line="2362" pos:column="36">(<argument><expr><name pos:line="2362" pos:column="37">THIS</name></expr></argument>)</argument_list> <name pos:line="2362" pos:column="43">CONST_METHOD_FF</name> <name pos:line="2362" pos:column="59">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2364" pos:column="9">// Get() - Gets a custom item from the collection.</comment>

	<function_decl><type><name pos:line="2366" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2366" pos:column="19">Get</name>) <parameter_list pos:line="2366" pos:column="24">(<param><decl><type><name pos:line="2366" pos:column="25">THIS_</name> <name pos:line="2366" pos:column="31">int</name></type> <name pos:line="2366" pos:column="35">icstitm</name></decl></param>, <param><decl><type><name pos:line="2366" pos:column="44">interface</name> <name pos:line="2366" pos:column="54">IMsoDMControl</name> <type:modifier pos:line="2366" pos:column="68">*</type:modifier><type:modifier pos:line="2366" pos:column="69">*</type:modifier></type> <name pos:line="2366" pos:column="71">ppcstitm</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="2367" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="2367" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2369" pos:column="9">// Append() - Appends a custom item to the collection.  Can use either a</comment>
	<comment type="line" pos:line="2370" pos:column="9">// fully-formed IControl, or give the parameters individually.</comment>
	<comment type="line" pos:line="2371" pos:column="9">// (The caller passes the IMsoDMControl to the IMsoControlList by calling</comment>
	<comment type="line" pos:line="2372" pos:column="9">// this method.  If this method succeeds, the IMsoControlList will release</comment>
	<comment type="line" pos:line="2373" pos:column="9">// the IMsoDMControl when it is done using the IMsoDMControl.  If the</comment>
	<comment type="line" pos:line="2374" pos:column="9">// caller wishes to continue using the IMsoDMControl after calling this</comment>
	<comment type="line" pos:line="2375" pos:column="9">// method, the caller should call AddRef on the IMsoDMControl before</comment>
	<comment type="line" pos:line="2376" pos:column="9">// calling this method.)</comment>

	<name pos:line="2378" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2378" pos:column="18">(<param><decl><type><name pos:line="2378" pos:column="19">Append</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2378" pos:column="27">(<param><decl><type><name pos:line="2378" pos:column="28">THIS_</name> <name pos:line="2378" pos:column="34">interface</name> <name pos:line="2378" pos:column="44">IMsoDMControl</name> <type:modifier pos:line="2378" pos:column="58">*</type:modifier></type> <name pos:line="2378" pos:column="60">pcstitm</name></decl></param>)</parameter_list> <name pos:line="2378" pos:column="69">PURE</name>;</function_decl>

	<comment type="line" pos:line="2380" pos:column="9">// Delete() - Deletes the specified custom item from the collection.</comment>

	<function_decl><type><name pos:line="2382" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2382" pos:column="19">Delete</name>) <parameter_list pos:line="2382" pos:column="27">(<param><decl><type><name pos:line="2382" pos:column="28">THIS_</name> <name pos:line="2382" pos:column="34">int</name></type> <name pos:line="2382" pos:column="38">icstitm</name></decl></param>)</parameter_list> <name pos:line="2382" pos:column="47">PURE</name>;</function_decl>

	<comment type="line" pos:line="2384" pos:column="9">// IcntrlOfHid() - Given a HID (Help ID) passed to the help</comment>
	<comment type="line" pos:line="2385" pos:column="9">// callback, return the Icntrl to which it refers.  Returns FF_iotmMin</comment>
	<comment type="line" pos:line="2386" pos:column="9">// if this help id refers to a control not publicly</comment>
	<comment type="line" pos:line="2387" pos:column="9">// exposed (i.e. not in FF_IOTM).</comment>
	<macro><name pos:line="2388" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2388" pos:column="19">(<argument pos:line="2388" pos:column="20">int</argument>, <argument pos:line="2388" pos:column="25">IcntrlOfHid</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2388" pos:column="38">(</op:operator><name pos:line="2388" pos:column="39">THIS_</name> <name pos:line="2388" pos:column="45">unsigned</name> <name pos:line="2388" pos:column="54">long</name> <name pos:line="2388" pos:column="59">hid</name><op:operator pos:line="2388" pos:column="62">)</op:operator> <name pos:line="2388" pos:column="64">CONST_METHOD_FF</name> <name pos:line="2388" pos:column="80">PURE</name></expr>;</expr_stmt>
}</block><empty_stmt pos:line="2389" pos:column="2">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="2393" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2394" pos:column="1">// IMsoCommandList</comment>
<comment type="line" pos:line="2395" pos:column="1">//</comment>
<comment type="line" pos:line="2396" pos:column="1">// Collection of commands available from the toolbar, toolbar drop downs.</comment>

<cpp:undef pos:line="2398" pos:column="1">#<cpp:directive pos:line="2398" pos:column="2">undef</cpp:directive> <name pos:line="2398" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2399" pos:column="1">#<cpp:directive pos:line="2399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2399" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2399" pos:column="19">IMsoCommandList</cpp:value></cpp:define>
<macro><name pos:line="2400" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2400" pos:column="19">(<argument pos:line="2400" pos:column="20">IMsoCommandList</argument>, <argument pos:line="2400" pos:column="37">IUnknown</argument>)</argument_list></macro>
<block pos:line="2401" pos:column="1">{
	<comment type="line" pos:line="2402" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2403" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2404" pos:column="9">//</comment>
	<comment type="line" pos:line="2405" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2406" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2408" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2409" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2411" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2411" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2411" pos:column="35">(<param><decl><type><name pos:line="2411" pos:column="36">THIS_</name> <name pos:line="2411" pos:column="42">REFIID</name></type> <name pos:line="2411" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2411" pos:column="57">void</name> <type:modifier pos:line="2411" pos:column="62">*</type:modifier><type:modifier pos:line="2411" pos:column="63">*</type:modifier></type><name pos:line="2411" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2411" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2413" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2413" pos:column="19">(<argument pos:line="2413" pos:column="20">ULONG</argument>, <argument pos:line="2413" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2413" pos:column="35">(</op:operator><name pos:line="2413" pos:column="36">THIS</name><op:operator pos:line="2413" pos:column="40">)</op:operator> <name pos:line="2413" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2415" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2415" pos:column="19">(<argument pos:line="2415" pos:column="20">ULONG</argument>, <argument pos:line="2415" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2415" pos:column="36">(</op:operator><name pos:line="2415" pos:column="37">THIS</name><op:operator pos:line="2415" pos:column="41">)</op:operator> <name pos:line="2415" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2417" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2418" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2419" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2421" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2422" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2424" pos:column="9">// CszGet() - Returns the number of types in the collection.</comment>

	<name pos:line="2426" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2426" pos:column="19">(<argument><expr><name pos:line="2426" pos:column="20">int</name></expr></argument>, <argument><expr><name pos:line="2426" pos:column="25">CcmdGet</name></expr></argument>)</argument_list> <argument_list pos:line="2426" pos:column="34">(<argument><expr><name pos:line="2426" pos:column="35">THIS</name></expr></argument>)</argument_list> <name pos:line="2426" pos:column="41">CONST_METHOD_FF</name> <name pos:line="2426" pos:column="57">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2428" pos:column="9">// Get() - Returns the requested command.  The given buffer must be of</comment>
	<comment type="line" pos:line="2429" pos:column="9">// length IFindFile::cbMaxCommand.</comment>

	<function_decl><type><name pos:line="2431" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2431" pos:column="19">Get</name>) <parameter_list pos:line="2431" pos:column="24">(<param><decl><type><name pos:line="2431" pos:column="25">THIS_</name> <name pos:line="2431" pos:column="31">MSODMICLE</name></type> <name pos:line="2431" pos:column="41">icle</name></decl></param>, <param><decl><type><name pos:line="2431" pos:column="47">WCHAR</name> <type:modifier pos:line="2431" pos:column="53">*</type:modifier></type> <name pos:line="2431" pos:column="55">szCle</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="2431" pos:column="62">CONST_METHOD_FF</name></type> <name pos:line="2431" pos:column="78">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2433" pos:column="9">// GetFEnabled() - Returns fTrue if the given command is enabled, fFalse</comment>
	<comment type="line" pos:line="2434" pos:column="9">// otherwise.</comment>

	<name pos:line="2436" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2436" pos:column="18">(<param><decl><type><name pos:line="2436" pos:column="19">GetFEnabled</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2436" pos:column="32">(<param><decl><type><name pos:line="2436" pos:column="33">THIS_</name> <name pos:line="2436" pos:column="39">MSODMICLE</name></type> <name pos:line="2436" pos:column="49">icle</name></decl></param>, <param><decl><type><name pos:line="2436" pos:column="55">MSOBOOL</name> <type:modifier pos:line="2436" pos:column="63">*</type:modifier></type> <name pos:line="2436" pos:column="65">pfEnabled</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="2436" pos:column="76">CONST_METHOD_FF</name></type> <name pos:line="2436" pos:column="92">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2438" pos:column="9">// SetFEnabled() - Enables/disables commands.</comment>

	<name pos:line="2440" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2440" pos:column="18">(<param><decl><type><name pos:line="2440" pos:column="19">SetFEnabled</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2440" pos:column="32">(<param><decl><type><name pos:line="2440" pos:column="33">THIS_</name> <name pos:line="2440" pos:column="39">MSODMICLE</name></type> <name pos:line="2440" pos:column="49">icle</name></decl></param>, <param><decl><type><name pos:line="2440" pos:column="55">MSOBOOL</name></type> <name pos:line="2440" pos:column="63">fEnabled</name></decl></param>)</parameter_list> <name pos:line="2440" pos:column="73">PURE</name>;</function_decl>

	<comment type="line" pos:line="2442" pos:column="9">// GetFVisible() - Returns fTrue if the given command is visible, fFalse</comment>
	<comment type="line" pos:line="2443" pos:column="9">// otherwise.</comment>

	<function_decl><type><name pos:line="2445" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2445" pos:column="19">GetFVisible</name>) <parameter_list pos:line="2445" pos:column="32">(<param><decl><type><name pos:line="2445" pos:column="33">THIS_</name> <name pos:line="2445" pos:column="39">MSODMICLE</name></type> <name pos:line="2445" pos:column="49">icle</name></decl></param>, <param><decl><type><name pos:line="2445" pos:column="55">MSOBOOL</name> <type:modifier pos:line="2445" pos:column="63">*</type:modifier></type> <name pos:line="2445" pos:column="65">pfVisible</name></decl></param>)</parameter_list> <decl_stmt><decl><type><name pos:line="2445" pos:column="76">CONST_METHOD_FF</name></type> <name pos:line="2445" pos:column="92">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2447" pos:column="9">// SetFVisible() - Makes commands visible or hides them.</comment>

	<name pos:line="2449" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2449" pos:column="18">(<param><decl><type><name pos:line="2449" pos:column="19">SetFVisible</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2449" pos:column="32">(<param><decl><type><name pos:line="2449" pos:column="33">THIS_</name> <name pos:line="2449" pos:column="39">MSODMICLE</name></type> <name pos:line="2449" pos:column="49">icle</name></decl></param>, <param><decl><type><name pos:line="2449" pos:column="55">MSOBOOL</name></type> <name pos:line="2449" pos:column="63">fVisible</name></decl></param>)</parameter_list> <name pos:line="2449" pos:column="73">PURE</name>;</function_decl>
}</block><empty_stmt pos:line="2450" pos:column="2">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="2453" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2454" pos:column="1">// IMsoFileTypeList</comment>
<comment type="line" pos:line="2455" pos:column="1">//</comment>
<comment type="line" pos:line="2456" pos:column="1">// Collection of file types to display in the file types dropdown.  Each type</comment>
<comment type="line" pos:line="2457" pos:column="1">// should be of the format "Description (.tp1, .tp2, ...)"</comment>

<cpp:undef pos:line="2459" pos:column="1">#<cpp:directive pos:line="2459" pos:column="2">undef</cpp:directive> <name pos:line="2459" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2460" pos:column="1">#<cpp:directive pos:line="2460" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2460" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2460" pos:column="19">IMsoFileTypeList</cpp:value></cpp:define>
<macro><name pos:line="2461" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2461" pos:column="19">(<argument pos:line="2461" pos:column="20">IMsoFileTypeList</argument>, <argument pos:line="2461" pos:column="38">IUnknown</argument>)</argument_list></macro>
<block pos:line="2462" pos:column="1">{
	<comment type="line" pos:line="2463" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2464" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2465" pos:column="9">//</comment>
	<comment type="line" pos:line="2466" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2467" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2469" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2470" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2472" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2472" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2472" pos:column="35">(<param><decl><type><name pos:line="2472" pos:column="36">THIS_</name> <name pos:line="2472" pos:column="42">REFIID</name></type> <name pos:line="2472" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2472" pos:column="57">void</name> <type:modifier pos:line="2472" pos:column="62">*</type:modifier><type:modifier pos:line="2472" pos:column="63">*</type:modifier></type><name pos:line="2472" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2472" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2474" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2474" pos:column="19">(<argument pos:line="2474" pos:column="20">ULONG</argument>, <argument pos:line="2474" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2474" pos:column="35">(</op:operator><name pos:line="2474" pos:column="36">THIS</name><op:operator pos:line="2474" pos:column="40">)</op:operator> <name pos:line="2474" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2476" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2476" pos:column="19">(<argument pos:line="2476" pos:column="20">ULONG</argument>, <argument pos:line="2476" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2476" pos:column="36">(</op:operator><name pos:line="2476" pos:column="37">THIS</name><op:operator pos:line="2476" pos:column="41">)</op:operator> <name pos:line="2476" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2478" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2479" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2480" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2482" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2483" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2485" pos:column="9">// CszGet() - Returns the number of types in the collection.</comment>

	<name pos:line="2487" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2487" pos:column="19">(<argument><expr><name pos:line="2487" pos:column="20">int</name></expr></argument>, <argument><expr><name pos:line="2487" pos:column="25">CszGet</name></expr></argument>)</argument_list> <argument_list pos:line="2487" pos:column="33">(<argument><expr><name pos:line="2487" pos:column="34">THIS</name></expr></argument>)</argument_list> <name pos:line="2487" pos:column="40">CONST_METHOD_FF</name> <name pos:line="2487" pos:column="56">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2489" pos:column="9">// Get() - Returns the requested type.  The given buffer must be of</comment>
	<comment type="line" pos:line="2490" pos:column="9">// length IFindFile::cbMaxType.</comment>

	<function_decl><type><name pos:line="2492" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2492" pos:column="19">Get</name>) <parameter_list pos:line="2492" pos:column="24">(<param><decl><type><name pos:line="2492" pos:column="25">THIS_</name> <name pos:line="2492" pos:column="31">int</name></type> <name pos:line="2492" pos:column="35">iszType</name></decl></param>, <param><decl><type><name pos:line="2492" pos:column="44">WCHAR</name> <type:modifier pos:line="2492" pos:column="50">*</type:modifier></type> <name pos:line="2492" pos:column="52">szType</name></decl></param>, <param><decl><type><name pos:line="2492" pos:column="60">MSOBOOL</name> <type:modifier pos:line="2492" pos:column="68">*</type:modifier></type> <name pos:line="2492" pos:column="70">pfFreezeDir</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="2493" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="2493" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2495" pos:column="9">// Append() - Appends the given type to the list.  Buffer should be no</comment>
	<comment type="line" pos:line="2496" pos:column="9">// longer than IFindFile::cbMaxType in length.</comment>

	<name pos:line="2498" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2498" pos:column="18">(<param><decl><type><name pos:line="2498" pos:column="19">Append</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2498" pos:column="27">(<param><decl><type><name pos:line="2498" pos:column="28">THIS_</name> <specifier pos:line="2498" pos:column="34">const</specifier> <name pos:line="2498" pos:column="40">WCHAR</name> <type:modifier pos:line="2498" pos:column="46">*</type:modifier></type> <name pos:line="2498" pos:column="48">szType</name></decl></param>, <param><decl><type><name pos:line="2498" pos:column="56">MSOBOOL</name></type> <name pos:line="2498" pos:column="64">fFreezeDir</name></decl></param>)</parameter_list> <name pos:line="2498" pos:column="76">PURE</name>;</function_decl>

	<comment type="line" pos:line="2500" pos:column="9">// Delete() - Deletes the given type from the collection.</comment>

	<function_decl><type><name pos:line="2502" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2502" pos:column="19">Delete</name>) <parameter_list pos:line="2502" pos:column="27">(<param><decl><type><name pos:line="2502" pos:column="28">THIS_</name> <name pos:line="2502" pos:column="34">int</name></type> <name pos:line="2502" pos:column="38">iszType</name></decl></param>)</parameter_list> <name pos:line="2502" pos:column="47">PURE</name>;</function_decl>

	<comment type="line" pos:line="2504" pos:column="9">// IszDefaultGet() - Returns the index of the default type.  Usually this</comment>
	<comment type="line" pos:line="2505" pos:column="9">// is zero.</comment>

	<macro><name pos:line="2507" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2507" pos:column="19">(<argument pos:line="2507" pos:column="20">int</argument>, <argument pos:line="2507" pos:column="25">IszDefaultGet</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2507" pos:column="40">(</op:operator><name pos:line="2507" pos:column="41">THIS</name><op:operator pos:line="2507" pos:column="45">)</op:operator> <name pos:line="2507" pos:column="47">CONST_METHOD_FF</name> <name pos:line="2507" pos:column="63">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2509" pos:column="9">// SetIszDefault() - Sets the index of the default type.</comment>

	<function_decl><type><name pos:line="2511" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2511" pos:column="19">SetIszDefault</name>) <parameter_list pos:line="2511" pos:column="34">(<param><decl><type><name pos:line="2511" pos:column="35">THIS_</name> <name pos:line="2511" pos:column="41">int</name></type> <name pos:line="2511" pos:column="45">iszDefault</name></decl></param>)</parameter_list> <name pos:line="2511" pos:column="57">PURE</name>;</function_decl>

	<comment type="line" pos:line="2513" pos:column="9">// AppendEx() - Appends the given type to the list.  Buffer should be no</comment>
	<comment type="line" pos:line="2514" pos:column="9">// longer than IFindFile::cbMaxType in length.</comment>
	<comment type="line" pos:line="2515" pos:column="9">// Allows specifying extra flags.</comment>

	<function_decl><type><name pos:line="2517" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2517" pos:column="19">AppendEx</name>) <parameter_list pos:line="2517" pos:column="29">(<param><decl><type><name pos:line="2517" pos:column="30">THIS_</name> <specifier pos:line="2517" pos:column="36">const</specifier> <name pos:line="2517" pos:column="42">WCHAR</name> <type:modifier pos:line="2517" pos:column="48">*</type:modifier></type> <name pos:line="2517" pos:column="50">szType</name></decl></param>, <param><decl><type><name pos:line="2517" pos:column="58">MSOFTF</name></type> <name pos:line="2517" pos:column="65">msoftf</name></decl></param>)</parameter_list> <name pos:line="2517" pos:column="73">PURE</name>;</function_decl>

}</block><empty_stmt pos:line="2519" pos:column="2">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="2521" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2522" pos:column="1">// IMsoCodePageList</comment>
<comment type="line" pos:line="2523" pos:column="1">//</comment>
<comment type="line" pos:line="2524" pos:column="1">// Collection of code pages</comment>

<cpp:undef pos:line="2526" pos:column="1">#<cpp:directive pos:line="2526" pos:column="2">undef</cpp:directive> <name pos:line="2526" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2527" pos:column="1">#<cpp:directive pos:line="2527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2527" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2527" pos:column="19">IMsoCodePageList</cpp:value></cpp:define>
<macro><name pos:line="2528" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2528" pos:column="19">(<argument pos:line="2528" pos:column="20">IMsoCodePageList</argument>, <argument pos:line="2528" pos:column="38">IUnknown</argument>)</argument_list></macro>
<block pos:line="2529" pos:column="1">{
	<comment type="line" pos:line="2530" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2531" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2532" pos:column="9">//</comment>
	<comment type="line" pos:line="2533" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2534" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2536" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2537" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2539" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2539" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2539" pos:column="35">(<param><decl><type><name pos:line="2539" pos:column="36">THIS_</name> <name pos:line="2539" pos:column="42">REFIID</name></type> <name pos:line="2539" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2539" pos:column="57">void</name> <type:modifier pos:line="2539" pos:column="62">*</type:modifier><type:modifier pos:line="2539" pos:column="63">*</type:modifier></type><name pos:line="2539" pos:column="64">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2539" pos:column="75">PURE</name>;</function_decl>

	<macro><name pos:line="2541" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2541" pos:column="19">(<argument pos:line="2541" pos:column="20">ULONG</argument>, <argument pos:line="2541" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2541" pos:column="35">(</op:operator><name pos:line="2541" pos:column="36">THIS</name><op:operator pos:line="2541" pos:column="40">)</op:operator> <name pos:line="2541" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2543" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2543" pos:column="19">(<argument pos:line="2543" pos:column="20">ULONG</argument>, <argument pos:line="2543" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2543" pos:column="36">(</op:operator><name pos:line="2543" pos:column="37">THIS</name><op:operator pos:line="2543" pos:column="41">)</op:operator> <name pos:line="2543" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2545" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2546" pos:column="9">// Standard Office Debug method</comment>
	<decl_stmt><decl><type><name pos:line="2547" pos:column="9">MSODEBUGMETHOD</name></type>

	<comment type="line" pos:line="2549" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2550" pos:column="9">// Methods</comment>

	<comment type="line" pos:line="2552" pos:column="9">// CszGet() - Returns the number of types in the collection.</comment>

	<name pos:line="2554" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2554" pos:column="19">(<argument><expr><name pos:line="2554" pos:column="20">int</name></expr></argument>, <argument><expr><name pos:line="2554" pos:column="25">CszGet</name></expr></argument>)</argument_list> <argument_list pos:line="2554" pos:column="33">(<argument><expr><name pos:line="2554" pos:column="34">THIS</name></expr></argument>)</argument_list> <name pos:line="2554" pos:column="40">CONST_METHOD_FF</name> <name pos:line="2554" pos:column="56">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2556" pos:column="9">// Get() - Returns the requested type.  The given buffer must be of</comment>
	<comment type="line" pos:line="2557" pos:column="9">// length IFindFile::cbMaxCodePage.</comment>

	<function_decl><type><name pos:line="2559" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2559" pos:column="19">Get</name>) <parameter_list pos:line="2559" pos:column="24">(<param><decl><type><name pos:line="2559" pos:column="25">THIS_</name> <name pos:line="2559" pos:column="31">int</name></type> <name pos:line="2559" pos:column="35">iszCodePage</name></decl></param>, <param><decl><type><name pos:line="2559" pos:column="48">WCHAR</name> <type:modifier pos:line="2559" pos:column="54">*</type:modifier></type> <name pos:line="2559" pos:column="56">szCodePage</name></decl></param>)</parameter_list>
			<decl_stmt><decl><type><name pos:line="2560" pos:column="25">CONST_METHOD_FF</name></type> <name pos:line="2560" pos:column="41">PURE</name></decl>;</decl_stmt>

	<comment type="line" pos:line="2562" pos:column="9">// Append() - Appends the given type to the list.  Buffer should be no</comment>
	<comment type="line" pos:line="2563" pos:column="9">// longer than IFindFile::cbMaxCodePage in length.</comment>

	<name pos:line="2565" pos:column="9">MSOMETHOD</name><parameter_list pos:line="2565" pos:column="18">(<param><decl><type><name pos:line="2565" pos:column="19">Append</name></type></decl></param>)</parameter_list> <parameter_list pos:line="2565" pos:column="27">(<param><decl><type><name pos:line="2565" pos:column="28">THIS_</name> <specifier pos:line="2565" pos:column="34">const</specifier> <name pos:line="2565" pos:column="40">WCHAR</name> <type:modifier pos:line="2565" pos:column="46">*</type:modifier></type> <name pos:line="2565" pos:column="48">szCodePage</name></decl></param>)</parameter_list> <name pos:line="2565" pos:column="60">PURE</name>;</function_decl>

	<comment type="line" pos:line="2567" pos:column="9">// Delete() - Deletes the given type from the collection.</comment>

	<function_decl><type><name pos:line="2569" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2569" pos:column="19">Delete</name>) <parameter_list pos:line="2569" pos:column="27">(<param><decl><type><name pos:line="2569" pos:column="28">THIS_</name> <name pos:line="2569" pos:column="34">int</name></type> <name pos:line="2569" pos:column="38">iszCodePage</name></decl></param>)</parameter_list> <name pos:line="2569" pos:column="51">PURE</name>;</function_decl>

	<comment type="line" pos:line="2571" pos:column="9">// IszDefaultGet() - Returns the index of the default type.  Usually this</comment>
	<comment type="line" pos:line="2572" pos:column="9">// is zero.</comment>

	<macro><name pos:line="2574" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2574" pos:column="19">(<argument pos:line="2574" pos:column="20">int</argument>, <argument pos:line="2574" pos:column="25">IszDefaultGet</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2574" pos:column="40">(</op:operator><name pos:line="2574" pos:column="41">THIS</name><op:operator pos:line="2574" pos:column="45">)</op:operator> <name pos:line="2574" pos:column="47">CONST_METHOD_FF</name> <name pos:line="2574" pos:column="63">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2576" pos:column="9">// SetIszDefault() - Sets the index of the default type.</comment>

	<function_decl><type><name pos:line="2578" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2578" pos:column="19">SetIszDefault</name>) <parameter_list pos:line="2578" pos:column="34">(<param><decl><type><name pos:line="2578" pos:column="35">THIS_</name> <name pos:line="2578" pos:column="41">int</name></type> <name pos:line="2578" pos:column="45">iszDefault</name></decl></param>)</parameter_list> <name pos:line="2578" pos:column="57">PURE</name>;</function_decl>
}</block><empty_stmt pos:line="2579" pos:column="2">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="2582" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2583" pos:column="1">// IMsoOLDocument</comment>
<comment type="line" pos:line="2584" pos:column="1">//</comment>
<comment type="line" pos:line="2585" pos:column="1">// IMsoOLDocument represents a version of a document stored in some storage,</comment>
<comment type="line" pos:line="2586" pos:column="1">// but it may not be stored in a file in the filesystem.  (For example, the</comment>
<comment type="line" pos:line="2587" pos:column="1">// document could be a storage in a MAPI store.)  IMsoOLDocument is also the</comment>
<comment type="line" pos:line="2588" pos:column="1">// interface that allows the applications to communicate with the Office</comment>
<comment type="line" pos:line="2589" pos:column="1">// Librarian.</comment>

<cpp:undef pos:line="2591" pos:column="1">#<cpp:directive pos:line="2591" pos:column="2">undef</cpp:directive> <name pos:line="2591" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="2592" pos:column="1">#<cpp:directive pos:line="2592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2592" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="2592" pos:column="19">IMsoOLDocument</cpp:value></cpp:define>

<macro><name pos:line="2594" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="2594" pos:column="19">(<argument pos:line="2594" pos:column="20">IMsoOLDocument</argument>, <argument pos:line="2594" pos:column="36">IUnknown</argument>)</argument_list></macro>
<block pos:line="2595" pos:column="1">{
	<comment type="line" pos:line="2596" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2597" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="2598" pos:column="9">//</comment>
	<comment type="line" pos:line="2599" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="2600" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="2602" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2603" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="2605" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2605" pos:column="19">QueryInterface</name>) <parameter_list pos:line="2605" pos:column="35">(<param><decl><type><name pos:line="2605" pos:column="36">THIS_</name> <name pos:line="2605" pos:column="42">REFIID</name></type> <name pos:line="2605" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="2605" pos:column="57">void</name> <type:modifier pos:line="2605" pos:column="62">*</type:modifier> <type:modifier pos:line="2605" pos:column="64">*</type:modifier></type> <name pos:line="2605" pos:column="66">ppvObject</name></decl></param>)</parameter_list> <name pos:line="2605" pos:column="77">PURE</name>;</function_decl>

	<macro><name pos:line="2607" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2607" pos:column="19">(<argument pos:line="2607" pos:column="20">ULONG</argument>, <argument pos:line="2607" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2607" pos:column="35">(</op:operator><name pos:line="2607" pos:column="36">THIS</name><op:operator pos:line="2607" pos:column="40">)</op:operator> <name pos:line="2607" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="2609" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2609" pos:column="19">(<argument pos:line="2609" pos:column="20">ULONG</argument>, <argument pos:line="2609" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2609" pos:column="36">(</op:operator><name pos:line="2609" pos:column="37">THIS</name><op:operator pos:line="2609" pos:column="41">)</op:operator> <name pos:line="2609" pos:column="43">PURE</name></expr>;</expr_stmt>


	<comment type="line" pos:line="2612" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2613" pos:column="9">// Standard Office Debug method</comment>
	<function_decl><type><name pos:line="2614" pos:column="9">MSODEBUGMETHOD</name>


	<comment type="line" pos:line="2617" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2618" pos:column="9">// Platform-independent methods.</comment>


	<comment type="line" pos:line="2621" pos:column="9">// GetInterface() - Get an AddRefed pointer to the specified interface</comment>
	<comment type="line" pos:line="2622" pos:column="9">//                  for this document.  Unlike QueryInterface, the</comment>
	<comment type="line" pos:line="2623" pos:column="9">//                  interface returned by this method may not be used</comment>
	<comment type="line" pos:line="2624" pos:column="9">//                  to get back to this IMsoOLDocument.  (Calling</comment>
	<comment type="line" pos:line="2625" pos:column="9">//                  QueryInterface for IID_IMsoOLDocument on the</comment>
	<comment type="line" pos:line="2626" pos:column="9">//                  returned interface may fail.)</comment>

	<name pos:line="2628" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2628" pos:column="19">GetInterface</name>) <parameter_list pos:line="2628" pos:column="33">(<param><decl><type><name pos:line="2628" pos:column="34">THIS_</name> <name pos:line="2628" pos:column="40">IUnknown</name> <type:modifier pos:line="2628" pos:column="49">*</type:modifier> <type:modifier pos:line="2628" pos:column="51">*</type:modifier></type> <name pos:line="2628" pos:column="53">ppIUnknown</name></decl></param>, <param><decl><type><name pos:line="2628" pos:column="65">REFIID</name></type> <name pos:line="2628" pos:column="72">refiid</name></decl></param>)</parameter_list>
			<name pos:line="2629" pos:column="25">PURE</name>;</function_decl>

	<comment type="line" pos:line="2631" pos:column="9">// SetInterface() - Give an interface to this IMsoOLDocument.  This is used</comment>
	<comment type="line" pos:line="2632" pos:column="9">//                  to give interfaces like IStorage, IBindStatusCallback,</comment>
	<comment type="line" pos:line="2633" pos:column="9">//                  and IBindStatusCallback to this object.  If pIUnknown</comment>
	<comment type="line" pos:line="2634" pos:column="9">//                  is NULL, this IMsoOLDocument will release and interface</comment>
	<comment type="line" pos:line="2635" pos:column="9">//                  of the specified type given to it via a previous call</comment>
	<comment type="line" pos:line="2636" pos:column="9">//                  to SetInterface.</comment>

	<function_decl><type><name pos:line="2638" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2638" pos:column="19">SetInterface</name>) <parameter_list pos:line="2638" pos:column="33">(<param><decl><type><name pos:line="2638" pos:column="34">THIS_</name> <name pos:line="2638" pos:column="40">IUnknown</name> <type:modifier pos:line="2638" pos:column="49">*</type:modifier></type> <name pos:line="2638" pos:column="51">pIUnknown</name></decl></param>, <param><decl><type><name pos:line="2638" pos:column="62">REFIID</name></type> <name pos:line="2638" pos:column="69">refiid</name></decl></param>)</parameter_list> <name pos:line="2638" pos:column="77">PURE</name>;</function_decl>

	<comment type="line" pos:line="2640" pos:column="9">// GetPwTdi() - Get an integer value giving the specified type of</comment>
	<comment type="line" pos:line="2641" pos:column="9">//              information about this document.</comment>

	<function_decl><type><name pos:line="2643" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2643" pos:column="19">GetPwTdi</name>) <parameter_list pos:line="2643" pos:column="29">(<param><decl><type><name pos:line="2643" pos:column="30">THIS_</name> <name pos:line="2643" pos:column="36">int</name> <type:modifier pos:line="2643" pos:column="40">*</type:modifier></type><name pos:line="2643" pos:column="41">pw</name></decl></param>, <param><decl><type><name pos:line="2643" pos:column="45">MSOIOLTDI</name></type> <name pos:line="2643" pos:column="55">tdi</name></decl></param>)</parameter_list> <name pos:line="2643" pos:column="60">PURE</name>;</function_decl>

	<comment type="line" pos:line="2645" pos:column="9">// SetWTdi() - Set an integer value giving the specified type of</comment>
	<comment type="line" pos:line="2646" pos:column="9">//             information about this document.</comment>

	<function_decl><type><name pos:line="2648" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2648" pos:column="19">SetWTdi</name>) <parameter_list pos:line="2648" pos:column="28">(<param><decl><type><name pos:line="2648" pos:column="29">THIS_</name> <name pos:line="2648" pos:column="35">int</name></type> <name pos:line="2648" pos:column="39">w</name></decl></param>, <param><decl><type><name pos:line="2648" pos:column="42">MSOIOLTDI</name></type> <name pos:line="2648" pos:column="52">tdi</name></decl></param>)</parameter_list> <name pos:line="2648" pos:column="57">PURE</name>;</function_decl>

	<comment type="line" pos:line="2650" pos:column="9">// GetWzPcchGdn() - Get the specified string for this document.  This</comment>
	<comment type="line" pos:line="2651" pos:column="9">//                  method is used to get display names and file paths.</comment>
	<comment type="line" pos:line="2652" pos:column="9">//                  If the caller wants to find the number of characters</comment>
	<comment type="line" pos:line="2653" pos:column="9">//                  (including the terminating '\0' character) in a</comment>
	<comment type="line" pos:line="2654" pos:column="9">//                  string, the caller can set wz to NULL and the count</comment>
	<comment type="line" pos:line="2655" pos:column="9">//                  will be returned in *pcch.  If wz is not NULL, the</comment>
	<comment type="line" pos:line="2656" pos:column="9">//                  caller should pass the buffer size (including the</comment>
	<comment type="line" pos:line="2657" pos:column="9">//                  terminating '\0' character) in *pcch, and the number</comment>
	<comment type="line" pos:line="2658" pos:column="9">//                  of characters copied to wz (including the terminating</comment>
	<comment type="line" pos:line="2659" pos:column="9">//                  '\0' character) will be returned in *pcch.</comment>

	<function_decl><type><name pos:line="2661" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2661" pos:column="19">GetWzPcchGdn</name>) <parameter_list pos:line="2661" pos:column="33">(<param><decl><type><name pos:line="2661" pos:column="34">THIS_</name> <name pos:line="2661" pos:column="40">WCHAR</name> <type:modifier pos:line="2661" pos:column="46">*</type:modifier></type> <name pos:line="2661" pos:column="48">wz</name></decl></param>, <param><decl><type><name pos:line="2661" pos:column="52">ULONG</name> <type:modifier pos:line="2661" pos:column="58">*</type:modifier></type> <name pos:line="2661" pos:column="60">pcch</name></decl></param>, <param><decl><type><name pos:line="2661" pos:column="66">MSOIOLGDN</name></type> <name pos:line="2661" pos:column="76">gdn</name></decl></param>)</parameter_list>
			<name pos:line="2662" pos:column="25">PURE</name>;</function_decl>

	<comment type="line" pos:line="2664" pos:column="9">// SetWzGdn() - Set the specified string for this document.  This method</comment>
	<comment type="line" pos:line="2665" pos:column="9">//              is used to set the Author, Manager, Company, and Keywords</comment>
	<comment type="line" pos:line="2666" pos:column="9">//              strings used with Ren.  This method may fail if the</comment>
	<comment type="line" pos:line="2667" pos:column="9">//              application is not allowed to set the specified string.</comment>
	<comment type="line" pos:line="2668" pos:column="9">//              (For example, this will fail if the application attempts</comment>
	<comment type="line" pos:line="2669" pos:column="9">//              to change the persistent name.)</comment>

	<function_decl><type><name pos:line="2671" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2671" pos:column="19">SetWzGdn</name>) <parameter_list pos:line="2671" pos:column="29">(<param><decl><type><name pos:line="2671" pos:column="30">THIS_</name> <specifier pos:line="2671" pos:column="36">const</specifier> <name pos:line="2671" pos:column="42">WCHAR</name> <type:modifier pos:line="2671" pos:column="48">*</type:modifier></type> <name pos:line="2671" pos:column="50">wz</name></decl></param>, <param><decl><type><name pos:line="2671" pos:column="54">MSOIOLGDN</name></type> <name pos:line="2671" pos:column="64">gdn</name></decl></param>)</parameter_list> <name pos:line="2671" pos:column="69">PURE</name>;</function_decl>

	<comment type="line" pos:line="2673" pos:column="9">// AttrGet() - Get the atrributes of this document.</comment>
	<comment type="line" pos:line="2674" pos:column="9">//</comment>
	<macro><name pos:line="2675" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2675" pos:column="19">(<argument pos:line="2675" pos:column="20">MSOIOLATTR</argument>, <argument pos:line="2675" pos:column="32">AttrGet</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="2675" pos:column="41">(</op:operator><name pos:line="2675" pos:column="42">THIS</name><op:operator pos:line="2675" pos:column="46">)</op:operator> <name pos:line="2675" pos:column="48">CONST_METHOD_FF</name> <name pos:line="2675" pos:column="64">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2677" pos:column="9">// SetAttrInAttrMask() - Set the attributes selected in attrMask to the</comment>
	<comment type="line" pos:line="2678" pos:column="9">//                       values given in attr.</comment>

	<function_decl><type><name pos:line="2680" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2680" pos:column="19">SetAttrInAttrMask</name>) <parameter_list pos:line="2680" pos:column="38">(<param><decl><type><name pos:line="2680" pos:column="39">THIS_</name> <name pos:line="2680" pos:column="45">MSOIOLATTR</name></type> <name pos:line="2680" pos:column="56">attr</name></decl></param>, <param><decl><type><name pos:line="2680" pos:column="62">MSOIOLATTR</name></type> <name pos:line="2680" pos:column="73">attrMask</name></decl></param>)</parameter_list>
			<name pos:line="2681" pos:column="25">PURE</name>;</function_decl>

	<comment type="line" pos:line="2683" pos:column="9">// BeginCmd() - Find the operation which the application must perform to</comment>
	<comment type="line" pos:line="2684" pos:column="9">//				complete the specified command.</comment>

	<function_decl><type><name pos:line="2686" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2686" pos:column="19">BeginCmd</name>) <parameter_list pos:line="2686" pos:column="29">(<param><decl><type><name pos:line="2686" pos:column="30">THIS_</name> <name pos:line="2686" pos:column="36">MSOIOLCMD</name></type> <name pos:line="2686" pos:column="46">cmd</name></decl></param>,
			<param><decl><type><name pos:line="2687" pos:column="25">IMsoOLDocument</name> <type:modifier pos:line="2687" pos:column="40">*</type:modifier> <type:modifier pos:line="2687" pos:column="42">*</type:modifier></type> <name pos:line="2687" pos:column="44">ppIOLDocOther</name></decl></param>)</parameter_list> <name pos:line="2687" pos:column="59">PURE</name>;</function_decl>

	<comment type="line" pos:line="2689" pos:column="9">// RecordEvent() - Indicate that a command has been performed, or that</comment>
	<comment type="line" pos:line="2690" pos:column="9">//                 the user has performed some action on this document.</comment>
	<comment type="line" pos:line="2691" pos:column="9">//                 The hr parameter indicates whether the command or</comment>
	<comment type="line" pos:line="2692" pos:column="9">//                 action succeeded or failed.</comment>

	<comment type="line" pos:line="2694" pos:column="9">// UNDONE: MSOMETHOD(RecordEvent) (THIS_ MSOIOLEVT evt, HRESULT hr,</comment>
	<function_decl><type><name pos:line="2695" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2695" pos:column="19">RecordEvent</name>) <parameter_list pos:line="2695" pos:column="32">(<param><decl><type><name pos:line="2695" pos:column="33">THIS_</name> <name pos:line="2695" pos:column="39">MSOIOLEVT</name></type> <name pos:line="2695" pos:column="49">evt</name></decl></param>, <param><decl><type><specifier pos:line="2695" pos:column="54">const</specifier> <name pos:line="2695" pos:column="60">void</name> <type:modifier pos:line="2695" pos:column="65">*</type:modifier></type><name pos:line="2695" pos:column="66">pvMisc</name></decl></param>,
			<param><decl><type><name pos:line="2696" pos:column="25">GUID</name> <type:modifier pos:line="2696" pos:column="30">*</type:modifier></type> <name pos:line="2696" pos:column="32">pguid</name></decl></param>)</parameter_list> <name pos:line="2696" pos:column="39">PURE</name>;</function_decl>

	<comment type="line" pos:line="2698" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2699" pos:column="9">// Future Office Librarian methods.  (Not used in MSO97.)</comment>


	<comment type="line" pos:line="2702" pos:column="9">// GetPguidTogI() - Get the specified GUID.  Depending on tog, an index</comment>
	<comment type="line" pos:line="2703" pos:column="9">//                  may or may not be needed.</comment>

	<function_decl><type><name pos:line="2705" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2705" pos:column="19">GetPguidTogI</name>) <parameter_list pos:line="2705" pos:column="33">(<param><decl><type><name pos:line="2705" pos:column="34">THIS_</name> <name pos:line="2705" pos:column="40">GUID</name> <type:modifier pos:line="2705" pos:column="45">*</type:modifier></type> <name pos:line="2705" pos:column="47">pguid</name></decl></param>, <param><decl><type><name pos:line="2705" pos:column="54">MSOIOLTOG</name></type> <name pos:line="2705" pos:column="64">tog</name></decl></param>, <param><decl><type><name pos:line="2705" pos:column="69">int</name></type> <name pos:line="2705" pos:column="73">i</name></decl></param>)</parameter_list>
			<name pos:line="2706" pos:column="25">PURE</name>;</function_decl>

	<comment type="line" pos:line="2708" pos:column="9">// SetPguidTogI() - Set the specified GUID.  Depending on tog, an index</comment>
	<comment type="line" pos:line="2709" pos:column="9">//                  may or may not be needed.</comment>

	<function_decl><type><name pos:line="2711" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2711" pos:column="19">SetPguidTogI</name>) <parameter_list pos:line="2711" pos:column="33">(<param><decl><type><name pos:line="2711" pos:column="34">THIS_</name> <specifier pos:line="2711" pos:column="40">const</specifier> <name pos:line="2711" pos:column="46">GUID</name> <type:modifier pos:line="2711" pos:column="51">*</type:modifier></type> <name pos:line="2711" pos:column="53">pguid</name></decl></param>, <param><decl><type><name pos:line="2711" pos:column="60">MSOIOLTOG</name></type> <name pos:line="2711" pos:column="70">tog</name></decl></param>,
			<param><decl><type><name pos:line="2712" pos:column="25">int</name></type> <name pos:line="2712" pos:column="29">i</name></decl></param>)</parameter_list> <name pos:line="2712" pos:column="32">PURE</name>;</function_decl>

	<comment type="line" pos:line="2714" pos:column="9">// DoIOLDocPguidOp() - Do the specified Office Librarian operation.  The</comment>
	<comment type="line" pos:line="2715" pos:column="9">//                     operation may use or return a pointer to another</comment>
	<comment type="line" pos:line="2716" pos:column="9">//                     IOLDoc and a GUID.  The ulReserved parameter should</comment>
	<comment type="line" pos:line="2717" pos:column="9">//                     be set to 0.</comment>

	<function_decl><type><name pos:line="2719" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2719" pos:column="19">DoIOLDocPguidOp</name>) <parameter_list pos:line="2719" pos:column="36">(<param><decl><type><name pos:line="2719" pos:column="37">THIS_</name> <name pos:line="2719" pos:column="43">IMsoOLDocument</name> <type:modifier pos:line="2719" pos:column="58">*</type:modifier> <type:modifier pos:line="2719" pos:column="60">*</type:modifier></type> <name pos:line="2719" pos:column="62">ppIOLDocOther</name></decl></param>,
			<param><decl><type><name pos:line="2720" pos:column="25">GUID</name> <type:modifier pos:line="2720" pos:column="30">*</type:modifier></type> <name pos:line="2720" pos:column="32">pguid</name></decl></param>, <param><decl><type><name pos:line="2720" pos:column="39">MSOIOLOP</name></type> <name pos:line="2720" pos:column="48">op</name></decl></param>, <param><decl><type><name pos:line="2720" pos:column="52">ULONG</name></type> <name pos:line="2720" pos:column="58">ulReserved</name></decl></param>)</parameter_list> <name pos:line="2720" pos:column="70">PURE</name>;</function_decl>

	<comment type="line" pos:line="2722" pos:column="9">// SetRenSummInfo() - Set the summary information strings used by REN</comment>
	<comment type="line" pos:line="2723" pos:column="9">//		when a document is closed, using given Office Summary Info objects.</comment>
	<comment type="line" pos:line="2724" pos:column="9">//		This function extracts the appropriate strings from the summary</comment>
	<comment type="line" pos:line="2725" pos:column="9">//      info objects and stores them internally (ie. the given objects</comment>
	<comment type="line" pos:line="2726" pos:column="9">//      are not saved).</comment>
	<comment type="line" pos:line="2727" pos:column="9">//</comment>
	<comment type="line" pos:line="2728" pos:column="9">//		Note: If Office Summary Info objects are not available, use the</comment>
	<comment type="line" pos:line="2729" pos:column="9">//      SetWzGdn API for each string as an alternative.</comment>
	<comment type="line" pos:line="2730" pos:column="9">//</comment>
	<function_decl><type><name pos:line="2731" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2731" pos:column="19">SetRenSummInfo</name>) <parameter_list pos:line="2731" pos:column="35">(<param><decl><type><name pos:line="2731" pos:column="36">THIS_</name>
		<specifier pos:line="2732" pos:column="17">const</specifier> <name pos:line="2732" pos:column="23">LPSIOBJ</name></type> <name pos:line="2732" pos:column="31">lpsiobj</name></decl></param>,
		<param><decl><type><specifier pos:line="2733" pos:column="17">const</specifier> <name pos:line="2733" pos:column="23">LPDSIOBJ</name></type> <name pos:line="2733" pos:column="32">lpdsiobj</name></decl></param>,
		<param><decl><type><specifier pos:line="2734" pos:column="17">const</specifier> <name pos:line="2734" pos:column="23">LPUDOBJ</name></type> <name pos:line="2734" pos:column="31">lpudobj</name></decl></param>)</parameter_list> <name pos:line="2734" pos:column="40">PURE</name>;</function_decl>

	<comment type="line" pos:line="2736" pos:column="9">// SetRelatedFile</comment>
	<comment type="line" pos:line="2737" pos:column="9">//		Adds the given file &amp; operation data to the list of related</comment>
	<comment type="line" pos:line="2738" pos:column="9">//		files for the main document.</comment>
	<function_decl><type><name pos:line="2739" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2739" pos:column="19">SetRelatedFile</name>) <parameter_list pos:line="2739" pos:column="35">(<param><decl><type><name pos:line="2739" pos:column="36">THIS_</name> <specifier pos:line="2739" pos:column="42">const</specifier> <name pos:line="2739" pos:column="48">LPMSOIOLFOP</name></type> <name pos:line="2739" pos:column="60">pfop</name></decl></param>)</parameter_list> <name pos:line="2739" pos:column="66">PURE</name>;</function_decl>

	<comment type="line" pos:line="2741" pos:column="9">// ExecuteRelatedFileOps</comment>
	<comment type="line" pos:line="2742" pos:column="9">//		Perform the related file operations for the ioldoc.  This currently does not support the</comment>
	<comment type="line" pos:line="2743" pos:column="9">//		save file operation, use RecordEvent to get that.</comment>
	<comment type="line" pos:line="2744" pos:column="9">// 	This also clears the list of related operations.</comment>
	<function_decl><type><name pos:line="2745" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2745" pos:column="19">ExecuteRelatedFileOps</name>) <parameter_list pos:line="2745" pos:column="42">(<param><decl><type><name pos:line="2745" pos:column="43">THIS</name></type></decl></param>)</parameter_list> <name pos:line="2745" pos:column="49">PURE</name>;</function_decl>

	<comment type="line" pos:line="2747" pos:column="9">// SetDocumentCookie</comment>
	<comment type="line" pos:line="2748" pos:column="9">// Associates a generic "cookie" with this document. The app can store instance-specific</comment>
	<comment type="line" pos:line="2749" pos:column="9">// data (ie. a pointer to a data structure, etc). Its use is defined by the caller:</comment>
	<comment type="line" pos:line="2750" pos:column="9">// The IMsoIOLDocument implementation has no knowledge of what this cookie means.</comment>
	<function_decl><type><name pos:line="2751" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2751" pos:column="19">SetDocumentCookie</name>)<parameter_list pos:line="2751" pos:column="37">(<param><decl><type><name pos:line="2751" pos:column="38">THIS_</name> <name pos:line="2751" pos:column="44">MSODMCOOKIE</name></type> <name pos:line="2751" pos:column="56">msoCookie</name></decl></param>)</parameter_list> <name pos:line="2751" pos:column="67">PURE</name>;</function_decl>

	<comment type="line" pos:line="2753" pos:column="9">// GetDocumentCookie</comment>
	<comment type="line" pos:line="2754" pos:column="9">// Retrieves the generic "cookie" associated with this document. Its use is defined by the caller:</comment>
	<comment type="line" pos:line="2755" pos:column="9">// The IMsoIOLDocument implementation has no knowledge of what this cookie means.</comment>
	<macro><name pos:line="2756" pos:column="9">MSOMETHOD_</name><argument_list pos:line="2756" pos:column="19">(<argument pos:line="2756" pos:column="20">MSODMCOOKIE</argument>, <argument pos:line="2756" pos:column="33">GetDocumentCookie</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="2756" pos:column="51">(</op:operator><name pos:line="2756" pos:column="52">THIS</name><op:operator pos:line="2756" pos:column="56">)</op:operator> <name pos:line="2756" pos:column="58">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2758" pos:column="9">// SetPKMClient</comment>
	<comment type="line" pos:line="2759" pos:column="9">// If our document lies on a Tahoe server and versioning is enabled, we may bind to</comment>
	<comment type="line" pos:line="2760" pos:column="9">// documents with strange naming schemes, but which actually are checked out versions</comment>
	<comment type="line" pos:line="2761" pos:column="9">// of our requested URL doc.  The PKMClient will make this transparent in office.</comment>
	<function_decl><type><name pos:line="2762" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2762" pos:column="19">SetPKMClient</name>)<parameter_list pos:line="2762" pos:column="32">(<param><decl><type><name pos:line="2762" pos:column="33">THIS_</name> <name pos:line="2762" pos:column="39">interface</name> <name pos:line="2762" pos:column="49">IMsoPKMClient</name> <type:modifier pos:line="2762" pos:column="63">*</type:modifier></type><name pos:line="2762" pos:column="64">pipkmclient</name></decl></param>)</parameter_list> <name pos:line="2762" pos:column="77">PURE</name>;</function_decl>

	<comment type="line" pos:line="2764" pos:column="9">// GetPKMClient</comment>
	<comment type="line" pos:line="2765" pos:column="9">// Retrieves the PKMClient.. description is above in SetPKMClient property.</comment>
	<function_decl><type><name pos:line="2766" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2766" pos:column="19">GetPKMClient</name>)<parameter_list pos:line="2766" pos:column="32">(<param><decl><type><name pos:line="2766" pos:column="33">THIS_</name> <name pos:line="2766" pos:column="39">interface</name> <name pos:line="2766" pos:column="49">IMsoPKMClient</name> <type:modifier pos:line="2766" pos:column="63">*</type:modifier><type:modifier pos:line="2766" pos:column="64">*</type:modifier></type><name pos:line="2766" pos:column="65">ppipkmclient</name></decl></param>)</parameter_list> <name pos:line="2766" pos:column="79">PURE</name>;</function_decl>

	<comment type="line" pos:line="2768" pos:column="9">// GetServerInfo</comment>
	<comment type="line" pos:line="2769" pos:column="9">// Retrieves info about the web server that we are communicating with.</comment>
	<function_decl><type><name pos:line="2770" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2770" pos:column="19">GetServerInfo</name>)<parameter_list pos:line="2770" pos:column="33">(<param><decl><type><name pos:line="2770" pos:column="34">THIS_</name> <name pos:line="2770" pos:column="40">MSODMGSI</name> <type:modifier pos:line="2770" pos:column="49">*</type:modifier></type><name pos:line="2770" pos:column="50">psvrinfo</name></decl></param>, <param><decl><type><name pos:line="2770" pos:column="60">MSOGSIOPT</name></type> <name pos:line="2770" pos:column="70">optMask</name></decl></param>)</parameter_list> <name pos:line="2770" pos:column="79">PURE</name>;</function_decl>

	<comment type="line" pos:line="2772" pos:column="9">// GetCOpen</comment>
	<comment type="line" pos:line="2773" pos:column="9">// Retrieves the open count</comment>
	<function_decl><type><name pos:line="2774" pos:column="9">MSOMETHOD</name></type>(<name pos:line="2774" pos:column="19">GetCOpen</name>)<parameter_list pos:line="2774" pos:column="28">(<param><decl><type><name pos:line="2774" pos:column="29">THIS_</name> <name pos:line="2774" pos:column="35">int</name> <type:modifier pos:line="2774" pos:column="39">*</type:modifier></type><name pos:line="2774" pos:column="40">pcOpen</name></decl></param>)</parameter_list> <name pos:line="2774" pos:column="48">PURE</name>;</function_decl>

<cpp:if pos:line="2776" pos:column="1">#<cpp:directive pos:line="2776" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="2776" pos:column="5">!</op:operator><call><name pos:line="2776" pos:column="6">defined</name><argument_list pos:line="2776" pos:column="13">(<argument><expr><name pos:line="2776" pos:column="14">OFFICE_BUILD</name></expr></argument>)</argument_list></call> <op:operator pos:line="2776" pos:column="28">&amp;&amp;</op:operator> <call><name pos:line="2776" pos:column="31">defined</name><argument_list pos:line="2776" pos:column="38">(<argument><expr><name pos:line="2776" pos:column="39">__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
	<comment type="line" pos:line="2777" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="2778" pos:column="9">// Inline methods (replaced by the methods above).</comment>

	<comment type="line" pos:line="2780" pos:column="9">// GetFilePath() - Find the location of this document in the filesystem.</comment>
	<comment type="line" pos:line="2781" pos:column="9">// pibc and pibsc may be NULL in which case defaults will be used if a</comment>
	<comment type="line" pos:line="2782" pos:column="9">// BindToStorage is required to get this path (e.g. the document is</comment>
	<comment type="line" pos:line="2783" pos:column="9">// referenced via a URL).</comment>

	<function><type><name pos:line="2785" pos:column="9">HRESULT</name></type> <name pos:line="2785" pos:column="17">GetFilePath</name> <parameter_list pos:line="2785" pos:column="29">(<param><decl><type><name pos:line="2785" pos:column="30">THIS_</name>
			<name pos:line="2786" pos:column="25">interface</name> <name pos:line="2786" pos:column="35">IBindCtx</name> <type:modifier pos:line="2786" pos:column="44">*</type:modifier></type><name pos:line="2786" pos:column="45">pibc</name></decl></param>, <param><decl><type><name pos:line="2786" pos:column="51">interface</name> <name pos:line="2786" pos:column="61">IBindStatusCallback</name> <type:modifier pos:line="2786" pos:column="81">*</type:modifier></type><name pos:line="2786" pos:column="82">pibsc</name></decl></param>,
			<param><decl><type><name pos:line="2787" pos:column="25">WCHAR</name> <type:modifier pos:line="2787" pos:column="31">*</type:modifier></type><name pos:line="2787" pos:column="32">wzPath</name></decl></param>,
			<param><decl><type><name pos:line="2788" pos:column="25">ULONG</name> <type:modifier pos:line="2788" pos:column="31">*</type:modifier></type><name pos:line="2788" pos:column="32">pcbPath</name></decl></param>, <param><decl><type><name pos:line="2788" pos:column="41">BOOL</name></type> <name pos:line="2788" pos:column="46">fEnableRedirect</name></decl></param>)</parameter_list>
		<block pos:line="2789" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="2790" pos:column="17">HRESULT</name></type> <name pos:line="2790" pos:column="25">hr</name> <init pos:line="2790" pos:column="28">= <expr><op:operator pos:line="2790" pos:column="30">(</op:operator><name pos:line="2790" pos:column="31">pcbPath</name> <op:operator pos:line="2790" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="2790" pos:column="42">0</lit:literal><op:operator pos:line="2790" pos:column="43">)</op:operator> <op:operator pos:line="2790" pos:column="45">?</op:operator> <name pos:line="2790" pos:column="47">E_POINTER</name> <op:operator pos:line="2790" pos:column="57">:</op:operator> <name pos:line="2790" pos:column="59">S_OK</name></expr></init></decl>;</decl_stmt>

		<if pos:line="2792" pos:column="17">if <condition pos:line="2792" pos:column="20">(<expr><name pos:line="2792" pos:column="21">wzPath</name> <op:operator pos:line="2792" pos:column="28">!=</op:operator> <lit:literal type="number" pos:line="2792" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="2792" pos:column="33">
			<expr_stmt><expr><op:operator pos:line="2793" pos:column="25">*</op:operator><name pos:line="2793" pos:column="26">wzPath</name> <op:operator pos:line="2793" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="2793" pos:column="35">0</lit:literal></expr>;</expr_stmt></then></if>

		<if pos:line="2795" pos:column="17">if <condition pos:line="2795" pos:column="20">(<expr><op:operator pos:line="2795" pos:column="21">(</op:operator><call><name pos:line="2795" pos:column="22">SUCCEEDED</name><argument_list pos:line="2795" pos:column="31">(<argument><expr><name pos:line="2795" pos:column="32">hr</name></expr></argument>)</argument_list></call><op:operator pos:line="2795" pos:column="35">)</op:operator> <op:operator pos:line="2795" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="2795" pos:column="40">(</op:operator><name pos:line="2795" pos:column="41">pibc</name> <op:operator pos:line="2795" pos:column="46">!=</op:operator> <lit:literal type="number" pos:line="2795" pos:column="49">0</lit:literal><op:operator pos:line="2795" pos:column="50">)</op:operator></expr>)</condition><then pos:line="2795" pos:column="52">
			<expr_stmt><expr><name pos:line="2796" pos:column="25">hr</name> <op:operator pos:line="2796" pos:column="28">=</op:operator> <call><name pos:line="2796" pos:column="30">SetInterface</name><argument_list pos:line="2796" pos:column="42">(<argument><expr><op:operator pos:line="2796" pos:column="43">(</op:operator><name pos:line="2796" pos:column="44">IUnknown</name> <op:operator pos:line="2796" pos:column="53">*</op:operator><op:operator pos:line="2796" pos:column="54">)</op:operator><name pos:line="2796" pos:column="55">pibc</name></expr></argument>, <argument><expr><name pos:line="2796" pos:column="61">IID_IBindCtx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="2797" pos:column="17">if <condition pos:line="2797" pos:column="20">(<expr><op:operator pos:line="2797" pos:column="21">(</op:operator><call><name pos:line="2797" pos:column="22">SUCCEEDED</name><argument_list pos:line="2797" pos:column="31">(<argument><expr><name pos:line="2797" pos:column="32">hr</name></expr></argument>)</argument_list></call><op:operator pos:line="2797" pos:column="35">)</op:operator> <op:operator pos:line="2797" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="2797" pos:column="40">(</op:operator><name pos:line="2797" pos:column="41">pibsc</name> <op:operator pos:line="2797" pos:column="47">!=</op:operator> <lit:literal type="number" pos:line="2797" pos:column="50">0</lit:literal><op:operator pos:line="2797" pos:column="51">)</op:operator></expr>)</condition><then pos:line="2797" pos:column="53">
			<expr_stmt><expr><name pos:line="2798" pos:column="25">hr</name> <op:operator pos:line="2798" pos:column="28">=</op:operator> <call><name pos:line="2798" pos:column="30">SetInterface</name><argument_list pos:line="2798" pos:column="42">(<argument><expr><op:operator pos:line="2798" pos:column="43">(</op:operator><name pos:line="2798" pos:column="44">IUnknown</name> <op:operator pos:line="2798" pos:column="53">*</op:operator><op:operator pos:line="2798" pos:column="54">)</op:operator><name pos:line="2798" pos:column="55">pibsc</name></expr></argument>, <argument><expr><name pos:line="2798" pos:column="62">IID_IBindStatusCallback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<if pos:line="2800" pos:column="17">if <condition pos:line="2800" pos:column="20">(<expr><call><name pos:line="2800" pos:column="21">SUCCEEDED</name><argument_list pos:line="2800" pos:column="30">(<argument><expr><name pos:line="2800" pos:column="31">hr</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2800" pos:column="35">
			<block pos:line="2801" pos:column="25">{
			<expr_stmt><expr><call><name pos:line="2802" pos:column="25">SetWTdi</name><argument_list pos:line="2802" pos:column="32">(<argument><expr><name pos:line="2802" pos:column="33">fEnableRedirect</name></expr></argument>, <argument><expr><name pos:line="2802" pos:column="50">msoioltdiEnableRedirect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2803" pos:column="25">ULONG</name></type> <name pos:line="2803" pos:column="31">cch</name> <init pos:line="2803" pos:column="35">= <expr><op:operator pos:line="2803" pos:column="37">*</op:operator><name pos:line="2803" pos:column="38">pcbPath</name> <op:operator pos:line="2803" pos:column="46">/</op:operator> <sizeof pos:line="2803" pos:column="48">sizeof<argument_list pos:line="2803" pos:column="54">(<argument><expr><name pos:line="2803" pos:column="55">WCHAR</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2804" pos:column="25">hr</name> <op:operator pos:line="2804" pos:column="28">=</op:operator> <call><name pos:line="2804" pos:column="30">GetWzPcchGdn</name><argument_list pos:line="2804" pos:column="42">(<argument><expr><name pos:line="2804" pos:column="43">wzPath</name></expr></argument>, <argument><expr><op:operator pos:line="2804" pos:column="51">&amp;</op:operator><name pos:line="2804" pos:column="52">cch</name></expr></argument>, <argument><expr><name pos:line="2804" pos:column="57">msoiolgdnTempFilePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2805" pos:column="25">*</op:operator><name pos:line="2805" pos:column="26">pcbPath</name> <op:operator pos:line="2805" pos:column="34">=</op:operator> <name pos:line="2805" pos:column="36">cch</name> <op:operator pos:line="2805" pos:column="40">*</op:operator> <sizeof pos:line="2805" pos:column="42">sizeof<argument_list pos:line="2805" pos:column="48">(<argument><expr><name pos:line="2805" pos:column="49">WCHAR</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
			}</block></then></if>

		<return pos:line="2808" pos:column="17">return <expr><name pos:line="2808" pos:column="24">hr</name></expr>;</return>
		}</block></function>

	<comment type="line" pos:line="2811" pos:column="9">// GetDisplayName() - Find a friendly or persistent name for this document.</comment>

	<function><type><name pos:line="2813" pos:column="9">HRESULT</name></type> <name pos:line="2813" pos:column="17">GetDisplayName</name> <parameter_list pos:line="2813" pos:column="32">(<param><decl><type><name pos:line="2813" pos:column="33">THIS_</name> <name pos:line="2813" pos:column="39">WCHAR</name> <type:modifier pos:line="2813" pos:column="45">*</type:modifier></type><name pos:line="2813" pos:column="46">wzDisplayName</name></decl></param>,
			<param><decl><type><name pos:line="2814" pos:column="25">ULONG</name> <type:modifier pos:line="2814" pos:column="31">*</type:modifier></type><name pos:line="2814" pos:column="32">pcbDisplayName</name></decl></param>, <param><decl><type><name pos:line="2814" pos:column="48">MSOIOLGDN</name></type> <name pos:line="2814" pos:column="58">gdn</name></decl></param>)</parameter_list>
		<block pos:line="2815" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="2816" pos:column="17">HRESULT</name></type> <name pos:line="2816" pos:column="25">hr</name></decl>;</decl_stmt>

		<if pos:line="2818" pos:column="17">if <condition pos:line="2818" pos:column="20">(<expr><name pos:line="2818" pos:column="21">pcbDisplayName</name> <op:operator pos:line="2818" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="2818" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="2818" pos:column="41">
			<block pos:line="2819" pos:column="25">{
			<if pos:line="2820" pos:column="25">if <condition pos:line="2820" pos:column="28">(<expr><name pos:line="2820" pos:column="29">wzDisplayName</name> <op:operator pos:line="2820" pos:column="43">!=</op:operator> <lit:literal type="number" pos:line="2820" pos:column="46">0</lit:literal></expr>)</condition><then pos:line="2820" pos:column="48">
				<expr_stmt><expr><op:operator pos:line="2821" pos:column="33">*</op:operator><name pos:line="2821" pos:column="34">wzDisplayName</name> <op:operator pos:line="2821" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="2821" pos:column="50">0</lit:literal></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="2822" pos:column="25">hr</name> <op:operator pos:line="2822" pos:column="28">=</op:operator> <name pos:line="2822" pos:column="30">E_POINTER</name></expr>;</expr_stmt>
			}</block></then>
		<else pos:line="2824" pos:column="17">else
			<block pos:line="2825" pos:column="25">{
			<decl_stmt><decl><type><name pos:line="2826" pos:column="25">ULONG</name></type> <name pos:line="2826" pos:column="31">cch</name> <init pos:line="2826" pos:column="35">= <expr><op:operator pos:line="2826" pos:column="37">*</op:operator><name pos:line="2826" pos:column="38">pcbDisplayName</name> <op:operator pos:line="2826" pos:column="53">/</op:operator> <sizeof pos:line="2826" pos:column="55">sizeof<argument_list pos:line="2826" pos:column="61">(<argument><expr><name pos:line="2826" pos:column="62">WCHAR</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2827" pos:column="25">hr</name> <op:operator pos:line="2827" pos:column="28">=</op:operator> <call><name pos:line="2827" pos:column="30">GetWzPcchGdn</name><argument_list pos:line="2827" pos:column="42">(<argument><expr><name pos:line="2827" pos:column="43">wzDisplayName</name></expr></argument>, <argument><expr><op:operator pos:line="2827" pos:column="58">&amp;</op:operator><name pos:line="2827" pos:column="59">cch</name></expr></argument>, <argument><expr><name pos:line="2827" pos:column="64">gdn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2828" pos:column="25">*</op:operator><name pos:line="2828" pos:column="26">pcbDisplayName</name> <op:operator pos:line="2828" pos:column="41">=</op:operator> <name pos:line="2828" pos:column="43">cch</name> <op:operator pos:line="2828" pos:column="47">*</op:operator> <sizeof pos:line="2828" pos:column="49">sizeof<argument_list pos:line="2828" pos:column="55">(<argument><expr><name pos:line="2828" pos:column="56">WCHAR</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
			}</block></else></if>

		<return pos:line="2831" pos:column="17">return <expr><name pos:line="2831" pos:column="24">hr</name></expr>;</return>
		}</block></function>

	<comment type="line" pos:line="2834" pos:column="9">// SetIStorage() - Give an IStorage to the IMsoOLDocument, so that the</comment>
	<comment type="line" pos:line="2835" pos:column="9">//				   IMsoOLDocument methods don't need to call StgOpenStorage.</comment>

	<function><type><name pos:line="2837" pos:column="9">HRESULT</name></type> <name pos:line="2837" pos:column="17">SetIStorage</name> <parameter_list pos:line="2837" pos:column="29">(<param><decl><type><name pos:line="2837" pos:column="30">THIS_</name> <name pos:line="2837" pos:column="36">IStorage</name> <type:modifier pos:line="2837" pos:column="45">*</type:modifier></type><name pos:line="2837" pos:column="46">pIStorage</name></decl></param>, <param><decl><type><name pos:line="2837" pos:column="57">DWORD</name></type> <name pos:line="2837" pos:column="63">grfMode</name></decl></param>)</parameter_list>
		<block pos:line="2838" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="2839" pos:column="17">HRESULT</name></type> <name pos:line="2839" pos:column="25">hr</name> <init pos:line="2839" pos:column="28">= <expr><call><name pos:line="2839" pos:column="30">SetInterface</name><argument_list pos:line="2839" pos:column="42">(<argument><expr><name pos:line="2839" pos:column="43">pIStorage</name></expr></argument>, <argument><expr><name pos:line="2839" pos:column="54">IID_IStorage</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2840" pos:column="17">if <condition pos:line="2840" pos:column="20">(<expr><call><name pos:line="2840" pos:column="21">SUCCEEDED</name><argument_list pos:line="2840" pos:column="30">(<argument><expr><name pos:line="2840" pos:column="31">hr</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2840" pos:column="35">
			<expr_stmt><expr><name pos:line="2841" pos:column="25">hr</name> <op:operator pos:line="2841" pos:column="28">=</op:operator> <call><name pos:line="2841" pos:column="30">SetWTdi</name><argument_list pos:line="2841" pos:column="37">(<argument><expr><name pos:line="2841" pos:column="38">grfMode</name></expr></argument>, <argument><expr><name pos:line="2841" pos:column="47">msoioltdiModeIStorage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<return pos:line="2842" pos:column="17">return <expr><name pos:line="2842" pos:column="24">hr</name></expr>;</return>
		}</block></function>

	<comment type="line" pos:line="2845" pos:column="9">// IsInFileSys() - Is this document stored in the file system?</comment>

	<function><type><name pos:line="2847" pos:column="9">HRESULT</name></type> <name pos:line="2847" pos:column="17">IsInFileSys</name> <parameter_list pos:line="2847" pos:column="29">(<param><decl><type><name pos:line="2847" pos:column="30">THIS</name></type></decl></param>)</parameter_list>
		<block pos:line="2848" pos:column="17">{
		<if pos:line="2849" pos:column="17">if <condition pos:line="2849" pos:column="20">(<expr><op:operator pos:line="2849" pos:column="21">(</op:operator><call><name pos:line="2849" pos:column="22">AttrGet</name><argument_list pos:line="2849" pos:column="29">()</argument_list></call> <op:operator pos:line="2849" pos:column="32">&amp;</op:operator> <name pos:line="2849" pos:column="34">msoiolattrInFileSys</name><op:operator pos:line="2849" pos:column="53">)</op:operator> <op:operator pos:line="2849" pos:column="55">!=</op:operator> <lit:literal type="number" pos:line="2849" pos:column="58">0</lit:literal></expr>)</condition><then pos:line="2849" pos:column="60">
			<return pos:line="2850" pos:column="25">return <expr><name pos:line="2850" pos:column="32">S_OK</name></expr>;</return></then>
		<else pos:line="2851" pos:column="17">else
			<return pos:line="2852" pos:column="25">return <expr><name pos:line="2852" pos:column="32">S_FALSE</name></expr>;</return></else></if>
		}</block></function>

	<comment type="line" pos:line="2855" pos:column="9">// IsANewDocument() - Is this document a new document, which does not have</comment>
	<comment type="line" pos:line="2856" pos:column="9">//                    a file associated with it?</comment>

	<function><type><name pos:line="2858" pos:column="9">HRESULT</name></type> <name pos:line="2858" pos:column="17">IsANewDocument</name> <parameter_list pos:line="2858" pos:column="32">(<param><decl><type><name pos:line="2858" pos:column="33">THIS</name></type></decl></param>)</parameter_list>
		<block pos:line="2859" pos:column="17">{
		<if pos:line="2860" pos:column="17">if <condition pos:line="2860" pos:column="20">(<expr><op:operator pos:line="2860" pos:column="21">(</op:operator><call><name pos:line="2860" pos:column="22">AttrGet</name><argument_list pos:line="2860" pos:column="29">()</argument_list></call> <op:operator pos:line="2860" pos:column="32">&amp;</op:operator> <name pos:line="2860" pos:column="34">msoiolattrNewDocument</name><op:operator pos:line="2860" pos:column="55">)</op:operator> <op:operator pos:line="2860" pos:column="57">!=</op:operator> <lit:literal type="number" pos:line="2860" pos:column="60">0</lit:literal></expr>)</condition><then pos:line="2860" pos:column="62">
			<return pos:line="2861" pos:column="25">return <expr><name pos:line="2861" pos:column="32">S_OK</name></expr>;</return></then>
		<else pos:line="2862" pos:column="17">else
			<return pos:line="2863" pos:column="25">return <expr><name pos:line="2863" pos:column="32">S_FALSE</name></expr>;</return></else></if>
		}</block></function>

	<comment type="line" pos:line="2866" pos:column="9">// GetLoggingState() - Returns an IOL_S_ELS_XXX value indicating the</comment>
	<comment type="line" pos:line="2867" pos:column="9">//                     current event logging state.</comment>

	<function><type><name pos:line="2869" pos:column="9">HRESULT</name></type> <name pos:line="2869" pos:column="17">GetLoggingState</name> <parameter_list pos:line="2869" pos:column="33">(<param><decl><type><name pos:line="2869" pos:column="34">THIS</name></type></decl></param>)</parameter_list> <name pos:line="2869" pos:column="40">CONST_METHOD_FF</name>
		<block pos:line="2870" pos:column="17">{
		<return pos:line="2871" pos:column="17">return <expr><op:operator pos:line="2871" pos:column="24">(</op:operator><call><name pos:line="2871" pos:column="25">AttrGet</name><argument_list pos:line="2871" pos:column="32">()</argument_list></call> <op:operator pos:line="2871" pos:column="35">&amp;</op:operator> <name pos:line="2871" pos:column="37">msoiolattrRenLogging</name><op:operator pos:line="2871" pos:column="57">)</op:operator> <op:operator pos:line="2871" pos:column="59">!=</op:operator> <lit:literal type="number" pos:line="2871" pos:column="62">0</lit:literal>
				<op:operator pos:line="2872" pos:column="33">?</op:operator> <name pos:line="2872" pos:column="35">MSO_S_IOLELS_REN_LOGGING</name> <op:operator pos:line="2872" pos:column="60">:</op:operator> <name pos:line="2872" pos:column="62">MSO_S_IOLELS_NO_LOGGING</name></expr>;</return>
		}</block></function>

	<comment type="line" pos:line="2875" pos:column="9">// SetLoggingState() - Indicate how events passed to RecordEvent will</comment>
	<comment type="line" pos:line="2876" pos:column="9">//                     be logged.</comment>

	<function><type><name pos:line="2878" pos:column="9">HRESULT</name></type> <name pos:line="2878" pos:column="17">SetElsLoggingState</name> <parameter_list pos:line="2878" pos:column="36">(<param><decl><type><name pos:line="2878" pos:column="37">THIS_</name> <name pos:line="2878" pos:column="43">MSOIOLELS</name></type> <name pos:line="2878" pos:column="53">elsLoggingState</name></decl></param>)</parameter_list>
		<block pos:line="2879" pos:column="17">{
		<if pos:line="2880" pos:column="17">if <condition pos:line="2880" pos:column="20">(<expr><name pos:line="2880" pos:column="21">elsLoggingState</name> <op:operator pos:line="2880" pos:column="37">==</op:operator> <name pos:line="2880" pos:column="40">msoiolelsRenLogging</name></expr>)</condition><then pos:line="2880" pos:column="60">
			<return pos:line="2881" pos:column="25">return <expr><call><name pos:line="2881" pos:column="32">SetAttrInAttrMask</name><argument_list pos:line="2881" pos:column="49">(<argument><expr><name pos:line="2881" pos:column="50">msoiolattrRenLogging</name></expr></argument>, <argument><expr><name pos:line="2881" pos:column="72">msoiolattrRenLogging</name></expr></argument>)</argument_list></call></expr>;</return></then>
		<else pos:line="2882" pos:column="17">else
			<return pos:line="2883" pos:column="25">return <expr><call><name pos:line="2883" pos:column="32">SetAttrInAttrMask</name><argument_list pos:line="2883" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="2883" pos:column="50">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2883" pos:column="53">msoiolattrRenLogging</name></expr></argument>)</argument_list></call></expr>;</return></else></if>
		}</block></function>

	<comment type="line" pos:line="2886" pos:column="9">// GetMoniker() - Get an IMoniker interface.</comment>

	<function><type><name pos:line="2888" pos:column="9">HRESULT</name></type> <name pos:line="2888" pos:column="17">GetMoniker</name> <parameter_list pos:line="2888" pos:column="28">(<param><decl><type><name pos:line="2888" pos:column="29">THIS_</name> <name pos:line="2888" pos:column="35">IMoniker</name> <type:modifier pos:line="2888" pos:column="44">*</type:modifier><type:modifier pos:line="2888" pos:column="45">*</type:modifier></type><name pos:line="2888" pos:column="46">ppIMoniker</name></decl></param>)</parameter_list>
		<block pos:line="2889" pos:column="17">{ <return pos:line="2889" pos:column="19">return <expr><call><name pos:line="2889" pos:column="26">GetInterface</name><argument_list pos:line="2889" pos:column="38">(<argument><expr><op:operator pos:line="2889" pos:column="39">(</op:operator><name pos:line="2889" pos:column="40">IUnknown</name> <op:operator pos:line="2889" pos:column="49">*</op:operator><op:operator pos:line="2889" pos:column="50">*</op:operator><op:operator pos:line="2889" pos:column="51">)</op:operator> <name pos:line="2889" pos:column="53">ppIMoniker</name></expr></argument>, <argument><expr><name pos:line="2889" pos:column="65">IID_IMoniker</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>

<cpp:endif pos:line="2891" pos:column="1">#<cpp:directive pos:line="2891" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="2891" pos:column="8">// !defined(OFFICE_BUILD) &amp;&amp; defined(__cplusplus)</comment>
}</block><empty_stmt pos:line="2892" pos:column="2">;</empty_stmt>

<comment type="line" format="doxygen" pos:line="2894" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2895" pos:column="1">// MsoPIOLDocOtherGet</comment>
<comment type="line" pos:line="2896" pos:column="1">// Returns a Non-AddRef'd pointer to the other document associated with the</comment>
<comment type="line" pos:line="2897" pos:column="1">// pioldoc passed in. Usually, only interesting during a saveas.</comment>
<comment type="line" pos:line="2898" pos:column="1">// Keep in mind that this pointer is NOT AddRef'd and you can only use it</comment>
<comment type="line" pos:line="2899" pos:column="1">// within local scope</comment>
<comment type="line" pos:line="2900" pos:column="1">//</comment>
<macro><name pos:line="2901" pos:column="1">MSOAPI_</name><argument_list pos:line="2901" pos:column="8">(<argument pos:line="2901" pos:column="9">IMsoOLDocument *</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2901" pos:column="27">MsoPIOLDocOtherGet</name><argument_list pos:line="2901" pos:column="45">(<argument><expr><name pos:line="2901" pos:column="46">IMsoOLDocument</name><op:operator pos:line="2901" pos:column="60">*</op:operator> <name pos:line="2901" pos:column="62">pioldoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="2904" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2905" pos:column="1">// MsoioloptGet</comment>
<comment type="line" pos:line="2906" pos:column="1">//</comment>
<comment type="line" pos:line="2907" pos:column="1">// Get flags describing global IMsoOLDocument option settings.</comment>
<comment type="line" pos:line="2908" pos:column="1">//</comment>
<macro><name pos:line="2909" pos:column="1">MSOAPIX_</name><argument_list pos:line="2909" pos:column="9">(<argument pos:line="2909" pos:column="10">MSOIOLOPT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2909" pos:column="21">MsoioloptGet</name><argument_list pos:line="2909" pos:column="33">(<argument><expr><name pos:line="2909" pos:column="34">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="2912" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2913" pos:column="1">// MsoSetioloptInIoloptMask</comment>
<comment type="line" pos:line="2914" pos:column="1">//</comment>
<comment type="line" pos:line="2915" pos:column="1">// Change the specified global IMsoOLDocument option settings.</comment>
<comment type="line" pos:line="2916" pos:column="1">//</comment>
<macro><name pos:line="2917" pos:column="1">MSOAPI_</name><argument_list pos:line="2917" pos:column="8">(<argument pos:line="2917" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="2917" pos:column="18">MsoSetioloptInIoloptMask</name><argument_list pos:line="2917" pos:column="42">(<argument pos:line="2917" pos:column="43">MSOIOLOPT opt</argument>, <argument pos:line="2917" pos:column="58">MSOIOLOPT optMask</argument>)</argument_list></macro><empty_stmt pos:line="2917" pos:column="76">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="2920" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2921" pos:column="1">// MsoCreateIOLDocFromMoniker</comment>
<comment type="line" pos:line="2922" pos:column="1">//</comment>
<comment type="line" pos:line="2923" pos:column="1">// Given a pointer to an IMoniker interface which represents an IMsoOLDocument,</comment>
<comment type="line" pos:line="2924" pos:column="1">// get an IMsoOLDocument.</comment>
<comment type="line" pos:line="2925" pos:column="1">//</comment>
<macro><name pos:line="2926" pos:column="1">MSOAPI_</name><argument_list pos:line="2926" pos:column="8">(<argument pos:line="2926" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2926" pos:column="18">MsoCreateIOLDocFromMoniker</name><argument_list pos:line="2926" pos:column="44">(<argument><expr><name pos:line="2926" pos:column="45">IMsoOLDocument</name> <op:operator pos:line="2926" pos:column="60">*</op:operator> <op:operator pos:line="2926" pos:column="62">*</op:operator> <name pos:line="2926" pos:column="64">ppIOLDoc</name></expr></argument>,
		<argument><expr><name pos:line="2927" pos:column="17">IMoniker</name> <op:operator pos:line="2927" pos:column="26">*</op:operator> <name pos:line="2927" pos:column="28">pIMoniker</name></expr></argument>, <argument><expr><name pos:line="2927" pos:column="39">IBindCtx</name> <op:operator pos:line="2927" pos:column="48">*</op:operator> <name pos:line="2927" pos:column="50">pIBindCtx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="2930" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2931" pos:column="1">// MsoCreateIOLDocFromWzPersistentName</comment>
<comment type="line" pos:line="2932" pos:column="1">//</comment>
<comment type="line" pos:line="2933" pos:column="1">// Given the persistent name of a document, return an IMsoOLDocument interface</comment>
<comment type="line" pos:line="2934" pos:column="1">// for the document.  szBaseName may be passed as NULL; if not, it will be</comment>
<comment type="line" pos:line="2935" pos:column="1">// used to resolve relative names in the peristent name.</comment>
<comment type="line" pos:line="2936" pos:column="1">//</comment>
<macro><name pos:line="2937" pos:column="1">MSOAPI_</name><argument_list pos:line="2937" pos:column="8">(<argument pos:line="2937" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2937" pos:column="18">MsoCreateIOLDocFromWzPersistentName</name><argument_list pos:line="2937" pos:column="53">(
		<argument><expr><name pos:line="2938" pos:column="17">IMsoOLDocument</name> <op:operator pos:line="2938" pos:column="32">*</op:operator> <op:operator pos:line="2938" pos:column="34">*</op:operator> <name pos:line="2938" pos:column="36">ppIOLDoc</name></expr></argument>, <argument><expr pos:line="2938" pos:column="46">const <name pos:line="2938" pos:column="52">WCHAR</name> <op:operator pos:line="2938" pos:column="58">*</op:operator> <name pos:line="2938" pos:column="60">wzPersistentName</name></expr></argument>,
		<argument><expr pos:line="2939" pos:column="17">const <name pos:line="2939" pos:column="23">WCHAR</name> <op:operator pos:line="2939" pos:column="29">*</op:operator> <name pos:line="2939" pos:column="31">wzBaseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="2942" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2943" pos:column="1">// MsoCreateIOLDocTempFromWzDisplayName</comment>
<comment type="line" pos:line="2944" pos:column="1">//</comment>
<comment type="line" pos:line="2945" pos:column="1">// Given the persistent name of a document, return an IMsoOLDocument</comment>
<comment type="line" pos:line="2946" pos:column="1">// interface for the document.</comment>
<comment type="line" pos:line="2947" pos:column="1">//</comment>
<macro><name pos:line="2948" pos:column="1">MSOAPI_</name><argument_list pos:line="2948" pos:column="8">(<argument pos:line="2948" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2948" pos:column="18">MsoCreateIOLDocTempFromWzDisplayName</name><argument_list pos:line="2948" pos:column="54">(
		<argument><expr><name pos:line="2949" pos:column="17">IMsoOLDocument</name> <op:operator pos:line="2949" pos:column="32">*</op:operator> <op:operator pos:line="2949" pos:column="34">*</op:operator> <name pos:line="2949" pos:column="36">ppIOLDoc</name></expr></argument>, <argument><expr pos:line="2949" pos:column="46">const <name pos:line="2949" pos:column="52">WCHAR</name> <op:operator pos:line="2949" pos:column="58">*</op:operator> <name pos:line="2949" pos:column="60">wzDisplayName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="2952" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2953" pos:column="1">// MsoPIOLDocFindWithWzPersistentName</comment>
<comment type="line" pos:line="2954" pos:column="1">//</comment>
<comment type="line" pos:line="2955" pos:column="1">// Helper function which checks all IMsoOLDocument objects currently in use</comment>
<comment type="line" pos:line="2956" pos:column="1">// and returns a pointer to the IMsoOLDocument which has the specified</comment>
<comment type="line" pos:line="2957" pos:column="1">// persistent name or 0 if no IMsoOLDocument has the specified</comment>
<comment type="line" pos:line="2958" pos:column="1">// persistent name.  If a pointer to an IMsoOLDocument object is returned,</comment>
<comment type="line" pos:line="2959" pos:column="1">// the caller must call IMsoOLDOcument::Release when finished with the</comment>
<comment type="line" pos:line="2960" pos:column="1">// IMsoOLDocument object.</comment>
<comment type="line" pos:line="2961" pos:column="1">//</comment>
<macro><name pos:line="2962" pos:column="1">MSOAPI_</name><argument_list pos:line="2962" pos:column="8">(<argument pos:line="2962" pos:column="9">IMsoOLDocument *</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2962" pos:column="27">MsoPIOLDocFindWithWzPersistentName</name><argument_list pos:line="2962" pos:column="61">(
		<argument><expr pos:line="2963" pos:column="17">const <name pos:line="2963" pos:column="23">WCHAR</name> <op:operator pos:line="2963" pos:column="29">*</op:operator> <name pos:line="2963" pos:column="31">wzPersistentName</name></expr></argument>, <argument><expr pos:line="2963" pos:column="49">const <name pos:line="2963" pos:column="55">WCHAR</name> <op:operator pos:line="2963" pos:column="61">*</op:operator> <name pos:line="2963" pos:column="63">wzBaseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<macro><name pos:line="2966" pos:column="1">MSOAPI_</name><argument_list pos:line="2966" pos:column="8">(<argument pos:line="2966" pos:column="9">int</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2966" pos:column="14">MsoIchInFileSysWzPersistentName</name><argument_list pos:line="2966" pos:column="45">(<argument><expr pos:line="2966" pos:column="46">const <name pos:line="2966" pos:column="52">WCHAR</name> <op:operator pos:line="2966" pos:column="58">*</op:operator><name pos:line="2966" pos:column="59">wzPersistentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" format="doxygen" pos:line="2968" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>

<macro><name pos:line="2970" pos:column="1">MSOAPI_</name><argument_list pos:line="2970" pos:column="8">(<argument pos:line="2970" pos:column="9">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2970" pos:column="15">MsoSetSaveAsWoc</name><argument_list pos:line="2970" pos:column="30">(<argument><expr><name pos:line="2970" pos:column="31">IMsoOLDocument</name><op:operator pos:line="2970" pos:column="45">*</op:operator> <name pos:line="2970" pos:column="47">pioldoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" format="doxygen" pos:line="2972" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2973" pos:column="1">// MsoFIsInFileSysWzPersistentName</comment>
<comment type="line" pos:line="2974" pos:column="1">//</comment>
<comment type="line" pos:line="2975" pos:column="1">// Helper function which determines whether a given persistent name is the</comment>
<comment type="line" pos:line="2976" pos:column="1">// persistent name of a document in the file system.  (Actually, this</comment>
<comment type="line" pos:line="2977" pos:column="1">// function determines whether the form of the given persistent name is</comment>
<comment type="line" pos:line="2978" pos:column="1">// recognized as the form of the name of a document which is not in the</comment>
<comment type="line" pos:line="2979" pos:column="1">// file system.  If so, fFalse is returned, otherwise fTrue is returned.)</comment>
<comment type="line" pos:line="2980" pos:column="1">//</comment>
<macro><name pos:line="2981" pos:column="1">MSOAPI_</name><argument_list pos:line="2981" pos:column="8">(<argument pos:line="2981" pos:column="9">BOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2981" pos:column="15">MsoFIsInFileSysWzPersistentName</name><argument_list pos:line="2981" pos:column="46">(
		<argument><expr pos:line="2982" pos:column="17">const <name pos:line="2982" pos:column="23">WCHAR</name> <op:operator pos:line="2982" pos:column="29">*</op:operator> <name pos:line="2982" pos:column="31">wzPersistentName</name></expr></argument>, <argument><expr pos:line="2982" pos:column="49">const <name pos:line="2982" pos:column="55">WCHAR</name> <op:operator pos:line="2982" pos:column="61">*</op:operator> <name pos:line="2982" pos:column="63">wzBaseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="2984" pos:column="1">MSOAPI_</name><argument_list pos:line="2984" pos:column="8">(<argument pos:line="2984" pos:column="9">BOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2984" pos:column="15">MsoFIsUrlWzPersistentName</name><argument_list pos:line="2984" pos:column="40">(
		<argument><expr pos:line="2985" pos:column="17">const <name pos:line="2985" pos:column="23">WCHAR</name> <op:operator pos:line="2985" pos:column="29">*</op:operator> <name pos:line="2985" pos:column="31">wzPersistentName</name></expr></argument>, <argument><expr pos:line="2985" pos:column="49">const <name pos:line="2985" pos:column="55">WCHAR</name> <op:operator pos:line="2985" pos:column="61">*</op:operator> <name pos:line="2985" pos:column="63">wzBaseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="2987" pos:column="1">MSOAPI_</name><argument_list pos:line="2987" pos:column="8">(<argument pos:line="2987" pos:column="9">BOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="2987" pos:column="15">MsoFIsODMAWzPersistentName</name><argument_list pos:line="2987" pos:column="41">(<argument><expr pos:line="2987" pos:column="42">const <name pos:line="2987" pos:column="48">WCHAR</name> <op:operator pos:line="2987" pos:column="54">*</op:operator><name pos:line="2987" pos:column="55">wzPersistentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" format="doxygen" pos:line="2989" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2990" pos:column="1">// MsoFAddFileToRecent</comment>
<comment type="line" pos:line="2991" pos:column="1">//</comment>
<comment type="line" pos:line="2992" pos:column="1">// Add a shortcut to the given file or directory name in the recent files place</comment>
<comment type="line" pos:line="2993" pos:column="1">// and garbage collect expired shortcuts where appropriate.</comment>
<comment type="line" pos:line="2994" pos:column="1">// if fParent = True, create link to its parent</comment>
<macro><name pos:line="2995" pos:column="1">MSOAPI_</name><argument_list pos:line="2995" pos:column="8">(<argument pos:line="2995" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="2995" pos:column="15">MsoFAddToRecentFolder</name><argument_list pos:line="2995" pos:column="36">(<argument pos:line="2995" pos:column="37">WCHAR *wzFile</argument>, <argument pos:line="2995" pos:column="52">BOOL fParent</argument>)</argument_list></macro><empty_stmt pos:line="2995" pos:column="65">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="2998" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="2999" pos:column="1">// MsoSetFDmNoModalComponents</comment>
<comment type="line" pos:line="3000" pos:column="1">//</comment>
<comment type="line" pos:line="3001" pos:column="1">// Set the SDM dialog state to have no modal components for any</comment>
<comment type="line" pos:line="3002" pos:column="1">// subsequent dialogs brought up by dm.  Should</comment>
<comment type="line" pos:line="3003" pos:column="1">// really only be needed by apps which have no need for a component</comment>
<comment type="line" pos:line="3004" pos:column="1">// manager, such as FindFast and Shortcut Bar, since they cannot be inplace</comment>
<comment type="line" pos:line="3005" pos:column="1">// in another app.  The default state of this flag is FALSE, indicating</comment>
<comment type="line" pos:line="3006" pos:column="1">// that there are modal components.</comment>
<macro><name pos:line="3007" pos:column="1">MSOAPI_</name><argument_list pos:line="3007" pos:column="8">(<argument pos:line="3007" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="3007" pos:column="15">MsoSetFDmNoModalComponents</name> <argument_list pos:line="3007" pos:column="42">(<argument pos:line="3007" pos:column="43">MSOBOOL f</argument>)</argument_list></macro><empty_stmt pos:line="3007" pos:column="53">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="3010" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3011" pos:column="1">// MsoWzGetTempFilename</comment>
<comment type="line" pos:line="3012" pos:column="1">//</comment>
<comment type="line" pos:line="3013" pos:column="1">//	Generates a unique temp file name that doesn't already exist and returns it.</comment>
<comment type="line" pos:line="3014" pos:column="1">//	The file is NOT created.  The extension of the original file is preserved.</comment>
<comment type="line" pos:line="3015" pos:column="1">//</comment>
<comment type="line" pos:line="3016" pos:column="1">//	The file name is copied into the buffer, and a pointer to it is returned.  The</comment>
<comment type="line" pos:line="3017" pos:column="1">//	buffer should be MAX_PATH long.</comment>
<macro><name pos:line="3018" pos:column="1">MSOAPI_</name><argument_list pos:line="3018" pos:column="8">(<argument pos:line="3018" pos:column="9">WCHAR*</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="3018" pos:column="17">MsoWzGetTempFilename</name> <argument_list pos:line="3018" pos:column="38">(<argument><expr><name pos:line="3018" pos:column="39">WCHAR</name> <op:operator pos:line="3018" pos:column="45">*</op:operator><name pos:line="3018" pos:column="46">wz</name></expr></argument>, <argument><expr pos:line="3018" pos:column="50">const <name pos:line="3018" pos:column="56">WCHAR</name> <op:operator pos:line="3018" pos:column="62">*</op:operator><name pos:line="3018" pos:column="63">wzOrig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="3021" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3022" pos:column="1">// MsoIsWzPathAnAnsiPath</comment>
<comment type="line" pos:line="3023" pos:column="1">//</comment>
<comment type="line" pos:line="3024" pos:column="1">// Helper function which determines whether a given path can be represented</comment>
<comment type="line" pos:line="3025" pos:column="1">// in ANSI characters.  Returns S_OK if the given path can be represented</comment>
<comment type="line" pos:line="3026" pos:column="1">// in ANSI characters.</comment>
<comment type="line" pos:line="3027" pos:column="1">//</comment>
<macro><name pos:line="3028" pos:column="1">MSOAPIX_</name><argument_list pos:line="3028" pos:column="9">(<argument pos:line="3028" pos:column="10">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="3028" pos:column="19">MsoIsWzPathAnAnsiPath</name><argument_list pos:line="3028" pos:column="40">(<argument><expr pos:line="3028" pos:column="41">const <name pos:line="3028" pos:column="47">WCHAR</name> <op:operator pos:line="3028" pos:column="53">*</op:operator><name pos:line="3028" pos:column="54">wzPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" format="doxygen" pos:line="3031" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3032" pos:column="1">// MsoDwUrlAttributes</comment>
<comment type="line" pos:line="3033" pos:column="1">//</comment>
<comment type="line" pos:line="3034" pos:column="1">// Returns the win32 attributes of the given url.</comment>
<comment type="line" pos:line="3035" pos:column="1">//</comment>
<comment type="line" pos:line="3036" pos:column="1">// It is expected that the url has already been encoded.</comment>
<comment type="line" pos:line="3037" pos:column="1">//</comment>
<comment type="line" pos:line="3038" pos:column="1">// Param cp is the codepage context for the given url (if in doubt use CP_ACP).</comment>
<comment type="line" pos:line="3039" pos:column="1">//</comment>
<macro><name pos:line="3040" pos:column="1">MSOAPI_</name><argument_list pos:line="3040" pos:column="8">(<argument pos:line="3040" pos:column="9">DWORD</argument>)</argument_list></macro> <macro><name pos:line="3040" pos:column="16">MsoDwUrlAttributes</name> <argument_list pos:line="3040" pos:column="35">(<argument pos:line="3040" pos:column="36">const WCHAR *pwzUrl</argument>, <argument pos:line="3040" pos:column="57">DWORD cp</argument>, <argument pos:line="3040" pos:column="67">BOOL fShowUI</argument>)</argument_list></macro><empty_stmt pos:line="3040" pos:column="80">;</empty_stmt>


<comment type="line" format="doxygen" pos:line="3043" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3044" pos:column="1">// MsoFValidSaveLocation</comment>
<comment type="line" pos:line="3045" pos:column="1">//</comment>
<comment type="line" pos:line="3046" pos:column="1">// Validates a given file location for save.</comment>
<comment type="line" pos:line="3047" pos:column="1">//</comment>
<macro><name pos:line="3048" pos:column="1">MSOAPI_</name><argument_list pos:line="3048" pos:column="8">(<argument pos:line="3048" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="3048" pos:column="15">MsoFValidSaveLocation</name><argument_list pos:line="3048" pos:column="36">(<argument pos:line="3048" pos:column="37">const WCHAR *wzFile</argument>, <argument pos:line="3048" pos:column="58">HWND hwnd</argument>)</argument_list></macro><empty_stmt pos:line="3048" pos:column="68">;</empty_stmt>


<comment type="line" pos:line="3051" pos:column="1">// converts a drive mapped path to full UNC form</comment>
<macro><name pos:line="3052" pos:column="1">MSOAPIX_</name><argument_list pos:line="3052" pos:column="9">(<argument pos:line="3052" pos:column="10">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="3052" pos:column="16">MsoConvertDriveMappedUNCs</name><argument_list pos:line="3052" pos:column="41">(<argument><expr><name pos:line="3052" pos:column="42">WCHAR</name> <op:operator pos:line="3052" pos:column="48">*</op:operator><name pos:line="3052" pos:column="49">pwzPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="3054" pos:column="1">// ... and vice-versa</comment>
<macro><name pos:line="3055" pos:column="1">MSOAPIX_</name><argument_list pos:line="3055" pos:column="9">(<argument pos:line="3055" pos:column="10">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="3055" pos:column="16">MsoConvertUNCsDriveMapped</name><argument_list pos:line="3055" pos:column="41">(<argument><expr><name pos:line="3055" pos:column="42">WCHAR</name> <op:operator pos:line="3055" pos:column="48">*</op:operator><name pos:line="3055" pos:column="49">pwzPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<comment type="line" pos:line="3058" pos:column="1">// the functions listed below will pass in the MAINOTIFYVAL in the Code of a successful HRESULT</comment>
<cpp:define pos:line="3059" pos:column="1">#<cpp:directive pos:line="3059" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3059" pos:column="9">MsoINotifyValFromHr</name><parameter_list pos:line="3059" pos:column="28">(<param><type><name pos:line="3059" pos:column="29">hr</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="3059" pos:column="33">(MSOINOTIFYVAL)(hr)</cpp:value></cpp:define>
<enum pos:line="3060" pos:column="1">enum
	<block pos:line="3061" pos:column="9">{
	<decl><name pos:line="3062" pos:column="9">msoinotifyvalCancel</name> <init pos:line="3062" pos:column="29">= <expr><lit:literal type="number" pos:line="3062" pos:column="31">0</lit:literal></expr></init></decl><op:operator pos:line="3062" pos:column="32">,</op:operator>		<comment type="line" pos:line="3062" pos:column="49">//ShowDocRONotifyDlg, SaveOrThrowChangesDlg</comment>
	<decl><name pos:line="3063" pos:column="9">msoinotifyvalReadOnly</name></decl><op:operator pos:line="3063" pos:column="30">,</op:operator>			<comment type="line" pos:line="3063" pos:column="49">//ShowDocRONotifyDlg, CheckDocAvailableRW,</comment>
	<decl><name pos:line="3064" pos:column="9">msoinotifyvalNotify</name></decl><op:operator pos:line="3064" pos:column="28">,</op:operator>				<comment type="line" pos:line="3064" pos:column="57">//ShowDocRONotifyDlg</comment>
	<decl><name pos:line="3065" pos:column="9">msoinotifyvalShareViolation</name></decl><op:operator pos:line="3065" pos:column="36">,</op:operator>  <comment type="line" pos:line="3065" pos:column="39">//CheckDocAvailableRW,</comment>
	<decl><name pos:line="3066" pos:column="9">msoinotifyvalReadWrite</name></decl><op:operator pos:line="3066" pos:column="31">,</op:operator>			<comment type="line" pos:line="3066" pos:column="49">//CheckDocAvailableRW,</comment>
   <decl><name pos:line="3067" pos:column="4">msoinotifyvalNoMemory</name></decl><op:operator pos:line="3067" pos:column="25">,</op:operator>			<comment type="line" pos:line="3067" pos:column="49">//CheckDocAvailableRW,</comment>
	<decl><name pos:line="3068" pos:column="9">msoinotifyvalNoServerChanges</name></decl><op:operator pos:line="3068" pos:column="37">,</op:operator>	<comment type="line" pos:line="3068" pos:column="41">//SaveOrThrowChangesDlg</comment>
	<decl><name pos:line="3069" pos:column="9">msoinotifyvalDiscardChanges</name></decl><op:operator pos:line="3069" pos:column="36">,</op:operator>  <comment type="line" pos:line="3069" pos:column="39">//SaveOrThrowChangesDlg</comment>
	<decl><name pos:line="3070" pos:column="9">msoinotifyvalSaveAsChanges</name></decl><op:operator pos:line="3070" pos:column="35">,</op:operator>   <comment type="line" pos:line="3070" pos:column="39">//SaveOrThrowChangesDlg</comment>
	<decl><name pos:line="3071" pos:column="9">msoinotifyvalUnknown</name></decl><op:operator pos:line="3071" pos:column="29">,</op:operator>			<comment type="line" pos:line="3071" pos:column="49">//All 3</comment>
	<decl><name pos:line="3072" pos:column="9">msoinotifyvalSameTime</name></decl><op:operator pos:line="3072" pos:column="30">,</op:operator>			<comment type="line" pos:line="3072" pos:column="49">//CompareDocTimestamp</comment>
	<decl><name pos:line="3073" pos:column="9">msoinotifyvalDifferentTime</name></decl><op:operator pos:line="3073" pos:column="35">,</op:operator>	<comment type="line" pos:line="3073" pos:column="41">//CompareDocTimestamp</comment>
	<decl><name pos:line="3074" pos:column="9">msoinotifyvalMerge</name></decl><op:operator pos:line="3074" pos:column="27">,</op:operator>				<comment type="line" pos:line="3074" pos:column="57">//ShowDocRONotifyDlg</comment>
	<decl><name pos:line="3075" pos:column="9">msoinotifyvalNoFile</name></decl><op:operator pos:line="3075" pos:column="28">,</op:operator>		<comment type="line" pos:line="3075" pos:column="41">// CheckDocAvailableRW</comment>
	}</block>;</enum>

<comment type="line" format="doxygen" pos:line="3078" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3079" pos:column="1">// IMsoDocumentNotifyList</comment>
<comment type="line" pos:line="3080" pos:column="1">//</comment>
<comment type="line" pos:line="3081" pos:column="1">// IMsoDocumentNotifyList is an interface that maintains a list of documents opened</comment>
<comment type="line" pos:line="3082" pos:column="1">// by the applications in read-only mode (becuase the document was in use and</comment>
<comment type="line" pos:line="3083" pos:column="1">// locked by another application somewhere) and have requested to be notified</comment>
<comment type="line" pos:line="3084" pos:column="1">// once the document is available for editing.</comment>

<cpp:undef pos:line="3086" pos:column="1">#<cpp:directive pos:line="3086" pos:column="2">undef</cpp:directive> <name pos:line="3086" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="3087" pos:column="1">#<cpp:directive pos:line="3087" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3087" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="3087" pos:column="19">IMsoDocumentNotifyList</cpp:value></cpp:define>

<macro><name pos:line="3089" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="3089" pos:column="19">(<argument pos:line="3089" pos:column="20">IMsoDocumentNotifyList</argument>, <argument pos:line="3089" pos:column="44">IUnknown</argument>)</argument_list></macro>
<block pos:line="3090" pos:column="1">{
	<comment type="line" pos:line="3091" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3092" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="3093" pos:column="9">//</comment>
	<comment type="line" pos:line="3094" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="3095" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="3097" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3098" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="3100" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3100" pos:column="19">QueryInterface</name>) <parameter_list pos:line="3100" pos:column="35">(<param><decl><type><name pos:line="3100" pos:column="36">THIS_</name> <name pos:line="3100" pos:column="42">REFIID</name></type> <name pos:line="3100" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="3100" pos:column="57">void</name> <type:modifier pos:line="3100" pos:column="62">*</type:modifier> <type:modifier pos:line="3100" pos:column="64">*</type:modifier></type> <name pos:line="3100" pos:column="66">ppvObject</name></decl></param>)</parameter_list> <name pos:line="3100" pos:column="77">PURE</name>;</function_decl>

	<macro><name pos:line="3102" pos:column="9">MSOMETHOD_</name><argument_list pos:line="3102" pos:column="19">(<argument pos:line="3102" pos:column="20">ULONG</argument>, <argument pos:line="3102" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="3102" pos:column="35">(</op:operator><name pos:line="3102" pos:column="36">THIS</name><op:operator pos:line="3102" pos:column="40">)</op:operator> <name pos:line="3102" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="3104" pos:column="9">MSOMETHOD_</name><argument_list pos:line="3104" pos:column="19">(<argument pos:line="3104" pos:column="20">ULONG</argument>, <argument pos:line="3104" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="3104" pos:column="36">(</op:operator><name pos:line="3104" pos:column="37">THIS</name><op:operator pos:line="3104" pos:column="41">)</op:operator> <name pos:line="3104" pos:column="43">PURE</name></expr>;</expr_stmt>


	<comment type="line" pos:line="3107" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3108" pos:column="9">// Standard Office Debug method</comment>
	<function_decl><type><name pos:line="3109" pos:column="9">MSODEBUGMETHOD</name>


	<comment type="line" pos:line="3112" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3113" pos:column="9">// Platform-independent methods.</comment>

	<name pos:line="3115" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3115" pos:column="19">SetDocNotifyCallback</name>) <parameter_list pos:line="3115" pos:column="41">(<param><decl><type><name pos:line="3115" pos:column="42">THIS_</name> <name pos:line="3115" pos:column="48">PFNDOCNOTIFYCALLBACK</name></type> <name pos:line="3115" pos:column="69">pfnDocNotifyCallBack</name></decl></param>)</parameter_list> <name pos:line="3115" pos:column="91">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3117" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3117" pos:column="19">CheckDocsAndNotify</name>) <parameter_list pos:line="3117" pos:column="39">(<param><decl><type><name pos:line="3117" pos:column="40">THIS</name></type></decl></param>)</parameter_list> <name pos:line="3117" pos:column="46">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3119" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3119" pos:column="19">AddDocToNotifyList</name>) <parameter_list pos:line="3119" pos:column="39">(<param><decl><type><name pos:line="3119" pos:column="40">THIS_</name> <specifier pos:line="3119" pos:column="46">const</specifier> <name pos:line="3119" pos:column="52">WCHAR</name> <type:modifier pos:line="3119" pos:column="58">*</type:modifier></type> <name pos:line="3119" pos:column="60">wzDocPersistName</name></decl></param>)</parameter_list> <name pos:line="3119" pos:column="78">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3121" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3121" pos:column="19">AddDocToNotifyListEx</name>) <parameter_list pos:line="3121" pos:column="41">(<param><decl><type><name pos:line="3121" pos:column="42">THIS_</name> <specifier pos:line="3121" pos:column="48">const</specifier> <name pos:line="3121" pos:column="54">WCHAR</name> <type:modifier pos:line="3121" pos:column="60">*</type:modifier></type> <name pos:line="3121" pos:column="62">wzDocPersistName</name></decl></param>, <param><decl><type><name pos:line="3121" pos:column="80">PFNCHECKDOCAVAILABLERW</name></type> <name pos:line="3121" pos:column="103">pfnCheckDocAvailableRW</name></decl></param>)</parameter_list> <name pos:line="3121" pos:column="127">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3123" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3123" pos:column="19">RemoveDocFromNotifyList</name>) <parameter_list pos:line="3123" pos:column="44">(<param><decl><type><name pos:line="3123" pos:column="45">THIS_</name> <specifier pos:line="3123" pos:column="51">const</specifier> <name pos:line="3123" pos:column="57">WCHAR</name> <type:modifier pos:line="3123" pos:column="63">*</type:modifier></type> <name pos:line="3123" pos:column="65">wzDocPersistName</name></decl></param>)</parameter_list> <name pos:line="3123" pos:column="83">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3125" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3125" pos:column="19">RemoveDocFromNotifyListEx</name>) <parameter_list pos:line="3125" pos:column="46">(<param><decl><type><name pos:line="3125" pos:column="47">THIS_</name> <specifier pos:line="3125" pos:column="53">const</specifier> <name pos:line="3125" pos:column="59">WCHAR</name> <type:modifier pos:line="3125" pos:column="65">*</type:modifier></type> <name pos:line="3125" pos:column="67">wzDocPersistName</name></decl></param>)</parameter_list> <name pos:line="3125" pos:column="85">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3127" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3127" pos:column="19">CheckDocAvailableRW</name>) <parameter_list pos:line="3127" pos:column="40">(<param><decl><type><name pos:line="3127" pos:column="41">THIS_</name> <specifier pos:line="3127" pos:column="47">const</specifier> <name pos:line="3127" pos:column="53">WCHAR</name> <type:modifier pos:line="3127" pos:column="59">*</type:modifier></type> <name pos:line="3127" pos:column="61">wzDocPersistName</name></decl></param>)</parameter_list> <name pos:line="3127" pos:column="79">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3129" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3129" pos:column="19">ShowDocRONotifyDlg</name>) <parameter_list pos:line="3129" pos:column="39">(<param><decl><type><name pos:line="3129" pos:column="40">THIS_</name> <specifier pos:line="3129" pos:column="46">const</specifier> <name pos:line="3129" pos:column="52">WCHAR</name> <type:modifier pos:line="3129" pos:column="58">*</type:modifier></type> <name pos:line="3129" pos:column="60">wzDocPersistName</name></decl></param>, <param><decl><type><specifier pos:line="3129" pos:column="78">const</specifier> <name pos:line="3129" pos:column="84">WCHAR</name> <type:modifier pos:line="3129" pos:column="90">*</type:modifier></type> <name pos:line="3129" pos:column="92">wzUserName</name></decl></param>, <param><decl><type><name pos:line="3129" pos:column="104">BOOL</name></type> <name pos:line="3129" pos:column="109">fForceNotify</name></decl></param>, <param><decl><type><name pos:line="3129" pos:column="123">BOOL</name></type> <name pos:line="3129" pos:column="128">fHideRO</name></decl></param>)</parameter_list> <name pos:line="3129" pos:column="137">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3131" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3131" pos:column="19">ShowDocRONotifyDlgEx</name>) <parameter_list pos:line="3131" pos:column="41">(<param><decl><type><name pos:line="3131" pos:column="42">THIS_</name> <specifier pos:line="3131" pos:column="48">const</specifier> <name pos:line="3131" pos:column="54">WCHAR</name> <type:modifier pos:line="3131" pos:column="60">*</type:modifier></type> <name pos:line="3131" pos:column="62">wzDocPersistName</name></decl></param>, <param><decl><type><specifier pos:line="3131" pos:column="80">const</specifier> <name pos:line="3131" pos:column="86">WCHAR</name> <type:modifier pos:line="3131" pos:column="92">*</type:modifier></type> <name pos:line="3131" pos:column="94">wzUserName</name></decl></param>, <param><decl><type><name pos:line="3131" pos:column="106">PFNCHECKDOCAVAILABLERW</name></type> <name pos:line="3131" pos:column="129">pfnCheckDocAvailableRW</name></decl></param>, <param><decl><type><name pos:line="3131" pos:column="153">BOOL</name></type> <name pos:line="3131" pos:column="158">fForceNotify</name></decl></param>, <param><decl><type><name pos:line="3131" pos:column="172">BOOL</name></type> <name pos:line="3131" pos:column="177">fHideRO</name></decl></param>)</parameter_list> <name pos:line="3131" pos:column="186">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3133" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3133" pos:column="19">ShowDocRWNotifyDlg</name>) <parameter_list pos:line="3133" pos:column="39">(<param><decl><type><name pos:line="3133" pos:column="40">THIS_</name> <specifier pos:line="3133" pos:column="46">const</specifier> <name pos:line="3133" pos:column="52">WCHAR</name> <type:modifier pos:line="3133" pos:column="58">*</type:modifier></type> <name pos:line="3133" pos:column="60">wzDocPersistName</name></decl></param>)</parameter_list> <name pos:line="3133" pos:column="78">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3135" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3135" pos:column="19">ShowDocSaveThrowChgDlg</name>) <parameter_list pos:line="3135" pos:column="43">(<param><decl><type><name pos:line="3135" pos:column="44">THIS_</name> <specifier pos:line="3135" pos:column="50">const</specifier> <name pos:line="3135" pos:column="56">WCHAR</name> <type:modifier pos:line="3135" pos:column="62">*</type:modifier></type> <name pos:line="3135" pos:column="64">wzDocPersistName</name></decl></param>, <param><decl><type><name pos:line="3135" pos:column="82">MSOINOTIFYVAL</name> <type:modifier pos:line="3135" pos:column="96">*</type:modifier></type> <name pos:line="3135" pos:column="98">pRetVal</name></decl></param>)</parameter_list> <name pos:line="3135" pos:column="107">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3137" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3137" pos:column="19">AddOLDocToNotifyList</name>) <parameter_list pos:line="3137" pos:column="41">(<param><decl><type><name pos:line="3137" pos:column="42">THIS_</name> <name pos:line="3137" pos:column="48">IMsoOLDocument</name> <type:modifier pos:line="3137" pos:column="63">*</type:modifier></type> <name pos:line="3137" pos:column="65">pIOLDoc</name></decl></param>)</parameter_list> <name pos:line="3137" pos:column="74">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3139" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3139" pos:column="19">RemoveOLDocFromNotifyList</name>) <parameter_list pos:line="3139" pos:column="46">(<param><decl><type><name pos:line="3139" pos:column="47">THIS_</name> <name pos:line="3139" pos:column="53">IMsoOLDocument</name> <type:modifier pos:line="3139" pos:column="68">*</type:modifier></type> <name pos:line="3139" pos:column="70">pIOLDoc</name></decl></param>)</parameter_list> <name pos:line="3139" pos:column="79">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3141" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3141" pos:column="19">CheckOLDocAvailableRW</name>) <parameter_list pos:line="3141" pos:column="42">(<param><decl><type><name pos:line="3141" pos:column="43">THIS_</name> <name pos:line="3141" pos:column="49">IMsoOLDocument</name> <type:modifier pos:line="3141" pos:column="64">*</type:modifier></type> <name pos:line="3141" pos:column="66">pIOLDoc</name></decl></param>)</parameter_list> <name pos:line="3141" pos:column="75">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3143" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3143" pos:column="19">ShowOLDocRONotifyDlg</name>) <parameter_list pos:line="3143" pos:column="41">(<param><decl><type><name pos:line="3143" pos:column="42">THIS_</name> <name pos:line="3143" pos:column="48">IMsoOLDocument</name> <type:modifier pos:line="3143" pos:column="63">*</type:modifier></type> <name pos:line="3143" pos:column="65">pIOLDoc</name></decl></param>, <param><decl><type><specifier pos:line="3143" pos:column="74">const</specifier> <name pos:line="3143" pos:column="80">WCHAR</name> <type:modifier pos:line="3143" pos:column="86">*</type:modifier></type> <name pos:line="3143" pos:column="88">wzUserName</name></decl></param>, <param><decl><type><name pos:line="3143" pos:column="100">BOOL</name></type> <name pos:line="3143" pos:column="105">fForceNotify</name></decl></param>, <param><decl><type><name pos:line="3143" pos:column="119">BOOL</name></type> <name pos:line="3143" pos:column="124">fHideRO</name></decl></param>)</parameter_list> <name pos:line="3143" pos:column="133">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3145" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3145" pos:column="19">ShowOLDocRWNotifyDlg</name>) <parameter_list pos:line="3145" pos:column="41">(<param><decl><type><name pos:line="3145" pos:column="42">THIS_</name> <name pos:line="3145" pos:column="48">IMsoOLDocument</name> <type:modifier pos:line="3145" pos:column="63">*</type:modifier></type> <name pos:line="3145" pos:column="65">pIOLDoc</name></decl></param>)</parameter_list> <name pos:line="3145" pos:column="74">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3147" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3147" pos:column="19">ShowOLDocSaveThrowChgDlg</name>) <parameter_list pos:line="3147" pos:column="45">(<param><decl><type><name pos:line="3147" pos:column="46">THIS_</name> <name pos:line="3147" pos:column="52">IMsoOLDocument</name> <type:modifier pos:line="3147" pos:column="67">*</type:modifier></type> <name pos:line="3147" pos:column="69">pIOLDoc</name></decl></param>, <param><decl><type><name pos:line="3147" pos:column="78">MSOINOTIFYVAL</name> <type:modifier pos:line="3147" pos:column="92">*</type:modifier></type> <name pos:line="3147" pos:column="94">pRetVal</name></decl></param>)</parameter_list> <name pos:line="3147" pos:column="103">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3149" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3149" pos:column="19">CompareOLDocTimestamp</name>) <parameter_list pos:line="3149" pos:column="42">(<param><decl><type><name pos:line="3149" pos:column="43">THIS_</name> <name pos:line="3149" pos:column="49">IMsoOLDocument</name> <type:modifier pos:line="3149" pos:column="64">*</type:modifier></type> <name pos:line="3149" pos:column="66">pIOLDoc</name></decl></param>, <param><decl><type><name pos:line="3149" pos:column="75">FILETIME</name></type> <name pos:line="3149" pos:column="84">ftCompare</name></decl></param>, <param><decl><type><name pos:line="3149" pos:column="95">MSOINOTIFYVAL</name> <type:modifier pos:line="3149" pos:column="109">*</type:modifier></type> <name pos:line="3149" pos:column="111">pValRet</name></decl></param>)</parameter_list> <name pos:line="3149" pos:column="120">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3151" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3151" pos:column="19">CompareDocTimestamp</name>) <parameter_list pos:line="3151" pos:column="40">(<param><decl><type><name pos:line="3151" pos:column="41">THIS_</name> <specifier pos:line="3151" pos:column="47">const</specifier> <name pos:line="3151" pos:column="53">WCHAR</name> <type:modifier pos:line="3151" pos:column="59">*</type:modifier></type> <name pos:line="3151" pos:column="61">wzPersistName</name></decl></param>, <param><decl><type><name pos:line="3151" pos:column="76">FILETIME</name></type> <name pos:line="3151" pos:column="85">ftCompare</name></decl></param>, <param><decl><type><name pos:line="3151" pos:column="96">MSOINOTIFYVAL</name> <type:modifier pos:line="3151" pos:column="110">*</type:modifier></type> <name pos:line="3151" pos:column="112">pValRet</name></decl></param>)</parameter_list> <name pos:line="3151" pos:column="121">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3153" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3153" pos:column="19">SetDocNotifyDlgCallbacks</name>) <parameter_list pos:line="3153" pos:column="45">(<param><decl><type><name pos:line="3153" pos:column="46">THIS_</name> <name pos:line="3153" pos:column="52">PFNDODOCRONOTIFYDLG</name></type> <name pos:line="3153" pos:column="72">pfnDoDocRONotifyDlg</name></decl></param>, <param><decl><type><name pos:line="3153" pos:column="93">PFNDODOCRWNOTIFYDLG</name></type> <name pos:line="3153" pos:column="113">pfnDoDocRWNotifyDlg</name></decl></param>)</parameter_list> <name pos:line="3153" pos:column="134">PURE</name>;</function_decl>

	<function_decl><type><name pos:line="3155" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3155" pos:column="19">SetDocCopyNameInNotifyList</name>) <parameter_list pos:line="3155" pos:column="47">(<param><decl><type><name pos:line="3155" pos:column="48">THIS_</name> <specifier pos:line="3155" pos:column="54">const</specifier> <name pos:line="3155" pos:column="60">WCHAR</name> <type:modifier pos:line="3155" pos:column="66">*</type:modifier></type> <name pos:line="3155" pos:column="68">wzPersistName</name></decl></param>, <param><decl><type><specifier pos:line="3155" pos:column="83">const</specifier> <name pos:line="3155" pos:column="89">WCHAR</name> <type:modifier pos:line="3155" pos:column="95">*</type:modifier></type> <name pos:line="3155" pos:column="97">wzCopyName</name></decl></param>)</parameter_list>;</function_decl>

}</block><empty_stmt pos:line="3157" pos:column="2">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="3161" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3162" pos:column="1">// IGSV</comment>
<comment type="line" pos:line="3163" pos:column="1">//</comment>
<comment type="line" pos:line="3164" pos:column="1">// A useful interface for getting / setting values which an object uses.</comment>

<cpp:undef pos:line="3166" pos:column="1">#<cpp:directive pos:line="3166" pos:column="2">undef</cpp:directive> <name pos:line="3166" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="3167" pos:column="1">#<cpp:directive pos:line="3167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3167" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="3167" pos:column="19">IMsoGSV</cpp:value></cpp:define>

<macro><name pos:line="3169" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="3169" pos:column="19">(<argument pos:line="3169" pos:column="20">IMsoGSV</argument>, <argument pos:line="3169" pos:column="29">IUnknown</argument>)</argument_list></macro>
<block pos:line="3170" pos:column="1">{
	<comment type="line" pos:line="3171" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3172" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="3173" pos:column="9">//</comment>
	<comment type="line" pos:line="3174" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="3175" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="3177" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3178" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="3180" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3180" pos:column="19">QueryInterface</name>) <parameter_list pos:line="3180" pos:column="35">(<param><decl><type><name pos:line="3180" pos:column="36">THIS_</name> <name pos:line="3180" pos:column="42">REFIID</name></type> <name pos:line="3180" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="3180" pos:column="57">void</name> <type:modifier pos:line="3180" pos:column="62">*</type:modifier> <type:modifier pos:line="3180" pos:column="64">*</type:modifier></type> <name pos:line="3180" pos:column="66">ppvObject</name></decl></param>)</parameter_list> <name pos:line="3180" pos:column="77">PURE</name>;</function_decl>

	<macro><name pos:line="3182" pos:column="9">MSOMETHOD_</name><argument_list pos:line="3182" pos:column="19">(<argument pos:line="3182" pos:column="20">ULONG</argument>, <argument pos:line="3182" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="3182" pos:column="35">(</op:operator><name pos:line="3182" pos:column="36">THIS</name><op:operator pos:line="3182" pos:column="40">)</op:operator> <name pos:line="3182" pos:column="42">PURE</name></expr>;</expr_stmt>

	<macro><name pos:line="3184" pos:column="9">MSOMETHOD_</name><argument_list pos:line="3184" pos:column="19">(<argument pos:line="3184" pos:column="20">ULONG</argument>, <argument pos:line="3184" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="3184" pos:column="36">(</op:operator><name pos:line="3184" pos:column="37">THIS</name><op:operator pos:line="3184" pos:column="41">)</op:operator> <name pos:line="3184" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="3186" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3187" pos:column="9">// Standard Office Debug method</comment>
	<function_decl><type><name pos:line="3188" pos:column="9">MSODEBUGMETHOD</name>

	<comment type="line" pos:line="3190" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="3191" pos:column="9">// IMsoGSV methods.</comment>


	<comment type="line" pos:line="3194" pos:column="9">// GetGsv() - Find the specified value.</comment>

	<name pos:line="3196" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3196" pos:column="19">GetGsv</name>) <parameter_list pos:line="3196" pos:column="27">(<param><decl><type><name pos:line="3196" pos:column="28">THIS_</name> <name pos:line="3196" pos:column="34">ULONG</name></type> <name pos:line="3196" pos:column="40">gsv</name></decl></param>, <param><decl><type><name pos:line="3196" pos:column="45">void</name> <type:modifier pos:line="3196" pos:column="50">*</type:modifier></type><name pos:line="3196" pos:column="51">pv</name></decl></param>)</parameter_list> <name pos:line="3196" pos:column="55">PURE</name>;</function_decl>

	<comment type="line" pos:line="3198" pos:column="9">// SetGsv() - Set the specified value.</comment>

	<function_decl><type><name pos:line="3200" pos:column="9">MSOMETHOD</name></type>(<name pos:line="3200" pos:column="19">SetGsv</name>) <parameter_list pos:line="3200" pos:column="27">(<param><decl><type><name pos:line="3200" pos:column="28">THIS_</name> <name pos:line="3200" pos:column="34">ULONG</name></type> <name pos:line="3200" pos:column="40">gsv</name></decl></param>, <param><decl><type><name pos:line="3200" pos:column="45">void</name> <type:modifier pos:line="3200" pos:column="50">*</type:modifier></type><name pos:line="3200" pos:column="51">pv</name></decl></param>)</parameter_list> <name pos:line="3200" pos:column="55">PURE</name>;</function_decl>
}</block><empty_stmt pos:line="3201" pos:column="2">;</empty_stmt>



<cpp:ifndef pos:line="3205" pos:column="1">#<cpp:directive pos:line="3205" pos:column="2">ifndef</cpp:directive> <name pos:line="3205" pos:column="9">__cplusplus</name></cpp:ifndef>

<comment type="line" format="doxygen" pos:line="3207" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3208" pos:column="1">// IMsoFindFile</comment>

<comment type="line" pos:line="3210" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3211" pos:column="1">// IUnknown methods.</comment>
<cpp:define pos:line="3212" pos:column="1">#<cpp:directive pos:line="3212" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3212" pos:column="9">IMsoFindFile_QueryInterface</name><parameter_list pos:line="3212" pos:column="36">(<param><type><name pos:line="3212" pos:column="37">This</name></type></param>, <param><type><name pos:line="3212" pos:column="43">refiid</name></type></param>, <param><type><name pos:line="3212" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3213" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3215" pos:column="1">#<cpp:directive pos:line="3215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3215" pos:column="9">IMsoFindFile_AddRef</name><parameter_list pos:line="3215" pos:column="28">(<param><type><name pos:line="3215" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3216" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3218" pos:column="1">#<cpp:directive pos:line="3218" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3218" pos:column="9">IMsoFindFile_Release</name><parameter_list pos:line="3218" pos:column="29">(<param><type><name pos:line="3218" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3219" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3221" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3222" pos:column="1">// Dialog behavior flags and settings.</comment>

<cpp:define pos:line="3224" pos:column="1">#<cpp:directive pos:line="3224" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3224" pos:column="9">IMsoFindFile_FSaveAs</name><parameter_list pos:line="3224" pos:column="29">(<param><type><name pos:line="3224" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3225" pos:column="17">(This)-&gt;lpVtbl-&gt;FSaveAs(This)</cpp:value></cpp:define>

<cpp:define pos:line="3227" pos:column="1">#<cpp:directive pos:line="3227" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3227" pos:column="9">IMsoFindFile_SetFSaveAs</name><parameter_list pos:line="3227" pos:column="32">(<param><type><name pos:line="3227" pos:column="33">This</name></type></param>, <param><type><name pos:line="3227" pos:column="39">fSaveAs</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3228" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFSaveAs(This, fSaveAs)</cpp:value></cpp:define>

<cpp:define pos:line="3230" pos:column="1">#<cpp:directive pos:line="3230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3230" pos:column="9">IMsoFindFile_FSearchEnabled</name><parameter_list pos:line="3230" pos:column="36">(<param><type><name pos:line="3230" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3231" pos:column="17">(This)-&gt;lpVtbl-&gt;FSearchEnabled(This)</cpp:value></cpp:define>

<cpp:define pos:line="3233" pos:column="1">#<cpp:directive pos:line="3233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3233" pos:column="9">IMsoFindFile_EnableSearch</name><parameter_list pos:line="3233" pos:column="34">(<param><type><name pos:line="3233" pos:column="35">This</name></type></param>, <param><type><name pos:line="3233" pos:column="41">fSearchEnabled</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3234" pos:column="17">(This)-&gt;lpVtbl-&gt;EnableSearch(This, fSearchEnabled)</cpp:value></cpp:define>

<cpp:define pos:line="3236" pos:column="1">#<cpp:directive pos:line="3236" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3236" pos:column="9">IMsoFindFile_FAdvSearchEnabled</name><parameter_list pos:line="3236" pos:column="39">(<param><type><name pos:line="3236" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3237" pos:column="17">(This)-&gt;lpVtbl-&gt;FAdvSearchEnabled(This)</cpp:value></cpp:define>

<cpp:define pos:line="3239" pos:column="1">#<cpp:directive pos:line="3239" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3239" pos:column="9">IMsoFindFile_EnableAdvSearch</name><parameter_list pos:line="3239" pos:column="37">(<param><type><name pos:line="3239" pos:column="38">This</name></type></param>, <param><type><name pos:line="3239" pos:column="44">fAdvSearchEnabled</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3240" pos:column="17">(This)-&gt;lpVtbll-&gt;EnableAdvSearch(This, fAdvSearchEnabled)</cpp:value></cpp:define>

<cpp:define pos:line="3242" pos:column="1">#<cpp:directive pos:line="3242" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3242" pos:column="9">IMsoFindFile_FPreviewEnabled</name><parameter_list pos:line="3242" pos:column="37">(<param><type><name pos:line="3242" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3243" pos:column="17">(This)-&gt;lpVtbl-&gt;FPreviewEnabled(This)</cpp:value></cpp:define>

<cpp:define pos:line="3245" pos:column="1">#<cpp:directive pos:line="3245" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3245" pos:column="9">IMsoFindFile_EnablePreview</name><parameter_list pos:line="3245" pos:column="35">(<param><type><name pos:line="3245" pos:column="36">This</name></type></param>, <param><type><name pos:line="3245" pos:column="42">fEnablePreview</name></type></param>, <param><type><name pos:line="3245" pos:column="58">pvInterface</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3246" pos:column="17">(This)-&gt;lpVtbl-&gt;EnablePreview(This, fEnablePreview,  pvInterface)</cpp:value></cpp:define>

<cpp:define pos:line="3248" pos:column="1">#<cpp:directive pos:line="3248" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3248" pos:column="9">IMsoFindFile_FDirPicker</name><parameter_list pos:line="3248" pos:column="32">(<param><type><name pos:line="3248" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3249" pos:column="17">(This)-&gt;lpVtbl-&gt;FDirPicker(This)</cpp:value></cpp:define>

<cpp:define pos:line="3251" pos:column="1">#<cpp:directive pos:line="3251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3251" pos:column="9">IMsoFindFile_SetFDirPicker</name><parameter_list pos:line="3251" pos:column="35">(<param><type><name pos:line="3251" pos:column="36">This</name></type></param>, <param><type><name pos:line="3251" pos:column="42">fDirPicker</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3252" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFDirPicker(This, fDirPicker)</cpp:value></cpp:define>

<cpp:define pos:line="3254" pos:column="1">#<cpp:directive pos:line="3254" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3254" pos:column="9">IMsoFindFile_FFileDirPicker</name><parameter_list pos:line="3254" pos:column="36">(<param><type><name pos:line="3254" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3255" pos:column="17">(This)-&gt;lpVtbl-&gt;FFileDirPicker(This)</cpp:value></cpp:define>

<cpp:define pos:line="3257" pos:column="1">#<cpp:directive pos:line="3257" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3257" pos:column="9">IMsoFindFile_SetFFileDirPicker</name><parameter_list pos:line="3257" pos:column="39">(<param><type><name pos:line="3257" pos:column="40">This</name></type></param>, <param><type><name pos:line="3257" pos:column="46">fFileDirPicker</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3258" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFFileDirPicker(This, fFileDirPicker)</cpp:value></cpp:define>

<cpp:define pos:line="3260" pos:column="1">#<cpp:directive pos:line="3260" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3260" pos:column="9">IMsoFindFile_FMultiSelect</name><parameter_list pos:line="3260" pos:column="34">(<param><type><name pos:line="3260" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3261" pos:column="17">(This)-&gt;lpVtbl-&gt;FMultiSelect(This)</cpp:value></cpp:define>

<cpp:define pos:line="3263" pos:column="1">#<cpp:directive pos:line="3263" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3263" pos:column="9">IMsoFindFile_SetFMultiSelect</name><parameter_list pos:line="3263" pos:column="37">(<param><type><name pos:line="3263" pos:column="38">This</name></type></param>, <param><type><name pos:line="3263" pos:column="44">fMultiSelect</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3264" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFMultiSelect(This, fMultiSelect)</cpp:value></cpp:define>

<cpp:define pos:line="3266" pos:column="1">#<cpp:directive pos:line="3266" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3266" pos:column="9">IMsoFindFile_FChangeDir</name><parameter_list pos:line="3266" pos:column="32">(<param><type><name pos:line="3266" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3267" pos:column="17">(This)-&gt;lpVtbl-&gt;FChangeDir(This)</cpp:value></cpp:define>

<cpp:define pos:line="3269" pos:column="1">#<cpp:directive pos:line="3269" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3269" pos:column="9">IMsoFindFile_SetFChangeDir</name><parameter_list pos:line="3269" pos:column="35">(<param><type><name pos:line="3269" pos:column="36">This</name></type></param>, <param><type><name pos:line="3269" pos:column="42">fChangeDir</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3270" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFChangeDir(This, fChangeDir)</cpp:value></cpp:define>

<cpp:define pos:line="3272" pos:column="1">#<cpp:directive pos:line="3272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3272" pos:column="9">IMsoFindFile_GetFreezeDir</name><parameter_list pos:line="3272" pos:column="34">(<param><type><name pos:line="3272" pos:column="35">This</name></type></param>, <param><type><name pos:line="3272" pos:column="41">szDir</name></type></param>, <param><type><name pos:line="3272" pos:column="48">cb</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3273" pos:column="17">(This)-&gt;lpVtbl-&gt;GetFreezeDir(This, szDir, cb)</cpp:value></cpp:define>

<cpp:define pos:line="3275" pos:column="1">#<cpp:directive pos:line="3275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3275" pos:column="9">IMsoFindFile_SetFreezeDir</name><parameter_list pos:line="3275" pos:column="34">(<param><type><name pos:line="3275" pos:column="35">This</name></type></param>, <param><type><name pos:line="3275" pos:column="41">szDir</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3276" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFreezeDir(This, szDir)</cpp:value></cpp:define>

<cpp:define pos:line="3278" pos:column="1">#<cpp:directive pos:line="3278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3278" pos:column="9">IMsoFindFile_FConfirmReplace</name><parameter_list pos:line="3278" pos:column="37">(<param><type><name pos:line="3278" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
		<cpp:value pos:line="3279" pos:column="17">(This)-&gt;lpVtbl-&gt;FConfirmReplace(This)</cpp:value></cpp:define>

<cpp:define pos:line="3281" pos:column="1">#<cpp:directive pos:line="3281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3281" pos:column="9">IMsoFindFile_SetShortFileName</name><parameter_list pos:line="3281" pos:column="38">(<param><type><name pos:line="3281" pos:column="39">This</name></type></param>, <param><type><name pos:line="3281" pos:column="45">fSet</name></type></param>)</parameter_list></cpp:macro>	\
		<cpp:value pos:line="3282" pos:column="17">(This)-&gt;lpVtbl-&gt;SetShortFileName(This, fSet)</cpp:value></cpp:define>

<cpp:define pos:line="3284" pos:column="1">#<cpp:directive pos:line="3284" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3284" pos:column="9">IMsoFindFile_SetFConfirmReplace</name><parameter_list pos:line="3284" pos:column="40">(<param><type><name pos:line="3284" pos:column="41">This</name></type></param>, <param><type><name pos:line="3284" pos:column="47">fConfirm</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3285" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFConfirmReplace(This, fConfirm)</cpp:value></cpp:define>

<cpp:define pos:line="3287" pos:column="1">#<cpp:directive pos:line="3287" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3287" pos:column="9">IMsoFindFile_GetDefaultFileName</name><parameter_list pos:line="3287" pos:column="40">(<param><type><name pos:line="3287" pos:column="41">This</name></type></param>, <param><type><name pos:line="3287" pos:column="47">szFile</name></type></param>, <param><type><name pos:line="3287" pos:column="55">cb</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3288" pos:column="17">(This)-&gt;lpVtbl-&gt;GetDefaultFileName(This, szFile, cb)</cpp:value></cpp:define>

<cpp:define pos:line="3290" pos:column="1">#<cpp:directive pos:line="3290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3290" pos:column="9">IMsoFindFile_SetDefaultFileName</name><parameter_list pos:line="3290" pos:column="40">(<param><type><name pos:line="3290" pos:column="41">This</name></type></param>, <param><type><name pos:line="3290" pos:column="47">szFile</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3291" pos:column="17">(This)-&gt;lpVtbl-&gt;SetDefaultFileName(This, szFile)</cpp:value></cpp:define>

<cpp:define pos:line="3293" pos:column="1">#<cpp:directive pos:line="3293" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3293" pos:column="9">IMsoFindFile_FKeepSelectedType</name><parameter_list pos:line="3293" pos:column="39">(<param><type><name pos:line="3293" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3294" pos:column="17">(This)-&gt;lpVtbl-&gt;FKeepSelectedType(This)</cpp:value></cpp:define>

<cpp:define pos:line="3296" pos:column="1">#<cpp:directive pos:line="3296" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3296" pos:column="9">IMsoFindFile_SetFKeepSelectedType</name><parameter_list pos:line="3296" pos:column="42">(<param><type><name pos:line="3296" pos:column="43">This</name></type></param>, <param><type><name pos:line="3296" pos:column="49">fKeep</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3297" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFKeepSelectedType(This, fKeep)</cpp:value></cpp:define>

<cpp:define pos:line="3299" pos:column="1">#<cpp:directive pos:line="3299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3299" pos:column="9">IMsoFindFile_FSysDirPicker</name><parameter_list pos:line="3299" pos:column="35">(<param><type><name pos:line="3299" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3300" pos:column="17">(This)-&gt;lpVtbl-&gt;FSysDirPicker(This)</cpp:value></cpp:define>

<cpp:define pos:line="3302" pos:column="1">#<cpp:directive pos:line="3302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3302" pos:column="9">IMsoFindFile_SetFSysDirPicker</name><parameter_list pos:line="3302" pos:column="38">(<param><type><name pos:line="3302" pos:column="39">This</name></type></param>, <param><type><name pos:line="3302" pos:column="45">fSysDirPicker</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3303" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFSysDirPicker(This, fSysDirPicker)</cpp:value></cpp:define>

<cpp:define pos:line="3305" pos:column="1">#<cpp:directive pos:line="3305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3305" pos:column="9">IMsoFindFile_EnableOpenInNativeApp</name><parameter_list pos:line="3305" pos:column="43">(<param><type><name pos:line="3305" pos:column="44">This</name></type></param>, <param><type><name pos:line="3305" pos:column="50">fEnable</name></type></param>, <param><type><name pos:line="3305" pos:column="59">fOpensUnknown</name></type></param>, <param><type><name pos:line="3305" pos:column="74">appidCurrentApp</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3306" pos:column="17">(This)-&gt;lpVtbl-&gt;EnableOpenInNativeApp(This, fEnable, fOpensUnknown, appidCurrentApp)</cpp:value></cpp:define>

<comment type="line" pos:line="3308" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3309" pos:column="1">// Cosmetic dialog customization.</comment>

<cpp:define pos:line="3311" pos:column="1">#<cpp:directive pos:line="3311" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3311" pos:column="9">IMsoFindFile_GetAppName</name><parameter_list pos:line="3311" pos:column="32">(<param><type><name pos:line="3311" pos:column="33">This</name></type></param>, <param><type><name pos:line="3311" pos:column="39">szAppName</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3312" pos:column="17">(This)-&gt;lpVtbl-&gt;GetAppName(This, szAppName)</cpp:value></cpp:define>

<cpp:define pos:line="3314" pos:column="1">#<cpp:directive pos:line="3314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3314" pos:column="9">IMsoFindFile_SetAppName</name><parameter_list pos:line="3314" pos:column="32">(<param><type><name pos:line="3314" pos:column="33">This</name></type></param>, <param><type><name pos:line="3314" pos:column="39">szAppName</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3315" pos:column="17">(This)-&gt;lpVtbl-&gt;SetAppName(This, szAppName)</cpp:value></cpp:define>

<cpp:define pos:line="3317" pos:column="1">#<cpp:directive pos:line="3317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3317" pos:column="9">IMsoFindFile_GetDlgTitle</name><parameter_list pos:line="3317" pos:column="33">(<param><type><name pos:line="3317" pos:column="34">This</name></type></param>, <param><type><name pos:line="3317" pos:column="40">szTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3318" pos:column="17">(This)-&gt;lpVtbl-&gt;GetDlgTitle(This, szTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3320" pos:column="1">#<cpp:directive pos:line="3320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3320" pos:column="9">IMsoFindFile_SetDlgTitle</name><parameter_list pos:line="3320" pos:column="33">(<param><type><name pos:line="3320" pos:column="34">This</name></type></param>, <param><type><name pos:line="3320" pos:column="40">szTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3321" pos:column="17">(This)-&gt;lpVtbl-&gt;SetDlgTitle(This, szTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3323" pos:column="1">#<cpp:directive pos:line="3323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3323" pos:column="9">IMsoFindFile_GetXY</name><parameter_list pos:line="3323" pos:column="27">(<param><type><name pos:line="3323" pos:column="28">This</name></type></param>, <param><type><name pos:line="3323" pos:column="34">px</name></type></param>, <param><type><name pos:line="3323" pos:column="38">py</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3324" pos:column="17">(This)-&gt;lpVtbl-&gt;GetXY(This, px, py)</cpp:value></cpp:define>

<cpp:define pos:line="3326" pos:column="1">#<cpp:directive pos:line="3326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3326" pos:column="9">IMsoFindFile_SetXY</name><parameter_list pos:line="3326" pos:column="27">(<param><type><name pos:line="3326" pos:column="28">This</name></type></param>, <param><type><name pos:line="3326" pos:column="34">x</name></type></param>, <param><type><name pos:line="3326" pos:column="37">y</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3327" pos:column="17">(This)-&gt;lpVtbl-&gt;SetXY(This, x, y)</cpp:value></cpp:define>

<cpp:define pos:line="3329" pos:column="1">#<cpp:directive pos:line="3329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3329" pos:column="9">IMsoFindFile_GetCenterXY</name><parameter_list pos:line="3329" pos:column="33">(<param><type><name pos:line="3329" pos:column="34">This</name></type></param>, <param><type><name pos:line="3329" pos:column="40">x</name></type></param>, <param><type><name pos:line="3329" pos:column="43">y</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3330" pos:column="17">(This)-&gt;lpVtbl-&gt;GetCenterXY(This, x, y)</cpp:value></cpp:define>

<cpp:define pos:line="3332" pos:column="1">#<cpp:directive pos:line="3332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3332" pos:column="9">IMsoFindFile_SetCenterXY</name><parameter_list pos:line="3332" pos:column="33">(<param><type><name pos:line="3332" pos:column="34">This</name></type></param>, <param><type><name pos:line="3332" pos:column="40">x</name></type></param>, <param><type><name pos:line="3332" pos:column="43">y</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3333" pos:column="17">(This)-&gt;lpVtbl-&gt;SetCenterXY(This, x, y)</cpp:value></cpp:define>

<cpp:define pos:line="3335" pos:column="1">#<cpp:directive pos:line="3335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3335" pos:column="9">IMsoFindFile_SetView</name><parameter_list pos:line="3335" pos:column="29">(<param><type><name pos:line="3335" pos:column="30">This</name></type></param>, <param><type><name pos:line="3335" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3336" pos:column="17">(This)-&gt;lpVtbl-&gt;SetView(This, v)</cpp:value></cpp:define>

<cpp:define pos:line="3338" pos:column="1">#<cpp:directive pos:line="3338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3338" pos:column="9">IMsoFindFile_GetView</name><parameter_list pos:line="3338" pos:column="29">(<param><type><name pos:line="3338" pos:column="30">This</name></type></param>, <param><type><name pos:line="3338" pos:column="36">pv</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3339" pos:column="17">(This)-&gt;lpVtbl-&gt;GetView(This, pv)</cpp:value></cpp:define>

<cpp:define pos:line="3341" pos:column="1">#<cpp:directive pos:line="3341" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3341" pos:column="9">IMsoFindFile_SetFShowGroups</name><parameter_list pos:line="3341" pos:column="36">(<param><type><name pos:line="3341" pos:column="37">This</name></type></param>, <param><type><name pos:line="3341" pos:column="43">f</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3342" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFShowGroups(This, f)</cpp:value></cpp:define>

<cpp:define pos:line="3344" pos:column="1">#<cpp:directive pos:line="3344" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3344" pos:column="9">IMsoFindFile_FShowGroups</name><parameter_list pos:line="3344" pos:column="33">(<param><type><name pos:line="3344" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3345" pos:column="17">(This)-&gt;lpVtbl-&gt;FShowGroups(This)</cpp:value></cpp:define>

<cpp:define pos:line="3347" pos:column="1">#<cpp:directive pos:line="3347" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3347" pos:column="9">IMsoFindFile_SetSort</name><parameter_list pos:line="3347" pos:column="29">(<param><type><name pos:line="3347" pos:column="30">This</name></type></param>, <param><type><name pos:line="3347" pos:column="36">sf</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3348" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSort(This, sf)</cpp:value></cpp:define>

<cpp:define pos:line="3350" pos:column="1">#<cpp:directive pos:line="3350" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3350" pos:column="9">IMsoFindFile_GetSort</name><parameter_list pos:line="3350" pos:column="29">(<param><type><name pos:line="3350" pos:column="30">This</name></type></param>, <param><type><name pos:line="3350" pos:column="36">psf</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3351" pos:column="17">(This)-&gt;lpVtbl-&gt;GetSort(This, psf)</cpp:value></cpp:define>

<cpp:define pos:line="3353" pos:column="1">#<cpp:directive pos:line="3353" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3353" pos:column="9">IMsoFindFile_ExecuteQuery</name><parameter_list pos:line="3353" pos:column="34">(<param><type><name pos:line="3353" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3354" pos:column="17">(This)-&gt;lpVtbl-&gt;ExecuteQuery(This)</cpp:value></cpp:define>

<comment type="block" pos:line="3356" pos:column="1">/* FMidEast */</comment>

<comment type="block" pos:line="3358" pos:column="1">/* FMidEast End */</comment>
<cpp:define pos:line="3359" pos:column="1">#<cpp:directive pos:line="3359" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3359" pos:column="9">IMsoFindFile_SetFPreserveQuotes</name><parameter_list pos:line="3359" pos:column="40">(<param><type><name pos:line="3359" pos:column="41">This</name></type></param>, <param><type><name pos:line="3359" pos:column="47">fPreserve</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3360" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFPreserveQuotes(This, fPreserve)</cpp:value></cpp:define>

<cpp:define pos:line="3362" pos:column="1">#<cpp:directive pos:line="3362" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3362" pos:column="9">IMsoFindFile_FPreserveQuotes</name><parameter_list pos:line="3362" pos:column="37">(<param><type><name pos:line="3362" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3363" pos:column="17">(This)-&gt;lpVtbl-&gt;FPreserveQuotes(This)</cpp:value></cpp:define>

<cpp:define pos:line="3365" pos:column="1">#<cpp:directive pos:line="3365" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3365" pos:column="9">IMsoFindFile_SetFOnlyFileSys</name><parameter_list pos:line="3365" pos:column="37">(<param><type><name pos:line="3365" pos:column="38">This</name></type></param>, <param><type><name pos:line="3365" pos:column="44">fOnlyFileSys</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3366" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFOnlyFileSys(This, fOnlyFileSys)</cpp:value></cpp:define>

<cpp:define pos:line="3368" pos:column="1">#<cpp:directive pos:line="3368" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3368" pos:column="9">IMsoFindFile_FOnlyFileSys</name><parameter_list pos:line="3368" pos:column="34">(<param><type><name pos:line="3368" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3369" pos:column="17">(This)-&gt;lpVtbl-&gt;FOnlyFileSys(This)</cpp:value></cpp:define>

<cpp:define pos:line="3371" pos:column="1">#<cpp:directive pos:line="3371" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3371" pos:column="9">IMsoFindFile_SetFResolveLinks</name><parameter_list pos:line="3371" pos:column="38">(<param><type><name pos:line="3371" pos:column="39">This</name></type></param>, <param><type><name pos:line="3371" pos:column="45">fResolveLinks</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3372" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFResolveLinks(This, fResolveLinks)</cpp:value></cpp:define>

<cpp:ifdef pos:line="3374" pos:column="1">#<cpp:directive pos:line="3374" pos:column="2">ifdef</cpp:directive>	<name pos:line="3374" pos:column="9">VSMSODEBUG</name></cpp:ifdef>
<cpp:define pos:line="3375" pos:column="1">#<cpp:directive pos:line="3375" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3375" pos:column="9">IMsoFindFile_SetFNoLoadIcon</name><parameter_list pos:line="3375" pos:column="36">(<param><type><name pos:line="3375" pos:column="37">This</name></type></param>, <param><type><name pos:line="3375" pos:column="43">fNoLoadIcon</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3376" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFNoLoadIcon(This, fNoLoadIcon)</cpp:value></cpp:define>
<cpp:endif pos:line="3377" pos:column="1">#<cpp:directive pos:line="3377" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="3377" pos:column="8">// VSMSODEBUG</comment>

<cpp:define pos:line="3379" pos:column="1">#<cpp:directive pos:line="3379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3379" pos:column="9">IMsoFindFile_SetHmsoinst</name><parameter_list pos:line="3379" pos:column="33">(<param><type><name pos:line="3379" pos:column="34">This</name></type></param>, <param><type><name pos:line="3379" pos:column="40">hmsoinst</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3380" pos:column="17">(This)-&gt;lpVtbl-&gt;SetHmsoinst(This, hmsoinst)</cpp:value></cpp:define>

<cpp:define pos:line="3382" pos:column="1">#<cpp:directive pos:line="3382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3382" pos:column="9">IMsoFindFile_GetQueryErrorMessage</name><parameter_list pos:line="3382" pos:column="42">(<param><type><name pos:line="3382" pos:column="43">This</name></type></param>, <param><type><name pos:line="3382" pos:column="49">wzMsg</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3383" pos:column="17">(This)-&gt;lpVtbl-&gt;GetQueryErrorMessage(This, wzMsg)</cpp:value></cpp:define>

<cpp:define pos:line="3385" pos:column="1">#<cpp:directive pos:line="3385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3385" pos:column="9">IMsoFindFile_GetTotalHitsAvailable</name><parameter_list pos:line="3385" pos:column="43">(<param><type><name pos:line="3385" pos:column="44">This</name></type></param>, <param><type><name pos:line="3385" pos:column="50">pchitTotal</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3386" pos:column="17">(This)-&gt;lpVtbl-&gt;GetTotalHitsAvailable(This, pchitTotal)</cpp:value></cpp:define>

<cpp:define pos:line="3388" pos:column="1">#<cpp:directive pos:line="3388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3388" pos:column="9">IMsoFindFile_SetConfirmReplaceEx</name><parameter_list pos:line="3388" pos:column="41">(<param><type><name pos:line="3388" pos:column="42">This</name></type></param>, <param><type><name pos:line="3388" pos:column="48">msocr</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3389" pos:column="17">(This)-&gt;lpVtbl-&gt;SetConfirmReplaceEx(This, msocr)</cpp:value></cpp:define>


<comment type="line" pos:line="3392" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3393" pos:column="1">// Save As Web Page control.</comment>

<cpp:define pos:line="3395" pos:column="1">#<cpp:directive pos:line="3395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3395" pos:column="9">IMsoFindFile_EnableSaveAsWebOptions</name><parameter_list pos:line="3395" pos:column="44">(<param><type><name pos:line="3395" pos:column="45">This</name></type></param>, <param><type><name pos:line="3395" pos:column="51">iHtmlTypeFamily</name></type></param>, <param><type><name pos:line="3395" pos:column="68">layoutStyle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3396" pos:column="17">(This)-&gt;lpVtbl-&gt;EnableSaveAsWebOptions(This, iHtmlTypeFamily, layoutStyle)</cpp:value></cpp:define>

<cpp:define pos:line="3398" pos:column="1">#<cpp:directive pos:line="3398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3398" pos:column="9">IMsoFindFile_DisableSaveAsWebOptions</name><parameter_list pos:line="3398" pos:column="45">(<param><type><name pos:line="3398" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3399" pos:column="17">(This)-&gt;lpVtbl-&gt;DisableSaveAsWebOptions(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3401" pos:column="1">//#define IMsoFindFile_GetIHtmlTypeFamily(This, piHtmlTypeFamily) \</comment>
<comment type="line" pos:line="3402" pos:column="1">//		(This)-&gt;lpVtbl-&gt;GetIHtmlTypeFamily(This, piHtmlTypeFamily)</comment>

<comment type="line" pos:line="3404" pos:column="1">//#define IMsoFindFile_GetLayoutStyle(This, playoutStyle) \</comment>
<comment type="line" pos:line="3405" pos:column="1">//		(This)-&gt;lpVtbl-&gt;GetLayoutStyle(This, playoutStyle)</comment>

<comment type="line" pos:line="3407" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3408" pos:column="1">// Dialog behavior control.</comment>

<cpp:define pos:line="3410" pos:column="1">#<cpp:directive pos:line="3410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3410" pos:column="9">IMsoFindFile_ShowDlg</name><parameter_list pos:line="3410" pos:column="29">(<param><type><name pos:line="3410" pos:column="30">This</name></type></param>, <param><type><name pos:line="3410" pos:column="36">picmd</name></type></param>, <param><type><name pos:line="3410" pos:column="43">hwnd</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3411" pos:column="17">(This)-&gt;lpVtbl-&gt;ShowDlg(This, picmd, hwnd)</cpp:value></cpp:define>

<cpp:define pos:line="3413" pos:column="1">#<cpp:directive pos:line="3413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3413" pos:column="9">IMsoFindFile_GetHwnd</name><parameter_list pos:line="3413" pos:column="29">(<param><type><name pos:line="3413" pos:column="30">This</name></type></param>, <param><type><name pos:line="3413" pos:column="36">hwnd</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3414" pos:column="17">(This)-&gt;lpVtbl-&gt;GetHwnd(This, hwnd)</cpp:value></cpp:define>

<comment type="line" pos:line="3416" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3417" pos:column="1">// Events.</comment>

<cpp:define pos:line="3419" pos:column="1">#<cpp:directive pos:line="3419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3419" pos:column="9">IMsoFindFile_RegisterPfnEvent</name><parameter_list pos:line="3419" pos:column="38">(<param><type><name pos:line="3419" pos:column="39">This</name></type></param>, <param><type><name pos:line="3419" pos:column="45">pfnEvent</name></type></param>, <param><type><name pos:line="3419" pos:column="55">wApp</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3420" pos:column="17">(This)-&gt;lpVtbl-&gt;RegisterPfnEvent(This, pfnEvent, wApp)</cpp:value></cpp:define>

<comment type="line" pos:line="3422" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3423" pos:column="1">// Short-cut methods.</comment>

<cpp:define pos:line="3425" pos:column="1">#<cpp:directive pos:line="3425" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3425" pos:column="9">IMsoFindFile_GetOpenTitle</name><parameter_list pos:line="3425" pos:column="34">(<param><type><name pos:line="3425" pos:column="35">This</name></type></param>, <param><type><name pos:line="3425" pos:column="41">szTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3426" pos:column="17">(This)-&gt;lpVtbl-&gt;GetOpenTitle(This, szTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3428" pos:column="1">#<cpp:directive pos:line="3428" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3428" pos:column="9">IMsoFindFile_SetOpenTitle</name><parameter_list pos:line="3428" pos:column="34">(<param><type><name pos:line="3428" pos:column="35">This</name></type></param>, <param><type><name pos:line="3428" pos:column="41">szTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3429" pos:column="17">(This)-&gt;lpVtbl-&gt;SetOpenTitle(This, szTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3431" pos:column="1">#<cpp:directive pos:line="3431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3431" pos:column="9">IMsoFindFile_GetIcntrlValueW</name><parameter_list pos:line="3431" pos:column="37">(<param><type><name pos:line="3431" pos:column="38">This</name></type></param>, <param><type><name pos:line="3431" pos:column="44">icntrl</name></type></param>, <param><type><name pos:line="3431" pos:column="52">pval</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3432" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIcntrlValueW(This, icntrl, pval)</cpp:value></cpp:define>

<cpp:define pos:line="3434" pos:column="1">#<cpp:directive pos:line="3434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3434" pos:column="9">IMsoFindFile_GetIcntrlValueSz</name><parameter_list pos:line="3434" pos:column="38">(<param><type><name pos:line="3434" pos:column="39">This</name></type></param>, <param><type><name pos:line="3434" pos:column="45">icntrl</name></type></param>, <param><type><name pos:line="3434" pos:column="53">szVal</name></type></param>, <param><type><name pos:line="3434" pos:column="60">cbVal</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3435" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIcntrlValueSz(This, icntrl, szVal, cbVal)</cpp:value></cpp:define>

<cpp:define pos:line="3437" pos:column="1">#<cpp:directive pos:line="3437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3437" pos:column="9">IMsoFindFile_SetIcntrlValueW</name><parameter_list pos:line="3437" pos:column="37">(<param><type><name pos:line="3437" pos:column="38">This</name></type></param>, <param><type><name pos:line="3437" pos:column="44">icntrl</name></type></param>, <param><type><name pos:line="3437" pos:column="52">val</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3438" pos:column="17">(This)-&gt;lpVtbl-&gt;SetIcntrlValueW(This, icntrl, val)</cpp:value></cpp:define>

<cpp:define pos:line="3440" pos:column="1">#<cpp:directive pos:line="3440" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3440" pos:column="9">IMsoFindFile_SetIcntrlValueSz</name><parameter_list pos:line="3440" pos:column="38">(<param><type><name pos:line="3440" pos:column="39">This</name></type></param>, <param><type><name pos:line="3440" pos:column="45">icntrl</name></type></param>, <param><type><name pos:line="3440" pos:column="53">szVal</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3441" pos:column="17">(This)-&gt;lpVtbl-&gt;SetIcntrlValueSz(This, icntrl, szVal)</cpp:value></cpp:define>

<cpp:define pos:line="3443" pos:column="1">#<cpp:directive pos:line="3443" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3443" pos:column="9">IMsoFindFile_FEnabledIcntrl</name><parameter_list pos:line="3443" pos:column="36">(<param><type><name pos:line="3443" pos:column="37">This</name></type></param>, <param><type><name pos:line="3443" pos:column="43">icntrl</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3444" pos:column="17">(This)-&gt;lpVtbl-&gt;FEnabledIcntrl(This, icntrl)</cpp:value></cpp:define>

<cpp:define pos:line="3446" pos:column="1">#<cpp:directive pos:line="3446" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3446" pos:column="9">IMsoFindFile_EnableIcntrl</name><parameter_list pos:line="3446" pos:column="34">(<param><type><name pos:line="3446" pos:column="35">This</name></type></param>, <param><type><name pos:line="3446" pos:column="41">icntrl</name></type></param>, <param><type><name pos:line="3446" pos:column="49">fEnable</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3447" pos:column="17">(This)-&gt;lpVtbl-&gt;EnableIcntrl(This, icntrl, fEnable)</cpp:value></cpp:define>

<cpp:define pos:line="3449" pos:column="1">#<cpp:directive pos:line="3449" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3449" pos:column="9">IMsoFindFile_SetFocusIcntrl</name><parameter_list pos:line="3449" pos:column="36">(<param><type><name pos:line="3449" pos:column="37">This</name></type></param>, <param><type><name pos:line="3449" pos:column="43">icntrl</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3450" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFocusIcntrl(This, icntrl)</cpp:value></cpp:define>

<comment type="line" pos:line="3452" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3453" pos:column="1">// Query specification short-cut methods.</comment>

<cpp:define pos:line="3455" pos:column="1">#<cpp:directive pos:line="3455" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3455" pos:column="9">IMsoFindFile_IszFileTypeGet</name><parameter_list pos:line="3455" pos:column="36">(<param><type><name pos:line="3455" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3456" pos:column="17">(This)-&gt;lpVtbl-&gt;IszFileTypeGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3458" pos:column="1">#<cpp:directive pos:line="3458" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3458" pos:column="9">IMsoFindFile_SetIszFileType</name><parameter_list pos:line="3458" pos:column="36">(<param><type><name pos:line="3458" pos:column="37">This</name></type></param>, <param><type><name pos:line="3458" pos:column="43">iszFileType</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3459" pos:column="17">(This)-&gt;lpVtbl-&gt;SetIszFileType(This, iszFileType)</cpp:value></cpp:define>

<cpp:define pos:line="3461" pos:column="1">#<cpp:directive pos:line="3461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3461" pos:column="9">IMsoFindFile_GetActiveIMsoSearch</name><parameter_list pos:line="3461" pos:column="41">(<param><type><name pos:line="3461" pos:column="42">This</name></type></param>, <param><type><name pos:line="3461" pos:column="48">ppsrch</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3462" pos:column="17">(This)-&gt;lpVtbl-&gt;GetActiveIMsoSearch(This, ppsrch)</cpp:value></cpp:define>

<cpp:define pos:line="3464" pos:column="1">#<cpp:directive pos:line="3464" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3464" pos:column="9">IMsoFindFile_SetSearchPath</name><parameter_list pos:line="3464" pos:column="35">(<param><type><name pos:line="3464" pos:column="36">This</name></type></param>, <param><type><name pos:line="3464" pos:column="42">szPath</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3465" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSearchPath(This, szPath)</cpp:value></cpp:define>

<cpp:define pos:line="3467" pos:column="1">#<cpp:directive pos:line="3467" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3467" pos:column="9">IMsoFindFile_SetSearchPathPidl</name><parameter_list pos:line="3467" pos:column="39">(<param><type><name pos:line="3467" pos:column="40">This</name></type></param>, <param><type><name pos:line="3467" pos:column="46">ppidl</name></type></param>, <param><type><name pos:line="3467" pos:column="53">cpidl</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3468" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSearchPathPidl(This, ppidl, cpidl)</cpp:value></cpp:define>

<comment type="line" pos:line="3470" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3471" pos:column="1">// Collection methods.</comment>
<cpp:define pos:line="3472" pos:column="1">#<cpp:directive pos:line="3472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3472" pos:column="9">IMsoFindFile_GetIMsoFileTypeList</name><parameter_list pos:line="3472" pos:column="41">(<param><type><name pos:line="3472" pos:column="42">This</name></type></param>, <param><type><name pos:line="3472" pos:column="48">ppfiltyplist</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3473" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoFileTypeList(This, ppfiltyplist)</cpp:value></cpp:define>

<cpp:define pos:line="3475" pos:column="1">#<cpp:directive pos:line="3475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3475" pos:column="9">IMsoFindFile_GetIMsoControlList</name><parameter_list pos:line="3475" pos:column="40">(<param><type><name pos:line="3475" pos:column="41">This</name></type></param>, <param><type><name pos:line="3475" pos:column="47">ppcstitmlist</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3476" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoControlList(This, ppcstitmlist)</cpp:value></cpp:define>

<cpp:define pos:line="3478" pos:column="1">#<cpp:directive pos:line="3478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3478" pos:column="9">IMsoFindFile_GetIMsoCommandList</name><parameter_list pos:line="3478" pos:column="40">(<param><type><name pos:line="3478" pos:column="41">This</name></type></param>, <param><type><name pos:line="3478" pos:column="47">ppcmdlist</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3479" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoCommandList(This, ppcmdlist)</cpp:value></cpp:define>

<comment type="line" pos:line="3481" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3482" pos:column="1">// Memory check debug methods</comment>
<cpp:define pos:line="3483" pos:column="1">#<cpp:directive pos:line="3483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3483" pos:column="9">IMsoFindFile_RegisterPfnMemCheck</name><parameter_list pos:line="3483" pos:column="41">(<param><type><name pos:line="3483" pos:column="42">This</name></type></param>, <param><type><name pos:line="3483" pos:column="48">pfnMemCheck</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3484" pos:column="17">(This)-&gt;lpVtbl-&gt;RegisterPfnMemCheck(This, pfnMemCheck)</cpp:value></cpp:define>


<cpp:define pos:line="3487" pos:column="1">#<cpp:directive pos:line="3487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3487" pos:column="9">IMsoFindFile_GetICodePageList</name><parameter_list pos:line="3487" pos:column="38">(<param><type><name pos:line="3487" pos:column="39">This</name></type></param>, <param><type><name pos:line="3487" pos:column="45">ppcodepagelist</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3488" pos:column="17">(This)-&gt;lpVtbl-&gt;GetICodePageList(This, ppcodepagelist)</cpp:value></cpp:define>

<comment type="block" pos:line="3490" pos:column="1">/* FMidEast */</comment>

<comment type="block" pos:line="3492" pos:column="1">/* FMidEast End */</comment>

<cpp:define pos:line="3494" pos:column="1">#<cpp:directive pos:line="3494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3494" pos:column="9">IMsoFindFile_SetIszFileTypePolicyDefault</name><parameter_list pos:line="3494" pos:column="49">(<param><type><name pos:line="3494" pos:column="50">This</name></type></param>, <param><type><name pos:line="3494" pos:column="56">iszFileType</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3495" pos:column="17">(This)-&gt;lpVtbl-&gt;SetIszFileTypePolicyDefault(This, iszFileType)</cpp:value></cpp:define>

<cpp:define pos:line="3497" pos:column="1">#<cpp:directive pos:line="3497" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3497" pos:column="9">IMsoFindFile_GetIszFileTypePolicyDefault</name><parameter_list pos:line="3497" pos:column="49">(<param><type><name pos:line="3497" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3498" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIszFileTypePolicyDefault(This)</cpp:value></cpp:define>

<cpp:define pos:line="3500" pos:column="1">#<cpp:directive pos:line="3500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3500" pos:column="9">IMsoFindFile_ActivateDefaultSaveURLForTemplates</name><parameter_list pos:line="3500" pos:column="56">(<param><type><name pos:line="3500" pos:column="57">This</name></type></param>, <param><type><name pos:line="3500" pos:column="63">iwz</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3501" pos:column="17">(This)-&gt;lpVtbl-&gt;ActivateDefaultSaveURLForTemplates(This, iwz)</cpp:value></cpp:define>

<comment type="block" pos:line="3503" pos:column="1">/* MetaData */</comment>
<cpp:define pos:line="3504" pos:column="1">#<cpp:directive pos:line="3504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3504" pos:column="9">IMsoFindFile_SetPfnAppReadWriteProp</name><parameter_list pos:line="3504" pos:column="44">(<param><type><name pos:line="3504" pos:column="45">This</name></type></param>, <param><type><name pos:line="3504" pos:column="51">pfn</name></type></param>, <param><type><name pos:line="3504" pos:column="56">dwPrvData</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3505" pos:column="17">(This)-&gt;lpVtbl-&gt;SetPfnAppReadWriteProp(This, pfn, dwPrvData)</cpp:value></cpp:define>

<cpp:define pos:line="3507" pos:column="1">#<cpp:directive pos:line="3507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3507" pos:column="9">IMsoFindFile_FNoFormDialog</name><parameter_list pos:line="3507" pos:column="35">(<param><type><name pos:line="3507" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
		<cpp:value pos:line="3508" pos:column="17">(This)-&gt;lpVtbl-&gt;FNoFormDialog(This)</cpp:value></cpp:define>

<cpp:define pos:line="3510" pos:column="1">#<cpp:directive pos:line="3510" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3510" pos:column="9">IMsoFindFile_SetFNoFormDialog</name><parameter_list pos:line="3510" pos:column="38">(<param><type><name pos:line="3510" pos:column="39">This</name></type></param>, <param><type><name pos:line="3510" pos:column="45">fNoForm</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3511" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFNoFormDialog(This, fNoForm)</cpp:value></cpp:define>

<cpp:define pos:line="3513" pos:column="1">#<cpp:directive pos:line="3513" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3513" pos:column="9">IMsoFindFile_SetFNoWOW</name><parameter_list pos:line="3513" pos:column="31">(<param><type><name pos:line="3513" pos:column="32">This</name></type></param>, <param><type><name pos:line="3513" pos:column="38">fNoWOW</name></type></param>)</parameter_list></cpp:macro> \
      <cpp:value pos:line="3514" pos:column="7">(This)-&gt;lpVtbl-&gt;SetFNoWOW(This, fNoWOW)</cpp:value></cpp:define>

<cpp:define pos:line="3516" pos:column="1">#<cpp:directive pos:line="3516" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3516" pos:column="9">IMsoFindFile_FNoWow</name><parameter_list pos:line="3516" pos:column="28">(<param><type><name pos:line="3516" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro> \
      <cpp:value pos:line="3517" pos:column="7">(This)-&gt;lpVtbl-&gt;FNoWow(This)</cpp:value></cpp:define>

<cpp:define pos:line="3519" pos:column="1">#<cpp:directive pos:line="3519" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3519" pos:column="9">IMsoFindFile_SetHaveFileNewDefaultPath</name><parameter_list pos:line="3519" pos:column="47">(<param><type><name pos:line="3519" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3520" pos:column="17">(This)-&gt;lpVtbl-&gt;SetHaveFileNewDefaultPath(This)</cpp:value></cpp:define>

<cpp:define pos:line="3522" pos:column="1">#<cpp:directive pos:line="3522" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3522" pos:column="9">IMsoFindFile_FOtherAppFiles</name><parameter_list pos:line="3522" pos:column="36">(<param><type><name pos:line="3522" pos:column="37">This</name></type></param>, <param><type><name pos:line="3522" pos:column="43">pstr</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3523" pos:column="17">(This)-&gt;lpVtbl-&gt;FOtherAppFiles(This, pstr)</cpp:value></cpp:define>

<cpp:define pos:line="3525" pos:column="1">#<cpp:directive pos:line="3525" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3525" pos:column="9">IMsoFindFile_SetFWordMail</name><parameter_list pos:line="3525" pos:column="34">(<param><type><name pos:line="3525" pos:column="35">This</name></type></param>, <param><type><name pos:line="3525" pos:column="41">fWordMail</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3526" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFWordMail(This, fWordMail)</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="3528" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3529" pos:column="1">// IMsoSearch</comment>

<comment type="line" pos:line="3531" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3532" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3534" pos:column="1">#<cpp:directive pos:line="3534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3534" pos:column="9">IMsoSearch_QueryInterface</name><parameter_list pos:line="3534" pos:column="34">(<param><type><name pos:line="3534" pos:column="35">This</name></type></param>, <param><type><name pos:line="3534" pos:column="41">refiid</name></type></param>, <param><type><name pos:line="3534" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3535" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3537" pos:column="1">#<cpp:directive pos:line="3537" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3537" pos:column="9">IMsoSearch_AddRef</name><parameter_list pos:line="3537" pos:column="26">(<param><type><name pos:line="3537" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3538" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3540" pos:column="1">#<cpp:directive pos:line="3540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3540" pos:column="9">IMsoSearch_Release</name><parameter_list pos:line="3540" pos:column="27">(<param><type><name pos:line="3540" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3541" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3543" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3544" pos:column="1">// IMsoSearch methods.</comment>

<cpp:define pos:line="3546" pos:column="1">#<cpp:directive pos:line="3546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3546" pos:column="9">IMsoSearch_GetSzFileName</name><parameter_list pos:line="3546" pos:column="33">(<param><type><name pos:line="3546" pos:column="34">This</name></type></param>, <param><type><name pos:line="3546" pos:column="40">szFileName</name></type></param>, <param><type><name pos:line="3546" pos:column="52">cbFileName</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3547" pos:column="17">(This)-&gt;lpVtbl-&gt;GetSzFileName(This, szFileName, cbFileName)</cpp:value></cpp:define>

<cpp:define pos:line="3549" pos:column="1">#<cpp:directive pos:line="3549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3549" pos:column="9">IMsoSearch_SetSzFileName</name><parameter_list pos:line="3549" pos:column="33">(<param><type><name pos:line="3549" pos:column="34">This</name></type></param>, <param><type><name pos:line="3549" pos:column="40">szFileName</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3550" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSzFileName(This, szFileName)</cpp:value></cpp:define>

<cpp:define pos:line="3552" pos:column="1">#<cpp:directive pos:line="3552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3552" pos:column="9">IMsoSearch_Clear</name><parameter_list pos:line="3552" pos:column="25">(<param><type><name pos:line="3552" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
		<cpp:value pos:line="3553" pos:column="17">(This)-&gt;lpVtbl-&gt;Clear(This)</cpp:value></cpp:define>

<cpp:define pos:line="3555" pos:column="1">#<cpp:directive pos:line="3555" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3555" pos:column="9">IMsoSearch_FGetPropSzValMacro</name><parameter_list pos:line="3555" pos:column="38">(<param><type><name pos:line="3555" pos:column="39">This</name></type></param>, <param><type><name pos:line="3555" pos:column="45">stdprop</name></type></param>, <param><type><name pos:line="3555" pos:column="54">szPropVal</name></type></param>, <param><type><name pos:line="3555" pos:column="65">cb</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3556" pos:column="17">(This)-&gt;lpVtbl-&gt;FGetPropSzValMacro(This, stdprop, szPropVal, cb)</cpp:value></cpp:define>

<cpp:define pos:line="3558" pos:column="1">#<cpp:directive pos:line="3558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3558" pos:column="9">IMsoSearch_SetPropSzValMacro</name><parameter_list pos:line="3558" pos:column="37">(<param><type><name pos:line="3558" pos:column="38">This</name></type></param>, <param><type><name pos:line="3558" pos:column="44">stdprop</name></type></param>, <param><type><name pos:line="3558" pos:column="53">szPropVal</name></type></param>, <param><type><name pos:line="3558" pos:column="64">wzErrMsg</name></type></param>, <param><type><name pos:line="3558" pos:column="74">cchErrMsg</name></type></param>, <param><type><name pos:line="3558" pos:column="85">pichFirst</name></type></param>, <param><type><name pos:line="3558" pos:column="96">pichLim</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3559" pos:column="17">(This)-&gt;lpVtbl-&gt;SetPropSzValMacro(This, stdprop, szPropVal, wzErrMsg, cchErrMsg, pichFirst, pichLim)</cpp:value></cpp:define>

<cpp:define pos:line="3561" pos:column="1">#<cpp:directive pos:line="3561" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3561" pos:column="9">IMsoSearch_GetIMsoFoundFileList</name><parameter_list pos:line="3561" pos:column="40">(<param><type><name pos:line="3561" pos:column="41">This</name></type></param>, <param><type><name pos:line="3561" pos:column="47">ppffilelist</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3562" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoFoundFileList(This, ppffilelist)</cpp:value></cpp:define>

<cpp:define pos:line="3564" pos:column="1">#<cpp:directive pos:line="3564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3564" pos:column="9">IMsoSearch_GetIMsoSelectedFileList</name><parameter_list pos:line="3564" pos:column="43">(<param><type><name pos:line="3564" pos:column="44">This</name></type></param>, <param><type><name pos:line="3564" pos:column="50">ppselfilelist</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3565" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoSelectedFileList(This, ppselfilelist)</cpp:value></cpp:define>

<cpp:define pos:line="3567" pos:column="1">#<cpp:directive pos:line="3567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3567" pos:column="9">IMsoSearch_SetSearchPath</name><parameter_list pos:line="3567" pos:column="33">(<param><type><name pos:line="3567" pos:column="34">This</name></type></param>, <param><type><name pos:line="3567" pos:column="40">szPath</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3568" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSearchPath(This, szPath)</cpp:value></cpp:define>

<cpp:define pos:line="3570" pos:column="1">#<cpp:directive pos:line="3570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3570" pos:column="9">IMsoSearch_GetSearchPath</name><parameter_list pos:line="3570" pos:column="33">(<param><type><name pos:line="3570" pos:column="34">This</name></type></param>, <param><type><name pos:line="3570" pos:column="40">szPath</name></type></param>, <param><type><name pos:line="3570" pos:column="48">cbMax</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3571" pos:column="17">(This)-&gt;lpVtbl-&gt;GetSearchPath(This, szPath, cbMax)</cpp:value></cpp:define>

<cpp:define pos:line="3573" pos:column="1">#<cpp:directive pos:line="3573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3573" pos:column="9">IMsoSearch_GetName</name><parameter_list pos:line="3573" pos:column="27">(<param><type><name pos:line="3573" pos:column="28">This</name></type></param>, <param><type><name pos:line="3573" pos:column="34">szPath</name></type></param>, <param><type><name pos:line="3573" pos:column="42">cbMax</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3574" pos:column="17">(This)-&gt;lpVtbl-&gt;GetName(This, szPath, cbMax)</cpp:value></cpp:define>

<cpp:define pos:line="3576" pos:column="1">#<cpp:directive pos:line="3576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3576" pos:column="9">IMsoSearch_SaveAs</name><parameter_list pos:line="3576" pos:column="26">(<param><type><name pos:line="3576" pos:column="27">This</name></type></param>, <param><type><name pos:line="3576" pos:column="33">szPath</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3577" pos:column="17">(This)-&gt;lpVtbl-&gt;SaveAs(This, szPath)</cpp:value></cpp:define>

<cpp:define pos:line="3579" pos:column="1">#<cpp:directive pos:line="3579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3579" pos:column="9">IMsoSearch_Load</name><parameter_list pos:line="3579" pos:column="24">(<param><type><name pos:line="3579" pos:column="25">This</name></type></param>, <param><type><name pos:line="3579" pos:column="31">szPath</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3580" pos:column="17">(This)-&gt;lpVtbl-&gt;Load(This, szPath)</cpp:value></cpp:define>

<cpp:define pos:line="3582" pos:column="1">#<cpp:directive pos:line="3582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3582" pos:column="9">IMsoSearch_Delete</name><parameter_list pos:line="3582" pos:column="26">(<param><type><name pos:line="3582" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3583" pos:column="17">(This)-&gt;lpVtbl-&gt;Delete(This)</cpp:value></cpp:define>

<cpp:define pos:line="3585" pos:column="1">#<cpp:directive pos:line="3585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3585" pos:column="9">IMsoSearch_SetSearchConnector</name><parameter_list pos:line="3585" pos:column="38">(<param><type><name pos:line="3585" pos:column="39">This</name></type></param>, <param><type><name pos:line="3585" pos:column="45">msodmconn</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3586" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSearchConnector(This, msodmconn)</cpp:value></cpp:define>

<cpp:define pos:line="3588" pos:column="1">#<cpp:directive pos:line="3588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3588" pos:column="9">IMsoSearch_SetSearchPathEx</name><parameter_list pos:line="3588" pos:column="35">(<param><type><name pos:line="3588" pos:column="36">This</name></type></param>, <param><type><name pos:line="3588" pos:column="42">szPath</name></type></param>, <param><type><name pos:line="3588" pos:column="50">msospf</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3589" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSearchPathEx(This, szPath, msospf)</cpp:value></cpp:define>

<cpp:define pos:line="3591" pos:column="1">#<cpp:directive pos:line="3591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3591" pos:column="9">IMsoSearch_SetSearchPathPidl</name><parameter_list pos:line="3591" pos:column="37">(<param><type><name pos:line="3591" pos:column="38">This</name></type></param>, <param><type><name pos:line="3591" pos:column="44">ppidl</name></type></param>, <param><type><name pos:line="3591" pos:column="51">cpidl</name></type></param>, <param><type><name pos:line="3591" pos:column="58">msospf</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3592" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSearchPathPidl(This, ppidl, cpidl, msospf)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3595" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3596" pos:column="1">// IMsoFoundFileList</comment>

<comment type="line" pos:line="3598" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3599" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3601" pos:column="1">#<cpp:directive pos:line="3601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3601" pos:column="9">IMsoFoundFileList_QueryInterface</name><parameter_list pos:line="3601" pos:column="41">(<param><type><name pos:line="3601" pos:column="42">This</name></type></param>, <param><type><name pos:line="3601" pos:column="48">refiid</name></type></param>, <param><type><name pos:line="3601" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3602" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3604" pos:column="1">#<cpp:directive pos:line="3604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3604" pos:column="9">IMsoFoundFileList_AddRef</name><parameter_list pos:line="3604" pos:column="33">(<param><type><name pos:line="3604" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3605" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3607" pos:column="1">#<cpp:directive pos:line="3607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3607" pos:column="9">IMsoFoundFileList_Release</name><parameter_list pos:line="3607" pos:column="34">(<param><type><name pos:line="3607" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3608" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3610" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3611" pos:column="1">// IMsoFoundFileList methods.</comment>

<cpp:define pos:line="3613" pos:column="1">#<cpp:directive pos:line="3613" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3613" pos:column="9">IMsoFoundFileList_CffGet</name><parameter_list pos:line="3613" pos:column="33">(<param><type><name pos:line="3613" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3614" pos:column="17">(This)-&gt;lpVtbl-&gt;CffGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3616" pos:column="1">#<cpp:directive pos:line="3616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3616" pos:column="9">IMsoFoundFileList_GetIMsoFoundFile</name><parameter_list pos:line="3616" pos:column="43">(<param><type><name pos:line="3616" pos:column="44">This</name></type></param>, <param><type><name pos:line="3616" pos:column="50">iff</name></type></param>, <param><type><name pos:line="3616" pos:column="55">ppffile</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3617" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoFoundFile(This, iff, ppffile)</cpp:value></cpp:define>

<cpp:define pos:line="3619" pos:column="1">#<cpp:directive pos:line="3619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3619" pos:column="9">IMsoFoundFileList_GetIMsoOLDocumentI</name><parameter_list pos:line="3619" pos:column="45">(<param><type><name pos:line="3619" pos:column="46">This</name></type></param>, <param><type><name pos:line="3619" pos:column="52">ppIOLDocument</name></type></param>, <param><type><name pos:line="3619" pos:column="67">iFile</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3620" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoOLDocumentI(This, ppIOLDocument, iFile)</cpp:value></cpp:define>

<cpp:define pos:line="3622" pos:column="1">#<cpp:directive pos:line="3622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3622" pos:column="9">IMsoFoundFileList_GetPropI</name><parameter_list pos:line="3622" pos:column="35">(<param><type><name pos:line="3622" pos:column="36">This</name></type></param>, <param><type><name pos:line="3622" pos:column="42">iff</name></type></param>, <param><type><name pos:line="3622" pos:column="47">prop</name></type></param>, <param><type><name pos:line="3622" pos:column="53">var</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3623" pos:column="17">(This)-&gt;lpVtbl-&gt;GetPropI(This, iff, prop, var)</cpp:value></cpp:define>

<cpp:define pos:line="3625" pos:column="1">#<cpp:directive pos:line="3625" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3625" pos:column="9">IMsoFoundFileList_GetPropISz</name><parameter_list pos:line="3625" pos:column="37">(<param><type><name pos:line="3625" pos:column="38">This</name></type></param>, <param><type><name pos:line="3625" pos:column="44">iff</name></type></param>, <param><type><name pos:line="3625" pos:column="49">prop</name></type></param>, <param><type><name pos:line="3625" pos:column="55">psz</name></type></param>, <param><type><name pos:line="3625" pos:column="60">cb</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3626" pos:column="17">(This)-&gt;lpVtbl-&gt;GetPropI(This, iff, prop, psz, cb)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3629" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3630" pos:column="1">// IMsoSelectedFileList</comment>

<comment type="line" pos:line="3632" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3633" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3635" pos:column="1">#<cpp:directive pos:line="3635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3635" pos:column="9">IMsoSelectedFileList_QueryInterface</name><parameter_list pos:line="3635" pos:column="44">(<param><type><name pos:line="3635" pos:column="45">This</name></type></param>, <param><type><name pos:line="3635" pos:column="51">refiid</name></type></param>, <param><type><name pos:line="3635" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3636" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3638" pos:column="1">#<cpp:directive pos:line="3638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3638" pos:column="9">IMsoSelectedFileList_AddRef</name><parameter_list pos:line="3638" pos:column="36">(<param><type><name pos:line="3638" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3639" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3641" pos:column="1">#<cpp:directive pos:line="3641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3641" pos:column="9">IMsoSelectedFileList_Release</name><parameter_list pos:line="3641" pos:column="37">(<param><type><name pos:line="3641" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3642" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3644" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3645" pos:column="1">// IMsoSelectedFileList methods.</comment>

<cpp:define pos:line="3647" pos:column="1">#<cpp:directive pos:line="3647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3647" pos:column="9">IMsoSelectedFileList_CffGet</name><parameter_list pos:line="3647" pos:column="36">(<param><type><name pos:line="3647" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3648" pos:column="17">(This)-&gt;lpVtbl-&gt;CffGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3650" pos:column="1">#<cpp:directive pos:line="3650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3650" pos:column="9">IMsoSelectedFileList_GetIMsoFoundFile</name><parameter_list pos:line="3650" pos:column="46">(<param><type><name pos:line="3650" pos:column="47">This</name></type></param>, <param><type><name pos:line="3650" pos:column="53">iff</name></type></param>, <param><type><name pos:line="3650" pos:column="58">ppffile</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3651" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoFoundFile(This, iff, ppffile)</cpp:value></cpp:define>

<cpp:define pos:line="3653" pos:column="1">#<cpp:directive pos:line="3653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3653" pos:column="9">IMsoSelectedFileList_GetIMsoOLDocumentI</name><parameter_list pos:line="3653" pos:column="48">(<param><type><name pos:line="3653" pos:column="49">This</name></type></param>, <param><type><name pos:line="3653" pos:column="55">ppIOLDocument</name></type></param>, <param><type><name pos:line="3653" pos:column="70">iFile</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3654" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoOLDocumentI(This, ppIOLDocument, iFile)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3657" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3658" pos:column="1">// IMsoFoundFile</comment>

<comment type="line" pos:line="3660" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3661" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3663" pos:column="1">#<cpp:directive pos:line="3663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3663" pos:column="9">IMsoFoundFile_QueryInterface</name><parameter_list pos:line="3663" pos:column="37">(<param><type><name pos:line="3663" pos:column="38">This</name></type></param>, <param><type><name pos:line="3663" pos:column="44">refiid</name></type></param>, <param><type><name pos:line="3663" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3664" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3666" pos:column="1">#<cpp:directive pos:line="3666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3666" pos:column="9">IMsoFoundFile_AddRef</name><parameter_list pos:line="3666" pos:column="29">(<param><type><name pos:line="3666" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3667" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3669" pos:column="1">#<cpp:directive pos:line="3669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3669" pos:column="9">IMsoFoundFile_Release</name><parameter_list pos:line="3669" pos:column="30">(<param><type><name pos:line="3669" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3670" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3672" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3673" pos:column="1">// IMsoFoundFile methods.</comment>

<cpp:define pos:line="3675" pos:column="1">#<cpp:directive pos:line="3675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3675" pos:column="9">IMsoFoundFile_GetPath</name><parameter_list pos:line="3675" pos:column="30">(<param><type><name pos:line="3675" pos:column="31">This</name></type></param>, <param><type><name pos:line="3675" pos:column="37">szPath</name></type></param>, <param><type><name pos:line="3675" pos:column="45">cbPath</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3676" pos:column="17">(This)-&gt;lpVtbl-&gt;GetPath(This, szPath, cbPath)</cpp:value></cpp:define>

<cpp:define pos:line="3678" pos:column="1">#<cpp:directive pos:line="3678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3678" pos:column="9">IMsoFoundFile_GetIfile</name><parameter_list pos:line="3678" pos:column="31">(<param><type><name pos:line="3678" pos:column="32">This</name></type></param>, <param><type><name pos:line="3678" pos:column="38">pifile</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3679" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIfile(This, pifile)</cpp:value></cpp:define>

<cpp:define pos:line="3681" pos:column="1">#<cpp:directive pos:line="3681" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3681" pos:column="9">IMsoFoundFile_GetIMsoOLDocument</name><parameter_list pos:line="3681" pos:column="40">(<param><type><name pos:line="3681" pos:column="41">This</name></type></param>, <param><type><name pos:line="3681" pos:column="47">ppIOLDocument</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3682" pos:column="17">(This)-&gt;lpVtbl-&gt;GetIMsoOLDocument(This, ppIOLDocument)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3685" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3686" pos:column="1">// IMsoDMControl</comment>

<comment type="line" pos:line="3688" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3689" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3691" pos:column="1">#<cpp:directive pos:line="3691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3691" pos:column="9">IMsoDMControl_QueryInterface</name><parameter_list pos:line="3691" pos:column="37">(<param><type><name pos:line="3691" pos:column="38">This</name></type></param>, <param><type><name pos:line="3691" pos:column="44">refiid</name></type></param>, <param><type><name pos:line="3691" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3692" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3694" pos:column="1">#<cpp:directive pos:line="3694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3694" pos:column="9">IMsoDMControl_AddRef</name><parameter_list pos:line="3694" pos:column="29">(<param><type><name pos:line="3694" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3695" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3697" pos:column="1">#<cpp:directive pos:line="3697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3697" pos:column="9">IMsoDMControl_Release</name><parameter_list pos:line="3697" pos:column="30">(<param><type><name pos:line="3697" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3698" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3700" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3701" pos:column="1">// IMsoDMControl methods.</comment>

<cpp:define pos:line="3703" pos:column="1">#<cpp:directive pos:line="3703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3703" pos:column="9">IMsoDMControl_Otp</name><parameter_list pos:line="3703" pos:column="26">(<param><type><name pos:line="3703" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3704" pos:column="17">(This)-&gt;lpVtbl-&gt;Otp(This)</cpp:value></cpp:define>

<cpp:define pos:line="3706" pos:column="1">#<cpp:directive pos:line="3706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3706" pos:column="9">IMsoDMControl_SetOtp</name><parameter_list pos:line="3706" pos:column="29">(<param><type><name pos:line="3706" pos:column="30">This</name></type></param>, <param><type><name pos:line="3706" pos:column="36">otp</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3707" pos:column="17">(This)-&gt;lpVtbl-&gt;SetOtp(This, otp)</cpp:value></cpp:define>

<cpp:define pos:line="3709" pos:column="1">#<cpp:directive pos:line="3709" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3709" pos:column="9">IMsoDMControl_GetSzTitle</name><parameter_list pos:line="3709" pos:column="33">(<param><type><name pos:line="3709" pos:column="34">This</name></type></param>, <param><type><name pos:line="3709" pos:column="40">szTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3710" pos:column="17">(This)-&gt;lpVtbl-&gt;GetSzTitle(This, szTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3712" pos:column="1">#<cpp:directive pos:line="3712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3712" pos:column="9">IMsoDMControl_SetSzTitle</name><parameter_list pos:line="3712" pos:column="33">(<param><type><name pos:line="3712" pos:column="34">This</name></type></param>, <param><type><name pos:line="3712" pos:column="40">szTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3713" pos:column="17">(This)-&gt;lpVtbl-&gt;SetSzTitle(This, szTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3715" pos:column="1">#<cpp:directive pos:line="3715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3715" pos:column="9">IMsoDMControl_FEnabled</name><parameter_list pos:line="3715" pos:column="31">(<param><type><name pos:line="3715" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3716" pos:column="17">(This)-&gt;lpVtbl-&gt;FEnabled(This)</cpp:value></cpp:define>

<cpp:define pos:line="3718" pos:column="1">#<cpp:directive pos:line="3718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3718" pos:column="9">IMsoDMControl_Enable</name><parameter_list pos:line="3718" pos:column="29">(<param><type><name pos:line="3718" pos:column="30">This</name></type></param>, <param><type><name pos:line="3718" pos:column="36">fEnable</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3719" pos:column="17">(This)-&gt;lpVtbl-&gt;Enable(This, fEnable)</cpp:value></cpp:define>

<cpp:define pos:line="3721" pos:column="1">#<cpp:directive pos:line="3721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3721" pos:column="9">IMsoDMControl_GetValueW</name><parameter_list pos:line="3721" pos:column="32">(<param><type><name pos:line="3721" pos:column="33">This</name></type></param>, <param><type><name pos:line="3721" pos:column="39">pval</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3722" pos:column="17">(This)-&gt;lpVtbl-&gt;GetValueW(This, pval)</cpp:value></cpp:define>

<cpp:define pos:line="3724" pos:column="1">#<cpp:directive pos:line="3724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3724" pos:column="9">IMsoDMControl_GetValueSz</name><parameter_list pos:line="3724" pos:column="33">(<param><type><name pos:line="3724" pos:column="34">This</name></type></param>, <param><type><name pos:line="3724" pos:column="40">szVal</name></type></param>, <param><type><name pos:line="3724" pos:column="47">cbVal</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3725" pos:column="17">(This)-&gt;lpVtbl-&gt;GetValueSz(This, szVal, cbVal)</cpp:value></cpp:define>

<cpp:define pos:line="3727" pos:column="1">#<cpp:directive pos:line="3727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3727" pos:column="9">IMsoDMControl_SetValueW</name><parameter_list pos:line="3727" pos:column="32">(<param><type><name pos:line="3727" pos:column="33">This</name></type></param>, <param><type><name pos:line="3727" pos:column="39">val</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3728" pos:column="17">(This)-&gt;lpVtbl-&gt;SetValueW(This, val)</cpp:value></cpp:define>

<cpp:define pos:line="3730" pos:column="1">#<cpp:directive pos:line="3730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3730" pos:column="9">IMsoDMControl_SetValueSz</name><parameter_list pos:line="3730" pos:column="33">(<param><type><name pos:line="3730" pos:column="34">This</name></type></param>, <param><type><name pos:line="3730" pos:column="40">szVal</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3731" pos:column="17">(This)-&gt;lpVtbl-&gt;SetValueSz(This, szVal)</cpp:value></cpp:define>

<cpp:define pos:line="3733" pos:column="1">#<cpp:directive pos:line="3733" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3733" pos:column="9">IMsoDMControl_SetValueSzEx</name><parameter_list pos:line="3733" pos:column="35">(<param><type><name pos:line="3733" pos:column="36">This</name></type></param>, <param><type><name pos:line="3733" pos:column="42">wzVal</name></type></param>, <param><type><name pos:line="3733" pos:column="49">wzBtnText</name></type></param>, <param><type><name pos:line="3733" pos:column="60">wzDlgTitle</name></type></param>, <param><type><name pos:line="3733" pos:column="72">wzDescrText</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3734" pos:column="17">(This)-&gt;lpVtbl-&gt;SetValueSzEx(This, wzVal, wzBtnText, wzDlgTitle, wzDescrText)</cpp:value></cpp:define>

<cpp:define pos:line="3736" pos:column="1">#<cpp:directive pos:line="3736" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3736" pos:column="9">IMsoDMControl_SetFEnableWithOK</name><parameter_list pos:line="3736" pos:column="39">(<param><type><name pos:line="3736" pos:column="40">This</name></type></param>, <param><type><name pos:line="3736" pos:column="46">fEnableWithOKButton</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3737" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFEnableWithOK(This, fEnableWithOKButton)</cpp:value></cpp:define>

<cpp:define pos:line="3739" pos:column="1">#<cpp:directive pos:line="3739" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3739" pos:column="9">IMsoDMControl_FEnabledWithOK</name><parameter_list pos:line="3739" pos:column="37">(<param><type><name pos:line="3739" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3740" pos:column="17">(This)-&gt;lpVtbl-&gt;FEnabledWithOK(This)</cpp:value></cpp:define>

<cpp:define pos:line="3742" pos:column="1">#<cpp:directive pos:line="3742" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3742" pos:column="9">IMsoDMControl_SetFDisablesOKDropDown</name><parameter_list pos:line="3742" pos:column="45">(<param><type><name pos:line="3742" pos:column="46">This</name></type></param>, <param><type><name pos:line="3742" pos:column="52">fDisablesOKDropDown</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3743" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFDisablesOKDropDown(This, fDisablesOKDropDown)</cpp:value></cpp:define>

<cpp:define pos:line="3745" pos:column="1">#<cpp:directive pos:line="3745" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3745" pos:column="9">IMsoDMControl_FDisablesOKDropDown</name><parameter_list pos:line="3745" pos:column="42">(<param><type><name pos:line="3745" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3746" pos:column="17">(This)-&gt;lpVtbl-&gt;FDisablesOKDropDown(This)</cpp:value></cpp:define>

<cpp:define pos:line="3748" pos:column="1">#<cpp:directive pos:line="3748" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3748" pos:column="9">IMsoDMControl_SetAltOpenTitle</name><parameter_list pos:line="3748" pos:column="38">(<param><type><name pos:line="3748" pos:column="39">This</name></type></param>, <param><type><name pos:line="3748" pos:column="45">wzTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3749" pos:column="17">(This)-&gt;lpVtbl-&gt;SetAltOpenTitle(This, wzTitle)</cpp:value></cpp:define>

<cpp:define pos:line="3751" pos:column="1">#<cpp:directive pos:line="3751" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3751" pos:column="9">IMsoDMControl_GetAltOpenTitle</name><parameter_list pos:line="3751" pos:column="38">(<param><type><name pos:line="3751" pos:column="39">This</name></type></param>, <param><type><name pos:line="3751" pos:column="45">wzTitle</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3752" pos:column="17">(This)-&gt;lpVtbl-&gt;GetAltOpenTitle(This, wzTitle)</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="3754" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3755" pos:column="1">// IMsoControlList</comment>

<comment type="line" pos:line="3757" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3758" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3760" pos:column="1">#<cpp:directive pos:line="3760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3760" pos:column="9">IMsoControlList_QueryInterface</name><parameter_list pos:line="3760" pos:column="39">(<param><type><name pos:line="3760" pos:column="40">This</name></type></param>, <param><type><name pos:line="3760" pos:column="46">refiid</name></type></param>, <param><type><name pos:line="3760" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3761" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3763" pos:column="1">#<cpp:directive pos:line="3763" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3763" pos:column="9">IMsoControlList_AddRef</name><parameter_list pos:line="3763" pos:column="31">(<param><type><name pos:line="3763" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3764" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3766" pos:column="1">#<cpp:directive pos:line="3766" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3766" pos:column="9">IMsoControlList_Release</name><parameter_list pos:line="3766" pos:column="32">(<param><type><name pos:line="3766" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3767" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3769" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3770" pos:column="1">// IMsoControlList methods.</comment>

<cpp:define pos:line="3772" pos:column="1">#<cpp:directive pos:line="3772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3772" pos:column="9">IMsoControlList_CcntrlGet</name><parameter_list pos:line="3772" pos:column="34">(<param><type><name pos:line="3772" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3773" pos:column="17">(This)-&gt;lpVtbl-&gt;CcntrlGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3775" pos:column="1">#<cpp:directive pos:line="3775" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3775" pos:column="9">IMsoControlList_Get</name><parameter_list pos:line="3775" pos:column="28">(<param><type><name pos:line="3775" pos:column="29">This</name></type></param>, <param><type><name pos:line="3775" pos:column="35">icstitm</name></type></param>, <param><type><name pos:line="3775" pos:column="44">ppcstitm</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3776" pos:column="17">(This)-&gt;lpVtbl-&gt;Get(This, icstitm, ppcstitm)</cpp:value></cpp:define>

<cpp:define pos:line="3778" pos:column="1">#<cpp:directive pos:line="3778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3778" pos:column="9">IMsoControlList_Append</name><parameter_list pos:line="3778" pos:column="31">(<param><type><name pos:line="3778" pos:column="32">This</name></type></param>, <param><type><name pos:line="3778" pos:column="38">pcstitm</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3779" pos:column="17">(This)-&gt;lpVtbl-&gt;Append(This, pcstitm)</cpp:value></cpp:define>

<cpp:define pos:line="3781" pos:column="1">#<cpp:directive pos:line="3781" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3781" pos:column="9">IMsoControlList_Delete</name><parameter_list pos:line="3781" pos:column="31">(<param><type><name pos:line="3781" pos:column="32">This</name></type></param>, <param><type><name pos:line="3781" pos:column="38">icstitm</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3782" pos:column="17">(This)-&gt;lpVtbl-&gt;Delete(This, icstitm)</cpp:value></cpp:define>

<cpp:define pos:line="3784" pos:column="1">#<cpp:directive pos:line="3784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3784" pos:column="9">IMsoControlList_IcntrlOfHid</name><parameter_list pos:line="3784" pos:column="36">(<param><type><name pos:line="3784" pos:column="37">This</name></type></param>, <param><type><name pos:line="3784" pos:column="43">hid</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3785" pos:column="17">(This)-&gt;lpVtbl-&gt;IcntrlOfHid(This, hid)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3788" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3789" pos:column="1">// IMsoFileTypeList</comment>

<comment type="line" pos:line="3791" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3792" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3794" pos:column="1">#<cpp:directive pos:line="3794" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3794" pos:column="9">IMsoFileTypeList_QueryInterface</name><parameter_list pos:line="3794" pos:column="40">(<param><type><name pos:line="3794" pos:column="41">This</name></type></param>, <param><type><name pos:line="3794" pos:column="47">refiid</name></type></param>, <param><type><name pos:line="3794" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3795" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3797" pos:column="1">#<cpp:directive pos:line="3797" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3797" pos:column="9">IMsoFileTypeList_AddRef</name><parameter_list pos:line="3797" pos:column="32">(<param><type><name pos:line="3797" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3798" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3800" pos:column="1">#<cpp:directive pos:line="3800" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3800" pos:column="9">IMsoFileTypeList_Release</name><parameter_list pos:line="3800" pos:column="33">(<param><type><name pos:line="3800" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3801" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3803" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3804" pos:column="1">// IMsoFileTypeList methods.</comment>

<cpp:define pos:line="3806" pos:column="1">#<cpp:directive pos:line="3806" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3806" pos:column="9">IMsoFileTypeList_CszGet</name><parameter_list pos:line="3806" pos:column="32">(<param><type><name pos:line="3806" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3807" pos:column="17">(This)-&gt;lpVtbl-&gt;CszGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3809" pos:column="1">#<cpp:directive pos:line="3809" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3809" pos:column="9">IMsoFileTypeList_Get</name><parameter_list pos:line="3809" pos:column="29">(<param><type><name pos:line="3809" pos:column="30">This</name></type></param>, <param><type><name pos:line="3809" pos:column="36">iszType</name></type></param>, <param><type><name pos:line="3809" pos:column="45">szType</name></type></param>, <param><type><name pos:line="3809" pos:column="53">pfFreezeDir</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3810" pos:column="17">(This)-&gt;lpVtbl-&gt;Get(This, iszType, szType, pfFreezeDir)</cpp:value></cpp:define>

<cpp:define pos:line="3812" pos:column="1">#<cpp:directive pos:line="3812" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3812" pos:column="9">IMsoFileTypeList_Append</name><parameter_list pos:line="3812" pos:column="32">(<param><type><name pos:line="3812" pos:column="33">This</name></type></param>, <param><type><name pos:line="3812" pos:column="39">szType</name></type></param>, <param><type><name pos:line="3812" pos:column="47">fFreezeDir</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3813" pos:column="17">(This)-&gt;lpVtbl-&gt;Append(This, szType, fFreezeDir)</cpp:value></cpp:define>

<cpp:define pos:line="3815" pos:column="1">#<cpp:directive pos:line="3815" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3815" pos:column="9">IMsoFileTypeList_Delete</name><parameter_list pos:line="3815" pos:column="32">(<param><type><name pos:line="3815" pos:column="33">This</name></type></param>, <param><type><name pos:line="3815" pos:column="39">iszType</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3816" pos:column="17">(This)-&gt;lpVtbl-&gt;Delete(This, iszType)</cpp:value></cpp:define>

<cpp:define pos:line="3818" pos:column="1">#<cpp:directive pos:line="3818" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3818" pos:column="9">IMsoFileTypeList_IszDefaultGet</name><parameter_list pos:line="3818" pos:column="39">(<param><type><name pos:line="3818" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3819" pos:column="17">(This)-&gt;lpVtbl-&gt;IszDefaultGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3821" pos:column="1">#<cpp:directive pos:line="3821" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3821" pos:column="9">IMsoFileTypeList_SetIszDefault</name><parameter_list pos:line="3821" pos:column="39">(<param><type><name pos:line="3821" pos:column="40">This</name></type></param>, <param><type><name pos:line="3821" pos:column="46">iszDefault</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3822" pos:column="17">(This)-&gt;lpVtbl-&gt;SetIszDefault(This, iszDefault)</cpp:value></cpp:define>

<cpp:define pos:line="3824" pos:column="1">#<cpp:directive pos:line="3824" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3824" pos:column="9">IMsoFileTypeList_AppendEx</name><parameter_list pos:line="3824" pos:column="34">(<param><type><name pos:line="3824" pos:column="35">This</name></type></param>, <param><type><name pos:line="3824" pos:column="41">szType</name></type></param>, <param><type><name pos:line="3824" pos:column="49">msoftf</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3825" pos:column="17">(This)-&gt;lpVtbl-&gt;AppendEx(This, szType, msoftf)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3828" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3829" pos:column="1">// IMsoCodePageList</comment>

<comment type="line" pos:line="3831" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3832" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3834" pos:column="1">#<cpp:directive pos:line="3834" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3834" pos:column="9">IMsoCodePageList_QueryInterface</name><parameter_list pos:line="3834" pos:column="40">(<param><type><name pos:line="3834" pos:column="41">This</name></type></param>, <param><type><name pos:line="3834" pos:column="47">refiid</name></type></param>, <param><type><name pos:line="3834" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3835" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3837" pos:column="1">#<cpp:directive pos:line="3837" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3837" pos:column="9">IMsoCodePageList_AddRef</name><parameter_list pos:line="3837" pos:column="32">(<param><type><name pos:line="3837" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3838" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3840" pos:column="1">#<cpp:directive pos:line="3840" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3840" pos:column="9">IMsoCodePageList_Release</name><parameter_list pos:line="3840" pos:column="33">(<param><type><name pos:line="3840" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3841" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="3843" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3844" pos:column="1">// IMsoCodePageList methods.</comment>

<cpp:define pos:line="3846" pos:column="1">#<cpp:directive pos:line="3846" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3846" pos:column="9">IMsoCodePageList_CszGet</name><parameter_list pos:line="3846" pos:column="32">(<param><type><name pos:line="3846" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3847" pos:column="17">(This)-&gt;lpVtbl-&gt;CszGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3849" pos:column="1">#<cpp:directive pos:line="3849" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3849" pos:column="9">IMsoCodePageList_Get</name><parameter_list pos:line="3849" pos:column="29">(<param><type><name pos:line="3849" pos:column="30">This</name></type></param>, <param><type><name pos:line="3849" pos:column="36">iszCodePage</name></type></param>, <param><type><name pos:line="3849" pos:column="49">szCodePage</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3850" pos:column="17">(This)-&gt;lpVtbl-&gt;Get(This, iszCodePage, szCodePage)</cpp:value></cpp:define>

<cpp:define pos:line="3852" pos:column="1">#<cpp:directive pos:line="3852" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3852" pos:column="9">IMsoCodePageList_Append</name><parameter_list pos:line="3852" pos:column="32">(<param><type><name pos:line="3852" pos:column="33">This</name></type></param>, <param><type><name pos:line="3852" pos:column="39">szCodePage</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3853" pos:column="17">(This)-&gt;lpVtbl-&gt;Append(This, szCodePage)</cpp:value></cpp:define>

<cpp:define pos:line="3855" pos:column="1">#<cpp:directive pos:line="3855" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3855" pos:column="9">IMsoCodePageList_Delete</name><parameter_list pos:line="3855" pos:column="32">(<param><type><name pos:line="3855" pos:column="33">This</name></type></param>, <param><type><name pos:line="3855" pos:column="39">iszCodePage</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3856" pos:column="17">(This)-&gt;lpVtbl-&gt;Delete(This, iszCodePage)</cpp:value></cpp:define>

<cpp:define pos:line="3858" pos:column="1">#<cpp:directive pos:line="3858" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3858" pos:column="9">IMsoCodePageList_IszDefaultGet</name><parameter_list pos:line="3858" pos:column="39">(<param><type><name pos:line="3858" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3859" pos:column="17">(This)-&gt;lpVtbl-&gt;IszDefaultGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3861" pos:column="1">#<cpp:directive pos:line="3861" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3861" pos:column="9">IMsoCodePageList_SetIszDefault</name><parameter_list pos:line="3861" pos:column="39">(<param><type><name pos:line="3861" pos:column="40">This</name></type></param>, <param><type><name pos:line="3861" pos:column="46">iszDefault</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3862" pos:column="17">(This)-&gt;lpVtbl-&gt;SetIszDefault(This, iszDefault)</cpp:value></cpp:define>

<comment type="line" format="doxygen" pos:line="3864" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3865" pos:column="1">// IMsoCommandList</comment>

<comment type="line" pos:line="3867" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3868" pos:column="1">// IMsoUnknown methods.</comment>

<cpp:define pos:line="3870" pos:column="1">#<cpp:directive pos:line="3870" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3870" pos:column="9">IMsoCommandList_QueryInterface</name><parameter_list pos:line="3870" pos:column="39">(<param><type><name pos:line="3870" pos:column="40">This</name></type></param>, <param><type><name pos:line="3870" pos:column="46">refiid</name></type></param>, <param><type><name pos:line="3870" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
		<cpp:value pos:line="3871" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3873" pos:column="1">#<cpp:directive pos:line="3873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3873" pos:column="9">IMsoCommandList_AddRef</name><parameter_list pos:line="3873" pos:column="31">(<param><type><name pos:line="3873" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3874" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3876" pos:column="1">#<cpp:directive pos:line="3876" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3876" pos:column="9">IMsoCommandList_Release</name><parameter_list pos:line="3876" pos:column="32">(<param><type><name pos:line="3876" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3877" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>


<comment type="line" pos:line="3880" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="3881" pos:column="1">// IMsoCommandList methods.</comment>
<cpp:define pos:line="3882" pos:column="1">#<cpp:directive pos:line="3882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3882" pos:column="9">IMsoCommandList_CcmdGet</name><parameter_list pos:line="3882" pos:column="32">(<param><type><name pos:line="3882" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
		<cpp:value pos:line="3883" pos:column="17">(This)-&gt;lpVtbl-&gt;CcmdGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3885" pos:column="1">#<cpp:directive pos:line="3885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3885" pos:column="9">IMsoCommandList_Get</name><parameter_list pos:line="3885" pos:column="28">(<param><type><name pos:line="3885" pos:column="29">This</name></type></param>, <param><type><name pos:line="3885" pos:column="35">icmd</name></type></param>, <param><type><name pos:line="3885" pos:column="41">szCmd</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3886" pos:column="17">(This)-&gt;lpVtbl-&gt;Get(This, icmd, szCmd)</cpp:value></cpp:define>

<cpp:define pos:line="3888" pos:column="1">#<cpp:directive pos:line="3888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3888" pos:column="9">IMsoCommandList_GetFEnabled</name><parameter_list pos:line="3888" pos:column="36">(<param><type><name pos:line="3888" pos:column="37">This</name></type></param>, <param><type><name pos:line="3888" pos:column="43">icmd</name></type></param>, <param><type><name pos:line="3888" pos:column="49">pfEnabled</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3889" pos:column="17">(This)-&gt;lpVtbl-&gt;GetFEnabled(This, icmd, pfEnabled)</cpp:value></cpp:define>

<cpp:define pos:line="3891" pos:column="1">#<cpp:directive pos:line="3891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3891" pos:column="9">IMsoCommandList_SetFEnabled</name><parameter_list pos:line="3891" pos:column="36">(<param><type><name pos:line="3891" pos:column="37">This</name></type></param>, <param><type><name pos:line="3891" pos:column="43">icmd</name></type></param>, <param><type><name pos:line="3891" pos:column="49">fEnabled</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3892" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFEnabled(This, icmd, fEnabled)</cpp:value></cpp:define>

<cpp:define pos:line="3894" pos:column="1">#<cpp:directive pos:line="3894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3894" pos:column="9">IMsoCommandList_GetFVisible</name><parameter_list pos:line="3894" pos:column="36">(<param><type><name pos:line="3894" pos:column="37">This</name></type></param>, <param><type><name pos:line="3894" pos:column="43">icmd</name></type></param>, <param><type><name pos:line="3894" pos:column="49">pfVisible</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3895" pos:column="17">(This)-&gt;lpVtbl-&gt;GetFVisible(This, icmd, pfVisible)</cpp:value></cpp:define>

<cpp:define pos:line="3897" pos:column="1">#<cpp:directive pos:line="3897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3897" pos:column="9">IMsoCommandList_SetFVisible</name><parameter_list pos:line="3897" pos:column="36">(<param><type><name pos:line="3897" pos:column="37">This</name></type></param>, <param><type><name pos:line="3897" pos:column="43">icmd</name></type></param>, <param><type><name pos:line="3897" pos:column="49">fVisible</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3898" pos:column="17">(This)-&gt;lpVtbl-&gt;SetFVisible(This, icmd, fVisible)</cpp:value></cpp:define>


<comment type="line" format="doxygen" pos:line="3901" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="3902" pos:column="1">// IMsoOLDocument</comment>

<cpp:define pos:line="3904" pos:column="1">#<cpp:directive pos:line="3904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3904" pos:column="9">IMsoOLDocument_QueryInterface</name><parameter_list pos:line="3904" pos:column="38">(<param><type><name pos:line="3904" pos:column="39">This</name></type></param>, <param><type><name pos:line="3904" pos:column="45">refiid</name></type></param>, <param><type><name pos:line="3904" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3905" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="3907" pos:column="1">#<cpp:directive pos:line="3907" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3907" pos:column="9">IMsoOLDocument_AddRef</name><parameter_list pos:line="3907" pos:column="30">(<param><type><name pos:line="3907" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3908" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="3910" pos:column="1">#<cpp:directive pos:line="3910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3910" pos:column="9">IMsoOLDocument_Release</name><parameter_list pos:line="3910" pos:column="31">(<param><type><name pos:line="3910" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3911" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<cpp:define pos:line="3913" pos:column="1">#<cpp:directive pos:line="3913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3913" pos:column="9">IMsoOLDocument_GetInterface</name><parameter_list pos:line="3913" pos:column="36">(<param><type><name pos:line="3913" pos:column="37">This</name></type></param>, <param><type><name pos:line="3913" pos:column="43">ppIUnknown</name></type></param>, <param><type><name pos:line="3913" pos:column="55">refiid</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3914" pos:column="17">(This)-&gt;lpVtbl-&gt;GetInterface(This, ppIUnknown, refiid)</cpp:value></cpp:define>

<cpp:define pos:line="3916" pos:column="1">#<cpp:directive pos:line="3916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3916" pos:column="9">IMsoOLDocument_SetInterface</name><parameter_list pos:line="3916" pos:column="36">(<param><type><name pos:line="3916" pos:column="37">This</name></type></param>, <param><type><name pos:line="3916" pos:column="43">pIUnknown</name></type></param>, <param><type><name pos:line="3916" pos:column="54">refiid</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3917" pos:column="17">(This)-&gt;lpVtbl-&gt;SetInterface(This, pIUnknown, refiid)</cpp:value></cpp:define>

<cpp:define pos:line="3919" pos:column="1">#<cpp:directive pos:line="3919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3919" pos:column="9">IMsoOLDocument_GetPwTdi</name><parameter_list pos:line="3919" pos:column="32">(<param><type><name pos:line="3919" pos:column="33">This</name></type></param>, <param><type><name pos:line="3919" pos:column="39">pw</name></type></param>, <param><type><name pos:line="3919" pos:column="43">tdi</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3920" pos:column="17">(This)-&gt;lpVtbl-&gt;GetPwTdi(This, pw, tdi)</cpp:value></cpp:define>

<cpp:define pos:line="3922" pos:column="1">#<cpp:directive pos:line="3922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3922" pos:column="9">IMsoOLDocument_SetWTdi</name><parameter_list pos:line="3922" pos:column="31">(<param><type><name pos:line="3922" pos:column="32">This</name></type></param>, <param><type><name pos:line="3922" pos:column="38">w</name></type></param>, <param><type><name pos:line="3922" pos:column="41">tdi</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3923" pos:column="17">(This)-&gt;lpVtbl-&gt;SetWTdi(This, w, tdi)</cpp:value></cpp:define>

<cpp:define pos:line="3925" pos:column="1">#<cpp:directive pos:line="3925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3925" pos:column="9">IMsoOLDocument_GetWzPcchGdn</name><parameter_list pos:line="3925" pos:column="36">(<param><type><name pos:line="3925" pos:column="37">This</name></type></param>, <param><type><name pos:line="3925" pos:column="43">wz</name></type></param>, <param><type><name pos:line="3925" pos:column="47">pcch</name></type></param>, <param><type><name pos:line="3925" pos:column="53">gdn</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3926" pos:column="17">(This)-&gt;lpVtbl-&gt;GetWzPcchGdn(This, wz, pcch, gdn)</cpp:value></cpp:define>

<cpp:define pos:line="3928" pos:column="1">#<cpp:directive pos:line="3928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3928" pos:column="9">IMsoOLDocument_SetWzGdn</name><parameter_list pos:line="3928" pos:column="32">(<param><type><name pos:line="3928" pos:column="33">This</name></type></param>, <param><type><name pos:line="3928" pos:column="39">wz</name></type></param>, <param><type><name pos:line="3928" pos:column="43">gdn</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3929" pos:column="17">(This)-&gt;lpVtbl-&gt;SetWzGdn(This, wz, gdn)</cpp:value></cpp:define>

<cpp:define pos:line="3931" pos:column="1">#<cpp:directive pos:line="3931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3931" pos:column="9">IMsoOLDocument_SetAttrInAttrMask</name><parameter_list pos:line="3931" pos:column="41">(<param><type><name pos:line="3931" pos:column="42">This</name></type></param>, <param><type><name pos:line="3931" pos:column="48">attr</name></type></param>, <param><type><name pos:line="3931" pos:column="54">attrMask</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3932" pos:column="17">(This)-&gt;lpVtbl-&gt;SetAttrInAttrMask(This, attr, attrMask)</cpp:value></cpp:define>

<cpp:define pos:line="3934" pos:column="1">#<cpp:directive pos:line="3934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3934" pos:column="9">IMsoOLDocument_AttrGet</name><parameter_list pos:line="3934" pos:column="31">(<param><type><name pos:line="3934" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3935" pos:column="17">(This)-&gt;lpVtbl-&gt;AttrGet(This)</cpp:value></cpp:define>

<cpp:define pos:line="3937" pos:column="1">#<cpp:directive pos:line="3937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3937" pos:column="9">IMsoOLDocument_BeginCmd</name><parameter_list pos:line="3937" pos:column="32">(<param><type><name pos:line="3937" pos:column="33">This</name></type></param>, <param><type><name pos:line="3937" pos:column="39">cmd</name></type></param>, <param><type><name pos:line="3937" pos:column="44">ppIOLDocumentOther</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3938" pos:column="17">(This)-&gt;lpVtbl-&gt;BeginCmd(This, cmd, ppIOLDocumentOther)</cpp:value></cpp:define>

<cpp:define pos:line="3940" pos:column="1">#<cpp:directive pos:line="3940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3940" pos:column="9">IMsoOLDocument_RecordEvent</name><parameter_list pos:line="3940" pos:column="35">(<param><type><name pos:line="3940" pos:column="36">This</name></type></param>, <param><type><name pos:line="3940" pos:column="42">evt</name></type></param>, <param><type><name pos:line="3940" pos:column="47">pvMisc</name></type></param>, <param><type><name pos:line="3940" pos:column="55">refId</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3941" pos:column="17">(This)-&gt;lpVtbl-&gt;RecordEvent(This, evt, pvMisc, refId)</cpp:value></cpp:define>

<cpp:define pos:line="3943" pos:column="1">#<cpp:directive pos:line="3943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3943" pos:column="9">IMsoOLDocument_GetFSSpec</name><parameter_list pos:line="3943" pos:column="33">(<param><type><name pos:line="3943" pos:column="34">This</name></type></param>, <param><type><name pos:line="3943" pos:column="40">pFSSpec</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3944" pos:column="17">(This)-&gt;lpVtbl-&gt;GetFSSpec(This, pFSSpec)</cpp:value></cpp:define>

<cpp:define pos:line="3946" pos:column="1">#<cpp:directive pos:line="3946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3946" pos:column="9">IMsoOLDocument_GetPguidTogI</name><parameter_list pos:line="3946" pos:column="36">(<param><type><name pos:line="3946" pos:column="37">This</name></type></param>, <param><type><name pos:line="3946" pos:column="43">pguid</name></type></param>, <param><type><name pos:line="3946" pos:column="50">tog</name></type></param>, <param><type><name pos:line="3946" pos:column="55">i</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3947" pos:column="17">(This)-&gt;lpVtbl-&gt;GetPguidTogI(This, pguid, tog, i)</cpp:value></cpp:define>

<cpp:define pos:line="3949" pos:column="1">#<cpp:directive pos:line="3949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3949" pos:column="9">IMsoOLDocument_SetPguidTogI</name><parameter_list pos:line="3949" pos:column="36">(<param><type><name pos:line="3949" pos:column="37">This</name></type></param>, <param><type><name pos:line="3949" pos:column="43">pguid</name></type></param>, <param><type><name pos:line="3949" pos:column="50">tog</name></type></param>, <param><type><name pos:line="3949" pos:column="55">i</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3950" pos:column="17">(This)-&gt;lpVtbl-&gt;SetPguidTogI(This, pguid, tog, i)</cpp:value></cpp:define>

<cpp:define pos:line="3952" pos:column="1">#<cpp:directive pos:line="3952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3952" pos:column="9">IMsoOLDocument_DoIOLDocPguidOp</name><parameter_list pos:line="3952" pos:column="39">(<param><type><name pos:line="3952" pos:column="40">This</name></type></param>, <param><type><name pos:line="3952" pos:column="46">ppIOLDocOther</name></type></param>, <param><type><name pos:line="3952" pos:column="61">pguid</name></type></param>, <param><type><name pos:line="3952" pos:column="68">op</name></type></param>, <param><type><name pos:line="3952" pos:column="72">ul</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3953" pos:column="17">(This)-&gt;lpVtbl-&gt;DoIOLDocPguidOp(This, ppIOLDocOther, pguid, op, ul)</cpp:value></cpp:define>

<cpp:define pos:line="3955" pos:column="1">#<cpp:directive pos:line="3955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3955" pos:column="9">IMsoOLDocument_SetRenSummInfo</name><parameter_list pos:line="3955" pos:column="38">(<param><type><name pos:line="3955" pos:column="39">This</name></type></param>, <param><type><name pos:line="3955" pos:column="45">lpsiobj</name></type></param>, <param><type><name pos:line="3955" pos:column="54">lpdsiobj</name></type></param>, <param><type><name pos:line="3955" pos:column="64">lpudobj</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3956" pos:column="17">(This)-&gt;lpVtbl-&gt;SetRenSummInfo(This, lpsiobj, lpdsiobj, lpudobj)</cpp:value></cpp:define>

<cpp:define pos:line="3958" pos:column="1">#<cpp:directive pos:line="3958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3958" pos:column="9">IMsoOLDocument_SetDocumentCookie</name><parameter_list pos:line="3958" pos:column="41">(<param><type><name pos:line="3958" pos:column="42">This</name></type></param>, <param><type><name pos:line="3958" pos:column="48">cookie</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3959" pos:column="17">(This)-&gt;lpVtbl-&gt;SetDocumentCookie(This, cookie)</cpp:value></cpp:define>

<cpp:define pos:line="3961" pos:column="1">#<cpp:directive pos:line="3961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3961" pos:column="9">IMsoOLDocument_GetDocumentCookie</name><parameter_list pos:line="3961" pos:column="41">(<param><type><name pos:line="3961" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3962" pos:column="17">(This)-&gt;lpVtbl-&gt;GetDocumentCookie(This)</cpp:value></cpp:define>

<cpp:define pos:line="3964" pos:column="1">#<cpp:directive pos:line="3964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3964" pos:column="9">IMsoOLDocument_GetPKMClient</name><parameter_list pos:line="3964" pos:column="36">(<param><type><name pos:line="3964" pos:column="37">This</name></type></param>, <param><type><name pos:line="3964" pos:column="43">pkmclient</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3965" pos:column="17">(This)-&gt;lpVtbl-&gt;GetPKMClient(This, pkmclient)</cpp:value></cpp:define>

<cpp:define pos:line="3967" pos:column="1">#<cpp:directive pos:line="3967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3967" pos:column="9">IMsoOLDocument_SetPKMClient</name><parameter_list pos:line="3967" pos:column="36">(<param><type><name pos:line="3967" pos:column="37">This</name></type></param>, <param><type><name pos:line="3967" pos:column="43">pkmclient</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3968" pos:column="17">(This)-&gt;lpVtbl-&gt;SetPKMClient(This, pkmclient)</cpp:value></cpp:define>

<cpp:define pos:line="3970" pos:column="1">#<cpp:directive pos:line="3970" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3970" pos:column="9">IMsoOLDocument_GetCOpen</name><parameter_list pos:line="3970" pos:column="32">(<param><type><name pos:line="3970" pos:column="33">This</name></type></param>, <param><type><name pos:line="3970" pos:column="39">pcOpen</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="3971" pos:column="17">(This)-&gt;lpVtbl-&gt;GetCOpen(This, pcOpen)</cpp:value></cpp:define>

<cpp:if pos:line="3973" pos:column="1">#<cpp:directive pos:line="3973" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="3973" pos:column="5">!</op:operator><call><name pos:line="3973" pos:column="6">defined</name><argument_list pos:line="3973" pos:column="13">(<argument><expr><name pos:line="3973" pos:column="14">OFFICE_BUILD</name></expr></argument>)</argument_list></call> <op:operator pos:line="3973" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="3973" pos:column="31">!</op:operator><call><name pos:line="3973" pos:column="32">defined</name><argument_list pos:line="3973" pos:column="39">(<argument><expr><name pos:line="3973" pos:column="40">__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function><type><name pos:line="3975" pos:column="1">__inline</name></type> <name pos:line="3975" pos:column="10">IMsoOLDocument_GetFilePath</name> <parameter_list pos:line="3975" pos:column="37">(
		 <param><decl><type><name pos:line="3976" pos:column="18">IMsoOLDocument</name> <type:modifier pos:line="3976" pos:column="33">*</type:modifier></type><name pos:line="3976" pos:column="34">piolDoc</name></decl></param>,
		 <param><decl><type><name pos:line="3977" pos:column="18">interface</name> <name pos:line="3977" pos:column="28">IBindCtx</name> <type:modifier pos:line="3977" pos:column="37">*</type:modifier></type><name pos:line="3977" pos:column="38">pibc</name></decl></param>, <param><decl><type><name pos:line="3977" pos:column="44">interface</name> <name pos:line="3977" pos:column="54">IBindStatusCallback</name> <type:modifier pos:line="3977" pos:column="74">*</type:modifier></type><name pos:line="3977" pos:column="75">pibsc</name></decl></param>,
		 <param><decl><type><name pos:line="3978" pos:column="18">WCHAR</name> <type:modifier pos:line="3978" pos:column="24">*</type:modifier></type><name pos:line="3978" pos:column="25">wzPath</name></decl></param>, <param><decl><type><name pos:line="3978" pos:column="33">ULONG</name> <type:modifier pos:line="3978" pos:column="39">*</type:modifier></type><name pos:line="3978" pos:column="40">pcbPath</name></decl></param>)</parameter_list>
	<block pos:line="3979" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="3980" pos:column="9">HRESULT</name></type> <name pos:line="3980" pos:column="17">hr</name> <init pos:line="3980" pos:column="20">= <expr><op:operator pos:line="3980" pos:column="22">(</op:operator><name pos:line="3980" pos:column="23">pcbPath</name> <op:operator pos:line="3980" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="3980" pos:column="34">0</lit:literal><op:operator pos:line="3980" pos:column="35">)</op:operator> <op:operator pos:line="3980" pos:column="37">?</op:operator> <name pos:line="3980" pos:column="39">E_POINTER</name> <op:operator pos:line="3980" pos:column="49">:</op:operator> <name pos:line="3980" pos:column="51">S_OK</name></expr></init></decl>;</decl_stmt>

	<if pos:line="3982" pos:column="9">if <condition pos:line="3982" pos:column="12">(<expr><name pos:line="3982" pos:column="13">wzPath</name> <op:operator pos:line="3982" pos:column="20">!=</op:operator> <lit:literal type="number" pos:line="3982" pos:column="23">0</lit:literal></expr>)</condition><then pos:line="3982" pos:column="25">
		<expr_stmt><expr><op:operator pos:line="3983" pos:column="17">*</op:operator><name pos:line="3983" pos:column="18">wzPath</name> <op:operator pos:line="3983" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="3983" pos:column="27">0</lit:literal></expr>;</expr_stmt></then></if>

	<if pos:line="3985" pos:column="9">if <condition pos:line="3985" pos:column="12">(<expr><op:operator pos:line="3985" pos:column="13">(</op:operator><call><name pos:line="3985" pos:column="14">SUCCEEDED</name><argument_list pos:line="3985" pos:column="23">(<argument><expr><name pos:line="3985" pos:column="24">hr</name></expr></argument>)</argument_list></call><op:operator pos:line="3985" pos:column="27">)</op:operator> <op:operator pos:line="3985" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="3985" pos:column="32">(</op:operator><name pos:line="3985" pos:column="33">pibc</name> <op:operator pos:line="3985" pos:column="38">!=</op:operator> <lit:literal type="number" pos:line="3985" pos:column="41">0</lit:literal><op:operator pos:line="3985" pos:column="42">)</op:operator></expr>)</condition><then pos:line="3985" pos:column="44">
		<expr_stmt><expr><name pos:line="3986" pos:column="17">hr</name> <op:operator pos:line="3986" pos:column="20">=</op:operator> <call><name><name pos:line="3986" pos:column="22">piolDoc</name><op:operator pos:line="3986" pos:column="29">-&gt;</op:operator><name pos:line="3986" pos:column="31">lpVtbl</name><op:operator pos:line="3986" pos:column="37">-&gt;</op:operator><name pos:line="3986" pos:column="39">SetInterface</name></name><argument_list pos:line="3986" pos:column="51">(<argument><expr><name pos:line="3986" pos:column="52">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="3986" pos:column="61">(</op:operator><name pos:line="3986" pos:column="62">IUnknown</name> <op:operator pos:line="3986" pos:column="71">*</op:operator><op:operator pos:line="3986" pos:column="72">)</op:operator> <name pos:line="3986" pos:column="74">pibc</name></expr></argument>, <argument><expr><op:operator pos:line="3986" pos:column="80">&amp;</op:operator><name pos:line="3986" pos:column="81">IID_IBindCtx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="3987" pos:column="9">if <condition pos:line="3987" pos:column="12">(<expr><op:operator pos:line="3987" pos:column="13">(</op:operator><call><name pos:line="3987" pos:column="14">SUCCEEDED</name><argument_list pos:line="3987" pos:column="23">(<argument><expr><name pos:line="3987" pos:column="24">hr</name></expr></argument>)</argument_list></call><op:operator pos:line="3987" pos:column="27">)</op:operator> <op:operator pos:line="3987" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="3987" pos:column="32">(</op:operator><name pos:line="3987" pos:column="33">pibsc</name> <op:operator pos:line="3987" pos:column="39">!=</op:operator> <lit:literal type="number" pos:line="3987" pos:column="42">0</lit:literal><op:operator pos:line="3987" pos:column="43">)</op:operator></expr>)</condition><then pos:line="3987" pos:column="45">
		<expr_stmt><expr><name pos:line="3988" pos:column="17">hr</name> <op:operator pos:line="3988" pos:column="20">=</op:operator> <call><name><name pos:line="3988" pos:column="22">piolDoc</name><op:operator pos:line="3988" pos:column="29">-&gt;</op:operator><name pos:line="3988" pos:column="31">lpVtbl</name><op:operator pos:line="3988" pos:column="37">-&gt;</op:operator><name pos:line="3988" pos:column="39">SetInterface</name></name><argument_list pos:line="3988" pos:column="51">(<argument><expr><name pos:line="3988" pos:column="52">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="3988" pos:column="61">(</op:operator><name pos:line="3988" pos:column="62">IUnknown</name> <op:operator pos:line="3988" pos:column="71">*</op:operator><op:operator pos:line="3988" pos:column="72">)</op:operator> <name pos:line="3988" pos:column="74">pibsc</name></expr></argument>, <argument><expr><op:operator pos:line="3988" pos:column="81">&amp;</op:operator><name pos:line="3988" pos:column="82">IID_IBindStatusCallback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="3990" pos:column="9">if <condition pos:line="3990" pos:column="12">(<expr><call><name pos:line="3990" pos:column="13">SUCCEEDED</name><argument_list pos:line="3990" pos:column="22">(<argument><expr><name pos:line="3990" pos:column="23">hr</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3990" pos:column="27">
		<block pos:line="3991" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="3992" pos:column="17">ULONG</name></type> <name pos:line="3992" pos:column="23">cch</name> <init pos:line="3992" pos:column="27">= <expr><op:operator pos:line="3992" pos:column="29">*</op:operator><name pos:line="3992" pos:column="30">pcbPath</name> <op:operator pos:line="3992" pos:column="38">/</op:operator> <sizeof pos:line="3992" pos:column="40">sizeof<argument_list pos:line="3992" pos:column="46">(<argument><expr><name pos:line="3992" pos:column="47">WCHAR</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="3993" pos:column="17">hr</name> <op:operator pos:line="3993" pos:column="20">=</op:operator> <call><name><name pos:line="3993" pos:column="22">piolDoc</name><op:operator pos:line="3993" pos:column="29">-&gt;</op:operator><name pos:line="3993" pos:column="31">lpVtbl</name><op:operator pos:line="3993" pos:column="37">-&gt;</op:operator><name pos:line="3993" pos:column="39">GetWzPcchGdn</name></name><argument_list pos:line="3993" pos:column="51">(<argument><expr><name pos:line="3993" pos:column="52">piolDoc</name></expr></argument>, <argument><expr><name pos:line="3993" pos:column="61">wzPath</name></expr></argument>, <argument><expr><op:operator pos:line="3993" pos:column="69">&amp;</op:operator><name pos:line="3993" pos:column="70">cch</name></expr></argument>, <argument><expr><name pos:line="3993" pos:column="75">msoiolgdnTempFilePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="3994" pos:column="17">*</op:operator><name pos:line="3994" pos:column="18">pcbPath</name> <op:operator pos:line="3994" pos:column="26">=</op:operator> <name pos:line="3994" pos:column="28">cch</name> <op:operator pos:line="3994" pos:column="32">*</op:operator> <sizeof pos:line="3994" pos:column="34">sizeof<argument_list pos:line="3994" pos:column="40">(<argument><expr><name pos:line="3994" pos:column="41">WCHAR</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
		}</block></then></if>

	<return pos:line="3997" pos:column="9">return <expr><name pos:line="3997" pos:column="16">hr</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4000" pos:column="1">__inline</name></type> <name pos:line="4000" pos:column="10">IMsoOLDocument_GetDisplayName</name> <parameter_list pos:line="4000" pos:column="40">(<param><decl><type><name pos:line="4000" pos:column="41">IMsoOLDocument</name> <type:modifier pos:line="4000" pos:column="56">*</type:modifier></type><name pos:line="4000" pos:column="57">piolDoc</name></decl></param>,
		<param><decl><type><name pos:line="4001" pos:column="17">WCHAR</name> <type:modifier pos:line="4001" pos:column="23">*</type:modifier></type><name pos:line="4001" pos:column="24">wzDisplayName</name></decl></param>, <param><decl><type><name pos:line="4001" pos:column="39">ULONG</name> <type:modifier pos:line="4001" pos:column="45">*</type:modifier></type><name pos:line="4001" pos:column="46">pcbDisplayName</name></decl></param>, <param><decl><type><name pos:line="4001" pos:column="62">MSOIOLGDN</name></type> <name pos:line="4001" pos:column="72">gdn</name></decl></param>)</parameter_list>
	<block pos:line="4002" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4003" pos:column="9">HRESULT</name></type> <name pos:line="4003" pos:column="17">hr</name></decl>;</decl_stmt>

	<if pos:line="4005" pos:column="9">if <condition pos:line="4005" pos:column="12">(<expr><name pos:line="4005" pos:column="13">pcbDisplayName</name> <op:operator pos:line="4005" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="4005" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="4005" pos:column="33">
		<block pos:line="4006" pos:column="17">{
		<if pos:line="4007" pos:column="17">if <condition pos:line="4007" pos:column="20">(<expr><name pos:line="4007" pos:column="21">wzDisplayName</name> <op:operator pos:line="4007" pos:column="35">!=</op:operator> <lit:literal type="number" pos:line="4007" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="4007" pos:column="40">
			<expr_stmt><expr><op:operator pos:line="4008" pos:column="25">*</op:operator><name pos:line="4008" pos:column="26">wzDisplayName</name> <op:operator pos:line="4008" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="4008" pos:column="42">0</lit:literal></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="4009" pos:column="17">hr</name> <op:operator pos:line="4009" pos:column="20">=</op:operator> <name pos:line="4009" pos:column="22">E_POINTER</name></expr>;</expr_stmt>
		}</block></then>
	<else pos:line="4011" pos:column="9">else
		<block pos:line="4012" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="4013" pos:column="17">ULONG</name></type> <name pos:line="4013" pos:column="23">cch</name> <init pos:line="4013" pos:column="27">= <expr><op:operator pos:line="4013" pos:column="29">*</op:operator><name pos:line="4013" pos:column="30">pcbDisplayName</name> <op:operator pos:line="4013" pos:column="45">/</op:operator> <sizeof pos:line="4013" pos:column="47">sizeof<argument_list pos:line="4013" pos:column="53">(<argument><expr><name pos:line="4013" pos:column="54">WCHAR</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="4014" pos:column="17">hr</name> <op:operator pos:line="4014" pos:column="20">=</op:operator> <call><name><name pos:line="4014" pos:column="22">piolDoc</name><op:operator pos:line="4014" pos:column="29">-&gt;</op:operator><name pos:line="4014" pos:column="31">lpVtbl</name><op:operator pos:line="4014" pos:column="37">-&gt;</op:operator><name pos:line="4014" pos:column="39">GetWzPcchGdn</name></name><argument_list pos:line="4014" pos:column="51">(<argument><expr><name pos:line="4014" pos:column="52">piolDoc</name></expr></argument>, <argument><expr><name pos:line="4014" pos:column="61">wzDisplayName</name></expr></argument>, <argument><expr><op:operator pos:line="4014" pos:column="76">&amp;</op:operator><name pos:line="4014" pos:column="77">cch</name></expr></argument>, <argument><expr><name pos:line="4014" pos:column="82">gdn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="4015" pos:column="17">*</op:operator><name pos:line="4015" pos:column="18">pcbDisplayName</name> <op:operator pos:line="4015" pos:column="33">=</op:operator> <name pos:line="4015" pos:column="35">cch</name> <op:operator pos:line="4015" pos:column="39">*</op:operator> <sizeof pos:line="4015" pos:column="41">sizeof<argument_list pos:line="4015" pos:column="47">(<argument><expr><name pos:line="4015" pos:column="48">WCHAR</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
		}</block></else></if>

	<return pos:line="4018" pos:column="9">return <expr><name pos:line="4018" pos:column="16">hr</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4021" pos:column="1">__inline</name></type> <name pos:line="4021" pos:column="10">IMsoOLDocument_GetOWSStgError</name> <parameter_list pos:line="4021" pos:column="40">(<param><decl><type><name pos:line="4021" pos:column="41">IMsoOLDocument</name> <type:modifier pos:line="4021" pos:column="56">*</type:modifier></type><name pos:line="4021" pos:column="57">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4022" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4023" pos:column="9">HRESULT</name></type> <name pos:line="4023" pos:column="17">hr</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4024" pos:column="9">piolDoc</name><op:operator pos:line="4024" pos:column="16">-&gt;</op:operator><name pos:line="4024" pos:column="18">lpVtbl</name><op:operator pos:line="4024" pos:column="24">-&gt;</op:operator><name pos:line="4024" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4024" pos:column="34">(<argument><expr><name pos:line="4024" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4024" pos:column="44">(</op:operator><name pos:line="4024" pos:column="45">int</name> <op:operator pos:line="4024" pos:column="49">*</op:operator><op:operator pos:line="4024" pos:column="50">)</op:operator><op:operator pos:line="4024" pos:column="51">&amp;</op:operator><name pos:line="4024" pos:column="52">hr</name></expr></argument>, <argument><expr><name pos:line="4024" pos:column="56">msoioltdiOWSStgError</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4025" pos:column="9">return <expr><name pos:line="4025" pos:column="16">hr</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4028" pos:column="1">__inline</name></type> <name pos:line="4028" pos:column="10">IMsoOLDocument_GetOWSLowDateTime</name> <parameter_list pos:line="4028" pos:column="43">(<param><decl><type><name pos:line="4028" pos:column="44">IMsoOLDocument</name> <type:modifier pos:line="4028" pos:column="59">*</type:modifier></type><name pos:line="4028" pos:column="60">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4029" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4030" pos:column="9">DWORD</name></type> <name pos:line="4030" pos:column="15">dw</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4031" pos:column="9">piolDoc</name><op:operator pos:line="4031" pos:column="16">-&gt;</op:operator><name pos:line="4031" pos:column="18">lpVtbl</name><op:operator pos:line="4031" pos:column="24">-&gt;</op:operator><name pos:line="4031" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4031" pos:column="34">(<argument><expr><name pos:line="4031" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4031" pos:column="44">(</op:operator><name pos:line="4031" pos:column="45">int</name> <op:operator pos:line="4031" pos:column="49">*</op:operator><op:operator pos:line="4031" pos:column="50">)</op:operator><op:operator pos:line="4031" pos:column="51">&amp;</op:operator><name pos:line="4031" pos:column="52">dw</name></expr></argument>, <argument><expr><name pos:line="4031" pos:column="56">msoioltdiOWSLowDateTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4032" pos:column="9">return <expr><name pos:line="4032" pos:column="16">dw</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4035" pos:column="1">__inline</name></type> <name pos:line="4035" pos:column="10">IMsoOLDocument_GetOWSHighDateTime</name> <parameter_list pos:line="4035" pos:column="44">(<param><decl><type><name pos:line="4035" pos:column="45">IMsoOLDocument</name> <type:modifier pos:line="4035" pos:column="60">*</type:modifier></type><name pos:line="4035" pos:column="61">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4036" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4037" pos:column="9">DWORD</name></type> <name pos:line="4037" pos:column="15">dw</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4038" pos:column="9">piolDoc</name><op:operator pos:line="4038" pos:column="16">-&gt;</op:operator><name pos:line="4038" pos:column="18">lpVtbl</name><op:operator pos:line="4038" pos:column="24">-&gt;</op:operator><name pos:line="4038" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4038" pos:column="34">(<argument><expr><name pos:line="4038" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4038" pos:column="44">(</op:operator><name pos:line="4038" pos:column="45">int</name> <op:operator pos:line="4038" pos:column="49">*</op:operator><op:operator pos:line="4038" pos:column="50">)</op:operator><op:operator pos:line="4038" pos:column="51">&amp;</op:operator><name pos:line="4038" pos:column="52">dw</name></expr></argument>, <argument><expr><name pos:line="4038" pos:column="56">msoioltdiOWSHighDateTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4039" pos:column="9">return <expr><name pos:line="4039" pos:column="16">dw</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4042" pos:column="1">__inline</name></type> <name pos:line="4042" pos:column="10">IMsoOLDocument_GetIReDownload</name> <parameter_list pos:line="4042" pos:column="40">(<param><decl><type><name pos:line="4042" pos:column="41">IMsoOLDocument</name> <type:modifier pos:line="4042" pos:column="56">*</type:modifier></type><name pos:line="4042" pos:column="57">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4043" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4044" pos:column="9">int</name></type> <name pos:line="4044" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4045" pos:column="9">piolDoc</name><op:operator pos:line="4045" pos:column="16">-&gt;</op:operator><name pos:line="4045" pos:column="18">lpVtbl</name><op:operator pos:line="4045" pos:column="24">-&gt;</op:operator><name pos:line="4045" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4045" pos:column="34">(<argument><expr><name pos:line="4045" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4045" pos:column="44">(</op:operator><name pos:line="4045" pos:column="45">int</name> <op:operator pos:line="4045" pos:column="49">*</op:operator><op:operator pos:line="4045" pos:column="50">)</op:operator><op:operator pos:line="4045" pos:column="51">&amp;</op:operator><name pos:line="4045" pos:column="52">i</name></expr></argument>, <argument><expr><name pos:line="4045" pos:column="55">msoioltdiReDownload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4046" pos:column="9">return <expr><name pos:line="4046" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4049" pos:column="1">__inline</name></type> <name pos:line="4049" pos:column="10">IMsoOLDocument_SetIReDownload</name> <parameter_list pos:line="4049" pos:column="40">(<param><decl><type><name pos:line="4049" pos:column="41">IMsoOLDocument</name> <type:modifier pos:line="4049" pos:column="56">*</type:modifier></type><name pos:line="4049" pos:column="57">piolDoc</name></decl></param>, <param><decl><type><name pos:line="4049" pos:column="66">int</name></type> <name pos:line="4049" pos:column="70">i</name></decl></param>)</parameter_list>
	<block pos:line="4050" pos:column="9">{
	<return pos:line="4051" pos:column="9">return <expr><call><name><name pos:line="4051" pos:column="16">piolDoc</name><op:operator pos:line="4051" pos:column="23">-&gt;</op:operator><name pos:line="4051" pos:column="25">lpVtbl</name><op:operator pos:line="4051" pos:column="31">-&gt;</op:operator><name pos:line="4051" pos:column="33">SetWTdi</name></name><argument_list pos:line="4051" pos:column="40">(<argument><expr><name pos:line="4051" pos:column="41">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4051" pos:column="50">(</op:operator><name pos:line="4051" pos:column="51">DWORD</name><op:operator pos:line="4051" pos:column="56">)</op:operator><name pos:line="4051" pos:column="57">i</name></expr></argument>, <argument><expr><name pos:line="4051" pos:column="60">msoioltdiReDownload</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>

<function><type><name pos:line="4054" pos:column="1">__inline</name></type> <name pos:line="4054" pos:column="10">IMsoOLDocument_GetIRedirected</name> <parameter_list pos:line="4054" pos:column="40">(<param><decl><type><name pos:line="4054" pos:column="41">IMsoOLDocument</name> <type:modifier pos:line="4054" pos:column="56">*</type:modifier></type><name pos:line="4054" pos:column="57">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4055" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4056" pos:column="9">int</name></type> <name pos:line="4056" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4057" pos:column="9">piolDoc</name><op:operator pos:line="4057" pos:column="16">-&gt;</op:operator><name pos:line="4057" pos:column="18">lpVtbl</name><op:operator pos:line="4057" pos:column="24">-&gt;</op:operator><name pos:line="4057" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4057" pos:column="34">(<argument><expr><name pos:line="4057" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4057" pos:column="44">&amp;</op:operator><name pos:line="4057" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4057" pos:column="48">msoioltdiRedirected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4058" pos:column="9">return <expr><name pos:line="4058" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4061" pos:column="1">__inline</name></type> <name pos:line="4061" pos:column="10">IMsoOLDocument_SetIEnableRedirect</name><parameter_list pos:line="4061" pos:column="43">(<param><decl><type><name pos:line="4061" pos:column="44">IMsoOLDocument</name> <type:modifier pos:line="4061" pos:column="59">*</type:modifier></type><name pos:line="4061" pos:column="60">piolDoc</name></decl></param>, <param><decl><type><name pos:line="4061" pos:column="69">int</name></type> <name pos:line="4061" pos:column="73">i</name></decl></param>)</parameter_list>
	<block pos:line="4062" pos:column="9">{
	<return pos:line="4063" pos:column="9">return <expr><call><name><name pos:line="4063" pos:column="16">piolDoc</name><op:operator pos:line="4063" pos:column="23">-&gt;</op:operator><name pos:line="4063" pos:column="25">lpVtbl</name><op:operator pos:line="4063" pos:column="31">-&gt;</op:operator><name pos:line="4063" pos:column="33">SetWTdi</name></name><argument_list pos:line="4063" pos:column="40">(<argument><expr><name pos:line="4063" pos:column="41">piolDoc</name></expr></argument>, <argument><expr><name pos:line="4063" pos:column="50">i</name></expr></argument>, <argument><expr><name pos:line="4063" pos:column="53">msoioltdiEnableRedirect</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>

<function><type><name pos:line="4066" pos:column="1">__inline</name></type> <name pos:line="4066" pos:column="10">IMsoOLDocument_GetIEnableRedirect</name><parameter_list pos:line="4066" pos:column="43">(<param><decl><type><name pos:line="4066" pos:column="44">IMsoOLDocument</name> <type:modifier pos:line="4066" pos:column="59">*</type:modifier></type><name pos:line="4066" pos:column="60">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4067" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4068" pos:column="9">int</name></type> <name pos:line="4068" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4069" pos:column="9">piolDoc</name><op:operator pos:line="4069" pos:column="16">-&gt;</op:operator><name pos:line="4069" pos:column="18">lpVtbl</name><op:operator pos:line="4069" pos:column="24">-&gt;</op:operator><name pos:line="4069" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4069" pos:column="34">(<argument><expr><name pos:line="4069" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4069" pos:column="44">&amp;</op:operator><name pos:line="4069" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4069" pos:column="48">msoioltdiEnableRedirect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4070" pos:column="9">return <expr><name pos:line="4070" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4073" pos:column="1">__inline</name></type> <name pos:line="4073" pos:column="10">IMsoOLDocument_IsInFileSys</name> <parameter_list pos:line="4073" pos:column="37">(<param><decl><type><name pos:line="4073" pos:column="38">IMsoOLDocument</name> <type:modifier pos:line="4073" pos:column="53">*</type:modifier></type><name pos:line="4073" pos:column="54">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4074" pos:column="9">{
	<if pos:line="4075" pos:column="9">if <condition pos:line="4075" pos:column="12">(<expr><op:operator pos:line="4075" pos:column="13">(</op:operator><call><name><name pos:line="4075" pos:column="14">piolDoc</name><op:operator pos:line="4075" pos:column="21">-&gt;</op:operator><name pos:line="4075" pos:column="23">lpVtbl</name><op:operator pos:line="4075" pos:column="29">-&gt;</op:operator><name pos:line="4075" pos:column="31">AttrGet</name></name><argument_list pos:line="4075" pos:column="38">(<argument><expr><name pos:line="4075" pos:column="39">piolDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="4075" pos:column="48">&amp;</op:operator> <name pos:line="4075" pos:column="50">msoiolattrInFileSys</name><op:operator pos:line="4075" pos:column="69">)</op:operator> <op:operator pos:line="4075" pos:column="71">!=</op:operator> <lit:literal type="number" pos:line="4075" pos:column="74">0</lit:literal></expr>)</condition><then pos:line="4075" pos:column="76">
		<return pos:line="4076" pos:column="17">return <expr><name pos:line="4076" pos:column="24">S_OK</name></expr>;</return></then>
	<else pos:line="4077" pos:column="9">else
		<return pos:line="4078" pos:column="17">return <expr><name pos:line="4078" pos:column="24">S_FALSE</name></expr>;</return></else></if>
	}</block></function>

<function><type><name pos:line="4081" pos:column="1">__inline</name></type> <name pos:line="4081" pos:column="10">IMsoOLDocument_IsANewDocument</name> <parameter_list pos:line="4081" pos:column="40">(<param><decl><type><name pos:line="4081" pos:column="41">IMsoOLDocument</name> <type:modifier pos:line="4081" pos:column="56">*</type:modifier></type><name pos:line="4081" pos:column="57">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4082" pos:column="9">{
	<if pos:line="4083" pos:column="9">if <condition pos:line="4083" pos:column="12">(<expr><op:operator pos:line="4083" pos:column="13">(</op:operator><call><name><name pos:line="4083" pos:column="14">piolDoc</name><op:operator pos:line="4083" pos:column="21">-&gt;</op:operator><name pos:line="4083" pos:column="23">lpVtbl</name><op:operator pos:line="4083" pos:column="29">-&gt;</op:operator><name pos:line="4083" pos:column="31">AttrGet</name></name><argument_list pos:line="4083" pos:column="38">(<argument><expr><name pos:line="4083" pos:column="39">piolDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="4083" pos:column="48">&amp;</op:operator> <name pos:line="4083" pos:column="50">msoiolattrNewDocument</name><op:operator pos:line="4083" pos:column="71">)</op:operator> <op:operator pos:line="4083" pos:column="73">!=</op:operator> <lit:literal type="number" pos:line="4083" pos:column="76">0</lit:literal></expr>)</condition><then pos:line="4083" pos:column="78">
		<return pos:line="4084" pos:column="17">return <expr><name pos:line="4084" pos:column="24">S_OK</name></expr>;</return></then>
	<else pos:line="4085" pos:column="9">else
		<return pos:line="4086" pos:column="17">return <expr><name pos:line="4086" pos:column="24">S_FALSE</name></expr>;</return></else></if>
	}</block></function>

<function><type><name pos:line="4089" pos:column="1">__inline</name></type> <name pos:line="4089" pos:column="10">IMsoOLDocument_GetLoggingState</name> <parameter_list pos:line="4089" pos:column="41">(<param><decl><type><name pos:line="4089" pos:column="42">IMsoOLDocument</name> <type:modifier pos:line="4089" pos:column="57">*</type:modifier></type><name pos:line="4089" pos:column="58">piolDoc</name></decl></param>)</parameter_list> <name pos:line="4089" pos:column="67">CONST_METHOD_FF</name>
	<block pos:line="4090" pos:column="9">{
	<if pos:line="4091" pos:column="9">if <condition pos:line="4091" pos:column="12">(<expr><op:operator pos:line="4091" pos:column="13">(</op:operator><call><name><name pos:line="4091" pos:column="14">piolDoc</name><op:operator pos:line="4091" pos:column="21">-&gt;</op:operator><name pos:line="4091" pos:column="23">lpVtbl</name><op:operator pos:line="4091" pos:column="29">-&gt;</op:operator><name pos:line="4091" pos:column="31">AttrGet</name></name><argument_list pos:line="4091" pos:column="38">(<argument><expr><name pos:line="4091" pos:column="39">piolDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="4091" pos:column="48">&amp;</op:operator> <name pos:line="4091" pos:column="50">msoiolattrRenLogging</name><op:operator pos:line="4091" pos:column="70">)</op:operator> <op:operator pos:line="4091" pos:column="72">!=</op:operator> <lit:literal type="number" pos:line="4091" pos:column="75">0</lit:literal></expr>)</condition><then pos:line="4091" pos:column="77">
		<return pos:line="4092" pos:column="17">return <expr><name pos:line="4092" pos:column="24">MSO_S_IOLELS_REN_LOGGING</name></expr>;</return></then>
	<else pos:line="4093" pos:column="9">else
		<return pos:line="4094" pos:column="17">return <expr><name pos:line="4094" pos:column="24">MSO_S_IOLELS_NO_LOGGING</name></expr>;</return></else></if>
	}</block></function>

<function><type><name pos:line="4097" pos:column="1">__inline</name></type> <name pos:line="4097" pos:column="10">IMsoOLDocument_SetElsLoggingState</name> <parameter_list pos:line="4097" pos:column="44">(<param><decl><type><name pos:line="4097" pos:column="45">IMsoOLDocument</name> <type:modifier pos:line="4097" pos:column="60">*</type:modifier></type><name pos:line="4097" pos:column="61">piolDoc</name></decl></param>,
		<param><decl><type><name pos:line="4098" pos:column="17">MSOIOLELS</name></type> <name pos:line="4098" pos:column="27">elsLoggingState</name></decl></param>)</parameter_list>
	<block pos:line="4099" pos:column="9">{
	<if pos:line="4100" pos:column="9">if <condition pos:line="4100" pos:column="12">(<expr><name pos:line="4100" pos:column="13">elsLoggingState</name> <op:operator pos:line="4100" pos:column="29">==</op:operator> <name pos:line="4100" pos:column="32">msoiolelsRenLogging</name></expr>)</condition><then pos:line="4100" pos:column="52">
		<return pos:line="4101" pos:column="17">return <expr><call><name><name pos:line="4101" pos:column="24">piolDoc</name><op:operator pos:line="4101" pos:column="31">-&gt;</op:operator><name pos:line="4101" pos:column="33">lpVtbl</name><op:operator pos:line="4101" pos:column="39">-&gt;</op:operator><name pos:line="4101" pos:column="41">SetAttrInAttrMask</name></name><argument_list pos:line="4101" pos:column="58">(<argument><expr><name pos:line="4101" pos:column="59">piolDoc</name></expr></argument>, <argument><expr><name pos:line="4101" pos:column="68">msoiolattrRenLogging</name></expr></argument>, <argument><expr><name pos:line="4101" pos:column="90">msoiolattrRenLogging</name></expr></argument>)</argument_list></call></expr>;</return></then>
	<else pos:line="4102" pos:column="9">else
		<return pos:line="4103" pos:column="17">return <expr><call><name><name pos:line="4103" pos:column="24">piolDoc</name><op:operator pos:line="4103" pos:column="31">-&gt;</op:operator><name pos:line="4103" pos:column="33">lpVtbl</name><op:operator pos:line="4103" pos:column="39">-&gt;</op:operator><name pos:line="4103" pos:column="41">SetAttrInAttrMask</name></name><argument_list pos:line="4103" pos:column="58">(<argument><expr><name pos:line="4103" pos:column="59">piolDoc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4103" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><name pos:line="4103" pos:column="71">msoiolattrRenLogging</name></expr></argument>)</argument_list></call></expr>;</return></else></if>
	}</block></function>

<function><type><name pos:line="4106" pos:column="1">__inline</name></type> <name pos:line="4106" pos:column="10">IMsoOLDocument_GetMoniker</name> <parameter_list pos:line="4106" pos:column="36">(<param><decl><type><name pos:line="4106" pos:column="37">IMsoOLDocument</name> <type:modifier pos:line="4106" pos:column="52">*</type:modifier></type><name pos:line="4106" pos:column="53">piolDoc</name></decl></param>,
		<param><decl><type><name pos:line="4107" pos:column="17">IMoniker</name> <type:modifier pos:line="4107" pos:column="26">*</type:modifier><type:modifier pos:line="4107" pos:column="27">*</type:modifier></type><name pos:line="4107" pos:column="28">ppIMoniker</name></decl></param>)</parameter_list>
	<block pos:line="4108" pos:column="9">{ <return pos:line="4108" pos:column="11">return <expr><call><name><name pos:line="4108" pos:column="18">piolDoc</name><op:operator pos:line="4108" pos:column="25">-&gt;</op:operator><name pos:line="4108" pos:column="27">lpVtbl</name><op:operator pos:line="4108" pos:column="33">-&gt;</op:operator><name pos:line="4108" pos:column="35">GetInterface</name></name><argument_list pos:line="4108" pos:column="47">(<argument><expr><name pos:line="4108" pos:column="48">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4108" pos:column="57">(</op:operator><name pos:line="4108" pos:column="58">IUnknown</name> <op:operator pos:line="4108" pos:column="67">*</op:operator><op:operator pos:line="4108" pos:column="68">*</op:operator><op:operator pos:line="4108" pos:column="69">)</op:operator> <name pos:line="4108" pos:column="71">ppIMoniker</name></expr></argument>, <argument><expr><op:operator pos:line="4108" pos:column="83">&amp;</op:operator><name pos:line="4108" pos:column="84">IID_IMoniker</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>

<function><type><name pos:line="4110" pos:column="1">__inline</name></type> <name pos:line="4110" pos:column="10">IMsoOLDocument_GetIHtml</name> <parameter_list pos:line="4110" pos:column="34">(<param><decl><type><name pos:line="4110" pos:column="35">IMsoOLDocument</name> <type:modifier pos:line="4110" pos:column="50">*</type:modifier></type><name pos:line="4110" pos:column="51">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4111" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4112" pos:column="9">int</name></type> <name pos:line="4112" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4113" pos:column="9">piolDoc</name><op:operator pos:line="4113" pos:column="16">-&gt;</op:operator><name pos:line="4113" pos:column="18">lpVtbl</name><op:operator pos:line="4113" pos:column="24">-&gt;</op:operator><name pos:line="4113" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4113" pos:column="34">(<argument><expr><name pos:line="4113" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4113" pos:column="44">&amp;</op:operator><name pos:line="4113" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4113" pos:column="48">msoioltdiHtml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4114" pos:column="9">return <expr><name pos:line="4114" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4117" pos:column="1">__inline</name></type> <name pos:line="4117" pos:column="10">IMsoOLDocument_GetIMHtml</name> <parameter_list pos:line="4117" pos:column="35">(<param><decl><type><name pos:line="4117" pos:column="36">IMsoOLDocument</name> <type:modifier pos:line="4117" pos:column="51">*</type:modifier></type><name pos:line="4117" pos:column="52">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4118" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4119" pos:column="9">int</name></type> <name pos:line="4119" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4120" pos:column="9">piolDoc</name><op:operator pos:line="4120" pos:column="16">-&gt;</op:operator><name pos:line="4120" pos:column="18">lpVtbl</name><op:operator pos:line="4120" pos:column="24">-&gt;</op:operator><name pos:line="4120" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4120" pos:column="34">(<argument><expr><name pos:line="4120" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4120" pos:column="44">&amp;</op:operator><name pos:line="4120" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4120" pos:column="48">msoioltdiMHtml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4121" pos:column="9">return <expr><name pos:line="4121" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4124" pos:column="1">__inline</name></type> <name pos:line="4124" pos:column="10">IMsoOLDocument_GetIXml</name> <parameter_list pos:line="4124" pos:column="33">(<param><decl><type><name pos:line="4124" pos:column="34">IMsoOLDocument</name> <type:modifier pos:line="4124" pos:column="49">*</type:modifier></type><name pos:line="4124" pos:column="50">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4125" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4126" pos:column="9">int</name></type> <name pos:line="4126" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4127" pos:column="9">piolDoc</name><op:operator pos:line="4127" pos:column="16">-&gt;</op:operator><name pos:line="4127" pos:column="18">lpVtbl</name><op:operator pos:line="4127" pos:column="24">-&gt;</op:operator><name pos:line="4127" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4127" pos:column="34">(<argument><expr><name pos:line="4127" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4127" pos:column="44">&amp;</op:operator><name pos:line="4127" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4127" pos:column="48">msoioltdiXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4128" pos:column="9">return <expr><name pos:line="4128" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4131" pos:column="1">__inline</name></type> <name pos:line="4131" pos:column="10">IMsoOLDocument_GetISniffed</name> <parameter_list pos:line="4131" pos:column="37">(<param><decl><type><name pos:line="4131" pos:column="38">IMsoOLDocument</name> <type:modifier pos:line="4131" pos:column="53">*</type:modifier></type><name pos:line="4131" pos:column="54">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4132" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4133" pos:column="9">int</name></type> <name pos:line="4133" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4134" pos:column="9">piolDoc</name><op:operator pos:line="4134" pos:column="16">-&gt;</op:operator><name pos:line="4134" pos:column="18">lpVtbl</name><op:operator pos:line="4134" pos:column="24">-&gt;</op:operator><name pos:line="4134" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4134" pos:column="34">(<argument><expr><name pos:line="4134" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4134" pos:column="44">&amp;</op:operator><name pos:line="4134" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4134" pos:column="48">msoioltdiSniffed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4135" pos:column="9">return <expr><name pos:line="4135" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4138" pos:column="1">__inline</name></type> <name pos:line="4138" pos:column="10">IMsoOLDocument_GetIUseDefaultFolderSuffix</name><parameter_list pos:line="4138" pos:column="51">(<param><decl><type><name pos:line="4138" pos:column="52">IMsoOLDocument</name> <type:modifier pos:line="4138" pos:column="67">*</type:modifier></type><name pos:line="4138" pos:column="68">piolDoc</name></decl></param>)</parameter_list>
	<block pos:line="4139" pos:column="9">{
	<decl_stmt><decl><type><name pos:line="4140" pos:column="9">int</name></type> <name pos:line="4140" pos:column="13">i</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4141" pos:column="9">piolDoc</name><op:operator pos:line="4141" pos:column="16">-&gt;</op:operator><name pos:line="4141" pos:column="18">lpVtbl</name><op:operator pos:line="4141" pos:column="24">-&gt;</op:operator><name pos:line="4141" pos:column="26">GetPwTdi</name></name><argument_list pos:line="4141" pos:column="34">(<argument><expr><name pos:line="4141" pos:column="35">piolDoc</name></expr></argument>, <argument><expr><op:operator pos:line="4141" pos:column="44">&amp;</op:operator><name pos:line="4141" pos:column="45">i</name></expr></argument>, <argument><expr><name pos:line="4141" pos:column="48">msoioltdiUseDefaultFolderSuffix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4142" pos:column="9">return <expr><name pos:line="4142" pos:column="16">i</name></expr>;</return>
	}</block></function>

<function><type><name pos:line="4145" pos:column="1">__inline</name></type> <name pos:line="4145" pos:column="10">IMsoOLDocument_SetIUseDefaultFolderSuffix</name><parameter_list pos:line="4145" pos:column="51">(<param><decl><type><name pos:line="4145" pos:column="52">IMsoOLDocument</name> <type:modifier pos:line="4145" pos:column="67">*</type:modifier></type><name pos:line="4145" pos:column="68">piolDoc</name></decl></param>, <param><decl><type><name pos:line="4145" pos:column="77">int</name></type> <name pos:line="4145" pos:column="81">i</name></decl></param>)</parameter_list>
	<block pos:line="4146" pos:column="9">{
	<return pos:line="4147" pos:column="9">return <expr><call><name><name pos:line="4147" pos:column="16">piolDoc</name><op:operator pos:line="4147" pos:column="23">-&gt;</op:operator><name pos:line="4147" pos:column="25">lpVtbl</name><op:operator pos:line="4147" pos:column="31">-&gt;</op:operator><name pos:line="4147" pos:column="33">SetWTdi</name></name><argument_list pos:line="4147" pos:column="40">(<argument><expr><name pos:line="4147" pos:column="41">piolDoc</name></expr></argument>, <argument><expr><name pos:line="4147" pos:column="50">i</name></expr></argument>, <argument><expr><name pos:line="4147" pos:column="53">msoioltdiUseDefaultFolderSuffix</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
<cpp:endif pos:line="4149" pos:column="1">#<cpp:directive pos:line="4149" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4149" pos:column="8">// !defined(OFFICE_BUILD) &amp;&amp; !defined(__cplusplus)</comment>

<macro><name pos:line="4151" pos:column="1">MSOAPI_</name><argument_list pos:line="4151" pos:column="8">(<argument pos:line="4151" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="4151" pos:column="18">MsoHrPubmonParseDisplayName</name><argument_list pos:line="4151" pos:column="45">(
	<argument pos:line="4152" pos:column="9">LPBC pibc</argument>,
	<argument pos:line="4153" pos:column="9">LPCWSTR pwzDisplayName</argument>,
	<argument pos:line="4154" pos:column="9">IMoniker ** ppimk</argument>)</argument_list></macro><empty_stmt pos:line="4154" pos:column="27">;</empty_stmt>



<comment type="line" format="doxygen" pos:line="4158" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="4159" pos:column="1">// IMsoGSV</comment>

<comment type="line" pos:line="4161" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="4162" pos:column="1">// IMsoUnknown methods.</comment>
<cpp:define pos:line="4163" pos:column="1">#<cpp:directive pos:line="4163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4163" pos:column="9">IMsoGSV_QueryInterface</name><parameter_list pos:line="4163" pos:column="31">(<param><type><name pos:line="4163" pos:column="32">This</name></type></param>, <param><type><name pos:line="4163" pos:column="38">refiid</name></type></param>, <param><type><name pos:line="4163" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="4164" pos:column="17">(This)-&gt;lpVtbl-&gt;QueryInterface(This, refiid, ppvObject)</cpp:value></cpp:define>

<cpp:define pos:line="4166" pos:column="1">#<cpp:directive pos:line="4166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4166" pos:column="9">IMsoGSV_AddRef</name><parameter_list pos:line="4166" pos:column="23">(<param><type><name pos:line="4166" pos:column="24">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="4167" pos:column="17">(This)-&gt;lpVtbl-&gt;AddRef(This)</cpp:value></cpp:define>

<cpp:define pos:line="4169" pos:column="1">#<cpp:directive pos:line="4169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4169" pos:column="9">IMsoGSV_Release</name><parameter_list pos:line="4169" pos:column="24">(<param><type><name pos:line="4169" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="4170" pos:column="17">(This)-&gt;lpVtbl-&gt;Release(This)</cpp:value></cpp:define>

<comment type="line" pos:line="4172" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="4173" pos:column="1">// IMsoGSV methods.</comment>

<cpp:define pos:line="4175" pos:column="1">#<cpp:directive pos:line="4175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4175" pos:column="9">IMsoGSV_GetGsv</name><parameter_list pos:line="4175" pos:column="23">(<param><type><name pos:line="4175" pos:column="24">This</name></type></param>, <param><type><name pos:line="4175" pos:column="30">gsv</name></type></param>, <param><type><name pos:line="4175" pos:column="35">pv</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="4176" pos:column="17">(This)-&gt;lpVtbl-&gt;GetGsv(This, gsv, pv)</cpp:value></cpp:define>

<cpp:define pos:line="4178" pos:column="1">#<cpp:directive pos:line="4178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4178" pos:column="9">IMsoGSV_SetGsv</name><parameter_list pos:line="4178" pos:column="23">(<param><type><name pos:line="4178" pos:column="24">This</name></type></param>, <param><type><name pos:line="4178" pos:column="30">gsv</name></type></param>, <param><type><name pos:line="4178" pos:column="35">pv</name></type></param>)</parameter_list></cpp:macro> \
		<cpp:value pos:line="4179" pos:column="17">(This)-&gt;lpVtbl-&gt;SetGsv(This, gsv, pv)</cpp:value></cpp:define>


<cpp:endif pos:line="4182" pos:column="1">#<cpp:directive pos:line="4182" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4182" pos:column="8">// !__cplusplus</comment>

<comment type="line" pos:line="4184" pos:column="1">//BUG:CHINTANM this is ifndef cplusplus only need it for everyone. email TUNAE when ready</comment>
<macro><name pos:line="4185" pos:column="1">MSOAPI_</name><argument_list pos:line="4185" pos:column="8">(<argument pos:line="4185" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="4185" pos:column="18">MsoGetIMsoDocumentNotifyListI</name><argument_list pos:line="4185" pos:column="47">(<argument pos:line="4185" pos:column="48">IMsoDocumentNotifyList * * ppIMsoDocumentNotifyList</argument>, <argument pos:line="4185" pos:column="101">PFNDOCNOTIFYCALLBACK pfnDocNotifyCallback</argument>)</argument_list></macro><empty_stmt pos:line="4185" pos:column="143">;</empty_stmt>


<comment type="line" pos:line="4188" pos:column="1">// Tri-state for desire/ability for app to do preview</comment>
<typedef pos:line="4189" pos:column="1">typedef <type><enum pos:line="4189" pos:column="9">enum <name pos:line="4189" pos:column="14">_MSODesirePreview</name>
	<block pos:line="4190" pos:column="9">{
	<decl><name pos:line="4191" pos:column="9">msodmyesPreview</name></decl><op:operator pos:line="4191" pos:column="24">,</op:operator>  <comment type="line" pos:line="4191" pos:column="27">// App desires to do the preview</comment>
	<decl><name pos:line="4192" pos:column="9">msodmnoPreview</name></decl><op:operator pos:line="4192" pos:column="23">,</op:operator>   <comment type="line" pos:line="4192" pos:column="27">// App doesn't want to do the preview</comment>
	<decl><name pos:line="4193" pos:column="9">msodmcanPreview</name></decl><op:operator pos:line="4193" pos:column="24">,</op:operator>  <comment type="line" pos:line="4193" pos:column="27">// App can do the preview if DM cannot</comment>
	<decl><name pos:line="4194" pos:column="9">msodmnowPreview</name></decl><op:operator pos:line="4194" pos:column="24">,</op:operator>  <comment type="line" pos:line="4194" pos:column="27">// App wants to do the preview immediately (do not wait</comment>
							<comment type="line" pos:line="4195" pos:column="57">// for idle time)</comment>
	}</block></enum></type> <name pos:line="4196" pos:column="11">MSODesirePreview</name>;</typedef>

<comment type="line" format="doxygen" pos:line="4198" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="4199" pos:column="1">//</comment>
<comment type="line" pos:line="4200" pos:column="1">// Class used by applications to define the interface for app driven preview</comment>
<comment type="line" pos:line="4201" pos:column="1">//</comment>
<cpp:undef pos:line="4202" pos:column="1">#<cpp:directive pos:line="4202" pos:column="2">undef</cpp:directive> <name pos:line="4202" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="4203" pos:column="1">#<cpp:directive pos:line="4203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4203" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="4203" pos:column="19">IMsoAppPreview</cpp:value></cpp:define>
<macro><name pos:line="4204" pos:column="1">DECLARE_INTERFACE</name><argument_list pos:line="4204" pos:column="18">(<argument pos:line="4204" pos:column="19">IMsoAppPreview</argument>)</argument_list></macro>
	<block pos:line="4205" pos:column="9">{
	<comment type="line" pos:line="4206" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="4207" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="4208" pos:column="9">//</comment>
	<comment type="line" pos:line="4209" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="4210" pos:column="9">BEGIN_MSOINTERFACE</name>

<cpp:ifdef pos:line="4212" pos:column="1">#<cpp:directive pos:line="4212" pos:column="2">ifdef</cpp:directive> <name pos:line="4212" pos:column="8">NOTUSED</name></cpp:ifdef>
	<name pos:line="4213" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4213" pos:column="19">QueryInterface</name>) <parameter_list pos:line="4213" pos:column="35">(<param><decl><type><name pos:line="4213" pos:column="36">THIS_</name> <name pos:line="4213" pos:column="42">REFIID</name></type> <name pos:line="4213" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="4213" pos:column="57">void</name> <type:modifier pos:line="4213" pos:column="62">*</type:modifier> <type:modifier pos:line="4213" pos:column="64">*</type:modifier></type> <name pos:line="4213" pos:column="66">ppvObject</name></decl></param>)</parameter_list> <name pos:line="4213" pos:column="77">PURE</name>;</function_decl>
	<macro><name pos:line="4214" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4214" pos:column="19">(<argument pos:line="4214" pos:column="20">ULONG</argument>, <argument pos:line="4214" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4214" pos:column="35">(</op:operator><name pos:line="4214" pos:column="36">THIS</name><op:operator pos:line="4214" pos:column="40">)</op:operator> <name pos:line="4214" pos:column="42">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4215" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4215" pos:column="19">(<argument pos:line="4215" pos:column="20">ULONG</argument>, <argument pos:line="4215" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4215" pos:column="36">(</op:operator><name pos:line="4215" pos:column="37">THIS</name><op:operator pos:line="4215" pos:column="41">)</op:operator> <name pos:line="4215" pos:column="43">PURE</name></expr>;</expr_stmt>
<cpp:endif pos:line="4216" pos:column="1">#<cpp:directive pos:line="4216" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4216" pos:column="8">// NOTUSED</comment>
	<macro><name pos:line="4217" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4217" pos:column="19">(<argument pos:line="4217" pos:column="20">MSOBOOL</argument>, <argument pos:line="4217" pos:column="29">FEnableZoom</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4217" pos:column="42">(</op:operator><name pos:line="4217" pos:column="43">THIS_</name> const <name pos:line="4217" pos:column="55">WCHAR</name> <op:operator pos:line="4217" pos:column="61">*</op:operator> <name pos:line="4217" pos:column="63">szFile</name><op:operator pos:line="4217" pos:column="69">)</op:operator> <name pos:line="4217" pos:column="71">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4218" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4218" pos:column="19">(<argument pos:line="4218" pos:column="20">MSODesirePreview</argument>, <argument pos:line="4218" pos:column="38">DesirePreview</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4218" pos:column="53">(</op:operator><name pos:line="4218" pos:column="54">THIS_</name> const <name pos:line="4218" pos:column="66">WCHAR</name> <op:operator pos:line="4218" pos:column="72">*</op:operator> <name pos:line="4218" pos:column="74">szFile</name><op:operator pos:line="4218" pos:column="80">)</op:operator> <name pos:line="4218" pos:column="82">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4219" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4219" pos:column="19">(<argument pos:line="4219" pos:column="20">MSOBOOL</argument>, <argument pos:line="4219" pos:column="29">FOpenFile</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4219" pos:column="40">(</op:operator><name pos:line="4219" pos:column="41">THIS_</name> const <name pos:line="4219" pos:column="53">WCHAR</name> <op:operator pos:line="4219" pos:column="59">*</op:operator><name pos:line="4219" pos:column="60">szFile</name><op:operator pos:line="4219" pos:column="66">)</op:operator> <name pos:line="4219" pos:column="68">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4220" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4220" pos:column="19">(<argument pos:line="4220" pos:column="20">void</argument>, <argument pos:line="4220" pos:column="26">CloseFile</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4220" pos:column="37">(</op:operator><name pos:line="4220" pos:column="38">THIS</name><op:operator pos:line="4220" pos:column="42">)</op:operator> <name pos:line="4220" pos:column="44">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4221" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4221" pos:column="19">(<argument pos:line="4221" pos:column="20">unsigned int</argument>, <argument pos:line="4221" pos:column="34">WPictureProc</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="4221" pos:column="47">(</op:operator><name pos:line="4221" pos:column="48">THIS_</name>
				<name pos:line="4222" pos:column="33">UINT_PTR</name>	<name pos:line="4222" pos:column="49">tmm</name><op:operator pos:line="4222" pos:column="52">,</op:operator>
				<name pos:line="4223" pos:column="33">void</name> <op:operator pos:line="4223" pos:column="38">*</op:operator>			<name pos:line="4223" pos:column="57">psdmp</name><op:operator pos:line="4223" pos:column="62">,</op:operator>
				<name pos:line="4224" pos:column="33">UINT_PTR</name>	<name pos:line="4224" pos:column="49">filler1</name><op:operator pos:line="4224" pos:column="56">,</op:operator>
				<name pos:line="4225" pos:column="33">UINT_PTR</name>	<name pos:line="4225" pos:column="49">filler2</name><op:operator pos:line="4225" pos:column="56">,</op:operator>
				<name pos:line="4226" pos:column="33">UINT_PTR</name>	<name pos:line="4226" pos:column="49">tmc</name><op:operator pos:line="4226" pos:column="52">,</op:operator>
				<name pos:line="4227" pos:column="33">UINT_PTR</name>	<name pos:line="4227" pos:column="49">wParam</name><op:operator pos:line="4227" pos:column="55">)</op:operator> <name pos:line="4227" pos:column="57">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4228" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4228" pos:column="19">(<argument pos:line="4228" pos:column="20">MSOBOOL</argument>, <argument pos:line="4228" pos:column="29">FEnableStream</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4228" pos:column="44">(</op:operator><name pos:line="4228" pos:column="45">THIS</name><op:operator pos:line="4228" pos:column="49">)</op:operator> <name pos:line="4228" pos:column="51">PURE</name></expr>;</expr_stmt> <comment type="line" pos:line="4228" pos:column="57">//Return TRUE if you want FOpenStream instead of FOpenFile().</comment>
	                                                <comment type="line" pos:line="4229" pos:column="57">//Currently only used by themes.</comment>
	<macro><name pos:line="4230" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4230" pos:column="19">(<argument pos:line="4230" pos:column="20">MSOBOOL</argument>, <argument pos:line="4230" pos:column="29">FOpenStream</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4230" pos:column="42">(</op:operator><name pos:line="4230" pos:column="43">THIS_</name> const <name pos:line="4230" pos:column="55">IStream</name> <op:operator pos:line="4230" pos:column="63">*</op:operator><name pos:line="4230" pos:column="64">istm</name><op:operator pos:line="4230" pos:column="68">)</op:operator> <name pos:line="4230" pos:column="70">PURE</name></expr>;</expr_stmt>
	}</block><empty_stmt pos:line="4231" pos:column="10">;</empty_stmt>

<comment type="line" pos:line="4233" pos:column="1">// Debug only API for setting debug options.</comment>
<macro><name pos:line="4234" pos:column="1">MSOAPI_</name><argument_list pos:line="4234" pos:column="8">(<argument pos:line="4234" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4234" pos:column="18">MsoMemoryDebugDlg</name><argument_list pos:line="4234" pos:column="35">()</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:line="4236" pos:column="1">// Debug only API for seeing alerts.</comment>
<macro><name pos:line="4237" pos:column="1">MSOAPI_</name><argument_list pos:line="4237" pos:column="8">(<argument pos:line="4237" pos:column="9">HRESULT</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4237" pos:column="18">MsoAlertDebugDlg</name><argument_list pos:line="4237" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:line="4239" pos:column="1">#<cpp:directive pos:line="4239" pos:column="2">ifdef</cpp:directive> <name pos:line="4239" pos:column="8">VSMSODEBUG</name></cpp:ifdef>

<comment type="line" pos:line="4241" pos:column="1">// Debug only API for dumping indexes.</comment>
<comment type="line" pos:line="4242" pos:column="1">// sIndexDump points the custom index dump specification. If it is NULL,</comment>
<comment type="line" pos:line="4243" pos:column="1">// entire index is dumped out by default</comment>
<macro><name pos:line="4244" pos:column="1">MSOAPI_</name><argument_list pos:line="4244" pos:column="8">(<argument pos:line="4244" pos:column="9">BOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4244" pos:column="15">MsoDumpIndex</name><argument_list pos:line="4244" pos:column="27">(<argument><expr><name pos:line="4244" pos:column="28">WCHAR</name> <op:operator pos:line="4244" pos:column="34">*</op:operator> <name pos:line="4244" pos:column="36">wszIndex</name></expr></argument>, <argument><expr><name pos:line="4244" pos:column="46">MsoIndexDump</name> <op:operator pos:line="4244" pos:column="59">*</op:operator><name pos:line="4244" pos:column="60">psIndexDump</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="4245" pos:column="1">#<cpp:directive pos:line="4245" pos:column="2">else</cpp:directive></cpp:else>
<cpp:endif pos:line="4246" pos:column="1">#<cpp:directive pos:line="4246" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4246" pos:column="8">// VSMSODEBUG</comment>

<comment type="line" pos:line="4248" pos:column="1">// Help API</comment>
<comment type="line" pos:line="4249" pos:column="1">// UNDONE: this should be moved to offcapi.h since it is Office wide</comment>
<cpp:ifdef pos:line="4250" pos:column="1">#<cpp:directive pos:line="4250" pos:column="2">ifdef</cpp:directive> <name pos:line="4250" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="4251" pos:column="1">extern <lit:literal type="string" pos:line="4251" pos:column="8">"C"</lit:literal> <block pos:line="4251" pos:column="12">{
<cpp:endif pos:line="4252" pos:column="1">#<cpp:directive pos:line="4252" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4252" pos:column="8">// __cplusplus</comment>

<comment type="line" pos:line="4254" pos:column="1">// Type of function that is invoked as a help filter.  This function</comment>
<comment type="line" pos:line="4255" pos:column="1">// is called from Office File dialogs when help is requested.  hid has</comment>
<comment type="line" pos:line="4256" pos:column="1">// the context ID.  The app returns fTrue if it wants to handle this hid,</comment>
<comment type="line" pos:line="4257" pos:column="1">// fFalse if it wants office to handle it; alternatively, you can use the</comment>
<comment type="line" pos:line="4258" pos:column="1">// following defines:</comment>
<comment type="line" pos:line="4259" pos:column="1">//</comment>
<comment type="line" pos:line="4260" pos:column="1">//	MSOOFFHELP_YOU_DO_IT		Office should handle it.</comment>
<comment type="line" pos:line="4261" pos:column="1">//	MSOOFFHELP_I_DID_IT		I handled it.</comment>
<comment type="line" pos:line="4262" pos:column="1">//</comment>
<comment type="line" pos:line="4263" pos:column="1">// Prior to putting up the dialog (or at any time when it is up), call</comment>
<comment type="line" pos:line="4264" pos:column="1">// OfficeSetHelpFilter with a pointer to the function you want to filter</comment>
<comment type="line" pos:line="4265" pos:column="1">// help requests.</comment>
<comment type="line" pos:line="4266" pos:column="1">//</comment>

<cpp:define pos:line="4268" pos:column="1">#<cpp:directive pos:line="4268" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4268" pos:column="9">MSOOFFHELP_YOU_DO_IT</name></cpp:macro>			<cpp:value pos:line="4268" pos:column="49">0</cpp:value></cpp:define>
<cpp:define pos:line="4269" pos:column="1">#<cpp:directive pos:line="4269" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4269" pos:column="9">MSOOFFHELP_I_DID_IT</name></cpp:macro>			<cpp:value pos:line="4269" pos:column="49">1</cpp:value></cpp:define>

<typedef pos:line="4271" pos:column="1">typedef <function_decl><type><name pos:line="4271" pos:column="9">int</name></type> (<name pos:line="4271" pos:column="14">OFFOPEN_CALLBACK</name> <type:modifier pos:line="4271" pos:column="31">*</type:modifier><name pos:line="4271" pos:column="32">PFNFOFFHELPFILT</name>) <parameter_list pos:line="4271" pos:column="49">(<param><decl><type><name pos:line="4271" pos:column="50">void</name> <type:modifier pos:line="4271" pos:column="55">*</type:modifier></type><name pos:line="4271" pos:column="56">pvHelp</name></decl></param>,
		<param><decl><type><name pos:line="4272" pos:column="17">unsigned</name> <name pos:line="4272" pos:column="26">long</name></type> <name pos:line="4272" pos:column="31">hid</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name pos:line="4273" pos:column="1">void</name> <name pos:line="4273" pos:column="6">OFFOPEN_CALLBACK</name></type> <name pos:line="4273" pos:column="23">OfficeSetHelpFilter</name><parameter_list pos:line="4273" pos:column="42">(<param><decl><type><name pos:line="4273" pos:column="43">PFNFOFFHELPFILT</name></type> <name pos:line="4273" pos:column="59">pfnHelp</name></decl></param>,
		<param><decl><type><name pos:line="4274" pos:column="17">void</name> <type:modifier pos:line="4274" pos:column="22">*</type:modifier></type><name pos:line="4274" pos:column="23">pvHelp</name></decl></param>)</parameter_list>;</function_decl>

<comment type="line" pos:line="4276" pos:column="1">//	The following section defines symbols pertaining to the word morphology</comment>
<comment type="line" pos:line="4277" pos:column="1">//	databased used by the Word group.</comment>

<cpp:define pos:line="4279" pos:column="1">#<cpp:directive pos:line="4279" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4279" pos:column="9">prtNS</name></cpp:macro>			<cpp:value pos:line="4279" pos:column="33">0</cpp:value></cpp:define>	<comment type="line" pos:line="4279" pos:column="41">// These are parts of speech as returned in the</comment>
<cpp:define pos:line="4280" pos:column="1">#<cpp:directive pos:line="4280" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4280" pos:column="9">prtJJ</name></cpp:macro>			<cpp:value pos:line="4280" pos:column="33">1</cpp:value></cpp:define>	<comment type="line" pos:line="4280" pos:column="41">//  "pdwPart" parameter passed to some of the</comment>
<cpp:define pos:line="4281" pos:column="1">#<cpp:directive pos:line="4281" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4281" pos:column="9">prtRB</name></cpp:macro>			<cpp:value pos:line="4281" pos:column="33">2</cpp:value></cpp:define>	<comment type="line" pos:line="4281" pos:column="41">//  following calls.</comment>
<cpp:define pos:line="4282" pos:column="1">#<cpp:directive pos:line="4282" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4282" pos:column="9">prtNP</name></cpp:macro>			<cpp:value pos:line="4282" pos:column="33">3</cpp:value></cpp:define>
<cpp:define pos:line="4283" pos:column="1">#<cpp:directive pos:line="4283" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4283" pos:column="9">prtINF</name></cpp:macro>			<cpp:value pos:line="4283" pos:column="33">4</cpp:value></cpp:define>
<cpp:define pos:line="4284" pos:column="1">#<cpp:directive pos:line="4284" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4284" pos:column="9">prtED_EN</name></cpp:macro>		<cpp:value pos:line="4284" pos:column="33">5</cpp:value></cpp:define>
<cpp:define pos:line="4285" pos:column="1">#<cpp:directive pos:line="4285" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4285" pos:column="9">prtING</name></cpp:macro>			<cpp:value pos:line="4285" pos:column="33">6</cpp:value></cpp:define>
<cpp:define pos:line="4286" pos:column="1">#<cpp:directive pos:line="4286" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4286" pos:column="9">prt3PS</name></cpp:macro>			<cpp:value pos:line="4286" pos:column="33">7</cpp:value></cpp:define>
<cpp:define pos:line="4287" pos:column="1">#<cpp:directive pos:line="4287" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4287" pos:column="9">prtJJER</name></cpp:macro>			<cpp:value pos:line="4287" pos:column="33">8</cpp:value></cpp:define>
<cpp:define pos:line="4288" pos:column="1">#<cpp:directive pos:line="4288" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4288" pos:column="9">prtJJEST</name></cpp:macro>		<cpp:value pos:line="4288" pos:column="33">9</cpp:value></cpp:define>
<cpp:define pos:line="4289" pos:column="1">#<cpp:directive pos:line="4289" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4289" pos:column="9">prtNS_NP</name></cpp:macro>		<cpp:value pos:line="4289" pos:column="33">10</cpp:value></cpp:define>
<cpp:define pos:line="4290" pos:column="1">#<cpp:directive pos:line="4290" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4290" pos:column="9">prtRBER</name></cpp:macro>			<cpp:value pos:line="4290" pos:column="33">11</cpp:value></cpp:define>
<cpp:define pos:line="4291" pos:column="1">#<cpp:directive pos:line="4291" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4291" pos:column="9">prtRBEST</name></cpp:macro>		<cpp:value pos:line="4291" pos:column="33">12</cpp:value></cpp:define>
<cpp:define pos:line="4292" pos:column="1">#<cpp:directive pos:line="4292" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4292" pos:column="9">prtEN</name></cpp:macro>			<cpp:value pos:line="4292" pos:column="33">13</cpp:value></cpp:define>
<cpp:define pos:line="4293" pos:column="1">#<cpp:directive pos:line="4293" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4293" pos:column="9">prtED</name></cpp:macro>			<cpp:value pos:line="4293" pos:column="33">14</cpp:value></cpp:define>
<cpp:define pos:line="4294" pos:column="1">#<cpp:directive pos:line="4294" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4294" pos:column="9">prtINF_ED</name></cpp:macro>		<cpp:value pos:line="4294" pos:column="33">15</cpp:value></cpp:define>
<cpp:define pos:line="4295" pos:column="1">#<cpp:directive pos:line="4295" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4295" pos:column="9">prtINF_EN</name></cpp:macro>		<cpp:value pos:line="4295" pos:column="33">16</cpp:value></cpp:define>
<cpp:define pos:line="4296" pos:column="1">#<cpp:directive pos:line="4296" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4296" pos:column="9">prtINF_ED_EN</name></cpp:macro>	<cpp:value pos:line="4296" pos:column="25">17</cpp:value></cpp:define>
<cpp:define pos:line="4297" pos:column="1">#<cpp:directive pos:line="4297" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4297" pos:column="9">prtNOM</name></cpp:macro>			<cpp:value pos:line="4297" pos:column="33">18</cpp:value></cpp:define>
<cpp:define pos:line="4298" pos:column="1">#<cpp:directive pos:line="4298" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4298" pos:column="9">prtOBJ</name></cpp:macro>			<cpp:value pos:line="4298" pos:column="33">19</cpp:value></cpp:define>
<cpp:define pos:line="4299" pos:column="1">#<cpp:directive pos:line="4299" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4299" pos:column="9">prtPOSS1</name></cpp:macro>		<cpp:value pos:line="4299" pos:column="33">20</cpp:value></cpp:define>
<cpp:define pos:line="4300" pos:column="1">#<cpp:directive pos:line="4300" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4300" pos:column="9">prtPOSS2</name></cpp:macro>		<cpp:value pos:line="4300" pos:column="33">21</cpp:value></cpp:define>
<cpp:define pos:line="4301" pos:column="1">#<cpp:directive pos:line="4301" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4301" pos:column="9">prtREFL</name></cpp:macro>			<cpp:value pos:line="4301" pos:column="33">22</cpp:value></cpp:define>
<cpp:define pos:line="4302" pos:column="1">#<cpp:directive pos:line="4302" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4302" pos:column="9">prtPOSS1_POSS2</name></cpp:macro>	<cpp:value pos:line="4302" pos:column="25">23</cpp:value></cpp:define>
<cpp:define pos:line="4303" pos:column="1">#<cpp:directive pos:line="4303" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4303" pos:column="9">prtNOM_OBJ</name></cpp:macro>		<cpp:value pos:line="4303" pos:column="33">24</cpp:value></cpp:define>
<cpp:define pos:line="4304" pos:column="1">#<cpp:directive pos:line="4304" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4304" pos:column="9">prt3PS_ED</name></cpp:macro>		<cpp:value pos:line="4304" pos:column="33">25</cpp:value></cpp:define>
<cpp:define pos:line="4305" pos:column="1">#<cpp:directive pos:line="4305" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4305" pos:column="9">prtINF_3PS</name></cpp:macro>		<cpp:value pos:line="4305" pos:column="33">26</cpp:value></cpp:define>
<cpp:define pos:line="4306" pos:column="1">#<cpp:directive pos:line="4306" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4306" pos:column="9">prtEMPTY</name></cpp:macro>		<cpp:value pos:line="4306" pos:column="33">27</cpp:value></cpp:define>
<cpp:define pos:line="4307" pos:column="1">#<cpp:directive pos:line="4307" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4307" pos:column="9">prtBED_BEN</name></cpp:macro>		<cpp:value pos:line="4307" pos:column="33">28</cpp:value></cpp:define>
<cpp:define pos:line="4308" pos:column="1">#<cpp:directive pos:line="4308" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4308" pos:column="9">prtBING</name></cpp:macro>			<cpp:value pos:line="4308" pos:column="33">29</cpp:value></cpp:define>
<cpp:define pos:line="4309" pos:column="1">#<cpp:directive pos:line="4309" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4309" pos:column="9">prtN3PS</name></cpp:macro>			<cpp:value pos:line="4309" pos:column="33">30</cpp:value></cpp:define>
<cpp:define pos:line="4310" pos:column="1">#<cpp:directive pos:line="4310" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4310" pos:column="9">prtNINF</name></cpp:macro>			<cpp:value pos:line="4310" pos:column="33">31</cpp:value></cpp:define>
<cpp:define pos:line="4311" pos:column="1">#<cpp:directive pos:line="4311" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4311" pos:column="9">prtNED</name></cpp:macro>			<cpp:value pos:line="4311" pos:column="33">32</cpp:value></cpp:define>
<cpp:define pos:line="4312" pos:column="1">#<cpp:directive pos:line="4312" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4312" pos:column="9">prtOBJ_POSS1</name></cpp:macro>	<cpp:value pos:line="4312" pos:column="25">33</cpp:value></cpp:define>
<cpp:define pos:line="4313" pos:column="1">#<cpp:directive pos:line="4313" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4313" pos:column="9">prtPOSS2_POSS1</name></cpp:macro>	<cpp:value pos:line="4313" pos:column="25">34</cpp:value></cpp:define>
<cpp:define pos:line="4314" pos:column="1">#<cpp:directive pos:line="4314" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4314" pos:column="9">prtBNP</name></cpp:macro>			<cpp:value pos:line="4314" pos:column="33">35</cpp:value></cpp:define>
<cpp:define pos:line="4315" pos:column="1">#<cpp:directive pos:line="4315" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4315" pos:column="9">prtING_ED_EN</name></cpp:macro>	<cpp:value pos:line="4315" pos:column="25">36</cpp:value></cpp:define>
<cpp:define pos:line="4316" pos:column="1">#<cpp:directive pos:line="4316" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="4316" pos:column="9">prtN3PS_NED</name></cpp:macro>		<cpp:value pos:line="4316" pos:column="33">37</cpp:value></cpp:define>

<typedef pos:line="4318" pos:column="1">typedef <type><name pos:line="4318" pos:column="9">VOID</name> <type:modifier pos:line="4318" pos:column="14">*</type:modifier></type> <name pos:line="4318" pos:column="16">PMORPH</name>;</typedef>

<macro><name pos:line="4320" pos:column="1">MSOAPI_</name><argument_list pos:line="4320" pos:column="8">(<argument pos:line="4320" pos:column="9">PMORPH</argument>)</argument_list></macro> <macro><name pos:line="4320" pos:column="17">PmorphOpenMorph</name><argument_list pos:line="4320" pos:column="32">(
	<argument pos:line="4321" pos:column="9">const WCHAR *pwzFilename</argument>, <argument pos:line="4321" pos:column="35">LCID lcid</argument>)</argument_list></macro><empty_stmt pos:line="4321" pos:column="45">;</empty_stmt>

<macro><name pos:line="4323" pos:column="1">MSOAPI_</name><argument_list pos:line="4323" pos:column="8">(<argument pos:line="4323" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4323" pos:column="15">FGetFirstRingEntry</name><argument_list pos:line="4323" pos:column="33">(
	<argument pos:line="4324" pos:column="9">PMORPH pmorph</argument>,
	<argument pos:line="4325" pos:column="9">BYTE * szWord</argument>,
	<argument pos:line="4326" pos:column="9">DWORD * pdwPart</argument>)</argument_list></macro><empty_stmt pos:line="4326" pos:column="25">;</empty_stmt>

<macro><name pos:line="4328" pos:column="1">MSOAPI_</name><argument_list pos:line="4328" pos:column="8">(<argument pos:line="4328" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4328" pos:column="15">FGetLemma</name><argument_list pos:line="4328" pos:column="24">(
	<argument pos:line="4329" pos:column="9">PMORPH pmorph</argument>,
	<argument pos:line="4330" pos:column="9">BYTE * szWord</argument>,
	<argument pos:line="4331" pos:column="9">DWORD * pdwPart</argument>)</argument_list></macro><empty_stmt pos:line="4331" pos:column="25">;</empty_stmt>

<macro><name pos:line="4333" pos:column="1">MSOAPIXX_</name><argument_list pos:line="4333" pos:column="10">(<argument pos:line="4333" pos:column="11">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4333" pos:column="17">FGetNextRingElement</name><argument_list pos:line="4333" pos:column="36">(
	<argument pos:line="4334" pos:column="9">PMORPH pmorph</argument>,
	<argument pos:line="4335" pos:column="9">BYTE * szWord</argument>,
	<argument pos:line="4336" pos:column="9">DWORD * pdwPart</argument>)</argument_list></macro><empty_stmt pos:line="4336" pos:column="25">;</empty_stmt>

<macro><name pos:line="4338" pos:column="1">MSOAPI_</name><argument_list pos:line="4338" pos:column="8">(<argument pos:line="4338" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4338" pos:column="15">FGetNextRingEntry</name><argument_list pos:line="4338" pos:column="32">(
	<argument pos:line="4339" pos:column="9">PMORPH pmorph</argument>,
	<argument pos:line="4340" pos:column="9">DWORD * pdwPart</argument>)</argument_list></macro><empty_stmt pos:line="4340" pos:column="25">;</empty_stmt>

<macro><name pos:line="4342" pos:column="1">MSOAPI_</name><argument_list pos:line="4342" pos:column="8">(<argument pos:line="4342" pos:column="9">void</argument>)</argument_list></macro> <macro><name pos:line="4342" pos:column="15">CloseMorph</name><argument_list pos:line="4342" pos:column="25">(
	<argument pos:line="4343" pos:column="9">PMORPH pmorph</argument>)</argument_list></macro><empty_stmt pos:line="4343" pos:column="23">;</empty_stmt>

<comment type="line" pos:line="4345" pos:column="1">// Retrieves a search object for VBE.</comment>
<macro><name pos:line="4346" pos:column="1">MSOAPI_</name><argument_list pos:line="4346" pos:column="8">(<argument pos:line="4346" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4346" pos:column="15">MsoFGetFFSearch</name><argument_list pos:line="4346" pos:column="30">(
	<argument pos:line="4347" pos:column="9">HMSOINST hinst</argument>,
	<argument pos:line="4348" pos:column="9">VARIANT *pvarg</argument>)</argument_list></macro><empty_stmt pos:line="4348" pos:column="24">;</empty_stmt>

<macro><name pos:line="4350" pos:column="1">MSOAPI_</name><argument_list pos:line="4350" pos:column="8">(<argument pos:line="4350" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4350" pos:column="15">MsoFGetOAFileDialog</name><argument_list pos:line="4350" pos:column="34">(
	<argument pos:line="4351" pos:column="9">HMSOINST pinst</argument>,
	<argument pos:line="4352" pos:column="9">MsoFileDialogType type</argument>,
	<argument pos:line="4353" pos:column="9">HWND hwnd</argument>,
	<argument pos:line="4354" pos:column="9">WCHAR **rgwzFilters</argument>,
	<argument pos:line="4355" pos:column="9">int cFilters</argument>,
	<argument pos:line="4356" pos:column="9">IMsoFileTypeList **ppfiletypelist</argument>,
	<argument pos:line="4357" pos:column="9">PFNFDAACTIONFUNCTION pfnExecute</argument>,
	<argument pos:line="4358" pos:column="9">IDispatch** ppiDispatch</argument>)</argument_list></macro><empty_stmt pos:line="4358" pos:column="33">;</empty_stmt>

<comment type="line" pos:line="4360" pos:column="1">// This API allows Test Wizard to get the Open Dialog Look In dropdown strings.</comment>
<comment type="line" pos:line="4361" pos:column="1">// Contact: James Rodrigues</comment>
<macro><name pos:line="4362" pos:column="1">MSOAPIX_</name><argument_list pos:line="4362" pos:column="9">(<argument pos:line="4362" pos:column="10">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4362" pos:column="16">TW_ListNameFOR_TESTING_ONLY</name><argument_list pos:line="4362" pos:column="43">(
	<argument><expr><name pos:line="4363" pos:column="9">WCHAR</name> <op:operator pos:line="4363" pos:column="15">*</op:operator><name pos:line="4363" pos:column="16">wzBuf</name></expr></argument>,
	<argument><expr><name pos:line="4364" pos:column="9">WCHAR</name> <op:operator pos:line="4364" pos:column="15">*</op:operator><name pos:line="4364" pos:column="16">pDisplayName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="4366" pos:column="1">MSOAPIX_</name><argument_list pos:line="4366" pos:column="9">(<argument pos:line="4366" pos:column="10">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="4366" pos:column="19">MsoHrHttpUrlToPsfPidl</name><argument_list pos:line="4366" pos:column="40">(
	 <argument pos:line="4367" pos:column="10">const WCHAR *pwzUrl</argument>,
	 <argument pos:line="4368" pos:column="10">LPSHELLFOLDER *ppsf</argument>,
	 <argument pos:line="4369" pos:column="10">LPITEMIDLIST *ppidl</argument>,
	 <argument pos:line="4370" pos:column="10">LPITEMIDLIST *ppidlParent</argument>,
	 <argument pos:line="4371" pos:column="10">ULONG *pcchEaten</argument>,
	 <argument pos:line="4372" pos:column="10">BOOL fAllowNoExist</argument>,
	 <argument pos:line="4373" pos:column="10">BOOL fRelativePath</argument>)</argument_list></macro><empty_stmt pos:line="4373" pos:column="29">;</empty_stmt>

<comment type="line" pos:line="4375" pos:column="1">// Computes a 32-bit CRC for the given byte sequence...</comment>
<macro><name pos:line="4376" pos:column="1">MSOAPI_</name><argument_list pos:line="4376" pos:column="8">(<argument pos:line="4376" pos:column="9">ULONG</argument>)</argument_list></macro> <macro><name pos:line="4376" pos:column="16">MsoCrc32Compute</name><argument_list pos:line="4376" pos:column="31">(<argument pos:line="4376" pos:column="32">ULONG ulCrc</argument>, <argument pos:line="4376" pos:column="45">const BYTE *pbData</argument>, <argument pos:line="4376" pos:column="65">int cbData</argument>)</argument_list></macro><empty_stmt pos:line="4376" pos:column="76">;</empty_stmt>

<comment type="line" pos:line="4378" pos:column="1">// Returns the 32-bit CRC for the given collab path...</comment>
<macro><name pos:line="4379" pos:column="1">MSOAPI_</name><argument_list pos:line="4379" pos:column="8">(<argument pos:line="4379" pos:column="9">ULONG</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4379" pos:column="16">MsoCrc32ComputeForCollab</name><argument_list pos:line="4379" pos:column="40">(<argument><expr pos:line="4379" pos:column="41">const <name pos:line="4379" pos:column="47">WCHAR</name> <op:operator pos:line="4379" pos:column="53">*</op:operator><name pos:line="4379" pos:column="54">wzPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name pos:line="4381" pos:column="1">int</name></type> <name pos:line="4381" pos:column="5">MsoNetHoodResolveLink</name><parameter_list pos:line="4381" pos:column="26">(<param><decl><type><specifier pos:line="4381" pos:column="27">const</specifier> <name pos:line="4381" pos:column="33">WCHAR</name> <type:modifier pos:line="4381" pos:column="39">*</type:modifier></type><name pos:line="4381" pos:column="40">wzLink</name></decl></param>, <param><decl><type><name pos:line="4381" pos:column="48">WCHAR</name> <type:modifier pos:line="4381" pos:column="54">*</type:modifier></type><name pos:line="4381" pos:column="55">wzTarget</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="4382" pos:column="1">int</name></type> <name pos:line="4382" pos:column="5">MsoGetNetHoodShellFolderPath</name><parameter_list pos:line="4382" pos:column="33">(<param><decl><type><name pos:line="4382" pos:column="34">WCHAR</name> <type:modifier pos:line="4382" pos:column="40">*</type:modifier></type><name pos:line="4382" pos:column="41">wzPath</name></decl></param>, <param><decl><type><name pos:line="4382" pos:column="49">LPCITEMIDLIST</name></type> <name pos:line="4382" pos:column="63">pidl</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="4383" pos:column="1">void</name></type> <name pos:line="4383" pos:column="6">MsoGetFTPLocationsString</name><parameter_list pos:line="4383" pos:column="30">(<param><decl><type><name pos:line="4383" pos:column="31">WCHAR</name> <type:modifier pos:line="4383" pos:column="37">*</type:modifier></type><name pos:line="4383" pos:column="38">wzFTPLocation</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="4384" pos:column="1">int</name></type> <name pos:line="4384" pos:column="5">MsoGetShellFolderPath</name><parameter_list pos:line="4384" pos:column="26">(<param><decl><type><name pos:line="4384" pos:column="27">WCHAR</name> <type:modifier pos:line="4384" pos:column="33">*</type:modifier></type><name pos:line="4384" pos:column="34">wzPath</name></decl></param>, <param><decl><type><name pos:line="4384" pos:column="42">LPCITEMIDLIST</name></type> <name pos:line="4384" pos:column="56">pidl</name></decl></param>)</parameter_list>;</function_decl>

<macro><name pos:line="4386" pos:column="1">MSOAPI_</name><argument_list pos:line="4386" pos:column="8">(<argument pos:line="4386" pos:column="9">HRESULT</argument>)</argument_list></macro> <macro><name pos:line="4386" pos:column="18">MsoHrPSFCreateIOLDocFromPersistent</name><argument_list pos:line="4386" pos:column="52">(<argument pos:line="4386" pos:column="53">LPWSTR lpwzPersistent</argument>, <argument pos:line="4386" pos:column="76">IMsoOLDocument **ppioldoc</argument>)</argument_list></macro><empty_stmt pos:line="4386" pos:column="102">;</empty_stmt>
<macro><name pos:line="4387" pos:column="1">MSOAPI_</name><argument_list pos:line="4387" pos:column="8">(<argument pos:line="4387" pos:column="9">void</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4387" pos:column="15">MsoGetFilenameCurFindFileDlg</name><argument_list pos:line="4387" pos:column="43">(<argument><expr><name pos:line="4387" pos:column="44">WCHAR</name> <op:operator pos:line="4387" pos:column="50">*</op:operator><name pos:line="4387" pos:column="51">xsz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name pos:line="4389" pos:column="1">MSOAPI_</name><argument_list pos:line="4389" pos:column="8">(<argument pos:line="4389" pos:column="9">BOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4389" pos:column="15">MsoFHidePathsInAlerts</name><argument_list pos:line="4389" pos:column="36">(<argument><expr><name pos:line="4389" pos:column="37">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name pos:line="4390" pos:column="1">MSOAPI_</name><argument_list pos:line="4390" pos:column="8">(<argument pos:line="4390" pos:column="9">BOOL</argument>)</argument_list></macro> <macro><name pos:line="4390" pos:column="15">MsoFSanitizePath</name><argument_list pos:line="4390" pos:column="31">(<argument pos:line="4390" pos:column="32">const WCHAR *wzPath</argument>, <argument pos:line="4390" pos:column="53">WCHAR *wzOut</argument>, <argument pos:line="4390" pos:column="67">int cchWzOut</argument>)</argument_list></macro><empty_stmt pos:line="4390" pos:column="80">;</empty_stmt>
<macro><name pos:line="4391" pos:column="1">MSOAPI_</name><argument_list pos:line="4391" pos:column="8">(<argument pos:line="4391" pos:column="9">BOOL</argument>)</argument_list></macro> <expr_stmt><expr><call><name pos:line="4391" pos:column="15">MsoFFileDialogUp</name><argument_list pos:line="4391" pos:column="31">(<argument><expr><name pos:line="4391" pos:column="32">void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" format="doxygen" pos:line="4393" pos:column="1">///////////////////////////////////////////////////////////////////////////////</comment>
<comment type="line" pos:line="4394" pos:column="1">// IMsoAsyncStreeam</comment>
<comment type="line" pos:line="4395" pos:column="1">//</comment>

<cpp:undef pos:line="4397" pos:column="1">#<cpp:directive pos:line="4397" pos:column="2">undef</cpp:directive> <name pos:line="4397" pos:column="8">INTERFACE</name></cpp:undef>
<cpp:define pos:line="4398" pos:column="1">#<cpp:directive pos:line="4398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4398" pos:column="9">INTERFACE</name></cpp:macro> <cpp:value pos:line="4398" pos:column="19">IMsoAsyncStream</cpp:value></cpp:define>

<macro><name pos:line="4400" pos:column="1">DECLARE_INTERFACE_</name><argument_list pos:line="4400" pos:column="19">(<argument pos:line="4400" pos:column="20">IMsoAsyncStream</argument>, <argument pos:line="4400" pos:column="37">IStream</argument>)</argument_list></macro>
<block pos:line="4401" pos:column="1">{
	<comment type="line" pos:line="4402" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="4403" pos:column="9">// Begin Interface</comment>
	<comment type="line" pos:line="4404" pos:column="9">//</comment>
	<comment type="line" pos:line="4405" pos:column="9">// This is important on the Mac.</comment>
	<function_decl><type><name pos:line="4406" pos:column="9">BEGIN_MSOINTERFACE</name>

	<comment type="line" pos:line="4408" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="4409" pos:column="9">// IUnknown Methods</comment>

	<name pos:line="4411" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4411" pos:column="19">QueryInterface</name>) <parameter_list pos:line="4411" pos:column="35">(<param><decl><type><name pos:line="4411" pos:column="36">THIS_</name> <name pos:line="4411" pos:column="42">REFIID</name></type> <name pos:line="4411" pos:column="49">refiid</name></decl></param>, <param><decl><type><name pos:line="4411" pos:column="57">void</name> <type:modifier pos:line="4411" pos:column="62">*</type:modifier> <type:modifier pos:line="4411" pos:column="64">*</type:modifier></type> <name pos:line="4411" pos:column="66">ppvObject</name></decl></param>)</parameter_list> <name pos:line="4411" pos:column="77">PURE</name>;</function_decl>
	<macro><name pos:line="4412" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4412" pos:column="19">(<argument pos:line="4412" pos:column="20">ULONG</argument>, <argument pos:line="4412" pos:column="27">AddRef</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4412" pos:column="35">(</op:operator><name pos:line="4412" pos:column="36">THIS</name><op:operator pos:line="4412" pos:column="40">)</op:operator> <name pos:line="4412" pos:column="42">PURE</name></expr>;</expr_stmt>
	<macro><name pos:line="4413" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4413" pos:column="19">(<argument pos:line="4413" pos:column="20">ULONG</argument>, <argument pos:line="4413" pos:column="27">Release</argument>)</argument_list></macro> <expr_stmt><expr><op:operator pos:line="4413" pos:column="36">(</op:operator><name pos:line="4413" pos:column="37">THIS</name><op:operator pos:line="4413" pos:column="41">)</op:operator> <name pos:line="4413" pos:column="43">PURE</name></expr>;</expr_stmt>

	<comment type="line" pos:line="4415" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="4416" pos:column="9">// IStream methods.</comment>
	<function_decl><type><name pos:line="4417" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4417" pos:column="19">Read</name>) <parameter_list pos:line="4417" pos:column="25">(<param><decl><type><name pos:line="4417" pos:column="26">THIS_</name> <name pos:line="4417" pos:column="32">void</name> <type:modifier pos:line="4417" pos:column="37">*</type:modifier></type><name pos:line="4417" pos:column="38">pv</name></decl></param>, <param><decl><type><name pos:line="4417" pos:column="42">ULONG</name></type> <name pos:line="4417" pos:column="48">cb</name></decl></param>, <param><decl><type><name pos:line="4417" pos:column="52">ULONG</name> <type:modifier pos:line="4417" pos:column="58">*</type:modifier></type><name pos:line="4417" pos:column="59">pcbRead</name></decl></param>)</parameter_list> <name pos:line="4417" pos:column="68">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4418" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4418" pos:column="19">Write</name>) <parameter_list pos:line="4418" pos:column="26">(<param><decl><type><name pos:line="4418" pos:column="27">THIS_</name> <specifier pos:line="4418" pos:column="33">const</specifier> <name pos:line="4418" pos:column="39">void</name> <type:modifier pos:line="4418" pos:column="44">*</type:modifier></type><name pos:line="4418" pos:column="45">pv</name></decl></param>, <param><decl><type><name pos:line="4418" pos:column="49">ULONG</name></type> <name pos:line="4418" pos:column="55">cb</name></decl></param>, <param><decl><type><name pos:line="4418" pos:column="59">ULONG</name> <type:modifier pos:line="4418" pos:column="65">*</type:modifier></type><name pos:line="4418" pos:column="66">pcbWritten</name></decl></param>)</parameter_list> <name pos:line="4418" pos:column="78">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4419" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4419" pos:column="19">Seek</name>) <parameter_list pos:line="4419" pos:column="25">(<param><decl><type><name pos:line="4419" pos:column="26">THIS_</name> <name pos:line="4419" pos:column="32">LARGE_INTEGER</name></type> <name pos:line="4419" pos:column="46">dlibMove</name></decl></param>, <param><decl><type><name pos:line="4419" pos:column="56">DWORD</name></type> <name pos:line="4419" pos:column="62">dwOrigin</name></decl></param>,
			<param><decl><type><name pos:line="4420" pos:column="25">ULARGE_INTEGER</name> <type:modifier pos:line="4420" pos:column="40">*</type:modifier></type><name pos:line="4420" pos:column="41">plibNewPosition</name></decl></param>)</parameter_list> <name pos:line="4420" pos:column="58">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4421" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4421" pos:column="19">SetSize</name>) <parameter_list pos:line="4421" pos:column="28">(<param><decl><type><name pos:line="4421" pos:column="29">THIS_</name> <name pos:line="4421" pos:column="35">ULARGE_INTEGER</name></type> <name pos:line="4421" pos:column="50">libNewSize</name></decl></param>)</parameter_list> <name pos:line="4421" pos:column="62">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4422" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4422" pos:column="19">CopyTo</name>) <parameter_list pos:line="4422" pos:column="27">(<param><decl><type><name pos:line="4422" pos:column="28">THIS_</name> <name pos:line="4422" pos:column="34">IStream</name> <type:modifier pos:line="4422" pos:column="42">*</type:modifier></type><name pos:line="4422" pos:column="43">pstm</name></decl></param>, <param><decl><type><name pos:line="4422" pos:column="49">ULARGE_INTEGER</name></type> <name pos:line="4422" pos:column="64">cb</name></decl></param>,
			<param><decl><type><name pos:line="4423" pos:column="25">ULARGE_INTEGER</name> <type:modifier pos:line="4423" pos:column="40">*</type:modifier></type><name pos:line="4423" pos:column="41">pcbRead</name></decl></param>, <param><decl><type><name pos:line="4423" pos:column="50">ULARGE_INTEGER</name> <type:modifier pos:line="4423" pos:column="65">*</type:modifier></type><name pos:line="4423" pos:column="66">pcbWritten</name></decl></param>)</parameter_list> <name pos:line="4423" pos:column="78">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4424" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4424" pos:column="19">Commit</name>) <parameter_list pos:line="4424" pos:column="27">(<param><decl><type><name pos:line="4424" pos:column="28">THIS_</name> <name pos:line="4424" pos:column="34">DWORD</name></type> <name pos:line="4424" pos:column="40">grfCommitFlags</name></decl></param>)</parameter_list> <name pos:line="4424" pos:column="56">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4425" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4425" pos:column="19">Revert</name>) <parameter_list pos:line="4425" pos:column="27">(<param><decl><type><name pos:line="4425" pos:column="28">THIS</name></type></decl></param>)</parameter_list> <name pos:line="4425" pos:column="34">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4426" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4426" pos:column="19">LockRegion</name>) <parameter_list pos:line="4426" pos:column="31">(<param><decl><type><name pos:line="4426" pos:column="32">THIS_</name> <name pos:line="4426" pos:column="38">ULARGE_INTEGER</name></type> <name pos:line="4426" pos:column="53">libOffset</name></decl></param>, <param><decl><type><name pos:line="4426" pos:column="64">ULARGE_INTEGER</name></type> <name pos:line="4426" pos:column="79">cb</name></decl></param>,
			<param><decl><type><name pos:line="4427" pos:column="25">DWORD</name></type> <name pos:line="4427" pos:column="31">dwLockType</name></decl></param>)</parameter_list> <name pos:line="4427" pos:column="43">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4428" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4428" pos:column="19">UnlockRegion</name>) <parameter_list pos:line="4428" pos:column="33">(<param><decl><type><name pos:line="4428" pos:column="34">THIS_</name> <name pos:line="4428" pos:column="40">ULARGE_INTEGER</name></type> <name pos:line="4428" pos:column="55">libOffset</name></decl></param>, <param><decl><type><name pos:line="4428" pos:column="66">ULARGE_INTEGER</name></type> <name pos:line="4428" pos:column="81">cb</name></decl></param>,
			<param><decl><type><name pos:line="4429" pos:column="25">DWORD</name></type> <name pos:line="4429" pos:column="31">dwLockType</name></decl></param>)</parameter_list> <name pos:line="4429" pos:column="43">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4430" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4430" pos:column="19">Stat</name>) <parameter_list pos:line="4430" pos:column="25">(<param><decl><type><name pos:line="4430" pos:column="26">THIS_</name> <name pos:line="4430" pos:column="32">STATSTG</name> <type:modifier pos:line="4430" pos:column="40">*</type:modifier></type><name pos:line="4430" pos:column="41">pstatstg</name></decl></param>, <param><decl><type><name pos:line="4430" pos:column="51">DWORD</name></type> <name pos:line="4430" pos:column="57">grfStatFlag</name></decl></param>)</parameter_list> <name pos:line="4430" pos:column="70">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4431" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4431" pos:column="19">Clone</name>) <parameter_list pos:line="4431" pos:column="26">(<param><decl><type><name pos:line="4431" pos:column="27">THIS_</name> <name pos:line="4431" pos:column="33">IStream</name> <type:modifier pos:line="4431" pos:column="41">*</type:modifier><type:modifier pos:line="4431" pos:column="42">*</type:modifier></type><name pos:line="4431" pos:column="43">ppstm</name></decl></param>)</parameter_list> <name pos:line="4431" pos:column="50">PURE</name>;</function_decl>

	<comment type="line" pos:line="4433" pos:column="9">// ------------------------------------------------------------------------</comment>
	<comment type="line" pos:line="4434" pos:column="9">// IMsoAsyncStream methods.</comment>
	<function_decl><type><name pos:line="4435" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4435" pos:column="19">NewDataStg</name>) <parameter_list pos:line="4435" pos:column="31">(<param><decl><type><name pos:line="4435" pos:column="32">THIS_</name> <name pos:line="4435" pos:column="38">STGMEDIUM</name> <type:modifier pos:line="4435" pos:column="48">*</type:modifier></type><name pos:line="4435" pos:column="49">pstgmed</name></decl></param>, <param><decl><type><name pos:line="4435" pos:column="58">BOOL</name></type> <name pos:line="4435" pos:column="63">fLast</name></decl></param>)</parameter_list> <name pos:line="4435" pos:column="70">PURE</name>;</function_decl>
	<macro><name pos:line="4436" pos:column="9">MSOMETHOD_</name><argument_list pos:line="4436" pos:column="19">(<argument pos:line="4436" pos:column="20">const WCHAR *</argument>, <argument pos:line="4436" pos:column="35">WzFilenameGet</argument>)</argument_list></macro><expr_stmt><expr><op:operator pos:line="4436" pos:column="49">(</op:operator><name pos:line="4436" pos:column="50">THIS</name><op:operator pos:line="4436" pos:column="54">)</op:operator> <name pos:line="4436" pos:column="56">PURE</name></expr>;</expr_stmt>
	<function_decl><type><name pos:line="4437" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4437" pos:column="19">SetStatus</name>)<parameter_list pos:line="4437" pos:column="29">(<param><decl><type><name pos:line="4437" pos:column="30">THIS_</name> <name pos:line="4437" pos:column="36">HRESULT</name></type> <name pos:line="4437" pos:column="44">hrStatus</name></decl></param>)</parameter_list> <name pos:line="4437" pos:column="54">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4438" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4438" pos:column="19">GetStatus</name>)<parameter_list pos:line="4438" pos:column="29">(<param><decl><type><name pos:line="4438" pos:column="30">THIS</name></type></decl></param>)</parameter_list> <name pos:line="4438" pos:column="36">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4439" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4439" pos:column="19">SetStreamSize</name>)<parameter_list pos:line="4439" pos:column="33">(<param><decl><type><name pos:line="4439" pos:column="34">THIS_</name> <name pos:line="4439" pos:column="40">DWORD</name></type> <name pos:line="4439" pos:column="46">dwSize</name></decl></param>)</parameter_list> <name pos:line="4439" pos:column="54">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4440" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4440" pos:column="19">GetAvailableSize</name>)<parameter_list pos:line="4440" pos:column="36">(<param><decl><type><name pos:line="4440" pos:column="37">THIS</name></type></decl></param>)</parameter_list> <name pos:line="4440" pos:column="43">PURE</name>;</function_decl>
	<function_decl><type><name pos:line="4441" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4441" pos:column="19">Reset</name>)<parameter_list pos:line="4441" pos:column="25">(<param><decl><type><name pos:line="4441" pos:column="26">THIS</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="4442" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4442" pos:column="19">Wait</name>)<parameter_list pos:line="4442" pos:column="24">(<param><decl><type><name pos:line="4442" pos:column="25">THIS</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="4443" pos:column="9">MSOMETHOD</name></type>(<name pos:line="4443" pos:column="19">CloseStream</name>)<parameter_list pos:line="4443" pos:column="31">(<param><decl><type><name pos:line="4443" pos:column="32">THIS</name></type></decl></param>)</parameter_list>;</function_decl>
}</block><empty_stmt pos:line="4444" pos:column="2">;</empty_stmt>


<cpp:ifdef pos:line="4447" pos:column="1">#<cpp:directive pos:line="4447" pos:column="2">ifdef</cpp:directive> <name pos:line="4447" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern><empty_stmt pos:line="4448" pos:column="2">;</empty_stmt>	<comment type="line" pos:line="4448" pos:column="9">// extern "C"</comment>
<cpp:endif pos:line="4449" pos:column="1">#<cpp:directive pos:line="4449" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4449" pos:column="8">// __cplusplus</comment>

<cpp:endif pos:line="4451" pos:column="1">#<cpp:directive pos:line="4451" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="4451" pos:column="8">// !__MSODM_H__</comment>



<comment type="line" pos:line="4455" pos:column="1">// ----------------------------------------------------------------------------</comment>
<comment type="line" pos:line="4456" pos:column="1">// Change Log</comment>
<comment type="line" pos:line="4457" pos:column="1">//</comment>
<comment type="line" pos:line="4458" pos:column="1">// Date		Version		Description</comment>
<comment type="line" pos:line="4459" pos:column="1">// -----	-------		-------------------------------------------------------</comment>
<comment type="line" pos:line="4460" pos:column="1">// 09/08/94 1.1		    Added GetSzFileName and SetSzFileName to ISearch.</comment>
<comment type="line" pos:line="4461" pos:column="1">//						Added IszGetFileType and SetIszFileType to IFindFile.</comment>
<comment type="line" pos:line="4462" pos:column="1">//</comment>
<comment type="line" pos:line="4463" pos:column="1">// 09/14	  			Added FDirPicker and SetFDirPicker to IFindFile</comment>
<comment type="line" pos:line="4464" pos:column="1">//						Added FSearchEnabled and EnabledSearch to IFindFile</comment>
<comment type="line" pos:line="4465" pos:column="1">//						Added FPreviewEnabled and EnablePreview to IFindFile</comment>
<comment type="line" pos:line="4466" pos:column="1">//						(#ifdef LATER)</comment>
<comment type="line" pos:line="4467" pos:column="1">//						Added RegisterPfnEvent to IFindFile</comment>
<comment type="line" pos:line="4468" pos:column="1">//						Added GetControlValueW, GetControlValueSz,</comment>
<comment type="line" pos:line="4469" pos:column="1">//						SetControlValueW, SetControlValueSz to IFindFile</comment>
<comment type="line" pos:line="4470" pos:column="1">//						(#ifdef LATER)</comment>
<comment type="line" pos:line="4471" pos:column="1">//						IOOP_FF type defined as int, and enum constants</comment>
<comment type="line" pos:line="4472" pos:column="1">//						defined.  -amirr</comment>
<comment type="line" pos:line="4473" pos:column="1">//</comment>
<comment type="line" pos:line="4474" pos:column="1">// 09/15				Added IControl, IControlList interfaces to replace</comment>
<comment type="line" pos:line="4475" pos:column="1">//						ICustomItem, ICustomItemList interfaces.  #define'd</comment>
<comment type="line" pos:line="4476" pos:column="1">//						ICustomItem, ICustomItemList, CCustomItem,</comment>
<comment type="line" pos:line="4477" pos:column="1">//						CCustomItemList for backwards compatibility.</comment>
<comment type="line" pos:line="4478" pos:column="1">//						Changed GetICustomItemList on IFindFile to</comment>
<comment type="line" pos:line="4479" pos:column="1">//						GetIControlList #define'd for backwards compatibility.</comment>
<comment type="line" pos:line="4480" pos:column="1">//						Changed CcstitmGet to CcntrlGet on IControlList.</comment>
<comment type="line" pos:line="4481" pos:column="1">//						#define'd for backwards compatibility.</comment>
<comment type="line" pos:line="4482" pos:column="1">//						IOTM_FF enum constants redefined.</comment>
<comment type="line" pos:line="4483" pos:column="1">//						-amirr</comment>
<comment type="line" pos:line="4484" pos:column="1">//</comment>
<comment type="line" pos:line="4485" pos:column="1">// 09/16				Added standard control values to otp list.</comment>
<comment type="line" pos:line="4486" pos:column="1">//						Added SetFocusIcntrl to IFindFile.</comment>
<comment type="line" pos:line="4487" pos:column="1">//						-amirr</comment>
<comment type="line" pos:line="4488" pos:column="1">//</comment>
<comment type="line" pos:line="4489" pos:column="1">// 09/21				Reordered declarations to match up with API document</comment>
<comment type="line" pos:line="4490" pos:column="1">//						for easier updating and maintainability.</comment>
<comment type="line" pos:line="4491" pos:column="1">//						Added GetFreezeDir and SetFreezeDir to IFindFile</comment>
<comment type="line" pos:line="4492" pos:column="1">//						Added short-cut methods GetIcntrlValueW,</comment>
<comment type="line" pos:line="4493" pos:column="1">//						GetIcntrlValueSz, SetIcntrlValueW, SetIcntrlValueSz to</comment>
<comment type="line" pos:line="4494" pos:column="1">//						IFindFile.</comment>
<comment type="line" pos:line="4495" pos:column="1">//						Added ICommandList interface and functions AddRef,</comment>
<comment type="line" pos:line="4496" pos:column="1">//						Release, QueryInterface, Get, GetFEnabled, SetFEnabled,</comment>
<comment type="line" pos:line="4497" pos:column="1">//</comment>
<comment type="line" pos:line="4498" pos:column="1">// 9/29					Added IAppPreview.</comment>
<comment type="line" pos:line="4499" pos:column="1">//						Added FFDesirePreview</comment>
<comment type="line" pos:line="4500" pos:column="1">//						Modified EnablePreview to have an (IAppPreview *) parm.</comment>
<comment type="line" pos:line="4501" pos:column="1">//						-stevepol</comment>
<comment type="line" pos:line="4502" pos:column="1">// 9/30					Added help stuff - mikekell</comment>
<comment type="line" pos:line="4503" pos:column="1">//</comment>
<comment type="line" pos:line="4504" pos:column="1">// 10/13				Added GetHwnd, GetCenterXY, SetCenterXY to IFindFile.</comment>
<comment type="line" pos:line="4505" pos:column="1">//						FF_E_DIALOG_NOT_VISIBLE returned when trying to do a</comment>
<comment type="line" pos:line="4506" pos:column="1">//						GetHwnd on the dialog when it is not displayed.</comment>
<comment type="line" pos:line="4507" pos:column="1">// 						Multiple dialog instances now working.  FF_findfileMax</comment>
<comment type="line" pos:line="4508" pos:column="1">//						denotes the largest number of find file dialogs</comment>
<comment type="line" pos:line="4509" pos:column="1">//						displayable at one time.  -amirr</comment>
<comment type="line" pos:line="4510" pos:column="1">//</comment>
<comment type="line" pos:line="4511" pos:column="1">// 10/21				Added FConfirmReplace, SetFConfirmReplace,</comment>
<comment type="line" pos:line="4512" pos:column="1">//						GetDefaultFileName, SetDefaultFileName to IFindFile.</comment>
<comment type="line" pos:line="4513" pos:column="1">//						-amirr</comment>
<comment type="line" pos:line="4514" pos:column="1">//</comment>
<comment type="line" pos:line="4515" pos:column="1">// 10/28				Added FKeepSelectedType, SetFKeepSelectedType to</comment>
<comment type="line" pos:line="4516" pos:column="1">//						IFindFile.  Added FF_icmd enum values,</comment>
<comment type="line" pos:line="4517" pos:column="1">//						FF_icmdShiftOpen, FF_icmdOpenRO, and FF_icmdPrint.</comment>
<comment type="line" pos:line="4518" pos:column="1">//						FF_cbMaxType extended to 120 from 60.</comment>
<comment type="line" pos:line="4519" pos:column="1">//						-amirr.</comment>
<comment type="line" pos:line="4520" pos:column="1">//</comment>
<comment type="line" pos:line="4521" pos:column="1">// 12/14				Changed char * paramaters to const char * parameters</comment>
<comment type="line" pos:line="4522" pos:column="1">//						in SetXXXXX methods.  - erikhan</comment>
<comment type="line" pos:line="4523" pos:column="1">//</comment>
<comment type="line" pos:line="4524" pos:column="1">// 01/03/95				Added FF_icleXXX constants used to enable or disable</comment>
<comment type="line" pos:line="4525" pos:column="1">//						commands in the Open dialog's commands dropdown.</comment>
<comment type="line" pos:line="4526" pos:column="1">//</comment>
<comment type="line" pos:line="4527" pos:column="1">// 01/03				Added FFileDirPicker and SetFFileDirPicker to</comment>
<comment type="line" pos:line="4528" pos:column="1">//						IFindFile.  Added Clear to ISearch. UNDONE:  Reorganize</comment>
<comment type="line" pos:line="4529" pos:column="1">//						the functions when the opportunity presents itself.</comment>
<comment type="line" pos:line="4530" pos:column="1">//						- amirr.</comment>
<comment type="line" pos:line="4531" pos:column="1">//</comment>
<comment type="line" pos:line="4532" pos:column="1">// 01/06				Added GetView and SetView.  - mikekell</comment>
<comment type="line" pos:line="4533" pos:column="1">//</comment>
<comment type="line" pos:line="4534" pos:column="1">//						Added FInitFileOpen and CleanupFileOpen.  - erikhan</comment>
<comment type="line" pos:line="4535" pos:column="1">//</comment>
<comment type="line" pos:line="4536" pos:column="1">// 02/21				Added FLoadFileOpen prototype.  - erikhan</comment>
<comment type="line" pos:line="4537" pos:column="1">//</comment>
<comment type="line" pos:line="4538" pos:column="1">// 04/06				Added FF_ioopQueryFinished and FGetSzMissingDll.</comment>
<comment type="line" pos:line="4539" pos:column="1">//						- erikhan</comment>
<comment type="line" pos:line="4540" pos:column="1">//</comment>
<comment type="line" pos:line="4541" pos:column="1">// 08/04				Name changed to "dm96.h" for the `96 project.</comment>
<comment type="line" pos:line="4542" pos:column="1">//						- erikhan</comment>
<comment type="line" pos:line="4543" pos:column="1">//</comment>
<comment type="line" pos:line="4544" pos:column="1">// 08/10				Added IOLDocument.  -- erikhan</comment>
<comment type="line" pos:line="4545" pos:column="1">//</comment>
<comment type="line" pos:line="4546" pos:column="1">// 08/14				Added GUIDs for IIDs.  - erikhan</comment>
<comment type="line" pos:line="4547" pos:column="1">//</comment>
<comment type="line" pos:line="4548" pos:column="1">// 09/26				Changed interfaces, constants and types to Office</comment>
<comment type="line" pos:line="4549" pos:column="1">// 						naming conventions      - brianwen</comment>
<comment type="line" pos:line="4550" pos:column="1">//</comment>
<comment type="line" pos:line="4551" pos:column="1">// 12/02				Added IBindCtx and IBindStatusCallback to GetFilePath</comment>
<comment type="line" pos:line="4552" pos:column="1">//						and GetFSSpec for IMsoOLDocument per SriniK.  Also</comment>
<comment type="line" pos:line="4553" pos:column="1">//						added new method SetFOnlyFileSys (and related query method)</comment>
<comment type="line" pos:line="4554" pos:column="1">//						to require that only items physically present in the file</comment>
<comment type="line" pos:line="4555" pos:column="1">//						system be returned (no URLs).  This is useful for e.g.</comment>
<comment type="line" pos:line="4556" pos:column="1">//						the indexer and Word's Tools/Options/File Locations browser.</comment>
<comment type="line" pos:line="4557" pos:column="1">//						Carried in dm96.h changes.</comment>
<comment type="line" pos:line="4558" pos:column="1">//</comment>
<comment type="line" pos:line="4559" pos:column="1">// 12/17/95				Added Mac FindFile code from Paradigm.</comment>
<comment type="line" pos:line="4560" pos:column="1">//</comment>
<comment type="line" pos:line="4561" pos:column="1">//</comment>
<comment type="line" pos:line="4562" pos:column="1">// 1/3/96				Added ffopOpenAsCopy to FFOP enumeration</comment>
<comment type="line" pos:line="4563" pos:column="1">//						Added msodmicmdOpenAsCopy and msodmicleOpenAsCopy</comment>
<comment type="line" pos:line="4564" pos:column="1">//						Added fGreyOpenAsCopyCmd to GLUEPREFS  -- kander</comment>
<comment type="line" pos:line="4565" pos:column="1">// 3/4/96				Added params to IMsoSearch_SetPropSzValMacro to</comment>
<comment type="line" pos:line="4566" pos:column="1">//						return parse error info for Shilshole.</comment>
<comment type="line" pos:line="4567" pos:column="1">//						Added new API, MsoGetIndexInformation.</comment>
<comment type="line" pos:line="4568" pos:column="1">//						Added new API, IMsoSearch_SetSearchConnector, which</comment>
<comment type="line" pos:line="4569" pos:column="1">//						allows WebFind to connect search criteria with OR instead</comment>
<comment type="line" pos:line="4570" pos:column="1">//						of AND.</comment>
<comment type="line" pos:line="4571" pos:column="1">//						Added a new API to allow Ren to get back unresolved links.</comment>
<comment type="line" pos:line="4572" pos:column="1">//</comment>
<comment type="line" pos:line="4573" pos:column="1">// 1/8/97				FrankRon added API's to allow the enabling of custom</comment>
<comment type="line" pos:line="4574" pos:column="1">//						controls on the Open Dialogs to be linked to the enabling</comment>
<comment type="line" pos:line="4575" pos:column="1">//						of the OK button</comment>
<comment type="line" pos:line="4576" pos:column="1">//</comment>
<comment type="line" pos:line="4577" pos:column="1">// 1/16/97				FrankRon added API's to allow use of the System Dir</comment>
<comment type="line" pos:line="4578" pos:column="1">//						Picker (SHBrowseForFolder) instead of our own SDM DirPicker</comment>
<comment type="line" pos:line="4579" pos:column="1">//</comment>
<comment type="line" pos:line="4580" pos:column="1">// 8/13/97				IlyaV renamed msodm.h//</comment>
<comment type="line" pos:line="4581" pos:column="1">// 9/23/97				stevepol GetFVisible, SetFVisible, TW_ListNameFOR_TESTING_ONLY</comment>
<comment type="line" pos:line="4582" pos:column="1">// 12/24/97				IlyaV commented out Shilshole-related stuff.</comment>
<comment type="line" pos:line="4583" pos:column="1">// 2/3/98				IlyaV general cleanup.</comment>
<comment type="line" pos:line="4584" pos:column="1">//</comment>
<comment type="line" pos:line="4585" pos:column="1">// 3/23/98			ThomasOl added fEnableRedirect parm to IMsoOLDocument_GetFilePath</comment>
<comment type="line" pos:line="4586" pos:column="1">//</comment>
<comment type="line" pos:line="4587" pos:column="1">// 8/17/99				ABeeman added MsoHrHttpUrlToPsfPidl</comment>
<comment type="line" pos:line="4588" pos:column="1">//</comment>
<comment type="line" pos:line="4589" pos:column="1">// 3/1/00				Shanem added MsoHrPSFCreateIOLDocFromPersistent</comment>
</unit>
