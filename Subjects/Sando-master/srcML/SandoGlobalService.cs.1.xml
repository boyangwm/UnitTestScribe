<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\Service\SandoGlobalService.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Xiao Qu (ABB Group) - Initial implementation
 *****************************************************************************/</comment>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">IO</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Linq</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Microsoft</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">VisualStudio</name><op:operator pos:line="15" pos:column="29">.</op:operator><name pos:line="15" pos:column="30">Shell</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Microsoft</name><op:operator pos:line="16" pos:column="16">.</op:operator><name pos:line="16" pos:column="17">VisualStudio</name><op:operator pos:line="16" pos:column="29">.</op:operator><name pos:line="16" pos:column="30">Shell</name><op:operator pos:line="16" pos:column="35">.</op:operator><name pos:line="16" pos:column="36">Interop</name></name>;</using>
<using pos:line="17" pos:column="1">using <name pos:line="17" pos:column="7">EnvDTE</name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">Sando</name><op:operator pos:line="18" pos:column="12">.</op:operator><name pos:line="18" pos:column="13">ExtensionContracts</name><op:operator pos:line="18" pos:column="31">.</op:operator><name pos:line="18" pos:column="32">SearchContracts</name></name>;</using>
<using pos:line="19" pos:column="1">using <name pos:line="19" pos:column="7">log4net</name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">Sando</name><op:operator pos:line="20" pos:column="12">.</op:operator><name pos:line="20" pos:column="13">ExtensionContracts</name><op:operator pos:line="20" pos:column="31">.</op:operator><name pos:line="20" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">Sando</name><op:operator pos:line="21" pos:column="12">.</op:operator><name pos:line="21" pos:column="13">SearchEngine</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">System</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">Collections</name><op:operator pos:line="22" pos:column="25">.</op:operator><name pos:line="22" pos:column="26">Generic</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">Sando</name><op:operator pos:line="23" pos:column="12">.</op:operator><name pos:line="23" pos:column="13">UI</name><op:operator pos:line="23" pos:column="15">.</op:operator><name pos:line="23" pos:column="16">View</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">System</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">Threading</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">Sando</name><op:operator pos:line="25" pos:column="12">.</op:operator><name pos:line="25" pos:column="13">ExtensionContracts</name><op:operator pos:line="25" pos:column="31">.</op:operator><name pos:line="25" pos:column="32">ServiceContracts</name></name>;</using>


<namespace pos:line="28" pos:column="1">namespace <name><name pos:line="28" pos:column="11">Sando</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">UI</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Service</name></name> <block pos:line="28" pos:column="28">{
    <comment type="line" pos:line="29" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="30" pos:column="5">/// Implement the global service class.</comment>
    <comment type="line" pos:line="31" pos:column="5">/// This is the class that implements the global service. All it needs to do is to implement </comment>
    <comment type="line" pos:line="32" pos:column="5">/// the interfaces exposed by this service (in this case ISrcMLGlobalService).</comment>
    <comment type="line" pos:line="33" pos:column="5">/// This class also needs to implement the SSandoGlobalService interface in order to notify the </comment>
    <comment type="line" pos:line="34" pos:column="5">/// package that it is actually implementing this service.</comment>
    <comment type="line" pos:line="35" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="36" pos:column="5">public</specifier> class <name pos:line="36" pos:column="18">SandoGlobalService</name> <super pos:line="36" pos:column="37">: <name pos:line="36" pos:column="39">ISandoGlobalService</name>, <name pos:line="36" pos:column="60">SSandoGlobalService</name>, <name pos:line="36" pos:column="81">ISearchResultListener</name></super>
    <block pos:line="37" pos:column="5">{

        <comment type="line" pos:line="39" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// Store in this variable the service provider that will be used to query for other services.</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">private</specifier> <name pos:line="42" pos:column="17">IServiceProvider</name></type> <name pos:line="42" pos:column="34">serviceProvider</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <name><name pos:line="44" pos:column="17">List</name><argument_list pos:line="44" pos:column="21">&lt;<argument><name pos:line="44" pos:column="22">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="44" pos:column="40">_results</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">protected</specifier> <name pos:line="45" pos:column="19">string</name></type> <name pos:line="45" pos:column="26">_myMessage</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">private</specifier> <name pos:line="46" pos:column="17">IVsStatusbar</name></type> <name pos:line="46" pos:column="30">statusBar</name></decl>;</decl_stmt>


        <comment type="line" pos:line="49" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// Constructor.</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;param name="sp"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;param name="extensionDirectory"&gt;&lt;/param&gt;</comment>
        <constructor><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">SandoGlobalService</name><parameter_list pos:line="54" pos:column="34">(<param><decl><type><name pos:line="54" pos:column="35">IServiceProvider</name></type> <name pos:line="54" pos:column="52">sp</name></decl></param>)</parameter_list> <block pos:line="54" pos:column="56">{
            <comment type="line" pos:line="55" pos:column="13">//Trace.WriteLine("Constructing a new instance of SandoGlobalService");</comment>
            <expr_stmt><expr><name pos:line="56" pos:column="13">serviceProvider</name> <op:operator pos:line="56" pos:column="29">=</op:operator> <name pos:line="56" pos:column="31">sp</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">statusBar</name> <op:operator pos:line="57" pos:column="23">=</op:operator> <op:operator pos:line="57" pos:column="25">(</op:operator><name pos:line="57" pos:column="26">IVsStatusbar</name><op:operator pos:line="57" pos:column="38">)</op:operator><call><name><name pos:line="57" pos:column="39">Package</name><op:operator pos:line="57" pos:column="46">.</op:operator><name pos:line="57" pos:column="47">GetGlobalService</name></name><argument_list pos:line="57" pos:column="63">(<argument><expr><call><name pos:line="57" pos:column="64">typeof</name><argument_list pos:line="57" pos:column="70">(<argument><expr><name pos:line="57" pos:column="71">SVsStatusbar</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="60" pos:column="9">// ISandoGlobalService Members</comment>
        <cpp:region pos:line="61" pos:column="9">#<cpp:directive pos:line="61" pos:column="10">region</cpp:directive> ISandoGlobalService Members</cpp:region>

        <function><type><attribute pos:line="63" pos:column="9">[<expr><call><name><name pos:line="63" pos:column="10">System</name><op:operator pos:line="63" pos:column="16">.</op:operator><name pos:line="63" pos:column="17">Diagnostics</name><op:operator pos:line="63" pos:column="28">.</op:operator><name pos:line="63" pos:column="29">CodeAnalysis</name><op:operator pos:line="63" pos:column="41">.</op:operator><name pos:line="63" pos:column="42">SuppressMessage</name></name><argument_list pos:line="63" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="58">"Microsoft.Globalization"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="63" pos:column="85">"CA1303:DoNotPassLiteralsAsLocalizedParameters"</lit:literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="134">MessageId</name> <op:operator pos:line="63" pos:column="144">=</op:operator> <lit:literal type="string" pos:line="63" pos:column="146">"Microsoft.Samples.VisualStudio.Services.HelperFunctions.WriteOnOutputWindow(System.IServiceProvider,System.String)"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="64" pos:column="9">public</specifier> <name pos:line="64" pos:column="16">void</name></type> <name pos:line="64" pos:column="21">GlobalServiceFunction</name><parameter_list pos:line="64" pos:column="42">()</parameter_list>
        <block pos:line="65" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">string</name></type> <name pos:line="66" pos:column="20">outputText</name> <init pos:line="66" pos:column="31">= <expr><lit:literal type="string" pos:line="66" pos:column="33">" ======================================\n"</lit:literal> <op:operator pos:line="66" pos:column="77">+</op:operator>
                                <lit:literal type="string" pos:line="67" pos:column="33">"\tGlobalServiceFunction called.\n"</lit:literal> <op:operator pos:line="67" pos:column="69">+</op:operator>
                                <lit:literal type="string" pos:line="68" pos:column="33">" ======================================\n"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">HelperFunctions</name><op:operator pos:line="69" pos:column="28">.</op:operator><name pos:line="69" pos:column="29">WriteOnOutputWindow</name></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">serviceProvider</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="66">outputText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// Implementation of the function that will call a method of the local service.</comment>
        <comment type="line" pos:line="74" pos:column="9">/// Notice that this class will access the local service using as service provider the one</comment>
        <comment type="line" pos:line="75" pos:column="9">/// implemented by ServicesPackage.</comment>
        <comment type="line" pos:line="76" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="77" pos:column="9">public</specifier> <name pos:line="77" pos:column="16">int</name></type> <name pos:line="77" pos:column="20">CallLocalService</name><parameter_list pos:line="77" pos:column="36">()</parameter_list>
        <block pos:line="78" pos:column="9">{
            <comment type="line" pos:line="79" pos:column="13">// Query the service provider for the local service.</comment>
            <comment type="line" pos:line="80" pos:column="13">// This object is supposed to be build by ServicesPackage and it pass its service provider</comment>
            <comment type="line" pos:line="81" pos:column="13">// to the constructor, so the local service should be found.</comment>
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">ISandoLocalService</name></type> <name pos:line="82" pos:column="32">localService</name> <init pos:line="82" pos:column="45">= <expr><call><name><name pos:line="82" pos:column="47">serviceProvider</name><op:operator pos:line="82" pos:column="62">.</op:operator><name pos:line="82" pos:column="63">GetService</name></name><argument_list pos:line="82" pos:column="73">(<argument><expr><call><name pos:line="82" pos:column="74">typeof</name><argument_list pos:line="82" pos:column="80">(<argument><expr><name pos:line="82" pos:column="81">SSandoLocalService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="82" pos:column="102">as</op:operator> <name pos:line="82" pos:column="105">ISandoLocalService</name></expr></init></decl>;</decl_stmt>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">null</name> <op:operator pos:line="83" pos:column="22">==</op:operator> <name pos:line="83" pos:column="25">localService</name></expr>)</condition><then pos:line="83" pos:column="38">
            <block pos:line="84" pos:column="13">{
                <comment type="line" pos:line="85" pos:column="17">// The local service was not found; write a message on the debug output and exit.</comment>
                <expr_stmt><expr><call><name><name pos:line="86" pos:column="17">Trace</name><op:operator pos:line="86" pos:column="22">.</op:operator><name pos:line="86" pos:column="23">WriteLine</name></name><argument_list pos:line="86" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="86" pos:column="33">"Can not get the local service from the global one."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="87" pos:column="17">return <expr><op:operator pos:line="87" pos:column="24">-</op:operator><lit:literal type="number" pos:line="87" pos:column="25">1</lit:literal></expr>;</return>
            }</block></then></if>

            <comment type="line" pos:line="90" pos:column="13">// Now call the method of the local service. This will write a message on the output window.</comment>
            <return pos:line="91" pos:column="13">return <expr><call><name><name pos:line="91" pos:column="20">localService</name><op:operator pos:line="91" pos:column="32">.</op:operator><name pos:line="91" pos:column="33">LocalServiceFunction</name></name><argument_list pos:line="91" pos:column="53">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="94" pos:column="9">public</specifier> <name pos:line="94" pos:column="16">void</name></type> <name pos:line="94" pos:column="21">Update</name><parameter_list pos:line="94" pos:column="27">(<param><decl><type><name pos:line="94" pos:column="28">string</name></type> <name pos:line="94" pos:column="35">searchString</name></decl></param>, <param><decl><type><name><name pos:line="94" pos:column="49">IQueryable</name><argument_list pos:line="94" pos:column="59">&lt;<argument><name pos:line="94" pos:column="60">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="94" pos:column="78">results</name></decl></param>)</parameter_list>
        <block pos:line="95" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="96" pos:column="13">var</name></type> <name pos:line="96" pos:column="17">newResults</name> <init pos:line="96" pos:column="28">= <expr><op:operator pos:line="96" pos:column="30">new</op:operator> <call><name><name pos:line="96" pos:column="34">List</name><argument_list pos:line="96" pos:column="38">&lt;<argument><name pos:line="96" pos:column="39">CodeSearchResult</name></argument>&gt;</argument_list></name><argument_list pos:line="96" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="97" pos:column="13">foreach (<init><decl><type><name pos:line="97" pos:column="22">var</name></type> <name pos:line="97" pos:column="26">result</name> <range pos:line="97" pos:column="33">in <expr><name pos:line="97" pos:column="36">results</name></expr></range></decl></init>)
                <expr_stmt><expr><call><name><name pos:line="98" pos:column="17">newResults</name><op:operator pos:line="98" pos:column="27">.</op:operator><name pos:line="98" pos:column="28">Add</name></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
            <expr_stmt><expr><name pos:line="99" pos:column="13">_results</name> <op:operator pos:line="99" pos:column="22">=</op:operator> <name pos:line="99" pos:column="24">newResults</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="102" pos:column="9">public</specifier> <name pos:line="102" pos:column="16">void</name></type> <name pos:line="102" pos:column="21">UpdateMessage</name><parameter_list pos:line="102" pos:column="34">(<param><decl><type><name pos:line="102" pos:column="35">string</name></type> <name pos:line="102" pos:column="42">message</name></decl></param>)</parameter_list>
        <block pos:line="103" pos:column="9">{
            <expr_stmt><expr><name pos:line="104" pos:column="13">_myMessage</name> <op:operator pos:line="104" pos:column="24">=</op:operator> <name pos:line="104" pos:column="26">message</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="107" pos:column="9">public</specifier> <name pos:line="107" pos:column="16">void</name></type> <name pos:line="107" pos:column="21">UpdateRecommendedQueries</name><parameter_list pos:line="107" pos:column="45">(<param><decl><type><name><name pos:line="107" pos:column="46">IQueryable</name><argument_list pos:line="107" pos:column="56">&lt;<argument><name pos:line="107" pos:column="57">string</name></argument>&gt;</argument_list></name></type> <name pos:line="107" pos:column="65">queries</name></decl></param>)</parameter_list>
        <block pos:line="108" pos:column="9">{
        }</block></function>

        <function><type><specifier pos:line="111" pos:column="9">public</specifier> <name><name pos:line="111" pos:column="16">List</name><argument_list pos:line="111" pos:column="20">&lt;<argument><name pos:line="111" pos:column="21">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="111" pos:column="39">GetSearchResults</name><parameter_list pos:line="111" pos:column="55">(<param><decl><type><name pos:line="111" pos:column="56">string</name></type> <name pos:line="111" pos:column="63">searchkeywords</name></decl></param>)</parameter_list>
        <block pos:line="112" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="113" pos:column="13">var</name></type> <name pos:line="113" pos:column="17">manager</name> <init pos:line="113" pos:column="25">= <expr><call><name><name pos:line="113" pos:column="27">SearchManagerFactory</name><op:operator pos:line="113" pos:column="47">.</op:operator><name pos:line="113" pos:column="48">GetNewBackgroundSearchManager</name></name><argument_list pos:line="113" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="114" pos:column="13">manager</name><op:operator pos:line="114" pos:column="20">.</op:operator><name pos:line="114" pos:column="21">AddListener</name></name><argument_list pos:line="114" pos:column="32">(<argument><expr><name pos:line="114" pos:column="33">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="115" pos:column="13">_results</name> <op:operator pos:line="115" pos:column="22">=</op:operator> <name pos:line="115" pos:column="24">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="116" pos:column="13">manager</name><op:operator pos:line="116" pos:column="20">.</op:operator><name pos:line="116" pos:column="21">Search</name></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">searchkeywords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">int</name></type> <name pos:line="117" pos:column="17">i</name> <init pos:line="117" pos:column="19">= <expr><lit:literal type="number" pos:line="117" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="118" pos:column="13">while <condition pos:line="118" pos:column="19">(<expr><name pos:line="118" pos:column="20">_results</name> <op:operator pos:line="118" pos:column="29">==</op:operator> <name pos:line="118" pos:column="32">null</name></expr>)</condition>
            <block pos:line="119" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="120" pos:column="17">System</name><op:operator pos:line="120" pos:column="23">.</op:operator><name pos:line="120" pos:column="24">Threading</name><op:operator pos:line="120" pos:column="33">.</op:operator><name pos:line="120" pos:column="34">Thread</name><op:operator pos:line="120" pos:column="40">.</op:operator><name pos:line="120" pos:column="41">Sleep</name></name><argument_list pos:line="120" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="120" pos:column="47">50</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="121" pos:column="17">i</name><op:operator pos:line="121" pos:column="18">++</op:operator></expr>;</expr_stmt>
                <if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name pos:line="122" pos:column="21">i</name> <op:operator pos:line="122" pos:column="23">&gt;</op:operator> <lit:literal type="number" pos:line="122" pos:column="25">100</lit:literal></expr>)</condition><then pos:line="122" pos:column="29">
                    <break pos:line="123" pos:column="21">break;</break></then></if>
            }</block></while>
            <return pos:line="125" pos:column="13">return <expr><name pos:line="125" pos:column="20">_results</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="128" pos:column="9">public</specifier> <name pos:line="128" pos:column="16">void</name></type> <name pos:line="128" pos:column="21">AddUISearchResultsListener</name><parameter_list pos:line="128" pos:column="47">(<param><decl><type><name pos:line="128" pos:column="48">ISearchResultListener</name></type> <name pos:line="128" pos:column="70">listener</name></decl></param>)</parameter_list>
        <block pos:line="129" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="130" pos:column="13">SearchManagerFactory</name><op:operator pos:line="130" pos:column="33">.</op:operator><name pos:line="130" pos:column="34">GetUserInterfaceSearchManager</name></name><argument_list pos:line="130" pos:column="63">()</argument_list></call><op:operator pos:line="130" pos:column="65">.</op:operator><call><name pos:line="130" pos:column="66">AddListener</name><argument_list pos:line="130" pos:column="77">(<argument><expr><name pos:line="130" pos:column="78">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <cpp:endregion pos:line="133" pos:column="9">#<cpp:directive pos:line="133" pos:column="10">endregion</cpp:directive></cpp:endregion>        

    }</block></class>
}</block></namespace>
</unit>
