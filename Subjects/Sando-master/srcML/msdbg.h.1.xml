<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\msdbg.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for msdbg.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__msdbg_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__msdbg_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IDebugCoreServer2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IDebugCoreServer2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IDebugCoreServer2</name></type> <name pos:line="53" pos:column="37">IDebugCoreServer2</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IDebugCoreServer2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__IDebugCoreServer3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__IDebugCoreServer3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">IDebugCoreServer3</name></type> <name pos:line="59" pos:column="37">IDebugCoreServer3</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __IDebugCoreServer3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef</cpp:directive> <name pos:line="63" pos:column="9">__IDebugMachineEx2_V7_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">__IDebugMachineEx2_V7_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="65" pos:column="1">typedef <type><name pos:line="65" pos:column="9">interface</name> <name pos:line="65" pos:column="19">IDebugMachineEx2_V7</name></type> <name pos:line="65" pos:column="39">IDebugMachineEx2_V7</name>;</typedef>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="66" pos:column="9">/* __IDebugMachineEx2_V7_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifndef</cpp:directive> <name pos:line="69" pos:column="9">__IDebugPortSupplier2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">__IDebugPortSupplier2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="71" pos:column="1">typedef <type><name pos:line="71" pos:column="9">interface</name> <name pos:line="71" pos:column="19">IDebugPortSupplier2</name></type> <name pos:line="71" pos:column="39">IDebugPortSupplier2</name>;</typedef>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="72" pos:column="9">/* __IDebugPortSupplier2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">ifndef</cpp:directive> <name pos:line="75" pos:column="9">__IDebugPortSupplier3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">__IDebugPortSupplier3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="77" pos:column="1">typedef <type><name pos:line="77" pos:column="9">interface</name> <name pos:line="77" pos:column="19">IDebugPortSupplier3</name></type> <name pos:line="77" pos:column="39">IDebugPortSupplier3</name>;</typedef>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="78" pos:column="9">/* __IDebugPortSupplier3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifndef</cpp:directive> <name pos:line="81" pos:column="9">__IDebugPortPicker_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="82" pos:column="9">__IDebugPortPicker_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="83" pos:column="1">typedef <type><name pos:line="83" pos:column="9">interface</name> <name pos:line="83" pos:column="19">IDebugPortPicker</name></type> <name pos:line="83" pos:column="36">IDebugPortPicker</name>;</typedef>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="84" pos:column="9">/* __IDebugPortPicker_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifndef</cpp:directive> <name pos:line="87" pos:column="9">__IDebugPortSupplierDescription2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="88" pos:column="9">__IDebugPortSupplierDescription2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="89" pos:column="1">typedef <type><name pos:line="89" pos:column="9">interface</name> <name pos:line="89" pos:column="19">IDebugPortSupplierDescription2</name></type> <name pos:line="89" pos:column="50">IDebugPortSupplierDescription2</name>;</typedef>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="90" pos:column="9">/* __IDebugPortSupplierDescription2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef</cpp:directive> <name pos:line="93" pos:column="9">__IDebugPort2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="94" pos:column="9">__IDebugPort2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="95" pos:column="1">typedef <type><name pos:line="95" pos:column="9">interface</name> <name pos:line="95" pos:column="19">IDebugPort2</name></type> <name pos:line="95" pos:column="31">IDebugPort2</name>;</typedef>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="96" pos:column="9">/* __IDebugPort2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifndef</cpp:directive> <name pos:line="99" pos:column="9">__IDebugDefaultPort2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">__IDebugDefaultPort2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="101" pos:column="1">typedef <type><name pos:line="101" pos:column="9">interface</name> <name pos:line="101" pos:column="19">IDebugDefaultPort2</name></type> <name pos:line="101" pos:column="38">IDebugDefaultPort2</name>;</typedef>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="102" pos:column="9">/* __IDebugDefaultPort2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">ifndef</cpp:directive> <name pos:line="105" pos:column="9">__IDebugWindowsComputerPort2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="106" pos:column="9">__IDebugWindowsComputerPort2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="107" pos:column="1">typedef <type><name pos:line="107" pos:column="9">interface</name> <name pos:line="107" pos:column="19">IDebugWindowsComputerPort2</name></type> <name pos:line="107" pos:column="46">IDebugWindowsComputerPort2</name>;</typedef>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="108" pos:column="9">/* __IDebugWindowsComputerPort2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifndef</cpp:directive> <name pos:line="111" pos:column="9">__IDebugPortRequest2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="112" pos:column="9">__IDebugPortRequest2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="113" pos:column="1">typedef <type><name pos:line="113" pos:column="9">interface</name> <name pos:line="113" pos:column="19">IDebugPortRequest2</name></type> <name pos:line="113" pos:column="38">IDebugPortRequest2</name>;</typedef>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="114" pos:column="9">/* __IDebugPortRequest2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef</cpp:directive> <name pos:line="117" pos:column="9">__IDebugPortNotify2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="118" pos:column="9">__IDebugPortNotify2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="119" pos:column="1">typedef <type><name pos:line="119" pos:column="9">interface</name> <name pos:line="119" pos:column="19">IDebugPortNotify2</name></type> <name pos:line="119" pos:column="37">IDebugPortNotify2</name>;</typedef>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="120" pos:column="9">/* __IDebugPortNotify2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">ifndef</cpp:directive> <name pos:line="123" pos:column="9">__IDebugPortEvents2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="124" pos:column="9">__IDebugPortEvents2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="125" pos:column="1">typedef <type><name pos:line="125" pos:column="9">interface</name> <name pos:line="125" pos:column="19">IDebugPortEvents2</name></type> <name pos:line="125" pos:column="37">IDebugPortEvents2</name>;</typedef>
<cpp:endif pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="126" pos:column="9">/* __IDebugPortEvents2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifndef</cpp:directive> <name pos:line="129" pos:column="9">__IDebugMDMUtil2_V7_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="130" pos:column="9">__IDebugMDMUtil2_V7_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="131" pos:column="1">typedef <type><name pos:line="131" pos:column="9">interface</name> <name pos:line="131" pos:column="19">IDebugMDMUtil2_V7</name></type> <name pos:line="131" pos:column="37">IDebugMDMUtil2_V7</name>;</typedef>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="132" pos:column="9">/* __IDebugMDMUtil2_V7_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">ifndef</cpp:directive> <name pos:line="135" pos:column="9">__IDebugMDMUtil3_V7_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="136" pos:column="9">__IDebugMDMUtil3_V7_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="137" pos:column="1">typedef <type><name pos:line="137" pos:column="9">interface</name> <name pos:line="137" pos:column="19">IDebugMDMUtil3_V7</name></type> <name pos:line="137" pos:column="37">IDebugMDMUtil3_V7</name>;</typedef>
<cpp:endif pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="138" pos:column="9">/* __IDebugMDMUtil3_V7_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">ifndef</cpp:directive> <name pos:line="141" pos:column="9">__IDebugSession2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="142" pos:column="9">__IDebugSession2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="143" pos:column="1">typedef <type><name pos:line="143" pos:column="9">interface</name> <name pos:line="143" pos:column="19">IDebugSession2</name></type> <name pos:line="143" pos:column="34">IDebugSession2</name>;</typedef>
<cpp:endif pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="144" pos:column="9">/* __IDebugSession2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifndef</cpp:directive> <name pos:line="147" pos:column="9">__IDebugSession3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="148" pos:column="9">__IDebugSession3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="149" pos:column="1">typedef <type><name pos:line="149" pos:column="9">interface</name> <name pos:line="149" pos:column="19">IDebugSession3</name></type> <name pos:line="149" pos:column="34">IDebugSession3</name>;</typedef>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="150" pos:column="9">/* __IDebugSession3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">ifndef</cpp:directive> <name pos:line="153" pos:column="9">__IDebugEngine2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="154" pos:column="9">__IDebugEngine2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="155" pos:column="1">typedef <type><name pos:line="155" pos:column="9">interface</name> <name pos:line="155" pos:column="19">IDebugEngine2</name></type> <name pos:line="155" pos:column="33">IDebugEngine2</name>;</typedef>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="156" pos:column="9">/* __IDebugEngine2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifndef</cpp:directive> <name pos:line="159" pos:column="9">__IDebugEngineLaunch2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="160" pos:column="9">__IDebugEngineLaunch2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="161" pos:column="1">typedef <type><name pos:line="161" pos:column="9">interface</name> <name pos:line="161" pos:column="19">IDebugEngineLaunch2</name></type> <name pos:line="161" pos:column="39">IDebugEngineLaunch2</name>;</typedef>
<cpp:endif pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="162" pos:column="9">/* __IDebugEngineLaunch2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifndef</cpp:directive> <name pos:line="165" pos:column="9">__IDebugEngine3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="166" pos:column="9">__IDebugEngine3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="167" pos:column="1">typedef <type><name pos:line="167" pos:column="9">interface</name> <name pos:line="167" pos:column="19">IDebugEngine3</name></type> <name pos:line="167" pos:column="33">IDebugEngine3</name>;</typedef>
<cpp:endif pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="168" pos:column="9">/* __IDebugEngine3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">ifndef</cpp:directive> <name pos:line="171" pos:column="9">__IDebugEventCallback2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="172" pos:column="9">__IDebugEventCallback2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="173" pos:column="1">typedef <type><name pos:line="173" pos:column="9">interface</name> <name pos:line="173" pos:column="19">IDebugEventCallback2</name></type> <name pos:line="173" pos:column="40">IDebugEventCallback2</name>;</typedef>
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="174" pos:column="9">/* __IDebugEventCallback2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifndef</cpp:directive> <name pos:line="177" pos:column="9">__IDebugSettingsCallback2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="178" pos:column="9">__IDebugSettingsCallback2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="179" pos:column="1">typedef <type><name pos:line="179" pos:column="9">interface</name> <name pos:line="179" pos:column="19">IDebugSettingsCallback2</name></type> <name pos:line="179" pos:column="43">IDebugSettingsCallback2</name>;</typedef>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="180" pos:column="9">/* __IDebugSettingsCallback2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">ifndef</cpp:directive> <name pos:line="183" pos:column="9">__IDebugEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="184" pos:column="9">__IDebugEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="185" pos:column="1">typedef <type><name pos:line="185" pos:column="9">interface</name> <name pos:line="185" pos:column="19">IDebugEvent2</name></type> <name pos:line="185" pos:column="32">IDebugEvent2</name>;</typedef>
<cpp:endif pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="186" pos:column="9">/* __IDebugEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">ifndef</cpp:directive> <name pos:line="189" pos:column="9">__IDebugSessionCreateEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="190" pos:column="9">__IDebugSessionCreateEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="191" pos:column="1">typedef <type><name pos:line="191" pos:column="9">interface</name> <name pos:line="191" pos:column="19">IDebugSessionCreateEvent2</name></type> <name pos:line="191" pos:column="45">IDebugSessionCreateEvent2</name>;</typedef>
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="192" pos:column="9">/* __IDebugSessionCreateEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">ifndef</cpp:directive> <name pos:line="195" pos:column="9">__IDebugSessionDestroyEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="196" pos:column="9">__IDebugSessionDestroyEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="197" pos:column="1">typedef <type><name pos:line="197" pos:column="9">interface</name> <name pos:line="197" pos:column="19">IDebugSessionDestroyEvent2</name></type> <name pos:line="197" pos:column="46">IDebugSessionDestroyEvent2</name>;</typedef>
<cpp:endif pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="198" pos:column="9">/* __IDebugSessionDestroyEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">ifndef</cpp:directive> <name pos:line="201" pos:column="9">__IDebugEngineCreateEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="202" pos:column="9">__IDebugEngineCreateEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="203" pos:column="1">typedef <type><name pos:line="203" pos:column="9">interface</name> <name pos:line="203" pos:column="19">IDebugEngineCreateEvent2</name></type> <name pos:line="203" pos:column="44">IDebugEngineCreateEvent2</name>;</typedef>
<cpp:endif pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="204" pos:column="9">/* __IDebugEngineCreateEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">ifndef</cpp:directive> <name pos:line="207" pos:column="9">__IDebugProcessCreateEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="208" pos:column="9">__IDebugProcessCreateEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="209" pos:column="1">typedef <type><name pos:line="209" pos:column="9">interface</name> <name pos:line="209" pos:column="19">IDebugProcessCreateEvent2</name></type> <name pos:line="209" pos:column="45">IDebugProcessCreateEvent2</name>;</typedef>
<cpp:endif pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="210" pos:column="9">/* __IDebugProcessCreateEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">ifndef</cpp:directive> <name pos:line="213" pos:column="9">__IDebugProcessDestroyEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="214" pos:column="9">__IDebugProcessDestroyEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="215" pos:column="1">typedef <type><name pos:line="215" pos:column="9">interface</name> <name pos:line="215" pos:column="19">IDebugProcessDestroyEvent2</name></type> <name pos:line="215" pos:column="46">IDebugProcessDestroyEvent2</name>;</typedef>
<cpp:endif pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="216" pos:column="9">/* __IDebugProcessDestroyEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">ifndef</cpp:directive> <name pos:line="219" pos:column="9">__IDebugProgramCreateEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="220" pos:column="9">__IDebugProgramCreateEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="221" pos:column="1">typedef <type><name pos:line="221" pos:column="9">interface</name> <name pos:line="221" pos:column="19">IDebugProgramCreateEvent2</name></type> <name pos:line="221" pos:column="45">IDebugProgramCreateEvent2</name>;</typedef>
<cpp:endif pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="222" pos:column="9">/* __IDebugProgramCreateEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">ifndef</cpp:directive> <name pos:line="225" pos:column="9">__IDebugProgramDestroyEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="226" pos:column="9">__IDebugProgramDestroyEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="227" pos:column="1">typedef <type><name pos:line="227" pos:column="9">interface</name> <name pos:line="227" pos:column="19">IDebugProgramDestroyEvent2</name></type> <name pos:line="227" pos:column="46">IDebugProgramDestroyEvent2</name>;</typedef>
<cpp:endif pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="228" pos:column="9">/* __IDebugProgramDestroyEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">ifndef</cpp:directive> <name pos:line="231" pos:column="9">__IDebugProgramDestroyEventFlags2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="232" pos:column="9">__IDebugProgramDestroyEventFlags2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="233" pos:column="1">typedef <type><name pos:line="233" pos:column="9">interface</name> <name pos:line="233" pos:column="19">IDebugProgramDestroyEventFlags2</name></type> <name pos:line="233" pos:column="51">IDebugProgramDestroyEventFlags2</name>;</typedef>
<cpp:endif pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="234" pos:column="9">/* __IDebugProgramDestroyEventFlags2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">ifndef</cpp:directive> <name pos:line="237" pos:column="9">__IDebugThreadCreateEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="238" pos:column="1">#<cpp:directive pos:line="238" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="238" pos:column="9">__IDebugThreadCreateEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="239" pos:column="1">typedef <type><name pos:line="239" pos:column="9">interface</name> <name pos:line="239" pos:column="19">IDebugThreadCreateEvent2</name></type> <name pos:line="239" pos:column="44">IDebugThreadCreateEvent2</name>;</typedef>
<cpp:endif pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="240" pos:column="9">/* __IDebugThreadCreateEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">ifndef</cpp:directive> <name pos:line="243" pos:column="9">__IDebugThreadDestroyEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="244" pos:column="9">__IDebugThreadDestroyEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="245" pos:column="1">typedef <type><name pos:line="245" pos:column="9">interface</name> <name pos:line="245" pos:column="19">IDebugThreadDestroyEvent2</name></type> <name pos:line="245" pos:column="45">IDebugThreadDestroyEvent2</name>;</typedef>
<cpp:endif pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="246" pos:column="9">/* __IDebugThreadDestroyEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">ifndef</cpp:directive> <name pos:line="249" pos:column="9">__IDebugLoadCompleteEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="250" pos:column="9">__IDebugLoadCompleteEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="251" pos:column="1">typedef <type><name pos:line="251" pos:column="9">interface</name> <name pos:line="251" pos:column="19">IDebugLoadCompleteEvent2</name></type> <name pos:line="251" pos:column="44">IDebugLoadCompleteEvent2</name>;</typedef>
<cpp:endif pos:line="252" pos:column="1">#<cpp:directive pos:line="252" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="252" pos:column="9">/* __IDebugLoadCompleteEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="255" pos:column="1">#<cpp:directive pos:line="255" pos:column="2">ifndef</cpp:directive> <name pos:line="255" pos:column="9">__IDebugEntryPointEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="256" pos:column="1">#<cpp:directive pos:line="256" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="256" pos:column="9">__IDebugEntryPointEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="257" pos:column="1">typedef <type><name pos:line="257" pos:column="9">interface</name> <name pos:line="257" pos:column="19">IDebugEntryPointEvent2</name></type> <name pos:line="257" pos:column="42">IDebugEntryPointEvent2</name>;</typedef>
<cpp:endif pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="258" pos:column="9">/* __IDebugEntryPointEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="261" pos:column="1">#<cpp:directive pos:line="261" pos:column="2">ifndef</cpp:directive> <name pos:line="261" pos:column="9">__IDebugStepCompleteEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="262" pos:column="1">#<cpp:directive pos:line="262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="262" pos:column="9">__IDebugStepCompleteEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="263" pos:column="1">typedef <type><name pos:line="263" pos:column="9">interface</name> <name pos:line="263" pos:column="19">IDebugStepCompleteEvent2</name></type> <name pos:line="263" pos:column="44">IDebugStepCompleteEvent2</name>;</typedef>
<cpp:endif pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="264" pos:column="9">/* __IDebugStepCompleteEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">ifndef</cpp:directive> <name pos:line="267" pos:column="9">__IDebugCanStopEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="268" pos:column="9">__IDebugCanStopEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="269" pos:column="1">typedef <type><name pos:line="269" pos:column="9">interface</name> <name pos:line="269" pos:column="19">IDebugCanStopEvent2</name></type> <name pos:line="269" pos:column="39">IDebugCanStopEvent2</name>;</typedef>
<cpp:endif pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="270" pos:column="9">/* __IDebugCanStopEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">ifndef</cpp:directive> <name pos:line="273" pos:column="9">__IDebugBreakEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="274" pos:column="9">__IDebugBreakEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="275" pos:column="1">typedef <type><name pos:line="275" pos:column="9">interface</name> <name pos:line="275" pos:column="19">IDebugBreakEvent2</name></type> <name pos:line="275" pos:column="37">IDebugBreakEvent2</name>;</typedef>
<cpp:endif pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="276" pos:column="9">/* __IDebugBreakEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">ifndef</cpp:directive> <name pos:line="279" pos:column="9">__IDebugBreakpointEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="280" pos:column="9">__IDebugBreakpointEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="281" pos:column="1">typedef <type><name pos:line="281" pos:column="9">interface</name> <name pos:line="281" pos:column="19">IDebugBreakpointEvent2</name></type> <name pos:line="281" pos:column="42">IDebugBreakpointEvent2</name>;</typedef>
<cpp:endif pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="282" pos:column="9">/* __IDebugBreakpointEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">ifndef</cpp:directive> <name pos:line="285" pos:column="9">__IDebugExceptionEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="286" pos:column="9">__IDebugExceptionEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="287" pos:column="1">typedef <type><name pos:line="287" pos:column="9">interface</name> <name pos:line="287" pos:column="19">IDebugExceptionEvent2</name></type> <name pos:line="287" pos:column="41">IDebugExceptionEvent2</name>;</typedef>
<cpp:endif pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="288" pos:column="9">/* __IDebugExceptionEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">ifndef</cpp:directive> <name pos:line="291" pos:column="9">__IDebugNativeExceptionInfo_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="292" pos:column="9">__IDebugNativeExceptionInfo_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="293" pos:column="1">typedef <type><name pos:line="293" pos:column="9">interface</name> <name pos:line="293" pos:column="19">IDebugNativeExceptionInfo</name></type> <name pos:line="293" pos:column="45">IDebugNativeExceptionInfo</name>;</typedef>
<cpp:endif pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="294" pos:column="9">/* __IDebugNativeExceptionInfo_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="297" pos:column="1">#<cpp:directive pos:line="297" pos:column="2">ifndef</cpp:directive> <name pos:line="297" pos:column="9">__IDebugManagedExceptionInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="298" pos:column="1">#<cpp:directive pos:line="298" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="298" pos:column="9">__IDebugManagedExceptionInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="299" pos:column="1">typedef <type><name pos:line="299" pos:column="9">interface</name> <name pos:line="299" pos:column="19">IDebugManagedExceptionInfo2</name></type> <name pos:line="299" pos:column="47">IDebugManagedExceptionInfo2</name>;</typedef>
<cpp:endif pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="300" pos:column="9">/* __IDebugManagedExceptionInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="303" pos:column="1">#<cpp:directive pos:line="303" pos:column="2">ifndef</cpp:directive> <name pos:line="303" pos:column="9">__IDebugOutputStringEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="304" pos:column="9">__IDebugOutputStringEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="305" pos:column="1">typedef <type><name pos:line="305" pos:column="9">interface</name> <name pos:line="305" pos:column="19">IDebugOutputStringEvent2</name></type> <name pos:line="305" pos:column="44">IDebugOutputStringEvent2</name>;</typedef>
<cpp:endif pos:line="306" pos:column="1">#<cpp:directive pos:line="306" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="306" pos:column="9">/* __IDebugOutputStringEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">ifndef</cpp:directive> <name pos:line="309" pos:column="9">__IDebugModuleLoadEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="310" pos:column="1">#<cpp:directive pos:line="310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="310" pos:column="9">__IDebugModuleLoadEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="311" pos:column="1">typedef <type><name pos:line="311" pos:column="9">interface</name> <name pos:line="311" pos:column="19">IDebugModuleLoadEvent2</name></type> <name pos:line="311" pos:column="42">IDebugModuleLoadEvent2</name>;</typedef>
<cpp:endif pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="312" pos:column="9">/* __IDebugModuleLoadEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="315" pos:column="1">#<cpp:directive pos:line="315" pos:column="2">ifndef</cpp:directive> <name pos:line="315" pos:column="9">__IDebugSymbolSearchEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="316" pos:column="1">#<cpp:directive pos:line="316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="316" pos:column="9">__IDebugSymbolSearchEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="317" pos:column="1">typedef <type><name pos:line="317" pos:column="9">interface</name> <name pos:line="317" pos:column="19">IDebugSymbolSearchEvent2</name></type> <name pos:line="317" pos:column="44">IDebugSymbolSearchEvent2</name>;</typedef>
<cpp:endif pos:line="318" pos:column="1">#<cpp:directive pos:line="318" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="318" pos:column="9">/* __IDebugSymbolSearchEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="321" pos:column="1">#<cpp:directive pos:line="321" pos:column="2">ifndef</cpp:directive> <name pos:line="321" pos:column="9">__IDebugBeforeSymbolSearchEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="322" pos:column="1">#<cpp:directive pos:line="322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="322" pos:column="9">__IDebugBeforeSymbolSearchEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="323" pos:column="1">typedef <type><name pos:line="323" pos:column="9">interface</name> <name pos:line="323" pos:column="19">IDebugBeforeSymbolSearchEvent2</name></type> <name pos:line="323" pos:column="50">IDebugBeforeSymbolSearchEvent2</name>;</typedef>
<cpp:endif pos:line="324" pos:column="1">#<cpp:directive pos:line="324" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="324" pos:column="9">/* __IDebugBeforeSymbolSearchEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="327" pos:column="1">#<cpp:directive pos:line="327" pos:column="2">ifndef</cpp:directive> <name pos:line="327" pos:column="9">__IDebugPropertyCreateEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="328" pos:column="1">#<cpp:directive pos:line="328" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="328" pos:column="9">__IDebugPropertyCreateEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="329" pos:column="1">typedef <type><name pos:line="329" pos:column="9">interface</name> <name pos:line="329" pos:column="19">IDebugPropertyCreateEvent2</name></type> <name pos:line="329" pos:column="46">IDebugPropertyCreateEvent2</name>;</typedef>
<cpp:endif pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="330" pos:column="9">/* __IDebugPropertyCreateEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="333" pos:column="1">#<cpp:directive pos:line="333" pos:column="2">ifndef</cpp:directive> <name pos:line="333" pos:column="9">__IDebugPropertyDestroyEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="334" pos:column="1">#<cpp:directive pos:line="334" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="334" pos:column="9">__IDebugPropertyDestroyEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="335" pos:column="1">typedef <type><name pos:line="335" pos:column="9">interface</name> <name pos:line="335" pos:column="19">IDebugPropertyDestroyEvent2</name></type> <name pos:line="335" pos:column="47">IDebugPropertyDestroyEvent2</name>;</typedef>
<cpp:endif pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="336" pos:column="9">/* __IDebugPropertyDestroyEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="339" pos:column="1">#<cpp:directive pos:line="339" pos:column="2">ifndef</cpp:directive> <name pos:line="339" pos:column="9">__IDebugBreakpointBoundEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="340" pos:column="1">#<cpp:directive pos:line="340" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="340" pos:column="9">__IDebugBreakpointBoundEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="341" pos:column="1">typedef <type><name pos:line="341" pos:column="9">interface</name> <name pos:line="341" pos:column="19">IDebugBreakpointBoundEvent2</name></type> <name pos:line="341" pos:column="47">IDebugBreakpointBoundEvent2</name>;</typedef>
<cpp:endif pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="342" pos:column="9">/* __IDebugBreakpointBoundEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="345" pos:column="1">#<cpp:directive pos:line="345" pos:column="2">ifndef</cpp:directive> <name pos:line="345" pos:column="9">__IDebugBreakpointUnboundEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="346" pos:column="1">#<cpp:directive pos:line="346" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="346" pos:column="9">__IDebugBreakpointUnboundEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="347" pos:column="1">typedef <type><name pos:line="347" pos:column="9">interface</name> <name pos:line="347" pos:column="19">IDebugBreakpointUnboundEvent2</name></type> <name pos:line="347" pos:column="49">IDebugBreakpointUnboundEvent2</name>;</typedef>
<cpp:endif pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="348" pos:column="9">/* __IDebugBreakpointUnboundEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="351" pos:column="1">#<cpp:directive pos:line="351" pos:column="2">ifndef</cpp:directive> <name pos:line="351" pos:column="9">__IDebugBreakpointErrorEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="352" pos:column="9">__IDebugBreakpointErrorEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="353" pos:column="1">typedef <type><name pos:line="353" pos:column="9">interface</name> <name pos:line="353" pos:column="19">IDebugBreakpointErrorEvent2</name></type> <name pos:line="353" pos:column="47">IDebugBreakpointErrorEvent2</name>;</typedef>
<cpp:endif pos:line="354" pos:column="1">#<cpp:directive pos:line="354" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="354" pos:column="9">/* __IDebugBreakpointErrorEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="357" pos:column="1">#<cpp:directive pos:line="357" pos:column="2">ifndef</cpp:directive> <name pos:line="357" pos:column="9">__IDebugExpressionEvaluationCompleteEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="358" pos:column="1">#<cpp:directive pos:line="358" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="358" pos:column="9">__IDebugExpressionEvaluationCompleteEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="359" pos:column="1">typedef <type><name pos:line="359" pos:column="9">interface</name> <name pos:line="359" pos:column="19">IDebugExpressionEvaluationCompleteEvent2</name></type> <name pos:line="359" pos:column="60">IDebugExpressionEvaluationCompleteEvent2</name>;</typedef>
<cpp:endif pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="360" pos:column="9">/* __IDebugExpressionEvaluationCompleteEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">ifndef</cpp:directive> <name pos:line="363" pos:column="9">__IDebugReturnValueEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="364" pos:column="1">#<cpp:directive pos:line="364" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="364" pos:column="9">__IDebugReturnValueEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="365" pos:column="1">typedef <type><name pos:line="365" pos:column="9">interface</name> <name pos:line="365" pos:column="19">IDebugReturnValueEvent2</name></type> <name pos:line="365" pos:column="43">IDebugReturnValueEvent2</name>;</typedef>
<cpp:endif pos:line="366" pos:column="1">#<cpp:directive pos:line="366" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="366" pos:column="9">/* __IDebugReturnValueEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="369" pos:column="1">#<cpp:directive pos:line="369" pos:column="2">ifndef</cpp:directive> <name pos:line="369" pos:column="9">__IDebugNoSymbolsEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="370" pos:column="1">#<cpp:directive pos:line="370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="370" pos:column="9">__IDebugNoSymbolsEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="371" pos:column="1">typedef <type><name pos:line="371" pos:column="9">interface</name> <name pos:line="371" pos:column="19">IDebugNoSymbolsEvent2</name></type> <name pos:line="371" pos:column="41">IDebugNoSymbolsEvent2</name>;</typedef>
<cpp:endif pos:line="372" pos:column="1">#<cpp:directive pos:line="372" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="372" pos:column="9">/* __IDebugNoSymbolsEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="375" pos:column="1">#<cpp:directive pos:line="375" pos:column="2">ifndef</cpp:directive> <name pos:line="375" pos:column="9">__IDebugProgramNameChangedEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="376" pos:column="1">#<cpp:directive pos:line="376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="376" pos:column="9">__IDebugProgramNameChangedEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="377" pos:column="1">typedef <type><name pos:line="377" pos:column="9">interface</name> <name pos:line="377" pos:column="19">IDebugProgramNameChangedEvent2</name></type> <name pos:line="377" pos:column="50">IDebugProgramNameChangedEvent2</name>;</typedef>
<cpp:endif pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="378" pos:column="9">/* __IDebugProgramNameChangedEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="381" pos:column="1">#<cpp:directive pos:line="381" pos:column="2">ifndef</cpp:directive> <name pos:line="381" pos:column="9">__IDebugThreadNameChangedEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="382" pos:column="9">__IDebugThreadNameChangedEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="383" pos:column="1">typedef <type><name pos:line="383" pos:column="9">interface</name> <name pos:line="383" pos:column="19">IDebugThreadNameChangedEvent2</name></type> <name pos:line="383" pos:column="49">IDebugThreadNameChangedEvent2</name>;</typedef>
<cpp:endif pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="384" pos:column="9">/* __IDebugThreadNameChangedEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="387" pos:column="1">#<cpp:directive pos:line="387" pos:column="2">ifndef</cpp:directive> <name pos:line="387" pos:column="9">__IDebugMessageEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="388" pos:column="1">#<cpp:directive pos:line="388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="388" pos:column="9">__IDebugMessageEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="389" pos:column="1">typedef <type><name pos:line="389" pos:column="9">interface</name> <name pos:line="389" pos:column="19">IDebugMessageEvent2</name></type> <name pos:line="389" pos:column="39">IDebugMessageEvent2</name>;</typedef>
<cpp:endif pos:line="390" pos:column="1">#<cpp:directive pos:line="390" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="390" pos:column="9">/* __IDebugMessageEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">ifndef</cpp:directive> <name pos:line="393" pos:column="9">__IDebugErrorEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="394" pos:column="1">#<cpp:directive pos:line="394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="394" pos:column="9">__IDebugErrorEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="395" pos:column="1">typedef <type><name pos:line="395" pos:column="9">interface</name> <name pos:line="395" pos:column="19">IDebugErrorEvent2</name></type> <name pos:line="395" pos:column="37">IDebugErrorEvent2</name>;</typedef>
<cpp:endif pos:line="396" pos:column="1">#<cpp:directive pos:line="396" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="396" pos:column="9">/* __IDebugErrorEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="399" pos:column="1">#<cpp:directive pos:line="399" pos:column="2">ifndef</cpp:directive> <name pos:line="399" pos:column="9">__IDebugActivateDocumentEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="400" pos:column="1">#<cpp:directive pos:line="400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="400" pos:column="9">__IDebugActivateDocumentEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="401" pos:column="1">typedef <type><name pos:line="401" pos:column="9">interface</name> <name pos:line="401" pos:column="19">IDebugActivateDocumentEvent2</name></type> <name pos:line="401" pos:column="48">IDebugActivateDocumentEvent2</name>;</typedef>
<cpp:endif pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="402" pos:column="9">/* __IDebugActivateDocumentEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">ifndef</cpp:directive> <name pos:line="405" pos:column="9">__IDebugInterceptExceptionCompleteEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="406" pos:column="1">#<cpp:directive pos:line="406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="406" pos:column="9">__IDebugInterceptExceptionCompleteEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="407" pos:column="1">typedef <type><name pos:line="407" pos:column="9">interface</name> <name pos:line="407" pos:column="19">IDebugInterceptExceptionCompleteEvent2</name></type> <name pos:line="407" pos:column="58">IDebugInterceptExceptionCompleteEvent2</name>;</typedef>
<cpp:endif pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="408" pos:column="9">/* __IDebugInterceptExceptionCompleteEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">ifndef</cpp:directive> <name pos:line="411" pos:column="9">__IDebugAttachCompleteEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="412" pos:column="9">__IDebugAttachCompleteEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="413" pos:column="1">typedef <type><name pos:line="413" pos:column="9">interface</name> <name pos:line="413" pos:column="19">IDebugAttachCompleteEvent2</name></type> <name pos:line="413" pos:column="46">IDebugAttachCompleteEvent2</name>;</typedef>
<cpp:endif pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="414" pos:column="9">/* __IDebugAttachCompleteEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">ifndef</cpp:directive> <name pos:line="417" pos:column="9">__IDebugFuncEvalAbortedEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="418" pos:column="1">#<cpp:directive pos:line="418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="418" pos:column="9">__IDebugFuncEvalAbortedEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="419" pos:column="1">typedef <type><name pos:line="419" pos:column="9">interface</name> <name pos:line="419" pos:column="19">IDebugFuncEvalAbortedEvent2</name></type> <name pos:line="419" pos:column="47">IDebugFuncEvalAbortedEvent2</name>;</typedef>
<cpp:endif pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="420" pos:column="9">/* __IDebugFuncEvalAbortedEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="423" pos:column="1">#<cpp:directive pos:line="423" pos:column="2">ifndef</cpp:directive> <name pos:line="423" pos:column="9">__IDebugStopCompleteEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="424" pos:column="1">#<cpp:directive pos:line="424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="424" pos:column="9">__IDebugStopCompleteEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="425" pos:column="1">typedef <type><name pos:line="425" pos:column="9">interface</name> <name pos:line="425" pos:column="19">IDebugStopCompleteEvent2</name></type> <name pos:line="425" pos:column="44">IDebugStopCompleteEvent2</name>;</typedef>
<cpp:endif pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="426" pos:column="9">/* __IDebugStopCompleteEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="429" pos:column="1">#<cpp:directive pos:line="429" pos:column="2">ifndef</cpp:directive> <name pos:line="429" pos:column="9">__IDebugEncNotify_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="430" pos:column="1">#<cpp:directive pos:line="430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="430" pos:column="9">__IDebugEncNotify_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="431" pos:column="1">typedef <type><name pos:line="431" pos:column="9">interface</name> <name pos:line="431" pos:column="19">IDebugEncNotify</name></type> <name pos:line="431" pos:column="35">IDebugEncNotify</name>;</typedef>
<cpp:endif pos:line="432" pos:column="1">#<cpp:directive pos:line="432" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="432" pos:column="9">/* __IDebugEncNotify_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="435" pos:column="1">#<cpp:directive pos:line="435" pos:column="2">ifndef</cpp:directive> <name pos:line="435" pos:column="9">__IDebugSessionEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="436" pos:column="9">__IDebugSessionEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="437" pos:column="1">typedef <type><name pos:line="437" pos:column="9">interface</name> <name pos:line="437" pos:column="19">IDebugSessionEvent2</name></type> <name pos:line="437" pos:column="39">IDebugSessionEvent2</name>;</typedef>
<cpp:endif pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="438" pos:column="9">/* __IDebugSessionEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">ifndef</cpp:directive> <name pos:line="441" pos:column="9">__IDebugProcess2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="442" pos:column="1">#<cpp:directive pos:line="442" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="442" pos:column="9">__IDebugProcess2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="443" pos:column="1">typedef <type><name pos:line="443" pos:column="9">interface</name> <name pos:line="443" pos:column="19">IDebugProcess2</name></type> <name pos:line="443" pos:column="34">IDebugProcess2</name>;</typedef>
<cpp:endif pos:line="444" pos:column="1">#<cpp:directive pos:line="444" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="444" pos:column="9">/* __IDebugProcess2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="447" pos:column="1">#<cpp:directive pos:line="447" pos:column="2">ifndef</cpp:directive> <name pos:line="447" pos:column="9">__IDebugProcess3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="448" pos:column="1">#<cpp:directive pos:line="448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="448" pos:column="9">__IDebugProcess3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="449" pos:column="1">typedef <type><name pos:line="449" pos:column="9">interface</name> <name pos:line="449" pos:column="19">IDebugProcess3</name></type> <name pos:line="449" pos:column="34">IDebugProcess3</name>;</typedef>
<cpp:endif pos:line="450" pos:column="1">#<cpp:directive pos:line="450" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="450" pos:column="9">/* __IDebugProcess3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">ifndef</cpp:directive> <name pos:line="453" pos:column="9">__IDebugProcessSecurity2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="454" pos:column="1">#<cpp:directive pos:line="454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="454" pos:column="9">__IDebugProcessSecurity2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="455" pos:column="1">typedef <type><name pos:line="455" pos:column="9">interface</name> <name pos:line="455" pos:column="19">IDebugProcessSecurity2</name></type> <name pos:line="455" pos:column="42">IDebugProcessSecurity2</name>;</typedef>
<cpp:endif pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="456" pos:column="9">/* __IDebugProcessSecurity2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="459" pos:column="1">#<cpp:directive pos:line="459" pos:column="2">ifndef</cpp:directive> <name pos:line="459" pos:column="9">__IDebugProgram2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="460" pos:column="1">#<cpp:directive pos:line="460" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="460" pos:column="9">__IDebugProgram2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="461" pos:column="1">typedef <type><name pos:line="461" pos:column="9">interface</name> <name pos:line="461" pos:column="19">IDebugProgram2</name></type> <name pos:line="461" pos:column="34">IDebugProgram2</name>;</typedef>
<cpp:endif pos:line="462" pos:column="1">#<cpp:directive pos:line="462" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="462" pos:column="9">/* __IDebugProgram2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="465" pos:column="1">#<cpp:directive pos:line="465" pos:column="2">ifndef</cpp:directive> <name pos:line="465" pos:column="9">__IDebugProgram3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="466" pos:column="1">#<cpp:directive pos:line="466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="466" pos:column="9">__IDebugProgram3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="467" pos:column="1">typedef <type><name pos:line="467" pos:column="9">interface</name> <name pos:line="467" pos:column="19">IDebugProgram3</name></type> <name pos:line="467" pos:column="34">IDebugProgram3</name>;</typedef>
<cpp:endif pos:line="468" pos:column="1">#<cpp:directive pos:line="468" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="468" pos:column="9">/* __IDebugProgram3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="471" pos:column="1">#<cpp:directive pos:line="471" pos:column="2">ifndef</cpp:directive> <name pos:line="471" pos:column="9">__IDebugEngineProgram2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="472" pos:column="1">#<cpp:directive pos:line="472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="472" pos:column="9">__IDebugEngineProgram2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="473" pos:column="1">typedef <type><name pos:line="473" pos:column="9">interface</name> <name pos:line="473" pos:column="19">IDebugEngineProgram2</name></type> <name pos:line="473" pos:column="40">IDebugEngineProgram2</name>;</typedef>
<cpp:endif pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="474" pos:column="9">/* __IDebugEngineProgram2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="477" pos:column="1">#<cpp:directive pos:line="477" pos:column="2">ifndef</cpp:directive> <name pos:line="477" pos:column="9">__IDebugProgramHost2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="478" pos:column="1">#<cpp:directive pos:line="478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="478" pos:column="9">__IDebugProgramHost2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="479" pos:column="1">typedef <type><name pos:line="479" pos:column="9">interface</name> <name pos:line="479" pos:column="19">IDebugProgramHost2</name></type> <name pos:line="479" pos:column="38">IDebugProgramHost2</name>;</typedef>
<cpp:endif pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="480" pos:column="9">/* __IDebugProgramHost2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">ifndef</cpp:directive> <name pos:line="483" pos:column="9">__IDebugProgramNode2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="484" pos:column="1">#<cpp:directive pos:line="484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="484" pos:column="9">__IDebugProgramNode2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="485" pos:column="1">typedef <type><name pos:line="485" pos:column="9">interface</name> <name pos:line="485" pos:column="19">IDebugProgramNode2</name></type> <name pos:line="485" pos:column="38">IDebugProgramNode2</name>;</typedef>
<cpp:endif pos:line="486" pos:column="1">#<cpp:directive pos:line="486" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="486" pos:column="9">/* __IDebugProgramNode2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="489" pos:column="1">#<cpp:directive pos:line="489" pos:column="2">ifndef</cpp:directive> <name pos:line="489" pos:column="9">__IDebugProgramNodeAttach2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="490" pos:column="1">#<cpp:directive pos:line="490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="490" pos:column="9">__IDebugProgramNodeAttach2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="491" pos:column="1">typedef <type><name pos:line="491" pos:column="9">interface</name> <name pos:line="491" pos:column="19">IDebugProgramNodeAttach2</name></type> <name pos:line="491" pos:column="44">IDebugProgramNodeAttach2</name>;</typedef>
<cpp:endif pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="492" pos:column="9">/* __IDebugProgramNodeAttach2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="495" pos:column="1">#<cpp:directive pos:line="495" pos:column="2">ifndef</cpp:directive> <name pos:line="495" pos:column="9">__IDebugProgramEngines2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="496" pos:column="1">#<cpp:directive pos:line="496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="496" pos:column="9">__IDebugProgramEngines2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="497" pos:column="1">typedef <type><name pos:line="497" pos:column="9">interface</name> <name pos:line="497" pos:column="19">IDebugProgramEngines2</name></type> <name pos:line="497" pos:column="41">IDebugProgramEngines2</name>;</typedef>
<cpp:endif pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="498" pos:column="9">/* __IDebugProgramEngines2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="501" pos:column="1">#<cpp:directive pos:line="501" pos:column="2">ifndef</cpp:directive> <name pos:line="501" pos:column="9">__IDebugCOMPlusProgramNode2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="502" pos:column="1">#<cpp:directive pos:line="502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="502" pos:column="9">__IDebugCOMPlusProgramNode2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="503" pos:column="1">typedef <type><name pos:line="503" pos:column="9">interface</name> <name pos:line="503" pos:column="19">IDebugCOMPlusProgramNode2</name></type> <name pos:line="503" pos:column="45">IDebugCOMPlusProgramNode2</name>;</typedef>
<cpp:endif pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="504" pos:column="9">/* __IDebugCOMPlusProgramNode2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">ifndef</cpp:directive> <name pos:line="507" pos:column="9">__IDebugSQLCLRProgramNode2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="508" pos:column="1">#<cpp:directive pos:line="508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="508" pos:column="9">__IDebugSQLCLRProgramNode2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="509" pos:column="1">typedef <type><name pos:line="509" pos:column="9">interface</name> <name pos:line="509" pos:column="19">IDebugSQLCLRProgramNode2</name></type> <name pos:line="509" pos:column="44">IDebugSQLCLRProgramNode2</name>;</typedef>
<cpp:endif pos:line="510" pos:column="1">#<cpp:directive pos:line="510" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="510" pos:column="9">/* __IDebugSQLCLRProgramNode2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="513" pos:column="1">#<cpp:directive pos:line="513" pos:column="2">ifndef</cpp:directive> <name pos:line="513" pos:column="9">__IDebugThread2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="514" pos:column="9">__IDebugThread2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="515" pos:column="1">typedef <type><name pos:line="515" pos:column="9">interface</name> <name pos:line="515" pos:column="19">IDebugThread2</name></type> <name pos:line="515" pos:column="33">IDebugThread2</name>;</typedef>
<cpp:endif pos:line="516" pos:column="1">#<cpp:directive pos:line="516" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="516" pos:column="9">/* __IDebugThread2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="519" pos:column="1">#<cpp:directive pos:line="519" pos:column="2">ifndef</cpp:directive> <name pos:line="519" pos:column="9">__IDebugLogicalThread2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="520" pos:column="1">#<cpp:directive pos:line="520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="520" pos:column="9">__IDebugLogicalThread2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="521" pos:column="1">typedef <type><name pos:line="521" pos:column="9">interface</name> <name pos:line="521" pos:column="19">IDebugLogicalThread2</name></type> <name pos:line="521" pos:column="40">IDebugLogicalThread2</name>;</typedef>
<cpp:endif pos:line="522" pos:column="1">#<cpp:directive pos:line="522" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="522" pos:column="9">/* __IDebugLogicalThread2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="525" pos:column="1">#<cpp:directive pos:line="525" pos:column="2">ifndef</cpp:directive> <name pos:line="525" pos:column="9">__IDebugThread3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="526" pos:column="1">#<cpp:directive pos:line="526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="526" pos:column="9">__IDebugThread3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="527" pos:column="1">typedef <type><name pos:line="527" pos:column="9">interface</name> <name pos:line="527" pos:column="19">IDebugThread3</name></type> <name pos:line="527" pos:column="33">IDebugThread3</name>;</typedef>
<cpp:endif pos:line="528" pos:column="1">#<cpp:directive pos:line="528" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="528" pos:column="9">/* __IDebugThread3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="531" pos:column="1">#<cpp:directive pos:line="531" pos:column="2">ifndef</cpp:directive> <name pos:line="531" pos:column="9">__IDebugProperty2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="532" pos:column="1">#<cpp:directive pos:line="532" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="532" pos:column="9">__IDebugProperty2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="533" pos:column="1">typedef <type><name pos:line="533" pos:column="9">interface</name> <name pos:line="533" pos:column="19">IDebugProperty2</name></type> <name pos:line="533" pos:column="35">IDebugProperty2</name>;</typedef>
<cpp:endif pos:line="534" pos:column="1">#<cpp:directive pos:line="534" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="534" pos:column="9">/* __IDebugProperty2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="537" pos:column="1">#<cpp:directive pos:line="537" pos:column="2">ifndef</cpp:directive> <name pos:line="537" pos:column="9">__IDebugProperty3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="538" pos:column="1">#<cpp:directive pos:line="538" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="538" pos:column="9">__IDebugProperty3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="539" pos:column="1">typedef <type><name pos:line="539" pos:column="9">interface</name> <name pos:line="539" pos:column="19">IDebugProperty3</name></type> <name pos:line="539" pos:column="35">IDebugProperty3</name>;</typedef>
<cpp:endif pos:line="540" pos:column="1">#<cpp:directive pos:line="540" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="540" pos:column="9">/* __IDebugProperty3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="543" pos:column="1">#<cpp:directive pos:line="543" pos:column="2">ifndef</cpp:directive> <name pos:line="543" pos:column="9">__IDebugSessionProperty2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="544" pos:column="1">#<cpp:directive pos:line="544" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="544" pos:column="9">__IDebugSessionProperty2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="545" pos:column="1">typedef <type><name pos:line="545" pos:column="9">interface</name> <name pos:line="545" pos:column="19">IDebugSessionProperty2</name></type> <name pos:line="545" pos:column="42">IDebugSessionProperty2</name>;</typedef>
<cpp:endif pos:line="546" pos:column="1">#<cpp:directive pos:line="546" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="546" pos:column="9">/* __IDebugSessionProperty2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="549" pos:column="1">#<cpp:directive pos:line="549" pos:column="2">ifndef</cpp:directive> <name pos:line="549" pos:column="9">__IDebugPropertyClose2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="550" pos:column="1">#<cpp:directive pos:line="550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="550" pos:column="9">__IDebugPropertyClose2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="551" pos:column="1">typedef <type><name pos:line="551" pos:column="9">interface</name> <name pos:line="551" pos:column="19">IDebugPropertyClose2</name></type> <name pos:line="551" pos:column="40">IDebugPropertyClose2</name>;</typedef>
<cpp:endif pos:line="552" pos:column="1">#<cpp:directive pos:line="552" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="552" pos:column="9">/* __IDebugPropertyClose2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="555" pos:column="1">#<cpp:directive pos:line="555" pos:column="2">ifndef</cpp:directive> <name pos:line="555" pos:column="9">__IDebugDataGrid_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="556" pos:column="1">#<cpp:directive pos:line="556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="556" pos:column="9">__IDebugDataGrid_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="557" pos:column="1">typedef <type><name pos:line="557" pos:column="9">interface</name> <name pos:line="557" pos:column="19">IDebugDataGrid</name></type> <name pos:line="557" pos:column="34">IDebugDataGrid</name>;</typedef>
<cpp:endif pos:line="558" pos:column="1">#<cpp:directive pos:line="558" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="558" pos:column="9">/* __IDebugDataGrid_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="561" pos:column="1">#<cpp:directive pos:line="561" pos:column="2">ifndef</cpp:directive> <name pos:line="561" pos:column="9">__IDebugPropertySafetyWrapper_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="562" pos:column="1">#<cpp:directive pos:line="562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="562" pos:column="9">__IDebugPropertySafetyWrapper_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="563" pos:column="1">typedef <type><name pos:line="563" pos:column="9">interface</name> <name pos:line="563" pos:column="19">IDebugPropertySafetyWrapper</name></type> <name pos:line="563" pos:column="47">IDebugPropertySafetyWrapper</name>;</typedef>
<cpp:endif pos:line="564" pos:column="1">#<cpp:directive pos:line="564" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="564" pos:column="9">/* __IDebugPropertySafetyWrapper_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="567" pos:column="1">#<cpp:directive pos:line="567" pos:column="2">ifndef</cpp:directive> <name pos:line="567" pos:column="9">__IDebugReference2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="568" pos:column="1">#<cpp:directive pos:line="568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="568" pos:column="9">__IDebugReference2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="569" pos:column="1">typedef <type><name pos:line="569" pos:column="9">interface</name> <name pos:line="569" pos:column="19">IDebugReference2</name></type> <name pos:line="569" pos:column="36">IDebugReference2</name>;</typedef>
<cpp:endif pos:line="570" pos:column="1">#<cpp:directive pos:line="570" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="570" pos:column="9">/* __IDebugReference2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="573" pos:column="1">#<cpp:directive pos:line="573" pos:column="2">ifndef</cpp:directive> <name pos:line="573" pos:column="9">__IDebugStackFrame2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="574" pos:column="1">#<cpp:directive pos:line="574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="574" pos:column="9">__IDebugStackFrame2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="575" pos:column="1">typedef <type><name pos:line="575" pos:column="9">interface</name> <name pos:line="575" pos:column="19">IDebugStackFrame2</name></type> <name pos:line="575" pos:column="37">IDebugStackFrame2</name>;</typedef>
<cpp:endif pos:line="576" pos:column="1">#<cpp:directive pos:line="576" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="576" pos:column="9">/* __IDebugStackFrame2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="579" pos:column="1">#<cpp:directive pos:line="579" pos:column="2">ifndef</cpp:directive> <name pos:line="579" pos:column="9">__IDebugStackFrame3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="580" pos:column="1">#<cpp:directive pos:line="580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="580" pos:column="9">__IDebugStackFrame3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="581" pos:column="1">typedef <type><name pos:line="581" pos:column="9">interface</name> <name pos:line="581" pos:column="19">IDebugStackFrame3</name></type> <name pos:line="581" pos:column="37">IDebugStackFrame3</name>;</typedef>
<cpp:endif pos:line="582" pos:column="1">#<cpp:directive pos:line="582" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="582" pos:column="9">/* __IDebugStackFrame3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="585" pos:column="1">#<cpp:directive pos:line="585" pos:column="2">ifndef</cpp:directive> <name pos:line="585" pos:column="9">__IDebugMemoryContext2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="586" pos:column="1">#<cpp:directive pos:line="586" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="586" pos:column="9">__IDebugMemoryContext2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="587" pos:column="1">typedef <type><name pos:line="587" pos:column="9">interface</name> <name pos:line="587" pos:column="19">IDebugMemoryContext2</name></type> <name pos:line="587" pos:column="40">IDebugMemoryContext2</name>;</typedef>
<cpp:endif pos:line="588" pos:column="1">#<cpp:directive pos:line="588" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="588" pos:column="9">/* __IDebugMemoryContext2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="591" pos:column="1">#<cpp:directive pos:line="591" pos:column="2">ifndef</cpp:directive> <name pos:line="591" pos:column="9">__IDebugCodeContext2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="592" pos:column="1">#<cpp:directive pos:line="592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="592" pos:column="9">__IDebugCodeContext2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="593" pos:column="1">typedef <type><name pos:line="593" pos:column="9">interface</name> <name pos:line="593" pos:column="19">IDebugCodeContext2</name></type> <name pos:line="593" pos:column="38">IDebugCodeContext2</name>;</typedef>
<cpp:endif pos:line="594" pos:column="1">#<cpp:directive pos:line="594" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="594" pos:column="9">/* __IDebugCodeContext2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="597" pos:column="1">#<cpp:directive pos:line="597" pos:column="2">ifndef</cpp:directive> <name pos:line="597" pos:column="9">__IDebugCodeContext3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="598" pos:column="1">#<cpp:directive pos:line="598" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="598" pos:column="9">__IDebugCodeContext3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="599" pos:column="1">typedef <type><name pos:line="599" pos:column="9">interface</name> <name pos:line="599" pos:column="19">IDebugCodeContext3</name></type> <name pos:line="599" pos:column="38">IDebugCodeContext3</name>;</typedef>
<cpp:endif pos:line="600" pos:column="1">#<cpp:directive pos:line="600" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="600" pos:column="9">/* __IDebugCodeContext3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="603" pos:column="1">#<cpp:directive pos:line="603" pos:column="2">ifndef</cpp:directive> <name pos:line="603" pos:column="9">__IDebugMemoryBytes2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="604" pos:column="1">#<cpp:directive pos:line="604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="604" pos:column="9">__IDebugMemoryBytes2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="605" pos:column="1">typedef <type><name pos:line="605" pos:column="9">interface</name> <name pos:line="605" pos:column="19">IDebugMemoryBytes2</name></type> <name pos:line="605" pos:column="38">IDebugMemoryBytes2</name>;</typedef>
<cpp:endif pos:line="606" pos:column="1">#<cpp:directive pos:line="606" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="606" pos:column="9">/* __IDebugMemoryBytes2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="609" pos:column="1">#<cpp:directive pos:line="609" pos:column="2">ifndef</cpp:directive> <name pos:line="609" pos:column="9">__IDebugDisassemblyStream2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="610" pos:column="1">#<cpp:directive pos:line="610" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="610" pos:column="9">__IDebugDisassemblyStream2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="611" pos:column="1">typedef <type><name pos:line="611" pos:column="9">interface</name> <name pos:line="611" pos:column="19">IDebugDisassemblyStream2</name></type> <name pos:line="611" pos:column="44">IDebugDisassemblyStream2</name>;</typedef>
<cpp:endif pos:line="612" pos:column="1">#<cpp:directive pos:line="612" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="612" pos:column="9">/* __IDebugDisassemblyStream2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="615" pos:column="1">#<cpp:directive pos:line="615" pos:column="2">ifndef</cpp:directive> <name pos:line="615" pos:column="9">__IDebugDocumentContext2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="616" pos:column="1">#<cpp:directive pos:line="616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="616" pos:column="9">__IDebugDocumentContext2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="617" pos:column="1">typedef <type><name pos:line="617" pos:column="9">interface</name> <name pos:line="617" pos:column="19">IDebugDocumentContext2</name></type> <name pos:line="617" pos:column="42">IDebugDocumentContext2</name>;</typedef>
<cpp:endif pos:line="618" pos:column="1">#<cpp:directive pos:line="618" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="618" pos:column="9">/* __IDebugDocumentContext2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="621" pos:column="1">#<cpp:directive pos:line="621" pos:column="2">ifndef</cpp:directive> <name pos:line="621" pos:column="9">__IDebugDocumentChecksum2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="622" pos:column="1">#<cpp:directive pos:line="622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="622" pos:column="9">__IDebugDocumentChecksum2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="623" pos:column="1">typedef <type><name pos:line="623" pos:column="9">interface</name> <name pos:line="623" pos:column="19">IDebugDocumentChecksum2</name></type> <name pos:line="623" pos:column="43">IDebugDocumentChecksum2</name>;</typedef>
<cpp:endif pos:line="624" pos:column="1">#<cpp:directive pos:line="624" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="624" pos:column="9">/* __IDebugDocumentChecksum2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="627" pos:column="1">#<cpp:directive pos:line="627" pos:column="2">ifndef</cpp:directive> <name pos:line="627" pos:column="9">__IDebugENCDocumentContextUpdate_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="628" pos:column="1">#<cpp:directive pos:line="628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="628" pos:column="9">__IDebugENCDocumentContextUpdate_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="629" pos:column="1">typedef <type><name pos:line="629" pos:column="9">interface</name> <name pos:line="629" pos:column="19">IDebugENCDocumentContextUpdate</name></type> <name pos:line="629" pos:column="50">IDebugENCDocumentContextUpdate</name>;</typedef>
<cpp:endif pos:line="630" pos:column="1">#<cpp:directive pos:line="630" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="630" pos:column="9">/* __IDebugENCDocumentContextUpdate_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="633" pos:column="1">#<cpp:directive pos:line="633" pos:column="2">ifndef</cpp:directive> <name pos:line="633" pos:column="9">__IDebugExpressionContext2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="634" pos:column="1">#<cpp:directive pos:line="634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="634" pos:column="9">__IDebugExpressionContext2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="635" pos:column="1">typedef <type><name pos:line="635" pos:column="9">interface</name> <name pos:line="635" pos:column="19">IDebugExpressionContext2</name></type> <name pos:line="635" pos:column="44">IDebugExpressionContext2</name>;</typedef>
<cpp:endif pos:line="636" pos:column="1">#<cpp:directive pos:line="636" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="636" pos:column="9">/* __IDebugExpressionContext2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="639" pos:column="1">#<cpp:directive pos:line="639" pos:column="2">ifndef</cpp:directive> <name pos:line="639" pos:column="9">__IDebugBreakpointRequest2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="640" pos:column="1">#<cpp:directive pos:line="640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="640" pos:column="9">__IDebugBreakpointRequest2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="641" pos:column="1">typedef <type><name pos:line="641" pos:column="9">interface</name> <name pos:line="641" pos:column="19">IDebugBreakpointRequest2</name></type> <name pos:line="641" pos:column="44">IDebugBreakpointRequest2</name>;</typedef>
<cpp:endif pos:line="642" pos:column="1">#<cpp:directive pos:line="642" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="642" pos:column="9">/* __IDebugBreakpointRequest2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="645" pos:column="1">#<cpp:directive pos:line="645" pos:column="2">ifndef</cpp:directive> <name pos:line="645" pos:column="9">__IDebugBreakpointChecksumRequest2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="646" pos:column="1">#<cpp:directive pos:line="646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="646" pos:column="9">__IDebugBreakpointChecksumRequest2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="647" pos:column="1">typedef <type><name pos:line="647" pos:column="9">interface</name> <name pos:line="647" pos:column="19">IDebugBreakpointChecksumRequest2</name></type> <name pos:line="647" pos:column="52">IDebugBreakpointChecksumRequest2</name>;</typedef>
<cpp:endif pos:line="648" pos:column="1">#<cpp:directive pos:line="648" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="648" pos:column="9">/* __IDebugBreakpointChecksumRequest2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="651" pos:column="1">#<cpp:directive pos:line="651" pos:column="2">ifndef</cpp:directive> <name pos:line="651" pos:column="9">__IDebugBreakpointRequest3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="652" pos:column="1">#<cpp:directive pos:line="652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="652" pos:column="9">__IDebugBreakpointRequest3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="653" pos:column="1">typedef <type><name pos:line="653" pos:column="9">interface</name> <name pos:line="653" pos:column="19">IDebugBreakpointRequest3</name></type> <name pos:line="653" pos:column="44">IDebugBreakpointRequest3</name>;</typedef>
<cpp:endif pos:line="654" pos:column="1">#<cpp:directive pos:line="654" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="654" pos:column="9">/* __IDebugBreakpointRequest3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="657" pos:column="1">#<cpp:directive pos:line="657" pos:column="2">ifndef</cpp:directive> <name pos:line="657" pos:column="9">__IDebugBreakpointResolution2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="658" pos:column="1">#<cpp:directive pos:line="658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="658" pos:column="9">__IDebugBreakpointResolution2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="659" pos:column="1">typedef <type><name pos:line="659" pos:column="9">interface</name> <name pos:line="659" pos:column="19">IDebugBreakpointResolution2</name></type> <name pos:line="659" pos:column="47">IDebugBreakpointResolution2</name>;</typedef>
<cpp:endif pos:line="660" pos:column="1">#<cpp:directive pos:line="660" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="660" pos:column="9">/* __IDebugBreakpointResolution2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="663" pos:column="1">#<cpp:directive pos:line="663" pos:column="2">ifndef</cpp:directive> <name pos:line="663" pos:column="9">__IDebugErrorBreakpointResolution2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="664" pos:column="1">#<cpp:directive pos:line="664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="664" pos:column="9">__IDebugErrorBreakpointResolution2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="665" pos:column="1">typedef <type><name pos:line="665" pos:column="9">interface</name> <name pos:line="665" pos:column="19">IDebugErrorBreakpointResolution2</name></type> <name pos:line="665" pos:column="52">IDebugErrorBreakpointResolution2</name>;</typedef>
<cpp:endif pos:line="666" pos:column="1">#<cpp:directive pos:line="666" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="666" pos:column="9">/* __IDebugErrorBreakpointResolution2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="669" pos:column="1">#<cpp:directive pos:line="669" pos:column="2">ifndef</cpp:directive> <name pos:line="669" pos:column="9">__IDebugBoundBreakpoint2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="670" pos:column="1">#<cpp:directive pos:line="670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="670" pos:column="9">__IDebugBoundBreakpoint2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="671" pos:column="1">typedef <type><name pos:line="671" pos:column="9">interface</name> <name pos:line="671" pos:column="19">IDebugBoundBreakpoint2</name></type> <name pos:line="671" pos:column="42">IDebugBoundBreakpoint2</name>;</typedef>
<cpp:endif pos:line="672" pos:column="1">#<cpp:directive pos:line="672" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="672" pos:column="9">/* __IDebugBoundBreakpoint2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="675" pos:column="1">#<cpp:directive pos:line="675" pos:column="2">ifndef</cpp:directive> <name pos:line="675" pos:column="9">__IDebugBoundBreakpoint3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="676" pos:column="1">#<cpp:directive pos:line="676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="676" pos:column="9">__IDebugBoundBreakpoint3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="677" pos:column="1">typedef <type><name pos:line="677" pos:column="9">interface</name> <name pos:line="677" pos:column="19">IDebugBoundBreakpoint3</name></type> <name pos:line="677" pos:column="42">IDebugBoundBreakpoint3</name>;</typedef>
<cpp:endif pos:line="678" pos:column="1">#<cpp:directive pos:line="678" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="678" pos:column="9">/* __IDebugBoundBreakpoint3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="681" pos:column="1">#<cpp:directive pos:line="681" pos:column="2">ifndef</cpp:directive> <name pos:line="681" pos:column="9">__IDebugPendingBreakpoint2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="682" pos:column="1">#<cpp:directive pos:line="682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="682" pos:column="9">__IDebugPendingBreakpoint2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="683" pos:column="1">typedef <type><name pos:line="683" pos:column="9">interface</name> <name pos:line="683" pos:column="19">IDebugPendingBreakpoint2</name></type> <name pos:line="683" pos:column="44">IDebugPendingBreakpoint2</name>;</typedef>
<cpp:endif pos:line="684" pos:column="1">#<cpp:directive pos:line="684" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="684" pos:column="9">/* __IDebugPendingBreakpoint2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="687" pos:column="1">#<cpp:directive pos:line="687" pos:column="2">ifndef</cpp:directive> <name pos:line="687" pos:column="9">__IDebugPendingBreakpoint3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="688" pos:column="1">#<cpp:directive pos:line="688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="688" pos:column="9">__IDebugPendingBreakpoint3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="689" pos:column="1">typedef <type><name pos:line="689" pos:column="9">interface</name> <name pos:line="689" pos:column="19">IDebugPendingBreakpoint3</name></type> <name pos:line="689" pos:column="44">IDebugPendingBreakpoint3</name>;</typedef>
<cpp:endif pos:line="690" pos:column="1">#<cpp:directive pos:line="690" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="690" pos:column="9">/* __IDebugPendingBreakpoint3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="693" pos:column="1">#<cpp:directive pos:line="693" pos:column="2">ifndef</cpp:directive> <name pos:line="693" pos:column="9">__IDebugErrorBreakpoint2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="694" pos:column="1">#<cpp:directive pos:line="694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="694" pos:column="9">__IDebugErrorBreakpoint2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="695" pos:column="1">typedef <type><name pos:line="695" pos:column="9">interface</name> <name pos:line="695" pos:column="19">IDebugErrorBreakpoint2</name></type> <name pos:line="695" pos:column="42">IDebugErrorBreakpoint2</name>;</typedef>
<cpp:endif pos:line="696" pos:column="1">#<cpp:directive pos:line="696" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="696" pos:column="9">/* __IDebugErrorBreakpoint2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="699" pos:column="1">#<cpp:directive pos:line="699" pos:column="2">ifndef</cpp:directive> <name pos:line="699" pos:column="9">__IDebugExpression2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="700" pos:column="1">#<cpp:directive pos:line="700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="700" pos:column="9">__IDebugExpression2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="701" pos:column="1">typedef <type><name pos:line="701" pos:column="9">interface</name> <name pos:line="701" pos:column="19">IDebugExpression2</name></type> <name pos:line="701" pos:column="37">IDebugExpression2</name>;</typedef>
<cpp:endif pos:line="702" pos:column="1">#<cpp:directive pos:line="702" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="702" pos:column="9">/* __IDebugExpression2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="705" pos:column="1">#<cpp:directive pos:line="705" pos:column="2">ifndef</cpp:directive> <name pos:line="705" pos:column="9">__IDebugModule2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="706" pos:column="1">#<cpp:directive pos:line="706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="706" pos:column="9">__IDebugModule2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="707" pos:column="1">typedef <type><name pos:line="707" pos:column="9">interface</name> <name pos:line="707" pos:column="19">IDebugModule2</name></type> <name pos:line="707" pos:column="33">IDebugModule2</name>;</typedef>
<cpp:endif pos:line="708" pos:column="1">#<cpp:directive pos:line="708" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="708" pos:column="9">/* __IDebugModule2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="711" pos:column="1">#<cpp:directive pos:line="711" pos:column="2">ifndef</cpp:directive> <name pos:line="711" pos:column="9">__IDebugModule3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="712" pos:column="1">#<cpp:directive pos:line="712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="712" pos:column="9">__IDebugModule3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="713" pos:column="1">typedef <type><name pos:line="713" pos:column="9">interface</name> <name pos:line="713" pos:column="19">IDebugModule3</name></type> <name pos:line="713" pos:column="33">IDebugModule3</name>;</typedef>
<cpp:endif pos:line="714" pos:column="1">#<cpp:directive pos:line="714" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="714" pos:column="9">/* __IDebugModule3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="717" pos:column="1">#<cpp:directive pos:line="717" pos:column="2">ifndef</cpp:directive> <name pos:line="717" pos:column="9">__IDebugSourceServerModule_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="718" pos:column="1">#<cpp:directive pos:line="718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="718" pos:column="9">__IDebugSourceServerModule_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="719" pos:column="1">typedef <type><name pos:line="719" pos:column="9">interface</name> <name pos:line="719" pos:column="19">IDebugSourceServerModule</name></type> <name pos:line="719" pos:column="44">IDebugSourceServerModule</name>;</typedef>
<cpp:endif pos:line="720" pos:column="1">#<cpp:directive pos:line="720" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="720" pos:column="9">/* __IDebugSourceServerModule_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="723" pos:column="1">#<cpp:directive pos:line="723" pos:column="2">ifndef</cpp:directive> <name pos:line="723" pos:column="9">__IDebugModuleManaged_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="724" pos:column="1">#<cpp:directive pos:line="724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="724" pos:column="9">__IDebugModuleManaged_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="725" pos:column="1">typedef <type><name pos:line="725" pos:column="9">interface</name> <name pos:line="725" pos:column="19">IDebugModuleManaged</name></type> <name pos:line="725" pos:column="39">IDebugModuleManaged</name>;</typedef>
<cpp:endif pos:line="726" pos:column="1">#<cpp:directive pos:line="726" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="726" pos:column="9">/* __IDebugModuleManaged_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="729" pos:column="1">#<cpp:directive pos:line="729" pos:column="2">ifndef</cpp:directive> <name pos:line="729" pos:column="9">__IDebugDocument2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="730" pos:column="1">#<cpp:directive pos:line="730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="730" pos:column="9">__IDebugDocument2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="731" pos:column="1">typedef <type><name pos:line="731" pos:column="9">interface</name> <name pos:line="731" pos:column="19">IDebugDocument2</name></type> <name pos:line="731" pos:column="35">IDebugDocument2</name>;</typedef>
<cpp:endif pos:line="732" pos:column="1">#<cpp:directive pos:line="732" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="732" pos:column="9">/* __IDebugDocument2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="735" pos:column="1">#<cpp:directive pos:line="735" pos:column="2">ifndef</cpp:directive> <name pos:line="735" pos:column="9">__IDebugDocumentText2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="736" pos:column="1">#<cpp:directive pos:line="736" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="736" pos:column="9">__IDebugDocumentText2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="737" pos:column="1">typedef <type><name pos:line="737" pos:column="9">interface</name> <name pos:line="737" pos:column="19">IDebugDocumentText2</name></type> <name pos:line="737" pos:column="39">IDebugDocumentText2</name>;</typedef>
<cpp:endif pos:line="738" pos:column="1">#<cpp:directive pos:line="738" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="738" pos:column="9">/* __IDebugDocumentText2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="741" pos:column="1">#<cpp:directive pos:line="741" pos:column="2">ifndef</cpp:directive> <name pos:line="741" pos:column="9">__IDebugDocumentPosition2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="742" pos:column="1">#<cpp:directive pos:line="742" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="742" pos:column="9">__IDebugDocumentPosition2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="743" pos:column="1">typedef <type><name pos:line="743" pos:column="9">interface</name> <name pos:line="743" pos:column="19">IDebugDocumentPosition2</name></type> <name pos:line="743" pos:column="43">IDebugDocumentPosition2</name>;</typedef>
<cpp:endif pos:line="744" pos:column="1">#<cpp:directive pos:line="744" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="744" pos:column="9">/* __IDebugDocumentPosition2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="747" pos:column="1">#<cpp:directive pos:line="747" pos:column="2">ifndef</cpp:directive> <name pos:line="747" pos:column="9">__IDebugDocumentPositionOffset2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="748" pos:column="1">#<cpp:directive pos:line="748" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="748" pos:column="9">__IDebugDocumentPositionOffset2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="749" pos:column="1">typedef <type><name pos:line="749" pos:column="9">interface</name> <name pos:line="749" pos:column="19">IDebugDocumentPositionOffset2</name></type> <name pos:line="749" pos:column="49">IDebugDocumentPositionOffset2</name>;</typedef>
<cpp:endif pos:line="750" pos:column="1">#<cpp:directive pos:line="750" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="750" pos:column="9">/* __IDebugDocumentPositionOffset2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="753" pos:column="1">#<cpp:directive pos:line="753" pos:column="2">ifndef</cpp:directive> <name pos:line="753" pos:column="9">__IDebugFunctionPosition2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="754" pos:column="1">#<cpp:directive pos:line="754" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="754" pos:column="9">__IDebugFunctionPosition2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="755" pos:column="1">typedef <type><name pos:line="755" pos:column="9">interface</name> <name pos:line="755" pos:column="19">IDebugFunctionPosition2</name></type> <name pos:line="755" pos:column="43">IDebugFunctionPosition2</name>;</typedef>
<cpp:endif pos:line="756" pos:column="1">#<cpp:directive pos:line="756" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="756" pos:column="9">/* __IDebugFunctionPosition2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="759" pos:column="1">#<cpp:directive pos:line="759" pos:column="2">ifndef</cpp:directive> <name pos:line="759" pos:column="9">__IDebugDocumentTextEvents2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="760" pos:column="1">#<cpp:directive pos:line="760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="760" pos:column="9">__IDebugDocumentTextEvents2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="761" pos:column="1">typedef <type><name pos:line="761" pos:column="9">interface</name> <name pos:line="761" pos:column="19">IDebugDocumentTextEvents2</name></type> <name pos:line="761" pos:column="45">IDebugDocumentTextEvents2</name>;</typedef>
<cpp:endif pos:line="762" pos:column="1">#<cpp:directive pos:line="762" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="762" pos:column="9">/* __IDebugDocumentTextEvents2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="765" pos:column="1">#<cpp:directive pos:line="765" pos:column="2">ifndef</cpp:directive> <name pos:line="765" pos:column="9">__IDebugQueryEngine2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="766" pos:column="1">#<cpp:directive pos:line="766" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="766" pos:column="9">__IDebugQueryEngine2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="767" pos:column="1">typedef <type><name pos:line="767" pos:column="9">interface</name> <name pos:line="767" pos:column="19">IDebugQueryEngine2</name></type> <name pos:line="767" pos:column="38">IDebugQueryEngine2</name>;</typedef>
<cpp:endif pos:line="768" pos:column="1">#<cpp:directive pos:line="768" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="768" pos:column="9">/* __IDebugQueryEngine2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="771" pos:column="1">#<cpp:directive pos:line="771" pos:column="2">ifndef</cpp:directive> <name pos:line="771" pos:column="9">__IEEHostServices_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="772" pos:column="1">#<cpp:directive pos:line="772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="772" pos:column="9">__IEEHostServices_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="773" pos:column="1">typedef <type><name pos:line="773" pos:column="9">interface</name> <name pos:line="773" pos:column="19">IEEHostServices</name></type> <name pos:line="773" pos:column="35">IEEHostServices</name>;</typedef>
<cpp:endif pos:line="774" pos:column="1">#<cpp:directive pos:line="774" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="774" pos:column="9">/* __IEEHostServices_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="777" pos:column="1">#<cpp:directive pos:line="777" pos:column="2">ifndef</cpp:directive> <name pos:line="777" pos:column="9">__IDebugCustomViewer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="778" pos:column="1">#<cpp:directive pos:line="778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="778" pos:column="9">__IDebugCustomViewer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="779" pos:column="1">typedef <type><name pos:line="779" pos:column="9">interface</name> <name pos:line="779" pos:column="19">IDebugCustomViewer</name></type> <name pos:line="779" pos:column="38">IDebugCustomViewer</name>;</typedef>
<cpp:endif pos:line="780" pos:column="1">#<cpp:directive pos:line="780" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="780" pos:column="9">/* __IDebugCustomViewer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="783" pos:column="1">#<cpp:directive pos:line="783" pos:column="2">ifndef</cpp:directive> <name pos:line="783" pos:column="9">__IEEDataStorage_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="784" pos:column="1">#<cpp:directive pos:line="784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="784" pos:column="9">__IEEDataStorage_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="785" pos:column="1">typedef <type><name pos:line="785" pos:column="9">interface</name> <name pos:line="785" pos:column="19">IEEDataStorage</name></type> <name pos:line="785" pos:column="34">IEEDataStorage</name>;</typedef>
<cpp:endif pos:line="786" pos:column="1">#<cpp:directive pos:line="786" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="786" pos:column="9">/* __IEEDataStorage_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="789" pos:column="1">#<cpp:directive pos:line="789" pos:column="2">ifndef</cpp:directive> <name pos:line="789" pos:column="9">__IPropertyProxyEESide_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="790" pos:column="1">#<cpp:directive pos:line="790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="790" pos:column="9">__IPropertyProxyEESide_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="791" pos:column="1">typedef <type><name pos:line="791" pos:column="9">interface</name> <name pos:line="791" pos:column="19">IPropertyProxyEESide</name></type> <name pos:line="791" pos:column="40">IPropertyProxyEESide</name>;</typedef>
<cpp:endif pos:line="792" pos:column="1">#<cpp:directive pos:line="792" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="792" pos:column="9">/* __IPropertyProxyEESide_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="795" pos:column="1">#<cpp:directive pos:line="795" pos:column="2">ifndef</cpp:directive> <name pos:line="795" pos:column="9">__IPropertyProxyProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="796" pos:column="1">#<cpp:directive pos:line="796" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="796" pos:column="9">__IPropertyProxyProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="797" pos:column="1">typedef <type><name pos:line="797" pos:column="9">interface</name> <name pos:line="797" pos:column="19">IPropertyProxyProvider</name></type> <name pos:line="797" pos:column="42">IPropertyProxyProvider</name>;</typedef>
<cpp:endif pos:line="798" pos:column="1">#<cpp:directive pos:line="798" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="798" pos:column="9">/* __IPropertyProxyProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="801" pos:column="1">#<cpp:directive pos:line="801" pos:column="2">ifndef</cpp:directive> <name pos:line="801" pos:column="9">__IManagedViewerHost_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="802" pos:column="1">#<cpp:directive pos:line="802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="802" pos:column="9">__IManagedViewerHost_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="803" pos:column="1">typedef <type><name pos:line="803" pos:column="9">interface</name> <name pos:line="803" pos:column="19">IManagedViewerHost</name></type> <name pos:line="803" pos:column="38">IManagedViewerHost</name>;</typedef>
<cpp:endif pos:line="804" pos:column="1">#<cpp:directive pos:line="804" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="804" pos:column="9">/* __IManagedViewerHost_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="807" pos:column="1">#<cpp:directive pos:line="807" pos:column="2">ifndef</cpp:directive> <name pos:line="807" pos:column="9">__IEELocalObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="808" pos:column="1">#<cpp:directive pos:line="808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="808" pos:column="9">__IEELocalObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="809" pos:column="1">typedef <type><name pos:line="809" pos:column="9">interface</name> <name pos:line="809" pos:column="19">IEELocalObject</name></type> <name pos:line="809" pos:column="34">IEELocalObject</name>;</typedef>
<cpp:endif pos:line="810" pos:column="1">#<cpp:directive pos:line="810" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="810" pos:column="9">/* __IEELocalObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="813" pos:column="1">#<cpp:directive pos:line="813" pos:column="2">ifndef</cpp:directive> <name pos:line="813" pos:column="9">__IEEAssemblyRefResolveComparer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="814" pos:column="1">#<cpp:directive pos:line="814" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="814" pos:column="9">__IEEAssemblyRefResolveComparer_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="815" pos:column="1">typedef <type><name pos:line="815" pos:column="9">interface</name> <name pos:line="815" pos:column="19">IEEAssemblyRefResolveComparer</name></type> <name pos:line="815" pos:column="49">IEEAssemblyRefResolveComparer</name>;</typedef>
<cpp:endif pos:line="816" pos:column="1">#<cpp:directive pos:line="816" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="816" pos:column="9">/* __IEEAssemblyRefResolveComparer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="819" pos:column="1">#<cpp:directive pos:line="819" pos:column="2">ifndef</cpp:directive> <name pos:line="819" pos:column="9">__IEEAssemblyRef_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="820" pos:column="1">#<cpp:directive pos:line="820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="820" pos:column="9">__IEEAssemblyRef_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="821" pos:column="1">typedef <type><name pos:line="821" pos:column="9">interface</name> <name pos:line="821" pos:column="19">IEEAssemblyRef</name></type> <name pos:line="821" pos:column="34">IEEAssemblyRef</name>;</typedef>
<cpp:endif pos:line="822" pos:column="1">#<cpp:directive pos:line="822" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="822" pos:column="9">/* __IEEAssemblyRef_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="825" pos:column="1">#<cpp:directive pos:line="825" pos:column="2">ifndef</cpp:directive> <name pos:line="825" pos:column="9">__IEEHelperObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="826" pos:column="1">#<cpp:directive pos:line="826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="826" pos:column="9">__IEEHelperObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="827" pos:column="1">typedef <type><name pos:line="827" pos:column="9">interface</name> <name pos:line="827" pos:column="19">IEEHelperObject</name></type> <name pos:line="827" pos:column="35">IEEHelperObject</name>;</typedef>
<cpp:endif pos:line="828" pos:column="1">#<cpp:directive pos:line="828" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="828" pos:column="9">/* __IEEHelperObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="831" pos:column="1">#<cpp:directive pos:line="831" pos:column="2">ifndef</cpp:directive> <name pos:line="831" pos:column="9">__IDebugExceptionCallback2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="832" pos:column="1">#<cpp:directive pos:line="832" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="832" pos:column="9">__IDebugExceptionCallback2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="833" pos:column="1">typedef <type><name pos:line="833" pos:column="9">interface</name> <name pos:line="833" pos:column="19">IDebugExceptionCallback2</name></type> <name pos:line="833" pos:column="44">IDebugExceptionCallback2</name>;</typedef>
<cpp:endif pos:line="834" pos:column="1">#<cpp:directive pos:line="834" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="834" pos:column="9">/* __IDebugExceptionCallback2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="837" pos:column="1">#<cpp:directive pos:line="837" pos:column="2">ifndef</cpp:directive> <name pos:line="837" pos:column="9">__IEnumDebugProcesses2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="838" pos:column="1">#<cpp:directive pos:line="838" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="838" pos:column="9">__IEnumDebugProcesses2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="839" pos:column="1">typedef <type><name pos:line="839" pos:column="9">interface</name> <name pos:line="839" pos:column="19">IEnumDebugProcesses2</name></type> <name pos:line="839" pos:column="40">IEnumDebugProcesses2</name>;</typedef>
<cpp:endif pos:line="840" pos:column="1">#<cpp:directive pos:line="840" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="840" pos:column="9">/* __IEnumDebugProcesses2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="843" pos:column="1">#<cpp:directive pos:line="843" pos:column="2">ifndef</cpp:directive> <name pos:line="843" pos:column="9">__IEnumDebugPrograms2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="844" pos:column="1">#<cpp:directive pos:line="844" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="844" pos:column="9">__IEnumDebugPrograms2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="845" pos:column="1">typedef <type><name pos:line="845" pos:column="9">interface</name> <name pos:line="845" pos:column="19">IEnumDebugPrograms2</name></type> <name pos:line="845" pos:column="39">IEnumDebugPrograms2</name>;</typedef>
<cpp:endif pos:line="846" pos:column="1">#<cpp:directive pos:line="846" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="846" pos:column="9">/* __IEnumDebugPrograms2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="849" pos:column="1">#<cpp:directive pos:line="849" pos:column="2">ifndef</cpp:directive> <name pos:line="849" pos:column="9">__IEnumDebugThreads2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="850" pos:column="1">#<cpp:directive pos:line="850" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="850" pos:column="9">__IEnumDebugThreads2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="851" pos:column="1">typedef <type><name pos:line="851" pos:column="9">interface</name> <name pos:line="851" pos:column="19">IEnumDebugThreads2</name></type> <name pos:line="851" pos:column="38">IEnumDebugThreads2</name>;</typedef>
<cpp:endif pos:line="852" pos:column="1">#<cpp:directive pos:line="852" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="852" pos:column="9">/* __IEnumDebugThreads2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="855" pos:column="1">#<cpp:directive pos:line="855" pos:column="2">ifndef</cpp:directive> <name pos:line="855" pos:column="9">__IEnumDebugStackFrames2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="856" pos:column="1">#<cpp:directive pos:line="856" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="856" pos:column="9">__IEnumDebugStackFrames2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="857" pos:column="1">typedef <type><name pos:line="857" pos:column="9">interface</name> <name pos:line="857" pos:column="19">IEnumDebugStackFrames2</name></type> <name pos:line="857" pos:column="42">IEnumDebugStackFrames2</name>;</typedef>
<cpp:endif pos:line="858" pos:column="1">#<cpp:directive pos:line="858" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="858" pos:column="9">/* __IEnumDebugStackFrames2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="861" pos:column="1">#<cpp:directive pos:line="861" pos:column="2">ifndef</cpp:directive> <name pos:line="861" pos:column="9">__IEnumDebugCodeContexts2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="862" pos:column="1">#<cpp:directive pos:line="862" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="862" pos:column="9">__IEnumDebugCodeContexts2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="863" pos:column="1">typedef <type><name pos:line="863" pos:column="9">interface</name> <name pos:line="863" pos:column="19">IEnumDebugCodeContexts2</name></type> <name pos:line="863" pos:column="43">IEnumDebugCodeContexts2</name>;</typedef>
<cpp:endif pos:line="864" pos:column="1">#<cpp:directive pos:line="864" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="864" pos:column="9">/* __IEnumDebugCodeContexts2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="867" pos:column="1">#<cpp:directive pos:line="867" pos:column="2">ifndef</cpp:directive> <name pos:line="867" pos:column="9">__IEnumDebugBoundBreakpoints2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="868" pos:column="1">#<cpp:directive pos:line="868" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="868" pos:column="9">__IEnumDebugBoundBreakpoints2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="869" pos:column="1">typedef <type><name pos:line="869" pos:column="9">interface</name> <name pos:line="869" pos:column="19">IEnumDebugBoundBreakpoints2</name></type> <name pos:line="869" pos:column="47">IEnumDebugBoundBreakpoints2</name>;</typedef>
<cpp:endif pos:line="870" pos:column="1">#<cpp:directive pos:line="870" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="870" pos:column="9">/* __IEnumDebugBoundBreakpoints2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="873" pos:column="1">#<cpp:directive pos:line="873" pos:column="2">ifndef</cpp:directive> <name pos:line="873" pos:column="9">__IEnumDebugPendingBreakpoints2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="874" pos:column="1">#<cpp:directive pos:line="874" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="874" pos:column="9">__IEnumDebugPendingBreakpoints2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="875" pos:column="1">typedef <type><name pos:line="875" pos:column="9">interface</name> <name pos:line="875" pos:column="19">IEnumDebugPendingBreakpoints2</name></type> <name pos:line="875" pos:column="49">IEnumDebugPendingBreakpoints2</name>;</typedef>
<cpp:endif pos:line="876" pos:column="1">#<cpp:directive pos:line="876" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="876" pos:column="9">/* __IEnumDebugPendingBreakpoints2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="879" pos:column="1">#<cpp:directive pos:line="879" pos:column="2">ifndef</cpp:directive> <name pos:line="879" pos:column="9">__IEnumDebugErrorBreakpoints2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="880" pos:column="1">#<cpp:directive pos:line="880" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="880" pos:column="9">__IEnumDebugErrorBreakpoints2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="881" pos:column="1">typedef <type><name pos:line="881" pos:column="9">interface</name> <name pos:line="881" pos:column="19">IEnumDebugErrorBreakpoints2</name></type> <name pos:line="881" pos:column="47">IEnumDebugErrorBreakpoints2</name>;</typedef>
<cpp:endif pos:line="882" pos:column="1">#<cpp:directive pos:line="882" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="882" pos:column="9">/* __IEnumDebugErrorBreakpoints2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="885" pos:column="1">#<cpp:directive pos:line="885" pos:column="2">ifndef</cpp:directive> <name pos:line="885" pos:column="9">__IEnumDebugMachines2__deprecated_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="886" pos:column="1">#<cpp:directive pos:line="886" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="886" pos:column="9">__IEnumDebugMachines2__deprecated_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="887" pos:column="1">typedef <type><name pos:line="887" pos:column="9">interface</name> <name pos:line="887" pos:column="19">IEnumDebugMachines2__deprecated</name></type> <name pos:line="887" pos:column="51">IEnumDebugMachines2__deprecated</name>;</typedef>
<cpp:endif pos:line="888" pos:column="1">#<cpp:directive pos:line="888" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="888" pos:column="9">/* __IEnumDebugMachines2__deprecated_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="891" pos:column="1">#<cpp:directive pos:line="891" pos:column="2">ifndef</cpp:directive> <name pos:line="891" pos:column="9">__IEnumDebugExceptionInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="892" pos:column="1">#<cpp:directive pos:line="892" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="892" pos:column="9">__IEnumDebugExceptionInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="893" pos:column="1">typedef <type><name pos:line="893" pos:column="9">interface</name> <name pos:line="893" pos:column="19">IEnumDebugExceptionInfo2</name></type> <name pos:line="893" pos:column="44">IEnumDebugExceptionInfo2</name>;</typedef>
<cpp:endif pos:line="894" pos:column="1">#<cpp:directive pos:line="894" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="894" pos:column="9">/* __IEnumDebugExceptionInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="897" pos:column="1">#<cpp:directive pos:line="897" pos:column="2">ifndef</cpp:directive> <name pos:line="897" pos:column="9">__IEnumDebugFrameInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="898" pos:column="1">#<cpp:directive pos:line="898" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="898" pos:column="9">__IEnumDebugFrameInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="899" pos:column="1">typedef <type><name pos:line="899" pos:column="9">interface</name> <name pos:line="899" pos:column="19">IEnumDebugFrameInfo2</name></type> <name pos:line="899" pos:column="40">IEnumDebugFrameInfo2</name>;</typedef>
<cpp:endif pos:line="900" pos:column="1">#<cpp:directive pos:line="900" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="900" pos:column="9">/* __IEnumDebugFrameInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="903" pos:column="1">#<cpp:directive pos:line="903" pos:column="2">ifndef</cpp:directive> <name pos:line="903" pos:column="9">__IEnumDebugSessionFrameInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="904" pos:column="1">#<cpp:directive pos:line="904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="904" pos:column="9">__IEnumDebugSessionFrameInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="905" pos:column="1">typedef <type><name pos:line="905" pos:column="9">interface</name> <name pos:line="905" pos:column="19">IEnumDebugSessionFrameInfo2</name></type> <name pos:line="905" pos:column="47">IEnumDebugSessionFrameInfo2</name>;</typedef>
<cpp:endif pos:line="906" pos:column="1">#<cpp:directive pos:line="906" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="906" pos:column="9">/* __IEnumDebugSessionFrameInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="909" pos:column="1">#<cpp:directive pos:line="909" pos:column="2">ifndef</cpp:directive> <name pos:line="909" pos:column="9">__IEnumDebugFrameInfoFilter2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="910" pos:column="1">#<cpp:directive pos:line="910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="910" pos:column="9">__IEnumDebugFrameInfoFilter2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="911" pos:column="1">typedef <type><name pos:line="911" pos:column="9">interface</name> <name pos:line="911" pos:column="19">IEnumDebugFrameInfoFilter2</name></type> <name pos:line="911" pos:column="46">IEnumDebugFrameInfoFilter2</name>;</typedef>
<cpp:endif pos:line="912" pos:column="1">#<cpp:directive pos:line="912" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="912" pos:column="9">/* __IEnumDebugFrameInfoFilter2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="915" pos:column="1">#<cpp:directive pos:line="915" pos:column="2">ifndef</cpp:directive> <name pos:line="915" pos:column="9">__IEnumCodePaths2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="916" pos:column="1">#<cpp:directive pos:line="916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="916" pos:column="9">__IEnumCodePaths2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="917" pos:column="1">typedef <type><name pos:line="917" pos:column="9">interface</name> <name pos:line="917" pos:column="19">IEnumCodePaths2</name></type> <name pos:line="917" pos:column="35">IEnumCodePaths2</name>;</typedef>
<cpp:endif pos:line="918" pos:column="1">#<cpp:directive pos:line="918" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="918" pos:column="9">/* __IEnumCodePaths2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="921" pos:column="1">#<cpp:directive pos:line="921" pos:column="2">ifndef</cpp:directive> <name pos:line="921" pos:column="9">__IEnumDebugModules2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="922" pos:column="9">__IEnumDebugModules2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="923" pos:column="1">typedef <type><name pos:line="923" pos:column="9">interface</name> <name pos:line="923" pos:column="19">IEnumDebugModules2</name></type> <name pos:line="923" pos:column="38">IEnumDebugModules2</name>;</typedef>
<cpp:endif pos:line="924" pos:column="1">#<cpp:directive pos:line="924" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="924" pos:column="9">/* __IEnumDebugModules2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="927" pos:column="1">#<cpp:directive pos:line="927" pos:column="2">ifndef</cpp:directive> <name pos:line="927" pos:column="9">__IEnumDebugPortSuppliers2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="928" pos:column="1">#<cpp:directive pos:line="928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="928" pos:column="9">__IEnumDebugPortSuppliers2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="929" pos:column="1">typedef <type><name pos:line="929" pos:column="9">interface</name> <name pos:line="929" pos:column="19">IEnumDebugPortSuppliers2</name></type> <name pos:line="929" pos:column="44">IEnumDebugPortSuppliers2</name>;</typedef>
<cpp:endif pos:line="930" pos:column="1">#<cpp:directive pos:line="930" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="930" pos:column="9">/* __IEnumDebugPortSuppliers2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="933" pos:column="1">#<cpp:directive pos:line="933" pos:column="2">ifndef</cpp:directive> <name pos:line="933" pos:column="9">__IEnumDebugPorts2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="934" pos:column="1">#<cpp:directive pos:line="934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="934" pos:column="9">__IEnumDebugPorts2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="935" pos:column="1">typedef <type><name pos:line="935" pos:column="9">interface</name> <name pos:line="935" pos:column="19">IEnumDebugPorts2</name></type> <name pos:line="935" pos:column="36">IEnumDebugPorts2</name>;</typedef>
<cpp:endif pos:line="936" pos:column="1">#<cpp:directive pos:line="936" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="936" pos:column="9">/* __IEnumDebugPorts2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="939" pos:column="1">#<cpp:directive pos:line="939" pos:column="2">ifndef</cpp:directive> <name pos:line="939" pos:column="9">__IEnumDebugPropertyInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="940" pos:column="1">#<cpp:directive pos:line="940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="940" pos:column="9">__IEnumDebugPropertyInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="941" pos:column="1">typedef <type><name pos:line="941" pos:column="9">interface</name> <name pos:line="941" pos:column="19">IEnumDebugPropertyInfo2</name></type> <name pos:line="941" pos:column="43">IEnumDebugPropertyInfo2</name>;</typedef>
<cpp:endif pos:line="942" pos:column="1">#<cpp:directive pos:line="942" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="942" pos:column="9">/* __IEnumDebugPropertyInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="945" pos:column="1">#<cpp:directive pos:line="945" pos:column="2">ifndef</cpp:directive> <name pos:line="945" pos:column="9">__IEnumDebugReferenceInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="946" pos:column="1">#<cpp:directive pos:line="946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="946" pos:column="9">__IEnumDebugReferenceInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="947" pos:column="1">typedef <type><name pos:line="947" pos:column="9">interface</name> <name pos:line="947" pos:column="19">IEnumDebugReferenceInfo2</name></type> <name pos:line="947" pos:column="44">IEnumDebugReferenceInfo2</name>;</typedef>
<cpp:endif pos:line="948" pos:column="1">#<cpp:directive pos:line="948" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="948" pos:column="9">/* __IEnumDebugReferenceInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="951" pos:column="1">#<cpp:directive pos:line="951" pos:column="2">ifndef</cpp:directive> <name pos:line="951" pos:column="9">__IDebugProcessQueryProperties_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="952" pos:column="1">#<cpp:directive pos:line="952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="952" pos:column="9">__IDebugProcessQueryProperties_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="953" pos:column="1">typedef <type><name pos:line="953" pos:column="9">interface</name> <name pos:line="953" pos:column="19">IDebugProcessQueryProperties</name></type> <name pos:line="953" pos:column="48">IDebugProcessQueryProperties</name>;</typedef>
<cpp:endif pos:line="954" pos:column="1">#<cpp:directive pos:line="954" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="954" pos:column="9">/* __IDebugProcessQueryProperties_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="957" pos:column="1">#<cpp:directive pos:line="957" pos:column="2">ifndef</cpp:directive> <name pos:line="957" pos:column="9">__IDebugRemoteServer2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="958" pos:column="1">#<cpp:directive pos:line="958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="958" pos:column="9">__IDebugRemoteServer2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="959" pos:column="1">typedef <type><name pos:line="959" pos:column="9">interface</name> <name pos:line="959" pos:column="19">IDebugRemoteServer2</name></type> <name pos:line="959" pos:column="39">IDebugRemoteServer2</name>;</typedef>
<cpp:endif pos:line="960" pos:column="1">#<cpp:directive pos:line="960" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="960" pos:column="9">/* __IDebugRemoteServer2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="963" pos:column="1">#<cpp:directive pos:line="963" pos:column="2">ifndef</cpp:directive> <name pos:line="963" pos:column="9">__IDebugRemoteServerFactory2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="964" pos:column="1">#<cpp:directive pos:line="964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="964" pos:column="9">__IDebugRemoteServerFactory2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="965" pos:column="1">typedef <type><name pos:line="965" pos:column="9">interface</name> <name pos:line="965" pos:column="19">IDebugRemoteServerFactory2</name></type> <name pos:line="965" pos:column="46">IDebugRemoteServerFactory2</name>;</typedef>
<cpp:endif pos:line="966" pos:column="1">#<cpp:directive pos:line="966" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="966" pos:column="9">/* __IDebugRemoteServerFactory2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="969" pos:column="1">#<cpp:directive pos:line="969" pos:column="2">ifndef</cpp:directive> <name pos:line="969" pos:column="9">__IDebugProgramPublisher2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="970" pos:column="1">#<cpp:directive pos:line="970" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="970" pos:column="9">__IDebugProgramPublisher2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="971" pos:column="1">typedef <type><name pos:line="971" pos:column="9">interface</name> <name pos:line="971" pos:column="19">IDebugProgramPublisher2</name></type> <name pos:line="971" pos:column="43">IDebugProgramPublisher2</name>;</typedef>
<cpp:endif pos:line="972" pos:column="1">#<cpp:directive pos:line="972" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="972" pos:column="9">/* __IDebugProgramPublisher2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="975" pos:column="1">#<cpp:directive pos:line="975" pos:column="2">ifndef</cpp:directive> <name pos:line="975" pos:column="9">__IDebugProgramProvider2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="976" pos:column="1">#<cpp:directive pos:line="976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="976" pos:column="9">__IDebugProgramProvider2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="977" pos:column="1">typedef <type><name pos:line="977" pos:column="9">interface</name> <name pos:line="977" pos:column="19">IDebugProgramProvider2</name></type> <name pos:line="977" pos:column="42">IDebugProgramProvider2</name>;</typedef>
<cpp:endif pos:line="978" pos:column="1">#<cpp:directive pos:line="978" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="978" pos:column="9">/* __IDebugProgramProvider2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="981" pos:column="1">#<cpp:directive pos:line="981" pos:column="2">ifndef</cpp:directive> <name pos:line="981" pos:column="9">__IDebugProviderProgramNode2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="982" pos:column="1">#<cpp:directive pos:line="982" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="982" pos:column="9">__IDebugProviderProgramNode2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="983" pos:column="1">typedef <type><name pos:line="983" pos:column="9">interface</name> <name pos:line="983" pos:column="19">IDebugProviderProgramNode2</name></type> <name pos:line="983" pos:column="46">IDebugProviderProgramNode2</name>;</typedef>
<cpp:endif pos:line="984" pos:column="1">#<cpp:directive pos:line="984" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="984" pos:column="9">/* __IDebugProviderProgramNode2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="987" pos:column="1">#<cpp:directive pos:line="987" pos:column="2">ifndef</cpp:directive> <name pos:line="987" pos:column="9">__IDebugFirewallConfigurationCallback2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="988" pos:column="1">#<cpp:directive pos:line="988" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="988" pos:column="9">__IDebugFirewallConfigurationCallback2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="989" pos:column="1">typedef <type><name pos:line="989" pos:column="9">interface</name> <name pos:line="989" pos:column="19">IDebugFirewallConfigurationCallback2</name></type> <name pos:line="989" pos:column="56">IDebugFirewallConfigurationCallback2</name>;</typedef>
<cpp:endif pos:line="990" pos:column="1">#<cpp:directive pos:line="990" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="990" pos:column="9">/* __IDebugFirewallConfigurationCallback2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="993" pos:column="1">#<cpp:directive pos:line="993" pos:column="2">ifndef</cpp:directive> <name pos:line="993" pos:column="9">__IDebugAttachSecurityCallback2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="994" pos:column="1">#<cpp:directive pos:line="994" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="994" pos:column="9">__IDebugAttachSecurityCallback2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="995" pos:column="1">typedef <type><name pos:line="995" pos:column="9">interface</name> <name pos:line="995" pos:column="19">IDebugAttachSecurityCallback2</name></type> <name pos:line="995" pos:column="49">IDebugAttachSecurityCallback2</name>;</typedef>
<cpp:endif pos:line="996" pos:column="1">#<cpp:directive pos:line="996" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="996" pos:column="9">/* __IDebugAttachSecurityCallback2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="999" pos:column="1">#<cpp:directive pos:line="999" pos:column="2">ifndef</cpp:directive> <name pos:line="999" pos:column="9">__SDMServer_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1000" pos:column="1">#<cpp:directive pos:line="1000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1000" pos:column="9">__SDMServer_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1002" pos:column="1">#<cpp:directive pos:line="1002" pos:column="2">ifdef</cpp:directive> <name pos:line="1002" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1003" pos:column="1">typedef <type pos:line="1003" pos:column="9">class <name pos:line="1003" pos:column="15">SDMServer</name></type> <name pos:line="1003" pos:column="25">SDMServer</name>;</typedef>
<cpp:else pos:line="1004" pos:column="1">#<cpp:directive pos:line="1004" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1005" pos:column="1">typedef <type pos:line="1005" pos:column="9">struct <name pos:line="1005" pos:column="16">SDMServer</name></type> <name pos:line="1005" pos:column="26">SDMServer</name>;</typedef>
<cpp:endif pos:line="1006" pos:column="1">#<cpp:directive pos:line="1006" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1006" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1008" pos:column="1">#<cpp:directive pos:line="1008" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1008" pos:column="9">/* __SDMServer_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="1011" pos:column="1">#<cpp:directive pos:line="1011" pos:column="2">ifndef</cpp:directive> <name pos:line="1011" pos:column="9">__MsMachineDebugManager_V7_RETAIL_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1012" pos:column="1">#<cpp:directive pos:line="1012" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1012" pos:column="9">__MsMachineDebugManager_V7_RETAIL_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1014" pos:column="1">#<cpp:directive pos:line="1014" pos:column="2">ifdef</cpp:directive> <name pos:line="1014" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1015" pos:column="1">typedef <type pos:line="1015" pos:column="9">class <name pos:line="1015" pos:column="15">MsMachineDebugManager_V7_RETAIL</name></type> <name pos:line="1015" pos:column="47">MsMachineDebugManager_V7_RETAIL</name>;</typedef>
<cpp:else pos:line="1016" pos:column="1">#<cpp:directive pos:line="1016" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1017" pos:column="1">typedef <type pos:line="1017" pos:column="9">struct <name pos:line="1017" pos:column="16">MsMachineDebugManager_V7_RETAIL</name></type> <name pos:line="1017" pos:column="48">MsMachineDebugManager_V7_RETAIL</name>;</typedef>
<cpp:endif pos:line="1018" pos:column="1">#<cpp:directive pos:line="1018" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1018" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1020" pos:column="1">#<cpp:directive pos:line="1020" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1020" pos:column="9">/* __MsMachineDebugManager_V7_RETAIL_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="1023" pos:column="1">#<cpp:directive pos:line="1023" pos:column="2">ifndef</cpp:directive> <name pos:line="1023" pos:column="9">__MsMachineDebugManager_V7_DEBUG_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1024" pos:column="1">#<cpp:directive pos:line="1024" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1024" pos:column="9">__MsMachineDebugManager_V7_DEBUG_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1026" pos:column="1">#<cpp:directive pos:line="1026" pos:column="2">ifdef</cpp:directive> <name pos:line="1026" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1027" pos:column="1">typedef <type pos:line="1027" pos:column="9">class <name pos:line="1027" pos:column="15">MsMachineDebugManager_V7_DEBUG</name></type> <name pos:line="1027" pos:column="46">MsMachineDebugManager_V7_DEBUG</name>;</typedef>
<cpp:else pos:line="1028" pos:column="1">#<cpp:directive pos:line="1028" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1029" pos:column="1">typedef <type pos:line="1029" pos:column="9">struct <name pos:line="1029" pos:column="16">MsMachineDebugManager_V7_DEBUG</name></type> <name pos:line="1029" pos:column="47">MsMachineDebugManager_V7_DEBUG</name>;</typedef>
<cpp:endif pos:line="1030" pos:column="1">#<cpp:directive pos:line="1030" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1030" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1032" pos:column="1">#<cpp:directive pos:line="1032" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1032" pos:column="9">/* __MsMachineDebugManager_V7_DEBUG_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="1035" pos:column="1">#<cpp:directive pos:line="1035" pos:column="2">ifndef</cpp:directive> <name pos:line="1035" pos:column="9">__MDMUtilServer_V7_RETAIL_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1036" pos:column="1">#<cpp:directive pos:line="1036" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1036" pos:column="9">__MDMUtilServer_V7_RETAIL_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1038" pos:column="1">#<cpp:directive pos:line="1038" pos:column="2">ifdef</cpp:directive> <name pos:line="1038" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1039" pos:column="1">typedef <type pos:line="1039" pos:column="9">class <name pos:line="1039" pos:column="15">MDMUtilServer_V7_RETAIL</name></type> <name pos:line="1039" pos:column="39">MDMUtilServer_V7_RETAIL</name>;</typedef>
<cpp:else pos:line="1040" pos:column="1">#<cpp:directive pos:line="1040" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1041" pos:column="1">typedef <type pos:line="1041" pos:column="9">struct <name pos:line="1041" pos:column="16">MDMUtilServer_V7_RETAIL</name></type> <name pos:line="1041" pos:column="40">MDMUtilServer_V7_RETAIL</name>;</typedef>
<cpp:endif pos:line="1042" pos:column="1">#<cpp:directive pos:line="1042" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1042" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1044" pos:column="1">#<cpp:directive pos:line="1044" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1044" pos:column="9">/* __MDMUtilServer_V7_RETAIL_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="1047" pos:column="1">#<cpp:directive pos:line="1047" pos:column="2">ifndef</cpp:directive> <name pos:line="1047" pos:column="9">__MDMUtilServer_V7_DEBUG_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1048" pos:column="1">#<cpp:directive pos:line="1048" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1048" pos:column="9">__MDMUtilServer_V7_DEBUG_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1050" pos:column="1">#<cpp:directive pos:line="1050" pos:column="2">ifdef</cpp:directive> <name pos:line="1050" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1051" pos:column="1">typedef <type pos:line="1051" pos:column="9">class <name pos:line="1051" pos:column="15">MDMUtilServer_V7_DEBUG</name></type> <name pos:line="1051" pos:column="38">MDMUtilServer_V7_DEBUG</name>;</typedef>
<cpp:else pos:line="1052" pos:column="1">#<cpp:directive pos:line="1052" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1053" pos:column="1">typedef <type pos:line="1053" pos:column="9">struct <name pos:line="1053" pos:column="16">MDMUtilServer_V7_DEBUG</name></type> <name pos:line="1053" pos:column="39">MDMUtilServer_V7_DEBUG</name>;</typedef>
<cpp:endif pos:line="1054" pos:column="1">#<cpp:directive pos:line="1054" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1054" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1056" pos:column="1">#<cpp:directive pos:line="1056" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1056" pos:column="9">/* __MDMUtilServer_V7_DEBUG_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="1059" pos:column="1">#<cpp:directive pos:line="1059" pos:column="2">ifndef</cpp:directive> <name pos:line="1059" pos:column="9">__ProgramPublisher_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1060" pos:column="1">#<cpp:directive pos:line="1060" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1060" pos:column="9">__ProgramPublisher_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1062" pos:column="1">#<cpp:directive pos:line="1062" pos:column="2">ifdef</cpp:directive> <name pos:line="1062" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1063" pos:column="1">typedef <type pos:line="1063" pos:column="9">class <name pos:line="1063" pos:column="15">ProgramPublisher</name></type> <name pos:line="1063" pos:column="32">ProgramPublisher</name>;</typedef>
<cpp:else pos:line="1064" pos:column="1">#<cpp:directive pos:line="1064" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1065" pos:column="1">typedef <type pos:line="1065" pos:column="9">struct <name pos:line="1065" pos:column="16">ProgramPublisher</name></type> <name pos:line="1065" pos:column="33">ProgramPublisher</name>;</typedef>
<cpp:endif pos:line="1066" pos:column="1">#<cpp:directive pos:line="1066" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1066" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1068" pos:column="1">#<cpp:directive pos:line="1068" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1068" pos:column="9">/* __ProgramPublisher_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="1071" pos:column="1">#<cpp:directive pos:line="1071" pos:column="2">ifndef</cpp:directive> <name pos:line="1071" pos:column="9">__MsProgramProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1072" pos:column="1">#<cpp:directive pos:line="1072" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1072" pos:column="9">__MsProgramProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="1074" pos:column="1">#<cpp:directive pos:line="1074" pos:column="2">ifdef</cpp:directive> <name pos:line="1074" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="1075" pos:column="1">typedef <type pos:line="1075" pos:column="9">class <name pos:line="1075" pos:column="15">MsProgramProvider</name></type> <name pos:line="1075" pos:column="33">MsProgramProvider</name>;</typedef>
<cpp:else pos:line="1076" pos:column="1">#<cpp:directive pos:line="1076" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="1077" pos:column="1">typedef <type pos:line="1077" pos:column="9">struct <name pos:line="1077" pos:column="16">MsProgramProvider</name></type> <name pos:line="1077" pos:column="34">MsProgramProvider</name>;</typedef>
<cpp:endif pos:line="1078" pos:column="1">#<cpp:directive pos:line="1078" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1078" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="1080" pos:column="1">#<cpp:directive pos:line="1080" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1080" pos:column="9">/* __MsProgramProvider_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="1083" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="1084" pos:column="1">#<cpp:directive pos:line="1084" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="1084" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="1085" pos:column="1">#<cpp:directive pos:line="1085" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="1085" pos:column="10">"enc.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="1087" pos:column="1">#<cpp:directive pos:line="1087" pos:column="2">ifdef</cpp:directive> <name pos:line="1087" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="1088" pos:column="1">extern <lit:literal type="string" pos:line="1088" pos:column="8">"C"</lit:literal><block pos:line="1088" pos:column="11">{
<cpp:endif pos:line="1089" pos:column="1">#<cpp:directive pos:line="1089" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="1092" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0000 */</comment>
<comment type="block" pos:line="1093" pos:column="1">/* [local] */</comment> 

<cpp:ifndef pos:line="1095" pos:column="1">#<cpp:directive pos:line="1095" pos:column="2">ifndef</cpp:directive> <name pos:line="1095" pos:column="9">_BASETSD_H_</name></cpp:ifndef>
<typedef pos:line="1096" pos:column="1">typedef <type><name pos:line="1096" pos:column="9">unsigned</name> <name pos:line="1096" pos:column="18">long</name></type> <name pos:line="1096" pos:column="23">POINTER_64_INT</name>;</typedef>

<cpp:pragma pos:line="1098" pos:column="1">#<cpp:directive pos:line="1098" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<typedef pos:line="1099" pos:column="1">typedef <type><name pos:line="1099" pos:column="9">signed</name> <name pos:line="1099" pos:column="16">char</name></type> <name pos:line="1099" pos:column="21">INT8</name>;</typedef>

<typedef pos:line="1101" pos:column="1">typedef <type><name pos:line="1101" pos:column="9">signed</name> <name pos:line="1101" pos:column="16">char</name> <type:modifier pos:line="1101" pos:column="21">*</type:modifier></type><name pos:line="1101" pos:column="22">PINT8</name>;</typedef>

<typedef pos:line="1103" pos:column="1">typedef <type><name pos:line="1103" pos:column="9">short</name></type> <name pos:line="1103" pos:column="15">INT16</name>;</typedef>

<typedef pos:line="1105" pos:column="1">typedef <type><name pos:line="1105" pos:column="9">short</name> <type:modifier pos:line="1105" pos:column="15">*</type:modifier></type><name pos:line="1105" pos:column="16">PINT16</name>;</typedef>

<typedef pos:line="1107" pos:column="1">typedef <type><name pos:line="1107" pos:column="9">int</name></type> <name pos:line="1107" pos:column="13">INT32</name>;</typedef>

<typedef pos:line="1109" pos:column="1">typedef <type><name pos:line="1109" pos:column="9">int</name> <type:modifier pos:line="1109" pos:column="13">*</type:modifier></type><name pos:line="1109" pos:column="14">PINT32</name>;</typedef>

<typedef pos:line="1111" pos:column="1">typedef <type><name pos:line="1111" pos:column="9">__int64</name></type> <name pos:line="1111" pos:column="17">INT64</name>;</typedef>

<typedef pos:line="1113" pos:column="1">typedef <type><name pos:line="1113" pos:column="9">__int64</name> <type:modifier pos:line="1113" pos:column="17">*</type:modifier></type><name pos:line="1113" pos:column="18">PINT64</name>;</typedef>

<typedef pos:line="1115" pos:column="1">typedef <type><name pos:line="1115" pos:column="9">unsigned</name> <name pos:line="1115" pos:column="18">char</name></type> <name pos:line="1115" pos:column="23">UINT8</name>;</typedef>

<typedef pos:line="1117" pos:column="1">typedef <type><name pos:line="1117" pos:column="9">unsigned</name> <name pos:line="1117" pos:column="18">char</name> <type:modifier pos:line="1117" pos:column="23">*</type:modifier></type><name pos:line="1117" pos:column="24">PUINT8</name>;</typedef>

<typedef pos:line="1119" pos:column="1">typedef <type><name pos:line="1119" pos:column="9">unsigned</name> <name pos:line="1119" pos:column="18">short</name></type> <name pos:line="1119" pos:column="24">UINT16</name>;</typedef>

<typedef pos:line="1121" pos:column="1">typedef <type><name pos:line="1121" pos:column="9">unsigned</name> <name pos:line="1121" pos:column="18">short</name> <type:modifier pos:line="1121" pos:column="24">*</type:modifier></type><name pos:line="1121" pos:column="25">PUINT16</name>;</typedef>

<typedef pos:line="1123" pos:column="1">typedef <type><name pos:line="1123" pos:column="9">unsigned</name> <name pos:line="1123" pos:column="18">int</name></type> <name pos:line="1123" pos:column="22">UINT32</name>;</typedef>

<typedef pos:line="1125" pos:column="1">typedef <type><name pos:line="1125" pos:column="9">unsigned</name> <name pos:line="1125" pos:column="18">int</name> <type:modifier pos:line="1125" pos:column="22">*</type:modifier></type><name pos:line="1125" pos:column="23">PUINT32</name>;</typedef>

<typedef pos:line="1127" pos:column="1">typedef <type><name pos:line="1127" pos:column="9">unsigned</name> <name pos:line="1127" pos:column="18">__int64</name></type> <name pos:line="1127" pos:column="26">UINT64</name>;</typedef>

<typedef pos:line="1129" pos:column="1">typedef <type><name pos:line="1129" pos:column="9">unsigned</name> <name pos:line="1129" pos:column="18">__int64</name> <type:modifier pos:line="1129" pos:column="26">*</type:modifier></type><name pos:line="1129" pos:column="27">PUINT64</name>;</typedef>

<typedef pos:line="1131" pos:column="1">typedef <type><name pos:line="1131" pos:column="9">int</name></type> <name pos:line="1131" pos:column="13">LONG32</name>;</typedef>

<typedef pos:line="1133" pos:column="1">typedef <type><name pos:line="1133" pos:column="9">int</name> <type:modifier pos:line="1133" pos:column="13">*</type:modifier></type><name pos:line="1133" pos:column="14">PLONG32</name>;</typedef>

<typedef pos:line="1135" pos:column="1">typedef <type><name pos:line="1135" pos:column="9">unsigned</name> <name pos:line="1135" pos:column="18">int</name></type> <name pos:line="1135" pos:column="22">ULONG32</name>;</typedef>

<typedef pos:line="1137" pos:column="1">typedef <type><name pos:line="1137" pos:column="9">unsigned</name> <name pos:line="1137" pos:column="18">int</name> <type:modifier pos:line="1137" pos:column="22">*</type:modifier></type><name pos:line="1137" pos:column="23">PULONG32</name>;</typedef>

<typedef pos:line="1139" pos:column="1">typedef <type><name pos:line="1139" pos:column="9">unsigned</name> <name pos:line="1139" pos:column="18">int</name></type> <name pos:line="1139" pos:column="22">DWORD32</name>;</typedef>

<typedef pos:line="1141" pos:column="1">typedef <type><name pos:line="1141" pos:column="9">unsigned</name> <name pos:line="1141" pos:column="18">int</name> <type:modifier pos:line="1141" pos:column="22">*</type:modifier></type><name pos:line="1141" pos:column="23">PDWORD32</name>;</typedef>

<typedef pos:line="1143" pos:column="1">typedef <comment type="block" pos:line="1143" pos:column="9">/* [custom][public] */</comment> <type><name pos:line="1143" pos:column="32">__int3264</name></type> <name pos:line="1143" pos:column="42">INT_PTR</name>;</typedef>

<typedef pos:line="1145" pos:column="1">typedef <comment type="block" pos:line="1145" pos:column="9">/* [public] */</comment> <type><name pos:line="1145" pos:column="24">__int3264</name> <type:modifier pos:line="1145" pos:column="34">*</type:modifier></type><name pos:line="1145" pos:column="35">PINT_PTR</name>;</typedef>

<typedef pos:line="1147" pos:column="1">typedef <comment type="block" pos:line="1147" pos:column="9">/* [custom][public] */</comment> <type><name pos:line="1147" pos:column="32">unsigned</name> <name pos:line="1147" pos:column="41">__int3264</name></type> <name pos:line="1147" pos:column="51">UINT_PTR</name>;</typedef>

<typedef pos:line="1149" pos:column="1">typedef <comment type="block" pos:line="1149" pos:column="9">/* [public] */</comment> <type><name pos:line="1149" pos:column="24">unsigned</name> <name pos:line="1149" pos:column="33">__int3264</name> <type:modifier pos:line="1149" pos:column="43">*</type:modifier></type><name pos:line="1149" pos:column="44">PUINT_PTR</name>;</typedef>

<typedef pos:line="1151" pos:column="1">typedef <comment type="block" pos:line="1151" pos:column="9">/* [custom][public] */</comment> <type><name pos:line="1151" pos:column="32">__int3264</name></type> <name pos:line="1151" pos:column="42">LONG_PTR</name>;</typedef>

<typedef pos:line="1153" pos:column="1">typedef <comment type="block" pos:line="1153" pos:column="9">/* [public] */</comment> <type><name pos:line="1153" pos:column="24">__int3264</name> <type:modifier pos:line="1153" pos:column="34">*</type:modifier></type><name pos:line="1153" pos:column="35">PLONG_PTR</name>;</typedef>

<typedef pos:line="1155" pos:column="1">typedef <comment type="block" pos:line="1155" pos:column="9">/* [custom][public] */</comment> <type><name pos:line="1155" pos:column="32">unsigned</name> <name pos:line="1155" pos:column="41">__int3264</name></type> <name pos:line="1155" pos:column="51">ULONG_PTR</name>;</typedef>

<typedef pos:line="1157" pos:column="1">typedef <comment type="block" pos:line="1157" pos:column="9">/* [public] */</comment> <type><name pos:line="1157" pos:column="24">unsigned</name> <name pos:line="1157" pos:column="33">__int3264</name> <type:modifier pos:line="1157" pos:column="43">*</type:modifier></type><name pos:line="1157" pos:column="44">PULONG_PTR</name>;</typedef>

<typedef pos:line="1159" pos:column="1">typedef <type><name pos:line="1159" pos:column="9">unsigned</name> <name pos:line="1159" pos:column="18">short</name></type> <name pos:line="1159" pos:column="24">UHALF_PTR</name>;</typedef>

<typedef pos:line="1161" pos:column="1">typedef <type><name pos:line="1161" pos:column="9">unsigned</name> <name pos:line="1161" pos:column="18">short</name> <type:modifier pos:line="1161" pos:column="24">*</type:modifier></type><name pos:line="1161" pos:column="25">PUHALF_PTR</name>;</typedef>

<typedef pos:line="1163" pos:column="1">typedef <type><name pos:line="1163" pos:column="9">short</name></type> <name pos:line="1163" pos:column="15">HALF_PTR</name>;</typedef>

<typedef pos:line="1165" pos:column="1">typedef <type><name pos:line="1165" pos:column="9">short</name> <type:modifier pos:line="1165" pos:column="15">*</type:modifier></type><name pos:line="1165" pos:column="16">PHALF_PTR</name>;</typedef>

<typedef pos:line="1167" pos:column="1">typedef <type><name pos:line="1167" pos:column="9">long</name></type> <name pos:line="1167" pos:column="14">SHANDLE_PTR</name>;</typedef>

<typedef pos:line="1169" pos:column="1">typedef <type><name pos:line="1169" pos:column="9">unsigned</name> <name pos:line="1169" pos:column="18">long</name></type> <name pos:line="1169" pos:column="23">HANDLE_PTR</name>;</typedef>

<typedef pos:line="1171" pos:column="1">typedef <type><name pos:line="1171" pos:column="9">ULONG_PTR</name></type> <name pos:line="1171" pos:column="19">SIZE_T</name>;</typedef>

<typedef pos:line="1173" pos:column="1">typedef <type><name pos:line="1173" pos:column="9">ULONG_PTR</name> <type:modifier pos:line="1173" pos:column="19">*</type:modifier></type><name pos:line="1173" pos:column="20">PSIZE_T</name>;</typedef>

<typedef pos:line="1175" pos:column="1">typedef <type><name pos:line="1175" pos:column="9">LONG_PTR</name></type> <name pos:line="1175" pos:column="18">SSIZE_T</name>;</typedef>

<typedef pos:line="1177" pos:column="1">typedef <type><name pos:line="1177" pos:column="9">LONG_PTR</name> <type:modifier pos:line="1177" pos:column="18">*</type:modifier></type><name pos:line="1177" pos:column="19">PSSIZE_T</name>;</typedef>

<typedef pos:line="1179" pos:column="1">typedef <type><name pos:line="1179" pos:column="9">ULONG_PTR</name></type> <name pos:line="1179" pos:column="19">DWORD_PTR</name>;</typedef>

<typedef pos:line="1181" pos:column="1">typedef <type><name pos:line="1181" pos:column="9">ULONG_PTR</name> <type:modifier pos:line="1181" pos:column="19">*</type:modifier></type><name pos:line="1181" pos:column="20">PDWORD_PTR</name>;</typedef>

<typedef pos:line="1183" pos:column="1">typedef <type><name pos:line="1183" pos:column="9">__int64</name></type> <name pos:line="1183" pos:column="17">LONG64</name>;</typedef>

<typedef pos:line="1185" pos:column="1">typedef <type><name pos:line="1185" pos:column="9">__int64</name> <type:modifier pos:line="1185" pos:column="17">*</type:modifier></type><name pos:line="1185" pos:column="18">PLONG64</name>;</typedef>

<typedef pos:line="1187" pos:column="1">typedef <type><name pos:line="1187" pos:column="9">unsigned</name> <name pos:line="1187" pos:column="18">__int64</name></type> <name pos:line="1187" pos:column="26">ULONG64</name>;</typedef>

<typedef pos:line="1189" pos:column="1">typedef <type><name pos:line="1189" pos:column="9">unsigned</name> <name pos:line="1189" pos:column="18">__int64</name> <type:modifier pos:line="1189" pos:column="26">*</type:modifier></type><name pos:line="1189" pos:column="27">PULONG64</name>;</typedef>

<typedef pos:line="1191" pos:column="1">typedef <type><name pos:line="1191" pos:column="9">unsigned</name> <name pos:line="1191" pos:column="18">__int64</name></type> <name pos:line="1191" pos:column="26">DWORD64</name>;</typedef>

<typedef pos:line="1193" pos:column="1">typedef <type><name pos:line="1193" pos:column="9">unsigned</name> <name pos:line="1193" pos:column="18">__int64</name> <type:modifier pos:line="1193" pos:column="26">*</type:modifier></type><name pos:line="1193" pos:column="27">PDWORD64</name>;</typedef>

<typedef pos:line="1195" pos:column="1">typedef <type><name pos:line="1195" pos:column="9">ULONG_PTR</name></type> <name pos:line="1195" pos:column="19">KAFFINITY</name>;</typedef>

<typedef pos:line="1197" pos:column="1">typedef <type><name pos:line="1197" pos:column="9">KAFFINITY</name> <type:modifier pos:line="1197" pos:column="19">*</type:modifier></type><name pos:line="1197" pos:column="20">PKAFFINITY</name>;</typedef>

<cpp:endif pos:line="1199" pos:column="1">#<cpp:directive pos:line="1199" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="1199" pos:column="8">// _BASETSD_H_</comment>
<cpp:define pos:line="1200" pos:column="1">#<cpp:directive pos:line="1200" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="1200" pos:column="9">MSDBG_VERSION</name></cpp:macro>	<cpp:value pos:line="1200" pos:column="25">( 7126 )</cpp:value></cpp:define>

<enum pos:line="1202" pos:column="1">enum <name pos:line="1202" pos:column="6">AD7_HRESULT</name>
<block pos:line="1203" pos:column="1">{
    <decl><name pos:line="1204" pos:column="5">S_ATTACH_DEFERRED__</name> <init pos:line="1204" pos:column="25">= <expr><lit:literal type="number" pos:line="1204" pos:column="27">0x40004</lit:literal></expr></init></decl><op:operator pos:line="1204" pos:column="34">,</op:operator>
    <decl><name pos:line="1205" pos:column="5">S_ATTACH_IGNORED__</name> <init pos:line="1205" pos:column="24">= <expr><lit:literal type="number" pos:line="1205" pos:column="26">0x40005</lit:literal></expr></init></decl><op:operator pos:line="1205" pos:column="33">,</op:operator>
    <decl><name pos:line="1206" pos:column="5">S_JIT_USERCANCELLED__</name> <init pos:line="1206" pos:column="27">= <expr><lit:literal type="number" pos:line="1206" pos:column="29">0x400B0</lit:literal></expr></init></decl><op:operator pos:line="1206" pos:column="36">,</op:operator>
    <decl><name pos:line="1207" pos:column="5">S_JIT_NOT_REG_FOR_ENGINE__</name> <init pos:line="1207" pos:column="32">= <expr><lit:literal type="number" pos:line="1207" pos:column="34">0x400B5</lit:literal></expr></init></decl><op:operator pos:line="1207" pos:column="41">,</op:operator>
    <decl><name pos:line="1208" pos:column="5">S_TERMINATE_PROCESSES_STILL_DETACHING__</name> <init pos:line="1208" pos:column="45">= <expr><lit:literal type="number" pos:line="1208" pos:column="47">0x400C0</lit:literal></expr></init></decl><op:operator pos:line="1208" pos:column="54">,</op:operator>
    <decl><name pos:line="1209" pos:column="5">S_TERMINATE_PROCESSES_STILL_TERMINATING__</name> <init pos:line="1209" pos:column="47">= <expr><lit:literal type="number" pos:line="1209" pos:column="49">0x400C1</lit:literal></expr></init></decl><op:operator pos:line="1209" pos:column="56">,</op:operator>
    <decl><name pos:line="1210" pos:column="5">S_ENC_SETIP_REQUIRES_CONTINUE__</name> <init pos:line="1210" pos:column="37">= <expr><lit:literal type="number" pos:line="1210" pos:column="39">0x40106</lit:literal></expr></init></decl><op:operator pos:line="1210" pos:column="46">,</op:operator>
    <decl><name pos:line="1211" pos:column="5">S_WEBDBG_UNABLE_TO_DIAGNOSE__</name> <init pos:line="1211" pos:column="35">= <expr><lit:literal type="number" pos:line="1211" pos:column="37">0x40120</lit:literal></expr></init></decl><op:operator pos:line="1211" pos:column="44">,</op:operator>
    <decl><name pos:line="1212" pos:column="5">S_WEBDBG_DEBUG_VERB_BLOCKED__</name> <init pos:line="1212" pos:column="35">= <expr><lit:literal type="number" pos:line="1212" pos:column="37">0x40121</lit:literal></expr></init></decl><op:operator pos:line="1212" pos:column="44">,</op:operator>
    <decl><name pos:line="1213" pos:column="5">S_ASP_USER_ACCESS_DENIED__</name> <init pos:line="1213" pos:column="32">= <expr><lit:literal type="number" pos:line="1213" pos:column="34">0x40125</lit:literal></expr></init></decl><op:operator pos:line="1213" pos:column="41">,</op:operator>
    <decl><name pos:line="1214" pos:column="5">S_JMC_LIMITED_SUPPORT__</name> <init pos:line="1214" pos:column="29">= <expr><lit:literal type="number" pos:line="1214" pos:column="31">0x40146</lit:literal></expr></init></decl><op:operator pos:line="1214" pos:column="38">,</op:operator>
    <decl><name pos:line="1215" pos:column="5">S_CANNOT_REMAP_IN_EXCEPTION__</name> <init pos:line="1215" pos:column="35">= <expr><lit:literal type="number" pos:line="1215" pos:column="37">0x40150</lit:literal></expr></init></decl><op:operator pos:line="1215" pos:column="44">,</op:operator>
    <decl><name pos:line="1216" pos:column="5">S_CANNOT_REMAP_NOT_AT_SEQUENCE_POINT__</name> <init pos:line="1216" pos:column="44">= <expr><lit:literal type="number" pos:line="1216" pos:column="46">0x40151</lit:literal></expr></init></decl><op:operator pos:line="1216" pos:column="53">,</op:operator>
    <decl><name pos:line="1217" pos:column="5">S_GETPARENT_NO_PARENT__</name> <init pos:line="1217" pos:column="29">= <expr><lit:literal type="number" pos:line="1217" pos:column="31">0x40531</lit:literal></expr></init></decl><op:operator pos:line="1217" pos:column="38">,</op:operator>
    <decl><name pos:line="1218" pos:column="5">S_GETDERIVEDMOST_NO_DERIVED_MOST__</name> <init pos:line="1218" pos:column="40">= <expr><lit:literal type="number" pos:line="1218" pos:column="42">0x40541</lit:literal></expr></init></decl><op:operator pos:line="1218" pos:column="49">,</op:operator>
    <decl><name pos:line="1219" pos:column="5">S_GETMEMORYBYTES_NO_MEMORY_BYTES__</name> <init pos:line="1219" pos:column="40">= <expr><lit:literal type="number" pos:line="1219" pos:column="42">0x40551</lit:literal></expr></init></decl><op:operator pos:line="1219" pos:column="49">,</op:operator>
    <decl><name pos:line="1220" pos:column="5">S_GETMEMORYCONTEXT_NO_MEMORY_CONTEXT__</name> <init pos:line="1220" pos:column="44">= <expr><lit:literal type="number" pos:line="1220" pos:column="46">0x40561</lit:literal></expr></init></decl><op:operator pos:line="1220" pos:column="53">,</op:operator>
    <decl><name pos:line="1221" pos:column="5">S_GETSIZE_NO_SIZE__</name> <init pos:line="1221" pos:column="25">= <expr><lit:literal type="number" pos:line="1221" pos:column="27">0x40571</lit:literal></expr></init></decl><op:operator pos:line="1221" pos:column="34">,</op:operator>
    <decl><name pos:line="1222" pos:column="5">S_GETEXTENDEDINFO_NO_EXTENDEDINFO__</name> <init pos:line="1222" pos:column="41">= <expr><lit:literal type="number" pos:line="1222" pos:column="43">0x40591</lit:literal></expr></init></decl><op:operator pos:line="1222" pos:column="50">,</op:operator>
    <decl><name pos:line="1223" pos:column="5">S_ASYNC_STOP__</name> <init pos:line="1223" pos:column="20">= <expr><lit:literal type="number" pos:line="1223" pos:column="22">0x40B02</lit:literal></expr></init></decl><op:operator pos:line="1223" pos:column="29">,</op:operator>
    <decl><name pos:line="1224" pos:column="5">E_ATTACH_DEBUGGER_ALREADY_ATTACHED__</name> <init pos:line="1224" pos:column="42">= <expr><lit:literal type="number" pos:line="1224" pos:column="44">0x80040001</lit:literal></expr></init></decl><op:operator pos:line="1224" pos:column="54">,</op:operator>
    <decl><name pos:line="1225" pos:column="5">E_ATTACH_DEBUGGEE_PROCESS_SECURITY_VIOLATION__</name> <init pos:line="1225" pos:column="52">= <expr><lit:literal type="number" pos:line="1225" pos:column="54">0x80040002</lit:literal></expr></init></decl><op:operator pos:line="1225" pos:column="64">,</op:operator>
    <decl><name pos:line="1226" pos:column="5">E_ATTACH_CANNOT_ATTACH_TO_DESKTOP__</name> <init pos:line="1226" pos:column="41">= <expr><lit:literal type="number" pos:line="1226" pos:column="43">0x80040003</lit:literal></expr></init></decl><op:operator pos:line="1226" pos:column="53">,</op:operator>
    <decl><name pos:line="1227" pos:column="5">E_LAUNCH_NO_INTEROP__</name> <init pos:line="1227" pos:column="27">= <expr><lit:literal type="number" pos:line="1227" pos:column="29">0x80040005</lit:literal></expr></init></decl><op:operator pos:line="1227" pos:column="39">,</op:operator>
    <decl><name pos:line="1228" pos:column="5">E_LAUNCH_DEBUGGING_NOT_POSSIBLE__</name> <init pos:line="1228" pos:column="39">= <expr><lit:literal type="number" pos:line="1228" pos:column="41">0x80040006</lit:literal></expr></init></decl><op:operator pos:line="1228" pos:column="51">,</op:operator>
    <decl><name pos:line="1229" pos:column="5">E_LAUNCH_KERNEL_DEBUGGER_ENABLED__</name> <init pos:line="1229" pos:column="40">= <expr><lit:literal type="number" pos:line="1229" pos:column="42">0x80040007</lit:literal></expr></init></decl><op:operator pos:line="1229" pos:column="52">,</op:operator>
    <decl><name pos:line="1230" pos:column="5">E_LAUNCH_KERNEL_DEBUGGER_PRESENT__</name> <init pos:line="1230" pos:column="40">= <expr><lit:literal type="number" pos:line="1230" pos:column="42">0x80040008</lit:literal></expr></init></decl><op:operator pos:line="1230" pos:column="52">,</op:operator>
    <decl><name pos:line="1231" pos:column="5">E_INTEROP_NOT_SUPPORTED__</name> <init pos:line="1231" pos:column="31">= <expr><lit:literal type="number" pos:line="1231" pos:column="33">0x80040009</lit:literal></expr></init></decl><op:operator pos:line="1231" pos:column="43">,</op:operator>
    <decl><name pos:line="1232" pos:column="5">E_TOO_MANY_PROCESSES__</name> <init pos:line="1232" pos:column="28">= <expr><lit:literal type="number" pos:line="1232" pos:column="30">0x8004000A</lit:literal></expr></init></decl><op:operator pos:line="1232" pos:column="40">,</op:operator>
    <decl><name pos:line="1233" pos:column="5">E_MSHTML_SCRIPT_DEBUGGING_DISABLED__</name> <init pos:line="1233" pos:column="42">= <expr><lit:literal type="number" pos:line="1233" pos:column="44">0x8004000B</lit:literal></expr></init></decl><op:operator pos:line="1233" pos:column="54">,</op:operator>
    <decl><name pos:line="1234" pos:column="5">E_SCRIPT_PDM_NOT_REGISTERED__</name> <init pos:line="1234" pos:column="35">= <expr><lit:literal type="number" pos:line="1234" pos:column="37">0x8004000C</lit:literal></expr></init></decl><op:operator pos:line="1234" pos:column="47">,</op:operator>
    <decl><name pos:line="1235" pos:column="5">E_DE_CLR_DBG_SERVICES_NOT_INSTALLED__</name> <init pos:line="1235" pos:column="43">= <expr><lit:literal type="number" pos:line="1235" pos:column="45">0x8004000D</lit:literal></expr></init></decl><op:operator pos:line="1235" pos:column="55">,</op:operator>
    <decl><name pos:line="1236" pos:column="5">E_ATTACH_NO_CLR_PROGRAMS__</name> <init pos:line="1236" pos:column="32">= <expr><lit:literal type="number" pos:line="1236" pos:column="34">0x8004000E</lit:literal></expr></init></decl><op:operator pos:line="1236" pos:column="44">,</op:operator>
    <decl><name pos:line="1237" pos:column="5">E_REMOTE_SERVER_CLOSED__</name> <init pos:line="1237" pos:column="30">= <expr><lit:literal type="number" pos:line="1237" pos:column="32">0x80040010</lit:literal></expr></init></decl><op:operator pos:line="1237" pos:column="42">,</op:operator>
    <decl><name pos:line="1238" pos:column="5">E_CLR_NOT_SUPPORTED__</name> <init pos:line="1238" pos:column="27">= <expr><lit:literal type="number" pos:line="1238" pos:column="29">0x80040016</lit:literal></expr></init></decl><op:operator pos:line="1238" pos:column="39">,</op:operator>
    <decl><name pos:line="1239" pos:column="5">E_64BIT_CLR_NOT_SUPPORTED__</name> <init pos:line="1239" pos:column="33">= <expr><lit:literal type="number" pos:line="1239" pos:column="35">0x80040017</lit:literal></expr></init></decl><op:operator pos:line="1239" pos:column="45">,</op:operator>
    <decl><name pos:line="1240" pos:column="5">E_CANNOT_MIX_MINDUMP_DEBUGGING__</name> <init pos:line="1240" pos:column="38">= <expr><lit:literal type="number" pos:line="1240" pos:column="40">0x80040018</lit:literal></expr></init></decl><op:operator pos:line="1240" pos:column="50">,</op:operator>
    <decl><name pos:line="1241" pos:column="5">E_DEBUG_ENGINE_NOT_REGISTERED__</name> <init pos:line="1241" pos:column="37">= <expr><lit:literal type="number" pos:line="1241" pos:column="39">0x80040019</lit:literal></expr></init></decl><op:operator pos:line="1241" pos:column="49">,</op:operator>
    <decl><name pos:line="1242" pos:column="5">E_LAUNCH_SXS_ERROR__</name> <init pos:line="1242" pos:column="26">= <expr><lit:literal type="number" pos:line="1242" pos:column="28">0x8004001A</lit:literal></expr></init></decl><op:operator pos:line="1242" pos:column="38">,</op:operator>
    <decl><name pos:line="1243" pos:column="5">E_FAILED_TO_INITIALIZE_SCRIPT_PROXY__</name> <init pos:line="1243" pos:column="43">= <expr><lit:literal type="number" pos:line="1243" pos:column="45">0x8004001B</lit:literal></expr></init></decl><op:operator pos:line="1243" pos:column="55">,</op:operator>
    <decl><name pos:line="1244" pos:column="5">E_REMOTE_SERVER_DOES_NOT_EXIST__</name> <init pos:line="1244" pos:column="38">= <expr><lit:literal type="number" pos:line="1244" pos:column="40">0x80040020</lit:literal></expr></init></decl><op:operator pos:line="1244" pos:column="50">,</op:operator>
    <decl><name pos:line="1245" pos:column="5">E_REMOTE_SERVER_ACCESS_DENIED__</name> <init pos:line="1245" pos:column="37">= <expr><lit:literal type="number" pos:line="1245" pos:column="39">0x80040021</lit:literal></expr></init></decl><op:operator pos:line="1245" pos:column="49">,</op:operator>
    <decl><name pos:line="1246" pos:column="5">E_REMOTE_SERVER_MACHINE_DOES_NOT_EXIST__</name> <init pos:line="1246" pos:column="46">= <expr><lit:literal type="number" pos:line="1246" pos:column="48">0x80040022</lit:literal></expr></init></decl><op:operator pos:line="1246" pos:column="58">,</op:operator>
    <decl><name pos:line="1247" pos:column="5">E_DEBUGGER_NOT_REGISTERED_PROPERLY__</name> <init pos:line="1247" pos:column="42">= <expr><lit:literal type="number" pos:line="1247" pos:column="44">0x80040023</lit:literal></expr></init></decl><op:operator pos:line="1247" pos:column="54">,</op:operator>
    <decl><name pos:line="1248" pos:column="5">E_FORCE_GUEST_MODE_ENABLED__</name> <init pos:line="1248" pos:column="34">= <expr><lit:literal type="number" pos:line="1248" pos:column="36">0x80040024</lit:literal></expr></init></decl><op:operator pos:line="1248" pos:column="46">,</op:operator>
    <decl><name pos:line="1249" pos:column="5">E_GET_IWAM_USER_FAILURE__</name> <init pos:line="1249" pos:column="31">= <expr><lit:literal type="number" pos:line="1249" pos:column="33">0x80040025</lit:literal></expr></init></decl><op:operator pos:line="1249" pos:column="43">,</op:operator>
    <decl><name pos:line="1250" pos:column="5">E_REMOTE_SERVER_INVALID_NAME__</name> <init pos:line="1250" pos:column="36">= <expr><lit:literal type="number" pos:line="1250" pos:column="38">0x80040026</lit:literal></expr></init></decl><op:operator pos:line="1250" pos:column="48">,</op:operator>
    <decl><name pos:line="1251" pos:column="5">E_REMOTE_SERVER_MACHINE_NO_DEFAULT__</name> <init pos:line="1251" pos:column="42">= <expr><lit:literal type="number" pos:line="1251" pos:column="44">0x80040027</lit:literal></expr></init></decl><op:operator pos:line="1251" pos:column="54">,</op:operator>
    <decl><name pos:line="1252" pos:column="5">E_AUTO_LAUNCH_EXEC_FAILURE__</name> <init pos:line="1252" pos:column="34">= <expr><lit:literal type="number" pos:line="1252" pos:column="36">0x80040028</lit:literal></expr></init></decl><op:operator pos:line="1252" pos:column="46">,</op:operator>
    <decl><name pos:line="1253" pos:column="5">E_SERVICE_ACCESS_DENIED__</name> <init pos:line="1253" pos:column="31">= <expr><lit:literal type="number" pos:line="1253" pos:column="33">0x80040029</lit:literal></expr></init></decl><op:operator pos:line="1253" pos:column="43">,</op:operator>
    <decl><name pos:line="1254" pos:column="5">E_SERVICE_ACCESS_DENIED_ON_CALLBACK__</name> <init pos:line="1254" pos:column="43">= <expr><lit:literal type="number" pos:line="1254" pos:column="45">0x8004002A</lit:literal></expr></init></decl><op:operator pos:line="1254" pos:column="55">,</op:operator>
    <decl><name pos:line="1255" pos:column="5">E_REMOTE_COMPONENTS_NOT_REGISTERED__</name> <init pos:line="1255" pos:column="42">= <expr><lit:literal type="number" pos:line="1255" pos:column="44">0x8004002B</lit:literal></expr></init></decl><op:operator pos:line="1255" pos:column="54">,</op:operator>
    <decl><name pos:line="1256" pos:column="5">E_DCOM_ACCESS_DENIED__</name> <init pos:line="1256" pos:column="28">= <expr><lit:literal type="number" pos:line="1256" pos:column="30">0x8004002C</lit:literal></expr></init></decl><op:operator pos:line="1256" pos:column="40">,</op:operator>
    <decl><name pos:line="1257" pos:column="5">E_SHARE_LEVEL_ACCESS_CONTROL_ENABLED__</name> <init pos:line="1257" pos:column="44">= <expr><lit:literal type="number" pos:line="1257" pos:column="46">0x8004002D</lit:literal></expr></init></decl><op:operator pos:line="1257" pos:column="56">,</op:operator>
    <decl><name pos:line="1258" pos:column="5">E_WORKGROUP_REMOTE_LOGON_FAILURE__</name> <init pos:line="1258" pos:column="40">= <expr><lit:literal type="number" pos:line="1258" pos:column="42">0x8004002E</lit:literal></expr></init></decl><op:operator pos:line="1258" pos:column="52">,</op:operator>
    <decl><name pos:line="1259" pos:column="5">E_WINAUTH_CONNECT_NOT_SUPPORTED__</name> <init pos:line="1259" pos:column="39">= <expr><lit:literal type="number" pos:line="1259" pos:column="41">0x8004002F</lit:literal></expr></init></decl><op:operator pos:line="1259" pos:column="51">,</op:operator>
    <decl><name pos:line="1260" pos:column="5">E_EVALUATE_BUSY_WITH_EVALUATION__</name> <init pos:line="1260" pos:column="39">= <expr><lit:literal type="number" pos:line="1260" pos:column="41">0x80040030</lit:literal></expr></init></decl><op:operator pos:line="1260" pos:column="51">,</op:operator>
    <decl><name pos:line="1261" pos:column="5">E_EVALUATE_TIMEOUT__</name> <init pos:line="1261" pos:column="26">= <expr><lit:literal type="number" pos:line="1261" pos:column="28">0x80040031</lit:literal></expr></init></decl><op:operator pos:line="1261" pos:column="38">,</op:operator>
    <decl><name pos:line="1262" pos:column="5">E_INTEROP_CLR_TOO_OLD__</name> <init pos:line="1262" pos:column="29">= <expr><lit:literal type="number" pos:line="1262" pos:column="31">0x80040032</lit:literal></expr></init></decl><op:operator pos:line="1262" pos:column="41">,</op:operator>
    <decl><name pos:line="1263" pos:column="5">E_CLR_INCOMPATIBLE_PROTOCOL__</name> <init pos:line="1263" pos:column="35">= <expr><lit:literal type="number" pos:line="1263" pos:column="37">0x80040033</lit:literal></expr></init></decl><op:operator pos:line="1263" pos:column="47">,</op:operator>
    <decl><name pos:line="1264" pos:column="5">E_CLR_CANNOT_DEBUG_FIBER_PROCESS__</name> <init pos:line="1264" pos:column="40">= <expr><lit:literal type="number" pos:line="1264" pos:column="42">0x80040034</lit:literal></expr></init></decl><op:operator pos:line="1264" pos:column="52">,</op:operator>
    <decl><name pos:line="1265" pos:column="5">E_PROCESS_OBJECT_ACCESS_DENIED__</name> <init pos:line="1265" pos:column="38">= <expr><lit:literal type="number" pos:line="1265" pos:column="40">0x80040035</lit:literal></expr></init></decl><op:operator pos:line="1265" pos:column="50">,</op:operator>
    <decl><name pos:line="1266" pos:column="5">E_PROCESS_TOKEN_ACCESS_DENIED__</name> <init pos:line="1266" pos:column="37">= <expr><lit:literal type="number" pos:line="1266" pos:column="39">0x80040036</lit:literal></expr></init></decl><op:operator pos:line="1266" pos:column="49">,</op:operator>
    <decl><name pos:line="1267" pos:column="5">E_PROCESS_TOKEN_ACCESS_DENIED_NO_TS__</name> <init pos:line="1267" pos:column="43">= <expr><lit:literal type="number" pos:line="1267" pos:column="45">0x80040037</lit:literal></expr></init></decl><op:operator pos:line="1267" pos:column="55">,</op:operator>
    <decl><name pos:line="1268" pos:column="5">E_OPERATION_REQUIRES_ELEVATION__</name> <init pos:line="1268" pos:column="38">= <expr><lit:literal type="number" pos:line="1268" pos:column="40">0x80040038</lit:literal></expr></init></decl><op:operator pos:line="1268" pos:column="50">,</op:operator>
    <decl><name pos:line="1269" pos:column="5">E_ATTACH_REQUIRES_ELEVATION__</name> <init pos:line="1269" pos:column="35">= <expr><lit:literal type="number" pos:line="1269" pos:column="37">0x80040039</lit:literal></expr></init></decl><op:operator pos:line="1269" pos:column="47">,</op:operator>
    <decl><name pos:line="1270" pos:column="5">E_MEMORY_NOTSUPPORTED__</name> <init pos:line="1270" pos:column="29">= <expr><lit:literal type="number" pos:line="1270" pos:column="31">0x80040040</lit:literal></expr></init></decl><op:operator pos:line="1270" pos:column="41">,</op:operator>
    <decl><name pos:line="1271" pos:column="5">E_DISASM_NOTSUPPORTED__</name> <init pos:line="1271" pos:column="29">= <expr><lit:literal type="number" pos:line="1271" pos:column="31">0x80040041</lit:literal></expr></init></decl><op:operator pos:line="1271" pos:column="41">,</op:operator>
    <decl><name pos:line="1272" pos:column="5">E_DISASM_BADADDRESS__</name> <init pos:line="1272" pos:column="27">= <expr><lit:literal type="number" pos:line="1272" pos:column="29">0x80040042</lit:literal></expr></init></decl><op:operator pos:line="1272" pos:column="39">,</op:operator>
    <decl><name pos:line="1273" pos:column="5">E_DISASM_NOTAVAILABLE__</name> <init pos:line="1273" pos:column="29">= <expr><lit:literal type="number" pos:line="1273" pos:column="31">0x80040043</lit:literal></expr></init></decl><op:operator pos:line="1273" pos:column="41">,</op:operator>
    <decl><name pos:line="1274" pos:column="5">E_BP_DELETED__</name> <init pos:line="1274" pos:column="20">= <expr><lit:literal type="number" pos:line="1274" pos:column="22">0x80040060</lit:literal></expr></init></decl><op:operator pos:line="1274" pos:column="32">,</op:operator>
    <decl><name pos:line="1275" pos:column="5">E_PROCESS_DESTROYED__</name> <init pos:line="1275" pos:column="27">= <expr><lit:literal type="number" pos:line="1275" pos:column="29">0x80040070</lit:literal></expr></init></decl><op:operator pos:line="1275" pos:column="39">,</op:operator>
    <decl><name pos:line="1276" pos:column="5">E_PROCESS_DEBUGGER_IS_DEBUGGEE__</name> <init pos:line="1276" pos:column="38">= <expr><lit:literal type="number" pos:line="1276" pos:column="40">0x80040071</lit:literal></expr></init></decl><op:operator pos:line="1276" pos:column="50">,</op:operator>
    <decl><name pos:line="1277" pos:column="5">E_TERMINATE_FORBIDDEN__</name> <init pos:line="1277" pos:column="29">= <expr><lit:literal type="number" pos:line="1277" pos:column="31">0x80040072</lit:literal></expr></init></decl><op:operator pos:line="1277" pos:column="41">,</op:operator>
    <decl><name pos:line="1278" pos:column="5">E_THREAD_DESTROYED__</name> <init pos:line="1278" pos:column="26">= <expr><lit:literal type="number" pos:line="1278" pos:column="28">0x80040075</lit:literal></expr></init></decl><op:operator pos:line="1278" pos:column="38">,</op:operator>
    <decl><name pos:line="1279" pos:column="5">E_PORTSUPPLIER_NO_PORT__</name> <init pos:line="1279" pos:column="30">= <expr><lit:literal type="number" pos:line="1279" pos:column="32">0x80040080</lit:literal></expr></init></decl><op:operator pos:line="1279" pos:column="42">,</op:operator>
    <decl><name pos:line="1280" pos:column="5">E_PORT_NO_REQUEST__</name> <init pos:line="1280" pos:column="25">= <expr><lit:literal type="number" pos:line="1280" pos:column="27">0x80040090</lit:literal></expr></init></decl><op:operator pos:line="1280" pos:column="37">,</op:operator>
    <decl><name pos:line="1281" pos:column="5">E_COMPARE_CANNOT_COMPARE__</name> <init pos:line="1281" pos:column="32">= <expr><lit:literal type="number" pos:line="1281" pos:column="34">0x800400A0</lit:literal></expr></init></decl><op:operator pos:line="1281" pos:column="44">,</op:operator>
    <decl><name pos:line="1282" pos:column="5">E_JIT_INVALID_PID__</name> <init pos:line="1282" pos:column="25">= <expr><lit:literal type="number" pos:line="1282" pos:column="27">0x800400B1</lit:literal></expr></init></decl><op:operator pos:line="1282" pos:column="37">,</op:operator>
    <decl><name pos:line="1283" pos:column="5">E_JIT_VSJITDEBUGGER_NOT_REGISTERED__</name> <init pos:line="1283" pos:column="42">= <expr><lit:literal type="number" pos:line="1283" pos:column="44">0x800400B3</lit:literal></expr></init></decl><op:operator pos:line="1283" pos:column="54">,</op:operator>
    <decl><name pos:line="1284" pos:column="5">E_JIT_APPID_NOT_REGISTERED__</name> <init pos:line="1284" pos:column="34">= <expr><lit:literal type="number" pos:line="1284" pos:column="36">0x800400B4</lit:literal></expr></init></decl><op:operator pos:line="1284" pos:column="46">,</op:operator>
    <decl><name pos:line="1285" pos:column="5">E_JIT_RUNTIME_VERSION_UNSUPPORTED__</name> <init pos:line="1285" pos:column="41">= <expr><lit:literal type="number" pos:line="1285" pos:column="43">0x800400B6</lit:literal></expr></init></decl><op:operator pos:line="1285" pos:column="53">,</op:operator>
    <decl><name pos:line="1286" pos:column="5">E_SESSION_TERMINATE_DETACH_FAILED__</name> <init pos:line="1286" pos:column="41">= <expr><lit:literal type="number" pos:line="1286" pos:column="43">0x800400C2</lit:literal></expr></init></decl><op:operator pos:line="1286" pos:column="53">,</op:operator>
    <decl><name pos:line="1287" pos:column="5">E_SESSION_TERMINATE_FAILED__</name> <init pos:line="1287" pos:column="34">= <expr><lit:literal type="number" pos:line="1287" pos:column="36">0x800400C3</lit:literal></expr></init></decl><op:operator pos:line="1287" pos:column="46">,</op:operator>
    <decl><name pos:line="1288" pos:column="5">E_DETACH_NO_PROXY__</name> <init pos:line="1288" pos:column="25">= <expr><lit:literal type="number" pos:line="1288" pos:column="27">0x800400D0</lit:literal></expr></init></decl><op:operator pos:line="1288" pos:column="37">,</op:operator>
    <decl><name pos:line="1289" pos:column="5">E_DETACH_TS_UNSUPPORTED__</name> <init pos:line="1289" pos:column="31">= <expr><lit:literal type="number" pos:line="1289" pos:column="33">0x800400E0</lit:literal></expr></init></decl><op:operator pos:line="1289" pos:column="43">,</op:operator>
    <decl><name pos:line="1290" pos:column="5">E_DETACH_IMPERSONATE_FAILURE__</name> <init pos:line="1290" pos:column="36">= <expr><lit:literal type="number" pos:line="1290" pos:column="38">0x800400F0</lit:literal></expr></init></decl><op:operator pos:line="1290" pos:column="48">,</op:operator>
    <decl><name pos:line="1291" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_ON_NONLEAF_FRAME__</name> <init pos:line="1291" pos:column="52">= <expr><lit:literal type="number" pos:line="1291" pos:column="54">0x80040100</lit:literal></expr></init></decl><op:operator pos:line="1291" pos:column="64">,</op:operator>
    <decl><name pos:line="1292" pos:column="5">E_TARGET_FILE_MISMATCH__</name> <init pos:line="1292" pos:column="30">= <expr><lit:literal type="number" pos:line="1292" pos:column="32">0x80040101</lit:literal></expr></init></decl><op:operator pos:line="1292" pos:column="42">,</op:operator>
    <decl><name pos:line="1293" pos:column="5">E_IMAGE_NOT_LOADED__</name> <init pos:line="1293" pos:column="26">= <expr><lit:literal type="number" pos:line="1293" pos:column="28">0x80040102</lit:literal></expr></init></decl><op:operator pos:line="1293" pos:column="38">,</op:operator>
    <decl><name pos:line="1294" pos:column="5">E_FIBER_NOT_SUPPORTED__</name> <init pos:line="1294" pos:column="29">= <expr><lit:literal type="number" pos:line="1294" pos:column="31">0x80040103</lit:literal></expr></init></decl><op:operator pos:line="1294" pos:column="41">,</op:operator>
    <decl><name pos:line="1295" pos:column="5">E_CANNOT_SETIP_TO_DIFFERENT_FUNCTION__</name> <init pos:line="1295" pos:column="44">= <expr><lit:literal type="number" pos:line="1295" pos:column="46">0x80040104</lit:literal></expr></init></decl><op:operator pos:line="1295" pos:column="56">,</op:operator>
    <decl><name pos:line="1296" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_ON_EXCEPTION__</name> <init pos:line="1296" pos:column="48">= <expr><lit:literal type="number" pos:line="1296" pos:column="50">0x80040105</lit:literal></expr></init></decl><op:operator pos:line="1296" pos:column="60">,</op:operator>
    <decl><name pos:line="1297" pos:column="5">E_ENC_SETIP_REQUIRES_CONTINUE__</name> <init pos:line="1297" pos:column="37">= <expr><lit:literal type="number" pos:line="1297" pos:column="39">0x80040107</lit:literal></expr></init></decl><op:operator pos:line="1297" pos:column="49">,</op:operator>
    <decl><name pos:line="1298" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_INTO_FINALLY__</name> <init pos:line="1298" pos:column="48">= <expr><lit:literal type="number" pos:line="1298" pos:column="50">0x80040108</lit:literal></expr></init></decl><op:operator pos:line="1298" pos:column="60">,</op:operator>
    <decl><name pos:line="1299" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_OUT_OF_FINALLY__</name> <init pos:line="1299" pos:column="50">= <expr><lit:literal type="number" pos:line="1299" pos:column="52">0x80040109</lit:literal></expr></init></decl><op:operator pos:line="1299" pos:column="62">,</op:operator>
    <decl><name pos:line="1300" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_INTO_CATCH__</name> <init pos:line="1300" pos:column="46">= <expr><lit:literal type="number" pos:line="1300" pos:column="48">0x8004010A</lit:literal></expr></init></decl><op:operator pos:line="1300" pos:column="58">,</op:operator>
    <decl><name pos:line="1301" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_GENERAL__</name> <init pos:line="1301" pos:column="43">= <expr><lit:literal type="number" pos:line="1301" pos:column="45">0x8004010B</lit:literal></expr></init></decl><op:operator pos:line="1301" pos:column="55">,</op:operator>
    <decl><name pos:line="1302" pos:column="5">E_CANNOT_SET_NEXT_STATEMENT_INTO_OR_OUT_OF_FILTER__</name> <init pos:line="1302" pos:column="57">= <expr><lit:literal type="number" pos:line="1302" pos:column="59">0x8004010C</lit:literal></expr></init></decl><op:operator pos:line="1302" pos:column="69">,</op:operator>
    <decl><name pos:line="1303" pos:column="5">E_ASYNCBREAK_NO_PROGRAMS__</name> <init pos:line="1303" pos:column="32">= <expr><lit:literal type="number" pos:line="1303" pos:column="34">0x80040110</lit:literal></expr></init></decl><op:operator pos:line="1303" pos:column="44">,</op:operator>
    <decl><name pos:line="1304" pos:column="5">E_ASYNCBREAK_DEBUGGEE_NOT_INITIALIZED__</name> <init pos:line="1304" pos:column="45">= <expr><lit:literal type="number" pos:line="1304" pos:column="47">0x80040111</lit:literal></expr></init></decl><op:operator pos:line="1304" pos:column="57">,</op:operator>
    <decl><name pos:line="1305" pos:column="5">E_ASYNCBREAK_UNABLE_TO_PROCESS__</name> <init pos:line="1305" pos:column="38">= <expr><lit:literal type="number" pos:line="1305" pos:column="40">0x80040112</lit:literal></expr></init></decl><op:operator pos:line="1305" pos:column="50">,</op:operator>
    <decl><name pos:line="1306" pos:column="5">E_WEBDBG_DEBUG_VERB_BLOCKED__</name> <init pos:line="1306" pos:column="35">= <expr><lit:literal type="number" pos:line="1306" pos:column="37">0x80040121</lit:literal></expr></init></decl><op:operator pos:line="1306" pos:column="47">,</op:operator>
    <decl><name pos:line="1307" pos:column="5">E_ASP_USER_ACCESS_DENIED__</name> <init pos:line="1307" pos:column="32">= <expr><lit:literal type="number" pos:line="1307" pos:column="34">0x80040125</lit:literal></expr></init></decl><op:operator pos:line="1307" pos:column="44">,</op:operator>
    <decl><name pos:line="1308" pos:column="5">E_AUTO_ATTACH_NOT_REGISTERED__</name> <init pos:line="1308" pos:column="36">= <expr><lit:literal type="number" pos:line="1308" pos:column="38">0x80040126</lit:literal></expr></init></decl><op:operator pos:line="1308" pos:column="48">,</op:operator>
    <decl><name pos:line="1309" pos:column="5">E_AUTO_ATTACH_DCOM_ERROR__</name> <init pos:line="1309" pos:column="32">= <expr><lit:literal type="number" pos:line="1309" pos:column="34">0x80040127</lit:literal></expr></init></decl><op:operator pos:line="1309" pos:column="44">,</op:operator>
    <decl><name pos:line="1310" pos:column="5">E_AUTO_ATTACH_NOT_SUPPORTED__</name> <init pos:line="1310" pos:column="35">= <expr><lit:literal type="number" pos:line="1310" pos:column="37">0x80040128</lit:literal></expr></init></decl><op:operator pos:line="1310" pos:column="47">,</op:operator>
    <decl><name pos:line="1311" pos:column="5">E_AUTO_ATTACH_CLASSNOTREG__</name> <init pos:line="1311" pos:column="33">= <expr><lit:literal type="number" pos:line="1311" pos:column="35">0x80040129</lit:literal></expr></init></decl><op:operator pos:line="1311" pos:column="45">,</op:operator>
    <decl><name pos:line="1312" pos:column="5">E_CANNOT_CONTINUE_DURING_PENDING_EXPR_EVAL__</name> <init pos:line="1312" pos:column="50">= <expr><lit:literal type="number" pos:line="1312" pos:column="52">0x80040130</lit:literal></expr></init></decl><op:operator pos:line="1312" pos:column="62">,</op:operator>
    <decl><name pos:line="1313" pos:column="5">E_REMOTE_REDIRECTION_UNSUPPORTED__</name> <init pos:line="1313" pos:column="40">= <expr><lit:literal type="number" pos:line="1313" pos:column="42">0x80040135</lit:literal></expr></init></decl><op:operator pos:line="1313" pos:column="52">,</op:operator>
    <decl><name pos:line="1314" pos:column="5">E_INVALID_WORKING_DIRECTORY__</name> <init pos:line="1314" pos:column="35">= <expr><lit:literal type="number" pos:line="1314" pos:column="37">0x80040136</lit:literal></expr></init></decl><op:operator pos:line="1314" pos:column="47">,</op:operator>
    <decl><name pos:line="1315" pos:column="5">E_LAUNCH_FAILED_WITH_ELEVATION__</name> <init pos:line="1315" pos:column="38">= <expr><lit:literal type="number" pos:line="1315" pos:column="40">0x80040137</lit:literal></expr></init></decl><op:operator pos:line="1315" pos:column="50">,</op:operator>
    <decl><name pos:line="1316" pos:column="5">E_LAUNCH_ELEVATION_REQUIRED__</name> <init pos:line="1316" pos:column="35">= <expr><lit:literal type="number" pos:line="1316" pos:column="37">0x80040138</lit:literal></expr></init></decl><op:operator pos:line="1316" pos:column="47">,</op:operator>
    <decl><name pos:line="1317" pos:column="5">E_CANNOT_FIND_INTERNET_EXPLORER__</name> <init pos:line="1317" pos:column="39">= <expr><lit:literal type="number" pos:line="1317" pos:column="41">0x80040139</lit:literal></expr></init></decl><op:operator pos:line="1317" pos:column="51">,</op:operator>
    <decl><name pos:line="1318" pos:column="5">E_REMOTE_PROCESS_OBJECT_ACCESS_DENIED__</name> <init pos:line="1318" pos:column="45">= <expr><lit:literal type="number" pos:line="1318" pos:column="47">0x8004013A</lit:literal></expr></init></decl><op:operator pos:line="1318" pos:column="57">,</op:operator>
    <decl><name pos:line="1319" pos:column="5">E_REMOTE_ATTACH_REQUIRES_ELEVATION__</name> <init pos:line="1319" pos:column="42">= <expr><lit:literal type="number" pos:line="1319" pos:column="44">0x8004013B</lit:literal></expr></init></decl><op:operator pos:line="1319" pos:column="54">,</op:operator>
    <decl><name pos:line="1320" pos:column="5">E_REMOTE_LAUNCH_ELEVATION_REQUIRED__</name> <init pos:line="1320" pos:column="42">= <expr><lit:literal type="number" pos:line="1320" pos:column="44">0x8004013C</lit:literal></expr></init></decl><op:operator pos:line="1320" pos:column="54">,</op:operator>
    <decl><name pos:line="1321" pos:column="5">E_EXCEPTION_CANNOT_BE_INTERCEPTED__</name> <init pos:line="1321" pos:column="41">= <expr><lit:literal type="number" pos:line="1321" pos:column="43">0x80040140</lit:literal></expr></init></decl><op:operator pos:line="1321" pos:column="53">,</op:operator>
    <decl><name pos:line="1322" pos:column="5">E_EXCEPTION_CANNOT_UNWIND_ABOVE_CALLBACK__</name> <init pos:line="1322" pos:column="48">= <expr><lit:literal type="number" pos:line="1322" pos:column="50">0x80040141</lit:literal></expr></init></decl><op:operator pos:line="1322" pos:column="60">,</op:operator>
    <decl><name pos:line="1323" pos:column="5">E_INTERCEPT_CURRENT_EXCEPTION_NOT_SUPPORTED__</name> <init pos:line="1323" pos:column="51">= <expr><lit:literal type="number" pos:line="1323" pos:column="53">0x80040142</lit:literal></expr></init></decl><op:operator pos:line="1323" pos:column="63">,</op:operator>
    <decl><name pos:line="1324" pos:column="5">E_INTERCEPT_CANNOT_UNWIND_LASTCHANCE_INTEROP__</name> <init pos:line="1324" pos:column="52">= <expr><lit:literal type="number" pos:line="1324" pos:column="54">0x80040143</lit:literal></expr></init></decl><op:operator pos:line="1324" pos:column="64">,</op:operator>
    <decl><name pos:line="1325" pos:column="5">E_JMC_CANNOT_SET_STATUS__</name> <init pos:line="1325" pos:column="31">= <expr><lit:literal type="number" pos:line="1325" pos:column="33">0x80040145</lit:literal></expr></init></decl><op:operator pos:line="1325" pos:column="43">,</op:operator>
    <decl><name pos:line="1326" pos:column="5">E_DESTROYED__</name> <init pos:line="1326" pos:column="19">= <expr><lit:literal type="number" pos:line="1326" pos:column="21">0x80040201</lit:literal></expr></init></decl><op:operator pos:line="1326" pos:column="31">,</op:operator>
    <decl><name pos:line="1327" pos:column="5">E_REMOTE_NOMSVCMON__</name> <init pos:line="1327" pos:column="26">= <expr><lit:literal type="number" pos:line="1327" pos:column="28">0x80040202</lit:literal></expr></init></decl><op:operator pos:line="1327" pos:column="38">,</op:operator>
    <decl><name pos:line="1328" pos:column="5">E_REMOTE_BADIPADDRESS__</name> <init pos:line="1328" pos:column="29">= <expr><lit:literal type="number" pos:line="1328" pos:column="31">0x80040203</lit:literal></expr></init></decl><op:operator pos:line="1328" pos:column="41">,</op:operator>
    <decl><name pos:line="1329" pos:column="5">E_REMOTE_MACHINEDOWN__</name> <init pos:line="1329" pos:column="28">= <expr><lit:literal type="number" pos:line="1329" pos:column="30">0x80040204</lit:literal></expr></init></decl><op:operator pos:line="1329" pos:column="40">,</op:operator>
    <decl><name pos:line="1330" pos:column="5">E_REMOTE_MACHINEUNSPECIFIED__</name> <init pos:line="1330" pos:column="35">= <expr><lit:literal type="number" pos:line="1330" pos:column="37">0x80040205</lit:literal></expr></init></decl><op:operator pos:line="1330" pos:column="47">,</op:operator>
    <decl><name pos:line="1331" pos:column="5">E_CRASHDUMP_ACTIVE__</name> <init pos:line="1331" pos:column="26">= <expr><lit:literal type="number" pos:line="1331" pos:column="28">0x80040206</lit:literal></expr></init></decl><op:operator pos:line="1331" pos:column="38">,</op:operator>
    <decl><name pos:line="1332" pos:column="5">E_ALL_THREADS_SUSPENDED__</name> <init pos:line="1332" pos:column="31">= <expr><lit:literal type="number" pos:line="1332" pos:column="33">0x80040207</lit:literal></expr></init></decl><op:operator pos:line="1332" pos:column="43">,</op:operator>
    <decl><name pos:line="1333" pos:column="5">E_LOAD_DLL_TL__</name> <init pos:line="1333" pos:column="21">= <expr><lit:literal type="number" pos:line="1333" pos:column="23">0x80040208</lit:literal></expr></init></decl><op:operator pos:line="1333" pos:column="33">,</op:operator>
    <decl><name pos:line="1334" pos:column="5">E_LOAD_DLL_SH__</name> <init pos:line="1334" pos:column="21">= <expr><lit:literal type="number" pos:line="1334" pos:column="23">0x80040209</lit:literal></expr></init></decl><op:operator pos:line="1334" pos:column="33">,</op:operator>
    <decl><name pos:line="1335" pos:column="5">E_LOAD_DLL_EM__</name> <init pos:line="1335" pos:column="21">= <expr><lit:literal type="number" pos:line="1335" pos:column="23">0x8004020A</lit:literal></expr></init></decl><op:operator pos:line="1335" pos:column="33">,</op:operator>
    <decl><name pos:line="1336" pos:column="5">E_LOAD_DLL_EE__</name> <init pos:line="1336" pos:column="21">= <expr><lit:literal type="number" pos:line="1336" pos:column="23">0x8004020B</lit:literal></expr></init></decl><op:operator pos:line="1336" pos:column="33">,</op:operator>
    <decl><name pos:line="1337" pos:column="5">E_LOAD_DLL_DM__</name> <init pos:line="1337" pos:column="21">= <expr><lit:literal type="number" pos:line="1337" pos:column="23">0x8004020C</lit:literal></expr></init></decl><op:operator pos:line="1337" pos:column="33">,</op:operator>
    <decl><name pos:line="1338" pos:column="5">E_LOAD_DLL_MD__</name> <init pos:line="1338" pos:column="21">= <expr><lit:literal type="number" pos:line="1338" pos:column="23">0x8004020D</lit:literal></expr></init></decl><op:operator pos:line="1338" pos:column="33">,</op:operator>
    <decl><name pos:line="1339" pos:column="5">E_IOREDIR_BADFILE__</name> <init pos:line="1339" pos:column="25">= <expr><lit:literal type="number" pos:line="1339" pos:column="27">0x8004020E</lit:literal></expr></init></decl><op:operator pos:line="1339" pos:column="37">,</op:operator>
    <decl><name pos:line="1340" pos:column="5">E_IOREDIR_BADSYNTAX__</name> <init pos:line="1340" pos:column="27">= <expr><lit:literal type="number" pos:line="1340" pos:column="29">0x8004020F</lit:literal></expr></init></decl><op:operator pos:line="1340" pos:column="39">,</op:operator>
    <decl><name pos:line="1341" pos:column="5">E_REMOTE_BADVERSION__</name> <init pos:line="1341" pos:column="27">= <expr><lit:literal type="number" pos:line="1341" pos:column="29">0x80040210</lit:literal></expr></init></decl><op:operator pos:line="1341" pos:column="39">,</op:operator>
    <decl><name pos:line="1342" pos:column="5">E_CRASHDUMP_UNSUPPORTED__</name> <init pos:line="1342" pos:column="31">= <expr><lit:literal type="number" pos:line="1342" pos:column="33">0x80040211</lit:literal></expr></init></decl><op:operator pos:line="1342" pos:column="43">,</op:operator>
    <decl><name pos:line="1343" pos:column="5">E_REMOTE_BAD_CLR_VERSION__</name> <init pos:line="1343" pos:column="32">= <expr><lit:literal type="number" pos:line="1343" pos:column="34">0x80040212</lit:literal></expr></init></decl><op:operator pos:line="1343" pos:column="44">,</op:operator>
    <decl><name pos:line="1344" pos:column="5">E_UNSUPPORTED_BINARY__</name> <init pos:line="1344" pos:column="28">= <expr><lit:literal type="number" pos:line="1344" pos:column="30">0x80040215</lit:literal></expr></init></decl><op:operator pos:line="1344" pos:column="40">,</op:operator>
    <decl><name pos:line="1345" pos:column="5">E_DEBUGGEE_BLOCKED__</name> <init pos:line="1345" pos:column="26">= <expr><lit:literal type="number" pos:line="1345" pos:column="28">0x80040216</lit:literal></expr></init></decl><op:operator pos:line="1345" pos:column="38">,</op:operator>
    <decl><name pos:line="1346" pos:column="5">E_REMOTE_NOUSERMSVCMON__</name> <init pos:line="1346" pos:column="30">= <expr><lit:literal type="number" pos:line="1346" pos:column="32">0x80040217</lit:literal></expr></init></decl><op:operator pos:line="1346" pos:column="42">,</op:operator>
    <decl><name pos:line="1347" pos:column="5">E_STEP_WIN9xSYSCODE__</name> <init pos:line="1347" pos:column="27">= <expr><lit:literal type="number" pos:line="1347" pos:column="29">0x80040218</lit:literal></expr></init></decl><op:operator pos:line="1347" pos:column="39">,</op:operator>
    <decl><name pos:line="1348" pos:column="5">E_INTEROP_ORPC_INIT__</name> <init pos:line="1348" pos:column="27">= <expr><lit:literal type="number" pos:line="1348" pos:column="29">0x80040219</lit:literal></expr></init></decl><op:operator pos:line="1348" pos:column="39">,</op:operator>
    <decl><name pos:line="1349" pos:column="5">E_CANNOT_DEBUG_WIN32__</name> <init pos:line="1349" pos:column="28">= <expr><lit:literal type="number" pos:line="1349" pos:column="30">0x8004021B</lit:literal></expr></init></decl><op:operator pos:line="1349" pos:column="40">,</op:operator>
    <decl><name pos:line="1350" pos:column="5">E_CANNOT_DEBUG_WIN64__</name> <init pos:line="1350" pos:column="28">= <expr><lit:literal type="number" pos:line="1350" pos:column="30">0x8004021C</lit:literal></expr></init></decl><op:operator pos:line="1350" pos:column="40">,</op:operator>
    <decl><name pos:line="1351" pos:column="5">E_MINIDUMP_READ_WIN9X__</name> <init pos:line="1351" pos:column="29">= <expr><lit:literal type="number" pos:line="1351" pos:column="31">0x8004021D</lit:literal></expr></init></decl><op:operator pos:line="1351" pos:column="41">,</op:operator>
    <decl><name pos:line="1352" pos:column="5">E_CROSS_TSSESSION_ATTACH__</name> <init pos:line="1352" pos:column="32">= <expr><lit:literal type="number" pos:line="1352" pos:column="34">0x8004021E</lit:literal></expr></init></decl><op:operator pos:line="1352" pos:column="44">,</op:operator>
    <decl><name pos:line="1353" pos:column="5">E_STEP_BP_SET_FAILED__</name> <init pos:line="1353" pos:column="28">= <expr><lit:literal type="number" pos:line="1353" pos:column="30">0x8004021F</lit:literal></expr></init></decl><op:operator pos:line="1353" pos:column="40">,</op:operator>
    <decl><name pos:line="1354" pos:column="5">E_LOAD_DLL_TL_INCORRECT_VERSION__</name> <init pos:line="1354" pos:column="39">= <expr><lit:literal type="number" pos:line="1354" pos:column="41">0x80040220</lit:literal></expr></init></decl><op:operator pos:line="1354" pos:column="51">,</op:operator>
    <decl><name pos:line="1355" pos:column="5">E_LOAD_DLL_DM_INCORRECT_VERSION__</name> <init pos:line="1355" pos:column="39">= <expr><lit:literal type="number" pos:line="1355" pos:column="41">0x80040221</lit:literal></expr></init></decl><op:operator pos:line="1355" pos:column="51">,</op:operator>
    <decl><name pos:line="1356" pos:column="5">E_REMOTE_NOMSVCMON_PIPE__</name> <init pos:line="1356" pos:column="31">= <expr><lit:literal type="number" pos:line="1356" pos:column="33">0x80040222</lit:literal></expr></init></decl><op:operator pos:line="1356" pos:column="43">,</op:operator>
    <decl><name pos:line="1357" pos:column="5">E_LOAD_DLL_DIA__</name> <init pos:line="1357" pos:column="22">= <expr><lit:literal type="number" pos:line="1357" pos:column="24">0x80040223</lit:literal></expr></init></decl><op:operator pos:line="1357" pos:column="34">,</op:operator>
    <decl><name pos:line="1358" pos:column="5">E_DUMP_CORRUPTED__</name> <init pos:line="1358" pos:column="24">= <expr><lit:literal type="number" pos:line="1358" pos:column="26">0x80040224</lit:literal></expr></init></decl><op:operator pos:line="1358" pos:column="36">,</op:operator>
    <decl><name pos:line="1359" pos:column="5">E_INTEROP_X64__</name> <init pos:line="1359" pos:column="21">= <expr><lit:literal type="number" pos:line="1359" pos:column="23">0x80040225</lit:literal></expr></init></decl><op:operator pos:line="1359" pos:column="33">,</op:operator>
    <decl><name pos:line="1360" pos:column="5">E_CRASHDUMP_DEPRECATED__</name> <init pos:line="1360" pos:column="30">= <expr><lit:literal type="number" pos:line="1360" pos:column="32">0x80040227</lit:literal></expr></init></decl><op:operator pos:line="1360" pos:column="42">,</op:operator>
    <decl><name pos:line="1361" pos:column="5">E_LAUNCH_MANAGEDONLYMINIDUMP_UNSUPPORTED__</name> <init pos:line="1361" pos:column="48">= <expr><lit:literal type="number" pos:line="1361" pos:column="50">0x80040228</lit:literal></expr></init></decl><op:operator pos:line="1361" pos:column="60">,</op:operator>
    <decl><name pos:line="1362" pos:column="5">E_LAUNCH_64BIT_MANAGEDMINIDUMP_UNSUPPORTED__</name> <init pos:line="1362" pos:column="50">= <expr><lit:literal type="number" pos:line="1362" pos:column="52">0x80040229</lit:literal></expr></init></decl><op:operator pos:line="1362" pos:column="62">,</op:operator>
    <decl><name pos:line="1363" pos:column="5">E_DEVICEBITS_NOT_SIGNED__</name> <init pos:line="1363" pos:column="31">= <expr><lit:literal type="number" pos:line="1363" pos:column="33">0x80040401</lit:literal></expr></init></decl><op:operator pos:line="1363" pos:column="43">,</op:operator>
    <decl><name pos:line="1364" pos:column="5">E_ATTACH_NOT_ENABLED__</name> <init pos:line="1364" pos:column="28">= <expr><lit:literal type="number" pos:line="1364" pos:column="30">0x80040402</lit:literal></expr></init></decl><op:operator pos:line="1364" pos:column="40">,</op:operator>
    <decl><name pos:line="1365" pos:column="5">E_REMOTE_DISCONNECT__</name> <init pos:line="1365" pos:column="27">= <expr><lit:literal type="number" pos:line="1365" pos:column="29">0x80040403</lit:literal></expr></init></decl><op:operator pos:line="1365" pos:column="39">,</op:operator>
    <decl><name pos:line="1366" pos:column="5">E_BREAK_ALL_FAILED__</name> <init pos:line="1366" pos:column="26">= <expr><lit:literal type="number" pos:line="1366" pos:column="28">0x80040404</lit:literal></expr></init></decl><op:operator pos:line="1366" pos:column="38">,</op:operator>
    <decl><name pos:line="1367" pos:column="5">E_DEVICE_ACCESS_DENIED_SELECT_YES__</name> <init pos:line="1367" pos:column="41">= <expr><lit:literal type="number" pos:line="1367" pos:column="43">0x80040405</lit:literal></expr></init></decl><op:operator pos:line="1367" pos:column="53">,</op:operator>
    <decl><name pos:line="1368" pos:column="5">E_DEVICE_ACCESS_DENIED__</name> <init pos:line="1368" pos:column="30">= <expr><lit:literal type="number" pos:line="1368" pos:column="32">0x80040406</lit:literal></expr></init></decl><op:operator pos:line="1368" pos:column="42">,</op:operator>
    <decl><name pos:line="1369" pos:column="5">E_DEVICE_CONNRESET__</name> <init pos:line="1369" pos:column="26">= <expr><lit:literal type="number" pos:line="1369" pos:column="28">0x80040407</lit:literal></expr></init></decl><op:operator pos:line="1369" pos:column="38">,</op:operator>
    <decl><name pos:line="1370" pos:column="5">E_BAD_NETCF_VERSION__</name> <init pos:line="1370" pos:column="27">= <expr><lit:literal type="number" pos:line="1370" pos:column="29">0x80040408</lit:literal></expr></init></decl><op:operator pos:line="1370" pos:column="39">,</op:operator>
    <decl><name pos:line="1371" pos:column="5">E_REFERENCE_NOT_VALID__</name> <init pos:line="1371" pos:column="29">= <expr><lit:literal type="number" pos:line="1371" pos:column="31">0x80040501</lit:literal></expr></init></decl><op:operator pos:line="1371" pos:column="41">,</op:operator>
    <decl><name pos:line="1372" pos:column="5">E_PROPERTY_NOT_VALID__</name> <init pos:line="1372" pos:column="28">= <expr><lit:literal type="number" pos:line="1372" pos:column="30">0x80040511</lit:literal></expr></init></decl><op:operator pos:line="1372" pos:column="40">,</op:operator>
    <decl><name pos:line="1373" pos:column="5">E_SETVALUE_VALUE_CANNOT_BE_SET__</name> <init pos:line="1373" pos:column="38">= <expr><lit:literal type="number" pos:line="1373" pos:column="40">0x80040521</lit:literal></expr></init></decl><op:operator pos:line="1373" pos:column="50">,</op:operator>
    <decl><name pos:line="1374" pos:column="5">E_SETVALUE_VALUE_IS_READONLY__</name> <init pos:line="1374" pos:column="36">= <expr><lit:literal type="number" pos:line="1374" pos:column="38">0x80040522</lit:literal></expr></init></decl><op:operator pos:line="1374" pos:column="48">,</op:operator>
    <decl><name pos:line="1375" pos:column="5">E_SETVALUEASREFERENCE_NOTSUPPORTED__</name> <init pos:line="1375" pos:column="42">= <expr><lit:literal type="number" pos:line="1375" pos:column="44">0x80040523</lit:literal></expr></init></decl><op:operator pos:line="1375" pos:column="54">,</op:operator>
    <decl><name pos:line="1376" pos:column="5">E_CANNOT_GET_UNMANAGED_MEMORY_CONTEXT__</name> <init pos:line="1376" pos:column="45">= <expr><lit:literal type="number" pos:line="1376" pos:column="47">0x80040561</lit:literal></expr></init></decl><op:operator pos:line="1376" pos:column="57">,</op:operator>
    <decl><name pos:line="1377" pos:column="5">E_GETREFERENCE_NO_REFERENCE__</name> <init pos:line="1377" pos:column="35">= <expr><lit:literal type="number" pos:line="1377" pos:column="37">0x80040581</lit:literal></expr></init></decl><op:operator pos:line="1377" pos:column="47">,</op:operator>
    <decl><name pos:line="1378" pos:column="5">E_CODE_CONTEXT_OUT_OF_SCOPE__</name> <init pos:line="1378" pos:column="35">= <expr><lit:literal type="number" pos:line="1378" pos:column="37">0x800405A1</lit:literal></expr></init></decl><op:operator pos:line="1378" pos:column="47">,</op:operator>
    <decl><name pos:line="1379" pos:column="5">E_INVALID_SESSIONID__</name> <init pos:line="1379" pos:column="27">= <expr><lit:literal type="number" pos:line="1379" pos:column="29">0x800405A2</lit:literal></expr></init></decl><op:operator pos:line="1379" pos:column="39">,</op:operator>
    <decl><name pos:line="1380" pos:column="5">E_SERVER_UNAVAILABLE_ON_CALLBACK__</name> <init pos:line="1380" pos:column="40">= <expr><lit:literal type="number" pos:line="1380" pos:column="42">0x800405A3</lit:literal></expr></init></decl><op:operator pos:line="1380" pos:column="52">,</op:operator>
    <decl><name pos:line="1381" pos:column="5">E_ACCESS_DENIED_ON_CALLBACK__</name> <init pos:line="1381" pos:column="35">= <expr><lit:literal type="number" pos:line="1381" pos:column="37">0x800405A4</lit:literal></expr></init></decl><op:operator pos:line="1381" pos:column="47">,</op:operator>
    <decl><name pos:line="1382" pos:column="5">E_UNKNOWN_AUTHN_SERVICE_ON_CALLBACK__</name> <init pos:line="1382" pos:column="43">= <expr><lit:literal type="number" pos:line="1382" pos:column="45">0x800405A5</lit:literal></expr></init></decl><op:operator pos:line="1382" pos:column="55">,</op:operator>
    <decl><name pos:line="1383" pos:column="5">E_NO_SESSION_AVAILABLE__</name> <init pos:line="1383" pos:column="30">= <expr><lit:literal type="number" pos:line="1383" pos:column="32">0x800405A6</lit:literal></expr></init></decl><op:operator pos:line="1383" pos:column="42">,</op:operator>
    <decl><name pos:line="1384" pos:column="5">E_CLIENT_NOT_LOGGED_ON__</name> <init pos:line="1384" pos:column="30">= <expr><lit:literal type="number" pos:line="1384" pos:column="32">0x800405A7</lit:literal></expr></init></decl><op:operator pos:line="1384" pos:column="42">,</op:operator>
    <decl><name pos:line="1385" pos:column="5">E_OTHER_USERS_SESSION__</name> <init pos:line="1385" pos:column="29">= <expr><lit:literal type="number" pos:line="1385" pos:column="31">0x800405A8</lit:literal></expr></init></decl><op:operator pos:line="1385" pos:column="41">,</op:operator>
    <decl><name pos:line="1386" pos:column="5">E_USER_LEVEL_ACCESS_CONTROL_REQUIRED__</name> <init pos:line="1386" pos:column="44">= <expr><lit:literal type="number" pos:line="1386" pos:column="46">0x800405A9</lit:literal></expr></init></decl><op:operator pos:line="1386" pos:column="56">,</op:operator>
    <decl><name pos:line="1387" pos:column="5">E_KERBEROS_ACCESS_DENIED_ON_CALLBACK__</name> <init pos:line="1387" pos:column="44">= <expr><lit:literal type="number" pos:line="1387" pos:column="46">0x800405AA</lit:literal></expr></init></decl><op:operator pos:line="1387" pos:column="56">,</op:operator>
    <decl><name pos:line="1388" pos:column="5">E_DNS_FAILURE_ON_CALLBACK__</name> <init pos:line="1388" pos:column="33">= <expr><lit:literal type="number" pos:line="1388" pos:column="35">0x800405AB</lit:literal></expr></init></decl><op:operator pos:line="1388" pos:column="45">,</op:operator>
    <decl><name pos:line="1389" pos:column="5">E_SCRIPT_CLR_EE_DISABLED__</name> <init pos:line="1389" pos:column="32">= <expr><lit:literal type="number" pos:line="1389" pos:column="34">0x800405B0</lit:literal></expr></init></decl><op:operator pos:line="1389" pos:column="44">,</op:operator>
    <decl><name pos:line="1390" pos:column="5">E_HTTP_SERVERERROR__</name> <init pos:line="1390" pos:column="26">= <expr><lit:literal type="number" pos:line="1390" pos:column="28">0x80040700</lit:literal></expr></init></decl><op:operator pos:line="1390" pos:column="38">,</op:operator>
    <decl><name pos:line="1391" pos:column="5">E_HTTP_UNAUTHORIZED__</name> <init pos:line="1391" pos:column="27">= <expr><lit:literal type="number" pos:line="1391" pos:column="29">0x80040701</lit:literal></expr></init></decl><op:operator pos:line="1391" pos:column="39">,</op:operator>
    <decl><name pos:line="1392" pos:column="5">E_HTTP_SENDREQUEST_FAILED__</name> <init pos:line="1392" pos:column="33">= <expr><lit:literal type="number" pos:line="1392" pos:column="35">0x80040702</lit:literal></expr></init></decl><op:operator pos:line="1392" pos:column="45">,</op:operator>
    <decl><name pos:line="1393" pos:column="5">E_HTTP_FORBIDDEN__</name> <init pos:line="1393" pos:column="24">= <expr><lit:literal type="number" pos:line="1393" pos:column="26">0x80040703</lit:literal></expr></init></decl><op:operator pos:line="1393" pos:column="36">,</op:operator>
    <decl><name pos:line="1394" pos:column="5">E_HTTP_NOT_SUPPORTED__</name> <init pos:line="1394" pos:column="28">= <expr><lit:literal type="number" pos:line="1394" pos:column="30">0x80040704</lit:literal></expr></init></decl><op:operator pos:line="1394" pos:column="40">,</op:operator>
    <decl><name pos:line="1395" pos:column="5">E_HTTP_NO_CONTENT__</name> <init pos:line="1395" pos:column="25">= <expr><lit:literal type="number" pos:line="1395" pos:column="27">0x80040705</lit:literal></expr></init></decl><op:operator pos:line="1395" pos:column="37">,</op:operator>
    <decl><name pos:line="1396" pos:column="5">E_HTTP_NOT_FOUND__</name> <init pos:line="1396" pos:column="24">= <expr><lit:literal type="number" pos:line="1396" pos:column="26">0x80040706</lit:literal></expr></init></decl><op:operator pos:line="1396" pos:column="36">,</op:operator>
    <decl><name pos:line="1397" pos:column="5">E_HTTP_BAD_REQUEST__</name> <init pos:line="1397" pos:column="26">= <expr><lit:literal type="number" pos:line="1397" pos:column="28">0x80040707</lit:literal></expr></init></decl><op:operator pos:line="1397" pos:column="38">,</op:operator>
    <decl><name pos:line="1398" pos:column="5">E_HTTP_ACCESS_DENIED__</name> <init pos:line="1398" pos:column="28">= <expr><lit:literal type="number" pos:line="1398" pos:column="30">0x80040708</lit:literal></expr></init></decl><op:operator pos:line="1398" pos:column="40">,</op:operator>
    <decl><name pos:line="1399" pos:column="5">E_HTTP_CONNECT_FAILED__</name> <init pos:line="1399" pos:column="29">= <expr><lit:literal type="number" pos:line="1399" pos:column="31">0x80040709</lit:literal></expr></init></decl><op:operator pos:line="1399" pos:column="41">,</op:operator>
    <decl><name pos:line="1400" pos:column="5">E_HTTP_EXCEPTION__</name> <init pos:line="1400" pos:column="24">= <expr><lit:literal type="number" pos:line="1400" pos:column="26">0x8004070A</lit:literal></expr></init></decl><op:operator pos:line="1400" pos:column="36">,</op:operator>
    <decl><name pos:line="1401" pos:column="5">E_HTTP_TIMEOUT__</name> <init pos:line="1401" pos:column="22">= <expr><lit:literal type="number" pos:line="1401" pos:column="24">0x8004070B</lit:literal></expr></init></decl><op:operator pos:line="1401" pos:column="34">,</op:operator>
    <decl><name pos:line="1402" pos:column="5">E_HTTP_SITE_NOT_FOUND__</name> <init pos:line="1402" pos:column="29">= <expr><lit:literal type="number" pos:line="1402" pos:column="31">0x8004070C</lit:literal></expr></init></decl><op:operator pos:line="1402" pos:column="41">,</op:operator>
    <decl><name pos:line="1403" pos:column="5">E_HTTP_APP_NOT_FOUND__</name> <init pos:line="1403" pos:column="28">= <expr><lit:literal type="number" pos:line="1403" pos:column="30">0x8004070D</lit:literal></expr></init></decl><op:operator pos:line="1403" pos:column="40">,</op:operator>
    <decl><name pos:line="1404" pos:column="5">E_HTTP_MANAGEMENT_API_MISSING__</name> <init pos:line="1404" pos:column="37">= <expr><lit:literal type="number" pos:line="1404" pos:column="39">0x8004070E</lit:literal></expr></init></decl><op:operator pos:line="1404" pos:column="49">,</op:operator>
    <decl><name pos:line="1405" pos:column="5">E_HTTP_NO_PROCESS__</name> <init pos:line="1405" pos:column="25">= <expr><lit:literal type="number" pos:line="1405" pos:column="27">0x8004070F</lit:literal></expr></init></decl><op:operator pos:line="1405" pos:column="37">,</op:operator>
    <decl><name pos:line="1406" pos:column="5">E_64BIT_COMPONENTS_NOT_INSTALLED__</name> <init pos:line="1406" pos:column="40">= <expr><lit:literal type="number" pos:line="1406" pos:column="42">0x80040750</lit:literal></expr></init></decl><op:operator pos:line="1406" pos:column="52">,</op:operator>
    <decl><name pos:line="1407" pos:column="5">E_UNMARSHAL_SERVER_FAILED__</name> <init pos:line="1407" pos:column="33">= <expr><lit:literal type="number" pos:line="1407" pos:column="35">0x80040751</lit:literal></expr></init></decl><op:operator pos:line="1407" pos:column="45">,</op:operator>
    <decl><name pos:line="1408" pos:column="5">E_UNMARSHAL_CALLBACK_FAILED__</name> <init pos:line="1408" pos:column="35">= <expr><lit:literal type="number" pos:line="1408" pos:column="37">0x80040752</lit:literal></expr></init></decl><op:operator pos:line="1408" pos:column="47">,</op:operator>
    <decl><name pos:line="1409" pos:column="5">E_RPC_REQUIRES_AUTHENTICATION__</name> <init pos:line="1409" pos:column="37">= <expr><lit:literal type="number" pos:line="1409" pos:column="39">0x80040755</lit:literal></expr></init></decl><op:operator pos:line="1409" pos:column="49">,</op:operator>
    <decl><name pos:line="1410" pos:column="5">E_LOGON_FAILURE_ON_CALLBACK__</name> <init pos:line="1410" pos:column="35">= <expr><lit:literal type="number" pos:line="1410" pos:column="37">0x80040756</lit:literal></expr></init></decl><op:operator pos:line="1410" pos:column="47">,</op:operator>
    <decl><name pos:line="1411" pos:column="5">E_REMOTE_SERVER_UNAVAILABLE__</name> <init pos:line="1411" pos:column="35">= <expr><lit:literal type="number" pos:line="1411" pos:column="37">0x80040757</lit:literal></expr></init></decl><op:operator pos:line="1411" pos:column="47">,</op:operator>
    <decl><name pos:line="1412" pos:column="5">E_FIREWALL_USER_CANCELED__</name> <init pos:line="1412" pos:column="32">= <expr><lit:literal type="number" pos:line="1412" pos:column="34">0x80040758</lit:literal></expr></init></decl><op:operator pos:line="1412" pos:column="44">,</op:operator>
    <decl><name pos:line="1413" pos:column="5">E_REMOTE_CREDENTIALS_PROHIBITED__</name> <init pos:line="1413" pos:column="39">= <expr><lit:literal type="number" pos:line="1413" pos:column="41">0x80040759</lit:literal></expr></init></decl><op:operator pos:line="1413" pos:column="51">,</op:operator>
    <decl><name pos:line="1414" pos:column="5">E_FIREWALL_NO_EXCEPTIONS__</name> <init pos:line="1414" pos:column="32">= <expr><lit:literal type="number" pos:line="1414" pos:column="34">0x8004075A</lit:literal></expr></init></decl><op:operator pos:line="1414" pos:column="44">,</op:operator>
    <decl><name pos:line="1415" pos:column="5">E_FIREWALL_CANNOT_OPEN_APPLICATION__</name> <init pos:line="1415" pos:column="42">= <expr><lit:literal type="number" pos:line="1415" pos:column="44">0x8004075B</lit:literal></expr></init></decl><op:operator pos:line="1415" pos:column="54">,</op:operator>
    <decl><name pos:line="1416" pos:column="5">E_FIREWALL_CANNOT_OPEN_PORT__</name> <init pos:line="1416" pos:column="35">= <expr><lit:literal type="number" pos:line="1416" pos:column="37">0x8004075C</lit:literal></expr></init></decl><op:operator pos:line="1416" pos:column="47">,</op:operator>
    <decl><name pos:line="1417" pos:column="5">E_FIREWALL_CANNOT_OPEN_FILE_SHARING__</name> <init pos:line="1417" pos:column="43">= <expr><lit:literal type="number" pos:line="1417" pos:column="45">0x8004075D</lit:literal></expr></init></decl><op:operator pos:line="1417" pos:column="55">,</op:operator>
    <decl><name pos:line="1418" pos:column="5">E_REMOTE_DEBUGGING_UNSUPPORTED__</name> <init pos:line="1418" pos:column="38">= <expr><lit:literal type="number" pos:line="1418" pos:column="40">0x8004075E</lit:literal></expr></init></decl><op:operator pos:line="1418" pos:column="50">,</op:operator>
    <decl><name pos:line="1419" pos:column="5">E_REMOTE_BAD_MSDBG2__</name> <init pos:line="1419" pos:column="27">= <expr><lit:literal type="number" pos:line="1419" pos:column="29">0x8004075F</lit:literal></expr></init></decl><op:operator pos:line="1419" pos:column="39">,</op:operator>
    <decl><name pos:line="1420" pos:column="5">E_ATTACH_USER_CANCELED__</name> <init pos:line="1420" pos:column="30">= <expr><lit:literal type="number" pos:line="1420" pos:column="32">0x80040760</lit:literal></expr></init></decl><op:operator pos:line="1420" pos:column="42">,</op:operator>
    <decl><name pos:line="1421" pos:column="5">E_REMOTE_PACKET_TOO_BIG__</name> <init pos:line="1421" pos:column="31">= <expr><lit:literal type="number" pos:line="1421" pos:column="33">0x80040761</lit:literal></expr></init></decl><op:operator pos:line="1421" pos:column="43">,</op:operator>
    <decl><name pos:line="1422" pos:column="5">E_UNSUPPORTED_FUTURE_CLR_VERSION__</name> <init pos:line="1422" pos:column="40">= <expr><lit:literal type="number" pos:line="1422" pos:column="42">0x80040762</lit:literal></expr></init></decl><op:operator pos:line="1422" pos:column="52">,</op:operator>
    <decl><name pos:line="1423" pos:column="5">E_UNSUPPORTED_CLR_V1__</name> <init pos:line="1423" pos:column="28">= <expr><lit:literal type="number" pos:line="1423" pos:column="30">0x80040763</lit:literal></expr></init></decl><op:operator pos:line="1423" pos:column="40">,</op:operator>
    <decl><name pos:line="1424" pos:column="5">E_INTEROP_IA64__</name> <init pos:line="1424" pos:column="22">= <expr><lit:literal type="number" pos:line="1424" pos:column="24">0x80040764</lit:literal></expr></init></decl><op:operator pos:line="1424" pos:column="34">,</op:operator>
    <decl><name pos:line="1425" pos:column="5">E_HTTP_GENERAL__</name> <init pos:line="1425" pos:column="22">= <expr><lit:literal type="number" pos:line="1425" pos:column="24">0x80040765</lit:literal></expr></init></decl><op:operator pos:line="1425" pos:column="34">,</op:operator>
    <decl><name pos:line="1426" pos:column="5">E_FUNCTION_NOT_JITTED__</name> <init pos:line="1426" pos:column="29">= <expr><lit:literal type="number" pos:line="1426" pos:column="31">0x80040800</lit:literal></expr></init></decl><op:operator pos:line="1426" pos:column="41">,</op:operator>
    <decl><name pos:line="1427" pos:column="5">E_NO_CODE_CONTEXT__</name> <init pos:line="1427" pos:column="25">= <expr><lit:literal type="number" pos:line="1427" pos:column="27">0x80040801</lit:literal></expr></init></decl><op:operator pos:line="1427" pos:column="37">,</op:operator>
    <decl><name pos:line="1428" pos:column="5">E_BAD_CLR_DIASYMREADER__</name> <init pos:line="1428" pos:column="30">= <expr><lit:literal type="number" pos:line="1428" pos:column="32">0x80040802</lit:literal></expr></init></decl><op:operator pos:line="1428" pos:column="42">,</op:operator>
    <decl><name pos:line="1429" pos:column="5">E_CLR_SHIM_ERROR__</name> <init pos:line="1429" pos:column="24">= <expr><lit:literal type="number" pos:line="1429" pos:column="26">0x80040803</lit:literal></expr></init></decl><op:operator pos:line="1429" pos:column="36">,</op:operator>
    <decl><name pos:line="1430" pos:column="5">E_AUTOATTACH_WEBSERVER_NOT_FOUND__</name> <init pos:line="1430" pos:column="40">= <expr><lit:literal type="number" pos:line="1430" pos:column="42">0x80040901</lit:literal></expr></init></decl><op:operator pos:line="1430" pos:column="52">,</op:operator>
    <decl><name pos:line="1431" pos:column="5">E_DBGEXTENSION_NOT_FOUND__</name> <init pos:line="1431" pos:column="32">= <expr><lit:literal type="number" pos:line="1431" pos:column="34">0x80040910</lit:literal></expr></init></decl><op:operator pos:line="1431" pos:column="44">,</op:operator>
    <decl><name pos:line="1432" pos:column="5">E_DBGEXTENSION_FUNCTION_NOT_FOUND__</name> <init pos:line="1432" pos:column="41">= <expr><lit:literal type="number" pos:line="1432" pos:column="43">0x80040911</lit:literal></expr></init></decl><op:operator pos:line="1432" pos:column="53">,</op:operator>
    <decl><name pos:line="1433" pos:column="5">E_DBGEXTENSION_FAULTED__</name> <init pos:line="1433" pos:column="30">= <expr><lit:literal type="number" pos:line="1433" pos:column="32">0x80040912</lit:literal></expr></init></decl><op:operator pos:line="1433" pos:column="42">,</op:operator>
    <decl><name pos:line="1434" pos:column="5">E_DBGEXTENSION_RESULT_INVALID__</name> <init pos:line="1434" pos:column="37">= <expr><lit:literal type="number" pos:line="1434" pos:column="39">0x80040913</lit:literal></expr></init></decl><op:operator pos:line="1434" pos:column="49">,</op:operator>
    <decl><name pos:line="1435" pos:column="5">E_PROGRAM_IN_RUNMODE__</name> <init pos:line="1435" pos:column="28">= <expr><lit:literal type="number" pos:line="1435" pos:column="30">0x80040914</lit:literal></expr></init></decl><op:operator pos:line="1435" pos:column="40">,</op:operator>
    <decl><name pos:line="1436" pos:column="5">E_CAUSALITY_NO_SERVER_RESPONSE__</name> <init pos:line="1436" pos:column="38">= <expr><lit:literal type="number" pos:line="1436" pos:column="40">0x80040920</lit:literal></expr></init></decl><op:operator pos:line="1436" pos:column="50">,</op:operator>
    <decl><name pos:line="1437" pos:column="5">E_CAUSALITY_REMOTE_NOT_REGISTERED__</name> <init pos:line="1437" pos:column="41">= <expr><lit:literal type="number" pos:line="1437" pos:column="43">0x80040921</lit:literal></expr></init></decl><op:operator pos:line="1437" pos:column="53">,</op:operator>
    <decl><name pos:line="1438" pos:column="5">E_CAUSALITY_BREAKPOINT_NOT_HIT__</name> <init pos:line="1438" pos:column="38">= <expr><lit:literal type="number" pos:line="1438" pos:column="40">0x80040922</lit:literal></expr></init></decl><op:operator pos:line="1438" pos:column="50">,</op:operator>
    <decl><name pos:line="1439" pos:column="5">E_CAUSALITY_BREAKPOINT_BIND_ERROR__</name> <init pos:line="1439" pos:column="41">= <expr><lit:literal type="number" pos:line="1439" pos:column="43">0x80040923</lit:literal></expr></init></decl><op:operator pos:line="1439" pos:column="53">,</op:operator>
    <decl><name pos:line="1440" pos:column="5">E_CAUSALITY_PROJECT_DISABLED__</name> <init pos:line="1440" pos:column="36">= <expr><lit:literal type="number" pos:line="1440" pos:column="38">0x80040924</lit:literal></expr></init></decl><op:operator pos:line="1440" pos:column="48">,</op:operator>
    <decl><name pos:line="1441" pos:column="5">E_NO_ATTACH_WHILE_DDD__</name> <init pos:line="1441" pos:column="29">= <expr><lit:literal type="number" pos:line="1441" pos:column="31">0x80040A00</lit:literal></expr></init></decl><op:operator pos:line="1441" pos:column="41">,</op:operator>
    <decl><name pos:line="1442" pos:column="5">E_SQLLE_ACCESSDENIED__</name> <init pos:line="1442" pos:column="28">= <expr><lit:literal type="number" pos:line="1442" pos:column="30">0x80040A01</lit:literal></expr></init></decl><op:operator pos:line="1442" pos:column="40">,</op:operator>
    <decl><name pos:line="1443" pos:column="5">E_SQL_SP_ENABLE_PERMISSION_DENIED__</name> <init pos:line="1443" pos:column="41">= <expr><lit:literal type="number" pos:line="1443" pos:column="43">0x80040A02</lit:literal></expr></init></decl><op:operator pos:line="1443" pos:column="53">,</op:operator>
    <decl><name pos:line="1444" pos:column="5">E_SQL_DEBUGGING_NOT_ENABLED_ON_SERVER__</name> <init pos:line="1444" pos:column="45">= <expr><lit:literal type="number" pos:line="1444" pos:column="47">0x80040A03</lit:literal></expr></init></decl><op:operator pos:line="1444" pos:column="57">,</op:operator>
    <decl><name pos:line="1445" pos:column="5">E_SQL_CANT_FIND_SSDEBUGPS_ON_CLIENT__</name> <init pos:line="1445" pos:column="43">= <expr><lit:literal type="number" pos:line="1445" pos:column="45">0x80040A04</lit:literal></expr></init></decl><op:operator pos:line="1445" pos:column="55">,</op:operator>
    <decl><name pos:line="1446" pos:column="5">E_SQL_EXECUTED_BUT_NOT_DEBUGGED__</name> <init pos:line="1446" pos:column="39">= <expr><lit:literal type="number" pos:line="1446" pos:column="41">0x80040A05</lit:literal></expr></init></decl><op:operator pos:line="1446" pos:column="51">,</op:operator>
    <decl><name pos:line="1447" pos:column="5">E_SQL_VDT_INIT_RETURNED_SQL_ERROR__</name> <init pos:line="1447" pos:column="41">= <expr><lit:literal type="number" pos:line="1447" pos:column="43">0x80040A06</lit:literal></expr></init></decl><op:operator pos:line="1447" pos:column="53">,</op:operator>
    <decl><name pos:line="1448" pos:column="5">E_ATTACH_FAILED_ABORT_SILENTLY__</name> <init pos:line="1448" pos:column="38">= <expr><lit:literal type="number" pos:line="1448" pos:column="40">0x80040A07</lit:literal></expr></init></decl><op:operator pos:line="1448" pos:column="50">,</op:operator>
    <decl><name pos:line="1449" pos:column="5">E_SQL_REGISTER_FAILED__</name> <init pos:line="1449" pos:column="29">= <expr><lit:literal type="number" pos:line="1449" pos:column="31">0x80040A08</lit:literal></expr></init></decl><op:operator pos:line="1449" pos:column="41">,</op:operator>
    <decl><name pos:line="1450" pos:column="5">E_DE_NOT_SUPPORTED_PRE_8_0__</name> <init pos:line="1450" pos:column="34">= <expr><lit:literal type="number" pos:line="1450" pos:column="36">0x80040B00</lit:literal></expr></init></decl><op:operator pos:line="1450" pos:column="46">,</op:operator>
    <decl><name pos:line="1451" pos:column="5">E_PROGRAM_DESTROY_PENDING__</name> <init pos:line="1451" pos:column="33">= <expr><lit:literal type="number" pos:line="1451" pos:column="35">0x80040B01</lit:literal></expr></init></decl><op:operator pos:line="1451" pos:column="45">,</op:operator>
    <decl><name pos:line="1452" pos:column="5">E_MANAGED_FEATURE_NOTSUPPORTED__</name> <init pos:line="1452" pos:column="38">= <expr><lit:literal type="number" pos:line="1452" pos:column="40">0x80040BAD</lit:literal></expr></init></decl><op:operator pos:line="1452" pos:column="50">,</op:operator>
    <decl><name pos:line="1453" pos:column="5">E_OS_PERSONAL__</name> <init pos:line="1453" pos:column="21">= <expr><lit:literal type="number" pos:line="1453" pos:column="23">0x80040C00</lit:literal></expr></init></decl><op:operator pos:line="1453" pos:column="33">,</op:operator>
    <decl><name pos:line="1454" pos:column="5">E_SOURCE_SERVER_DISABLE_PARTIAL_TRUST__</name> <init pos:line="1454" pos:column="45">= <expr><lit:literal type="number" pos:line="1454" pos:column="47">0x80040C01</lit:literal></expr></init></decl><op:operator pos:line="1454" pos:column="57">,</op:operator>
    <decl><name pos:line="1455" pos:column="5">E_TRACE_DETACH_UNSUPPORTED__</name> <init pos:line="1455" pos:column="34">= <expr><lit:literal type="number" pos:line="1455" pos:column="36">0x80040D00</lit:literal></expr></init></decl><op:operator pos:line="1455" pos:column="46">,</op:operator>
    <decl><name pos:line="1456" pos:column="5">E_THREAD_NOT_FOUND__</name> <init pos:line="1456" pos:column="26">= <expr><lit:literal type="number" pos:line="1456" pos:column="28">0x80040D01</lit:literal></expr></init></decl><op:operator pos:line="1456" pos:column="38">,</op:operator>
    <decl><name pos:line="1457" pos:column="5">E_CANNOT_AUTOATTACH_TO_SQLSERVER__</name> <init pos:line="1457" pos:column="40">= <expr><lit:literal type="number" pos:line="1457" pos:column="42">0x80040D02</lit:literal></expr></init></decl><op:operator pos:line="1457" pos:column="52">,</op:operator>
    <decl><name pos:line="1458" pos:column="5">E_OBJECT_OUT_OF_SYNC__</name> <init pos:line="1458" pos:column="28">= <expr><lit:literal type="number" pos:line="1458" pos:column="30">0x80040D03</lit:literal></expr></init></decl>
}</block>;</enum>
<cpp:define pos:line="1460" pos:column="1">#<cpp:directive pos:line="1460" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1460" pos:column="9">S_ATTACH_DEFERRED</name></cpp:macro> <cpp:value pos:line="1460" pos:column="27">_HRESULT_TYPEDEF_(S_ATTACH_DEFERRED__)</cpp:value></cpp:define>
<cpp:define pos:line="1461" pos:column="1">#<cpp:directive pos:line="1461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1461" pos:column="9">S_ATTACH_IGNORED</name></cpp:macro> <cpp:value pos:line="1461" pos:column="26">_HRESULT_TYPEDEF_(S_ATTACH_IGNORED__)</cpp:value></cpp:define>
<cpp:define pos:line="1462" pos:column="1">#<cpp:directive pos:line="1462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1462" pos:column="9">S_JIT_USERCANCELLED</name></cpp:macro> <cpp:value pos:line="1462" pos:column="29">_HRESULT_TYPEDEF_(S_JIT_USERCANCELLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1463" pos:column="1">#<cpp:directive pos:line="1463" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1463" pos:column="9">S_JIT_NOT_REG_FOR_ENGINE</name></cpp:macro> <cpp:value pos:line="1463" pos:column="34">_HRESULT_TYPEDEF_(S_JIT_NOT_REG_FOR_ENGINE__)</cpp:value></cpp:define>
<cpp:define pos:line="1464" pos:column="1">#<cpp:directive pos:line="1464" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1464" pos:column="9">S_TERMINATE_PROCESSES_STILL_DETACHING</name></cpp:macro> <cpp:value pos:line="1464" pos:column="47">_HRESULT_TYPEDEF_(S_TERMINATE_PROCESSES_STILL_DETACHING__)</cpp:value></cpp:define>
<cpp:define pos:line="1465" pos:column="1">#<cpp:directive pos:line="1465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1465" pos:column="9">S_TERMINATE_PROCESSES_STILL_TERMINATING</name></cpp:macro> <cpp:value pos:line="1465" pos:column="49">_HRESULT_TYPEDEF_(S_TERMINATE_PROCESSES_STILL_TERMINATING__)</cpp:value></cpp:define>
<cpp:define pos:line="1466" pos:column="1">#<cpp:directive pos:line="1466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1466" pos:column="9">S_ENC_SETIP_REQUIRES_CONTINUE</name></cpp:macro> <cpp:value pos:line="1466" pos:column="39">_HRESULT_TYPEDEF_(S_ENC_SETIP_REQUIRES_CONTINUE__)</cpp:value></cpp:define>
<cpp:define pos:line="1467" pos:column="1">#<cpp:directive pos:line="1467" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1467" pos:column="9">S_WEBDBG_UNABLE_TO_DIAGNOSE</name></cpp:macro> <cpp:value pos:line="1467" pos:column="37">_HRESULT_TYPEDEF_(S_WEBDBG_UNABLE_TO_DIAGNOSE__)</cpp:value></cpp:define>
<cpp:define pos:line="1468" pos:column="1">#<cpp:directive pos:line="1468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1468" pos:column="9">S_WEBDBG_DEBUG_VERB_BLOCKED</name></cpp:macro> <cpp:value pos:line="1468" pos:column="37">_HRESULT_TYPEDEF_(S_WEBDBG_DEBUG_VERB_BLOCKED__)</cpp:value></cpp:define>
<cpp:define pos:line="1469" pos:column="1">#<cpp:directive pos:line="1469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1469" pos:column="9">S_ASP_USER_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1469" pos:column="34">_HRESULT_TYPEDEF_(S_ASP_USER_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1470" pos:column="1">#<cpp:directive pos:line="1470" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1470" pos:column="9">S_JMC_LIMITED_SUPPORT</name></cpp:macro> <cpp:value pos:line="1470" pos:column="31">_HRESULT_TYPEDEF_(S_JMC_LIMITED_SUPPORT__)</cpp:value></cpp:define>
<cpp:define pos:line="1471" pos:column="1">#<cpp:directive pos:line="1471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1471" pos:column="9">S_CANNOT_REMAP_IN_EXCEPTION</name></cpp:macro> <cpp:value pos:line="1471" pos:column="37">_HRESULT_TYPEDEF_(S_CANNOT_REMAP_IN_EXCEPTION__)</cpp:value></cpp:define>
<cpp:define pos:line="1472" pos:column="1">#<cpp:directive pos:line="1472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1472" pos:column="9">S_CANNOT_REMAP_NOT_AT_SEQUENCE_POINT</name></cpp:macro> <cpp:value pos:line="1472" pos:column="46">_HRESULT_TYPEDEF_(S_CANNOT_REMAP_NOT_AT_SEQUENCE_POINT__)</cpp:value></cpp:define>
<cpp:define pos:line="1473" pos:column="1">#<cpp:directive pos:line="1473" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1473" pos:column="9">S_GETPARENT_NO_PARENT</name></cpp:macro> <cpp:value pos:line="1473" pos:column="31">_HRESULT_TYPEDEF_(S_GETPARENT_NO_PARENT__)</cpp:value></cpp:define>
<cpp:define pos:line="1474" pos:column="1">#<cpp:directive pos:line="1474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1474" pos:column="9">S_GETDERIVEDMOST_NO_DERIVED_MOST</name></cpp:macro> <cpp:value pos:line="1474" pos:column="42">_HRESULT_TYPEDEF_(S_GETDERIVEDMOST_NO_DERIVED_MOST__)</cpp:value></cpp:define>
<cpp:define pos:line="1475" pos:column="1">#<cpp:directive pos:line="1475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1475" pos:column="9">S_GETMEMORYBYTES_NO_MEMORY_BYTES</name></cpp:macro> <cpp:value pos:line="1475" pos:column="42">_HRESULT_TYPEDEF_(S_GETMEMORYBYTES_NO_MEMORY_BYTES__)</cpp:value></cpp:define>
<cpp:define pos:line="1476" pos:column="1">#<cpp:directive pos:line="1476" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1476" pos:column="9">S_GETMEMORYCONTEXT_NO_MEMORY_CONTEXT</name></cpp:macro> <cpp:value pos:line="1476" pos:column="46">_HRESULT_TYPEDEF_(S_GETMEMORYCONTEXT_NO_MEMORY_CONTEXT__)</cpp:value></cpp:define>
<cpp:define pos:line="1477" pos:column="1">#<cpp:directive pos:line="1477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1477" pos:column="9">S_GETSIZE_NO_SIZE</name></cpp:macro> <cpp:value pos:line="1477" pos:column="27">_HRESULT_TYPEDEF_(S_GETSIZE_NO_SIZE__)</cpp:value></cpp:define>
<cpp:define pos:line="1478" pos:column="1">#<cpp:directive pos:line="1478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1478" pos:column="9">S_GETEXTENDEDINFO_NO_EXTENDEDINFO</name></cpp:macro> <cpp:value pos:line="1478" pos:column="43">_HRESULT_TYPEDEF_(S_GETEXTENDEDINFO_NO_EXTENDEDINFO__)</cpp:value></cpp:define>
<cpp:define pos:line="1479" pos:column="1">#<cpp:directive pos:line="1479" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1479" pos:column="9">S_ASYNC_STOP</name></cpp:macro> <cpp:value pos:line="1479" pos:column="22">_HRESULT_TYPEDEF_(S_ASYNC_STOP__)</cpp:value></cpp:define>
<cpp:define pos:line="1480" pos:column="1">#<cpp:directive pos:line="1480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1480" pos:column="9">E_ATTACH_DEBUGGER_ALREADY_ATTACHED</name></cpp:macro> <cpp:value pos:line="1480" pos:column="44">_HRESULT_TYPEDEF_(E_ATTACH_DEBUGGER_ALREADY_ATTACHED__)</cpp:value></cpp:define>
<cpp:define pos:line="1481" pos:column="1">#<cpp:directive pos:line="1481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1481" pos:column="9">E_ATTACH_DEBUGGEE_PROCESS_SECURITY_VIOLATION</name></cpp:macro> <cpp:value pos:line="1481" pos:column="54">_HRESULT_TYPEDEF_(E_ATTACH_DEBUGGEE_PROCESS_SECURITY_VIOLATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1482" pos:column="1">#<cpp:directive pos:line="1482" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1482" pos:column="9">E_ATTACH_CANNOT_ATTACH_TO_DESKTOP</name></cpp:macro> <cpp:value pos:line="1482" pos:column="43">_HRESULT_TYPEDEF_(E_ATTACH_CANNOT_ATTACH_TO_DESKTOP__)</cpp:value></cpp:define>
<cpp:define pos:line="1483" pos:column="1">#<cpp:directive pos:line="1483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1483" pos:column="9">E_LAUNCH_NO_INTEROP</name></cpp:macro> <cpp:value pos:line="1483" pos:column="29">_HRESULT_TYPEDEF_(E_LAUNCH_NO_INTEROP__)</cpp:value></cpp:define>
<cpp:define pos:line="1484" pos:column="1">#<cpp:directive pos:line="1484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1484" pos:column="9">E_LAUNCH_DEBUGGING_NOT_POSSIBLE</name></cpp:macro> <cpp:value pos:line="1484" pos:column="41">_HRESULT_TYPEDEF_(E_LAUNCH_DEBUGGING_NOT_POSSIBLE__)</cpp:value></cpp:define>
<cpp:define pos:line="1485" pos:column="1">#<cpp:directive pos:line="1485" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1485" pos:column="9">E_LAUNCH_KERNEL_DEBUGGER_ENABLED</name></cpp:macro> <cpp:value pos:line="1485" pos:column="42">_HRESULT_TYPEDEF_(E_LAUNCH_KERNEL_DEBUGGER_ENABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1486" pos:column="1">#<cpp:directive pos:line="1486" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1486" pos:column="9">E_LAUNCH_KERNEL_DEBUGGER_PRESENT</name></cpp:macro> <cpp:value pos:line="1486" pos:column="42">_HRESULT_TYPEDEF_(E_LAUNCH_KERNEL_DEBUGGER_PRESENT__)</cpp:value></cpp:define>
<cpp:define pos:line="1487" pos:column="1">#<cpp:directive pos:line="1487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1487" pos:column="9">E_INTEROP_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1487" pos:column="33">_HRESULT_TYPEDEF_(E_INTEROP_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1488" pos:column="1">#<cpp:directive pos:line="1488" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1488" pos:column="9">E_TOO_MANY_PROCESSES</name></cpp:macro> <cpp:value pos:line="1488" pos:column="30">_HRESULT_TYPEDEF_(E_TOO_MANY_PROCESSES__)</cpp:value></cpp:define>
<cpp:define pos:line="1489" pos:column="1">#<cpp:directive pos:line="1489" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1489" pos:column="9">E_MSHTML_SCRIPT_DEBUGGING_DISABLED</name></cpp:macro> <cpp:value pos:line="1489" pos:column="44">_HRESULT_TYPEDEF_(E_MSHTML_SCRIPT_DEBUGGING_DISABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1490" pos:column="1">#<cpp:directive pos:line="1490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1490" pos:column="9">E_SCRIPT_PDM_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1490" pos:column="37">_HRESULT_TYPEDEF_(E_SCRIPT_PDM_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1491" pos:column="1">#<cpp:directive pos:line="1491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1491" pos:column="9">E_DE_CLR_DBG_SERVICES_NOT_INSTALLED</name></cpp:macro> <cpp:value pos:line="1491" pos:column="45">_HRESULT_TYPEDEF_(E_DE_CLR_DBG_SERVICES_NOT_INSTALLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1492" pos:column="1">#<cpp:directive pos:line="1492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1492" pos:column="9">E_ATTACH_NO_CLR_PROGRAMS</name></cpp:macro> <cpp:value pos:line="1492" pos:column="34">_HRESULT_TYPEDEF_(E_ATTACH_NO_CLR_PROGRAMS__)</cpp:value></cpp:define>
<cpp:define pos:line="1493" pos:column="1">#<cpp:directive pos:line="1493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1493" pos:column="9">E_REMOTE_SERVER_CLOSED</name></cpp:macro> <cpp:value pos:line="1493" pos:column="32">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_CLOSED__)</cpp:value></cpp:define>
<cpp:define pos:line="1494" pos:column="1">#<cpp:directive pos:line="1494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1494" pos:column="9">E_CLR_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1494" pos:column="29">_HRESULT_TYPEDEF_(E_CLR_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1495" pos:column="1">#<cpp:directive pos:line="1495" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1495" pos:column="9">E_64BIT_CLR_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1495" pos:column="35">_HRESULT_TYPEDEF_(E_64BIT_CLR_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1496" pos:column="1">#<cpp:directive pos:line="1496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1496" pos:column="9">E_CANNOT_MIX_MINDUMP_DEBUGGING</name></cpp:macro> <cpp:value pos:line="1496" pos:column="40">_HRESULT_TYPEDEF_(E_CANNOT_MIX_MINDUMP_DEBUGGING__)</cpp:value></cpp:define>
<cpp:define pos:line="1497" pos:column="1">#<cpp:directive pos:line="1497" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1497" pos:column="9">E_DEBUG_ENGINE_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1497" pos:column="39">_HRESULT_TYPEDEF_(E_DEBUG_ENGINE_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1498" pos:column="1">#<cpp:directive pos:line="1498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1498" pos:column="9">E_LAUNCH_SXS_ERROR</name></cpp:macro> <cpp:value pos:line="1498" pos:column="28">_HRESULT_TYPEDEF_(E_LAUNCH_SXS_ERROR__)</cpp:value></cpp:define>
<cpp:define pos:line="1499" pos:column="1">#<cpp:directive pos:line="1499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1499" pos:column="9">E_FAILED_TO_INITIALIZE_SCRIPT_PROXY</name></cpp:macro> <cpp:value pos:line="1499" pos:column="45">_HRESULT_TYPEDEF_(E_FAILED_TO_INITIALIZE_SCRIPT_PROXY__)</cpp:value></cpp:define>
<cpp:define pos:line="1500" pos:column="1">#<cpp:directive pos:line="1500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1500" pos:column="9">E_REMOTE_SERVER_DOES_NOT_EXIST</name></cpp:macro> <cpp:value pos:line="1500" pos:column="40">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_DOES_NOT_EXIST__)</cpp:value></cpp:define>
<cpp:define pos:line="1501" pos:column="1">#<cpp:directive pos:line="1501" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1501" pos:column="9">E_REMOTE_SERVER_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1501" pos:column="39">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1502" pos:column="1">#<cpp:directive pos:line="1502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1502" pos:column="9">E_REMOTE_SERVER_MACHINE_DOES_NOT_EXIST</name></cpp:macro> <cpp:value pos:line="1502" pos:column="48">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_MACHINE_DOES_NOT_EXIST__)</cpp:value></cpp:define>
<cpp:define pos:line="1503" pos:column="1">#<cpp:directive pos:line="1503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1503" pos:column="9">E_DEBUGGER_NOT_REGISTERED_PROPERLY</name></cpp:macro> <cpp:value pos:line="1503" pos:column="44">_HRESULT_TYPEDEF_(E_DEBUGGER_NOT_REGISTERED_PROPERLY__)</cpp:value></cpp:define>
<cpp:define pos:line="1504" pos:column="1">#<cpp:directive pos:line="1504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1504" pos:column="9">E_FORCE_GUEST_MODE_ENABLED</name></cpp:macro> <cpp:value pos:line="1504" pos:column="36">_HRESULT_TYPEDEF_(E_FORCE_GUEST_MODE_ENABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1505" pos:column="1">#<cpp:directive pos:line="1505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1505" pos:column="9">E_GET_IWAM_USER_FAILURE</name></cpp:macro> <cpp:value pos:line="1505" pos:column="33">_HRESULT_TYPEDEF_(E_GET_IWAM_USER_FAILURE__)</cpp:value></cpp:define>
<cpp:define pos:line="1506" pos:column="1">#<cpp:directive pos:line="1506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1506" pos:column="9">E_REMOTE_SERVER_INVALID_NAME</name></cpp:macro> <cpp:value pos:line="1506" pos:column="38">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_INVALID_NAME__)</cpp:value></cpp:define>
<cpp:define pos:line="1507" pos:column="1">#<cpp:directive pos:line="1507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1507" pos:column="9">E_REMOTE_SERVER_MACHINE_NO_DEFAULT</name></cpp:macro> <cpp:value pos:line="1507" pos:column="44">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_MACHINE_NO_DEFAULT__)</cpp:value></cpp:define>
<cpp:define pos:line="1508" pos:column="1">#<cpp:directive pos:line="1508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1508" pos:column="9">E_AUTO_LAUNCH_EXEC_FAILURE</name></cpp:macro> <cpp:value pos:line="1508" pos:column="36">_HRESULT_TYPEDEF_(E_AUTO_LAUNCH_EXEC_FAILURE__)</cpp:value></cpp:define>
<cpp:define pos:line="1509" pos:column="1">#<cpp:directive pos:line="1509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1509" pos:column="9">E_SERVICE_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1509" pos:column="33">_HRESULT_TYPEDEF_(E_SERVICE_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1510" pos:column="1">#<cpp:directive pos:line="1510" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1510" pos:column="9">E_SERVICE_ACCESS_DENIED_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1510" pos:column="45">_HRESULT_TYPEDEF_(E_SERVICE_ACCESS_DENIED_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1511" pos:column="1">#<cpp:directive pos:line="1511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1511" pos:column="9">E_REMOTE_COMPONENTS_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1511" pos:column="44">_HRESULT_TYPEDEF_(E_REMOTE_COMPONENTS_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1512" pos:column="1">#<cpp:directive pos:line="1512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1512" pos:column="9">E_DCOM_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1512" pos:column="30">_HRESULT_TYPEDEF_(E_DCOM_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1513" pos:column="1">#<cpp:directive pos:line="1513" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1513" pos:column="9">E_SHARE_LEVEL_ACCESS_CONTROL_ENABLED</name></cpp:macro> <cpp:value pos:line="1513" pos:column="46">_HRESULT_TYPEDEF_(E_SHARE_LEVEL_ACCESS_CONTROL_ENABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1514" pos:column="1">#<cpp:directive pos:line="1514" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1514" pos:column="9">E_WORKGROUP_REMOTE_LOGON_FAILURE</name></cpp:macro> <cpp:value pos:line="1514" pos:column="42">_HRESULT_TYPEDEF_(E_WORKGROUP_REMOTE_LOGON_FAILURE__)</cpp:value></cpp:define>
<cpp:define pos:line="1515" pos:column="1">#<cpp:directive pos:line="1515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1515" pos:column="9">E_WINAUTH_CONNECT_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1515" pos:column="41">_HRESULT_TYPEDEF_(E_WINAUTH_CONNECT_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1516" pos:column="1">#<cpp:directive pos:line="1516" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1516" pos:column="9">E_EVALUATE_BUSY_WITH_EVALUATION</name></cpp:macro> <cpp:value pos:line="1516" pos:column="41">_HRESULT_TYPEDEF_(E_EVALUATE_BUSY_WITH_EVALUATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1517" pos:column="1">#<cpp:directive pos:line="1517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1517" pos:column="9">E_EVALUATE_TIMEOUT</name></cpp:macro> <cpp:value pos:line="1517" pos:column="28">_HRESULT_TYPEDEF_(E_EVALUATE_TIMEOUT__)</cpp:value></cpp:define>
<cpp:define pos:line="1518" pos:column="1">#<cpp:directive pos:line="1518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1518" pos:column="9">E_INTEROP_CLR_TOO_OLD</name></cpp:macro> <cpp:value pos:line="1518" pos:column="31">_HRESULT_TYPEDEF_(E_INTEROP_CLR_TOO_OLD__)</cpp:value></cpp:define>
<cpp:define pos:line="1519" pos:column="1">#<cpp:directive pos:line="1519" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1519" pos:column="9">E_CLR_INCOMPATIBLE_PROTOCOL</name></cpp:macro> <cpp:value pos:line="1519" pos:column="37">_HRESULT_TYPEDEF_(E_CLR_INCOMPATIBLE_PROTOCOL__)</cpp:value></cpp:define>
<cpp:define pos:line="1520" pos:column="1">#<cpp:directive pos:line="1520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1520" pos:column="9">E_CLR_CANNOT_DEBUG_FIBER_PROCESS</name></cpp:macro> <cpp:value pos:line="1520" pos:column="42">_HRESULT_TYPEDEF_(E_CLR_CANNOT_DEBUG_FIBER_PROCESS__)</cpp:value></cpp:define>
<cpp:define pos:line="1521" pos:column="1">#<cpp:directive pos:line="1521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1521" pos:column="9">E_PROCESS_OBJECT_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1521" pos:column="40">_HRESULT_TYPEDEF_(E_PROCESS_OBJECT_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1522" pos:column="1">#<cpp:directive pos:line="1522" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1522" pos:column="9">E_PROCESS_TOKEN_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1522" pos:column="39">_HRESULT_TYPEDEF_(E_PROCESS_TOKEN_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1523" pos:column="1">#<cpp:directive pos:line="1523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1523" pos:column="9">E_PROCESS_TOKEN_ACCESS_DENIED_NO_TS</name></cpp:macro> <cpp:value pos:line="1523" pos:column="45">_HRESULT_TYPEDEF_(E_PROCESS_TOKEN_ACCESS_DENIED_NO_TS__)</cpp:value></cpp:define>
<cpp:define pos:line="1524" pos:column="1">#<cpp:directive pos:line="1524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1524" pos:column="9">E_OPERATION_REQUIRES_ELEVATION</name></cpp:macro> <cpp:value pos:line="1524" pos:column="40">_HRESULT_TYPEDEF_(E_OPERATION_REQUIRES_ELEVATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1525" pos:column="1">#<cpp:directive pos:line="1525" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1525" pos:column="9">E_ATTACH_REQUIRES_ELEVATION</name></cpp:macro> <cpp:value pos:line="1525" pos:column="37">_HRESULT_TYPEDEF_(E_ATTACH_REQUIRES_ELEVATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1526" pos:column="1">#<cpp:directive pos:line="1526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1526" pos:column="9">E_MEMORY_NOTSUPPORTED</name></cpp:macro> <cpp:value pos:line="1526" pos:column="31">_HRESULT_TYPEDEF_(E_MEMORY_NOTSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1527" pos:column="1">#<cpp:directive pos:line="1527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1527" pos:column="9">E_DISASM_NOTSUPPORTED</name></cpp:macro> <cpp:value pos:line="1527" pos:column="31">_HRESULT_TYPEDEF_(E_DISASM_NOTSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1528" pos:column="1">#<cpp:directive pos:line="1528" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1528" pos:column="9">E_DISASM_BADADDRESS</name></cpp:macro> <cpp:value pos:line="1528" pos:column="29">_HRESULT_TYPEDEF_(E_DISASM_BADADDRESS__)</cpp:value></cpp:define>
<cpp:define pos:line="1529" pos:column="1">#<cpp:directive pos:line="1529" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1529" pos:column="9">E_DISASM_NOTAVAILABLE</name></cpp:macro> <cpp:value pos:line="1529" pos:column="31">_HRESULT_TYPEDEF_(E_DISASM_NOTAVAILABLE__)</cpp:value></cpp:define>
<cpp:define pos:line="1530" pos:column="1">#<cpp:directive pos:line="1530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1530" pos:column="9">E_BP_DELETED</name></cpp:macro> <cpp:value pos:line="1530" pos:column="22">_HRESULT_TYPEDEF_(E_BP_DELETED__)</cpp:value></cpp:define>
<cpp:define pos:line="1531" pos:column="1">#<cpp:directive pos:line="1531" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1531" pos:column="9">E_PROCESS_DESTROYED</name></cpp:macro> <cpp:value pos:line="1531" pos:column="29">_HRESULT_TYPEDEF_(E_PROCESS_DESTROYED__)</cpp:value></cpp:define>
<cpp:define pos:line="1532" pos:column="1">#<cpp:directive pos:line="1532" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1532" pos:column="9">E_PROCESS_DEBUGGER_IS_DEBUGGEE</name></cpp:macro> <cpp:value pos:line="1532" pos:column="40">_HRESULT_TYPEDEF_(E_PROCESS_DEBUGGER_IS_DEBUGGEE__)</cpp:value></cpp:define>
<cpp:define pos:line="1533" pos:column="1">#<cpp:directive pos:line="1533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1533" pos:column="9">E_TERMINATE_FORBIDDEN</name></cpp:macro> <cpp:value pos:line="1533" pos:column="31">_HRESULT_TYPEDEF_(E_TERMINATE_FORBIDDEN__)</cpp:value></cpp:define>
<cpp:define pos:line="1534" pos:column="1">#<cpp:directive pos:line="1534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1534" pos:column="9">E_THREAD_DESTROYED</name></cpp:macro> <cpp:value pos:line="1534" pos:column="28">_HRESULT_TYPEDEF_(E_THREAD_DESTROYED__)</cpp:value></cpp:define>
<cpp:define pos:line="1535" pos:column="1">#<cpp:directive pos:line="1535" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1535" pos:column="9">E_PORTSUPPLIER_NO_PORT</name></cpp:macro> <cpp:value pos:line="1535" pos:column="32">_HRESULT_TYPEDEF_(E_PORTSUPPLIER_NO_PORT__)</cpp:value></cpp:define>
<cpp:define pos:line="1536" pos:column="1">#<cpp:directive pos:line="1536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1536" pos:column="9">E_PORT_NO_REQUEST</name></cpp:macro> <cpp:value pos:line="1536" pos:column="27">_HRESULT_TYPEDEF_(E_PORT_NO_REQUEST__)</cpp:value></cpp:define>
<cpp:define pos:line="1537" pos:column="1">#<cpp:directive pos:line="1537" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1537" pos:column="9">E_COMPARE_CANNOT_COMPARE</name></cpp:macro> <cpp:value pos:line="1537" pos:column="34">_HRESULT_TYPEDEF_(E_COMPARE_CANNOT_COMPARE__)</cpp:value></cpp:define>
<cpp:define pos:line="1538" pos:column="1">#<cpp:directive pos:line="1538" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1538" pos:column="9">E_JIT_INVALID_PID</name></cpp:macro> <cpp:value pos:line="1538" pos:column="27">_HRESULT_TYPEDEF_(E_JIT_INVALID_PID__)</cpp:value></cpp:define>
<cpp:define pos:line="1539" pos:column="1">#<cpp:directive pos:line="1539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1539" pos:column="9">E_JIT_VSJITDEBUGGER_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1539" pos:column="44">_HRESULT_TYPEDEF_(E_JIT_VSJITDEBUGGER_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1540" pos:column="1">#<cpp:directive pos:line="1540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1540" pos:column="9">E_JIT_APPID_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1540" pos:column="36">_HRESULT_TYPEDEF_(E_JIT_APPID_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1541" pos:column="1">#<cpp:directive pos:line="1541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1541" pos:column="9">E_JIT_RUNTIME_VERSION_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1541" pos:column="43">_HRESULT_TYPEDEF_(E_JIT_RUNTIME_VERSION_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1542" pos:column="1">#<cpp:directive pos:line="1542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1542" pos:column="9">E_SESSION_TERMINATE_DETACH_FAILED</name></cpp:macro> <cpp:value pos:line="1542" pos:column="43">_HRESULT_TYPEDEF_(E_SESSION_TERMINATE_DETACH_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1543" pos:column="1">#<cpp:directive pos:line="1543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1543" pos:column="9">E_SESSION_TERMINATE_FAILED</name></cpp:macro> <cpp:value pos:line="1543" pos:column="36">_HRESULT_TYPEDEF_(E_SESSION_TERMINATE_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1544" pos:column="1">#<cpp:directive pos:line="1544" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1544" pos:column="9">E_DETACH_NO_PROXY</name></cpp:macro> <cpp:value pos:line="1544" pos:column="27">_HRESULT_TYPEDEF_(E_DETACH_NO_PROXY__)</cpp:value></cpp:define>
<cpp:define pos:line="1545" pos:column="1">#<cpp:directive pos:line="1545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1545" pos:column="9">E_DETACH_TS_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1545" pos:column="33">_HRESULT_TYPEDEF_(E_DETACH_TS_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1546" pos:column="1">#<cpp:directive pos:line="1546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1546" pos:column="9">E_DETACH_IMPERSONATE_FAILURE</name></cpp:macro> <cpp:value pos:line="1546" pos:column="38">_HRESULT_TYPEDEF_(E_DETACH_IMPERSONATE_FAILURE__)</cpp:value></cpp:define>
<cpp:define pos:line="1547" pos:column="1">#<cpp:directive pos:line="1547" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1547" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_ON_NONLEAF_FRAME</name></cpp:macro> <cpp:value pos:line="1547" pos:column="54">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_ON_NONLEAF_FRAME__)</cpp:value></cpp:define>
<cpp:define pos:line="1548" pos:column="1">#<cpp:directive pos:line="1548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1548" pos:column="9">E_TARGET_FILE_MISMATCH</name></cpp:macro> <cpp:value pos:line="1548" pos:column="32">_HRESULT_TYPEDEF_(E_TARGET_FILE_MISMATCH__)</cpp:value></cpp:define>
<cpp:define pos:line="1549" pos:column="1">#<cpp:directive pos:line="1549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1549" pos:column="9">E_IMAGE_NOT_LOADED</name></cpp:macro> <cpp:value pos:line="1549" pos:column="28">_HRESULT_TYPEDEF_(E_IMAGE_NOT_LOADED__)</cpp:value></cpp:define>
<cpp:define pos:line="1550" pos:column="1">#<cpp:directive pos:line="1550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1550" pos:column="9">E_FIBER_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1550" pos:column="31">_HRESULT_TYPEDEF_(E_FIBER_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1551" pos:column="1">#<cpp:directive pos:line="1551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1551" pos:column="9">E_CANNOT_SETIP_TO_DIFFERENT_FUNCTION</name></cpp:macro> <cpp:value pos:line="1551" pos:column="46">_HRESULT_TYPEDEF_(E_CANNOT_SETIP_TO_DIFFERENT_FUNCTION__)</cpp:value></cpp:define>
<cpp:define pos:line="1552" pos:column="1">#<cpp:directive pos:line="1552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1552" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_ON_EXCEPTION</name></cpp:macro> <cpp:value pos:line="1552" pos:column="50">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_ON_EXCEPTION__)</cpp:value></cpp:define>
<cpp:define pos:line="1553" pos:column="1">#<cpp:directive pos:line="1553" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1553" pos:column="9">E_ENC_SETIP_REQUIRES_CONTINUE</name></cpp:macro> <cpp:value pos:line="1553" pos:column="39">_HRESULT_TYPEDEF_(E_ENC_SETIP_REQUIRES_CONTINUE__)</cpp:value></cpp:define>
<cpp:define pos:line="1554" pos:column="1">#<cpp:directive pos:line="1554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1554" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_INTO_FINALLY</name></cpp:macro> <cpp:value pos:line="1554" pos:column="50">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_INTO_FINALLY__)</cpp:value></cpp:define>
<cpp:define pos:line="1555" pos:column="1">#<cpp:directive pos:line="1555" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1555" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_OUT_OF_FINALLY</name></cpp:macro> <cpp:value pos:line="1555" pos:column="52">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_OUT_OF_FINALLY__)</cpp:value></cpp:define>
<cpp:define pos:line="1556" pos:column="1">#<cpp:directive pos:line="1556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1556" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_INTO_CATCH</name></cpp:macro> <cpp:value pos:line="1556" pos:column="48">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_INTO_CATCH__)</cpp:value></cpp:define>
<cpp:define pos:line="1557" pos:column="1">#<cpp:directive pos:line="1557" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1557" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_GENERAL</name></cpp:macro> <cpp:value pos:line="1557" pos:column="45">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_GENERAL__)</cpp:value></cpp:define>
<cpp:define pos:line="1558" pos:column="1">#<cpp:directive pos:line="1558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1558" pos:column="9">E_CANNOT_SET_NEXT_STATEMENT_INTO_OR_OUT_OF_FILTER</name></cpp:macro> <cpp:value pos:line="1558" pos:column="59">_HRESULT_TYPEDEF_(E_CANNOT_SET_NEXT_STATEMENT_INTO_OR_OUT_OF_FILTER__)</cpp:value></cpp:define>
<cpp:define pos:line="1559" pos:column="1">#<cpp:directive pos:line="1559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1559" pos:column="9">E_ASYNCBREAK_NO_PROGRAMS</name></cpp:macro> <cpp:value pos:line="1559" pos:column="34">_HRESULT_TYPEDEF_(E_ASYNCBREAK_NO_PROGRAMS__)</cpp:value></cpp:define>
<cpp:define pos:line="1560" pos:column="1">#<cpp:directive pos:line="1560" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1560" pos:column="9">E_ASYNCBREAK_DEBUGGEE_NOT_INITIALIZED</name></cpp:macro> <cpp:value pos:line="1560" pos:column="47">_HRESULT_TYPEDEF_(E_ASYNCBREAK_DEBUGGEE_NOT_INITIALIZED__)</cpp:value></cpp:define>
<cpp:define pos:line="1561" pos:column="1">#<cpp:directive pos:line="1561" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1561" pos:column="9">E_ASYNCBREAK_UNABLE_TO_PROCESS</name></cpp:macro> <cpp:value pos:line="1561" pos:column="40">_HRESULT_TYPEDEF_(E_ASYNCBREAK_UNABLE_TO_PROCESS__)</cpp:value></cpp:define>
<cpp:define pos:line="1562" pos:column="1">#<cpp:directive pos:line="1562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1562" pos:column="9">E_WEBDBG_DEBUG_VERB_BLOCKED</name></cpp:macro> <cpp:value pos:line="1562" pos:column="37">_HRESULT_TYPEDEF_(E_WEBDBG_DEBUG_VERB_BLOCKED__)</cpp:value></cpp:define>
<cpp:define pos:line="1563" pos:column="1">#<cpp:directive pos:line="1563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1563" pos:column="9">E_ASP_USER_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1563" pos:column="34">_HRESULT_TYPEDEF_(E_ASP_USER_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1564" pos:column="1">#<cpp:directive pos:line="1564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1564" pos:column="9">E_AUTO_ATTACH_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1564" pos:column="38">_HRESULT_TYPEDEF_(E_AUTO_ATTACH_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1565" pos:column="1">#<cpp:directive pos:line="1565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1565" pos:column="9">E_AUTO_ATTACH_DCOM_ERROR</name></cpp:macro> <cpp:value pos:line="1565" pos:column="34">_HRESULT_TYPEDEF_(E_AUTO_ATTACH_DCOM_ERROR__)</cpp:value></cpp:define>
<cpp:define pos:line="1566" pos:column="1">#<cpp:directive pos:line="1566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1566" pos:column="9">E_AUTO_ATTACH_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1566" pos:column="37">_HRESULT_TYPEDEF_(E_AUTO_ATTACH_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1567" pos:column="1">#<cpp:directive pos:line="1567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1567" pos:column="9">E_AUTO_ATTACH_CLASSNOTREG</name></cpp:macro> <cpp:value pos:line="1567" pos:column="35">_HRESULT_TYPEDEF_(E_AUTO_ATTACH_CLASSNOTREG__)</cpp:value></cpp:define>
<cpp:define pos:line="1568" pos:column="1">#<cpp:directive pos:line="1568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1568" pos:column="9">E_CANNOT_CONTINUE_DURING_PENDING_EXPR_EVAL</name></cpp:macro> <cpp:value pos:line="1568" pos:column="52">_HRESULT_TYPEDEF_(E_CANNOT_CONTINUE_DURING_PENDING_EXPR_EVAL__)</cpp:value></cpp:define>
<cpp:define pos:line="1569" pos:column="1">#<cpp:directive pos:line="1569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1569" pos:column="9">E_REMOTE_REDIRECTION_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1569" pos:column="42">_HRESULT_TYPEDEF_(E_REMOTE_REDIRECTION_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1570" pos:column="1">#<cpp:directive pos:line="1570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1570" pos:column="9">E_INVALID_WORKING_DIRECTORY</name></cpp:macro> <cpp:value pos:line="1570" pos:column="37">_HRESULT_TYPEDEF_(E_INVALID_WORKING_DIRECTORY__)</cpp:value></cpp:define>
<cpp:define pos:line="1571" pos:column="1">#<cpp:directive pos:line="1571" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1571" pos:column="9">E_LAUNCH_FAILED_WITH_ELEVATION</name></cpp:macro> <cpp:value pos:line="1571" pos:column="40">_HRESULT_TYPEDEF_(E_LAUNCH_FAILED_WITH_ELEVATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1572" pos:column="1">#<cpp:directive pos:line="1572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1572" pos:column="9">E_LAUNCH_ELEVATION_REQUIRED</name></cpp:macro> <cpp:value pos:line="1572" pos:column="37">_HRESULT_TYPEDEF_(E_LAUNCH_ELEVATION_REQUIRED__)</cpp:value></cpp:define>
<cpp:define pos:line="1573" pos:column="1">#<cpp:directive pos:line="1573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1573" pos:column="9">E_CANNOT_FIND_INTERNET_EXPLORER</name></cpp:macro> <cpp:value pos:line="1573" pos:column="41">_HRESULT_TYPEDEF_(E_CANNOT_FIND_INTERNET_EXPLORER__)</cpp:value></cpp:define>
<cpp:define pos:line="1574" pos:column="1">#<cpp:directive pos:line="1574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1574" pos:column="9">E_REMOTE_PROCESS_OBJECT_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1574" pos:column="47">_HRESULT_TYPEDEF_(E_REMOTE_PROCESS_OBJECT_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1575" pos:column="1">#<cpp:directive pos:line="1575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1575" pos:column="9">E_REMOTE_ATTACH_REQUIRES_ELEVATION</name></cpp:macro> <cpp:value pos:line="1575" pos:column="44">_HRESULT_TYPEDEF_(E_REMOTE_ATTACH_REQUIRES_ELEVATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1576" pos:column="1">#<cpp:directive pos:line="1576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1576" pos:column="9">E_REMOTE_LAUNCH_ELEVATION_REQUIRED</name></cpp:macro> <cpp:value pos:line="1576" pos:column="44">_HRESULT_TYPEDEF_(E_REMOTE_LAUNCH_ELEVATION_REQUIRED__)</cpp:value></cpp:define>
<cpp:define pos:line="1577" pos:column="1">#<cpp:directive pos:line="1577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1577" pos:column="9">E_EXCEPTION_CANNOT_BE_INTERCEPTED</name></cpp:macro> <cpp:value pos:line="1577" pos:column="43">_HRESULT_TYPEDEF_(E_EXCEPTION_CANNOT_BE_INTERCEPTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1578" pos:column="1">#<cpp:directive pos:line="1578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1578" pos:column="9">E_EXCEPTION_CANNOT_UNWIND_ABOVE_CALLBACK</name></cpp:macro> <cpp:value pos:line="1578" pos:column="50">_HRESULT_TYPEDEF_(E_EXCEPTION_CANNOT_UNWIND_ABOVE_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1579" pos:column="1">#<cpp:directive pos:line="1579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1579" pos:column="9">E_INTERCEPT_CURRENT_EXCEPTION_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1579" pos:column="53">_HRESULT_TYPEDEF_(E_INTERCEPT_CURRENT_EXCEPTION_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1580" pos:column="1">#<cpp:directive pos:line="1580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1580" pos:column="9">E_INTERCEPT_CANNOT_UNWIND_LASTCHANCE_INTEROP</name></cpp:macro> <cpp:value pos:line="1580" pos:column="54">_HRESULT_TYPEDEF_(E_INTERCEPT_CANNOT_UNWIND_LASTCHANCE_INTEROP__)</cpp:value></cpp:define>
<cpp:define pos:line="1581" pos:column="1">#<cpp:directive pos:line="1581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1581" pos:column="9">E_JMC_CANNOT_SET_STATUS</name></cpp:macro> <cpp:value pos:line="1581" pos:column="33">_HRESULT_TYPEDEF_(E_JMC_CANNOT_SET_STATUS__)</cpp:value></cpp:define>
<cpp:define pos:line="1582" pos:column="1">#<cpp:directive pos:line="1582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1582" pos:column="9">E_DESTROYED</name></cpp:macro> <cpp:value pos:line="1582" pos:column="21">_HRESULT_TYPEDEF_(E_DESTROYED__)</cpp:value></cpp:define>
<cpp:define pos:line="1583" pos:column="1">#<cpp:directive pos:line="1583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1583" pos:column="9">E_REMOTE_NOMSVCMON</name></cpp:macro> <cpp:value pos:line="1583" pos:column="28">_HRESULT_TYPEDEF_(E_REMOTE_NOMSVCMON__)</cpp:value></cpp:define>
<cpp:define pos:line="1584" pos:column="1">#<cpp:directive pos:line="1584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1584" pos:column="9">E_REMOTE_BADIPADDRESS</name></cpp:macro> <cpp:value pos:line="1584" pos:column="31">_HRESULT_TYPEDEF_(E_REMOTE_BADIPADDRESS__)</cpp:value></cpp:define>
<cpp:define pos:line="1585" pos:column="1">#<cpp:directive pos:line="1585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1585" pos:column="9">E_REMOTE_MACHINEDOWN</name></cpp:macro> <cpp:value pos:line="1585" pos:column="30">_HRESULT_TYPEDEF_(E_REMOTE_MACHINEDOWN__)</cpp:value></cpp:define>
<cpp:define pos:line="1586" pos:column="1">#<cpp:directive pos:line="1586" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1586" pos:column="9">E_REMOTE_MACHINEUNSPECIFIED</name></cpp:macro> <cpp:value pos:line="1586" pos:column="37">_HRESULT_TYPEDEF_(E_REMOTE_MACHINEUNSPECIFIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1587" pos:column="1">#<cpp:directive pos:line="1587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1587" pos:column="9">E_CRASHDUMP_ACTIVE</name></cpp:macro> <cpp:value pos:line="1587" pos:column="28">_HRESULT_TYPEDEF_(E_CRASHDUMP_ACTIVE__)</cpp:value></cpp:define>
<cpp:define pos:line="1588" pos:column="1">#<cpp:directive pos:line="1588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1588" pos:column="9">E_ALL_THREADS_SUSPENDED</name></cpp:macro> <cpp:value pos:line="1588" pos:column="33">_HRESULT_TYPEDEF_(E_ALL_THREADS_SUSPENDED__)</cpp:value></cpp:define>
<cpp:define pos:line="1589" pos:column="1">#<cpp:directive pos:line="1589" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1589" pos:column="9">E_LOAD_DLL_TL</name></cpp:macro> <cpp:value pos:line="1589" pos:column="23">_HRESULT_TYPEDEF_(E_LOAD_DLL_TL__)</cpp:value></cpp:define>
<cpp:define pos:line="1590" pos:column="1">#<cpp:directive pos:line="1590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1590" pos:column="9">E_LOAD_DLL_SH</name></cpp:macro> <cpp:value pos:line="1590" pos:column="23">_HRESULT_TYPEDEF_(E_LOAD_DLL_SH__)</cpp:value></cpp:define>
<cpp:define pos:line="1591" pos:column="1">#<cpp:directive pos:line="1591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1591" pos:column="9">E_LOAD_DLL_EM</name></cpp:macro> <cpp:value pos:line="1591" pos:column="23">_HRESULT_TYPEDEF_(E_LOAD_DLL_EM__)</cpp:value></cpp:define>
<cpp:define pos:line="1592" pos:column="1">#<cpp:directive pos:line="1592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1592" pos:column="9">E_LOAD_DLL_EE</name></cpp:macro> <cpp:value pos:line="1592" pos:column="23">_HRESULT_TYPEDEF_(E_LOAD_DLL_EE__)</cpp:value></cpp:define>
<cpp:define pos:line="1593" pos:column="1">#<cpp:directive pos:line="1593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1593" pos:column="9">E_LOAD_DLL_DM</name></cpp:macro> <cpp:value pos:line="1593" pos:column="23">_HRESULT_TYPEDEF_(E_LOAD_DLL_DM__)</cpp:value></cpp:define>
<cpp:define pos:line="1594" pos:column="1">#<cpp:directive pos:line="1594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1594" pos:column="9">E_LOAD_DLL_MD</name></cpp:macro> <cpp:value pos:line="1594" pos:column="23">_HRESULT_TYPEDEF_(E_LOAD_DLL_MD__)</cpp:value></cpp:define>
<cpp:define pos:line="1595" pos:column="1">#<cpp:directive pos:line="1595" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1595" pos:column="9">E_IOREDIR_BADFILE</name></cpp:macro> <cpp:value pos:line="1595" pos:column="27">_HRESULT_TYPEDEF_(E_IOREDIR_BADFILE__)</cpp:value></cpp:define>
<cpp:define pos:line="1596" pos:column="1">#<cpp:directive pos:line="1596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1596" pos:column="9">E_IOREDIR_BADSYNTAX</name></cpp:macro> <cpp:value pos:line="1596" pos:column="29">_HRESULT_TYPEDEF_(E_IOREDIR_BADSYNTAX__)</cpp:value></cpp:define>
<cpp:define pos:line="1597" pos:column="1">#<cpp:directive pos:line="1597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1597" pos:column="9">E_REMOTE_BADVERSION</name></cpp:macro> <cpp:value pos:line="1597" pos:column="29">_HRESULT_TYPEDEF_(E_REMOTE_BADVERSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1598" pos:column="1">#<cpp:directive pos:line="1598" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1598" pos:column="9">E_CRASHDUMP_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1598" pos:column="33">_HRESULT_TYPEDEF_(E_CRASHDUMP_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1599" pos:column="1">#<cpp:directive pos:line="1599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1599" pos:column="9">E_REMOTE_BAD_CLR_VERSION</name></cpp:macro> <cpp:value pos:line="1599" pos:column="34">_HRESULT_TYPEDEF_(E_REMOTE_BAD_CLR_VERSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1600" pos:column="1">#<cpp:directive pos:line="1600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1600" pos:column="9">E_UNSUPPORTED_BINARY</name></cpp:macro> <cpp:value pos:line="1600" pos:column="30">_HRESULT_TYPEDEF_(E_UNSUPPORTED_BINARY__)</cpp:value></cpp:define>
<cpp:define pos:line="1601" pos:column="1">#<cpp:directive pos:line="1601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1601" pos:column="9">E_DEBUGGEE_BLOCKED</name></cpp:macro> <cpp:value pos:line="1601" pos:column="28">_HRESULT_TYPEDEF_(E_DEBUGGEE_BLOCKED__)</cpp:value></cpp:define>
<cpp:define pos:line="1602" pos:column="1">#<cpp:directive pos:line="1602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1602" pos:column="9">E_REMOTE_NOUSERMSVCMON</name></cpp:macro> <cpp:value pos:line="1602" pos:column="32">_HRESULT_TYPEDEF_(E_REMOTE_NOUSERMSVCMON__)</cpp:value></cpp:define>
<cpp:define pos:line="1603" pos:column="1">#<cpp:directive pos:line="1603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1603" pos:column="9">E_STEP_WIN9xSYSCODE</name></cpp:macro> <cpp:value pos:line="1603" pos:column="29">_HRESULT_TYPEDEF_(E_STEP_WIN9xSYSCODE__)</cpp:value></cpp:define>
<cpp:define pos:line="1604" pos:column="1">#<cpp:directive pos:line="1604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1604" pos:column="9">E_INTEROP_ORPC_INIT</name></cpp:macro> <cpp:value pos:line="1604" pos:column="29">_HRESULT_TYPEDEF_(E_INTEROP_ORPC_INIT__)</cpp:value></cpp:define>
<cpp:define pos:line="1605" pos:column="1">#<cpp:directive pos:line="1605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1605" pos:column="9">E_CANNOT_DEBUG_WIN32</name></cpp:macro> <cpp:value pos:line="1605" pos:column="30">_HRESULT_TYPEDEF_(E_CANNOT_DEBUG_WIN32__)</cpp:value></cpp:define>
<cpp:define pos:line="1606" pos:column="1">#<cpp:directive pos:line="1606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1606" pos:column="9">E_CANNOT_DEBUG_WIN64</name></cpp:macro> <cpp:value pos:line="1606" pos:column="30">_HRESULT_TYPEDEF_(E_CANNOT_DEBUG_WIN64__)</cpp:value></cpp:define>
<cpp:define pos:line="1607" pos:column="1">#<cpp:directive pos:line="1607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1607" pos:column="9">E_MINIDUMP_READ_WIN9X</name></cpp:macro> <cpp:value pos:line="1607" pos:column="31">_HRESULT_TYPEDEF_(E_MINIDUMP_READ_WIN9X__)</cpp:value></cpp:define>
<cpp:define pos:line="1608" pos:column="1">#<cpp:directive pos:line="1608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1608" pos:column="9">E_CROSS_TSSESSION_ATTACH</name></cpp:macro> <cpp:value pos:line="1608" pos:column="34">_HRESULT_TYPEDEF_(E_CROSS_TSSESSION_ATTACH__)</cpp:value></cpp:define>
<cpp:define pos:line="1609" pos:column="1">#<cpp:directive pos:line="1609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1609" pos:column="9">E_STEP_BP_SET_FAILED</name></cpp:macro> <cpp:value pos:line="1609" pos:column="30">_HRESULT_TYPEDEF_(E_STEP_BP_SET_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1610" pos:column="1">#<cpp:directive pos:line="1610" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1610" pos:column="9">E_LOAD_DLL_TL_INCORRECT_VERSION</name></cpp:macro> <cpp:value pos:line="1610" pos:column="41">_HRESULT_TYPEDEF_(E_LOAD_DLL_TL_INCORRECT_VERSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1611" pos:column="1">#<cpp:directive pos:line="1611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1611" pos:column="9">E_LOAD_DLL_DM_INCORRECT_VERSION</name></cpp:macro> <cpp:value pos:line="1611" pos:column="41">_HRESULT_TYPEDEF_(E_LOAD_DLL_DM_INCORRECT_VERSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1612" pos:column="1">#<cpp:directive pos:line="1612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1612" pos:column="9">E_REMOTE_NOMSVCMON_PIPE</name></cpp:macro> <cpp:value pos:line="1612" pos:column="33">_HRESULT_TYPEDEF_(E_REMOTE_NOMSVCMON_PIPE__)</cpp:value></cpp:define>
<cpp:define pos:line="1613" pos:column="1">#<cpp:directive pos:line="1613" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1613" pos:column="9">E_LOAD_DLL_DIA</name></cpp:macro> <cpp:value pos:line="1613" pos:column="24">_HRESULT_TYPEDEF_(E_LOAD_DLL_DIA__)</cpp:value></cpp:define>
<cpp:define pos:line="1614" pos:column="1">#<cpp:directive pos:line="1614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1614" pos:column="9">E_DUMP_CORRUPTED</name></cpp:macro> <cpp:value pos:line="1614" pos:column="26">_HRESULT_TYPEDEF_(E_DUMP_CORRUPTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1615" pos:column="1">#<cpp:directive pos:line="1615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1615" pos:column="9">E_INTEROP_X64</name></cpp:macro> <cpp:value pos:line="1615" pos:column="23">_HRESULT_TYPEDEF_(E_INTEROP_X64__)</cpp:value></cpp:define>
<cpp:define pos:line="1616" pos:column="1">#<cpp:directive pos:line="1616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1616" pos:column="9">E_CRASHDUMP_DEPRECATED</name></cpp:macro> <cpp:value pos:line="1616" pos:column="32">_HRESULT_TYPEDEF_(E_CRASHDUMP_DEPRECATED__)</cpp:value></cpp:define>
<cpp:define pos:line="1617" pos:column="1">#<cpp:directive pos:line="1617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1617" pos:column="9">E_LAUNCH_MANAGEDONLYMINIDUMP_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1617" pos:column="50">_HRESULT_TYPEDEF_(E_LAUNCH_MANAGEDONLYMINIDUMP_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1618" pos:column="1">#<cpp:directive pos:line="1618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1618" pos:column="9">E_LAUNCH_64BIT_MANAGEDMINIDUMP_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1618" pos:column="52">_HRESULT_TYPEDEF_(E_LAUNCH_64BIT_MANAGEDMINIDUMP_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1619" pos:column="1">#<cpp:directive pos:line="1619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1619" pos:column="9">E_DEVICEBITS_NOT_SIGNED</name></cpp:macro> <cpp:value pos:line="1619" pos:column="33">_HRESULT_TYPEDEF_(E_DEVICEBITS_NOT_SIGNED__)</cpp:value></cpp:define>
<cpp:define pos:line="1620" pos:column="1">#<cpp:directive pos:line="1620" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1620" pos:column="9">E_ATTACH_NOT_ENABLED</name></cpp:macro> <cpp:value pos:line="1620" pos:column="30">_HRESULT_TYPEDEF_(E_ATTACH_NOT_ENABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1621" pos:column="1">#<cpp:directive pos:line="1621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1621" pos:column="9">E_REMOTE_DISCONNECT</name></cpp:macro> <cpp:value pos:line="1621" pos:column="29">_HRESULT_TYPEDEF_(E_REMOTE_DISCONNECT__)</cpp:value></cpp:define>
<cpp:define pos:line="1622" pos:column="1">#<cpp:directive pos:line="1622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1622" pos:column="9">E_BREAK_ALL_FAILED</name></cpp:macro> <cpp:value pos:line="1622" pos:column="28">_HRESULT_TYPEDEF_(E_BREAK_ALL_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1623" pos:column="1">#<cpp:directive pos:line="1623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1623" pos:column="9">E_DEVICE_ACCESS_DENIED_SELECT_YES</name></cpp:macro> <cpp:value pos:line="1623" pos:column="43">_HRESULT_TYPEDEF_(E_DEVICE_ACCESS_DENIED_SELECT_YES__)</cpp:value></cpp:define>
<cpp:define pos:line="1624" pos:column="1">#<cpp:directive pos:line="1624" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1624" pos:column="9">E_DEVICE_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1624" pos:column="32">_HRESULT_TYPEDEF_(E_DEVICE_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1625" pos:column="1">#<cpp:directive pos:line="1625" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1625" pos:column="9">E_DEVICE_CONNRESET</name></cpp:macro> <cpp:value pos:line="1625" pos:column="28">_HRESULT_TYPEDEF_(E_DEVICE_CONNRESET__)</cpp:value></cpp:define>
<cpp:define pos:line="1626" pos:column="1">#<cpp:directive pos:line="1626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1626" pos:column="9">E_BAD_NETCF_VERSION</name></cpp:macro> <cpp:value pos:line="1626" pos:column="29">_HRESULT_TYPEDEF_(E_BAD_NETCF_VERSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1627" pos:column="1">#<cpp:directive pos:line="1627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1627" pos:column="9">E_REFERENCE_NOT_VALID</name></cpp:macro> <cpp:value pos:line="1627" pos:column="31">_HRESULT_TYPEDEF_(E_REFERENCE_NOT_VALID__)</cpp:value></cpp:define>
<cpp:define pos:line="1628" pos:column="1">#<cpp:directive pos:line="1628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1628" pos:column="9">E_PROPERTY_NOT_VALID</name></cpp:macro> <cpp:value pos:line="1628" pos:column="30">_HRESULT_TYPEDEF_(E_PROPERTY_NOT_VALID__)</cpp:value></cpp:define>
<cpp:define pos:line="1629" pos:column="1">#<cpp:directive pos:line="1629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1629" pos:column="9">E_SETVALUE_VALUE_CANNOT_BE_SET</name></cpp:macro> <cpp:value pos:line="1629" pos:column="40">_HRESULT_TYPEDEF_(E_SETVALUE_VALUE_CANNOT_BE_SET__)</cpp:value></cpp:define>
<cpp:define pos:line="1630" pos:column="1">#<cpp:directive pos:line="1630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1630" pos:column="9">E_SETVALUE_VALUE_IS_READONLY</name></cpp:macro> <cpp:value pos:line="1630" pos:column="38">_HRESULT_TYPEDEF_(E_SETVALUE_VALUE_IS_READONLY__)</cpp:value></cpp:define>
<cpp:define pos:line="1631" pos:column="1">#<cpp:directive pos:line="1631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1631" pos:column="9">E_SETVALUEASREFERENCE_NOTSUPPORTED</name></cpp:macro> <cpp:value pos:line="1631" pos:column="44">_HRESULT_TYPEDEF_(E_SETVALUEASREFERENCE_NOTSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1632" pos:column="1">#<cpp:directive pos:line="1632" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1632" pos:column="9">E_CANNOT_GET_UNMANAGED_MEMORY_CONTEXT</name></cpp:macro> <cpp:value pos:line="1632" pos:column="47">_HRESULT_TYPEDEF_(E_CANNOT_GET_UNMANAGED_MEMORY_CONTEXT__)</cpp:value></cpp:define>
<cpp:define pos:line="1633" pos:column="1">#<cpp:directive pos:line="1633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1633" pos:column="9">E_GETREFERENCE_NO_REFERENCE</name></cpp:macro> <cpp:value pos:line="1633" pos:column="37">_HRESULT_TYPEDEF_(E_GETREFERENCE_NO_REFERENCE__)</cpp:value></cpp:define>
<cpp:define pos:line="1634" pos:column="1">#<cpp:directive pos:line="1634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1634" pos:column="9">E_CODE_CONTEXT_OUT_OF_SCOPE</name></cpp:macro> <cpp:value pos:line="1634" pos:column="37">_HRESULT_TYPEDEF_(E_CODE_CONTEXT_OUT_OF_SCOPE__)</cpp:value></cpp:define>
<cpp:define pos:line="1635" pos:column="1">#<cpp:directive pos:line="1635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1635" pos:column="9">E_INVALID_SESSIONID</name></cpp:macro> <cpp:value pos:line="1635" pos:column="29">_HRESULT_TYPEDEF_(E_INVALID_SESSIONID__)</cpp:value></cpp:define>
<cpp:define pos:line="1636" pos:column="1">#<cpp:directive pos:line="1636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1636" pos:column="9">E_SERVER_UNAVAILABLE_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1636" pos:column="42">_HRESULT_TYPEDEF_(E_SERVER_UNAVAILABLE_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1637" pos:column="1">#<cpp:directive pos:line="1637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1637" pos:column="9">E_ACCESS_DENIED_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1637" pos:column="37">_HRESULT_TYPEDEF_(E_ACCESS_DENIED_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1638" pos:column="1">#<cpp:directive pos:line="1638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1638" pos:column="9">E_UNKNOWN_AUTHN_SERVICE_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1638" pos:column="45">_HRESULT_TYPEDEF_(E_UNKNOWN_AUTHN_SERVICE_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1639" pos:column="1">#<cpp:directive pos:line="1639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1639" pos:column="9">E_NO_SESSION_AVAILABLE</name></cpp:macro> <cpp:value pos:line="1639" pos:column="32">_HRESULT_TYPEDEF_(E_NO_SESSION_AVAILABLE__)</cpp:value></cpp:define>
<cpp:define pos:line="1640" pos:column="1">#<cpp:directive pos:line="1640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1640" pos:column="9">E_CLIENT_NOT_LOGGED_ON</name></cpp:macro> <cpp:value pos:line="1640" pos:column="32">_HRESULT_TYPEDEF_(E_CLIENT_NOT_LOGGED_ON__)</cpp:value></cpp:define>
<cpp:define pos:line="1641" pos:column="1">#<cpp:directive pos:line="1641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1641" pos:column="9">E_OTHER_USERS_SESSION</name></cpp:macro> <cpp:value pos:line="1641" pos:column="31">_HRESULT_TYPEDEF_(E_OTHER_USERS_SESSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1642" pos:column="1">#<cpp:directive pos:line="1642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1642" pos:column="9">E_USER_LEVEL_ACCESS_CONTROL_REQUIRED</name></cpp:macro> <cpp:value pos:line="1642" pos:column="46">_HRESULT_TYPEDEF_(E_USER_LEVEL_ACCESS_CONTROL_REQUIRED__)</cpp:value></cpp:define>
<cpp:define pos:line="1643" pos:column="1">#<cpp:directive pos:line="1643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1643" pos:column="9">E_KERBEROS_ACCESS_DENIED_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1643" pos:column="46">_HRESULT_TYPEDEF_(E_KERBEROS_ACCESS_DENIED_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1644" pos:column="1">#<cpp:directive pos:line="1644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1644" pos:column="9">E_DNS_FAILURE_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1644" pos:column="35">_HRESULT_TYPEDEF_(E_DNS_FAILURE_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1645" pos:column="1">#<cpp:directive pos:line="1645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1645" pos:column="9">E_SCRIPT_CLR_EE_DISABLED</name></cpp:macro> <cpp:value pos:line="1645" pos:column="34">_HRESULT_TYPEDEF_(E_SCRIPT_CLR_EE_DISABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1646" pos:column="1">#<cpp:directive pos:line="1646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1646" pos:column="9">E_HTTP_SERVERERROR</name></cpp:macro> <cpp:value pos:line="1646" pos:column="28">_HRESULT_TYPEDEF_(E_HTTP_SERVERERROR__)</cpp:value></cpp:define>
<cpp:define pos:line="1647" pos:column="1">#<cpp:directive pos:line="1647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1647" pos:column="9">E_HTTP_UNAUTHORIZED</name></cpp:macro> <cpp:value pos:line="1647" pos:column="29">_HRESULT_TYPEDEF_(E_HTTP_UNAUTHORIZED__)</cpp:value></cpp:define>
<cpp:define pos:line="1648" pos:column="1">#<cpp:directive pos:line="1648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1648" pos:column="9">E_HTTP_SENDREQUEST_FAILED</name></cpp:macro> <cpp:value pos:line="1648" pos:column="35">_HRESULT_TYPEDEF_(E_HTTP_SENDREQUEST_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1649" pos:column="1">#<cpp:directive pos:line="1649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1649" pos:column="9">E_HTTP_FORBIDDEN</name></cpp:macro> <cpp:value pos:line="1649" pos:column="26">_HRESULT_TYPEDEF_(E_HTTP_FORBIDDEN__)</cpp:value></cpp:define>
<cpp:define pos:line="1650" pos:column="1">#<cpp:directive pos:line="1650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1650" pos:column="9">E_HTTP_NOT_SUPPORTED</name></cpp:macro> <cpp:value pos:line="1650" pos:column="30">_HRESULT_TYPEDEF_(E_HTTP_NOT_SUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1651" pos:column="1">#<cpp:directive pos:line="1651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1651" pos:column="9">E_HTTP_NO_CONTENT</name></cpp:macro> <cpp:value pos:line="1651" pos:column="27">_HRESULT_TYPEDEF_(E_HTTP_NO_CONTENT__)</cpp:value></cpp:define>
<cpp:define pos:line="1652" pos:column="1">#<cpp:directive pos:line="1652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1652" pos:column="9">E_HTTP_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1652" pos:column="26">_HRESULT_TYPEDEF_(E_HTTP_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1653" pos:column="1">#<cpp:directive pos:line="1653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1653" pos:column="9">E_HTTP_BAD_REQUEST</name></cpp:macro> <cpp:value pos:line="1653" pos:column="28">_HRESULT_TYPEDEF_(E_HTTP_BAD_REQUEST__)</cpp:value></cpp:define>
<cpp:define pos:line="1654" pos:column="1">#<cpp:directive pos:line="1654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1654" pos:column="9">E_HTTP_ACCESS_DENIED</name></cpp:macro> <cpp:value pos:line="1654" pos:column="30">_HRESULT_TYPEDEF_(E_HTTP_ACCESS_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1655" pos:column="1">#<cpp:directive pos:line="1655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1655" pos:column="9">E_HTTP_CONNECT_FAILED</name></cpp:macro> <cpp:value pos:line="1655" pos:column="31">_HRESULT_TYPEDEF_(E_HTTP_CONNECT_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1656" pos:column="1">#<cpp:directive pos:line="1656" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1656" pos:column="9">E_HTTP_EXCEPTION</name></cpp:macro> <cpp:value pos:line="1656" pos:column="26">_HRESULT_TYPEDEF_(E_HTTP_EXCEPTION__)</cpp:value></cpp:define>
<cpp:define pos:line="1657" pos:column="1">#<cpp:directive pos:line="1657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1657" pos:column="9">E_HTTP_TIMEOUT</name></cpp:macro> <cpp:value pos:line="1657" pos:column="24">_HRESULT_TYPEDEF_(E_HTTP_TIMEOUT__)</cpp:value></cpp:define>
<cpp:define pos:line="1658" pos:column="1">#<cpp:directive pos:line="1658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1658" pos:column="9">E_HTTP_SITE_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1658" pos:column="31">_HRESULT_TYPEDEF_(E_HTTP_SITE_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1659" pos:column="1">#<cpp:directive pos:line="1659" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1659" pos:column="9">E_HTTP_APP_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1659" pos:column="30">_HRESULT_TYPEDEF_(E_HTTP_APP_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1660" pos:column="1">#<cpp:directive pos:line="1660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1660" pos:column="9">E_HTTP_MANAGEMENT_API_MISSING</name></cpp:macro> <cpp:value pos:line="1660" pos:column="39">_HRESULT_TYPEDEF_(E_HTTP_MANAGEMENT_API_MISSING__)</cpp:value></cpp:define>
<cpp:define pos:line="1661" pos:column="1">#<cpp:directive pos:line="1661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1661" pos:column="9">E_HTTP_NO_PROCESS</name></cpp:macro> <cpp:value pos:line="1661" pos:column="27">_HRESULT_TYPEDEF_(E_HTTP_NO_PROCESS__)</cpp:value></cpp:define>
<cpp:define pos:line="1662" pos:column="1">#<cpp:directive pos:line="1662" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1662" pos:column="9">E_64BIT_COMPONENTS_NOT_INSTALLED</name></cpp:macro> <cpp:value pos:line="1662" pos:column="42">_HRESULT_TYPEDEF_(E_64BIT_COMPONENTS_NOT_INSTALLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1663" pos:column="1">#<cpp:directive pos:line="1663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1663" pos:column="9">E_UNMARSHAL_SERVER_FAILED</name></cpp:macro> <cpp:value pos:line="1663" pos:column="35">_HRESULT_TYPEDEF_(E_UNMARSHAL_SERVER_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1664" pos:column="1">#<cpp:directive pos:line="1664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1664" pos:column="9">E_UNMARSHAL_CALLBACK_FAILED</name></cpp:macro> <cpp:value pos:line="1664" pos:column="37">_HRESULT_TYPEDEF_(E_UNMARSHAL_CALLBACK_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1665" pos:column="1">#<cpp:directive pos:line="1665" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1665" pos:column="9">E_RPC_REQUIRES_AUTHENTICATION</name></cpp:macro> <cpp:value pos:line="1665" pos:column="39">_HRESULT_TYPEDEF_(E_RPC_REQUIRES_AUTHENTICATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1666" pos:column="1">#<cpp:directive pos:line="1666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1666" pos:column="9">E_LOGON_FAILURE_ON_CALLBACK</name></cpp:macro> <cpp:value pos:line="1666" pos:column="37">_HRESULT_TYPEDEF_(E_LOGON_FAILURE_ON_CALLBACK__)</cpp:value></cpp:define>
<cpp:define pos:line="1667" pos:column="1">#<cpp:directive pos:line="1667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1667" pos:column="9">E_REMOTE_SERVER_UNAVAILABLE</name></cpp:macro> <cpp:value pos:line="1667" pos:column="37">_HRESULT_TYPEDEF_(E_REMOTE_SERVER_UNAVAILABLE__)</cpp:value></cpp:define>
<cpp:define pos:line="1668" pos:column="1">#<cpp:directive pos:line="1668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1668" pos:column="9">E_FIREWALL_USER_CANCELED</name></cpp:macro> <cpp:value pos:line="1668" pos:column="34">_HRESULT_TYPEDEF_(E_FIREWALL_USER_CANCELED__)</cpp:value></cpp:define>
<cpp:define pos:line="1669" pos:column="1">#<cpp:directive pos:line="1669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1669" pos:column="9">E_REMOTE_CREDENTIALS_PROHIBITED</name></cpp:macro> <cpp:value pos:line="1669" pos:column="41">_HRESULT_TYPEDEF_(E_REMOTE_CREDENTIALS_PROHIBITED__)</cpp:value></cpp:define>
<cpp:define pos:line="1670" pos:column="1">#<cpp:directive pos:line="1670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1670" pos:column="9">E_FIREWALL_NO_EXCEPTIONS</name></cpp:macro> <cpp:value pos:line="1670" pos:column="34">_HRESULT_TYPEDEF_(E_FIREWALL_NO_EXCEPTIONS__)</cpp:value></cpp:define>
<cpp:define pos:line="1671" pos:column="1">#<cpp:directive pos:line="1671" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1671" pos:column="9">E_FIREWALL_CANNOT_OPEN_APPLICATION</name></cpp:macro> <cpp:value pos:line="1671" pos:column="44">_HRESULT_TYPEDEF_(E_FIREWALL_CANNOT_OPEN_APPLICATION__)</cpp:value></cpp:define>
<cpp:define pos:line="1672" pos:column="1">#<cpp:directive pos:line="1672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1672" pos:column="9">E_FIREWALL_CANNOT_OPEN_PORT</name></cpp:macro> <cpp:value pos:line="1672" pos:column="37">_HRESULT_TYPEDEF_(E_FIREWALL_CANNOT_OPEN_PORT__)</cpp:value></cpp:define>
<cpp:define pos:line="1673" pos:column="1">#<cpp:directive pos:line="1673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1673" pos:column="9">E_FIREWALL_CANNOT_OPEN_FILE_SHARING</name></cpp:macro> <cpp:value pos:line="1673" pos:column="45">_HRESULT_TYPEDEF_(E_FIREWALL_CANNOT_OPEN_FILE_SHARING__)</cpp:value></cpp:define>
<cpp:define pos:line="1674" pos:column="1">#<cpp:directive pos:line="1674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1674" pos:column="9">E_REMOTE_DEBUGGING_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1674" pos:column="40">_HRESULT_TYPEDEF_(E_REMOTE_DEBUGGING_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1675" pos:column="1">#<cpp:directive pos:line="1675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1675" pos:column="9">E_REMOTE_BAD_MSDBG2</name></cpp:macro> <cpp:value pos:line="1675" pos:column="29">_HRESULT_TYPEDEF_(E_REMOTE_BAD_MSDBG2__)</cpp:value></cpp:define>
<cpp:define pos:line="1676" pos:column="1">#<cpp:directive pos:line="1676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1676" pos:column="9">E_ATTACH_USER_CANCELED</name></cpp:macro> <cpp:value pos:line="1676" pos:column="32">_HRESULT_TYPEDEF_(E_ATTACH_USER_CANCELED__)</cpp:value></cpp:define>
<cpp:define pos:line="1677" pos:column="1">#<cpp:directive pos:line="1677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1677" pos:column="9">E_REMOTE_PACKET_TOO_BIG</name></cpp:macro> <cpp:value pos:line="1677" pos:column="33">_HRESULT_TYPEDEF_(E_REMOTE_PACKET_TOO_BIG__)</cpp:value></cpp:define>
<cpp:define pos:line="1678" pos:column="1">#<cpp:directive pos:line="1678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1678" pos:column="9">E_UNSUPPORTED_FUTURE_CLR_VERSION</name></cpp:macro> <cpp:value pos:line="1678" pos:column="42">_HRESULT_TYPEDEF_(E_UNSUPPORTED_FUTURE_CLR_VERSION__)</cpp:value></cpp:define>
<cpp:define pos:line="1679" pos:column="1">#<cpp:directive pos:line="1679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1679" pos:column="9">E_UNSUPPORTED_CLR_V1</name></cpp:macro> <cpp:value pos:line="1679" pos:column="30">_HRESULT_TYPEDEF_(E_UNSUPPORTED_CLR_V1__)</cpp:value></cpp:define>
<cpp:define pos:line="1680" pos:column="1">#<cpp:directive pos:line="1680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1680" pos:column="9">E_INTEROP_IA64</name></cpp:macro> <cpp:value pos:line="1680" pos:column="24">_HRESULT_TYPEDEF_(E_INTEROP_IA64__)</cpp:value></cpp:define>
<cpp:define pos:line="1681" pos:column="1">#<cpp:directive pos:line="1681" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1681" pos:column="9">E_HTTP_GENERAL</name></cpp:macro> <cpp:value pos:line="1681" pos:column="24">_HRESULT_TYPEDEF_(E_HTTP_GENERAL__)</cpp:value></cpp:define>
<cpp:define pos:line="1682" pos:column="1">#<cpp:directive pos:line="1682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1682" pos:column="9">E_FUNCTION_NOT_JITTED</name></cpp:macro> <cpp:value pos:line="1682" pos:column="31">_HRESULT_TYPEDEF_(E_FUNCTION_NOT_JITTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1683" pos:column="1">#<cpp:directive pos:line="1683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1683" pos:column="9">E_NO_CODE_CONTEXT</name></cpp:macro> <cpp:value pos:line="1683" pos:column="27">_HRESULT_TYPEDEF_(E_NO_CODE_CONTEXT__)</cpp:value></cpp:define>
<cpp:define pos:line="1684" pos:column="1">#<cpp:directive pos:line="1684" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1684" pos:column="9">E_BAD_CLR_DIASYMREADER</name></cpp:macro> <cpp:value pos:line="1684" pos:column="32">_HRESULT_TYPEDEF_(E_BAD_CLR_DIASYMREADER__)</cpp:value></cpp:define>
<cpp:define pos:line="1685" pos:column="1">#<cpp:directive pos:line="1685" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1685" pos:column="9">E_CLR_SHIM_ERROR</name></cpp:macro> <cpp:value pos:line="1685" pos:column="26">_HRESULT_TYPEDEF_(E_CLR_SHIM_ERROR__)</cpp:value></cpp:define>
<cpp:define pos:line="1686" pos:column="1">#<cpp:directive pos:line="1686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1686" pos:column="9">E_AUTOATTACH_WEBSERVER_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1686" pos:column="42">_HRESULT_TYPEDEF_(E_AUTOATTACH_WEBSERVER_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1687" pos:column="1">#<cpp:directive pos:line="1687" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1687" pos:column="9">E_DBGEXTENSION_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1687" pos:column="34">_HRESULT_TYPEDEF_(E_DBGEXTENSION_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1688" pos:column="1">#<cpp:directive pos:line="1688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1688" pos:column="9">E_DBGEXTENSION_FUNCTION_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1688" pos:column="43">_HRESULT_TYPEDEF_(E_DBGEXTENSION_FUNCTION_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1689" pos:column="1">#<cpp:directive pos:line="1689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1689" pos:column="9">E_DBGEXTENSION_FAULTED</name></cpp:macro> <cpp:value pos:line="1689" pos:column="32">_HRESULT_TYPEDEF_(E_DBGEXTENSION_FAULTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1690" pos:column="1">#<cpp:directive pos:line="1690" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1690" pos:column="9">E_DBGEXTENSION_RESULT_INVALID</name></cpp:macro> <cpp:value pos:line="1690" pos:column="39">_HRESULT_TYPEDEF_(E_DBGEXTENSION_RESULT_INVALID__)</cpp:value></cpp:define>
<cpp:define pos:line="1691" pos:column="1">#<cpp:directive pos:line="1691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1691" pos:column="9">E_PROGRAM_IN_RUNMODE</name></cpp:macro> <cpp:value pos:line="1691" pos:column="30">_HRESULT_TYPEDEF_(E_PROGRAM_IN_RUNMODE__)</cpp:value></cpp:define>
<cpp:define pos:line="1692" pos:column="1">#<cpp:directive pos:line="1692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1692" pos:column="9">E_CAUSALITY_NO_SERVER_RESPONSE</name></cpp:macro> <cpp:value pos:line="1692" pos:column="40">_HRESULT_TYPEDEF_(E_CAUSALITY_NO_SERVER_RESPONSE__)</cpp:value></cpp:define>
<cpp:define pos:line="1693" pos:column="1">#<cpp:directive pos:line="1693" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1693" pos:column="9">E_CAUSALITY_REMOTE_NOT_REGISTERED</name></cpp:macro> <cpp:value pos:line="1693" pos:column="43">_HRESULT_TYPEDEF_(E_CAUSALITY_REMOTE_NOT_REGISTERED__)</cpp:value></cpp:define>
<cpp:define pos:line="1694" pos:column="1">#<cpp:directive pos:line="1694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1694" pos:column="9">E_CAUSALITY_BREAKPOINT_NOT_HIT</name></cpp:macro> <cpp:value pos:line="1694" pos:column="40">_HRESULT_TYPEDEF_(E_CAUSALITY_BREAKPOINT_NOT_HIT__)</cpp:value></cpp:define>
<cpp:define pos:line="1695" pos:column="1">#<cpp:directive pos:line="1695" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1695" pos:column="9">E_CAUSALITY_BREAKPOINT_BIND_ERROR</name></cpp:macro> <cpp:value pos:line="1695" pos:column="43">_HRESULT_TYPEDEF_(E_CAUSALITY_BREAKPOINT_BIND_ERROR__)</cpp:value></cpp:define>
<cpp:define pos:line="1696" pos:column="1">#<cpp:directive pos:line="1696" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1696" pos:column="9">E_CAUSALITY_PROJECT_DISABLED</name></cpp:macro> <cpp:value pos:line="1696" pos:column="38">_HRESULT_TYPEDEF_(E_CAUSALITY_PROJECT_DISABLED__)</cpp:value></cpp:define>
<cpp:define pos:line="1697" pos:column="1">#<cpp:directive pos:line="1697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1697" pos:column="9">E_NO_ATTACH_WHILE_DDD</name></cpp:macro> <cpp:value pos:line="1697" pos:column="31">_HRESULT_TYPEDEF_(E_NO_ATTACH_WHILE_DDD__)</cpp:value></cpp:define>
<cpp:define pos:line="1698" pos:column="1">#<cpp:directive pos:line="1698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1698" pos:column="9">E_SQLLE_ACCESSDENIED</name></cpp:macro> <cpp:value pos:line="1698" pos:column="30">_HRESULT_TYPEDEF_(E_SQLLE_ACCESSDENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1699" pos:column="1">#<cpp:directive pos:line="1699" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1699" pos:column="9">E_SQL_SP_ENABLE_PERMISSION_DENIED</name></cpp:macro> <cpp:value pos:line="1699" pos:column="43">_HRESULT_TYPEDEF_(E_SQL_SP_ENABLE_PERMISSION_DENIED__)</cpp:value></cpp:define>
<cpp:define pos:line="1700" pos:column="1">#<cpp:directive pos:line="1700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1700" pos:column="9">E_SQL_DEBUGGING_NOT_ENABLED_ON_SERVER</name></cpp:macro> <cpp:value pos:line="1700" pos:column="47">_HRESULT_TYPEDEF_(E_SQL_DEBUGGING_NOT_ENABLED_ON_SERVER__)</cpp:value></cpp:define>
<cpp:define pos:line="1701" pos:column="1">#<cpp:directive pos:line="1701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1701" pos:column="9">E_SQL_CANT_FIND_SSDEBUGPS_ON_CLIENT</name></cpp:macro> <cpp:value pos:line="1701" pos:column="45">_HRESULT_TYPEDEF_(E_SQL_CANT_FIND_SSDEBUGPS_ON_CLIENT__)</cpp:value></cpp:define>
<cpp:define pos:line="1702" pos:column="1">#<cpp:directive pos:line="1702" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1702" pos:column="9">E_SQL_EXECUTED_BUT_NOT_DEBUGGED</name></cpp:macro> <cpp:value pos:line="1702" pos:column="41">_HRESULT_TYPEDEF_(E_SQL_EXECUTED_BUT_NOT_DEBUGGED__)</cpp:value></cpp:define>
<cpp:define pos:line="1703" pos:column="1">#<cpp:directive pos:line="1703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1703" pos:column="9">E_SQL_VDT_INIT_RETURNED_SQL_ERROR</name></cpp:macro> <cpp:value pos:line="1703" pos:column="43">_HRESULT_TYPEDEF_(E_SQL_VDT_INIT_RETURNED_SQL_ERROR__)</cpp:value></cpp:define>
<cpp:define pos:line="1704" pos:column="1">#<cpp:directive pos:line="1704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1704" pos:column="9">E_ATTACH_FAILED_ABORT_SILENTLY</name></cpp:macro> <cpp:value pos:line="1704" pos:column="40">_HRESULT_TYPEDEF_(E_ATTACH_FAILED_ABORT_SILENTLY__)</cpp:value></cpp:define>
<cpp:define pos:line="1705" pos:column="1">#<cpp:directive pos:line="1705" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1705" pos:column="9">E_SQL_REGISTER_FAILED</name></cpp:macro> <cpp:value pos:line="1705" pos:column="31">_HRESULT_TYPEDEF_(E_SQL_REGISTER_FAILED__)</cpp:value></cpp:define>
<cpp:define pos:line="1706" pos:column="1">#<cpp:directive pos:line="1706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1706" pos:column="9">E_DE_NOT_SUPPORTED_PRE_8_0</name></cpp:macro> <cpp:value pos:line="1706" pos:column="36">_HRESULT_TYPEDEF_(E_DE_NOT_SUPPORTED_PRE_8_0__)</cpp:value></cpp:define>
<cpp:define pos:line="1707" pos:column="1">#<cpp:directive pos:line="1707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1707" pos:column="9">E_PROGRAM_DESTROY_PENDING</name></cpp:macro> <cpp:value pos:line="1707" pos:column="35">_HRESULT_TYPEDEF_(E_PROGRAM_DESTROY_PENDING__)</cpp:value></cpp:define>
<cpp:define pos:line="1708" pos:column="1">#<cpp:directive pos:line="1708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1708" pos:column="9">E_MANAGED_FEATURE_NOTSUPPORTED</name></cpp:macro> <cpp:value pos:line="1708" pos:column="40">_HRESULT_TYPEDEF_(E_MANAGED_FEATURE_NOTSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1709" pos:column="1">#<cpp:directive pos:line="1709" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1709" pos:column="9">E_OS_PERSONAL</name></cpp:macro> <cpp:value pos:line="1709" pos:column="23">_HRESULT_TYPEDEF_(E_OS_PERSONAL__)</cpp:value></cpp:define>
<cpp:define pos:line="1710" pos:column="1">#<cpp:directive pos:line="1710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1710" pos:column="9">E_SOURCE_SERVER_DISABLE_PARTIAL_TRUST</name></cpp:macro> <cpp:value pos:line="1710" pos:column="47">_HRESULT_TYPEDEF_(E_SOURCE_SERVER_DISABLE_PARTIAL_TRUST__)</cpp:value></cpp:define>
<cpp:define pos:line="1711" pos:column="1">#<cpp:directive pos:line="1711" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1711" pos:column="9">E_TRACE_DETACH_UNSUPPORTED</name></cpp:macro> <cpp:value pos:line="1711" pos:column="36">_HRESULT_TYPEDEF_(E_TRACE_DETACH_UNSUPPORTED__)</cpp:value></cpp:define>
<cpp:define pos:line="1712" pos:column="1">#<cpp:directive pos:line="1712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1712" pos:column="9">E_THREAD_NOT_FOUND</name></cpp:macro> <cpp:value pos:line="1712" pos:column="28">_HRESULT_TYPEDEF_(E_THREAD_NOT_FOUND__)</cpp:value></cpp:define>
<cpp:define pos:line="1713" pos:column="1">#<cpp:directive pos:line="1713" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1713" pos:column="9">E_CANNOT_AUTOATTACH_TO_SQLSERVER</name></cpp:macro> <cpp:value pos:line="1713" pos:column="42">_HRESULT_TYPEDEF_(E_CANNOT_AUTOATTACH_TO_SQLSERVER__)</cpp:value></cpp:define>
<cpp:define pos:line="1714" pos:column="1">#<cpp:directive pos:line="1714" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1714" pos:column="9">E_OBJECT_OUT_OF_SYNC</name></cpp:macro> <cpp:value pos:line="1714" pos:column="30">_HRESULT_TYPEDEF_(E_OBJECT_OUT_OF_SYNC__)</cpp:value></cpp:define>
































































<decl_stmt><decl><type><specifier pos:line="1779" pos:column="1">extern</specifier> <name pos:line="1779" pos:column="8">GUID</name></type> <name pos:line="1779" pos:column="13">guidVBLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1780" pos:column="1">extern</specifier> <name pos:line="1780" pos:column="8">GUID</name></type> <name pos:line="1780" pos:column="13">guidVBScriptLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1781" pos:column="1">extern</specifier> <name pos:line="1781" pos:column="8">GUID</name></type> <name pos:line="1781" pos:column="13">guidJScriptLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1782" pos:column="1">extern</specifier> <name pos:line="1782" pos:column="8">GUID</name></type> <name pos:line="1782" pos:column="13">guidCLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1783" pos:column="1">extern</specifier> <name pos:line="1783" pos:column="8">GUID</name></type> <name pos:line="1783" pos:column="13">guidCPPLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1784" pos:column="1">extern</specifier> <name pos:line="1784" pos:column="8">GUID</name></type> <name pos:line="1784" pos:column="13">guidSQLLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1785" pos:column="1">extern</specifier> <name pos:line="1785" pos:column="8">GUID</name></type> <name pos:line="1785" pos:column="13">guidScriptLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1786" pos:column="1">extern</specifier> <name pos:line="1786" pos:column="8">GUID</name></type> <name pos:line="1786" pos:column="13">guidSafeCLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1787" pos:column="1">extern</specifier> <name pos:line="1787" pos:column="8">GUID</name></type> <name pos:line="1787" pos:column="13">guidJSharpLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1788" pos:column="1">extern</specifier> <name pos:line="1788" pos:column="8">GUID</name></type> <name pos:line="1788" pos:column="13">guidManagedCLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1789" pos:column="1">extern</specifier> <name pos:line="1789" pos:column="8">GUID</name></type> <name pos:line="1789" pos:column="13">guidManagedCPPLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1790" pos:column="1">extern</specifier> <name pos:line="1790" pos:column="8">GUID</name></type> <name pos:line="1790" pos:column="13">guidCausalityBreakpointLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1791" pos:column="1">extern</specifier> <name pos:line="1791" pos:column="8">GUID</name></type> <name pos:line="1791" pos:column="13">guidFortranLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1792" pos:column="1">extern</specifier> <name pos:line="1792" pos:column="8">GUID</name></type> <name pos:line="1792" pos:column="13">guidMethodIdLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1793" pos:column="1">extern</specifier> <name pos:line="1793" pos:column="8">GUID</name></type> <name pos:line="1793" pos:column="13">guidClientScriptLang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1794" pos:column="1">extern</specifier> <name pos:line="1794" pos:column="8">GUID</name></type> <name pos:line="1794" pos:column="13">guidScriptEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1795" pos:column="1">extern</specifier> <name pos:line="1795" pos:column="8">GUID</name></type> <name pos:line="1795" pos:column="13">guidSQLEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1796" pos:column="1">extern</specifier> <name pos:line="1796" pos:column="8">GUID</name></type> <name pos:line="1796" pos:column="13">guidCOMPlusNativeEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1797" pos:column="1">extern</specifier> <name pos:line="1797" pos:column="8">GUID</name></type> <name pos:line="1797" pos:column="13">guidCOMPlusOnlyEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1798" pos:column="1">extern</specifier> <name pos:line="1798" pos:column="8">GUID</name></type> <name pos:line="1798" pos:column="13">guidNativeOnlyEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1799" pos:column="1">extern</specifier> <name pos:line="1799" pos:column="8">GUID</name></type> <name pos:line="1799" pos:column="13">guidMsOrclEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1800" pos:column="1">extern</specifier> <name pos:line="1800" pos:column="8">GUID</name></type> <name pos:line="1800" pos:column="13">guidEmbeddedCLREng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1801" pos:column="1">extern</specifier> <name pos:line="1801" pos:column="8">GUID</name></type> <name pos:line="1801" pos:column="13">guidSQLEng2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1802" pos:column="1">extern</specifier> <name pos:line="1802" pos:column="8">GUID</name></type> <name pos:line="1802" pos:column="13">guidCOMPlusSQLLocalEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1803" pos:column="1">extern</specifier> <name pos:line="1803" pos:column="8">GUID</name></type> <name pos:line="1803" pos:column="13">guidCOMPlusSQLRemoteEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1804" pos:column="1">extern</specifier> <name pos:line="1804" pos:column="8">GUID</name></type> <name pos:line="1804" pos:column="13">guidSilverlightEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1805" pos:column="1">extern</specifier> <name pos:line="1805" pos:column="8">GUID</name></type> <name pos:line="1805" pos:column="13">GUID_WorkflowDebugEngine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1806" pos:column="1">extern</specifier> <name pos:line="1806" pos:column="8">GUID</name></type> <name pos:line="1806" pos:column="13">guidMACSilverlightEng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1807" pos:column="1">extern</specifier> <name pos:line="1807" pos:column="8">GUID</name></type> <name pos:line="1807" pos:column="13">guidMicrosoftVendor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1808" pos:column="1">extern</specifier> <name pos:line="1808" pos:column="8">GUID</name></type> <name pos:line="1808" pos:column="13">guidLocalPortSupplier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1809" pos:column="1">extern</specifier> <name pos:line="1809" pos:column="8">GUID</name></type> <name pos:line="1809" pos:column="13">guidNativePortSupplier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1810" pos:column="1">extern</specifier> <name pos:line="1810" pos:column="8">GUID</name></type> <name pos:line="1810" pos:column="13">guidNativePipePortSupplier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1811" pos:column="1">extern</specifier> <name pos:line="1811" pos:column="8">GUID</name></type> <name pos:line="1811" pos:column="13">guidEmbeddedCLRPortSupplier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1812" pos:column="1">extern</specifier> <name pos:line="1812" pos:column="8">GUID</name></type> <name pos:line="1812" pos:column="13">guidFilterLocals</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1813" pos:column="1">extern</specifier> <name pos:line="1813" pos:column="8">GUID</name></type> <name pos:line="1813" pos:column="13">guidFilterAllLocals</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1814" pos:column="1">extern</specifier> <name pos:line="1814" pos:column="8">GUID</name></type> <name pos:line="1814" pos:column="13">guidFilterArgs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1815" pos:column="1">extern</specifier> <name pos:line="1815" pos:column="8">GUID</name></type> <name pos:line="1815" pos:column="13">guidFilterLocalsPlusArgs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1816" pos:column="1">extern</specifier> <name pos:line="1816" pos:column="8">GUID</name></type> <name pos:line="1816" pos:column="13">guidFilterAllLocalsPlusArgs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1817" pos:column="1">extern</specifier> <name pos:line="1817" pos:column="8">GUID</name></type> <name pos:line="1817" pos:column="13">guidFilterRegisters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1818" pos:column="1">extern</specifier> <name pos:line="1818" pos:column="8">GUID</name></type> <name pos:line="1818" pos:column="13">guidFilterThis</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1819" pos:column="1">extern</specifier> <name pos:line="1819" pos:column="8">GUID</name></type> <name pos:line="1819" pos:column="13">guidFilterAutoRegisters</name></decl>;</decl_stmt>
<comment type="line" pos:line="1820" pos:column="1">// GUIDs for GetExtendedInfo</comment>
<decl_stmt><decl><type><specifier pos:line="1821" pos:column="1">extern</specifier> <name pos:line="1821" pos:column="8">GUID</name></type> <name pos:line="1821" pos:column="13">guidDocument</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1822" pos:column="1">extern</specifier> <name pos:line="1822" pos:column="8">GUID</name></type> <name pos:line="1822" pos:column="13">guidCodeContext</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1823" pos:column="1">extern</specifier> <name pos:line="1823" pos:column="8">GUID</name></type> <name pos:line="1823" pos:column="13">guidCustomViewerSupported</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1824" pos:column="1">extern</specifier> <name pos:line="1824" pos:column="8">GUID</name></type> <name pos:line="1824" pos:column="13">guidSimpleGridViewer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1825" pos:column="1">extern</specifier> <name pos:line="1825" pos:column="8">GUID</name></type> <name pos:line="1825" pos:column="13">guidExtendedInfoSlot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1826" pos:column="1">extern</specifier> <name pos:line="1826" pos:column="8">GUID</name></type> <name pos:line="1826" pos:column="13">guidExtendedInfoSignature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1827" pos:column="1">extern</specifier> <name pos:line="1827" pos:column="8">GUID</name></type> <name pos:line="1827" pos:column="13">guidSourceHashMD5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1828" pos:column="1">extern</specifier> <name pos:line="1828" pos:column="8">GUID</name></type> <name pos:line="1828" pos:column="13">guidSourceHashSHA1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1829" pos:column="1">extern</specifier> <name pos:line="1829" pos:column="8">GUID</name></type> <name pos:line="1829" pos:column="13">guidMDANotification</name></decl>;</decl_stmt>

<enum pos:line="1831" pos:column="1">enum <name pos:line="1831" pos:column="6">enum_GETNAME_TYPE</name>
    <block pos:line="1832" pos:column="5">{	<decl><name pos:line="1832" pos:column="9">GN_NAME</name>	<init pos:line="1832" pos:column="17">= <expr><lit:literal type="number" pos:line="1832" pos:column="19">0</lit:literal></expr></init></decl><op:operator pos:line="1832" pos:column="20">,</op:operator>
	<decl><name pos:line="1833" pos:column="9">GN_FILENAME</name>	<init pos:line="1833" pos:column="25">= <expr><op:operator pos:line="1833" pos:column="27">(</op:operator> <name pos:line="1833" pos:column="29">GN_NAME</name> <op:operator pos:line="1833" pos:column="37">+</op:operator> <lit:literal type="number" pos:line="1833" pos:column="39">1</lit:literal> <op:operator pos:line="1833" pos:column="41">)</op:operator></expr></init></decl> <op:operator pos:line="1833" pos:column="43">,</op:operator>
	<decl><name pos:line="1834" pos:column="9">GN_BASENAME</name>	<init pos:line="1834" pos:column="25">= <expr><op:operator pos:line="1834" pos:column="27">(</op:operator> <name pos:line="1834" pos:column="29">GN_FILENAME</name> <op:operator pos:line="1834" pos:column="41">+</op:operator> <lit:literal type="number" pos:line="1834" pos:column="43">1</lit:literal> <op:operator pos:line="1834" pos:column="45">)</op:operator></expr></init></decl> <op:operator pos:line="1834" pos:column="47">,</op:operator>
	<decl><name pos:line="1835" pos:column="9">GN_MONIKERNAME</name>	<init pos:line="1835" pos:column="25">= <expr><op:operator pos:line="1835" pos:column="27">(</op:operator> <name pos:line="1835" pos:column="29">GN_BASENAME</name> <op:operator pos:line="1835" pos:column="41">+</op:operator> <lit:literal type="number" pos:line="1835" pos:column="43">1</lit:literal> <op:operator pos:line="1835" pos:column="45">)</op:operator></expr></init></decl> <op:operator pos:line="1835" pos:column="47">,</op:operator>
	<decl><name pos:line="1836" pos:column="9">GN_URL</name>	<init pos:line="1836" pos:column="17">= <expr><op:operator pos:line="1836" pos:column="19">(</op:operator> <name pos:line="1836" pos:column="21">GN_MONIKERNAME</name> <op:operator pos:line="1836" pos:column="36">+</op:operator> <lit:literal type="number" pos:line="1836" pos:column="38">1</lit:literal> <op:operator pos:line="1836" pos:column="40">)</op:operator></expr></init></decl> <op:operator pos:line="1836" pos:column="42">,</op:operator>
	<decl><name pos:line="1837" pos:column="9">GN_TITLE</name>	<init pos:line="1837" pos:column="25">= <expr><op:operator pos:line="1837" pos:column="27">(</op:operator> <name pos:line="1837" pos:column="29">GN_URL</name> <op:operator pos:line="1837" pos:column="36">+</op:operator> <lit:literal type="number" pos:line="1837" pos:column="38">1</lit:literal> <op:operator pos:line="1837" pos:column="40">)</op:operator></expr></init></decl> <op:operator pos:line="1837" pos:column="42">,</op:operator>
	<decl><name pos:line="1838" pos:column="9">GN_STARTPAGEURL</name>	<init pos:line="1838" pos:column="25">= <expr><op:operator pos:line="1838" pos:column="27">(</op:operator> <name pos:line="1838" pos:column="29">GN_TITLE</name> <op:operator pos:line="1838" pos:column="38">+</op:operator> <lit:literal type="number" pos:line="1838" pos:column="40">1</lit:literal> <op:operator pos:line="1838" pos:column="42">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="1840" pos:column="1">typedef <type><name pos:line="1840" pos:column="9">DWORD</name></type> <name pos:line="1840" pos:column="15">GETNAME_TYPE</name>;</typedef>


<enum pos:line="1843" pos:column="1">enum <name pos:line="1843" pos:column="6">enum_TEXT_POSITION_MAX</name>
    <block pos:line="1844" pos:column="5">{	<decl><name pos:line="1844" pos:column="9">TEXT_POSITION_MAX_LINE</name>	<init pos:line="1844" pos:column="33">= <expr><lit:literal type="number" pos:line="1844" pos:column="35">0xffffffff</lit:literal></expr></init></decl><op:operator pos:line="1844" pos:column="45">,</op:operator>
	<decl><name pos:line="1845" pos:column="9">TEXT_POSITION_MAX_COLUMN</name>	<init pos:line="1845" pos:column="41">= <expr><lit:literal type="number" pos:line="1845" pos:column="43">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="1847" pos:column="1">typedef <type><struct pos:line="1847" pos:column="9">struct <name pos:line="1847" pos:column="16">_tagTEXT_POSITION</name>
    <block pos:line="1848" pos:column="5">{<public type="default" pos:line="1848" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1849" pos:column="5">DWORD</name></type> <name pos:line="1849" pos:column="11">dwLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1850" pos:column="5">DWORD</name></type> <name pos:line="1850" pos:column="11">dwColumn</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1851" pos:column="9">TEXT_POSITION</name>;</typedef>

<typedef pos:line="1853" pos:column="1">typedef <type><struct pos:line="1853" pos:column="9">struct <name pos:line="1853" pos:column="16">tagBSTR_ARRAY</name>
    <block pos:line="1854" pos:column="5">{<public type="default" pos:line="1854" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1855" pos:column="5">DWORD</name></type> <name pos:line="1855" pos:column="11">dwCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1856" pos:column="5">BSTR</name> <type:modifier pos:line="1856" pos:column="10">*</type:modifier></type><name pos:line="1856" pos:column="11">Members</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1857" pos:column="9">BSTR_ARRAY</name>;</typedef>

<typedef pos:line="1859" pos:column="1">typedef <type><struct pos:line="1859" pos:column="9">struct <name pos:line="1859" pos:column="16">tagCONST_GUID_ARRAY</name>
    <block pos:line="1860" pos:column="5">{<public type="default" pos:line="1860" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1861" pos:column="5">DWORD</name></type> <name pos:line="1861" pos:column="11">dwCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1862" pos:column="5">const</specifier> <name pos:line="1862" pos:column="11">GUID</name> <type:modifier pos:line="1862" pos:column="16">*</type:modifier></type><name pos:line="1862" pos:column="17">Members</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1863" pos:column="9">CONST_GUID_ARRAY</name>;</typedef>

<typedef pos:line="1865" pos:column="1">typedef <type><struct pos:line="1865" pos:column="9">struct <name pos:line="1865" pos:column="16">tagGUID_ARRAY</name>
    <block pos:line="1866" pos:column="5">{<public type="default" pos:line="1866" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1867" pos:column="5">DWORD</name></type> <name pos:line="1867" pos:column="11">dwCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1868" pos:column="5">GUID</name> <type:modifier pos:line="1868" pos:column="10">*</type:modifier></type><name pos:line="1868" pos:column="11">Members</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1869" pos:column="9">GUID_ARRAY</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="1873" pos:column="1">extern</specifier> <name pos:line="1873" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1873" pos:column="22">__MIDL_itf_msdbg_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1874" pos:column="1">extern</specifier> <name pos:line="1874" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1874" pos:column="22">__MIDL_itf_msdbg_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="1876" pos:column="1">#<cpp:directive pos:line="1876" pos:column="2">ifndef</cpp:directive> <name pos:line="1876" pos:column="9">__IDebugCoreServer2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1877" pos:column="1">#<cpp:directive pos:line="1877" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1877" pos:column="9">__IDebugCoreServer2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1879" pos:column="1">/* interface IDebugCoreServer2 */</comment>
<comment type="block" pos:line="1880" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="1883" pos:column="1">enum <name pos:line="1883" pos:column="6">enum_MACHINE_INFO_FLAGS</name>
    <block pos:line="1884" pos:column="5">{	<decl><name pos:line="1884" pos:column="9">MCIFLAG_TERMINAL_SERVICES_AVAILABLE</name>	<init pos:line="1884" pos:column="49">= <expr><lit:literal type="number" pos:line="1884" pos:column="51">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="1886" pos:column="1">typedef <type><name pos:line="1886" pos:column="9">DWORD</name></type> <name pos:line="1886" pos:column="15">MACHINE_INFO_FLAGS</name>;</typedef>


<enum pos:line="1889" pos:column="1">enum <name pos:line="1889" pos:column="6">enum_MACHINE_INFO_FIELDS</name>
    <block pos:line="1890" pos:column="5">{	<decl><name pos:line="1890" pos:column="9">MCIF_NAME</name>	<init pos:line="1890" pos:column="25">= <expr><lit:literal type="number" pos:line="1890" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="1890" pos:column="30">,</op:operator>
	<decl><name pos:line="1891" pos:column="9">MCIF_FLAGS</name>	<init pos:line="1891" pos:column="25">= <expr><lit:literal type="number" pos:line="1891" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="1891" pos:column="30">,</op:operator>
	<decl><name pos:line="1892" pos:column="9">MCIF_ALL</name>	<init pos:line="1892" pos:column="25">= <expr><lit:literal type="number" pos:line="1892" pos:column="27">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="1894" pos:column="1">typedef <type><name pos:line="1894" pos:column="9">DWORD</name></type> <name pos:line="1894" pos:column="15">MACHINE_INFO_FIELDS</name>;</typedef>

<typedef pos:line="1896" pos:column="1">typedef <type><struct pos:line="1896" pos:column="9">struct <name pos:line="1896" pos:column="16">tagMACHINE_INFO</name>
    <block pos:line="1897" pos:column="5">{<public type="default" pos:line="1897" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1898" pos:column="5">MACHINE_INFO_FIELDS</name></type> <name pos:line="1898" pos:column="25">Fields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1899" pos:column="5">BSTR</name></type> <name pos:line="1899" pos:column="10">bstrName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1900" pos:column="5">MACHINE_INFO_FLAGS</name></type> <name pos:line="1900" pos:column="24">Flags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1901" pos:column="9">MACHINE_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="1904" pos:column="1">EXTERN_C</name> <specifier pos:line="1904" pos:column="10">const</specifier> <name pos:line="1904" pos:column="16">IID</name></type> <name pos:line="1904" pos:column="20">IID_IDebugCoreServer2</name></decl>;</decl_stmt>

<cpp:if pos:line="1906" pos:column="1">#<cpp:directive pos:line="1906" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1906" pos:column="5">defined</name><argument_list pos:line="1906" pos:column="12">(<argument><expr><name pos:line="1906" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1906" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1906" pos:column="29">!</op:operator><call><name pos:line="1906" pos:column="30">defined</name><argument_list pos:line="1906" pos:column="37">(<argument><expr><name pos:line="1906" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1908" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1908" pos:column="19">(<argument pos:line="1908" pos:column="20">"17bf8fa3-4c5a-49a3-b2f8-5942e1ea287e"</argument>)</argument_list></macro>
    <label><name pos:line="1909" pos:column="5">IDebugCoreServer2</name> :</label> <expr_stmt><expr pos:line="1909" pos:column="25">public <name pos:line="1909" pos:column="32">IUnknown</name>
    <block pos:line="1910" pos:column="5">{
    <expr pos:line="1911" pos:column="5">public<op:operator pos:line="1911" pos:column="11">:</op:operator>
        virtual <name pos:line="1912" pos:column="17">HRESULT</name> <name pos:line="1912" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1912" pos:column="43">GetMachineInfo</name><argument_list pos:line="1912" pos:column="57">( 
            <comment type="block" pos:line="1913" pos:column="13">/* [in] */</comment> <argument pos:line="1913" pos:column="24">MACHINE_INFO_FIELDS Fields</argument>,
            <comment type="block" pos:line="1914" pos:column="13">/* [out] */</comment> <argument pos:line="1914" pos:column="25">__RPC__out MACHINE_INFO *pMachineInfo</argument>)</argument_list></macro> <op:operator pos:line="1914" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="1914" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="1916" pos:column="9">virtual <name pos:line="1916" pos:column="17">HRESULT</name> <name pos:line="1916" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1916" pos:column="43">GetMachineName</name><argument_list pos:line="1916" pos:column="57">( 
            <comment type="block" pos:line="1917" pos:column="13">/* [out] */</comment> <argument pos:line="1917" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="1917" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="1917" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="1919" pos:column="9">virtual <name pos:line="1919" pos:column="17">HRESULT</name> <name pos:line="1919" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1919" pos:column="43">GetPortSupplier</name><argument_list pos:line="1919" pos:column="58">( 
            <comment type="block" pos:line="1920" pos:column="13">/* [in] */</comment> <argument pos:line="1920" pos:column="24">__RPC__in REFGUID guidPortSupplier</argument>,
            <comment type="block" pos:line="1921" pos:column="13">/* [out] */</comment> <argument pos:line="1921" pos:column="25">__RPC__deref_out_opt IDebugPortSupplier2 **ppPortSupplier</argument>)</argument_list></macro> <op:operator pos:line="1921" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="1921" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="1923" pos:column="9">virtual <name pos:line="1923" pos:column="17">HRESULT</name> <name pos:line="1923" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1923" pos:column="43">GetPort</name><argument_list pos:line="1923" pos:column="50">( 
            <comment type="block" pos:line="1924" pos:column="13">/* [in] */</comment> <argument pos:line="1924" pos:column="24">__RPC__in REFGUID guidPort</argument>,
            <comment type="block" pos:line="1925" pos:column="13">/* [out] */</comment> <argument pos:line="1925" pos:column="25">__RPC__deref_out_opt IDebugPort2 **ppPort</argument>)</argument_list></macro> <op:operator pos:line="1925" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="1925" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="1927" pos:column="9">virtual <name pos:line="1927" pos:column="17">HRESULT</name> <name pos:line="1927" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1927" pos:column="43">EnumPorts</name><argument_list pos:line="1927" pos:column="52">( 
            <comment type="block" pos:line="1928" pos:column="13">/* [out] */</comment> <argument pos:line="1928" pos:column="25">__RPC__deref_out_opt IEnumDebugPorts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="1928" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1928" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="1930" pos:column="9">virtual <name pos:line="1930" pos:column="17">HRESULT</name> <name pos:line="1930" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1930" pos:column="43">EnumPortSuppliers</name><argument_list pos:line="1930" pos:column="60">( 
            <comment type="block" pos:line="1931" pos:column="13">/* [out] */</comment> <argument pos:line="1931" pos:column="25">__RPC__deref_out_opt IEnumDebugPortSuppliers2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="1931" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="1931" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="1933" pos:column="9">virtual <name pos:line="1933" pos:column="17">HRESULT</name> <name pos:line="1933" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1933" pos:column="43">GetMachineUtilities_V7</name><argument_list pos:line="1933" pos:column="65">( 
            <comment type="block" pos:line="1934" pos:column="13">/* [out] */</comment> <argument pos:line="1934" pos:column="25">__RPC__deref_out_opt IDebugMDMUtil2_V7 **ppUtil</argument>)</argument_list></macro> <op:operator pos:line="1934" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="1934" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1938" pos:column="1">#<cpp:directive pos:line="1938" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1938" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1940" pos:column="5">typedef <type><struct pos:line="1940" pos:column="13">struct <name pos:line="1940" pos:column="20">IDebugCoreServer2Vtbl</name>
    <block pos:line="1941" pos:column="5">{<public type="default" pos:line="1941" pos:column="6">
        <function_decl><type><name pos:line="1942" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1944" pos:column="9">HRESULT</name></type> ( <name pos:line="1944" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1944" pos:column="37">*</type:modifier><name pos:line="1944" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1944" pos:column="54">( 
            <param><decl><type><name pos:line="1945" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1945" pos:column="31">*</type:modifier></type> <name pos:line="1945" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1946" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1946" pos:column="24">__RPC__in</name> <name pos:line="1946" pos:column="34">REFIID</name></type> <name pos:line="1946" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1947" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1948" pos:column="13">__RPC__deref_out</name>  <name pos:line="1948" pos:column="31">void</name> <type:modifier pos:line="1948" pos:column="36">*</type:modifier><type:modifier pos:line="1948" pos:column="37">*</type:modifier></type><name pos:line="1948" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1950" pos:column="9">ULONG</name></type> ( <name pos:line="1950" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1950" pos:column="35">*</type:modifier><name pos:line="1950" pos:column="36">AddRef</name> )<parameter_list pos:line="1950" pos:column="44">( 
            <param><decl><type><name pos:line="1951" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1951" pos:column="31">*</type:modifier></type> <name pos:line="1951" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1953" pos:column="9">ULONG</name></type> ( <name pos:line="1953" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1953" pos:column="35">*</type:modifier><name pos:line="1953" pos:column="36">Release</name> )<parameter_list pos:line="1953" pos:column="45">( 
            <param><decl><type><name pos:line="1954" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1954" pos:column="31">*</type:modifier></type> <name pos:line="1954" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1956" pos:column="9">HRESULT</name></type> ( <name pos:line="1956" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1956" pos:column="37">*</type:modifier><name pos:line="1956" pos:column="38">GetMachineInfo</name> )<parameter_list pos:line="1956" pos:column="54">( 
            <param><decl><type><name pos:line="1957" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1957" pos:column="31">*</type:modifier></type> <name pos:line="1957" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1958" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1958" pos:column="24">MACHINE_INFO_FIELDS</name></type> <name pos:line="1958" pos:column="44">Fields</name></decl></param>,
            <comment type="block" pos:line="1959" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1959" pos:column="25">__RPC__out</name> <name pos:line="1959" pos:column="36">MACHINE_INFO</name> <type:modifier pos:line="1959" pos:column="49">*</type:modifier></type><name pos:line="1959" pos:column="50">pMachineInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1961" pos:column="9">HRESULT</name></type> ( <name pos:line="1961" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1961" pos:column="37">*</type:modifier><name pos:line="1961" pos:column="38">GetMachineName</name> )<parameter_list pos:line="1961" pos:column="54">( 
            <param><decl><type><name pos:line="1962" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1962" pos:column="31">*</type:modifier></type> <name pos:line="1962" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1963" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1963" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1963" pos:column="46">BSTR</name> <type:modifier pos:line="1963" pos:column="51">*</type:modifier></type><name pos:line="1963" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1965" pos:column="9">HRESULT</name></type> ( <name pos:line="1965" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1965" pos:column="37">*</type:modifier><name pos:line="1965" pos:column="38">GetPortSupplier</name> )<parameter_list pos:line="1965" pos:column="55">( 
            <param><decl><type><name pos:line="1966" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1966" pos:column="31">*</type:modifier></type> <name pos:line="1966" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1967" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1967" pos:column="24">__RPC__in</name> <name pos:line="1967" pos:column="34">REFGUID</name></type> <name pos:line="1967" pos:column="42">guidPortSupplier</name></decl></param>,
            <comment type="block" pos:line="1968" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1968" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1968" pos:column="46">IDebugPortSupplier2</name> <type:modifier pos:line="1968" pos:column="66">*</type:modifier><type:modifier pos:line="1968" pos:column="67">*</type:modifier></type><name pos:line="1968" pos:column="68">ppPortSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1970" pos:column="9">HRESULT</name></type> ( <name pos:line="1970" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1970" pos:column="37">*</type:modifier><name pos:line="1970" pos:column="38">GetPort</name> )<parameter_list pos:line="1970" pos:column="47">( 
            <param><decl><type><name pos:line="1971" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1971" pos:column="31">*</type:modifier></type> <name pos:line="1971" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1972" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1972" pos:column="24">__RPC__in</name> <name pos:line="1972" pos:column="34">REFGUID</name></type> <name pos:line="1972" pos:column="42">guidPort</name></decl></param>,
            <comment type="block" pos:line="1973" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1973" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1973" pos:column="46">IDebugPort2</name> <type:modifier pos:line="1973" pos:column="58">*</type:modifier><type:modifier pos:line="1973" pos:column="59">*</type:modifier></type><name pos:line="1973" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1975" pos:column="9">HRESULT</name></type> ( <name pos:line="1975" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1975" pos:column="37">*</type:modifier><name pos:line="1975" pos:column="38">EnumPorts</name> )<parameter_list pos:line="1975" pos:column="49">( 
            <param><decl><type><name pos:line="1976" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1976" pos:column="31">*</type:modifier></type> <name pos:line="1976" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1977" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1977" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1977" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="1977" pos:column="63">*</type:modifier><type:modifier pos:line="1977" pos:column="64">*</type:modifier></type><name pos:line="1977" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1979" pos:column="9">HRESULT</name></type> ( <name pos:line="1979" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1979" pos:column="37">*</type:modifier><name pos:line="1979" pos:column="38">EnumPortSuppliers</name> )<parameter_list pos:line="1979" pos:column="57">( 
            <param><decl><type><name pos:line="1980" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1980" pos:column="31">*</type:modifier></type> <name pos:line="1980" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1981" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1981" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1981" pos:column="46">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="1981" pos:column="71">*</type:modifier><type:modifier pos:line="1981" pos:column="72">*</type:modifier></type><name pos:line="1981" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1983" pos:column="9">HRESULT</name></type> ( <name pos:line="1983" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1983" pos:column="37">*</type:modifier><name pos:line="1983" pos:column="38">GetMachineUtilities_V7</name> )<parameter_list pos:line="1983" pos:column="62">( 
            <param><decl><type><name pos:line="1984" pos:column="13">IDebugCoreServer2</name> <type:modifier pos:line="1984" pos:column="31">*</type:modifier></type> <name pos:line="1984" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1985" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1985" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1985" pos:column="46">IDebugMDMUtil2_V7</name> <type:modifier pos:line="1985" pos:column="64">*</type:modifier><type:modifier pos:line="1985" pos:column="65">*</type:modifier></type><name pos:line="1985" pos:column="66">ppUtil</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1987" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1988" pos:column="7">IDebugCoreServer2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1990" pos:column="5">interface</name></type> <name pos:line="1990" pos:column="15">IDebugCoreServer2</name>
    <argument_list pos:line="1991" pos:column="5">{
        <argument><expr><name pos:line="1992" pos:column="9">CONST_VTBL</name> struct <name pos:line="1992" pos:column="27">IDebugCoreServer2Vtbl</name> <op:operator pos:line="1992" pos:column="49">*</op:operator><name pos:line="1992" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1997" pos:column="1">#<cpp:directive pos:line="1997" pos:column="2">ifdef</cpp:directive> <name pos:line="1997" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2000" pos:column="1">#<cpp:directive pos:line="2000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2000" pos:column="9">IDebugCoreServer2_QueryInterface</name><parameter_list pos:line="2000" pos:column="41">(<param><type><name pos:line="2000" pos:column="42">This</name></type></param>,<param><type><name pos:line="2000" pos:column="47">riid</name></type></param>,<param><type><name pos:line="2000" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2001" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2003" pos:column="1">#<cpp:directive pos:line="2003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2003" pos:column="9">IDebugCoreServer2_AddRef</name><parameter_list pos:line="2003" pos:column="33">(<param><type><name pos:line="2003" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2004" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2006" pos:column="1">#<cpp:directive pos:line="2006" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2006" pos:column="9">IDebugCoreServer2_Release</name><parameter_list pos:line="2006" pos:column="34">(<param><type><name pos:line="2006" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2007" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2010" pos:column="1">#<cpp:directive pos:line="2010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2010" pos:column="9">IDebugCoreServer2_GetMachineInfo</name><parameter_list pos:line="2010" pos:column="41">(<param><type><name pos:line="2010" pos:column="42">This</name></type></param>,<param><type><name pos:line="2010" pos:column="47">Fields</name></type></param>,<param><type><name pos:line="2010" pos:column="54">pMachineInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2011" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMachineInfo(This,Fields,pMachineInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2013" pos:column="1">#<cpp:directive pos:line="2013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2013" pos:column="9">IDebugCoreServer2_GetMachineName</name><parameter_list pos:line="2013" pos:column="41">(<param><type><name pos:line="2013" pos:column="42">This</name></type></param>,<param><type><name pos:line="2013" pos:column="47">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2014" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMachineName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2016" pos:column="1">#<cpp:directive pos:line="2016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2016" pos:column="9">IDebugCoreServer2_GetPortSupplier</name><parameter_list pos:line="2016" pos:column="42">(<param><type><name pos:line="2016" pos:column="43">This</name></type></param>,<param><type><name pos:line="2016" pos:column="48">guidPortSupplier</name></type></param>,<param><type><name pos:line="2016" pos:column="65">ppPortSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2017" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplier(This,guidPortSupplier,ppPortSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="2019" pos:column="1">#<cpp:directive pos:line="2019" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2019" pos:column="9">IDebugCoreServer2_GetPort</name><parameter_list pos:line="2019" pos:column="34">(<param><type><name pos:line="2019" pos:column="35">This</name></type></param>,<param><type><name pos:line="2019" pos:column="40">guidPort</name></type></param>,<param><type><name pos:line="2019" pos:column="49">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2020" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPort(This,guidPort,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2022" pos:column="1">#<cpp:directive pos:line="2022" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2022" pos:column="9">IDebugCoreServer2_EnumPorts</name><parameter_list pos:line="2022" pos:column="36">(<param><type><name pos:line="2022" pos:column="37">This</name></type></param>,<param><type><name pos:line="2022" pos:column="42">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2023" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPorts(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2025" pos:column="1">#<cpp:directive pos:line="2025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2025" pos:column="9">IDebugCoreServer2_EnumPortSuppliers</name><parameter_list pos:line="2025" pos:column="44">(<param><type><name pos:line="2025" pos:column="45">This</name></type></param>,<param><type><name pos:line="2025" pos:column="50">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2026" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPortSuppliers(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2028" pos:column="1">#<cpp:directive pos:line="2028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2028" pos:column="9">IDebugCoreServer2_GetMachineUtilities_V7</name><parameter_list pos:line="2028" pos:column="49">(<param><type><name pos:line="2028" pos:column="50">This</name></type></param>,<param><type><name pos:line="2028" pos:column="55">ppUtil</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2029" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMachineUtilities_V7(This,ppUtil) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2031" pos:column="1">#<cpp:directive pos:line="2031" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2031" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2034" pos:column="1">#<cpp:directive pos:line="2034" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2034" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2039" pos:column="1">#<cpp:directive pos:line="2039" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2039" pos:column="9">/* __IDebugCoreServer2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2042" pos:column="1">#<cpp:directive pos:line="2042" pos:column="2">ifndef</cpp:directive> <name pos:line="2042" pos:column="9">__IDebugCoreServer3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2043" pos:column="1">#<cpp:directive pos:line="2043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2043" pos:column="9">__IDebugCoreServer3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2045" pos:column="1">/* interface IDebugCoreServer3 */</comment>
<comment type="block" pos:line="2046" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="2048" pos:column="1">typedef 
<type><enum pos:line="2049" pos:column="1">enum <name pos:line="2049" pos:column="6">tagCONNECTION_PROTOCOL</name>
    <block pos:line="2050" pos:column="5">{	<decl><name pos:line="2050" pos:column="9">CONNECTION_NONE</name>	<init pos:line="2050" pos:column="25">= <expr><lit:literal type="number" pos:line="2050" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="2050" pos:column="28">,</op:operator>
	<decl><name pos:line="2051" pos:column="9">CONNECTION_UNKNOWN</name>	<init pos:line="2051" pos:column="33">= <expr><lit:literal type="number" pos:line="2051" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="2051" pos:column="36">,</op:operator>
	<decl><name pos:line="2052" pos:column="9">CONNECTION_LOCAL</name>	<init pos:line="2052" pos:column="33">= <expr><lit:literal type="number" pos:line="2052" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="2052" pos:column="36">,</op:operator>
	<decl><name pos:line="2053" pos:column="9">CONNECTION_PIPE</name>	<init pos:line="2053" pos:column="25">= <expr><lit:literal type="number" pos:line="2053" pos:column="27">3</lit:literal></expr></init></decl><op:operator pos:line="2053" pos:column="28">,</op:operator>
	<decl><name pos:line="2054" pos:column="9">CONNECTION_TCPIP</name>	<init pos:line="2054" pos:column="33">= <expr><lit:literal type="number" pos:line="2054" pos:column="35">4</lit:literal></expr></init></decl><op:operator pos:line="2054" pos:column="36">,</op:operator>
	<decl><name pos:line="2055" pos:column="9">CONNECTION_HTTP</name>	<init pos:line="2055" pos:column="25">= <expr><lit:literal type="number" pos:line="2055" pos:column="27">5</lit:literal></expr></init></decl><op:operator pos:line="2055" pos:column="28">,</op:operator>
	<decl><name pos:line="2056" pos:column="9">CONNECTION_OTHER</name>	<init pos:line="2056" pos:column="33">= <expr><lit:literal type="number" pos:line="2056" pos:column="35">6</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="2057" pos:column="9">CONNECTION_PROTOCOL</name>;</typedef>


<decl_stmt><decl><type><name pos:line="2060" pos:column="1">EXTERN_C</name> <specifier pos:line="2060" pos:column="10">const</specifier> <name pos:line="2060" pos:column="16">IID</name></type> <name pos:line="2060" pos:column="20">IID_IDebugCoreServer3</name></decl>;</decl_stmt>

<cpp:if pos:line="2062" pos:column="1">#<cpp:directive pos:line="2062" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2062" pos:column="5">defined</name><argument_list pos:line="2062" pos:column="12">(<argument><expr><name pos:line="2062" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2062" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2062" pos:column="29">!</op:operator><call><name pos:line="2062" pos:column="30">defined</name><argument_list pos:line="2062" pos:column="37">(<argument><expr><name pos:line="2062" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2064" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2064" pos:column="19">(<argument pos:line="2064" pos:column="20">"12c1180e-c257-4485-9800-af484b699713"</argument>)</argument_list></macro>
    <label><name pos:line="2065" pos:column="5">IDebugCoreServer3</name> :</label> <expr_stmt><expr pos:line="2065" pos:column="25">public <name pos:line="2065" pos:column="32">IDebugCoreServer2</name>
    <block pos:line="2066" pos:column="5">{
    <expr pos:line="2067" pos:column="5">public<op:operator pos:line="2067" pos:column="11">:</op:operator>
        virtual <name pos:line="2068" pos:column="17">HRESULT</name> <name pos:line="2068" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2068" pos:column="43">GetServerName</name><argument_list pos:line="2068" pos:column="56">( 
            <comment type="block" pos:line="2069" pos:column="13">/* [out] */</comment> <argument pos:line="2069" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="2069" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2069" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2071" pos:column="9">virtual <name pos:line="2071" pos:column="17">HRESULT</name> <name pos:line="2071" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2071" pos:column="43">GetServerFriendlyName</name><argument_list pos:line="2071" pos:column="64">( 
            <comment type="block" pos:line="2072" pos:column="13">/* [out] */</comment> <argument pos:line="2072" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="2072" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2072" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2074" pos:column="9">virtual <name pos:line="2074" pos:column="17">HRESULT</name> <name pos:line="2074" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2074" pos:column="43">EnableAutoAttach</name><argument_list pos:line="2074" pos:column="59">( 
            <comment type="block" pos:line="2075" pos:column="13">/* [full][size_is][in] */</comment> <argument pos:line="2075" pos:column="39">__RPC__in_ecount_full_opt(celtSpecificEngines) GUID *rgguidSpecificEngines</argument>,
            <comment type="block" pos:line="2076" pos:column="13">/* [in] */</comment> <argument pos:line="2076" pos:column="24">DWORD celtSpecificEngines</argument>,
            <comment type="block" pos:line="2077" pos:column="13">/* [full][in] */</comment> <argument pos:line="2077" pos:column="30">__RPC__in_opt LPCOLESTR pszStartPageUrl</argument>,
            <comment type="block" pos:line="2078" pos:column="13">/* [out] */</comment> <argument pos:line="2078" pos:column="25">__RPC__deref_out_opt BSTR *pbstrSessionId</argument>)</argument_list></macro> <op:operator pos:line="2078" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2078" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2080" pos:column="9">virtual <name pos:line="2080" pos:column="17">HRESULT</name> <name pos:line="2080" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2080" pos:column="43">DiagnoseWebDebuggingError</name><argument_list pos:line="2080" pos:column="68">( 
            <comment type="block" pos:line="2081" pos:column="13">/* [full][in] */</comment> <argument pos:line="2081" pos:column="30">__RPC__in_opt LPCWSTR pszUrl</argument>)</argument_list></macro> <op:operator pos:line="2081" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="2081" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="2083" pos:column="9">virtual <name pos:line="2083" pos:column="17">HRESULT</name> <name pos:line="2083" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2083" pos:column="43">CreateInstanceInServer</name><argument_list pos:line="2083" pos:column="65">( 
            <comment type="block" pos:line="2084" pos:column="13">/* [full][in] */</comment> <argument pos:line="2084" pos:column="30">__RPC__in_opt LPCWSTR szDll</argument>,
            <comment type="block" pos:line="2085" pos:column="13">/* [in] */</comment> <argument pos:line="2085" pos:column="24">WORD wLangId</argument>,
            <comment type="block" pos:line="2086" pos:column="13">/* [in] */</comment> <argument pos:line="2086" pos:column="24">__RPC__in REFCLSID clsidObject</argument>,
            <comment type="block" pos:line="2087" pos:column="13">/* [in] */</comment> <argument pos:line="2087" pos:column="24">__RPC__in REFIID riid</argument>,
            <comment type="block" pos:line="2088" pos:column="13">/* [iid_is][out] */</comment> <argument pos:line="2088" pos:column="33">__RPC__deref_out_opt void **ppvObject</argument>)</argument_list></macro> <op:operator pos:line="2088" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="2088" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="2090" pos:column="9">virtual <name pos:line="2090" pos:column="17">HRESULT</name> <name pos:line="2090" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2090" pos:column="43">QueryIsLocal</name><argument_list pos:line="2090" pos:column="55">( <argument><expr><name pos:line="2090" pos:column="57">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2090" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2090" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2092" pos:column="9">virtual <name pos:line="2092" pos:column="17">HRESULT</name> <name pos:line="2092" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2092" pos:column="43">GetConnectionProtocol</name><argument_list pos:line="2092" pos:column="64">( 
            <comment type="block" pos:line="2093" pos:column="13">/* [out] */</comment> <argument pos:line="2093" pos:column="25">__RPC__out CONNECTION_PROTOCOL *pProtocol</argument>)</argument_list></macro> <op:operator pos:line="2093" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2093" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2095" pos:column="9">virtual <name pos:line="2095" pos:column="17">HRESULT</name> <name pos:line="2095" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2095" pos:column="43">DisableAutoAttach</name><argument_list pos:line="2095" pos:column="60">( <argument><expr><name pos:line="2095" pos:column="62">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2095" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2095" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2099" pos:column="1">#<cpp:directive pos:line="2099" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2099" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2101" pos:column="5">typedef <type><struct pos:line="2101" pos:column="13">struct <name pos:line="2101" pos:column="20">IDebugCoreServer3Vtbl</name>
    <block pos:line="2102" pos:column="5">{<public type="default" pos:line="2102" pos:column="6">
        <function_decl><type><name pos:line="2103" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2105" pos:column="9">HRESULT</name></type> ( <name pos:line="2105" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2105" pos:column="37">*</type:modifier><name pos:line="2105" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2105" pos:column="54">( 
            <param><decl><type><name pos:line="2106" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2106" pos:column="31">*</type:modifier></type> <name pos:line="2106" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2107" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2107" pos:column="24">__RPC__in</name> <name pos:line="2107" pos:column="34">REFIID</name></type> <name pos:line="2107" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2108" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2109" pos:column="13">__RPC__deref_out</name>  <name pos:line="2109" pos:column="31">void</name> <type:modifier pos:line="2109" pos:column="36">*</type:modifier><type:modifier pos:line="2109" pos:column="37">*</type:modifier></type><name pos:line="2109" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2111" pos:column="9">ULONG</name></type> ( <name pos:line="2111" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2111" pos:column="35">*</type:modifier><name pos:line="2111" pos:column="36">AddRef</name> )<parameter_list pos:line="2111" pos:column="44">( 
            <param><decl><type><name pos:line="2112" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2112" pos:column="31">*</type:modifier></type> <name pos:line="2112" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2114" pos:column="9">ULONG</name></type> ( <name pos:line="2114" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2114" pos:column="35">*</type:modifier><name pos:line="2114" pos:column="36">Release</name> )<parameter_list pos:line="2114" pos:column="45">( 
            <param><decl><type><name pos:line="2115" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2115" pos:column="31">*</type:modifier></type> <name pos:line="2115" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2117" pos:column="9">HRESULT</name></type> ( <name pos:line="2117" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2117" pos:column="37">*</type:modifier><name pos:line="2117" pos:column="38">GetMachineInfo</name> )<parameter_list pos:line="2117" pos:column="54">( 
            <param><decl><type><name pos:line="2118" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2118" pos:column="31">*</type:modifier></type> <name pos:line="2118" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2119" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2119" pos:column="24">MACHINE_INFO_FIELDS</name></type> <name pos:line="2119" pos:column="44">Fields</name></decl></param>,
            <comment type="block" pos:line="2120" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2120" pos:column="25">__RPC__out</name> <name pos:line="2120" pos:column="36">MACHINE_INFO</name> <type:modifier pos:line="2120" pos:column="49">*</type:modifier></type><name pos:line="2120" pos:column="50">pMachineInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2122" pos:column="9">HRESULT</name></type> ( <name pos:line="2122" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2122" pos:column="37">*</type:modifier><name pos:line="2122" pos:column="38">GetMachineName</name> )<parameter_list pos:line="2122" pos:column="54">( 
            <param><decl><type><name pos:line="2123" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2123" pos:column="31">*</type:modifier></type> <name pos:line="2123" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2124" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2124" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2124" pos:column="46">BSTR</name> <type:modifier pos:line="2124" pos:column="51">*</type:modifier></type><name pos:line="2124" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2126" pos:column="9">HRESULT</name></type> ( <name pos:line="2126" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2126" pos:column="37">*</type:modifier><name pos:line="2126" pos:column="38">GetPortSupplier</name> )<parameter_list pos:line="2126" pos:column="55">( 
            <param><decl><type><name pos:line="2127" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2127" pos:column="31">*</type:modifier></type> <name pos:line="2127" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2128" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2128" pos:column="24">__RPC__in</name> <name pos:line="2128" pos:column="34">REFGUID</name></type> <name pos:line="2128" pos:column="42">guidPortSupplier</name></decl></param>,
            <comment type="block" pos:line="2129" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2129" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2129" pos:column="46">IDebugPortSupplier2</name> <type:modifier pos:line="2129" pos:column="66">*</type:modifier><type:modifier pos:line="2129" pos:column="67">*</type:modifier></type><name pos:line="2129" pos:column="68">ppPortSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2131" pos:column="9">HRESULT</name></type> ( <name pos:line="2131" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2131" pos:column="37">*</type:modifier><name pos:line="2131" pos:column="38">GetPort</name> )<parameter_list pos:line="2131" pos:column="47">( 
            <param><decl><type><name pos:line="2132" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2132" pos:column="31">*</type:modifier></type> <name pos:line="2132" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2133" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2133" pos:column="24">__RPC__in</name> <name pos:line="2133" pos:column="34">REFGUID</name></type> <name pos:line="2133" pos:column="42">guidPort</name></decl></param>,
            <comment type="block" pos:line="2134" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2134" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2134" pos:column="46">IDebugPort2</name> <type:modifier pos:line="2134" pos:column="58">*</type:modifier><type:modifier pos:line="2134" pos:column="59">*</type:modifier></type><name pos:line="2134" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2136" pos:column="9">HRESULT</name></type> ( <name pos:line="2136" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2136" pos:column="37">*</type:modifier><name pos:line="2136" pos:column="38">EnumPorts</name> )<parameter_list pos:line="2136" pos:column="49">( 
            <param><decl><type><name pos:line="2137" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2137" pos:column="31">*</type:modifier></type> <name pos:line="2137" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2138" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2138" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2138" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="2138" pos:column="63">*</type:modifier><type:modifier pos:line="2138" pos:column="64">*</type:modifier></type><name pos:line="2138" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2140" pos:column="9">HRESULT</name></type> ( <name pos:line="2140" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2140" pos:column="37">*</type:modifier><name pos:line="2140" pos:column="38">EnumPortSuppliers</name> )<parameter_list pos:line="2140" pos:column="57">( 
            <param><decl><type><name pos:line="2141" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2141" pos:column="31">*</type:modifier></type> <name pos:line="2141" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2142" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2142" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2142" pos:column="46">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="2142" pos:column="71">*</type:modifier><type:modifier pos:line="2142" pos:column="72">*</type:modifier></type><name pos:line="2142" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2144" pos:column="9">HRESULT</name></type> ( <name pos:line="2144" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2144" pos:column="37">*</type:modifier><name pos:line="2144" pos:column="38">GetMachineUtilities_V7</name> )<parameter_list pos:line="2144" pos:column="62">( 
            <param><decl><type><name pos:line="2145" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2145" pos:column="31">*</type:modifier></type> <name pos:line="2145" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2146" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2146" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2146" pos:column="46">IDebugMDMUtil2_V7</name> <type:modifier pos:line="2146" pos:column="64">*</type:modifier><type:modifier pos:line="2146" pos:column="65">*</type:modifier></type><name pos:line="2146" pos:column="66">ppUtil</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2148" pos:column="9">HRESULT</name></type> ( <name pos:line="2148" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2148" pos:column="37">*</type:modifier><name pos:line="2148" pos:column="38">GetServerName</name> )<parameter_list pos:line="2148" pos:column="53">( 
            <param><decl><type><name pos:line="2149" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2149" pos:column="31">*</type:modifier></type> <name pos:line="2149" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2150" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2150" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2150" pos:column="46">BSTR</name> <type:modifier pos:line="2150" pos:column="51">*</type:modifier></type><name pos:line="2150" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2152" pos:column="9">HRESULT</name></type> ( <name pos:line="2152" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2152" pos:column="37">*</type:modifier><name pos:line="2152" pos:column="38">GetServerFriendlyName</name> )<parameter_list pos:line="2152" pos:column="61">( 
            <param><decl><type><name pos:line="2153" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2153" pos:column="31">*</type:modifier></type> <name pos:line="2153" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2154" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2154" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2154" pos:column="46">BSTR</name> <type:modifier pos:line="2154" pos:column="51">*</type:modifier></type><name pos:line="2154" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2156" pos:column="9">HRESULT</name> <argument_list pos:line="2156" pos:column="17">( <argument pos:line="2156" pos:column="19">STDMETHODCALLTYPE *EnableAutoAttach</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2156" pos:column="56">(</op:operator> 
            <name pos:line="2157" pos:column="13">IDebugCoreServer3</name> <op:operator pos:line="2157" pos:column="31">*</op:operator> <name pos:line="2157" pos:column="33">This</name><op:operator pos:line="2157" pos:column="37">,</op:operator>
            <comment type="block" pos:line="2158" pos:column="13">/* [full][size_is][in] */</comment> <macro><name pos:line="2158" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="2158" pos:column="64">(<argument pos:line="2158" pos:column="65">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="2158" pos:column="86">GUID</name> <op:operator pos:line="2158" pos:column="91">*</op:operator><name pos:line="2158" pos:column="92">rgguidSpecificEngines</name><op:operator pos:line="2158" pos:column="113">,</op:operator>
            <comment type="block" pos:line="2159" pos:column="13">/* [in] */</comment> <name pos:line="2159" pos:column="24">DWORD</name> <name pos:line="2159" pos:column="30">celtSpecificEngines</name><op:operator pos:line="2159" pos:column="49">,</op:operator>
            <comment type="block" pos:line="2160" pos:column="13">/* [full][in] */</comment> <name pos:line="2160" pos:column="30">__RPC__in_opt</name> <name pos:line="2160" pos:column="44">LPCOLESTR</name> <name pos:line="2160" pos:column="54">pszStartPageUrl</name><op:operator pos:line="2160" pos:column="69">,</op:operator>
            <comment type="block" pos:line="2161" pos:column="13">/* [out] */</comment> <name pos:line="2161" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2161" pos:column="46">BSTR</name> <op:operator pos:line="2161" pos:column="51">*</op:operator><name pos:line="2161" pos:column="52">pbstrSessionId</name><op:operator pos:line="2161" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2163" pos:column="9">HRESULT</name></type> ( <name pos:line="2163" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2163" pos:column="37">*</type:modifier><name pos:line="2163" pos:column="38">DiagnoseWebDebuggingError</name> )<parameter_list pos:line="2163" pos:column="65">( 
            <param><decl><type><name pos:line="2164" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2164" pos:column="31">*</type:modifier></type> <name pos:line="2164" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2165" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="2165" pos:column="30">__RPC__in_opt</name> <name pos:line="2165" pos:column="44">LPCWSTR</name></type> <name pos:line="2165" pos:column="52">pszUrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2167" pos:column="9">HRESULT</name></type> ( <name pos:line="2167" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2167" pos:column="37">*</type:modifier><name pos:line="2167" pos:column="38">CreateInstanceInServer</name> )<parameter_list pos:line="2167" pos:column="62">( 
            <param><decl><type><name pos:line="2168" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2168" pos:column="31">*</type:modifier></type> <name pos:line="2168" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2169" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="2169" pos:column="30">__RPC__in_opt</name> <name pos:line="2169" pos:column="44">LPCWSTR</name></type> <name pos:line="2169" pos:column="52">szDll</name></decl></param>,
            <comment type="block" pos:line="2170" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2170" pos:column="24">WORD</name></type> <name pos:line="2170" pos:column="29">wLangId</name></decl></param>,
            <comment type="block" pos:line="2171" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2171" pos:column="24">__RPC__in</name> <name pos:line="2171" pos:column="34">REFCLSID</name></type> <name pos:line="2171" pos:column="43">clsidObject</name></decl></param>,
            <comment type="block" pos:line="2172" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2172" pos:column="24">__RPC__in</name> <name pos:line="2172" pos:column="34">REFIID</name></type> <name pos:line="2172" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2173" pos:column="13">/* [iid_is][out] */</comment> <param><decl><type><name pos:line="2173" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2173" pos:column="54">void</name> <type:modifier pos:line="2173" pos:column="59">*</type:modifier><type:modifier pos:line="2173" pos:column="60">*</type:modifier></type><name pos:line="2173" pos:column="61">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2175" pos:column="9">HRESULT</name></type> ( <name pos:line="2175" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2175" pos:column="37">*</type:modifier><name pos:line="2175" pos:column="38">QueryIsLocal</name> )<parameter_list pos:line="2175" pos:column="52">( 
            <param><decl><type><name pos:line="2176" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2176" pos:column="31">*</type:modifier></type> <name pos:line="2176" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2178" pos:column="9">HRESULT</name></type> ( <name pos:line="2178" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2178" pos:column="37">*</type:modifier><name pos:line="2178" pos:column="38">GetConnectionProtocol</name> )<parameter_list pos:line="2178" pos:column="61">( 
            <param><decl><type><name pos:line="2179" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2179" pos:column="31">*</type:modifier></type> <name pos:line="2179" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="2180" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2180" pos:column="25">__RPC__out</name> <name pos:line="2180" pos:column="36">CONNECTION_PROTOCOL</name> <type:modifier pos:line="2180" pos:column="56">*</type:modifier></type><name pos:line="2180" pos:column="57">pProtocol</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2182" pos:column="9">HRESULT</name></type> ( <name pos:line="2182" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2182" pos:column="37">*</type:modifier><name pos:line="2182" pos:column="38">DisableAutoAttach</name> )<parameter_list pos:line="2182" pos:column="57">( 
            <param><decl><type><name pos:line="2183" pos:column="13">IDebugCoreServer3</name> <type:modifier pos:line="2183" pos:column="31">*</type:modifier></type> <name pos:line="2183" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2185" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2186" pos:column="7">IDebugCoreServer3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2188" pos:column="5">interface</name></type> <name pos:line="2188" pos:column="15">IDebugCoreServer3</name>
    <argument_list pos:line="2189" pos:column="5">{
        <argument><expr><name pos:line="2190" pos:column="9">CONST_VTBL</name> struct <name pos:line="2190" pos:column="27">IDebugCoreServer3Vtbl</name> <op:operator pos:line="2190" pos:column="49">*</op:operator><name pos:line="2190" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2195" pos:column="1">#<cpp:directive pos:line="2195" pos:column="2">ifdef</cpp:directive> <name pos:line="2195" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2198" pos:column="1">#<cpp:directive pos:line="2198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2198" pos:column="9">IDebugCoreServer3_QueryInterface</name><parameter_list pos:line="2198" pos:column="41">(<param><type><name pos:line="2198" pos:column="42">This</name></type></param>,<param><type><name pos:line="2198" pos:column="47">riid</name></type></param>,<param><type><name pos:line="2198" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2199" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2201" pos:column="1">#<cpp:directive pos:line="2201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2201" pos:column="9">IDebugCoreServer3_AddRef</name><parameter_list pos:line="2201" pos:column="33">(<param><type><name pos:line="2201" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2202" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2204" pos:column="1">#<cpp:directive pos:line="2204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2204" pos:column="9">IDebugCoreServer3_Release</name><parameter_list pos:line="2204" pos:column="34">(<param><type><name pos:line="2204" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2205" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2208" pos:column="1">#<cpp:directive pos:line="2208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2208" pos:column="9">IDebugCoreServer3_GetMachineInfo</name><parameter_list pos:line="2208" pos:column="41">(<param><type><name pos:line="2208" pos:column="42">This</name></type></param>,<param><type><name pos:line="2208" pos:column="47">Fields</name></type></param>,<param><type><name pos:line="2208" pos:column="54">pMachineInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2209" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMachineInfo(This,Fields,pMachineInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2211" pos:column="1">#<cpp:directive pos:line="2211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2211" pos:column="9">IDebugCoreServer3_GetMachineName</name><parameter_list pos:line="2211" pos:column="41">(<param><type><name pos:line="2211" pos:column="42">This</name></type></param>,<param><type><name pos:line="2211" pos:column="47">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2212" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMachineName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2214" pos:column="1">#<cpp:directive pos:line="2214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2214" pos:column="9">IDebugCoreServer3_GetPortSupplier</name><parameter_list pos:line="2214" pos:column="42">(<param><type><name pos:line="2214" pos:column="43">This</name></type></param>,<param><type><name pos:line="2214" pos:column="48">guidPortSupplier</name></type></param>,<param><type><name pos:line="2214" pos:column="65">ppPortSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2215" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplier(This,guidPortSupplier,ppPortSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="2217" pos:column="1">#<cpp:directive pos:line="2217" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2217" pos:column="9">IDebugCoreServer3_GetPort</name><parameter_list pos:line="2217" pos:column="34">(<param><type><name pos:line="2217" pos:column="35">This</name></type></param>,<param><type><name pos:line="2217" pos:column="40">guidPort</name></type></param>,<param><type><name pos:line="2217" pos:column="49">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2218" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPort(This,guidPort,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2220" pos:column="1">#<cpp:directive pos:line="2220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2220" pos:column="9">IDebugCoreServer3_EnumPorts</name><parameter_list pos:line="2220" pos:column="36">(<param><type><name pos:line="2220" pos:column="37">This</name></type></param>,<param><type><name pos:line="2220" pos:column="42">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2221" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPorts(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2223" pos:column="1">#<cpp:directive pos:line="2223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2223" pos:column="9">IDebugCoreServer3_EnumPortSuppliers</name><parameter_list pos:line="2223" pos:column="44">(<param><type><name pos:line="2223" pos:column="45">This</name></type></param>,<param><type><name pos:line="2223" pos:column="50">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2224" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPortSuppliers(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2226" pos:column="1">#<cpp:directive pos:line="2226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2226" pos:column="9">IDebugCoreServer3_GetMachineUtilities_V7</name><parameter_list pos:line="2226" pos:column="49">(<param><type><name pos:line="2226" pos:column="50">This</name></type></param>,<param><type><name pos:line="2226" pos:column="55">ppUtil</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2227" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMachineUtilities_V7(This,ppUtil) )</cpp:value></cpp:define> 


<cpp:define pos:line="2230" pos:column="1">#<cpp:directive pos:line="2230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2230" pos:column="9">IDebugCoreServer3_GetServerName</name><parameter_list pos:line="2230" pos:column="40">(<param><type><name pos:line="2230" pos:column="41">This</name></type></param>,<param><type><name pos:line="2230" pos:column="46">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2231" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServerName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2233" pos:column="1">#<cpp:directive pos:line="2233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2233" pos:column="9">IDebugCoreServer3_GetServerFriendlyName</name><parameter_list pos:line="2233" pos:column="48">(<param><type><name pos:line="2233" pos:column="49">This</name></type></param>,<param><type><name pos:line="2233" pos:column="54">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2234" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServerFriendlyName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2236" pos:column="1">#<cpp:directive pos:line="2236" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2236" pos:column="9">IDebugCoreServer3_EnableAutoAttach</name><parameter_list pos:line="2236" pos:column="43">(<param><type><name pos:line="2236" pos:column="44">This</name></type></param>,<param><type><name pos:line="2236" pos:column="49">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="2236" pos:column="71">celtSpecificEngines</name></type></param>,<param><type><name pos:line="2236" pos:column="91">pszStartPageUrl</name></type></param>,<param><type><name pos:line="2236" pos:column="107">pbstrSessionId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2237" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnableAutoAttach(This,rgguidSpecificEngines,celtSpecificEngines,pszStartPageUrl,pbstrSessionId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2239" pos:column="1">#<cpp:directive pos:line="2239" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2239" pos:column="9">IDebugCoreServer3_DiagnoseWebDebuggingError</name><parameter_list pos:line="2239" pos:column="52">(<param><type><name pos:line="2239" pos:column="53">This</name></type></param>,<param><type><name pos:line="2239" pos:column="58">pszUrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2240" pos:column="5">( (This)-&gt;lpVtbl -&gt; DiagnoseWebDebuggingError(This,pszUrl) )</cpp:value></cpp:define> 

<cpp:define pos:line="2242" pos:column="1">#<cpp:directive pos:line="2242" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2242" pos:column="9">IDebugCoreServer3_CreateInstanceInServer</name><parameter_list pos:line="2242" pos:column="49">(<param><type><name pos:line="2242" pos:column="50">This</name></type></param>,<param><type><name pos:line="2242" pos:column="55">szDll</name></type></param>,<param><type><name pos:line="2242" pos:column="61">wLangId</name></type></param>,<param><type><name pos:line="2242" pos:column="69">clsidObject</name></type></param>,<param><type><name pos:line="2242" pos:column="81">riid</name></type></param>,<param><type><name pos:line="2242" pos:column="86">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2243" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateInstanceInServer(This,szDll,wLangId,clsidObject,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2245" pos:column="1">#<cpp:directive pos:line="2245" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2245" pos:column="9">IDebugCoreServer3_QueryIsLocal</name><parameter_list pos:line="2245" pos:column="39">(<param><type><name pos:line="2245" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2246" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryIsLocal(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2248" pos:column="1">#<cpp:directive pos:line="2248" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2248" pos:column="9">IDebugCoreServer3_GetConnectionProtocol</name><parameter_list pos:line="2248" pos:column="48">(<param><type><name pos:line="2248" pos:column="49">This</name></type></param>,<param><type><name pos:line="2248" pos:column="54">pProtocol</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2249" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetConnectionProtocol(This,pProtocol) )</cpp:value></cpp:define> 

<cpp:define pos:line="2251" pos:column="1">#<cpp:directive pos:line="2251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2251" pos:column="9">IDebugCoreServer3_DisableAutoAttach</name><parameter_list pos:line="2251" pos:column="44">(<param><type><name pos:line="2251" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2252" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisableAutoAttach(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2254" pos:column="1">#<cpp:directive pos:line="2254" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2254" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2257" pos:column="1">#<cpp:directive pos:line="2257" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2257" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2262" pos:column="1">#<cpp:directive pos:line="2262" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2262" pos:column="9">/* __IDebugCoreServer3_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="2265" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0002 */</comment>
<comment type="block" pos:line="2266" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="2268" pos:column="1">#<cpp:directive pos:line="2268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2268" pos:column="9">IDebugMachine2_V7</name></cpp:macro> <cpp:value pos:line="2268" pos:column="27">IDebugCoreServer2</cpp:value></cpp:define>
<cpp:define pos:line="2269" pos:column="1">#<cpp:directive pos:line="2269" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2269" pos:column="9">IID_IDebugMachine2_V7</name></cpp:macro> <cpp:value pos:line="2269" pos:column="31">IID_IDebugCoreServer2</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="2272" pos:column="1">extern</specifier> <name pos:line="2272" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="2272" pos:column="22">__MIDL_itf_msdbg_0000_0002_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="2273" pos:column="1">extern</specifier> <name pos:line="2273" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="2273" pos:column="22">__MIDL_itf_msdbg_0000_0002_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="2275" pos:column="1">#<cpp:directive pos:line="2275" pos:column="2">ifndef</cpp:directive> <name pos:line="2275" pos:column="9">__IDebugMachineEx2_V7_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2276" pos:column="1">#<cpp:directive pos:line="2276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2276" pos:column="9">__IDebugMachineEx2_V7_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2278" pos:column="1">/* interface IDebugMachineEx2_V7 */</comment>
<comment type="block" pos:line="2279" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2282" pos:column="1">EXTERN_C</name> <specifier pos:line="2282" pos:column="10">const</specifier> <name pos:line="2282" pos:column="16">IID</name></type> <name pos:line="2282" pos:column="20">IID_IDebugMachineEx2_V7</name></decl>;</decl_stmt>

<cpp:if pos:line="2284" pos:column="1">#<cpp:directive pos:line="2284" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2284" pos:column="5">defined</name><argument_list pos:line="2284" pos:column="12">(<argument><expr><name pos:line="2284" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2284" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2284" pos:column="29">!</op:operator><call><name pos:line="2284" pos:column="30">defined</name><argument_list pos:line="2284" pos:column="37">(<argument><expr><name pos:line="2284" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2286" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2286" pos:column="19">(<argument pos:line="2286" pos:column="20">"ae27b230-a0bf-47ff-a2d1-22c29a178eac"</argument>)</argument_list></macro>
    <label><name pos:line="2287" pos:column="5">IDebugMachineEx2_V7</name> :</label> <expr_stmt><expr pos:line="2287" pos:column="27">public <name pos:line="2287" pos:column="34">IUnknown</name>
    <block pos:line="2288" pos:column="5">{
    <expr pos:line="2289" pos:column="5">public<op:operator pos:line="2289" pos:column="11">:</op:operator>
        virtual <name pos:line="2290" pos:column="17">HRESULT</name> <name pos:line="2290" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2290" pos:column="43">EnableAutoAttachOnProgramCreate</name><argument_list pos:line="2290" pos:column="74">( 
            <comment type="block" pos:line="2291" pos:column="13">/* [in] */</comment> <argument pos:line="2291" pos:column="24">__RPC__in LPCWSTR pszProcessNames</argument>,
            <comment type="block" pos:line="2292" pos:column="13">/* [in] */</comment> <argument pos:line="2292" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="2293" pos:column="13">/* [in] */</comment> <argument pos:line="2293" pos:column="24">__RPC__in LPCWSTR pszSessionId</argument>,
            <comment type="block" pos:line="2294" pos:column="13">/* [out] */</comment> <argument pos:line="2294" pos:column="25">__RPC__out DWORD *pdwCookie</argument>)</argument_list></macro> <op:operator pos:line="2294" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="2294" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="2296" pos:column="9">virtual <name pos:line="2296" pos:column="17">HRESULT</name> <name pos:line="2296" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2296" pos:column="43">DisableAutoAttachOnEvent</name><argument_list pos:line="2296" pos:column="67">( 
            <comment type="block" pos:line="2297" pos:column="13">/* [in] */</comment> <argument pos:line="2297" pos:column="24">DWORD dwCookie</argument>)</argument_list></macro> <op:operator pos:line="2297" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="2297" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="2299" pos:column="9">virtual <name pos:line="2299" pos:column="17">HRESULT</name> <name pos:line="2299" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2299" pos:column="43">GetPortSupplierEx</name><argument_list pos:line="2299" pos:column="60">( 
            <comment type="block" pos:line="2300" pos:column="13">/* [in] */</comment> <argument pos:line="2300" pos:column="24">__RPC__in LPCOLESTR wstrRegistryRoot</argument>,
            <comment type="block" pos:line="2301" pos:column="13">/* [in] */</comment> <argument pos:line="2301" pos:column="24">__RPC__in REFGUID guidPortSupplier</argument>,
            <comment type="block" pos:line="2302" pos:column="13">/* [out] */</comment> <argument pos:line="2302" pos:column="25">__RPC__deref_out_opt IDebugPortSupplier2 **ppPortSupplier</argument>)</argument_list></macro> <op:operator pos:line="2302" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="2302" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="2304" pos:column="9">virtual <name pos:line="2304" pos:column="17">HRESULT</name> <name pos:line="2304" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2304" pos:column="43">GetPortEx</name><argument_list pos:line="2304" pos:column="52">( 
            <comment type="block" pos:line="2305" pos:column="13">/* [in] */</comment> <argument pos:line="2305" pos:column="24">__RPC__in LPCOLESTR wstrRegistryRoot</argument>,
            <comment type="block" pos:line="2306" pos:column="13">/* [in] */</comment> <argument pos:line="2306" pos:column="24">__RPC__in REFGUID guidPort</argument>,
            <comment type="block" pos:line="2307" pos:column="13">/* [out] */</comment> <argument pos:line="2307" pos:column="25">__RPC__deref_out_opt IDebugPort2 **ppPort</argument>)</argument_list></macro> <op:operator pos:line="2307" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2307" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2309" pos:column="9">virtual <name pos:line="2309" pos:column="17">HRESULT</name> <name pos:line="2309" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2309" pos:column="43">EnumPortsEx</name><argument_list pos:line="2309" pos:column="54">( 
            <comment type="block" pos:line="2310" pos:column="13">/* [in] */</comment> <argument pos:line="2310" pos:column="24">__RPC__in LPCOLESTR wstrRegistryRoot</argument>,
            <comment type="block" pos:line="2311" pos:column="13">/* [out] */</comment> <argument pos:line="2311" pos:column="25">__RPC__deref_out_opt IEnumDebugPorts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2311" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2311" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2313" pos:column="9">virtual <name pos:line="2313" pos:column="17">HRESULT</name> <name pos:line="2313" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2313" pos:column="43">EnumPortSuppliersEx</name><argument_list pos:line="2313" pos:column="62">( 
            <comment type="block" pos:line="2314" pos:column="13">/* [in] */</comment> <argument pos:line="2314" pos:column="24">__RPC__in LPCOLESTR wstrRegistryRoot</argument>,
            <comment type="block" pos:line="2315" pos:column="13">/* [out] */</comment> <argument pos:line="2315" pos:column="25">__RPC__deref_out_opt IEnumDebugPortSuppliers2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2315" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="2315" pos:column="83">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2319" pos:column="1">#<cpp:directive pos:line="2319" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2319" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2321" pos:column="5">typedef <type><struct pos:line="2321" pos:column="13">struct <name pos:line="2321" pos:column="20">IDebugMachineEx2_V7Vtbl</name>
    <block pos:line="2322" pos:column="5">{<public type="default" pos:line="2322" pos:column="6">
        <function_decl><type><name pos:line="2323" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2325" pos:column="9">HRESULT</name></type> ( <name pos:line="2325" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2325" pos:column="37">*</type:modifier><name pos:line="2325" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2325" pos:column="54">( 
            <param><decl><type><name pos:line="2326" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2326" pos:column="33">*</type:modifier></type> <name pos:line="2326" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2327" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2327" pos:column="24">__RPC__in</name> <name pos:line="2327" pos:column="34">REFIID</name></type> <name pos:line="2327" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2328" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2329" pos:column="13">__RPC__deref_out</name>  <name pos:line="2329" pos:column="31">void</name> <type:modifier pos:line="2329" pos:column="36">*</type:modifier><type:modifier pos:line="2329" pos:column="37">*</type:modifier></type><name pos:line="2329" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2331" pos:column="9">ULONG</name></type> ( <name pos:line="2331" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2331" pos:column="35">*</type:modifier><name pos:line="2331" pos:column="36">AddRef</name> )<parameter_list pos:line="2331" pos:column="44">( 
            <param><decl><type><name pos:line="2332" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2332" pos:column="33">*</type:modifier></type> <name pos:line="2332" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2334" pos:column="9">ULONG</name></type> ( <name pos:line="2334" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2334" pos:column="35">*</type:modifier><name pos:line="2334" pos:column="36">Release</name> )<parameter_list pos:line="2334" pos:column="45">( 
            <param><decl><type><name pos:line="2335" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2335" pos:column="33">*</type:modifier></type> <name pos:line="2335" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2337" pos:column="9">HRESULT</name></type> ( <name pos:line="2337" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2337" pos:column="37">*</type:modifier><name pos:line="2337" pos:column="38">EnableAutoAttachOnProgramCreate</name> )<parameter_list pos:line="2337" pos:column="71">( 
            <param><decl><type><name pos:line="2338" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2338" pos:column="33">*</type:modifier></type> <name pos:line="2338" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2339" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2339" pos:column="24">__RPC__in</name> <name pos:line="2339" pos:column="34">LPCWSTR</name></type> <name pos:line="2339" pos:column="42">pszProcessNames</name></decl></param>,
            <comment type="block" pos:line="2340" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2340" pos:column="24">__RPC__in</name> <name pos:line="2340" pos:column="34">REFGUID</name></type> <name pos:line="2340" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="2341" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2341" pos:column="24">__RPC__in</name> <name pos:line="2341" pos:column="34">LPCWSTR</name></type> <name pos:line="2341" pos:column="42">pszSessionId</name></decl></param>,
            <comment type="block" pos:line="2342" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2342" pos:column="25">__RPC__out</name> <name pos:line="2342" pos:column="36">DWORD</name> <type:modifier pos:line="2342" pos:column="42">*</type:modifier></type><name pos:line="2342" pos:column="43">pdwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2344" pos:column="9">HRESULT</name></type> ( <name pos:line="2344" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2344" pos:column="37">*</type:modifier><name pos:line="2344" pos:column="38">DisableAutoAttachOnEvent</name> )<parameter_list pos:line="2344" pos:column="64">( 
            <param><decl><type><name pos:line="2345" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2345" pos:column="33">*</type:modifier></type> <name pos:line="2345" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2346" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2346" pos:column="24">DWORD</name></type> <name pos:line="2346" pos:column="30">dwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2348" pos:column="9">HRESULT</name></type> ( <name pos:line="2348" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2348" pos:column="37">*</type:modifier><name pos:line="2348" pos:column="38">GetPortSupplierEx</name> )<parameter_list pos:line="2348" pos:column="57">( 
            <param><decl><type><name pos:line="2349" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2349" pos:column="33">*</type:modifier></type> <name pos:line="2349" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2350" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2350" pos:column="24">__RPC__in</name> <name pos:line="2350" pos:column="34">LPCOLESTR</name></type> <name pos:line="2350" pos:column="44">wstrRegistryRoot</name></decl></param>,
            <comment type="block" pos:line="2351" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2351" pos:column="24">__RPC__in</name> <name pos:line="2351" pos:column="34">REFGUID</name></type> <name pos:line="2351" pos:column="42">guidPortSupplier</name></decl></param>,
            <comment type="block" pos:line="2352" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2352" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2352" pos:column="46">IDebugPortSupplier2</name> <type:modifier pos:line="2352" pos:column="66">*</type:modifier><type:modifier pos:line="2352" pos:column="67">*</type:modifier></type><name pos:line="2352" pos:column="68">ppPortSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2354" pos:column="9">HRESULT</name></type> ( <name pos:line="2354" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2354" pos:column="37">*</type:modifier><name pos:line="2354" pos:column="38">GetPortEx</name> )<parameter_list pos:line="2354" pos:column="49">( 
            <param><decl><type><name pos:line="2355" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2355" pos:column="33">*</type:modifier></type> <name pos:line="2355" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2356" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2356" pos:column="24">__RPC__in</name> <name pos:line="2356" pos:column="34">LPCOLESTR</name></type> <name pos:line="2356" pos:column="44">wstrRegistryRoot</name></decl></param>,
            <comment type="block" pos:line="2357" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2357" pos:column="24">__RPC__in</name> <name pos:line="2357" pos:column="34">REFGUID</name></type> <name pos:line="2357" pos:column="42">guidPort</name></decl></param>,
            <comment type="block" pos:line="2358" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2358" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2358" pos:column="46">IDebugPort2</name> <type:modifier pos:line="2358" pos:column="58">*</type:modifier><type:modifier pos:line="2358" pos:column="59">*</type:modifier></type><name pos:line="2358" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2360" pos:column="9">HRESULT</name></type> ( <name pos:line="2360" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2360" pos:column="37">*</type:modifier><name pos:line="2360" pos:column="38">EnumPortsEx</name> )<parameter_list pos:line="2360" pos:column="51">( 
            <param><decl><type><name pos:line="2361" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2361" pos:column="33">*</type:modifier></type> <name pos:line="2361" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2362" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2362" pos:column="24">__RPC__in</name> <name pos:line="2362" pos:column="34">LPCOLESTR</name></type> <name pos:line="2362" pos:column="44">wstrRegistryRoot</name></decl></param>,
            <comment type="block" pos:line="2363" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2363" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2363" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="2363" pos:column="63">*</type:modifier><type:modifier pos:line="2363" pos:column="64">*</type:modifier></type><name pos:line="2363" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2365" pos:column="9">HRESULT</name></type> ( <name pos:line="2365" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2365" pos:column="37">*</type:modifier><name pos:line="2365" pos:column="38">EnumPortSuppliersEx</name> )<parameter_list pos:line="2365" pos:column="59">( 
            <param><decl><type><name pos:line="2366" pos:column="13">IDebugMachineEx2_V7</name> <type:modifier pos:line="2366" pos:column="33">*</type:modifier></type> <name pos:line="2366" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2367" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2367" pos:column="24">__RPC__in</name> <name pos:line="2367" pos:column="34">LPCOLESTR</name></type> <name pos:line="2367" pos:column="44">wstrRegistryRoot</name></decl></param>,
            <comment type="block" pos:line="2368" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2368" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2368" pos:column="46">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="2368" pos:column="71">*</type:modifier><type:modifier pos:line="2368" pos:column="72">*</type:modifier></type><name pos:line="2368" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2370" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2371" pos:column="7">IDebugMachineEx2_V7Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2373" pos:column="5">interface</name></type> <name pos:line="2373" pos:column="15">IDebugMachineEx2_V7</name>
    <argument_list pos:line="2374" pos:column="5">{
        <argument><expr><name pos:line="2375" pos:column="9">CONST_VTBL</name> struct <name pos:line="2375" pos:column="27">IDebugMachineEx2_V7Vtbl</name> <op:operator pos:line="2375" pos:column="51">*</op:operator><name pos:line="2375" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2380" pos:column="1">#<cpp:directive pos:line="2380" pos:column="2">ifdef</cpp:directive> <name pos:line="2380" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2383" pos:column="1">#<cpp:directive pos:line="2383" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2383" pos:column="9">IDebugMachineEx2_V7_QueryInterface</name><parameter_list pos:line="2383" pos:column="43">(<param><type><name pos:line="2383" pos:column="44">This</name></type></param>,<param><type><name pos:line="2383" pos:column="49">riid</name></type></param>,<param><type><name pos:line="2383" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2384" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2386" pos:column="1">#<cpp:directive pos:line="2386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2386" pos:column="9">IDebugMachineEx2_V7_AddRef</name><parameter_list pos:line="2386" pos:column="35">(<param><type><name pos:line="2386" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2387" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2389" pos:column="1">#<cpp:directive pos:line="2389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2389" pos:column="9">IDebugMachineEx2_V7_Release</name><parameter_list pos:line="2389" pos:column="36">(<param><type><name pos:line="2389" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2390" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2393" pos:column="1">#<cpp:directive pos:line="2393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2393" pos:column="9">IDebugMachineEx2_V7_EnableAutoAttachOnProgramCreate</name><parameter_list pos:line="2393" pos:column="60">(<param><type><name pos:line="2393" pos:column="61">This</name></type></param>,<param><type><name pos:line="2393" pos:column="66">pszProcessNames</name></type></param>,<param><type><name pos:line="2393" pos:column="82">guidEngine</name></type></param>,<param><type><name pos:line="2393" pos:column="93">pszSessionId</name></type></param>,<param><type><name pos:line="2393" pos:column="106">pdwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2394" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnableAutoAttachOnProgramCreate(This,pszProcessNames,guidEngine,pszSessionId,pdwCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="2396" pos:column="1">#<cpp:directive pos:line="2396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2396" pos:column="9">IDebugMachineEx2_V7_DisableAutoAttachOnEvent</name><parameter_list pos:line="2396" pos:column="53">(<param><type><name pos:line="2396" pos:column="54">This</name></type></param>,<param><type><name pos:line="2396" pos:column="59">dwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2397" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisableAutoAttachOnEvent(This,dwCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="2399" pos:column="1">#<cpp:directive pos:line="2399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2399" pos:column="9">IDebugMachineEx2_V7_GetPortSupplierEx</name><parameter_list pos:line="2399" pos:column="46">(<param><type><name pos:line="2399" pos:column="47">This</name></type></param>,<param><type><name pos:line="2399" pos:column="52">wstrRegistryRoot</name></type></param>,<param><type><name pos:line="2399" pos:column="69">guidPortSupplier</name></type></param>,<param><type><name pos:line="2399" pos:column="86">ppPortSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2400" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplierEx(This,wstrRegistryRoot,guidPortSupplier,ppPortSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="2402" pos:column="1">#<cpp:directive pos:line="2402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2402" pos:column="9">IDebugMachineEx2_V7_GetPortEx</name><parameter_list pos:line="2402" pos:column="38">(<param><type><name pos:line="2402" pos:column="39">This</name></type></param>,<param><type><name pos:line="2402" pos:column="44">wstrRegistryRoot</name></type></param>,<param><type><name pos:line="2402" pos:column="61">guidPort</name></type></param>,<param><type><name pos:line="2402" pos:column="70">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2403" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortEx(This,wstrRegistryRoot,guidPort,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2405" pos:column="1">#<cpp:directive pos:line="2405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2405" pos:column="9">IDebugMachineEx2_V7_EnumPortsEx</name><parameter_list pos:line="2405" pos:column="40">(<param><type><name pos:line="2405" pos:column="41">This</name></type></param>,<param><type><name pos:line="2405" pos:column="46">wstrRegistryRoot</name></type></param>,<param><type><name pos:line="2405" pos:column="63">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2406" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPortsEx(This,wstrRegistryRoot,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2408" pos:column="1">#<cpp:directive pos:line="2408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2408" pos:column="9">IDebugMachineEx2_V7_EnumPortSuppliersEx</name><parameter_list pos:line="2408" pos:column="48">(<param><type><name pos:line="2408" pos:column="49">This</name></type></param>,<param><type><name pos:line="2408" pos:column="54">wstrRegistryRoot</name></type></param>,<param><type><name pos:line="2408" pos:column="71">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2409" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPortSuppliersEx(This,wstrRegistryRoot,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2411" pos:column="1">#<cpp:directive pos:line="2411" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2411" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2414" pos:column="1">#<cpp:directive pos:line="2414" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2414" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2419" pos:column="1">#<cpp:directive pos:line="2419" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2419" pos:column="9">/* __IDebugMachineEx2_V7_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2422" pos:column="1">#<cpp:directive pos:line="2422" pos:column="2">ifndef</cpp:directive> <name pos:line="2422" pos:column="9">__IDebugPortSupplier2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2423" pos:column="1">#<cpp:directive pos:line="2423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2423" pos:column="9">__IDebugPortSupplier2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2425" pos:column="1">/* interface IDebugPortSupplier2 */</comment>
<comment type="block" pos:line="2426" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2429" pos:column="1">EXTERN_C</name> <specifier pos:line="2429" pos:column="10">const</specifier> <name pos:line="2429" pos:column="16">IID</name></type> <name pos:line="2429" pos:column="20">IID_IDebugPortSupplier2</name></decl>;</decl_stmt>

<cpp:if pos:line="2431" pos:column="1">#<cpp:directive pos:line="2431" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2431" pos:column="5">defined</name><argument_list pos:line="2431" pos:column="12">(<argument><expr><name pos:line="2431" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2431" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2431" pos:column="29">!</op:operator><call><name pos:line="2431" pos:column="30">defined</name><argument_list pos:line="2431" pos:column="37">(<argument><expr><name pos:line="2431" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2433" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2433" pos:column="19">(<argument pos:line="2433" pos:column="20">"53f68191-7b2f-4f14-8e55-40b1b6e5df66"</argument>)</argument_list></macro>
    <label><name pos:line="2434" pos:column="5">IDebugPortSupplier2</name> :</label> <expr_stmt><expr pos:line="2434" pos:column="27">public <name pos:line="2434" pos:column="34">IUnknown</name>
    <block pos:line="2435" pos:column="5">{
    <expr pos:line="2436" pos:column="5">public<op:operator pos:line="2436" pos:column="11">:</op:operator>
        virtual <name pos:line="2437" pos:column="17">HRESULT</name> <name pos:line="2437" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2437" pos:column="43">GetPortSupplierName</name><argument_list pos:line="2437" pos:column="62">( 
            <comment type="block" pos:line="2438" pos:column="13">/* [out] */</comment> <argument pos:line="2438" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="2438" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2438" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2440" pos:column="9">virtual <name pos:line="2440" pos:column="17">HRESULT</name> <name pos:line="2440" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2440" pos:column="43">GetPortSupplierId</name><argument_list pos:line="2440" pos:column="60">( 
            <comment type="block" pos:line="2441" pos:column="13">/* [out] */</comment> <argument pos:line="2441" pos:column="25">__RPC__out GUID *pguidPortSupplier</argument>)</argument_list></macro> <op:operator pos:line="2441" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2441" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="2443" pos:column="9">virtual <name pos:line="2443" pos:column="17">HRESULT</name> <name pos:line="2443" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2443" pos:column="43">GetPort</name><argument_list pos:line="2443" pos:column="50">( 
            <comment type="block" pos:line="2444" pos:column="13">/* [in] */</comment> <argument pos:line="2444" pos:column="24">__RPC__in REFGUID guidPort</argument>,
            <comment type="block" pos:line="2445" pos:column="13">/* [out] */</comment> <argument pos:line="2445" pos:column="25">__RPC__deref_out_opt IDebugPort2 **ppPort</argument>)</argument_list></macro> <op:operator pos:line="2445" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2445" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2447" pos:column="9">virtual <name pos:line="2447" pos:column="17">HRESULT</name> <name pos:line="2447" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2447" pos:column="43">EnumPorts</name><argument_list pos:line="2447" pos:column="52">( 
            <comment type="block" pos:line="2448" pos:column="13">/* [out] */</comment> <argument pos:line="2448" pos:column="25">__RPC__deref_out_opt IEnumDebugPorts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2448" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2448" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2450" pos:column="9">virtual <name pos:line="2450" pos:column="17">HRESULT</name> <name pos:line="2450" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2450" pos:column="43">CanAddPort</name><argument_list pos:line="2450" pos:column="53">( <argument><expr><name pos:line="2450" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2450" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2450" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="2452" pos:column="9">virtual <name pos:line="2452" pos:column="17">HRESULT</name> <name pos:line="2452" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2452" pos:column="43">AddPort</name><argument_list pos:line="2452" pos:column="50">( 
            <comment type="block" pos:line="2453" pos:column="13">/* [in] */</comment> <argument pos:line="2453" pos:column="24">__RPC__in_opt IDebugPortRequest2 *pRequest</argument>,
            <comment type="block" pos:line="2454" pos:column="13">/* [out] */</comment> <argument pos:line="2454" pos:column="25">__RPC__deref_out_opt IDebugPort2 **ppPort</argument>)</argument_list></macro> <op:operator pos:line="2454" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2454" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2456" pos:column="9">virtual <name pos:line="2456" pos:column="17">HRESULT</name> <name pos:line="2456" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2456" pos:column="43">RemovePort</name><argument_list pos:line="2456" pos:column="53">( 
            <comment type="block" pos:line="2457" pos:column="13">/* [in] */</comment> <argument pos:line="2457" pos:column="24">__RPC__in_opt IDebugPort2 *pPort</argument>)</argument_list></macro> <op:operator pos:line="2457" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="2457" pos:column="60">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2461" pos:column="1">#<cpp:directive pos:line="2461" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2461" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2463" pos:column="5">typedef <type><struct pos:line="2463" pos:column="13">struct <name pos:line="2463" pos:column="20">IDebugPortSupplier2Vtbl</name>
    <block pos:line="2464" pos:column="5">{<public type="default" pos:line="2464" pos:column="6">
        <function_decl><type><name pos:line="2465" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2467" pos:column="9">HRESULT</name></type> ( <name pos:line="2467" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2467" pos:column="37">*</type:modifier><name pos:line="2467" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2467" pos:column="54">( 
            <param><decl><type><name pos:line="2468" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2468" pos:column="33">*</type:modifier></type> <name pos:line="2468" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2469" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2469" pos:column="24">__RPC__in</name> <name pos:line="2469" pos:column="34">REFIID</name></type> <name pos:line="2469" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2470" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2471" pos:column="13">__RPC__deref_out</name>  <name pos:line="2471" pos:column="31">void</name> <type:modifier pos:line="2471" pos:column="36">*</type:modifier><type:modifier pos:line="2471" pos:column="37">*</type:modifier></type><name pos:line="2471" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2473" pos:column="9">ULONG</name></type> ( <name pos:line="2473" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2473" pos:column="35">*</type:modifier><name pos:line="2473" pos:column="36">AddRef</name> )<parameter_list pos:line="2473" pos:column="44">( 
            <param><decl><type><name pos:line="2474" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2474" pos:column="33">*</type:modifier></type> <name pos:line="2474" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2476" pos:column="9">ULONG</name></type> ( <name pos:line="2476" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2476" pos:column="35">*</type:modifier><name pos:line="2476" pos:column="36">Release</name> )<parameter_list pos:line="2476" pos:column="45">( 
            <param><decl><type><name pos:line="2477" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2477" pos:column="33">*</type:modifier></type> <name pos:line="2477" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2479" pos:column="9">HRESULT</name></type> ( <name pos:line="2479" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2479" pos:column="37">*</type:modifier><name pos:line="2479" pos:column="38">GetPortSupplierName</name> )<parameter_list pos:line="2479" pos:column="59">( 
            <param><decl><type><name pos:line="2480" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2480" pos:column="33">*</type:modifier></type> <name pos:line="2480" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2481" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2481" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2481" pos:column="46">BSTR</name> <type:modifier pos:line="2481" pos:column="51">*</type:modifier></type><name pos:line="2481" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2483" pos:column="9">HRESULT</name></type> ( <name pos:line="2483" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2483" pos:column="37">*</type:modifier><name pos:line="2483" pos:column="38">GetPortSupplierId</name> )<parameter_list pos:line="2483" pos:column="57">( 
            <param><decl><type><name pos:line="2484" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2484" pos:column="33">*</type:modifier></type> <name pos:line="2484" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2485" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2485" pos:column="25">__RPC__out</name> <name pos:line="2485" pos:column="36">GUID</name> <type:modifier pos:line="2485" pos:column="41">*</type:modifier></type><name pos:line="2485" pos:column="42">pguidPortSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2487" pos:column="9">HRESULT</name></type> ( <name pos:line="2487" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2487" pos:column="37">*</type:modifier><name pos:line="2487" pos:column="38">GetPort</name> )<parameter_list pos:line="2487" pos:column="47">( 
            <param><decl><type><name pos:line="2488" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2488" pos:column="33">*</type:modifier></type> <name pos:line="2488" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2489" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2489" pos:column="24">__RPC__in</name> <name pos:line="2489" pos:column="34">REFGUID</name></type> <name pos:line="2489" pos:column="42">guidPort</name></decl></param>,
            <comment type="block" pos:line="2490" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2490" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2490" pos:column="46">IDebugPort2</name> <type:modifier pos:line="2490" pos:column="58">*</type:modifier><type:modifier pos:line="2490" pos:column="59">*</type:modifier></type><name pos:line="2490" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2492" pos:column="9">HRESULT</name></type> ( <name pos:line="2492" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2492" pos:column="37">*</type:modifier><name pos:line="2492" pos:column="38">EnumPorts</name> )<parameter_list pos:line="2492" pos:column="49">( 
            <param><decl><type><name pos:line="2493" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2493" pos:column="33">*</type:modifier></type> <name pos:line="2493" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2494" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2494" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2494" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="2494" pos:column="63">*</type:modifier><type:modifier pos:line="2494" pos:column="64">*</type:modifier></type><name pos:line="2494" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2496" pos:column="9">HRESULT</name></type> ( <name pos:line="2496" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2496" pos:column="37">*</type:modifier><name pos:line="2496" pos:column="38">CanAddPort</name> )<parameter_list pos:line="2496" pos:column="50">( 
            <param><decl><type><name pos:line="2497" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2497" pos:column="33">*</type:modifier></type> <name pos:line="2497" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2499" pos:column="9">HRESULT</name></type> ( <name pos:line="2499" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2499" pos:column="37">*</type:modifier><name pos:line="2499" pos:column="38">AddPort</name> )<parameter_list pos:line="2499" pos:column="47">( 
            <param><decl><type><name pos:line="2500" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2500" pos:column="33">*</type:modifier></type> <name pos:line="2500" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2501" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2501" pos:column="24">__RPC__in_opt</name> <name pos:line="2501" pos:column="38">IDebugPortRequest2</name> <type:modifier pos:line="2501" pos:column="57">*</type:modifier></type><name pos:line="2501" pos:column="58">pRequest</name></decl></param>,
            <comment type="block" pos:line="2502" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2502" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2502" pos:column="46">IDebugPort2</name> <type:modifier pos:line="2502" pos:column="58">*</type:modifier><type:modifier pos:line="2502" pos:column="59">*</type:modifier></type><name pos:line="2502" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2504" pos:column="9">HRESULT</name></type> ( <name pos:line="2504" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2504" pos:column="37">*</type:modifier><name pos:line="2504" pos:column="38">RemovePort</name> )<parameter_list pos:line="2504" pos:column="50">( 
            <param><decl><type><name pos:line="2505" pos:column="13">IDebugPortSupplier2</name> <type:modifier pos:line="2505" pos:column="33">*</type:modifier></type> <name pos:line="2505" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2506" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2506" pos:column="24">__RPC__in_opt</name> <name pos:line="2506" pos:column="38">IDebugPort2</name> <type:modifier pos:line="2506" pos:column="50">*</type:modifier></type><name pos:line="2506" pos:column="51">pPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2508" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2509" pos:column="7">IDebugPortSupplier2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2511" pos:column="5">interface</name></type> <name pos:line="2511" pos:column="15">IDebugPortSupplier2</name>
    <argument_list pos:line="2512" pos:column="5">{
        <argument><expr><name pos:line="2513" pos:column="9">CONST_VTBL</name> struct <name pos:line="2513" pos:column="27">IDebugPortSupplier2Vtbl</name> <op:operator pos:line="2513" pos:column="51">*</op:operator><name pos:line="2513" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2518" pos:column="1">#<cpp:directive pos:line="2518" pos:column="2">ifdef</cpp:directive> <name pos:line="2518" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2521" pos:column="1">#<cpp:directive pos:line="2521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2521" pos:column="9">IDebugPortSupplier2_QueryInterface</name><parameter_list pos:line="2521" pos:column="43">(<param><type><name pos:line="2521" pos:column="44">This</name></type></param>,<param><type><name pos:line="2521" pos:column="49">riid</name></type></param>,<param><type><name pos:line="2521" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2522" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2524" pos:column="1">#<cpp:directive pos:line="2524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2524" pos:column="9">IDebugPortSupplier2_AddRef</name><parameter_list pos:line="2524" pos:column="35">(<param><type><name pos:line="2524" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2525" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2527" pos:column="1">#<cpp:directive pos:line="2527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2527" pos:column="9">IDebugPortSupplier2_Release</name><parameter_list pos:line="2527" pos:column="36">(<param><type><name pos:line="2527" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2528" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2531" pos:column="1">#<cpp:directive pos:line="2531" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2531" pos:column="9">IDebugPortSupplier2_GetPortSupplierName</name><parameter_list pos:line="2531" pos:column="48">(<param><type><name pos:line="2531" pos:column="49">This</name></type></param>,<param><type><name pos:line="2531" pos:column="54">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2532" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplierName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2534" pos:column="1">#<cpp:directive pos:line="2534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2534" pos:column="9">IDebugPortSupplier2_GetPortSupplierId</name><parameter_list pos:line="2534" pos:column="46">(<param><type><name pos:line="2534" pos:column="47">This</name></type></param>,<param><type><name pos:line="2534" pos:column="52">pguidPortSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2535" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplierId(This,pguidPortSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="2537" pos:column="1">#<cpp:directive pos:line="2537" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2537" pos:column="9">IDebugPortSupplier2_GetPort</name><parameter_list pos:line="2537" pos:column="36">(<param><type><name pos:line="2537" pos:column="37">This</name></type></param>,<param><type><name pos:line="2537" pos:column="42">guidPort</name></type></param>,<param><type><name pos:line="2537" pos:column="51">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2538" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPort(This,guidPort,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2540" pos:column="1">#<cpp:directive pos:line="2540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2540" pos:column="9">IDebugPortSupplier2_EnumPorts</name><parameter_list pos:line="2540" pos:column="38">(<param><type><name pos:line="2540" pos:column="39">This</name></type></param>,<param><type><name pos:line="2540" pos:column="44">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2541" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPorts(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2543" pos:column="1">#<cpp:directive pos:line="2543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2543" pos:column="9">IDebugPortSupplier2_CanAddPort</name><parameter_list pos:line="2543" pos:column="39">(<param><type><name pos:line="2543" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2544" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanAddPort(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2546" pos:column="1">#<cpp:directive pos:line="2546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2546" pos:column="9">IDebugPortSupplier2_AddPort</name><parameter_list pos:line="2546" pos:column="36">(<param><type><name pos:line="2546" pos:column="37">This</name></type></param>,<param><type><name pos:line="2546" pos:column="42">pRequest</name></type></param>,<param><type><name pos:line="2546" pos:column="51">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2547" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddPort(This,pRequest,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2549" pos:column="1">#<cpp:directive pos:line="2549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2549" pos:column="9">IDebugPortSupplier2_RemovePort</name><parameter_list pos:line="2549" pos:column="39">(<param><type><name pos:line="2549" pos:column="40">This</name></type></param>,<param><type><name pos:line="2549" pos:column="45">pPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2550" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemovePort(This,pPort) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2552" pos:column="1">#<cpp:directive pos:line="2552" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2552" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2555" pos:column="1">#<cpp:directive pos:line="2555" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2555" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2560" pos:column="1">#<cpp:directive pos:line="2560" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2560" pos:column="9">/* __IDebugPortSupplier2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2563" pos:column="1">#<cpp:directive pos:line="2563" pos:column="2">ifndef</cpp:directive> <name pos:line="2563" pos:column="9">__IDebugPortSupplier3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2564" pos:column="1">#<cpp:directive pos:line="2564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2564" pos:column="9">__IDebugPortSupplier3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2566" pos:column="1">/* interface IDebugPortSupplier3 */</comment>
<comment type="block" pos:line="2567" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2570" pos:column="1">EXTERN_C</name> <specifier pos:line="2570" pos:column="10">const</specifier> <name pos:line="2570" pos:column="16">IID</name></type> <name pos:line="2570" pos:column="20">IID_IDebugPortSupplier3</name></decl>;</decl_stmt>

<cpp:if pos:line="2572" pos:column="1">#<cpp:directive pos:line="2572" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2572" pos:column="5">defined</name><argument_list pos:line="2572" pos:column="12">(<argument><expr><name pos:line="2572" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2572" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2572" pos:column="29">!</op:operator><call><name pos:line="2572" pos:column="30">defined</name><argument_list pos:line="2572" pos:column="37">(<argument><expr><name pos:line="2572" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2574" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2574" pos:column="19">(<argument pos:line="2574" pos:column="20">"5b5eec44-51aa-4210-b84f-1938b8576d8d"</argument>)</argument_list></macro>
    <label><name pos:line="2575" pos:column="5">IDebugPortSupplier3</name> :</label> <expr_stmt><expr pos:line="2575" pos:column="27">public <name pos:line="2575" pos:column="34">IDebugPortSupplier2</name>
    <block pos:line="2576" pos:column="5">{
    <expr pos:line="2577" pos:column="5">public<op:operator pos:line="2577" pos:column="11">:</op:operator>
        virtual <name pos:line="2578" pos:column="17">HRESULT</name> <name pos:line="2578" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2578" pos:column="43">CanPersistPorts</name><argument_list pos:line="2578" pos:column="58">( <argument><expr><name pos:line="2578" pos:column="60">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2578" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2578" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2580" pos:column="9">virtual <name pos:line="2580" pos:column="17">HRESULT</name> <name pos:line="2580" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2580" pos:column="43">EnumPersistedPorts</name><argument_list pos:line="2580" pos:column="61">( 
            <comment type="block" pos:line="2581" pos:column="13">/* [in] */</comment> <argument pos:line="2581" pos:column="24">BSTR_ARRAY PortNames</argument>,
            <comment type="block" pos:line="2582" pos:column="13">/* [out] */</comment> <argument pos:line="2582" pos:column="25">__RPC__deref_out_opt IEnumDebugPorts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2582" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2582" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2586" pos:column="1">#<cpp:directive pos:line="2586" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2586" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2588" pos:column="5">typedef <type><struct pos:line="2588" pos:column="13">struct <name pos:line="2588" pos:column="20">IDebugPortSupplier3Vtbl</name>
    <block pos:line="2589" pos:column="5">{<public type="default" pos:line="2589" pos:column="6">
        <function_decl><type><name pos:line="2590" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2592" pos:column="9">HRESULT</name></type> ( <name pos:line="2592" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2592" pos:column="37">*</type:modifier><name pos:line="2592" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2592" pos:column="54">( 
            <param><decl><type><name pos:line="2593" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2593" pos:column="33">*</type:modifier></type> <name pos:line="2593" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2594" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2594" pos:column="24">__RPC__in</name> <name pos:line="2594" pos:column="34">REFIID</name></type> <name pos:line="2594" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2595" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2596" pos:column="13">__RPC__deref_out</name>  <name pos:line="2596" pos:column="31">void</name> <type:modifier pos:line="2596" pos:column="36">*</type:modifier><type:modifier pos:line="2596" pos:column="37">*</type:modifier></type><name pos:line="2596" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2598" pos:column="9">ULONG</name></type> ( <name pos:line="2598" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2598" pos:column="35">*</type:modifier><name pos:line="2598" pos:column="36">AddRef</name> )<parameter_list pos:line="2598" pos:column="44">( 
            <param><decl><type><name pos:line="2599" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2599" pos:column="33">*</type:modifier></type> <name pos:line="2599" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2601" pos:column="9">ULONG</name></type> ( <name pos:line="2601" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2601" pos:column="35">*</type:modifier><name pos:line="2601" pos:column="36">Release</name> )<parameter_list pos:line="2601" pos:column="45">( 
            <param><decl><type><name pos:line="2602" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2602" pos:column="33">*</type:modifier></type> <name pos:line="2602" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2604" pos:column="9">HRESULT</name></type> ( <name pos:line="2604" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2604" pos:column="37">*</type:modifier><name pos:line="2604" pos:column="38">GetPortSupplierName</name> )<parameter_list pos:line="2604" pos:column="59">( 
            <param><decl><type><name pos:line="2605" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2605" pos:column="33">*</type:modifier></type> <name pos:line="2605" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2606" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2606" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2606" pos:column="46">BSTR</name> <type:modifier pos:line="2606" pos:column="51">*</type:modifier></type><name pos:line="2606" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2608" pos:column="9">HRESULT</name></type> ( <name pos:line="2608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2608" pos:column="37">*</type:modifier><name pos:line="2608" pos:column="38">GetPortSupplierId</name> )<parameter_list pos:line="2608" pos:column="57">( 
            <param><decl><type><name pos:line="2609" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2609" pos:column="33">*</type:modifier></type> <name pos:line="2609" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2610" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2610" pos:column="25">__RPC__out</name> <name pos:line="2610" pos:column="36">GUID</name> <type:modifier pos:line="2610" pos:column="41">*</type:modifier></type><name pos:line="2610" pos:column="42">pguidPortSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2612" pos:column="9">HRESULT</name></type> ( <name pos:line="2612" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2612" pos:column="37">*</type:modifier><name pos:line="2612" pos:column="38">GetPort</name> )<parameter_list pos:line="2612" pos:column="47">( 
            <param><decl><type><name pos:line="2613" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2613" pos:column="33">*</type:modifier></type> <name pos:line="2613" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2614" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2614" pos:column="24">__RPC__in</name> <name pos:line="2614" pos:column="34">REFGUID</name></type> <name pos:line="2614" pos:column="42">guidPort</name></decl></param>,
            <comment type="block" pos:line="2615" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2615" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2615" pos:column="46">IDebugPort2</name> <type:modifier pos:line="2615" pos:column="58">*</type:modifier><type:modifier pos:line="2615" pos:column="59">*</type:modifier></type><name pos:line="2615" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2617" pos:column="9">HRESULT</name></type> ( <name pos:line="2617" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2617" pos:column="37">*</type:modifier><name pos:line="2617" pos:column="38">EnumPorts</name> )<parameter_list pos:line="2617" pos:column="49">( 
            <param><decl><type><name pos:line="2618" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2618" pos:column="33">*</type:modifier></type> <name pos:line="2618" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2619" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2619" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2619" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="2619" pos:column="63">*</type:modifier><type:modifier pos:line="2619" pos:column="64">*</type:modifier></type><name pos:line="2619" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2621" pos:column="9">HRESULT</name></type> ( <name pos:line="2621" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2621" pos:column="37">*</type:modifier><name pos:line="2621" pos:column="38">CanAddPort</name> )<parameter_list pos:line="2621" pos:column="50">( 
            <param><decl><type><name pos:line="2622" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2622" pos:column="33">*</type:modifier></type> <name pos:line="2622" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2624" pos:column="9">HRESULT</name></type> ( <name pos:line="2624" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2624" pos:column="37">*</type:modifier><name pos:line="2624" pos:column="38">AddPort</name> )<parameter_list pos:line="2624" pos:column="47">( 
            <param><decl><type><name pos:line="2625" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2625" pos:column="33">*</type:modifier></type> <name pos:line="2625" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2626" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2626" pos:column="24">__RPC__in_opt</name> <name pos:line="2626" pos:column="38">IDebugPortRequest2</name> <type:modifier pos:line="2626" pos:column="57">*</type:modifier></type><name pos:line="2626" pos:column="58">pRequest</name></decl></param>,
            <comment type="block" pos:line="2627" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2627" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2627" pos:column="46">IDebugPort2</name> <type:modifier pos:line="2627" pos:column="58">*</type:modifier><type:modifier pos:line="2627" pos:column="59">*</type:modifier></type><name pos:line="2627" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2629" pos:column="9">HRESULT</name></type> ( <name pos:line="2629" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2629" pos:column="37">*</type:modifier><name pos:line="2629" pos:column="38">RemovePort</name> )<parameter_list pos:line="2629" pos:column="50">( 
            <param><decl><type><name pos:line="2630" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2630" pos:column="33">*</type:modifier></type> <name pos:line="2630" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2631" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2631" pos:column="24">__RPC__in_opt</name> <name pos:line="2631" pos:column="38">IDebugPort2</name> <type:modifier pos:line="2631" pos:column="50">*</type:modifier></type><name pos:line="2631" pos:column="51">pPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2633" pos:column="9">HRESULT</name></type> ( <name pos:line="2633" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2633" pos:column="37">*</type:modifier><name pos:line="2633" pos:column="38">CanPersistPorts</name> )<parameter_list pos:line="2633" pos:column="55">( 
            <param><decl><type><name pos:line="2634" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2634" pos:column="33">*</type:modifier></type> <name pos:line="2634" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2636" pos:column="9">HRESULT</name></type> ( <name pos:line="2636" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2636" pos:column="37">*</type:modifier><name pos:line="2636" pos:column="38">EnumPersistedPorts</name> )<parameter_list pos:line="2636" pos:column="58">( 
            <param><decl><type><name pos:line="2637" pos:column="13">IDebugPortSupplier3</name> <type:modifier pos:line="2637" pos:column="33">*</type:modifier></type> <name pos:line="2637" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2638" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2638" pos:column="24">BSTR_ARRAY</name></type> <name pos:line="2638" pos:column="35">PortNames</name></decl></param>,
            <comment type="block" pos:line="2639" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2639" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2639" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="2639" pos:column="63">*</type:modifier><type:modifier pos:line="2639" pos:column="64">*</type:modifier></type><name pos:line="2639" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2641" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2642" pos:column="7">IDebugPortSupplier3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2644" pos:column="5">interface</name></type> <name pos:line="2644" pos:column="15">IDebugPortSupplier3</name>
    <argument_list pos:line="2645" pos:column="5">{
        <argument><expr><name pos:line="2646" pos:column="9">CONST_VTBL</name> struct <name pos:line="2646" pos:column="27">IDebugPortSupplier3Vtbl</name> <op:operator pos:line="2646" pos:column="51">*</op:operator><name pos:line="2646" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2651" pos:column="1">#<cpp:directive pos:line="2651" pos:column="2">ifdef</cpp:directive> <name pos:line="2651" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2654" pos:column="1">#<cpp:directive pos:line="2654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2654" pos:column="9">IDebugPortSupplier3_QueryInterface</name><parameter_list pos:line="2654" pos:column="43">(<param><type><name pos:line="2654" pos:column="44">This</name></type></param>,<param><type><name pos:line="2654" pos:column="49">riid</name></type></param>,<param><type><name pos:line="2654" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2655" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2657" pos:column="1">#<cpp:directive pos:line="2657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2657" pos:column="9">IDebugPortSupplier3_AddRef</name><parameter_list pos:line="2657" pos:column="35">(<param><type><name pos:line="2657" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2658" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2660" pos:column="1">#<cpp:directive pos:line="2660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2660" pos:column="9">IDebugPortSupplier3_Release</name><parameter_list pos:line="2660" pos:column="36">(<param><type><name pos:line="2660" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2661" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2664" pos:column="1">#<cpp:directive pos:line="2664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2664" pos:column="9">IDebugPortSupplier3_GetPortSupplierName</name><parameter_list pos:line="2664" pos:column="48">(<param><type><name pos:line="2664" pos:column="49">This</name></type></param>,<param><type><name pos:line="2664" pos:column="54">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2665" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplierName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2667" pos:column="1">#<cpp:directive pos:line="2667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2667" pos:column="9">IDebugPortSupplier3_GetPortSupplierId</name><parameter_list pos:line="2667" pos:column="46">(<param><type><name pos:line="2667" pos:column="47">This</name></type></param>,<param><type><name pos:line="2667" pos:column="52">pguidPortSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2668" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplierId(This,pguidPortSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="2670" pos:column="1">#<cpp:directive pos:line="2670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2670" pos:column="9">IDebugPortSupplier3_GetPort</name><parameter_list pos:line="2670" pos:column="36">(<param><type><name pos:line="2670" pos:column="37">This</name></type></param>,<param><type><name pos:line="2670" pos:column="42">guidPort</name></type></param>,<param><type><name pos:line="2670" pos:column="51">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2671" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPort(This,guidPort,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2673" pos:column="1">#<cpp:directive pos:line="2673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2673" pos:column="9">IDebugPortSupplier3_EnumPorts</name><parameter_list pos:line="2673" pos:column="38">(<param><type><name pos:line="2673" pos:column="39">This</name></type></param>,<param><type><name pos:line="2673" pos:column="44">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2674" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPorts(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2676" pos:column="1">#<cpp:directive pos:line="2676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2676" pos:column="9">IDebugPortSupplier3_CanAddPort</name><parameter_list pos:line="2676" pos:column="39">(<param><type><name pos:line="2676" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2677" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanAddPort(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2679" pos:column="1">#<cpp:directive pos:line="2679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2679" pos:column="9">IDebugPortSupplier3_AddPort</name><parameter_list pos:line="2679" pos:column="36">(<param><type><name pos:line="2679" pos:column="37">This</name></type></param>,<param><type><name pos:line="2679" pos:column="42">pRequest</name></type></param>,<param><type><name pos:line="2679" pos:column="51">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2680" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddPort(This,pRequest,ppPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="2682" pos:column="1">#<cpp:directive pos:line="2682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2682" pos:column="9">IDebugPortSupplier3_RemovePort</name><parameter_list pos:line="2682" pos:column="39">(<param><type><name pos:line="2682" pos:column="40">This</name></type></param>,<param><type><name pos:line="2682" pos:column="45">pPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2683" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemovePort(This,pPort) )</cpp:value></cpp:define> 


<cpp:define pos:line="2686" pos:column="1">#<cpp:directive pos:line="2686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2686" pos:column="9">IDebugPortSupplier3_CanPersistPorts</name><parameter_list pos:line="2686" pos:column="44">(<param><type><name pos:line="2686" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2687" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanPersistPorts(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2689" pos:column="1">#<cpp:directive pos:line="2689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2689" pos:column="9">IDebugPortSupplier3_EnumPersistedPorts</name><parameter_list pos:line="2689" pos:column="47">(<param><type><name pos:line="2689" pos:column="48">This</name></type></param>,<param><type><name pos:line="2689" pos:column="53">PortNames</name></type></param>,<param><type><name pos:line="2689" pos:column="63">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2690" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPersistedPorts(This,PortNames,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2692" pos:column="1">#<cpp:directive pos:line="2692" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2692" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2695" pos:column="1">#<cpp:directive pos:line="2695" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2695" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2700" pos:column="1">#<cpp:directive pos:line="2700" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2700" pos:column="9">/* __IDebugPortSupplier3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2703" pos:column="1">#<cpp:directive pos:line="2703" pos:column="2">ifndef</cpp:directive> <name pos:line="2703" pos:column="9">__IDebugPortPicker_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2704" pos:column="1">#<cpp:directive pos:line="2704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2704" pos:column="9">__IDebugPortPicker_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2706" pos:column="1">/* interface IDebugPortPicker */</comment>
<comment type="block" pos:line="2707" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2710" pos:column="1">EXTERN_C</name> <specifier pos:line="2710" pos:column="10">const</specifier> <name pos:line="2710" pos:column="16">IID</name></type> <name pos:line="2710" pos:column="20">IID_IDebugPortPicker</name></decl>;</decl_stmt>

<cpp:if pos:line="2712" pos:column="1">#<cpp:directive pos:line="2712" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2712" pos:column="5">defined</name><argument_list pos:line="2712" pos:column="12">(<argument><expr><name pos:line="2712" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2712" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2712" pos:column="29">!</op:operator><call><name pos:line="2712" pos:column="30">defined</name><argument_list pos:line="2712" pos:column="37">(<argument><expr><name pos:line="2712" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2714" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2714" pos:column="19">(<argument pos:line="2714" pos:column="20">"8d6eed60-2737-4425-b38a-490ef273acbb"</argument>)</argument_list></macro>
    <label><name pos:line="2715" pos:column="5">IDebugPortPicker</name> :</label> <expr_stmt><expr pos:line="2715" pos:column="24">public <name pos:line="2715" pos:column="31">IUnknown</name>
    <block pos:line="2716" pos:column="5">{
    <expr pos:line="2717" pos:column="5">public<op:operator pos:line="2717" pos:column="11">:</op:operator>
        virtual <name pos:line="2718" pos:column="17">HRESULT</name> <name pos:line="2718" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2718" pos:column="43">SetSite</name><argument_list pos:line="2718" pos:column="50">( 
            <comment type="block" pos:line="2719" pos:column="13">/* [in] */</comment> <argument pos:line="2719" pos:column="24">__RPC__in_opt IServiceProvider *pSP</argument>)</argument_list></macro> <op:operator pos:line="2719" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2719" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="2721" pos:column="9">virtual <name pos:line="2721" pos:column="17">HRESULT</name> <name pos:line="2721" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2721" pos:column="43">DisplayPortPicker</name><argument_list pos:line="2721" pos:column="60">( 
            <comment type="block" pos:line="2722" pos:column="13">/* [in] */</comment> <argument pos:line="2722" pos:column="24">__RPC__in HWND hwndParentDialog</argument>,
            <comment type="block" pos:line="2723" pos:column="13">/* [out] */</comment> <argument pos:line="2723" pos:column="25">__RPC__deref_out_opt BSTR *pbstrPortId</argument>)</argument_list></macro> <op:operator pos:line="2723" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="2723" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2727" pos:column="1">#<cpp:directive pos:line="2727" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2727" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2729" pos:column="5">typedef <type><struct pos:line="2729" pos:column="13">struct <name pos:line="2729" pos:column="20">IDebugPortPickerVtbl</name>
    <block pos:line="2730" pos:column="5">{<public type="default" pos:line="2730" pos:column="6">
        <function_decl><type><name pos:line="2731" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2733" pos:column="9">HRESULT</name></type> ( <name pos:line="2733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2733" pos:column="37">*</type:modifier><name pos:line="2733" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2733" pos:column="54">( 
            <param><decl><type><name pos:line="2734" pos:column="13">IDebugPortPicker</name> <type:modifier pos:line="2734" pos:column="30">*</type:modifier></type> <name pos:line="2734" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2735" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2735" pos:column="24">__RPC__in</name> <name pos:line="2735" pos:column="34">REFIID</name></type> <name pos:line="2735" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2736" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2737" pos:column="13">__RPC__deref_out</name>  <name pos:line="2737" pos:column="31">void</name> <type:modifier pos:line="2737" pos:column="36">*</type:modifier><type:modifier pos:line="2737" pos:column="37">*</type:modifier></type><name pos:line="2737" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2739" pos:column="9">ULONG</name></type> ( <name pos:line="2739" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2739" pos:column="35">*</type:modifier><name pos:line="2739" pos:column="36">AddRef</name> )<parameter_list pos:line="2739" pos:column="44">( 
            <param><decl><type><name pos:line="2740" pos:column="13">IDebugPortPicker</name> <type:modifier pos:line="2740" pos:column="30">*</type:modifier></type> <name pos:line="2740" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2742" pos:column="9">ULONG</name></type> ( <name pos:line="2742" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2742" pos:column="35">*</type:modifier><name pos:line="2742" pos:column="36">Release</name> )<parameter_list pos:line="2742" pos:column="45">( 
            <param><decl><type><name pos:line="2743" pos:column="13">IDebugPortPicker</name> <type:modifier pos:line="2743" pos:column="30">*</type:modifier></type> <name pos:line="2743" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2745" pos:column="9">HRESULT</name></type> ( <name pos:line="2745" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2745" pos:column="37">*</type:modifier><name pos:line="2745" pos:column="38">SetSite</name> )<parameter_list pos:line="2745" pos:column="47">( 
            <param><decl><type><name pos:line="2746" pos:column="13">IDebugPortPicker</name> <type:modifier pos:line="2746" pos:column="30">*</type:modifier></type> <name pos:line="2746" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2747" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2747" pos:column="24">__RPC__in_opt</name> <name pos:line="2747" pos:column="38">IServiceProvider</name> <type:modifier pos:line="2747" pos:column="55">*</type:modifier></type><name pos:line="2747" pos:column="56">pSP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2749" pos:column="9">HRESULT</name></type> ( <name pos:line="2749" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2749" pos:column="37">*</type:modifier><name pos:line="2749" pos:column="38">DisplayPortPicker</name> )<parameter_list pos:line="2749" pos:column="57">( 
            <param><decl><type><name pos:line="2750" pos:column="13">IDebugPortPicker</name> <type:modifier pos:line="2750" pos:column="30">*</type:modifier></type> <name pos:line="2750" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="2751" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2751" pos:column="24">__RPC__in</name> <name pos:line="2751" pos:column="34">HWND</name></type> <name pos:line="2751" pos:column="39">hwndParentDialog</name></decl></param>,
            <comment type="block" pos:line="2752" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2752" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2752" pos:column="46">BSTR</name> <type:modifier pos:line="2752" pos:column="51">*</type:modifier></type><name pos:line="2752" pos:column="52">pbstrPortId</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2754" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2755" pos:column="7">IDebugPortPickerVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2757" pos:column="5">interface</name></type> <name pos:line="2757" pos:column="15">IDebugPortPicker</name>
    <argument_list pos:line="2758" pos:column="5">{
        <argument><expr><name pos:line="2759" pos:column="9">CONST_VTBL</name> struct <name pos:line="2759" pos:column="27">IDebugPortPickerVtbl</name> <op:operator pos:line="2759" pos:column="48">*</op:operator><name pos:line="2759" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2764" pos:column="1">#<cpp:directive pos:line="2764" pos:column="2">ifdef</cpp:directive> <name pos:line="2764" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2767" pos:column="1">#<cpp:directive pos:line="2767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2767" pos:column="9">IDebugPortPicker_QueryInterface</name><parameter_list pos:line="2767" pos:column="40">(<param><type><name pos:line="2767" pos:column="41">This</name></type></param>,<param><type><name pos:line="2767" pos:column="46">riid</name></type></param>,<param><type><name pos:line="2767" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2768" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2770" pos:column="1">#<cpp:directive pos:line="2770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2770" pos:column="9">IDebugPortPicker_AddRef</name><parameter_list pos:line="2770" pos:column="32">(<param><type><name pos:line="2770" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2771" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2773" pos:column="1">#<cpp:directive pos:line="2773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2773" pos:column="9">IDebugPortPicker_Release</name><parameter_list pos:line="2773" pos:column="33">(<param><type><name pos:line="2773" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2774" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2777" pos:column="1">#<cpp:directive pos:line="2777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2777" pos:column="9">IDebugPortPicker_SetSite</name><parameter_list pos:line="2777" pos:column="33">(<param><type><name pos:line="2777" pos:column="34">This</name></type></param>,<param><type><name pos:line="2777" pos:column="39">pSP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2778" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSite(This,pSP) )</cpp:value></cpp:define> 

<cpp:define pos:line="2780" pos:column="1">#<cpp:directive pos:line="2780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2780" pos:column="9">IDebugPortPicker_DisplayPortPicker</name><parameter_list pos:line="2780" pos:column="43">(<param><type><name pos:line="2780" pos:column="44">This</name></type></param>,<param><type><name pos:line="2780" pos:column="49">hwndParentDialog</name></type></param>,<param><type><name pos:line="2780" pos:column="66">pbstrPortId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2781" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisplayPortPicker(This,hwndParentDialog,pbstrPortId) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2783" pos:column="1">#<cpp:directive pos:line="2783" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2783" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2786" pos:column="1">#<cpp:directive pos:line="2786" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2786" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2791" pos:column="1">#<cpp:directive pos:line="2791" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2791" pos:column="9">/* __IDebugPortPicker_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2794" pos:column="1">#<cpp:directive pos:line="2794" pos:column="2">ifndef</cpp:directive> <name pos:line="2794" pos:column="9">__IDebugPortSupplierDescription2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2795" pos:column="1">#<cpp:directive pos:line="2795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2795" pos:column="9">__IDebugPortSupplierDescription2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2797" pos:column="1">/* interface IDebugPortSupplierDescription2 */</comment>
<comment type="block" pos:line="2798" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="2801" pos:column="1">enum <name pos:line="2801" pos:column="6">enum_PORT_SUPPLIER_DESCRIPTION_FLAGS</name>
    <block pos:line="2802" pos:column="5">{	<decl><name pos:line="2802" pos:column="9">PSDFLAG_SHOW_WARNING_ICON</name>	<init pos:line="2802" pos:column="41">= <expr><lit:literal type="number" pos:line="2802" pos:column="43">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="2804" pos:column="1">typedef <type><name pos:line="2804" pos:column="9">DWORD</name></type> <name pos:line="2804" pos:column="15">PORT_SUPPLIER_DESCRIPTION_FLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="2807" pos:column="1">EXTERN_C</name> <specifier pos:line="2807" pos:column="10">const</specifier> <name pos:line="2807" pos:column="16">IID</name></type> <name pos:line="2807" pos:column="20">IID_IDebugPortSupplierDescription2</name></decl>;</decl_stmt>

<cpp:if pos:line="2809" pos:column="1">#<cpp:directive pos:line="2809" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2809" pos:column="5">defined</name><argument_list pos:line="2809" pos:column="12">(<argument><expr><name pos:line="2809" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2809" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2809" pos:column="29">!</op:operator><call><name pos:line="2809" pos:column="30">defined</name><argument_list pos:line="2809" pos:column="37">(<argument><expr><name pos:line="2809" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2811" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2811" pos:column="19">(<argument pos:line="2811" pos:column="20">"d0785faa-91d7-4ca2-a302-6555487719f7"</argument>)</argument_list></macro>
    <label><name pos:line="2812" pos:column="5">IDebugPortSupplierDescription2</name> :</label> <expr_stmt><expr pos:line="2812" pos:column="38">public <name pos:line="2812" pos:column="45">IUnknown</name>
    <block pos:line="2813" pos:column="5">{
    <expr pos:line="2814" pos:column="5">public<op:operator pos:line="2814" pos:column="11">:</op:operator>
        virtual <name pos:line="2815" pos:column="17">HRESULT</name> <name pos:line="2815" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2815" pos:column="43">GetDescription</name><argument_list pos:line="2815" pos:column="57">( 
            <comment type="block" pos:line="2816" pos:column="13">/* [out] */</comment> <argument pos:line="2816" pos:column="25">__RPC__out PORT_SUPPLIER_DESCRIPTION_FLAGS *pdwFlags</argument>,
            <comment type="block" pos:line="2817" pos:column="13">/* [out] */</comment> <argument pos:line="2817" pos:column="25">__RPC__deref_out_opt BSTR *pbstrText</argument>)</argument_list></macro> <op:operator pos:line="2817" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2817" pos:column="65">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2821" pos:column="1">#<cpp:directive pos:line="2821" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2821" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2823" pos:column="5">typedef <type><struct pos:line="2823" pos:column="13">struct <name pos:line="2823" pos:column="20">IDebugPortSupplierDescription2Vtbl</name>
    <block pos:line="2824" pos:column="5">{<public type="default" pos:line="2824" pos:column="6">
        <function_decl><type><name pos:line="2825" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2827" pos:column="9">HRESULT</name></type> ( <name pos:line="2827" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2827" pos:column="37">*</type:modifier><name pos:line="2827" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2827" pos:column="54">( 
            <param><decl><type><name pos:line="2828" pos:column="13">IDebugPortSupplierDescription2</name> <type:modifier pos:line="2828" pos:column="44">*</type:modifier></type> <name pos:line="2828" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2829" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2829" pos:column="24">__RPC__in</name> <name pos:line="2829" pos:column="34">REFIID</name></type> <name pos:line="2829" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2830" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2831" pos:column="13">__RPC__deref_out</name>  <name pos:line="2831" pos:column="31">void</name> <type:modifier pos:line="2831" pos:column="36">*</type:modifier><type:modifier pos:line="2831" pos:column="37">*</type:modifier></type><name pos:line="2831" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2833" pos:column="9">ULONG</name></type> ( <name pos:line="2833" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2833" pos:column="35">*</type:modifier><name pos:line="2833" pos:column="36">AddRef</name> )<parameter_list pos:line="2833" pos:column="44">( 
            <param><decl><type><name pos:line="2834" pos:column="13">IDebugPortSupplierDescription2</name> <type:modifier pos:line="2834" pos:column="44">*</type:modifier></type> <name pos:line="2834" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2836" pos:column="9">ULONG</name></type> ( <name pos:line="2836" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2836" pos:column="35">*</type:modifier><name pos:line="2836" pos:column="36">Release</name> )<parameter_list pos:line="2836" pos:column="45">( 
            <param><decl><type><name pos:line="2837" pos:column="13">IDebugPortSupplierDescription2</name> <type:modifier pos:line="2837" pos:column="44">*</type:modifier></type> <name pos:line="2837" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2839" pos:column="9">HRESULT</name></type> ( <name pos:line="2839" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2839" pos:column="37">*</type:modifier><name pos:line="2839" pos:column="38">GetDescription</name> )<parameter_list pos:line="2839" pos:column="54">( 
            <param><decl><type><name pos:line="2840" pos:column="13">IDebugPortSupplierDescription2</name> <type:modifier pos:line="2840" pos:column="44">*</type:modifier></type> <name pos:line="2840" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="2841" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2841" pos:column="25">__RPC__out</name> <name pos:line="2841" pos:column="36">PORT_SUPPLIER_DESCRIPTION_FLAGS</name> <type:modifier pos:line="2841" pos:column="68">*</type:modifier></type><name pos:line="2841" pos:column="69">pdwFlags</name></decl></param>,
            <comment type="block" pos:line="2842" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2842" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2842" pos:column="46">BSTR</name> <type:modifier pos:line="2842" pos:column="51">*</type:modifier></type><name pos:line="2842" pos:column="52">pbstrText</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2844" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2845" pos:column="7">IDebugPortSupplierDescription2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2847" pos:column="5">interface</name></type> <name pos:line="2847" pos:column="15">IDebugPortSupplierDescription2</name>
    <argument_list pos:line="2848" pos:column="5">{
        <argument><expr><name pos:line="2849" pos:column="9">CONST_VTBL</name> struct <name pos:line="2849" pos:column="27">IDebugPortSupplierDescription2Vtbl</name> <op:operator pos:line="2849" pos:column="62">*</op:operator><name pos:line="2849" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2854" pos:column="1">#<cpp:directive pos:line="2854" pos:column="2">ifdef</cpp:directive> <name pos:line="2854" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2857" pos:column="1">#<cpp:directive pos:line="2857" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2857" pos:column="9">IDebugPortSupplierDescription2_QueryInterface</name><parameter_list pos:line="2857" pos:column="54">(<param><type><name pos:line="2857" pos:column="55">This</name></type></param>,<param><type><name pos:line="2857" pos:column="60">riid</name></type></param>,<param><type><name pos:line="2857" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2858" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2860" pos:column="1">#<cpp:directive pos:line="2860" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2860" pos:column="9">IDebugPortSupplierDescription2_AddRef</name><parameter_list pos:line="2860" pos:column="46">(<param><type><name pos:line="2860" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2861" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2863" pos:column="1">#<cpp:directive pos:line="2863" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2863" pos:column="9">IDebugPortSupplierDescription2_Release</name><parameter_list pos:line="2863" pos:column="47">(<param><type><name pos:line="2863" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2864" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2867" pos:column="1">#<cpp:directive pos:line="2867" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2867" pos:column="9">IDebugPortSupplierDescription2_GetDescription</name><parameter_list pos:line="2867" pos:column="54">(<param><type><name pos:line="2867" pos:column="55">This</name></type></param>,<param><type><name pos:line="2867" pos:column="60">pdwFlags</name></type></param>,<param><type><name pos:line="2867" pos:column="69">pbstrText</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2868" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDescription(This,pdwFlags,pbstrText) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2870" pos:column="1">#<cpp:directive pos:line="2870" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2870" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2873" pos:column="1">#<cpp:directive pos:line="2873" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2873" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2878" pos:column="1">#<cpp:directive pos:line="2878" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2878" pos:column="9">/* __IDebugPortSupplierDescription2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2881" pos:column="1">#<cpp:directive pos:line="2881" pos:column="2">ifndef</cpp:directive> <name pos:line="2881" pos:column="9">__IDebugPort2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2882" pos:column="1">#<cpp:directive pos:line="2882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2882" pos:column="9">__IDebugPort2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2884" pos:column="1">/* interface IDebugPort2 */</comment>
<comment type="block" pos:line="2885" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="2888" pos:column="1">enum <name pos:line="2888" pos:column="6">enum_AD_PROCESS_ID</name>
    <block pos:line="2889" pos:column="5">{	<decl><name pos:line="2889" pos:column="9">AD_PROCESS_ID_SYSTEM</name>	<init pos:line="2889" pos:column="33">= <expr><lit:literal type="number" pos:line="2889" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="2889" pos:column="36">,</op:operator>
	<decl><name pos:line="2890" pos:column="9">AD_PROCESS_ID_GUID</name>	<init pos:line="2890" pos:column="33">= <expr><op:operator pos:line="2890" pos:column="35">(</op:operator> <name pos:line="2890" pos:column="37">AD_PROCESS_ID_SYSTEM</name> <op:operator pos:line="2890" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="2890" pos:column="60">1</lit:literal> <op:operator pos:line="2890" pos:column="62">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="2892" pos:column="1">typedef <type><name pos:line="2892" pos:column="9">DWORD</name></type> <name pos:line="2892" pos:column="15">AD_PROCESS_ID_TYPE</name>;</typedef>

<typedef pos:line="2894" pos:column="1">typedef <type><struct pos:line="2894" pos:column="9">struct <name pos:line="2894" pos:column="16">_AD_PROCESS_ID</name>
    <block pos:line="2895" pos:column="5">{<public type="default" pos:line="2895" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2896" pos:column="5">AD_PROCESS_ID_TYPE</name></type> <name pos:line="2896" pos:column="24">ProcessIdType</name></decl>;</decl_stmt>
    <comment type="block" pos:line="2897" pos:column="5">/* [switch_type] */</comment> <union pos:line="2897" pos:column="25">union <name pos:line="2897" pos:column="31">__MIDL_IDebugPort2_0001</name>
        <block pos:line="2898" pos:column="9">{<public type="default" pos:line="2898" pos:column="10">
        <decl_stmt><decl><type><name pos:line="2899" pos:column="9">DWORD</name></type> <name pos:line="2899" pos:column="15">dwProcessId</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="2900" pos:column="9">GUID</name></type> <name pos:line="2900" pos:column="14">guidProcessId</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="2901" pos:column="9">DWORD</name></type> <name pos:line="2901" pos:column="15">dwUnused</name></decl>;</decl_stmt>
        </public>}</block> 	<decl><name pos:line="2902" pos:column="17">ProcessId</name></decl>;</union>
    </public>}</block></struct></type> 	<name pos:line="2903" pos:column="9">AD_PROCESS_ID</name>;</typedef>


<decl_stmt><decl><type><name pos:line="2906" pos:column="1">EXTERN_C</name> <specifier pos:line="2906" pos:column="10">const</specifier> <name pos:line="2906" pos:column="16">IID</name></type> <name pos:line="2906" pos:column="20">IID_IDebugPort2</name></decl>;</decl_stmt>

<cpp:if pos:line="2908" pos:column="1">#<cpp:directive pos:line="2908" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2908" pos:column="5">defined</name><argument_list pos:line="2908" pos:column="12">(<argument><expr><name pos:line="2908" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2908" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2908" pos:column="29">!</op:operator><call><name pos:line="2908" pos:column="30">defined</name><argument_list pos:line="2908" pos:column="37">(<argument><expr><name pos:line="2908" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2910" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2910" pos:column="19">(<argument pos:line="2910" pos:column="20">"79293cc8-d9d9-43f5-97ad-0bcc5a688776"</argument>)</argument_list></macro>
    <label><name pos:line="2911" pos:column="5">IDebugPort2</name> :</label> <expr_stmt><expr pos:line="2911" pos:column="19">public <name pos:line="2911" pos:column="26">IUnknown</name>
    <block pos:line="2912" pos:column="5">{
    <expr pos:line="2913" pos:column="5">public<op:operator pos:line="2913" pos:column="11">:</op:operator>
        virtual <name pos:line="2914" pos:column="17">HRESULT</name> <name pos:line="2914" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2914" pos:column="43">GetPortName</name><argument_list pos:line="2914" pos:column="54">( 
            <comment type="block" pos:line="2915" pos:column="13">/* [out] */</comment> <argument pos:line="2915" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="2915" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2915" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2917" pos:column="9">virtual <name pos:line="2917" pos:column="17">HRESULT</name> <name pos:line="2917" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2917" pos:column="43">GetPortId</name><argument_list pos:line="2917" pos:column="52">( 
            <comment type="block" pos:line="2918" pos:column="13">/* [out] */</comment> <argument pos:line="2918" pos:column="25">__RPC__out GUID *pguidPort</argument>)</argument_list></macro> <op:operator pos:line="2918" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="2918" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="2920" pos:column="9">virtual <name pos:line="2920" pos:column="17">HRESULT</name> <name pos:line="2920" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2920" pos:column="43">GetPortRequest</name><argument_list pos:line="2920" pos:column="57">( 
            <comment type="block" pos:line="2921" pos:column="13">/* [out] */</comment> <argument pos:line="2921" pos:column="25">__RPC__deref_out_opt IDebugPortRequest2 **ppRequest</argument>)</argument_list></macro> <op:operator pos:line="2921" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="2921" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="2923" pos:column="9">virtual <name pos:line="2923" pos:column="17">HRESULT</name> <name pos:line="2923" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2923" pos:column="43">GetPortSupplier</name><argument_list pos:line="2923" pos:column="58">( 
            <comment type="block" pos:line="2924" pos:column="13">/* [out] */</comment> <argument pos:line="2924" pos:column="25">__RPC__deref_out_opt IDebugPortSupplier2 **ppSupplier</argument>)</argument_list></macro> <op:operator pos:line="2924" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="2924" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="2926" pos:column="9">virtual <name pos:line="2926" pos:column="17">HRESULT</name> <name pos:line="2926" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2926" pos:column="43">GetProcess</name><argument_list pos:line="2926" pos:column="53">( 
            <comment type="block" pos:line="2927" pos:column="13">/* [in] */</comment> <argument pos:line="2927" pos:column="24">AD_PROCESS_ID ProcessId</argument>,
            <comment type="block" pos:line="2928" pos:column="13">/* [out] */</comment> <argument pos:line="2928" pos:column="25">__RPC__deref_out_opt IDebugProcess2 **ppProcess</argument>)</argument_list></macro> <op:operator pos:line="2928" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2928" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="2930" pos:column="9">virtual <name pos:line="2930" pos:column="17">HRESULT</name> <name pos:line="2930" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2930" pos:column="43">EnumProcesses</name><argument_list pos:line="2930" pos:column="56">( 
            <comment type="block" pos:line="2931" pos:column="13">/* [out] */</comment> <argument pos:line="2931" pos:column="25">__RPC__deref_out_opt IEnumDebugProcesses2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2931" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="2931" pos:column="79">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2935" pos:column="1">#<cpp:directive pos:line="2935" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2935" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2937" pos:column="5">typedef <type><struct pos:line="2937" pos:column="13">struct <name pos:line="2937" pos:column="20">IDebugPort2Vtbl</name>
    <block pos:line="2938" pos:column="5">{<public type="default" pos:line="2938" pos:column="6">
        <function_decl><type><name pos:line="2939" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2941" pos:column="9">HRESULT</name></type> ( <name pos:line="2941" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2941" pos:column="37">*</type:modifier><name pos:line="2941" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2941" pos:column="54">( 
            <param><decl><type><name pos:line="2942" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2942" pos:column="25">*</type:modifier></type> <name pos:line="2942" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2943" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2943" pos:column="24">__RPC__in</name> <name pos:line="2943" pos:column="34">REFIID</name></type> <name pos:line="2943" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2944" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2945" pos:column="13">__RPC__deref_out</name>  <name pos:line="2945" pos:column="31">void</name> <type:modifier pos:line="2945" pos:column="36">*</type:modifier><type:modifier pos:line="2945" pos:column="37">*</type:modifier></type><name pos:line="2945" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2947" pos:column="9">ULONG</name></type> ( <name pos:line="2947" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2947" pos:column="35">*</type:modifier><name pos:line="2947" pos:column="36">AddRef</name> )<parameter_list pos:line="2947" pos:column="44">( 
            <param><decl><type><name pos:line="2948" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2948" pos:column="25">*</type:modifier></type> <name pos:line="2948" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2950" pos:column="9">ULONG</name></type> ( <name pos:line="2950" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2950" pos:column="35">*</type:modifier><name pos:line="2950" pos:column="36">Release</name> )<parameter_list pos:line="2950" pos:column="45">( 
            <param><decl><type><name pos:line="2951" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2951" pos:column="25">*</type:modifier></type> <name pos:line="2951" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2953" pos:column="9">HRESULT</name></type> ( <name pos:line="2953" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2953" pos:column="37">*</type:modifier><name pos:line="2953" pos:column="38">GetPortName</name> )<parameter_list pos:line="2953" pos:column="51">( 
            <param><decl><type><name pos:line="2954" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2954" pos:column="25">*</type:modifier></type> <name pos:line="2954" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2955" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2955" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2955" pos:column="46">BSTR</name> <type:modifier pos:line="2955" pos:column="51">*</type:modifier></type><name pos:line="2955" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2957" pos:column="9">HRESULT</name></type> ( <name pos:line="2957" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2957" pos:column="37">*</type:modifier><name pos:line="2957" pos:column="38">GetPortId</name> )<parameter_list pos:line="2957" pos:column="49">( 
            <param><decl><type><name pos:line="2958" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2958" pos:column="25">*</type:modifier></type> <name pos:line="2958" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2959" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2959" pos:column="25">__RPC__out</name> <name pos:line="2959" pos:column="36">GUID</name> <type:modifier pos:line="2959" pos:column="41">*</type:modifier></type><name pos:line="2959" pos:column="42">pguidPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2961" pos:column="9">HRESULT</name></type> ( <name pos:line="2961" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2961" pos:column="37">*</type:modifier><name pos:line="2961" pos:column="38">GetPortRequest</name> )<parameter_list pos:line="2961" pos:column="54">( 
            <param><decl><type><name pos:line="2962" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2962" pos:column="25">*</type:modifier></type> <name pos:line="2962" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2963" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2963" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2963" pos:column="46">IDebugPortRequest2</name> <type:modifier pos:line="2963" pos:column="65">*</type:modifier><type:modifier pos:line="2963" pos:column="66">*</type:modifier></type><name pos:line="2963" pos:column="67">ppRequest</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2965" pos:column="9">HRESULT</name></type> ( <name pos:line="2965" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2965" pos:column="37">*</type:modifier><name pos:line="2965" pos:column="38">GetPortSupplier</name> )<parameter_list pos:line="2965" pos:column="55">( 
            <param><decl><type><name pos:line="2966" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2966" pos:column="25">*</type:modifier></type> <name pos:line="2966" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2967" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2967" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2967" pos:column="46">IDebugPortSupplier2</name> <type:modifier pos:line="2967" pos:column="66">*</type:modifier><type:modifier pos:line="2967" pos:column="67">*</type:modifier></type><name pos:line="2967" pos:column="68">ppSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2969" pos:column="9">HRESULT</name></type> ( <name pos:line="2969" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2969" pos:column="37">*</type:modifier><name pos:line="2969" pos:column="38">GetProcess</name> )<parameter_list pos:line="2969" pos:column="50">( 
            <param><decl><type><name pos:line="2970" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2970" pos:column="25">*</type:modifier></type> <name pos:line="2970" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2971" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2971" pos:column="24">AD_PROCESS_ID</name></type> <name pos:line="2971" pos:column="38">ProcessId</name></decl></param>,
            <comment type="block" pos:line="2972" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2972" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2972" pos:column="46">IDebugProcess2</name> <type:modifier pos:line="2972" pos:column="61">*</type:modifier><type:modifier pos:line="2972" pos:column="62">*</type:modifier></type><name pos:line="2972" pos:column="63">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2974" pos:column="9">HRESULT</name></type> ( <name pos:line="2974" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2974" pos:column="37">*</type:modifier><name pos:line="2974" pos:column="38">EnumProcesses</name> )<parameter_list pos:line="2974" pos:column="53">( 
            <param><decl><type><name pos:line="2975" pos:column="13">IDebugPort2</name> <type:modifier pos:line="2975" pos:column="25">*</type:modifier></type> <name pos:line="2975" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="2976" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2976" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2976" pos:column="46">IEnumDebugProcesses2</name> <type:modifier pos:line="2976" pos:column="67">*</type:modifier><type:modifier pos:line="2976" pos:column="68">*</type:modifier></type><name pos:line="2976" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2978" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2979" pos:column="7">IDebugPort2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2981" pos:column="5">interface</name></type> <name pos:line="2981" pos:column="15">IDebugPort2</name>
    <argument_list pos:line="2982" pos:column="5">{
        <argument><expr><name pos:line="2983" pos:column="9">CONST_VTBL</name> struct <name pos:line="2983" pos:column="27">IDebugPort2Vtbl</name> <op:operator pos:line="2983" pos:column="43">*</op:operator><name pos:line="2983" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2988" pos:column="1">#<cpp:directive pos:line="2988" pos:column="2">ifdef</cpp:directive> <name pos:line="2988" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2991" pos:column="1">#<cpp:directive pos:line="2991" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2991" pos:column="9">IDebugPort2_QueryInterface</name><parameter_list pos:line="2991" pos:column="35">(<param><type><name pos:line="2991" pos:column="36">This</name></type></param>,<param><type><name pos:line="2991" pos:column="41">riid</name></type></param>,<param><type><name pos:line="2991" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2992" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2994" pos:column="1">#<cpp:directive pos:line="2994" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2994" pos:column="9">IDebugPort2_AddRef</name><parameter_list pos:line="2994" pos:column="27">(<param><type><name pos:line="2994" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2995" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2997" pos:column="1">#<cpp:directive pos:line="2997" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2997" pos:column="9">IDebugPort2_Release</name><parameter_list pos:line="2997" pos:column="28">(<param><type><name pos:line="2997" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2998" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3001" pos:column="1">#<cpp:directive pos:line="3001" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3001" pos:column="9">IDebugPort2_GetPortName</name><parameter_list pos:line="3001" pos:column="32">(<param><type><name pos:line="3001" pos:column="33">This</name></type></param>,<param><type><name pos:line="3001" pos:column="38">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3002" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="3004" pos:column="1">#<cpp:directive pos:line="3004" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3004" pos:column="9">IDebugPort2_GetPortId</name><parameter_list pos:line="3004" pos:column="30">(<param><type><name pos:line="3004" pos:column="31">This</name></type></param>,<param><type><name pos:line="3004" pos:column="36">pguidPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3005" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortId(This,pguidPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="3007" pos:column="1">#<cpp:directive pos:line="3007" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3007" pos:column="9">IDebugPort2_GetPortRequest</name><parameter_list pos:line="3007" pos:column="35">(<param><type><name pos:line="3007" pos:column="36">This</name></type></param>,<param><type><name pos:line="3007" pos:column="41">ppRequest</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3008" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortRequest(This,ppRequest) )</cpp:value></cpp:define> 

<cpp:define pos:line="3010" pos:column="1">#<cpp:directive pos:line="3010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3010" pos:column="9">IDebugPort2_GetPortSupplier</name><parameter_list pos:line="3010" pos:column="36">(<param><type><name pos:line="3010" pos:column="37">This</name></type></param>,<param><type><name pos:line="3010" pos:column="42">ppSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3011" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplier(This,ppSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="3013" pos:column="1">#<cpp:directive pos:line="3013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3013" pos:column="9">IDebugPort2_GetProcess</name><parameter_list pos:line="3013" pos:column="31">(<param><type><name pos:line="3013" pos:column="32">This</name></type></param>,<param><type><name pos:line="3013" pos:column="37">ProcessId</name></type></param>,<param><type><name pos:line="3013" pos:column="47">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3014" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcess(This,ProcessId,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="3016" pos:column="1">#<cpp:directive pos:line="3016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3016" pos:column="9">IDebugPort2_EnumProcesses</name><parameter_list pos:line="3016" pos:column="34">(<param><type><name pos:line="3016" pos:column="35">This</name></type></param>,<param><type><name pos:line="3016" pos:column="40">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3017" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumProcesses(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3019" pos:column="1">#<cpp:directive pos:line="3019" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3019" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3022" pos:column="1">#<cpp:directive pos:line="3022" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3022" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3027" pos:column="1">#<cpp:directive pos:line="3027" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3027" pos:column="9">/* __IDebugPort2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3030" pos:column="1">#<cpp:directive pos:line="3030" pos:column="2">ifndef</cpp:directive> <name pos:line="3030" pos:column="9">__IDebugDefaultPort2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3031" pos:column="1">#<cpp:directive pos:line="3031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3031" pos:column="9">__IDebugDefaultPort2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3033" pos:column="1">/* interface IDebugDefaultPort2 */</comment>
<comment type="block" pos:line="3034" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3037" pos:column="1">EXTERN_C</name> <specifier pos:line="3037" pos:column="10">const</specifier> <name pos:line="3037" pos:column="16">IID</name></type> <name pos:line="3037" pos:column="20">IID_IDebugDefaultPort2</name></decl>;</decl_stmt>

<cpp:if pos:line="3039" pos:column="1">#<cpp:directive pos:line="3039" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3039" pos:column="5">defined</name><argument_list pos:line="3039" pos:column="12">(<argument><expr><name pos:line="3039" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3039" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3039" pos:column="29">!</op:operator><call><name pos:line="3039" pos:column="30">defined</name><argument_list pos:line="3039" pos:column="37">(<argument><expr><name pos:line="3039" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3041" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3041" pos:column="19">(<argument pos:line="3041" pos:column="20">"302f0f55-1ede-4777-9b38-115e1f229d56"</argument>)</argument_list></macro>
    <label><name pos:line="3042" pos:column="5">IDebugDefaultPort2</name> :</label> <expr_stmt><expr pos:line="3042" pos:column="26">public <name pos:line="3042" pos:column="33">IDebugPort2</name>
    <block pos:line="3043" pos:column="5">{
    <expr pos:line="3044" pos:column="5">public<op:operator pos:line="3044" pos:column="11">:</op:operator>
        virtual <name pos:line="3045" pos:column="17">HRESULT</name> <name pos:line="3045" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3045" pos:column="43">GetPortNotify</name><argument_list pos:line="3045" pos:column="56">( 
            <comment type="block" pos:line="3046" pos:column="13">/* [out] */</comment> <argument pos:line="3046" pos:column="25">__RPC__deref_out_opt IDebugPortNotify2 **ppPortNotify</argument>)</argument_list></macro> <op:operator pos:line="3046" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="3046" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="3048" pos:column="9">virtual <name pos:line="3048" pos:column="17">HRESULT</name> <name pos:line="3048" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3048" pos:column="43">GetServer</name><argument_list pos:line="3048" pos:column="52">( 
            <comment type="block" pos:line="3049" pos:column="13">/* [out] */</comment> <argument pos:line="3049" pos:column="25">__RPC__deref_out_opt IDebugCoreServer3 **ppServer</argument>)</argument_list></macro> <op:operator pos:line="3049" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="3049" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="3051" pos:column="9">virtual <name pos:line="3051" pos:column="17">HRESULT</name> <name pos:line="3051" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3051" pos:column="43">QueryIsLocal</name><argument_list pos:line="3051" pos:column="55">( <argument><expr><name pos:line="3051" pos:column="57">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3051" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="3051" pos:column="65">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3055" pos:column="1">#<cpp:directive pos:line="3055" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3055" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3057" pos:column="5">typedef <type><struct pos:line="3057" pos:column="13">struct <name pos:line="3057" pos:column="20">IDebugDefaultPort2Vtbl</name>
    <block pos:line="3058" pos:column="5">{<public type="default" pos:line="3058" pos:column="6">
        <function_decl><type><name pos:line="3059" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3061" pos:column="9">HRESULT</name></type> ( <name pos:line="3061" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3061" pos:column="37">*</type:modifier><name pos:line="3061" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3061" pos:column="54">( 
            <param><decl><type><name pos:line="3062" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3062" pos:column="32">*</type:modifier></type> <name pos:line="3062" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3063" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3063" pos:column="24">__RPC__in</name> <name pos:line="3063" pos:column="34">REFIID</name></type> <name pos:line="3063" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3064" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3065" pos:column="13">__RPC__deref_out</name>  <name pos:line="3065" pos:column="31">void</name> <type:modifier pos:line="3065" pos:column="36">*</type:modifier><type:modifier pos:line="3065" pos:column="37">*</type:modifier></type><name pos:line="3065" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3067" pos:column="9">ULONG</name></type> ( <name pos:line="3067" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3067" pos:column="35">*</type:modifier><name pos:line="3067" pos:column="36">AddRef</name> )<parameter_list pos:line="3067" pos:column="44">( 
            <param><decl><type><name pos:line="3068" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3068" pos:column="32">*</type:modifier></type> <name pos:line="3068" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3070" pos:column="9">ULONG</name></type> ( <name pos:line="3070" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3070" pos:column="35">*</type:modifier><name pos:line="3070" pos:column="36">Release</name> )<parameter_list pos:line="3070" pos:column="45">( 
            <param><decl><type><name pos:line="3071" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3071" pos:column="32">*</type:modifier></type> <name pos:line="3071" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3073" pos:column="9">HRESULT</name></type> ( <name pos:line="3073" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3073" pos:column="37">*</type:modifier><name pos:line="3073" pos:column="38">GetPortName</name> )<parameter_list pos:line="3073" pos:column="51">( 
            <param><decl><type><name pos:line="3074" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3074" pos:column="32">*</type:modifier></type> <name pos:line="3074" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3075" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3075" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3075" pos:column="46">BSTR</name> <type:modifier pos:line="3075" pos:column="51">*</type:modifier></type><name pos:line="3075" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3077" pos:column="9">HRESULT</name></type> ( <name pos:line="3077" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3077" pos:column="37">*</type:modifier><name pos:line="3077" pos:column="38">GetPortId</name> )<parameter_list pos:line="3077" pos:column="49">( 
            <param><decl><type><name pos:line="3078" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3078" pos:column="32">*</type:modifier></type> <name pos:line="3078" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3079" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3079" pos:column="25">__RPC__out</name> <name pos:line="3079" pos:column="36">GUID</name> <type:modifier pos:line="3079" pos:column="41">*</type:modifier></type><name pos:line="3079" pos:column="42">pguidPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3081" pos:column="9">HRESULT</name></type> ( <name pos:line="3081" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3081" pos:column="37">*</type:modifier><name pos:line="3081" pos:column="38">GetPortRequest</name> )<parameter_list pos:line="3081" pos:column="54">( 
            <param><decl><type><name pos:line="3082" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3082" pos:column="32">*</type:modifier></type> <name pos:line="3082" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3083" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3083" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3083" pos:column="46">IDebugPortRequest2</name> <type:modifier pos:line="3083" pos:column="65">*</type:modifier><type:modifier pos:line="3083" pos:column="66">*</type:modifier></type><name pos:line="3083" pos:column="67">ppRequest</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3085" pos:column="9">HRESULT</name></type> ( <name pos:line="3085" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3085" pos:column="37">*</type:modifier><name pos:line="3085" pos:column="38">GetPortSupplier</name> )<parameter_list pos:line="3085" pos:column="55">( 
            <param><decl><type><name pos:line="3086" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3086" pos:column="32">*</type:modifier></type> <name pos:line="3086" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3087" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3087" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3087" pos:column="46">IDebugPortSupplier2</name> <type:modifier pos:line="3087" pos:column="66">*</type:modifier><type:modifier pos:line="3087" pos:column="67">*</type:modifier></type><name pos:line="3087" pos:column="68">ppSupplier</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3089" pos:column="9">HRESULT</name></type> ( <name pos:line="3089" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3089" pos:column="37">*</type:modifier><name pos:line="3089" pos:column="38">GetProcess</name> )<parameter_list pos:line="3089" pos:column="50">( 
            <param><decl><type><name pos:line="3090" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3090" pos:column="32">*</type:modifier></type> <name pos:line="3090" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3091" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3091" pos:column="24">AD_PROCESS_ID</name></type> <name pos:line="3091" pos:column="38">ProcessId</name></decl></param>,
            <comment type="block" pos:line="3092" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3092" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3092" pos:column="46">IDebugProcess2</name> <type:modifier pos:line="3092" pos:column="61">*</type:modifier><type:modifier pos:line="3092" pos:column="62">*</type:modifier></type><name pos:line="3092" pos:column="63">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3094" pos:column="9">HRESULT</name></type> ( <name pos:line="3094" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3094" pos:column="37">*</type:modifier><name pos:line="3094" pos:column="38">EnumProcesses</name> )<parameter_list pos:line="3094" pos:column="53">( 
            <param><decl><type><name pos:line="3095" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3095" pos:column="32">*</type:modifier></type> <name pos:line="3095" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3096" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3096" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3096" pos:column="46">IEnumDebugProcesses2</name> <type:modifier pos:line="3096" pos:column="67">*</type:modifier><type:modifier pos:line="3096" pos:column="68">*</type:modifier></type><name pos:line="3096" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3098" pos:column="9">HRESULT</name></type> ( <name pos:line="3098" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3098" pos:column="37">*</type:modifier><name pos:line="3098" pos:column="38">GetPortNotify</name> )<parameter_list pos:line="3098" pos:column="53">( 
            <param><decl><type><name pos:line="3099" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3099" pos:column="32">*</type:modifier></type> <name pos:line="3099" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3100" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3100" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3100" pos:column="46">IDebugPortNotify2</name> <type:modifier pos:line="3100" pos:column="64">*</type:modifier><type:modifier pos:line="3100" pos:column="65">*</type:modifier></type><name pos:line="3100" pos:column="66">ppPortNotify</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3102" pos:column="9">HRESULT</name></type> ( <name pos:line="3102" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3102" pos:column="37">*</type:modifier><name pos:line="3102" pos:column="38">GetServer</name> )<parameter_list pos:line="3102" pos:column="49">( 
            <param><decl><type><name pos:line="3103" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3103" pos:column="32">*</type:modifier></type> <name pos:line="3103" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3104" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3104" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3104" pos:column="46">IDebugCoreServer3</name> <type:modifier pos:line="3104" pos:column="64">*</type:modifier><type:modifier pos:line="3104" pos:column="65">*</type:modifier></type><name pos:line="3104" pos:column="66">ppServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3106" pos:column="9">HRESULT</name></type> ( <name pos:line="3106" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3106" pos:column="37">*</type:modifier><name pos:line="3106" pos:column="38">QueryIsLocal</name> )<parameter_list pos:line="3106" pos:column="52">( 
            <param><decl><type><name pos:line="3107" pos:column="13">IDebugDefaultPort2</name> <type:modifier pos:line="3107" pos:column="32">*</type:modifier></type> <name pos:line="3107" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3109" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3110" pos:column="7">IDebugDefaultPort2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3112" pos:column="5">interface</name></type> <name pos:line="3112" pos:column="15">IDebugDefaultPort2</name>
    <argument_list pos:line="3113" pos:column="5">{
        <argument><expr><name pos:line="3114" pos:column="9">CONST_VTBL</name> struct <name pos:line="3114" pos:column="27">IDebugDefaultPort2Vtbl</name> <op:operator pos:line="3114" pos:column="50">*</op:operator><name pos:line="3114" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3119" pos:column="1">#<cpp:directive pos:line="3119" pos:column="2">ifdef</cpp:directive> <name pos:line="3119" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3122" pos:column="1">#<cpp:directive pos:line="3122" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3122" pos:column="9">IDebugDefaultPort2_QueryInterface</name><parameter_list pos:line="3122" pos:column="42">(<param><type><name pos:line="3122" pos:column="43">This</name></type></param>,<param><type><name pos:line="3122" pos:column="48">riid</name></type></param>,<param><type><name pos:line="3122" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3123" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3125" pos:column="1">#<cpp:directive pos:line="3125" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3125" pos:column="9">IDebugDefaultPort2_AddRef</name><parameter_list pos:line="3125" pos:column="34">(<param><type><name pos:line="3125" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3126" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3128" pos:column="1">#<cpp:directive pos:line="3128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3128" pos:column="9">IDebugDefaultPort2_Release</name><parameter_list pos:line="3128" pos:column="35">(<param><type><name pos:line="3128" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3129" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3132" pos:column="1">#<cpp:directive pos:line="3132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3132" pos:column="9">IDebugDefaultPort2_GetPortName</name><parameter_list pos:line="3132" pos:column="39">(<param><type><name pos:line="3132" pos:column="40">This</name></type></param>,<param><type><name pos:line="3132" pos:column="45">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3133" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="3135" pos:column="1">#<cpp:directive pos:line="3135" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3135" pos:column="9">IDebugDefaultPort2_GetPortId</name><parameter_list pos:line="3135" pos:column="37">(<param><type><name pos:line="3135" pos:column="38">This</name></type></param>,<param><type><name pos:line="3135" pos:column="43">pguidPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3136" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortId(This,pguidPort) )</cpp:value></cpp:define> 

<cpp:define pos:line="3138" pos:column="1">#<cpp:directive pos:line="3138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3138" pos:column="9">IDebugDefaultPort2_GetPortRequest</name><parameter_list pos:line="3138" pos:column="42">(<param><type><name pos:line="3138" pos:column="43">This</name></type></param>,<param><type><name pos:line="3138" pos:column="48">ppRequest</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3139" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortRequest(This,ppRequest) )</cpp:value></cpp:define> 

<cpp:define pos:line="3141" pos:column="1">#<cpp:directive pos:line="3141" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3141" pos:column="9">IDebugDefaultPort2_GetPortSupplier</name><parameter_list pos:line="3141" pos:column="43">(<param><type><name pos:line="3141" pos:column="44">This</name></type></param>,<param><type><name pos:line="3141" pos:column="49">ppSupplier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3142" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortSupplier(This,ppSupplier) )</cpp:value></cpp:define> 

<cpp:define pos:line="3144" pos:column="1">#<cpp:directive pos:line="3144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3144" pos:column="9">IDebugDefaultPort2_GetProcess</name><parameter_list pos:line="3144" pos:column="38">(<param><type><name pos:line="3144" pos:column="39">This</name></type></param>,<param><type><name pos:line="3144" pos:column="44">ProcessId</name></type></param>,<param><type><name pos:line="3144" pos:column="54">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3145" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcess(This,ProcessId,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="3147" pos:column="1">#<cpp:directive pos:line="3147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3147" pos:column="9">IDebugDefaultPort2_EnumProcesses</name><parameter_list pos:line="3147" pos:column="41">(<param><type><name pos:line="3147" pos:column="42">This</name></type></param>,<param><type><name pos:line="3147" pos:column="47">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3148" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumProcesses(This,ppEnum) )</cpp:value></cpp:define> 


<cpp:define pos:line="3151" pos:column="1">#<cpp:directive pos:line="3151" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3151" pos:column="9">IDebugDefaultPort2_GetPortNotify</name><parameter_list pos:line="3151" pos:column="41">(<param><type><name pos:line="3151" pos:column="42">This</name></type></param>,<param><type><name pos:line="3151" pos:column="47">ppPortNotify</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3152" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortNotify(This,ppPortNotify) )</cpp:value></cpp:define> 

<cpp:define pos:line="3154" pos:column="1">#<cpp:directive pos:line="3154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3154" pos:column="9">IDebugDefaultPort2_GetServer</name><parameter_list pos:line="3154" pos:column="37">(<param><type><name pos:line="3154" pos:column="38">This</name></type></param>,<param><type><name pos:line="3154" pos:column="43">ppServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3155" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServer(This,ppServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3157" pos:column="1">#<cpp:directive pos:line="3157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3157" pos:column="9">IDebugDefaultPort2_QueryIsLocal</name><parameter_list pos:line="3157" pos:column="40">(<param><type><name pos:line="3157" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3158" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryIsLocal(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3160" pos:column="1">#<cpp:directive pos:line="3160" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3160" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3163" pos:column="1">#<cpp:directive pos:line="3163" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3163" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3168" pos:column="1">#<cpp:directive pos:line="3168" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3168" pos:column="9">/* __IDebugDefaultPort2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3171" pos:column="1">#<cpp:directive pos:line="3171" pos:column="2">ifndef</cpp:directive> <name pos:line="3171" pos:column="9">__IDebugWindowsComputerPort2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3172" pos:column="1">#<cpp:directive pos:line="3172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3172" pos:column="9">__IDebugWindowsComputerPort2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3174" pos:column="1">/* interface IDebugWindowsComputerPort2 */</comment>
<comment type="block" pos:line="3175" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="3177" pos:column="1">typedef <type><struct pos:line="3177" pos:column="9">struct <name pos:line="3177" pos:column="16">tagCOMPUTER_INFO</name>
    <block pos:line="3178" pos:column="5">{<public type="default" pos:line="3178" pos:column="6">
    <decl_stmt><decl><type><name pos:line="3179" pos:column="5">WORD</name></type> <name pos:line="3179" pos:column="10">wProcessorArchitecture</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3180" pos:column="5">WORD</name></type> <name pos:line="3180" pos:column="10">wSuiteMask</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3181" pos:column="5">DWORD</name></type> <name pos:line="3181" pos:column="11">dwOperatingSystemVersion</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="3182" pos:column="9">COMPUTER_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="3185" pos:column="1">EXTERN_C</name> <specifier pos:line="3185" pos:column="10">const</specifier> <name pos:line="3185" pos:column="16">IID</name></type> <name pos:line="3185" pos:column="20">IID_IDebugWindowsComputerPort2</name></decl>;</decl_stmt>

<cpp:if pos:line="3187" pos:column="1">#<cpp:directive pos:line="3187" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3187" pos:column="5">defined</name><argument_list pos:line="3187" pos:column="12">(<argument><expr><name pos:line="3187" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3187" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3187" pos:column="29">!</op:operator><call><name pos:line="3187" pos:column="30">defined</name><argument_list pos:line="3187" pos:column="37">(<argument><expr><name pos:line="3187" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3189" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3189" pos:column="19">(<argument pos:line="3189" pos:column="20">"5fbb8ed3-ecdb-412a-bfa3-3a54beb5b2d1"</argument>)</argument_list></macro>
    <label><name pos:line="3190" pos:column="5">IDebugWindowsComputerPort2</name> :</label> <expr_stmt><expr pos:line="3190" pos:column="34">public <name pos:line="3190" pos:column="41">IUnknown</name>
    <block pos:line="3191" pos:column="5">{
    <expr pos:line="3192" pos:column="5">public<op:operator pos:line="3192" pos:column="11">:</op:operator>
        virtual <name pos:line="3193" pos:column="17">HRESULT</name> <name pos:line="3193" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3193" pos:column="43">GetComputerInfo</name><argument_list pos:line="3193" pos:column="58">( 
            <comment type="block" pos:line="3194" pos:column="13">/* [out] */</comment> <argument pos:line="3194" pos:column="25">__RPC__out COMPUTER_INFO *pInfo</argument>)</argument_list></macro> <op:operator pos:line="3194" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="3194" pos:column="60">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3198" pos:column="1">#<cpp:directive pos:line="3198" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3198" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3200" pos:column="5">typedef <type><struct pos:line="3200" pos:column="13">struct <name pos:line="3200" pos:column="20">IDebugWindowsComputerPort2Vtbl</name>
    <block pos:line="3201" pos:column="5">{<public type="default" pos:line="3201" pos:column="6">
        <function_decl><type><name pos:line="3202" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3204" pos:column="9">HRESULT</name></type> ( <name pos:line="3204" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3204" pos:column="37">*</type:modifier><name pos:line="3204" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3204" pos:column="54">( 
            <param><decl><type><name pos:line="3205" pos:column="13">IDebugWindowsComputerPort2</name> <type:modifier pos:line="3205" pos:column="40">*</type:modifier></type> <name pos:line="3205" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3206" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3206" pos:column="24">__RPC__in</name> <name pos:line="3206" pos:column="34">REFIID</name></type> <name pos:line="3206" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3207" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3208" pos:column="13">__RPC__deref_out</name>  <name pos:line="3208" pos:column="31">void</name> <type:modifier pos:line="3208" pos:column="36">*</type:modifier><type:modifier pos:line="3208" pos:column="37">*</type:modifier></type><name pos:line="3208" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3210" pos:column="9">ULONG</name></type> ( <name pos:line="3210" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3210" pos:column="35">*</type:modifier><name pos:line="3210" pos:column="36">AddRef</name> )<parameter_list pos:line="3210" pos:column="44">( 
            <param><decl><type><name pos:line="3211" pos:column="13">IDebugWindowsComputerPort2</name> <type:modifier pos:line="3211" pos:column="40">*</type:modifier></type> <name pos:line="3211" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3213" pos:column="9">ULONG</name></type> ( <name pos:line="3213" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3213" pos:column="35">*</type:modifier><name pos:line="3213" pos:column="36">Release</name> )<parameter_list pos:line="3213" pos:column="45">( 
            <param><decl><type><name pos:line="3214" pos:column="13">IDebugWindowsComputerPort2</name> <type:modifier pos:line="3214" pos:column="40">*</type:modifier></type> <name pos:line="3214" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3216" pos:column="9">HRESULT</name></type> ( <name pos:line="3216" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3216" pos:column="37">*</type:modifier><name pos:line="3216" pos:column="38">GetComputerInfo</name> )<parameter_list pos:line="3216" pos:column="55">( 
            <param><decl><type><name pos:line="3217" pos:column="13">IDebugWindowsComputerPort2</name> <type:modifier pos:line="3217" pos:column="40">*</type:modifier></type> <name pos:line="3217" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="3218" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3218" pos:column="25">__RPC__out</name> <name pos:line="3218" pos:column="36">COMPUTER_INFO</name> <type:modifier pos:line="3218" pos:column="50">*</type:modifier></type><name pos:line="3218" pos:column="51">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3220" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3221" pos:column="7">IDebugWindowsComputerPort2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3223" pos:column="5">interface</name></type> <name pos:line="3223" pos:column="15">IDebugWindowsComputerPort2</name>
    <argument_list pos:line="3224" pos:column="5">{
        <argument><expr><name pos:line="3225" pos:column="9">CONST_VTBL</name> struct <name pos:line="3225" pos:column="27">IDebugWindowsComputerPort2Vtbl</name> <op:operator pos:line="3225" pos:column="58">*</op:operator><name pos:line="3225" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3230" pos:column="1">#<cpp:directive pos:line="3230" pos:column="2">ifdef</cpp:directive> <name pos:line="3230" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3233" pos:column="1">#<cpp:directive pos:line="3233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3233" pos:column="9">IDebugWindowsComputerPort2_QueryInterface</name><parameter_list pos:line="3233" pos:column="50">(<param><type><name pos:line="3233" pos:column="51">This</name></type></param>,<param><type><name pos:line="3233" pos:column="56">riid</name></type></param>,<param><type><name pos:line="3233" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3234" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3236" pos:column="1">#<cpp:directive pos:line="3236" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3236" pos:column="9">IDebugWindowsComputerPort2_AddRef</name><parameter_list pos:line="3236" pos:column="42">(<param><type><name pos:line="3236" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3237" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3239" pos:column="1">#<cpp:directive pos:line="3239" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3239" pos:column="9">IDebugWindowsComputerPort2_Release</name><parameter_list pos:line="3239" pos:column="43">(<param><type><name pos:line="3239" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3240" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3243" pos:column="1">#<cpp:directive pos:line="3243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3243" pos:column="9">IDebugWindowsComputerPort2_GetComputerInfo</name><parameter_list pos:line="3243" pos:column="51">(<param><type><name pos:line="3243" pos:column="52">This</name></type></param>,<param><type><name pos:line="3243" pos:column="57">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3244" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetComputerInfo(This,pInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3246" pos:column="1">#<cpp:directive pos:line="3246" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3246" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3249" pos:column="1">#<cpp:directive pos:line="3249" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3249" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3254" pos:column="1">#<cpp:directive pos:line="3254" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3254" pos:column="9">/* __IDebugWindowsComputerPort2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3257" pos:column="1">#<cpp:directive pos:line="3257" pos:column="2">ifndef</cpp:directive> <name pos:line="3257" pos:column="9">__IDebugPortRequest2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3258" pos:column="1">#<cpp:directive pos:line="3258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3258" pos:column="9">__IDebugPortRequest2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3260" pos:column="1">/* interface IDebugPortRequest2 */</comment>
<comment type="block" pos:line="3261" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3264" pos:column="1">EXTERN_C</name> <specifier pos:line="3264" pos:column="10">const</specifier> <name pos:line="3264" pos:column="16">IID</name></type> <name pos:line="3264" pos:column="20">IID_IDebugPortRequest2</name></decl>;</decl_stmt>

<cpp:if pos:line="3266" pos:column="1">#<cpp:directive pos:line="3266" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3266" pos:column="5">defined</name><argument_list pos:line="3266" pos:column="12">(<argument><expr><name pos:line="3266" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3266" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3266" pos:column="29">!</op:operator><call><name pos:line="3266" pos:column="30">defined</name><argument_list pos:line="3266" pos:column="37">(<argument><expr><name pos:line="3266" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3268" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3268" pos:column="19">(<argument pos:line="3268" pos:column="20">"8d36beb8-9bfe-47dd-a11b-7ba1de18e449"</argument>)</argument_list></macro>
    <label><name pos:line="3269" pos:column="5">IDebugPortRequest2</name> :</label> <expr_stmt><expr pos:line="3269" pos:column="26">public <name pos:line="3269" pos:column="33">IUnknown</name>
    <block pos:line="3270" pos:column="5">{
    <expr pos:line="3271" pos:column="5">public<op:operator pos:line="3271" pos:column="11">:</op:operator>
        virtual <name pos:line="3272" pos:column="17">HRESULT</name> <name pos:line="3272" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3272" pos:column="43">GetPortName</name><argument_list pos:line="3272" pos:column="54">( 
            <comment type="block" pos:line="3273" pos:column="13">/* [out] */</comment> <argument pos:line="3273" pos:column="25">__RPC__deref_out_opt BSTR *pbstrPortName</argument>)</argument_list></macro> <op:operator pos:line="3273" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="3273" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3277" pos:column="1">#<cpp:directive pos:line="3277" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3277" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3279" pos:column="5">typedef <type><struct pos:line="3279" pos:column="13">struct <name pos:line="3279" pos:column="20">IDebugPortRequest2Vtbl</name>
    <block pos:line="3280" pos:column="5">{<public type="default" pos:line="3280" pos:column="6">
        <function_decl><type><name pos:line="3281" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3283" pos:column="9">HRESULT</name></type> ( <name pos:line="3283" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3283" pos:column="37">*</type:modifier><name pos:line="3283" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3283" pos:column="54">( 
            <param><decl><type><name pos:line="3284" pos:column="13">IDebugPortRequest2</name> <type:modifier pos:line="3284" pos:column="32">*</type:modifier></type> <name pos:line="3284" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3285" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3285" pos:column="24">__RPC__in</name> <name pos:line="3285" pos:column="34">REFIID</name></type> <name pos:line="3285" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3286" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3287" pos:column="13">__RPC__deref_out</name>  <name pos:line="3287" pos:column="31">void</name> <type:modifier pos:line="3287" pos:column="36">*</type:modifier><type:modifier pos:line="3287" pos:column="37">*</type:modifier></type><name pos:line="3287" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3289" pos:column="9">ULONG</name></type> ( <name pos:line="3289" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3289" pos:column="35">*</type:modifier><name pos:line="3289" pos:column="36">AddRef</name> )<parameter_list pos:line="3289" pos:column="44">( 
            <param><decl><type><name pos:line="3290" pos:column="13">IDebugPortRequest2</name> <type:modifier pos:line="3290" pos:column="32">*</type:modifier></type> <name pos:line="3290" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3292" pos:column="9">ULONG</name></type> ( <name pos:line="3292" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3292" pos:column="35">*</type:modifier><name pos:line="3292" pos:column="36">Release</name> )<parameter_list pos:line="3292" pos:column="45">( 
            <param><decl><type><name pos:line="3293" pos:column="13">IDebugPortRequest2</name> <type:modifier pos:line="3293" pos:column="32">*</type:modifier></type> <name pos:line="3293" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3295" pos:column="9">HRESULT</name></type> ( <name pos:line="3295" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3295" pos:column="37">*</type:modifier><name pos:line="3295" pos:column="38">GetPortName</name> )<parameter_list pos:line="3295" pos:column="51">( 
            <param><decl><type><name pos:line="3296" pos:column="13">IDebugPortRequest2</name> <type:modifier pos:line="3296" pos:column="32">*</type:modifier></type> <name pos:line="3296" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="3297" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3297" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3297" pos:column="46">BSTR</name> <type:modifier pos:line="3297" pos:column="51">*</type:modifier></type><name pos:line="3297" pos:column="52">pbstrPortName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3299" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3300" pos:column="7">IDebugPortRequest2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3302" pos:column="5">interface</name></type> <name pos:line="3302" pos:column="15">IDebugPortRequest2</name>
    <argument_list pos:line="3303" pos:column="5">{
        <argument><expr><name pos:line="3304" pos:column="9">CONST_VTBL</name> struct <name pos:line="3304" pos:column="27">IDebugPortRequest2Vtbl</name> <op:operator pos:line="3304" pos:column="50">*</op:operator><name pos:line="3304" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3309" pos:column="1">#<cpp:directive pos:line="3309" pos:column="2">ifdef</cpp:directive> <name pos:line="3309" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3312" pos:column="1">#<cpp:directive pos:line="3312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3312" pos:column="9">IDebugPortRequest2_QueryInterface</name><parameter_list pos:line="3312" pos:column="42">(<param><type><name pos:line="3312" pos:column="43">This</name></type></param>,<param><type><name pos:line="3312" pos:column="48">riid</name></type></param>,<param><type><name pos:line="3312" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3313" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3315" pos:column="1">#<cpp:directive pos:line="3315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3315" pos:column="9">IDebugPortRequest2_AddRef</name><parameter_list pos:line="3315" pos:column="34">(<param><type><name pos:line="3315" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3316" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3318" pos:column="1">#<cpp:directive pos:line="3318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3318" pos:column="9">IDebugPortRequest2_Release</name><parameter_list pos:line="3318" pos:column="35">(<param><type><name pos:line="3318" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3319" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3322" pos:column="1">#<cpp:directive pos:line="3322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3322" pos:column="9">IDebugPortRequest2_GetPortName</name><parameter_list pos:line="3322" pos:column="39">(<param><type><name pos:line="3322" pos:column="40">This</name></type></param>,<param><type><name pos:line="3322" pos:column="45">pbstrPortName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3323" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPortName(This,pbstrPortName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3325" pos:column="1">#<cpp:directive pos:line="3325" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3325" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3328" pos:column="1">#<cpp:directive pos:line="3328" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3328" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3333" pos:column="1">#<cpp:directive pos:line="3333" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3333" pos:column="9">/* __IDebugPortRequest2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3336" pos:column="1">#<cpp:directive pos:line="3336" pos:column="2">ifndef</cpp:directive> <name pos:line="3336" pos:column="9">__IDebugPortNotify2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3337" pos:column="1">#<cpp:directive pos:line="3337" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3337" pos:column="9">__IDebugPortNotify2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3339" pos:column="1">/* interface IDebugPortNotify2 */</comment>
<comment type="block" pos:line="3340" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3343" pos:column="1">EXTERN_C</name> <specifier pos:line="3343" pos:column="10">const</specifier> <name pos:line="3343" pos:column="16">IID</name></type> <name pos:line="3343" pos:column="20">IID_IDebugPortNotify2</name></decl>;</decl_stmt>

<cpp:if pos:line="3345" pos:column="1">#<cpp:directive pos:line="3345" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3345" pos:column="5">defined</name><argument_list pos:line="3345" pos:column="12">(<argument><expr><name pos:line="3345" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3345" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3345" pos:column="29">!</op:operator><call><name pos:line="3345" pos:column="30">defined</name><argument_list pos:line="3345" pos:column="37">(<argument><expr><name pos:line="3345" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3347" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3347" pos:column="19">(<argument pos:line="3347" pos:column="20">"fb8d2032-2858-414c-83d9-f732664e0c7a"</argument>)</argument_list></macro>
    <label><name pos:line="3348" pos:column="5">IDebugPortNotify2</name> :</label> <expr_stmt><expr pos:line="3348" pos:column="25">public <name pos:line="3348" pos:column="32">IUnknown</name>
    <block pos:line="3349" pos:column="5">{
    <expr pos:line="3350" pos:column="5">public<op:operator pos:line="3350" pos:column="11">:</op:operator>
        virtual <name pos:line="3351" pos:column="17">HRESULT</name> <name pos:line="3351" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3351" pos:column="43">AddProgramNode</name><argument_list pos:line="3351" pos:column="57">( 
            <comment type="block" pos:line="3352" pos:column="13">/* [in] */</comment> <argument pos:line="3352" pos:column="24">__RPC__in_opt IDebugProgramNode2 *pProgramNode</argument>)</argument_list></macro> <op:operator pos:line="3352" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="3352" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="3354" pos:column="9">virtual <name pos:line="3354" pos:column="17">HRESULT</name> <name pos:line="3354" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3354" pos:column="43">RemoveProgramNode</name><argument_list pos:line="3354" pos:column="60">( 
            <comment type="block" pos:line="3355" pos:column="13">/* [in] */</comment> <argument pos:line="3355" pos:column="24">__RPC__in_opt IDebugProgramNode2 *pProgramNode</argument>)</argument_list></macro> <op:operator pos:line="3355" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="3355" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3359" pos:column="1">#<cpp:directive pos:line="3359" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3359" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3361" pos:column="5">typedef <type><struct pos:line="3361" pos:column="13">struct <name pos:line="3361" pos:column="20">IDebugPortNotify2Vtbl</name>
    <block pos:line="3362" pos:column="5">{<public type="default" pos:line="3362" pos:column="6">
        <function_decl><type><name pos:line="3363" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3365" pos:column="9">HRESULT</name></type> ( <name pos:line="3365" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3365" pos:column="37">*</type:modifier><name pos:line="3365" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3365" pos:column="54">( 
            <param><decl><type><name pos:line="3366" pos:column="13">IDebugPortNotify2</name> <type:modifier pos:line="3366" pos:column="31">*</type:modifier></type> <name pos:line="3366" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3367" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3367" pos:column="24">__RPC__in</name> <name pos:line="3367" pos:column="34">REFIID</name></type> <name pos:line="3367" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3368" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3369" pos:column="13">__RPC__deref_out</name>  <name pos:line="3369" pos:column="31">void</name> <type:modifier pos:line="3369" pos:column="36">*</type:modifier><type:modifier pos:line="3369" pos:column="37">*</type:modifier></type><name pos:line="3369" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3371" pos:column="9">ULONG</name></type> ( <name pos:line="3371" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3371" pos:column="35">*</type:modifier><name pos:line="3371" pos:column="36">AddRef</name> )<parameter_list pos:line="3371" pos:column="44">( 
            <param><decl><type><name pos:line="3372" pos:column="13">IDebugPortNotify2</name> <type:modifier pos:line="3372" pos:column="31">*</type:modifier></type> <name pos:line="3372" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3374" pos:column="9">ULONG</name></type> ( <name pos:line="3374" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3374" pos:column="35">*</type:modifier><name pos:line="3374" pos:column="36">Release</name> )<parameter_list pos:line="3374" pos:column="45">( 
            <param><decl><type><name pos:line="3375" pos:column="13">IDebugPortNotify2</name> <type:modifier pos:line="3375" pos:column="31">*</type:modifier></type> <name pos:line="3375" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3377" pos:column="9">HRESULT</name></type> ( <name pos:line="3377" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3377" pos:column="37">*</type:modifier><name pos:line="3377" pos:column="38">AddProgramNode</name> )<parameter_list pos:line="3377" pos:column="54">( 
            <param><decl><type><name pos:line="3378" pos:column="13">IDebugPortNotify2</name> <type:modifier pos:line="3378" pos:column="31">*</type:modifier></type> <name pos:line="3378" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3379" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3379" pos:column="24">__RPC__in_opt</name> <name pos:line="3379" pos:column="38">IDebugProgramNode2</name> <type:modifier pos:line="3379" pos:column="57">*</type:modifier></type><name pos:line="3379" pos:column="58">pProgramNode</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3381" pos:column="9">HRESULT</name></type> ( <name pos:line="3381" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3381" pos:column="37">*</type:modifier><name pos:line="3381" pos:column="38">RemoveProgramNode</name> )<parameter_list pos:line="3381" pos:column="57">( 
            <param><decl><type><name pos:line="3382" pos:column="13">IDebugPortNotify2</name> <type:modifier pos:line="3382" pos:column="31">*</type:modifier></type> <name pos:line="3382" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3383" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3383" pos:column="24">__RPC__in_opt</name> <name pos:line="3383" pos:column="38">IDebugProgramNode2</name> <type:modifier pos:line="3383" pos:column="57">*</type:modifier></type><name pos:line="3383" pos:column="58">pProgramNode</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3385" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3386" pos:column="7">IDebugPortNotify2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3388" pos:column="5">interface</name></type> <name pos:line="3388" pos:column="15">IDebugPortNotify2</name>
    <argument_list pos:line="3389" pos:column="5">{
        <argument><expr><name pos:line="3390" pos:column="9">CONST_VTBL</name> struct <name pos:line="3390" pos:column="27">IDebugPortNotify2Vtbl</name> <op:operator pos:line="3390" pos:column="49">*</op:operator><name pos:line="3390" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3395" pos:column="1">#<cpp:directive pos:line="3395" pos:column="2">ifdef</cpp:directive> <name pos:line="3395" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3398" pos:column="1">#<cpp:directive pos:line="3398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3398" pos:column="9">IDebugPortNotify2_QueryInterface</name><parameter_list pos:line="3398" pos:column="41">(<param><type><name pos:line="3398" pos:column="42">This</name></type></param>,<param><type><name pos:line="3398" pos:column="47">riid</name></type></param>,<param><type><name pos:line="3398" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3399" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3401" pos:column="1">#<cpp:directive pos:line="3401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3401" pos:column="9">IDebugPortNotify2_AddRef</name><parameter_list pos:line="3401" pos:column="33">(<param><type><name pos:line="3401" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3402" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3404" pos:column="1">#<cpp:directive pos:line="3404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3404" pos:column="9">IDebugPortNotify2_Release</name><parameter_list pos:line="3404" pos:column="34">(<param><type><name pos:line="3404" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3405" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3408" pos:column="1">#<cpp:directive pos:line="3408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3408" pos:column="9">IDebugPortNotify2_AddProgramNode</name><parameter_list pos:line="3408" pos:column="41">(<param><type><name pos:line="3408" pos:column="42">This</name></type></param>,<param><type><name pos:line="3408" pos:column="47">pProgramNode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3409" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddProgramNode(This,pProgramNode) )</cpp:value></cpp:define> 

<cpp:define pos:line="3411" pos:column="1">#<cpp:directive pos:line="3411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3411" pos:column="9">IDebugPortNotify2_RemoveProgramNode</name><parameter_list pos:line="3411" pos:column="44">(<param><type><name pos:line="3411" pos:column="45">This</name></type></param>,<param><type><name pos:line="3411" pos:column="50">pProgramNode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3412" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveProgramNode(This,pProgramNode) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3414" pos:column="1">#<cpp:directive pos:line="3414" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3414" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3417" pos:column="1">#<cpp:directive pos:line="3417" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3417" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3422" pos:column="1">#<cpp:directive pos:line="3422" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3422" pos:column="9">/* __IDebugPortNotify2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3425" pos:column="1">#<cpp:directive pos:line="3425" pos:column="2">ifndef</cpp:directive> <name pos:line="3425" pos:column="9">__IDebugPortEvents2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3426" pos:column="1">#<cpp:directive pos:line="3426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3426" pos:column="9">__IDebugPortEvents2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3428" pos:column="1">/* interface IDebugPortEvents2 */</comment>
<comment type="block" pos:line="3429" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3432" pos:column="1">EXTERN_C</name> <specifier pos:line="3432" pos:column="10">const</specifier> <name pos:line="3432" pos:column="16">IID</name></type> <name pos:line="3432" pos:column="20">IID_IDebugPortEvents2</name></decl>;</decl_stmt>

<cpp:if pos:line="3434" pos:column="1">#<cpp:directive pos:line="3434" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3434" pos:column="5">defined</name><argument_list pos:line="3434" pos:column="12">(<argument><expr><name pos:line="3434" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3434" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3434" pos:column="29">!</op:operator><call><name pos:line="3434" pos:column="30">defined</name><argument_list pos:line="3434" pos:column="37">(<argument><expr><name pos:line="3434" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3436" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3436" pos:column="19">(<argument pos:line="3436" pos:column="20">"564fa275-12e1-4b5f-8316-4d79bcef7246"</argument>)</argument_list></macro>
    <label><name pos:line="3437" pos:column="5">IDebugPortEvents2</name> :</label> <expr_stmt><expr pos:line="3437" pos:column="25">public <name pos:line="3437" pos:column="32">IUnknown</name>
    <block pos:line="3438" pos:column="5">{
    <expr pos:line="3439" pos:column="5">public<op:operator pos:line="3439" pos:column="11">:</op:operator>
        virtual <name pos:line="3440" pos:column="17">HRESULT</name> <name pos:line="3440" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3440" pos:column="43">Event</name><argument_list pos:line="3440" pos:column="48">( 
            <comment type="block" pos:line="3441" pos:column="13">/* [in] */</comment> <argument pos:line="3441" pos:column="24">__RPC__in_opt IDebugCoreServer2 *pServer</argument>,
            <comment type="block" pos:line="3442" pos:column="13">/* [in] */</comment> <argument pos:line="3442" pos:column="24">__RPC__in_opt IDebugPort2 *pPort</argument>,
            <comment type="block" pos:line="3443" pos:column="13">/* [in] */</comment> <argument pos:line="3443" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>,
            <comment type="block" pos:line="3444" pos:column="13">/* [in] */</comment> <argument pos:line="3444" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="3445" pos:column="13">/* [in] */</comment> <argument pos:line="3445" pos:column="24">__RPC__in_opt IDebugEvent2 *pEvent</argument>,
            <comment type="block" pos:line="3446" pos:column="13">/* [in] */</comment> <argument pos:line="3446" pos:column="24">__RPC__in REFIID riidEvent</argument>)</argument_list></macro> <op:operator pos:line="3446" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="3446" pos:column="54">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3450" pos:column="1">#<cpp:directive pos:line="3450" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3450" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3452" pos:column="5">typedef <type><struct pos:line="3452" pos:column="13">struct <name pos:line="3452" pos:column="20">IDebugPortEvents2Vtbl</name>
    <block pos:line="3453" pos:column="5">{<public type="default" pos:line="3453" pos:column="6">
        <function_decl><type><name pos:line="3454" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3456" pos:column="9">HRESULT</name></type> ( <name pos:line="3456" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3456" pos:column="37">*</type:modifier><name pos:line="3456" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3456" pos:column="54">( 
            <param><decl><type><name pos:line="3457" pos:column="13">IDebugPortEvents2</name> <type:modifier pos:line="3457" pos:column="31">*</type:modifier></type> <name pos:line="3457" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3458" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3458" pos:column="24">__RPC__in</name> <name pos:line="3458" pos:column="34">REFIID</name></type> <name pos:line="3458" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3459" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3460" pos:column="13">__RPC__deref_out</name>  <name pos:line="3460" pos:column="31">void</name> <type:modifier pos:line="3460" pos:column="36">*</type:modifier><type:modifier pos:line="3460" pos:column="37">*</type:modifier></type><name pos:line="3460" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3462" pos:column="9">ULONG</name></type> ( <name pos:line="3462" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3462" pos:column="35">*</type:modifier><name pos:line="3462" pos:column="36">AddRef</name> )<parameter_list pos:line="3462" pos:column="44">( 
            <param><decl><type><name pos:line="3463" pos:column="13">IDebugPortEvents2</name> <type:modifier pos:line="3463" pos:column="31">*</type:modifier></type> <name pos:line="3463" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3465" pos:column="9">ULONG</name></type> ( <name pos:line="3465" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3465" pos:column="35">*</type:modifier><name pos:line="3465" pos:column="36">Release</name> )<parameter_list pos:line="3465" pos:column="45">( 
            <param><decl><type><name pos:line="3466" pos:column="13">IDebugPortEvents2</name> <type:modifier pos:line="3466" pos:column="31">*</type:modifier></type> <name pos:line="3466" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3468" pos:column="9">HRESULT</name></type> ( <name pos:line="3468" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3468" pos:column="37">*</type:modifier><name pos:line="3468" pos:column="38">Event</name> )<parameter_list pos:line="3468" pos:column="45">( 
            <param><decl><type><name pos:line="3469" pos:column="13">IDebugPortEvents2</name> <type:modifier pos:line="3469" pos:column="31">*</type:modifier></type> <name pos:line="3469" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3470" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3470" pos:column="24">__RPC__in_opt</name> <name pos:line="3470" pos:column="38">IDebugCoreServer2</name> <type:modifier pos:line="3470" pos:column="56">*</type:modifier></type><name pos:line="3470" pos:column="57">pServer</name></decl></param>,
            <comment type="block" pos:line="3471" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3471" pos:column="24">__RPC__in_opt</name> <name pos:line="3471" pos:column="38">IDebugPort2</name> <type:modifier pos:line="3471" pos:column="50">*</type:modifier></type><name pos:line="3471" pos:column="51">pPort</name></decl></param>,
            <comment type="block" pos:line="3472" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3472" pos:column="24">__RPC__in_opt</name> <name pos:line="3472" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="3472" pos:column="53">*</type:modifier></type><name pos:line="3472" pos:column="54">pProcess</name></decl></param>,
            <comment type="block" pos:line="3473" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3473" pos:column="24">__RPC__in_opt</name> <name pos:line="3473" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="3473" pos:column="53">*</type:modifier></type><name pos:line="3473" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="3474" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3474" pos:column="24">__RPC__in_opt</name> <name pos:line="3474" pos:column="38">IDebugEvent2</name> <type:modifier pos:line="3474" pos:column="51">*</type:modifier></type><name pos:line="3474" pos:column="52">pEvent</name></decl></param>,
            <comment type="block" pos:line="3475" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3475" pos:column="24">__RPC__in</name> <name pos:line="3475" pos:column="34">REFIID</name></type> <name pos:line="3475" pos:column="41">riidEvent</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3477" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3478" pos:column="7">IDebugPortEvents2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3480" pos:column="5">interface</name></type> <name pos:line="3480" pos:column="15">IDebugPortEvents2</name>
    <argument_list pos:line="3481" pos:column="5">{
        <argument><expr><name pos:line="3482" pos:column="9">CONST_VTBL</name> struct <name pos:line="3482" pos:column="27">IDebugPortEvents2Vtbl</name> <op:operator pos:line="3482" pos:column="49">*</op:operator><name pos:line="3482" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3487" pos:column="1">#<cpp:directive pos:line="3487" pos:column="2">ifdef</cpp:directive> <name pos:line="3487" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3490" pos:column="1">#<cpp:directive pos:line="3490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3490" pos:column="9">IDebugPortEvents2_QueryInterface</name><parameter_list pos:line="3490" pos:column="41">(<param><type><name pos:line="3490" pos:column="42">This</name></type></param>,<param><type><name pos:line="3490" pos:column="47">riid</name></type></param>,<param><type><name pos:line="3490" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3491" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3493" pos:column="1">#<cpp:directive pos:line="3493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3493" pos:column="9">IDebugPortEvents2_AddRef</name><parameter_list pos:line="3493" pos:column="33">(<param><type><name pos:line="3493" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3494" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3496" pos:column="1">#<cpp:directive pos:line="3496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3496" pos:column="9">IDebugPortEvents2_Release</name><parameter_list pos:line="3496" pos:column="34">(<param><type><name pos:line="3496" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3497" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3500" pos:column="1">#<cpp:directive pos:line="3500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3500" pos:column="9">IDebugPortEvents2_Event</name><parameter_list pos:line="3500" pos:column="32">(<param><type><name pos:line="3500" pos:column="33">This</name></type></param>,<param><type><name pos:line="3500" pos:column="38">pServer</name></type></param>,<param><type><name pos:line="3500" pos:column="46">pPort</name></type></param>,<param><type><name pos:line="3500" pos:column="52">pProcess</name></type></param>,<param><type><name pos:line="3500" pos:column="61">pProgram</name></type></param>,<param><type><name pos:line="3500" pos:column="70">pEvent</name></type></param>,<param><type><name pos:line="3500" pos:column="77">riidEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3501" pos:column="5">( (This)-&gt;lpVtbl -&gt; Event(This,pServer,pPort,pProcess,pProgram,pEvent,riidEvent) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3503" pos:column="1">#<cpp:directive pos:line="3503" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3503" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3506" pos:column="1">#<cpp:directive pos:line="3506" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3506" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3511" pos:column="1">#<cpp:directive pos:line="3511" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3511" pos:column="9">/* __IDebugPortEvents2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3514" pos:column="1">#<cpp:directive pos:line="3514" pos:column="2">ifndef</cpp:directive> <name pos:line="3514" pos:column="9">__IDebugMDMUtil2_V7_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3515" pos:column="1">#<cpp:directive pos:line="3515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3515" pos:column="9">__IDebugMDMUtil2_V7_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3517" pos:column="1">/* interface IDebugMDMUtil2_V7 */</comment>
<comment type="block" pos:line="3518" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="3520" pos:column="1">typedef <type><name pos:line="3520" pos:column="9">DWORD</name></type> <name pos:line="3520" pos:column="15">DYNDEBUGFLAGS</name>;</typedef>


<enum pos:line="3523" pos:column="1">enum <name pos:line="3523" pos:column="6">enum_DYNDEBUGFLAGS</name>
    <block pos:line="3524" pos:column="5">{	<decl><name pos:line="3524" pos:column="9">DYNDEBUG_ATTACH</name>	<init pos:line="3524" pos:column="25">= <expr><lit:literal type="number" pos:line="3524" pos:column="27">1</lit:literal></expr></init></decl><op:operator pos:line="3524" pos:column="28">,</op:operator>
	<decl><name pos:line="3525" pos:column="9">DYNDEBUG_JIT</name>	<init pos:line="3525" pos:column="25">= <expr><lit:literal type="number" pos:line="3525" pos:column="27">2</lit:literal></expr></init></decl><op:operator pos:line="3525" pos:column="28">,</op:operator>
	<decl><name pos:line="3526" pos:column="9">DYNDEBUG_REMOTEJIT</name>	<init pos:line="3526" pos:column="33">= <expr><lit:literal type="number" pos:line="3526" pos:column="35">4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<cpp:define pos:line="3528" pos:column="1">#<cpp:directive pos:line="3528" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="3528" pos:column="9">S_UNKNOWN</name></cpp:macro>	<cpp:value pos:line="3528" pos:column="25">( 0x3 )</cpp:value></cpp:define>


<decl_stmt><decl><type><name pos:line="3531" pos:column="1">EXTERN_C</name> <specifier pos:line="3531" pos:column="10">const</specifier> <name pos:line="3531" pos:column="16">IID</name></type> <name pos:line="3531" pos:column="20">IID_IDebugMDMUtil2_V7</name></decl>;</decl_stmt>

<cpp:if pos:line="3533" pos:column="1">#<cpp:directive pos:line="3533" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3533" pos:column="5">defined</name><argument_list pos:line="3533" pos:column="12">(<argument><expr><name pos:line="3533" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3533" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3533" pos:column="29">!</op:operator><call><name pos:line="3533" pos:column="30">defined</name><argument_list pos:line="3533" pos:column="37">(<argument><expr><name pos:line="3533" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3535" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3535" pos:column="19">(<argument pos:line="3535" pos:column="20">"f3062547-43d8-4dc2-b18e-e1460ff2c422"</argument>)</argument_list></macro>
    <label><name pos:line="3536" pos:column="5">IDebugMDMUtil2_V7</name> :</label> <expr_stmt><expr pos:line="3536" pos:column="25">public <name pos:line="3536" pos:column="32">IUnknown</name>
    <block pos:line="3537" pos:column="5">{
    <expr pos:line="3538" pos:column="5">public<op:operator pos:line="3538" pos:column="11">:</op:operator>
        virtual <name pos:line="3539" pos:column="17">HRESULT</name> <name pos:line="3539" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3539" pos:column="43">AddPIDToIgnore</name><argument_list pos:line="3539" pos:column="57">( 
            <comment type="block" pos:line="3540" pos:column="13">/* [in] */</comment> <argument pos:line="3540" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3541" pos:column="13">/* [in] */</comment> <argument pos:line="3541" pos:column="24">DWORD dwPid</argument>)</argument_list></macro> <op:operator pos:line="3541" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3541" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="3543" pos:column="9">virtual <name pos:line="3543" pos:column="17">HRESULT</name> <name pos:line="3543" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3543" pos:column="43">RemovePIDToIgnore</name><argument_list pos:line="3543" pos:column="60">( 
            <comment type="block" pos:line="3544" pos:column="13">/* [in] */</comment> <argument pos:line="3544" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3545" pos:column="13">/* [in] */</comment> <argument pos:line="3545" pos:column="24">DWORD dwPid</argument>)</argument_list></macro> <op:operator pos:line="3545" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3545" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="3547" pos:column="9">virtual <name pos:line="3547" pos:column="17">HRESULT</name> <name pos:line="3547" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3547" pos:column="43">AddPIDToDebug</name><argument_list pos:line="3547" pos:column="56">( 
            <comment type="block" pos:line="3548" pos:column="13">/* [in] */</comment> <argument pos:line="3548" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3549" pos:column="13">/* [in] */</comment> <argument pos:line="3549" pos:column="24">DWORD dwPid</argument>)</argument_list></macro> <op:operator pos:line="3549" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3549" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="3551" pos:column="9">virtual <name pos:line="3551" pos:column="17">HRESULT</name> <name pos:line="3551" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3551" pos:column="43">RemovePIDToDebug</name><argument_list pos:line="3551" pos:column="59">( 
            <comment type="block" pos:line="3552" pos:column="13">/* [in] */</comment> <argument pos:line="3552" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3553" pos:column="13">/* [in] */</comment> <argument pos:line="3553" pos:column="24">DWORD dwPid</argument>)</argument_list></macro> <op:operator pos:line="3553" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3553" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="3555" pos:column="9">virtual <name pos:line="3555" pos:column="17">HRESULT</name> <name pos:line="3555" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3555" pos:column="43">SetDynamicDebuggingFlags</name><argument_list pos:line="3555" pos:column="67">( 
            <comment type="block" pos:line="3556" pos:column="13">/* [in] */</comment> <argument pos:line="3556" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3557" pos:column="13">/* [in] */</comment> <argument pos:line="3557" pos:column="24">DYNDEBUGFLAGS dwFlags</argument>)</argument_list></macro> <op:operator pos:line="3557" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3557" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3559" pos:column="9">virtual <name pos:line="3559" pos:column="17">HRESULT</name> <name pos:line="3559" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3559" pos:column="43">GetDynamicDebuggingFlags</name><argument_list pos:line="3559" pos:column="67">( 
            <comment type="block" pos:line="3560" pos:column="13">/* [in] */</comment> <argument pos:line="3560" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3561" pos:column="13">/* [out] */</comment> <argument pos:line="3561" pos:column="25">__RPC__out DYNDEBUGFLAGS *pdwFlags</argument>)</argument_list></macro> <op:operator pos:line="3561" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="3561" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="3563" pos:column="9">virtual <name pos:line="3563" pos:column="17">HRESULT</name> <name pos:line="3563" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3563" pos:column="43">SetDefaultJITServer</name><argument_list pos:line="3563" pos:column="62">( 
            <comment type="block" pos:line="3564" pos:column="13">/* [in] */</comment> <argument pos:line="3564" pos:column="24">__RPC__in REFCLSID clsidJITServer</argument>)</argument_list></macro> <op:operator pos:line="3564" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3564" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="3566" pos:column="9">virtual <name pos:line="3566" pos:column="17">HRESULT</name> <name pos:line="3566" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3566" pos:column="43">GetDefaultJITServer</name><argument_list pos:line="3566" pos:column="62">( 
            <comment type="block" pos:line="3567" pos:column="13">/* [out] */</comment> <argument pos:line="3567" pos:column="25">__RPC__out CLSID *pClsidJITServer</argument>)</argument_list></macro> <op:operator pos:line="3567" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="3567" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="3569" pos:column="9">virtual <name pos:line="3569" pos:column="17">HRESULT</name> <name pos:line="3569" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3569" pos:column="43">RegisterJITDebugEngines</name><argument_list pos:line="3569" pos:column="66">( 
            <comment type="block" pos:line="3570" pos:column="13">/* [in] */</comment> <argument pos:line="3570" pos:column="24">__RPC__in REFCLSID clsidJITServer</argument>,
            <comment type="block" pos:line="3571" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3571" pos:column="33">__RPC__in_ecount_full(celtEngs) GUID *arrguidEngines</argument>,
            <comment type="block" pos:line="3572" pos:column="13">/* [size_is][full][in] */</comment> <argument pos:line="3572" pos:column="39">__RPC__in_ecount_full_opt(celtEngs) BOOL *arrRemoteFlags</argument>,
            <comment type="block" pos:line="3573" pos:column="13">/* [in] */</comment> <argument pos:line="3573" pos:column="24">DWORD celtEngs</argument>,
            <comment type="block" pos:line="3574" pos:column="13">/* [in] */</comment> <argument pos:line="3574" pos:column="24">BOOL fRegister</argument>)</argument_list></macro> <op:operator pos:line="3574" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="3574" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="3576" pos:column="9">virtual <name pos:line="3576" pos:column="17">HRESULT</name> <name pos:line="3576" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3576" pos:column="43">CanDebugPID</name><argument_list pos:line="3576" pos:column="54">( 
            <comment type="block" pos:line="3577" pos:column="13">/* [in] */</comment> <argument pos:line="3577" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="3578" pos:column="13">/* [in] */</comment> <argument pos:line="3578" pos:column="24">DWORD pid</argument>)</argument_list></macro> <op:operator pos:line="3578" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="3578" pos:column="37">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3582" pos:column="1">#<cpp:directive pos:line="3582" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3582" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3584" pos:column="5">typedef <type><struct pos:line="3584" pos:column="13">struct <name pos:line="3584" pos:column="20">IDebugMDMUtil2_V7Vtbl</name>
    <block pos:line="3585" pos:column="5">{<public type="default" pos:line="3585" pos:column="6">
        <function_decl><type><name pos:line="3586" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3588" pos:column="9">HRESULT</name></type> ( <name pos:line="3588" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3588" pos:column="37">*</type:modifier><name pos:line="3588" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3588" pos:column="54">( 
            <param><decl><type><name pos:line="3589" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3589" pos:column="31">*</type:modifier></type> <name pos:line="3589" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3590" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3590" pos:column="24">__RPC__in</name> <name pos:line="3590" pos:column="34">REFIID</name></type> <name pos:line="3590" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3591" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3592" pos:column="13">__RPC__deref_out</name>  <name pos:line="3592" pos:column="31">void</name> <type:modifier pos:line="3592" pos:column="36">*</type:modifier><type:modifier pos:line="3592" pos:column="37">*</type:modifier></type><name pos:line="3592" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3594" pos:column="9">ULONG</name></type> ( <name pos:line="3594" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3594" pos:column="35">*</type:modifier><name pos:line="3594" pos:column="36">AddRef</name> )<parameter_list pos:line="3594" pos:column="44">( 
            <param><decl><type><name pos:line="3595" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3595" pos:column="31">*</type:modifier></type> <name pos:line="3595" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3597" pos:column="9">ULONG</name></type> ( <name pos:line="3597" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3597" pos:column="35">*</type:modifier><name pos:line="3597" pos:column="36">Release</name> )<parameter_list pos:line="3597" pos:column="45">( 
            <param><decl><type><name pos:line="3598" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3598" pos:column="31">*</type:modifier></type> <name pos:line="3598" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3600" pos:column="9">HRESULT</name></type> ( <name pos:line="3600" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3600" pos:column="37">*</type:modifier><name pos:line="3600" pos:column="38">AddPIDToIgnore</name> )<parameter_list pos:line="3600" pos:column="54">( 
            <param><decl><type><name pos:line="3601" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3601" pos:column="31">*</type:modifier></type> <name pos:line="3601" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3602" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3602" pos:column="24">__RPC__in</name> <name pos:line="3602" pos:column="34">REFGUID</name></type> <name pos:line="3602" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3603" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3603" pos:column="24">DWORD</name></type> <name pos:line="3603" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3605" pos:column="9">HRESULT</name></type> ( <name pos:line="3605" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3605" pos:column="37">*</type:modifier><name pos:line="3605" pos:column="38">RemovePIDToIgnore</name> )<parameter_list pos:line="3605" pos:column="57">( 
            <param><decl><type><name pos:line="3606" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3606" pos:column="31">*</type:modifier></type> <name pos:line="3606" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3607" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3607" pos:column="24">__RPC__in</name> <name pos:line="3607" pos:column="34">REFGUID</name></type> <name pos:line="3607" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3608" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3608" pos:column="24">DWORD</name></type> <name pos:line="3608" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3610" pos:column="9">HRESULT</name></type> ( <name pos:line="3610" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3610" pos:column="37">*</type:modifier><name pos:line="3610" pos:column="38">AddPIDToDebug</name> )<parameter_list pos:line="3610" pos:column="53">( 
            <param><decl><type><name pos:line="3611" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3611" pos:column="31">*</type:modifier></type> <name pos:line="3611" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3612" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3612" pos:column="24">__RPC__in</name> <name pos:line="3612" pos:column="34">REFGUID</name></type> <name pos:line="3612" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3613" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3613" pos:column="24">DWORD</name></type> <name pos:line="3613" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3615" pos:column="9">HRESULT</name></type> ( <name pos:line="3615" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3615" pos:column="37">*</type:modifier><name pos:line="3615" pos:column="38">RemovePIDToDebug</name> )<parameter_list pos:line="3615" pos:column="56">( 
            <param><decl><type><name pos:line="3616" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3616" pos:column="31">*</type:modifier></type> <name pos:line="3616" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3617" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3617" pos:column="24">__RPC__in</name> <name pos:line="3617" pos:column="34">REFGUID</name></type> <name pos:line="3617" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3618" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3618" pos:column="24">DWORD</name></type> <name pos:line="3618" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3620" pos:column="9">HRESULT</name></type> ( <name pos:line="3620" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3620" pos:column="37">*</type:modifier><name pos:line="3620" pos:column="38">SetDynamicDebuggingFlags</name> )<parameter_list pos:line="3620" pos:column="64">( 
            <param><decl><type><name pos:line="3621" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3621" pos:column="31">*</type:modifier></type> <name pos:line="3621" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3622" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3622" pos:column="24">__RPC__in</name> <name pos:line="3622" pos:column="34">REFGUID</name></type> <name pos:line="3622" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3623" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3623" pos:column="24">DYNDEBUGFLAGS</name></type> <name pos:line="3623" pos:column="38">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3625" pos:column="9">HRESULT</name></type> ( <name pos:line="3625" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3625" pos:column="37">*</type:modifier><name pos:line="3625" pos:column="38">GetDynamicDebuggingFlags</name> )<parameter_list pos:line="3625" pos:column="64">( 
            <param><decl><type><name pos:line="3626" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3626" pos:column="31">*</type:modifier></type> <name pos:line="3626" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3627" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3627" pos:column="24">__RPC__in</name> <name pos:line="3627" pos:column="34">REFGUID</name></type> <name pos:line="3627" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3628" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3628" pos:column="25">__RPC__out</name> <name pos:line="3628" pos:column="36">DYNDEBUGFLAGS</name> <type:modifier pos:line="3628" pos:column="50">*</type:modifier></type><name pos:line="3628" pos:column="51">pdwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3630" pos:column="9">HRESULT</name></type> ( <name pos:line="3630" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3630" pos:column="37">*</type:modifier><name pos:line="3630" pos:column="38">SetDefaultJITServer</name> )<parameter_list pos:line="3630" pos:column="59">( 
            <param><decl><type><name pos:line="3631" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3631" pos:column="31">*</type:modifier></type> <name pos:line="3631" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3632" pos:column="24">__RPC__in</name> <name pos:line="3632" pos:column="34">REFCLSID</name></type> <name pos:line="3632" pos:column="43">clsidJITServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3634" pos:column="9">HRESULT</name></type> ( <name pos:line="3634" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3634" pos:column="37">*</type:modifier><name pos:line="3634" pos:column="38">GetDefaultJITServer</name> )<parameter_list pos:line="3634" pos:column="59">( 
            <param><decl><type><name pos:line="3635" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3635" pos:column="31">*</type:modifier></type> <name pos:line="3635" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3636" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3636" pos:column="25">__RPC__out</name> <name pos:line="3636" pos:column="36">CLSID</name> <type:modifier pos:line="3636" pos:column="42">*</type:modifier></type><name pos:line="3636" pos:column="43">pClsidJITServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3638" pos:column="9">HRESULT</name> <argument_list pos:line="3638" pos:column="17">( <argument pos:line="3638" pos:column="19">STDMETHODCALLTYPE *RegisterJITDebugEngines</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3638" pos:column="63">(</op:operator> 
            <name pos:line="3639" pos:column="13">IDebugMDMUtil2_V7</name> <op:operator pos:line="3639" pos:column="31">*</op:operator> <name pos:line="3639" pos:column="33">This</name><op:operator pos:line="3639" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3640" pos:column="13">/* [in] */</comment> <name pos:line="3640" pos:column="24">__RPC__in</name> <name pos:line="3640" pos:column="34">REFCLSID</name> <name pos:line="3640" pos:column="43">clsidJITServer</name><op:operator pos:line="3640" pos:column="57">,</op:operator>
            <comment type="block" pos:line="3641" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3641" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3641" pos:column="54">(<argument pos:line="3641" pos:column="55">celtEngs</argument>)</argument_list></macro> <name pos:line="3641" pos:column="65">GUID</name> <op:operator pos:line="3641" pos:column="70">*</op:operator><name pos:line="3641" pos:column="71">arrguidEngines</name><op:operator pos:line="3641" pos:column="85">,</op:operator>
            <comment type="block" pos:line="3642" pos:column="13">/* [size_is][full][in] */</comment> <macro><name pos:line="3642" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="3642" pos:column="64">(<argument pos:line="3642" pos:column="65">celtEngs</argument>)</argument_list></macro> <name pos:line="3642" pos:column="75">BOOL</name> <op:operator pos:line="3642" pos:column="80">*</op:operator><name pos:line="3642" pos:column="81">arrRemoteFlags</name><op:operator pos:line="3642" pos:column="95">,</op:operator>
            <comment type="block" pos:line="3643" pos:column="13">/* [in] */</comment> <name pos:line="3643" pos:column="24">DWORD</name> <name pos:line="3643" pos:column="30">celtEngs</name><op:operator pos:line="3643" pos:column="38">,</op:operator>
            <comment type="block" pos:line="3644" pos:column="13">/* [in] */</comment> <name pos:line="3644" pos:column="24">BOOL</name> <name pos:line="3644" pos:column="29">fRegister</name><op:operator pos:line="3644" pos:column="38">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3646" pos:column="9">HRESULT</name></type> ( <name pos:line="3646" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3646" pos:column="37">*</type:modifier><name pos:line="3646" pos:column="38">CanDebugPID</name> )<parameter_list pos:line="3646" pos:column="51">( 
            <param><decl><type><name pos:line="3647" pos:column="13">IDebugMDMUtil2_V7</name> <type:modifier pos:line="3647" pos:column="31">*</type:modifier></type> <name pos:line="3647" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3648" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3648" pos:column="24">__RPC__in</name> <name pos:line="3648" pos:column="34">REFGUID</name></type> <name pos:line="3648" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3649" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3649" pos:column="24">DWORD</name></type> <name pos:line="3649" pos:column="30">pid</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3651" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3652" pos:column="7">IDebugMDMUtil2_V7Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3654" pos:column="5">interface</name></type> <name pos:line="3654" pos:column="15">IDebugMDMUtil2_V7</name>
    <argument_list pos:line="3655" pos:column="5">{
        <argument><expr><name pos:line="3656" pos:column="9">CONST_VTBL</name> struct <name pos:line="3656" pos:column="27">IDebugMDMUtil2_V7Vtbl</name> <op:operator pos:line="3656" pos:column="49">*</op:operator><name pos:line="3656" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3661" pos:column="1">#<cpp:directive pos:line="3661" pos:column="2">ifdef</cpp:directive> <name pos:line="3661" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3664" pos:column="1">#<cpp:directive pos:line="3664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3664" pos:column="9">IDebugMDMUtil2_V7_QueryInterface</name><parameter_list pos:line="3664" pos:column="41">(<param><type><name pos:line="3664" pos:column="42">This</name></type></param>,<param><type><name pos:line="3664" pos:column="47">riid</name></type></param>,<param><type><name pos:line="3664" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3665" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3667" pos:column="1">#<cpp:directive pos:line="3667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3667" pos:column="9">IDebugMDMUtil2_V7_AddRef</name><parameter_list pos:line="3667" pos:column="33">(<param><type><name pos:line="3667" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3668" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3670" pos:column="1">#<cpp:directive pos:line="3670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3670" pos:column="9">IDebugMDMUtil2_V7_Release</name><parameter_list pos:line="3670" pos:column="34">(<param><type><name pos:line="3670" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3671" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3674" pos:column="1">#<cpp:directive pos:line="3674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3674" pos:column="9">IDebugMDMUtil2_V7_AddPIDToIgnore</name><parameter_list pos:line="3674" pos:column="41">(<param><type><name pos:line="3674" pos:column="42">This</name></type></param>,<param><type><name pos:line="3674" pos:column="47">guidEngine</name></type></param>,<param><type><name pos:line="3674" pos:column="58">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3675" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddPIDToIgnore(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3677" pos:column="1">#<cpp:directive pos:line="3677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3677" pos:column="9">IDebugMDMUtil2_V7_RemovePIDToIgnore</name><parameter_list pos:line="3677" pos:column="44">(<param><type><name pos:line="3677" pos:column="45">This</name></type></param>,<param><type><name pos:line="3677" pos:column="50">guidEngine</name></type></param>,<param><type><name pos:line="3677" pos:column="61">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3678" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemovePIDToIgnore(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3680" pos:column="1">#<cpp:directive pos:line="3680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3680" pos:column="9">IDebugMDMUtil2_V7_AddPIDToDebug</name><parameter_list pos:line="3680" pos:column="40">(<param><type><name pos:line="3680" pos:column="41">This</name></type></param>,<param><type><name pos:line="3680" pos:column="46">guidEngine</name></type></param>,<param><type><name pos:line="3680" pos:column="57">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3681" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddPIDToDebug(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3683" pos:column="1">#<cpp:directive pos:line="3683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3683" pos:column="9">IDebugMDMUtil2_V7_RemovePIDToDebug</name><parameter_list pos:line="3683" pos:column="43">(<param><type><name pos:line="3683" pos:column="44">This</name></type></param>,<param><type><name pos:line="3683" pos:column="49">guidEngine</name></type></param>,<param><type><name pos:line="3683" pos:column="60">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3684" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemovePIDToDebug(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3686" pos:column="1">#<cpp:directive pos:line="3686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3686" pos:column="9">IDebugMDMUtil2_V7_SetDynamicDebuggingFlags</name><parameter_list pos:line="3686" pos:column="51">(<param><type><name pos:line="3686" pos:column="52">This</name></type></param>,<param><type><name pos:line="3686" pos:column="57">guidEngine</name></type></param>,<param><type><name pos:line="3686" pos:column="68">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3687" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDynamicDebuggingFlags(This,guidEngine,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="3689" pos:column="1">#<cpp:directive pos:line="3689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3689" pos:column="9">IDebugMDMUtil2_V7_GetDynamicDebuggingFlags</name><parameter_list pos:line="3689" pos:column="51">(<param><type><name pos:line="3689" pos:column="52">This</name></type></param>,<param><type><name pos:line="3689" pos:column="57">guidEngine</name></type></param>,<param><type><name pos:line="3689" pos:column="68">pdwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3690" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDynamicDebuggingFlags(This,guidEngine,pdwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="3692" pos:column="1">#<cpp:directive pos:line="3692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3692" pos:column="9">IDebugMDMUtil2_V7_SetDefaultJITServer</name><parameter_list pos:line="3692" pos:column="46">(<param><type><name pos:line="3692" pos:column="47">This</name></type></param>,<param><type><name pos:line="3692" pos:column="52">clsidJITServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3693" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDefaultJITServer(This,clsidJITServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3695" pos:column="1">#<cpp:directive pos:line="3695" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3695" pos:column="9">IDebugMDMUtil2_V7_GetDefaultJITServer</name><parameter_list pos:line="3695" pos:column="46">(<param><type><name pos:line="3695" pos:column="47">This</name></type></param>,<param><type><name pos:line="3695" pos:column="52">pClsidJITServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3696" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDefaultJITServer(This,pClsidJITServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3698" pos:column="1">#<cpp:directive pos:line="3698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3698" pos:column="9">IDebugMDMUtil2_V7_RegisterJITDebugEngines</name><parameter_list pos:line="3698" pos:column="50">(<param><type><name pos:line="3698" pos:column="51">This</name></type></param>,<param><type><name pos:line="3698" pos:column="56">clsidJITServer</name></type></param>,<param><type><name pos:line="3698" pos:column="71">arrguidEngines</name></type></param>,<param><type><name pos:line="3698" pos:column="86">arrRemoteFlags</name></type></param>,<param><type><name pos:line="3698" pos:column="101">celtEngs</name></type></param>,<param><type><name pos:line="3698" pos:column="110">fRegister</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3699" pos:column="5">( (This)-&gt;lpVtbl -&gt; RegisterJITDebugEngines(This,clsidJITServer,arrguidEngines,arrRemoteFlags,celtEngs,fRegister) )</cpp:value></cpp:define> 

<cpp:define pos:line="3701" pos:column="1">#<cpp:directive pos:line="3701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3701" pos:column="9">IDebugMDMUtil2_V7_CanDebugPID</name><parameter_list pos:line="3701" pos:column="38">(<param><type><name pos:line="3701" pos:column="39">This</name></type></param>,<param><type><name pos:line="3701" pos:column="44">guidEngine</name></type></param>,<param><type><name pos:line="3701" pos:column="55">pid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3702" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDebugPID(This,guidEngine,pid) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3704" pos:column="1">#<cpp:directive pos:line="3704" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3704" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3707" pos:column="1">#<cpp:directive pos:line="3707" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3707" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3712" pos:column="1">#<cpp:directive pos:line="3712" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3712" pos:column="9">/* __IDebugMDMUtil2_V7_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3715" pos:column="1">#<cpp:directive pos:line="3715" pos:column="2">ifndef</cpp:directive> <name pos:line="3715" pos:column="9">__IDebugMDMUtil3_V7_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3716" pos:column="1">#<cpp:directive pos:line="3716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3716" pos:column="9">__IDebugMDMUtil3_V7_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3718" pos:column="1">/* interface IDebugMDMUtil3_V7 */</comment>
<comment type="block" pos:line="3719" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="3722" pos:column="1">enum <name pos:line="3722" pos:column="6">__MIDL_IDebugMDMUtil3_V7_0001</name>
    <block pos:line="3723" pos:column="5">{	<decl><name pos:line="3723" pos:column="9">WEB_DEBUG_ASP_NET</name>	<init pos:line="3723" pos:column="33">= <expr><lit:literal type="number" pos:line="3723" pos:column="35">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="3725" pos:column="1">typedef <type><name pos:line="3725" pos:column="9">DWORD</name></type> <name pos:line="3725" pos:column="15">WEB_DEBUG_TYPE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="3728" pos:column="1">EXTERN_C</name> <specifier pos:line="3728" pos:column="10">const</specifier> <name pos:line="3728" pos:column="16">IID</name></type> <name pos:line="3728" pos:column="20">IID_IDebugMDMUtil3_V7</name></decl>;</decl_stmt>

<cpp:if pos:line="3730" pos:column="1">#<cpp:directive pos:line="3730" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3730" pos:column="5">defined</name><argument_list pos:line="3730" pos:column="12">(<argument><expr><name pos:line="3730" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3730" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3730" pos:column="29">!</op:operator><call><name pos:line="3730" pos:column="30">defined</name><argument_list pos:line="3730" pos:column="37">(<argument><expr><name pos:line="3730" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3732" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3732" pos:column="19">(<argument pos:line="3732" pos:column="20">"af598dea-ce92-443b-a0b5-9992ff660bc4"</argument>)</argument_list></macro>
    <label><name pos:line="3733" pos:column="5">IDebugMDMUtil3_V7</name> :</label> <expr_stmt><expr pos:line="3733" pos:column="25">public <name pos:line="3733" pos:column="32">IDebugMDMUtil2_V7</name>
    <block pos:line="3734" pos:column="5">{
    <expr pos:line="3735" pos:column="5">public<op:operator pos:line="3735" pos:column="11">:</op:operator>
        virtual <name pos:line="3736" pos:column="17">HRESULT</name> <name pos:line="3736" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3736" pos:column="43">DiagnoseScriptDebuggingError</name><argument_list pos:line="3736" pos:column="71">( 
            <comment type="block" pos:line="3737" pos:column="13">/* [in] */</comment> <argument pos:line="3737" pos:column="24">DWORD dwDebuggeeProcessId</argument>)</argument_list></macro> <op:operator pos:line="3737" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="3737" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="3739" pos:column="9">virtual <name pos:line="3739" pos:column="17">HRESULT</name> <name pos:line="3739" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3739" pos:column="43">DiagnoseWebDebuggingError</name><argument_list pos:line="3739" pos:column="68">( 
            <comment type="block" pos:line="3740" pos:column="13">/* [in] */</comment> <argument pos:line="3740" pos:column="24">WEB_DEBUG_TYPE dwWebType</argument>,
            <comment type="block" pos:line="3741" pos:column="13">/* [full][in] */</comment> <argument pos:line="3741" pos:column="30">__RPC__in_opt LPCWSTR pszUrl</argument>)</argument_list></macro> <op:operator pos:line="3741" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="3741" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="3743" pos:column="9">virtual <name pos:line="3743" pos:column="17">HRESULT</name> <name pos:line="3743" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3743" pos:column="43">DiagnoseASPDebugging</name><argument_list pos:line="3743" pos:column="63">( 
            <comment type="block" pos:line="3744" pos:column="13">/* [full][in] */</comment> <argument pos:line="3744" pos:column="30">__RPC__in_opt LPCWSTR szASPUserAccount</argument>)</argument_list></macro> <op:operator pos:line="3744" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="3744" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3748" pos:column="1">#<cpp:directive pos:line="3748" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3748" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3750" pos:column="5">typedef <type><struct pos:line="3750" pos:column="13">struct <name pos:line="3750" pos:column="20">IDebugMDMUtil3_V7Vtbl</name>
    <block pos:line="3751" pos:column="5">{<public type="default" pos:line="3751" pos:column="6">
        <function_decl><type><name pos:line="3752" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3754" pos:column="9">HRESULT</name></type> ( <name pos:line="3754" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3754" pos:column="37">*</type:modifier><name pos:line="3754" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3754" pos:column="54">( 
            <param><decl><type><name pos:line="3755" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3755" pos:column="31">*</type:modifier></type> <name pos:line="3755" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3756" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3756" pos:column="24">__RPC__in</name> <name pos:line="3756" pos:column="34">REFIID</name></type> <name pos:line="3756" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3757" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3758" pos:column="13">__RPC__deref_out</name>  <name pos:line="3758" pos:column="31">void</name> <type:modifier pos:line="3758" pos:column="36">*</type:modifier><type:modifier pos:line="3758" pos:column="37">*</type:modifier></type><name pos:line="3758" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3760" pos:column="9">ULONG</name></type> ( <name pos:line="3760" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3760" pos:column="35">*</type:modifier><name pos:line="3760" pos:column="36">AddRef</name> )<parameter_list pos:line="3760" pos:column="44">( 
            <param><decl><type><name pos:line="3761" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3761" pos:column="31">*</type:modifier></type> <name pos:line="3761" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3763" pos:column="9">ULONG</name></type> ( <name pos:line="3763" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3763" pos:column="35">*</type:modifier><name pos:line="3763" pos:column="36">Release</name> )<parameter_list pos:line="3763" pos:column="45">( 
            <param><decl><type><name pos:line="3764" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3764" pos:column="31">*</type:modifier></type> <name pos:line="3764" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3766" pos:column="9">HRESULT</name></type> ( <name pos:line="3766" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3766" pos:column="37">*</type:modifier><name pos:line="3766" pos:column="38">AddPIDToIgnore</name> )<parameter_list pos:line="3766" pos:column="54">( 
            <param><decl><type><name pos:line="3767" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3767" pos:column="31">*</type:modifier></type> <name pos:line="3767" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3768" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3768" pos:column="24">__RPC__in</name> <name pos:line="3768" pos:column="34">REFGUID</name></type> <name pos:line="3768" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3769" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3769" pos:column="24">DWORD</name></type> <name pos:line="3769" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3771" pos:column="9">HRESULT</name></type> ( <name pos:line="3771" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3771" pos:column="37">*</type:modifier><name pos:line="3771" pos:column="38">RemovePIDToIgnore</name> )<parameter_list pos:line="3771" pos:column="57">( 
            <param><decl><type><name pos:line="3772" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3772" pos:column="31">*</type:modifier></type> <name pos:line="3772" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3773" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3773" pos:column="24">__RPC__in</name> <name pos:line="3773" pos:column="34">REFGUID</name></type> <name pos:line="3773" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3774" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3774" pos:column="24">DWORD</name></type> <name pos:line="3774" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3776" pos:column="9">HRESULT</name></type> ( <name pos:line="3776" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3776" pos:column="37">*</type:modifier><name pos:line="3776" pos:column="38">AddPIDToDebug</name> )<parameter_list pos:line="3776" pos:column="53">( 
            <param><decl><type><name pos:line="3777" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3777" pos:column="31">*</type:modifier></type> <name pos:line="3777" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3778" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3778" pos:column="24">__RPC__in</name> <name pos:line="3778" pos:column="34">REFGUID</name></type> <name pos:line="3778" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3779" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3779" pos:column="24">DWORD</name></type> <name pos:line="3779" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3781" pos:column="9">HRESULT</name></type> ( <name pos:line="3781" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3781" pos:column="37">*</type:modifier><name pos:line="3781" pos:column="38">RemovePIDToDebug</name> )<parameter_list pos:line="3781" pos:column="56">( 
            <param><decl><type><name pos:line="3782" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3782" pos:column="31">*</type:modifier></type> <name pos:line="3782" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3783" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3783" pos:column="24">__RPC__in</name> <name pos:line="3783" pos:column="34">REFGUID</name></type> <name pos:line="3783" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3784" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3784" pos:column="24">DWORD</name></type> <name pos:line="3784" pos:column="30">dwPid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3786" pos:column="9">HRESULT</name></type> ( <name pos:line="3786" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3786" pos:column="37">*</type:modifier><name pos:line="3786" pos:column="38">SetDynamicDebuggingFlags</name> )<parameter_list pos:line="3786" pos:column="64">( 
            <param><decl><type><name pos:line="3787" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3787" pos:column="31">*</type:modifier></type> <name pos:line="3787" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3788" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3788" pos:column="24">__RPC__in</name> <name pos:line="3788" pos:column="34">REFGUID</name></type> <name pos:line="3788" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3789" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3789" pos:column="24">DYNDEBUGFLAGS</name></type> <name pos:line="3789" pos:column="38">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3791" pos:column="9">HRESULT</name></type> ( <name pos:line="3791" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3791" pos:column="37">*</type:modifier><name pos:line="3791" pos:column="38">GetDynamicDebuggingFlags</name> )<parameter_list pos:line="3791" pos:column="64">( 
            <param><decl><type><name pos:line="3792" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3792" pos:column="31">*</type:modifier></type> <name pos:line="3792" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3793" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3793" pos:column="24">__RPC__in</name> <name pos:line="3793" pos:column="34">REFGUID</name></type> <name pos:line="3793" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3794" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3794" pos:column="25">__RPC__out</name> <name pos:line="3794" pos:column="36">DYNDEBUGFLAGS</name> <type:modifier pos:line="3794" pos:column="50">*</type:modifier></type><name pos:line="3794" pos:column="51">pdwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3796" pos:column="9">HRESULT</name></type> ( <name pos:line="3796" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3796" pos:column="37">*</type:modifier><name pos:line="3796" pos:column="38">SetDefaultJITServer</name> )<parameter_list pos:line="3796" pos:column="59">( 
            <param><decl><type><name pos:line="3797" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3797" pos:column="31">*</type:modifier></type> <name pos:line="3797" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3798" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3798" pos:column="24">__RPC__in</name> <name pos:line="3798" pos:column="34">REFCLSID</name></type> <name pos:line="3798" pos:column="43">clsidJITServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3800" pos:column="9">HRESULT</name></type> ( <name pos:line="3800" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3800" pos:column="37">*</type:modifier><name pos:line="3800" pos:column="38">GetDefaultJITServer</name> )<parameter_list pos:line="3800" pos:column="59">( 
            <param><decl><type><name pos:line="3801" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3801" pos:column="31">*</type:modifier></type> <name pos:line="3801" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3802" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3802" pos:column="25">__RPC__out</name> <name pos:line="3802" pos:column="36">CLSID</name> <type:modifier pos:line="3802" pos:column="42">*</type:modifier></type><name pos:line="3802" pos:column="43">pClsidJITServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3804" pos:column="9">HRESULT</name> <argument_list pos:line="3804" pos:column="17">( <argument pos:line="3804" pos:column="19">STDMETHODCALLTYPE *RegisterJITDebugEngines</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3804" pos:column="63">(</op:operator> 
            <name pos:line="3805" pos:column="13">IDebugMDMUtil3_V7</name> <op:operator pos:line="3805" pos:column="31">*</op:operator> <name pos:line="3805" pos:column="33">This</name><op:operator pos:line="3805" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3806" pos:column="13">/* [in] */</comment> <name pos:line="3806" pos:column="24">__RPC__in</name> <name pos:line="3806" pos:column="34">REFCLSID</name> <name pos:line="3806" pos:column="43">clsidJITServer</name><op:operator pos:line="3806" pos:column="57">,</op:operator>
            <comment type="block" pos:line="3807" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3807" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3807" pos:column="54">(<argument pos:line="3807" pos:column="55">celtEngs</argument>)</argument_list></macro> <name pos:line="3807" pos:column="65">GUID</name> <op:operator pos:line="3807" pos:column="70">*</op:operator><name pos:line="3807" pos:column="71">arrguidEngines</name><op:operator pos:line="3807" pos:column="85">,</op:operator>
            <comment type="block" pos:line="3808" pos:column="13">/* [size_is][full][in] */</comment> <macro><name pos:line="3808" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="3808" pos:column="64">(<argument pos:line="3808" pos:column="65">celtEngs</argument>)</argument_list></macro> <name pos:line="3808" pos:column="75">BOOL</name> <op:operator pos:line="3808" pos:column="80">*</op:operator><name pos:line="3808" pos:column="81">arrRemoteFlags</name><op:operator pos:line="3808" pos:column="95">,</op:operator>
            <comment type="block" pos:line="3809" pos:column="13">/* [in] */</comment> <name pos:line="3809" pos:column="24">DWORD</name> <name pos:line="3809" pos:column="30">celtEngs</name><op:operator pos:line="3809" pos:column="38">,</op:operator>
            <comment type="block" pos:line="3810" pos:column="13">/* [in] */</comment> <name pos:line="3810" pos:column="24">BOOL</name> <name pos:line="3810" pos:column="29">fRegister</name><op:operator pos:line="3810" pos:column="38">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3812" pos:column="9">HRESULT</name></type> ( <name pos:line="3812" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3812" pos:column="37">*</type:modifier><name pos:line="3812" pos:column="38">CanDebugPID</name> )<parameter_list pos:line="3812" pos:column="51">( 
            <param><decl><type><name pos:line="3813" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3813" pos:column="31">*</type:modifier></type> <name pos:line="3813" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3814" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3814" pos:column="24">__RPC__in</name> <name pos:line="3814" pos:column="34">REFGUID</name></type> <name pos:line="3814" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="3815" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3815" pos:column="24">DWORD</name></type> <name pos:line="3815" pos:column="30">pid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3817" pos:column="9">HRESULT</name></type> ( <name pos:line="3817" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3817" pos:column="37">*</type:modifier><name pos:line="3817" pos:column="38">DiagnoseScriptDebuggingError</name> )<parameter_list pos:line="3817" pos:column="68">( 
            <param><decl><type><name pos:line="3818" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3818" pos:column="31">*</type:modifier></type> <name pos:line="3818" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3819" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3819" pos:column="24">DWORD</name></type> <name pos:line="3819" pos:column="30">dwDebuggeeProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3821" pos:column="9">HRESULT</name></type> ( <name pos:line="3821" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3821" pos:column="37">*</type:modifier><name pos:line="3821" pos:column="38">DiagnoseWebDebuggingError</name> )<parameter_list pos:line="3821" pos:column="65">( 
            <param><decl><type><name pos:line="3822" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3822" pos:column="31">*</type:modifier></type> <name pos:line="3822" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3823" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3823" pos:column="24">WEB_DEBUG_TYPE</name></type> <name pos:line="3823" pos:column="39">dwWebType</name></decl></param>,
            <comment type="block" pos:line="3824" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="3824" pos:column="30">__RPC__in_opt</name> <name pos:line="3824" pos:column="44">LPCWSTR</name></type> <name pos:line="3824" pos:column="52">pszUrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3826" pos:column="9">HRESULT</name></type> ( <name pos:line="3826" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3826" pos:column="37">*</type:modifier><name pos:line="3826" pos:column="38">DiagnoseASPDebugging</name> )<parameter_list pos:line="3826" pos:column="60">( 
            <param><decl><type><name pos:line="3827" pos:column="13">IDebugMDMUtil3_V7</name> <type:modifier pos:line="3827" pos:column="31">*</type:modifier></type> <name pos:line="3827" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3828" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="3828" pos:column="30">__RPC__in_opt</name> <name pos:line="3828" pos:column="44">LPCWSTR</name></type> <name pos:line="3828" pos:column="52">szASPUserAccount</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3830" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3831" pos:column="7">IDebugMDMUtil3_V7Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3833" pos:column="5">interface</name></type> <name pos:line="3833" pos:column="15">IDebugMDMUtil3_V7</name>
    <argument_list pos:line="3834" pos:column="5">{
        <argument><expr><name pos:line="3835" pos:column="9">CONST_VTBL</name> struct <name pos:line="3835" pos:column="27">IDebugMDMUtil3_V7Vtbl</name> <op:operator pos:line="3835" pos:column="49">*</op:operator><name pos:line="3835" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3840" pos:column="1">#<cpp:directive pos:line="3840" pos:column="2">ifdef</cpp:directive> <name pos:line="3840" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3843" pos:column="1">#<cpp:directive pos:line="3843" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3843" pos:column="9">IDebugMDMUtil3_V7_QueryInterface</name><parameter_list pos:line="3843" pos:column="41">(<param><type><name pos:line="3843" pos:column="42">This</name></type></param>,<param><type><name pos:line="3843" pos:column="47">riid</name></type></param>,<param><type><name pos:line="3843" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3844" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3846" pos:column="1">#<cpp:directive pos:line="3846" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3846" pos:column="9">IDebugMDMUtil3_V7_AddRef</name><parameter_list pos:line="3846" pos:column="33">(<param><type><name pos:line="3846" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3847" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3849" pos:column="1">#<cpp:directive pos:line="3849" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3849" pos:column="9">IDebugMDMUtil3_V7_Release</name><parameter_list pos:line="3849" pos:column="34">(<param><type><name pos:line="3849" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3850" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3853" pos:column="1">#<cpp:directive pos:line="3853" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3853" pos:column="9">IDebugMDMUtil3_V7_AddPIDToIgnore</name><parameter_list pos:line="3853" pos:column="41">(<param><type><name pos:line="3853" pos:column="42">This</name></type></param>,<param><type><name pos:line="3853" pos:column="47">guidEngine</name></type></param>,<param><type><name pos:line="3853" pos:column="58">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3854" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddPIDToIgnore(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3856" pos:column="1">#<cpp:directive pos:line="3856" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3856" pos:column="9">IDebugMDMUtil3_V7_RemovePIDToIgnore</name><parameter_list pos:line="3856" pos:column="44">(<param><type><name pos:line="3856" pos:column="45">This</name></type></param>,<param><type><name pos:line="3856" pos:column="50">guidEngine</name></type></param>,<param><type><name pos:line="3856" pos:column="61">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3857" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemovePIDToIgnore(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3859" pos:column="1">#<cpp:directive pos:line="3859" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3859" pos:column="9">IDebugMDMUtil3_V7_AddPIDToDebug</name><parameter_list pos:line="3859" pos:column="40">(<param><type><name pos:line="3859" pos:column="41">This</name></type></param>,<param><type><name pos:line="3859" pos:column="46">guidEngine</name></type></param>,<param><type><name pos:line="3859" pos:column="57">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3860" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddPIDToDebug(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3862" pos:column="1">#<cpp:directive pos:line="3862" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3862" pos:column="9">IDebugMDMUtil3_V7_RemovePIDToDebug</name><parameter_list pos:line="3862" pos:column="43">(<param><type><name pos:line="3862" pos:column="44">This</name></type></param>,<param><type><name pos:line="3862" pos:column="49">guidEngine</name></type></param>,<param><type><name pos:line="3862" pos:column="60">dwPid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3863" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemovePIDToDebug(This,guidEngine,dwPid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3865" pos:column="1">#<cpp:directive pos:line="3865" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3865" pos:column="9">IDebugMDMUtil3_V7_SetDynamicDebuggingFlags</name><parameter_list pos:line="3865" pos:column="51">(<param><type><name pos:line="3865" pos:column="52">This</name></type></param>,<param><type><name pos:line="3865" pos:column="57">guidEngine</name></type></param>,<param><type><name pos:line="3865" pos:column="68">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3866" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDynamicDebuggingFlags(This,guidEngine,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="3868" pos:column="1">#<cpp:directive pos:line="3868" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3868" pos:column="9">IDebugMDMUtil3_V7_GetDynamicDebuggingFlags</name><parameter_list pos:line="3868" pos:column="51">(<param><type><name pos:line="3868" pos:column="52">This</name></type></param>,<param><type><name pos:line="3868" pos:column="57">guidEngine</name></type></param>,<param><type><name pos:line="3868" pos:column="68">pdwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3869" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDynamicDebuggingFlags(This,guidEngine,pdwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="3871" pos:column="1">#<cpp:directive pos:line="3871" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3871" pos:column="9">IDebugMDMUtil3_V7_SetDefaultJITServer</name><parameter_list pos:line="3871" pos:column="46">(<param><type><name pos:line="3871" pos:column="47">This</name></type></param>,<param><type><name pos:line="3871" pos:column="52">clsidJITServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3872" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDefaultJITServer(This,clsidJITServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3874" pos:column="1">#<cpp:directive pos:line="3874" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3874" pos:column="9">IDebugMDMUtil3_V7_GetDefaultJITServer</name><parameter_list pos:line="3874" pos:column="46">(<param><type><name pos:line="3874" pos:column="47">This</name></type></param>,<param><type><name pos:line="3874" pos:column="52">pClsidJITServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3875" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDefaultJITServer(This,pClsidJITServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="3877" pos:column="1">#<cpp:directive pos:line="3877" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3877" pos:column="9">IDebugMDMUtil3_V7_RegisterJITDebugEngines</name><parameter_list pos:line="3877" pos:column="50">(<param><type><name pos:line="3877" pos:column="51">This</name></type></param>,<param><type><name pos:line="3877" pos:column="56">clsidJITServer</name></type></param>,<param><type><name pos:line="3877" pos:column="71">arrguidEngines</name></type></param>,<param><type><name pos:line="3877" pos:column="86">arrRemoteFlags</name></type></param>,<param><type><name pos:line="3877" pos:column="101">celtEngs</name></type></param>,<param><type><name pos:line="3877" pos:column="110">fRegister</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3878" pos:column="5">( (This)-&gt;lpVtbl -&gt; RegisterJITDebugEngines(This,clsidJITServer,arrguidEngines,arrRemoteFlags,celtEngs,fRegister) )</cpp:value></cpp:define> 

<cpp:define pos:line="3880" pos:column="1">#<cpp:directive pos:line="3880" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3880" pos:column="9">IDebugMDMUtil3_V7_CanDebugPID</name><parameter_list pos:line="3880" pos:column="38">(<param><type><name pos:line="3880" pos:column="39">This</name></type></param>,<param><type><name pos:line="3880" pos:column="44">guidEngine</name></type></param>,<param><type><name pos:line="3880" pos:column="55">pid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3881" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDebugPID(This,guidEngine,pid) )</cpp:value></cpp:define> 


<cpp:define pos:line="3884" pos:column="1">#<cpp:directive pos:line="3884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3884" pos:column="9">IDebugMDMUtil3_V7_DiagnoseScriptDebuggingError</name><parameter_list pos:line="3884" pos:column="55">(<param><type><name pos:line="3884" pos:column="56">This</name></type></param>,<param><type><name pos:line="3884" pos:column="61">dwDebuggeeProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3885" pos:column="5">( (This)-&gt;lpVtbl -&gt; DiagnoseScriptDebuggingError(This,dwDebuggeeProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="3887" pos:column="1">#<cpp:directive pos:line="3887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3887" pos:column="9">IDebugMDMUtil3_V7_DiagnoseWebDebuggingError</name><parameter_list pos:line="3887" pos:column="52">(<param><type><name pos:line="3887" pos:column="53">This</name></type></param>,<param><type><name pos:line="3887" pos:column="58">dwWebType</name></type></param>,<param><type><name pos:line="3887" pos:column="68">pszUrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3888" pos:column="5">( (This)-&gt;lpVtbl -&gt; DiagnoseWebDebuggingError(This,dwWebType,pszUrl) )</cpp:value></cpp:define> 

<cpp:define pos:line="3890" pos:column="1">#<cpp:directive pos:line="3890" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3890" pos:column="9">IDebugMDMUtil3_V7_DiagnoseASPDebugging</name><parameter_list pos:line="3890" pos:column="47">(<param><type><name pos:line="3890" pos:column="48">This</name></type></param>,<param><type><name pos:line="3890" pos:column="53">szASPUserAccount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3891" pos:column="5">( (This)-&gt;lpVtbl -&gt; DiagnoseASPDebugging(This,szASPUserAccount) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3893" pos:column="1">#<cpp:directive pos:line="3893" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3893" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3896" pos:column="1">#<cpp:directive pos:line="3896" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3896" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3901" pos:column="1">#<cpp:directive pos:line="3901" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3901" pos:column="9">/* __IDebugMDMUtil3_V7_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3904" pos:column="1">#<cpp:directive pos:line="3904" pos:column="2">ifndef</cpp:directive> <name pos:line="3904" pos:column="9">__IDebugSession2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3905" pos:column="1">#<cpp:directive pos:line="3905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3905" pos:column="9">__IDebugSession2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3907" pos:column="1">/* interface IDebugSession2 */</comment>
<comment type="block" pos:line="3908" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="3911" pos:column="1">enum <name pos:line="3911" pos:column="6">enum_LAUNCH_FLAGS</name>
    <block pos:line="3912" pos:column="5">{	<decl><name pos:line="3912" pos:column="9">LAUNCH_DEBUG</name>	<init pos:line="3912" pos:column="25">= <expr><lit:literal type="number" pos:line="3912" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="3912" pos:column="28">,</op:operator>
	<decl><name pos:line="3913" pos:column="9">LAUNCH_NODEBUG</name>	<init pos:line="3913" pos:column="25">= <expr><lit:literal type="number" pos:line="3913" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="3913" pos:column="30">,</op:operator>
	<decl><name pos:line="3914" pos:column="9">LAUNCH_ENABLE_ENC</name>	<init pos:line="3914" pos:column="33">= <expr><lit:literal type="number" pos:line="3914" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="3914" pos:column="38">,</op:operator>
	<decl><name pos:line="3915" pos:column="9">LAUNCH_MERGE_ENV</name>	<init pos:line="3915" pos:column="33">= <expr><lit:literal type="number" pos:line="3915" pos:column="35">0x4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="3917" pos:column="1">typedef <type><name pos:line="3917" pos:column="9">DWORD</name></type> <name pos:line="3917" pos:column="15">LAUNCH_FLAGS</name>;</typedef>


<enum pos:line="3920" pos:column="1">enum <name pos:line="3920" pos:column="6">enum_EXCEPTION_STATE</name>
    <block pos:line="3921" pos:column="5">{	<decl><name pos:line="3921" pos:column="9">EXCEPTION_NONE</name>	<init pos:line="3921" pos:column="25">= <expr><lit:literal type="number" pos:line="3921" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="3921" pos:column="28">,</op:operator>
	<decl><name pos:line="3922" pos:column="9">EXCEPTION_STOP_FIRST_CHANCE</name>	<init pos:line="3922" pos:column="41">= <expr><lit:literal type="number" pos:line="3922" pos:column="43">0x1</lit:literal></expr></init></decl><op:operator pos:line="3922" pos:column="46">,</op:operator>
	<decl><name pos:line="3923" pos:column="9">EXCEPTION_STOP_SECOND_CHANCE</name>	<init pos:line="3923" pos:column="41">= <expr><lit:literal type="number" pos:line="3923" pos:column="43">0x2</lit:literal></expr></init></decl><op:operator pos:line="3923" pos:column="46">,</op:operator>
	<decl><name pos:line="3924" pos:column="9">EXCEPTION_STOP_USER_FIRST_CHANCE</name>	<init pos:line="3924" pos:column="49">= <expr><lit:literal type="number" pos:line="3924" pos:column="51">0x10</lit:literal></expr></init></decl><op:operator pos:line="3924" pos:column="55">,</op:operator>
	<decl><name pos:line="3925" pos:column="9">EXCEPTION_STOP_USER_UNCAUGHT</name>	<init pos:line="3925" pos:column="41">= <expr><lit:literal type="number" pos:line="3925" pos:column="43">0x20</lit:literal></expr></init></decl><op:operator pos:line="3925" pos:column="47">,</op:operator>
	<decl><name pos:line="3926" pos:column="9">EXCEPTION_STOP_FIRST_CHANCE_USE_PARENT</name>	<init pos:line="3926" pos:column="49">= <expr><lit:literal type="number" pos:line="3926" pos:column="51">0x4</lit:literal></expr></init></decl><op:operator pos:line="3926" pos:column="54">,</op:operator>
	<decl><name pos:line="3927" pos:column="9">EXCEPTION_STOP_SECOND_CHANCE_USE_PARENT</name>	<init pos:line="3927" pos:column="49">= <expr><lit:literal type="number" pos:line="3927" pos:column="51">0x8</lit:literal></expr></init></decl><op:operator pos:line="3927" pos:column="54">,</op:operator>
	<decl><name pos:line="3928" pos:column="9">EXCEPTION_STOP_USER_FIRST_CHANCE_USE_PARENT</name>	<init pos:line="3928" pos:column="57">= <expr><lit:literal type="number" pos:line="3928" pos:column="59">0x40</lit:literal></expr></init></decl><op:operator pos:line="3928" pos:column="63">,</op:operator>
	<decl><name pos:line="3929" pos:column="9">EXCEPTION_STOP_USER_UNCAUGHT_USE_PARENT</name>	<init pos:line="3929" pos:column="49">= <expr><lit:literal type="number" pos:line="3929" pos:column="51">0x80</lit:literal></expr></init></decl><op:operator pos:line="3929" pos:column="55">,</op:operator>
	<decl><name pos:line="3930" pos:column="9">EXCEPTION_STOP_ALL</name>	<init pos:line="3930" pos:column="33">= <expr><lit:literal type="number" pos:line="3930" pos:column="35">0xff</lit:literal></expr></init></decl><op:operator pos:line="3930" pos:column="39">,</op:operator>
	<decl><name pos:line="3931" pos:column="9">EXCEPTION_CANNOT_BE_CONTINUED</name>	<init pos:line="3931" pos:column="41">= <expr><lit:literal type="number" pos:line="3931" pos:column="43">0x100</lit:literal></expr></init></decl><op:operator pos:line="3931" pos:column="48">,</op:operator>
	<decl><name pos:line="3932" pos:column="9">EXCEPTION_CODE_SUPPORTED</name>	<init pos:line="3932" pos:column="41">= <expr><lit:literal type="number" pos:line="3932" pos:column="43">0x1000</lit:literal></expr></init></decl><op:operator pos:line="3932" pos:column="49">,</op:operator>
	<decl><name pos:line="3933" pos:column="9">EXCEPTION_CODE_DISPLAY_IN_HEX</name>	<init pos:line="3933" pos:column="41">= <expr><lit:literal type="number" pos:line="3933" pos:column="43">0x2000</lit:literal></expr></init></decl><op:operator pos:line="3933" pos:column="49">,</op:operator>
	<decl><name pos:line="3934" pos:column="9">EXCEPTION_JUST_MY_CODE_SUPPORTED</name>	<init pos:line="3934" pos:column="49">= <expr><lit:literal type="number" pos:line="3934" pos:column="51">0x4000</lit:literal></expr></init></decl><op:operator pos:line="3934" pos:column="57">,</op:operator>
	<decl><name pos:line="3935" pos:column="9">EXCEPTION_MANAGED_DEBUG_ASSISTANT</name>	<init pos:line="3935" pos:column="49">= <expr><lit:literal type="number" pos:line="3935" pos:column="51">0x8000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="3937" pos:column="1">typedef <type><name pos:line="3937" pos:column="9">DWORD</name></type> <name pos:line="3937" pos:column="15">EXCEPTION_STATE</name>;</typedef>

<typedef pos:line="3939" pos:column="1">typedef <type><struct pos:line="3939" pos:column="9">struct <name pos:line="3939" pos:column="16">tagEXCEPTION_INFO</name>
    <block pos:line="3940" pos:column="5">{<public type="default" pos:line="3940" pos:column="6">
    <decl_stmt><decl><type><name pos:line="3941" pos:column="5">IDebugProgram2</name> <type:modifier pos:line="3941" pos:column="20">*</type:modifier></type><name pos:line="3941" pos:column="21">pProgram</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3942" pos:column="5">BSTR</name></type> <name pos:line="3942" pos:column="10">bstrProgramName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3943" pos:column="5">BSTR</name></type> <name pos:line="3943" pos:column="10">bstrExceptionName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3944" pos:column="5">DWORD</name></type> <name pos:line="3944" pos:column="11">dwCode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3945" pos:column="5">EXCEPTION_STATE</name></type> <name pos:line="3945" pos:column="21">dwState</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3946" pos:column="5">GUID</name></type> <name pos:line="3946" pos:column="10">guidType</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="3947" pos:column="9">EXCEPTION_INFO</name>;</typedef>


<enum pos:line="3950" pos:column="1">enum <name pos:line="3950" pos:column="6">enum_STOPPING_MODEL</name>
    <block pos:line="3951" pos:column="5">{	<decl><name pos:line="3951" pos:column="9">STOPPING_MODEL_STOP_ALL</name>	<init pos:line="3951" pos:column="33">= <expr><lit:literal type="number" pos:line="3951" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="3951" pos:column="38">,</op:operator>
	<decl><name pos:line="3952" pos:column="9">STOPPING_MODEL_STOP_ONE</name>	<init pos:line="3952" pos:column="33">= <expr><lit:literal type="number" pos:line="3952" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="3954" pos:column="1">typedef <type><name pos:line="3954" pos:column="9">DWORD</name></type> <name pos:line="3954" pos:column="15">STOPPING_MODEL</name>;</typedef>


<decl_stmt><decl><type><name pos:line="3957" pos:column="1">EXTERN_C</name> <specifier pos:line="3957" pos:column="10">const</specifier> <name pos:line="3957" pos:column="16">IID</name></type> <name pos:line="3957" pos:column="20">IID_IDebugSession2</name></decl>;</decl_stmt>

<cpp:if pos:line="3959" pos:column="1">#<cpp:directive pos:line="3959" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3959" pos:column="5">defined</name><argument_list pos:line="3959" pos:column="12">(<argument><expr><name pos:line="3959" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3959" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3959" pos:column="29">!</op:operator><call><name pos:line="3959" pos:column="30">defined</name><argument_list pos:line="3959" pos:column="37">(<argument><expr><name pos:line="3959" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3961" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3961" pos:column="19">(<argument pos:line="3961" pos:column="20">"8948300f-8bd5-4728-a1d8-83d172295a9d"</argument>)</argument_list></macro>
    <label><name pos:line="3962" pos:column="5">IDebugSession2</name> :</label> <expr_stmt><expr pos:line="3962" pos:column="22">public <name pos:line="3962" pos:column="29">IUnknown</name>
    <block pos:line="3963" pos:column="5">{
    <expr pos:line="3964" pos:column="5">public<op:operator pos:line="3964" pos:column="11">:</op:operator>
        virtual <name pos:line="3965" pos:column="17">HRESULT</name> <name pos:line="3965" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3965" pos:column="43">GetName</name><argument_list pos:line="3965" pos:column="50">( 
            <comment type="block" pos:line="3966" pos:column="13">/* [out] */</comment> <argument pos:line="3966" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="3966" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="3966" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="3968" pos:column="9">virtual <name pos:line="3968" pos:column="17">HRESULT</name> <name pos:line="3968" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3968" pos:column="43">SetName</name><argument_list pos:line="3968" pos:column="50">( 
            <comment type="block" pos:line="3969" pos:column="13">/* [in] */</comment> <argument pos:line="3969" pos:column="24">__RPC__in LPCOLESTR pszName</argument>)</argument_list></macro> <op:operator pos:line="3969" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="3969" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="3971" pos:column="9">virtual <name pos:line="3971" pos:column="17">HRESULT</name> <name pos:line="3971" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3971" pos:column="43">EnumProcesses</name><argument_list pos:line="3971" pos:column="56">( 
            <comment type="block" pos:line="3972" pos:column="13">/* [out] */</comment> <argument pos:line="3972" pos:column="25">__RPC__deref_out_opt IEnumDebugProcesses2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="3972" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="3972" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="3974" pos:column="9">virtual <name pos:line="3974" pos:column="17">HRESULT</name> <name pos:line="3974" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3974" pos:column="43">Launch</name><argument_list pos:line="3974" pos:column="49">( 
            <comment type="block" pos:line="3975" pos:column="13">/* [full][in] */</comment> <argument pos:line="3975" pos:column="30">__RPC__in_opt LPCOLESTR pszMachine</argument>,
            <comment type="block" pos:line="3976" pos:column="13">/* [in] */</comment> <argument pos:line="3976" pos:column="24">__RPC__in_opt IDebugPort2 *pPort</argument>,
            <comment type="block" pos:line="3977" pos:column="13">/* [full][in] */</comment> <argument pos:line="3977" pos:column="30">__RPC__in_opt LPCOLESTR pszExe</argument>,
            <comment type="block" pos:line="3978" pos:column="13">/* [full][in] */</comment> <argument pos:line="3978" pos:column="30">__RPC__in_opt LPCOLESTR pszArgs</argument>,
            <comment type="block" pos:line="3979" pos:column="13">/* [full][in] */</comment> <argument pos:line="3979" pos:column="30">__RPC__in_opt LPCOLESTR pszDir</argument>,
            <comment type="block" pos:line="3980" pos:column="13">/* [full][in] */</comment> <argument pos:line="3980" pos:column="30">__RPC__in_opt BSTR bstrEnv</argument>,
            <comment type="block" pos:line="3981" pos:column="13">/* [full][in] */</comment> <argument pos:line="3981" pos:column="30">__RPC__in_opt LPCOLESTR pszOptions</argument>,
            <comment type="block" pos:line="3982" pos:column="13">/* [in] */</comment> <argument pos:line="3982" pos:column="24">LAUNCH_FLAGS dwLaunchFlags</argument>,
            <comment type="block" pos:line="3983" pos:column="13">/* [in] */</comment> <argument pos:line="3983" pos:column="24">DWORD hStdInput</argument>,
            <comment type="block" pos:line="3984" pos:column="13">/* [in] */</comment> <argument pos:line="3984" pos:column="24">DWORD hStdOutput</argument>,
            <comment type="block" pos:line="3985" pos:column="13">/* [in] */</comment> <argument pos:line="3985" pos:column="24">DWORD hStdError</argument>,
            <comment type="block" pos:line="3986" pos:column="13">/* [in] */</comment> <argument pos:line="3986" pos:column="24">__RPC__in REFGUID guidLaunchingEngine</argument>,
            <comment type="block" pos:line="3987" pos:column="13">/* [in] */</comment> <argument pos:line="3987" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>,
            <comment type="block" pos:line="3988" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3988" pos:column="33">__RPC__in_ecount_full(celtSpecificEngines) GUID *rgguidSpecificEngines</argument>,
            <comment type="block" pos:line="3989" pos:column="13">/* [in] */</comment> <argument pos:line="3989" pos:column="24">DWORD celtSpecificEngines</argument>,
            <comment type="block" pos:line="3990" pos:column="13">/* [out] */</comment> <argument pos:line="3990" pos:column="25">__RPC__deref_out_opt IDebugProcess2 **ppProcess</argument>)</argument_list></macro> <op:operator pos:line="3990" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="3990" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="3992" pos:column="9">virtual <name pos:line="3992" pos:column="17">HRESULT</name> <name pos:line="3992" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3992" pos:column="43">RegisterJITServer</name><argument_list pos:line="3992" pos:column="60">( 
            <comment type="block" pos:line="3993" pos:column="13">/* [in] */</comment> <argument pos:line="3993" pos:column="24">__RPC__in REFCLSID clsidJITServer</argument>)</argument_list></macro> <op:operator pos:line="3993" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3993" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="3995" pos:column="9">virtual <name pos:line="3995" pos:column="17">HRESULT</name> <name pos:line="3995" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3995" pos:column="43">Terminate</name><argument_list pos:line="3995" pos:column="52">( 
            <comment type="block" pos:line="3996" pos:column="13">/* [in] */</comment> <argument pos:line="3996" pos:column="24">BOOL fForce</argument>)</argument_list></macro> <op:operator pos:line="3996" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3996" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="3998" pos:column="9">virtual <name pos:line="3998" pos:column="17">HRESULT</name> <name pos:line="3998" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3998" pos:column="43">Detach</name><argument_list pos:line="3998" pos:column="49">( <argument><expr><name pos:line="3998" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3998" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="3998" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="4000" pos:column="9">virtual <name pos:line="4000" pos:column="17">HRESULT</name> <name pos:line="4000" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4000" pos:column="43">CauseBreak</name><argument_list pos:line="4000" pos:column="53">( <argument><expr><name pos:line="4000" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4000" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="4000" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="4002" pos:column="9">virtual <name pos:line="4002" pos:column="17">HRESULT</name> <name pos:line="4002" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4002" pos:column="43">CreatePendingBreakpoint</name><argument_list pos:line="4002" pos:column="66">( 
            <comment type="block" pos:line="4003" pos:column="13">/* [in] */</comment> <argument pos:line="4003" pos:column="24">__RPC__in_opt IDebugBreakpointRequest2 *pBPRequest</argument>,
            <comment type="block" pos:line="4004" pos:column="13">/* [out] */</comment> <argument pos:line="4004" pos:column="25">__RPC__deref_out_opt IDebugPendingBreakpoint2 **ppPendingBP</argument>)</argument_list></macro> <op:operator pos:line="4004" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="4004" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="4006" pos:column="9">virtual <name pos:line="4006" pos:column="17">HRESULT</name> <name pos:line="4006" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4006" pos:column="43">EnumPendingBreakpoints</name><argument_list pos:line="4006" pos:column="65">( 
            <comment type="block" pos:line="4007" pos:column="13">/* [in] */</comment> <argument pos:line="4007" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="4008" pos:column="13">/* [full][in] */</comment> <argument pos:line="4008" pos:column="30">__RPC__in_opt LPCOLESTR pszProgram</argument>,
            <comment type="block" pos:line="4009" pos:column="13">/* [out] */</comment> <argument pos:line="4009" pos:column="25">__RPC__deref_out_opt IEnumDebugPendingBreakpoints2 **ppEnumBPs</argument>)</argument_list></macro> <op:operator pos:line="4009" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="4009" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="4011" pos:column="9">virtual <name pos:line="4011" pos:column="17">HRESULT</name> <name pos:line="4011" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4011" pos:column="43">EnumMachines__deprecated</name><argument_list pos:line="4011" pos:column="67">( 
            <comment type="block" pos:line="4012" pos:column="13">/* [out] */</comment> <argument pos:line="4012" pos:column="25">__RPC__deref_out_opt IEnumDebugMachines2__deprecated **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="4012" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="4012" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="4014" pos:column="9">virtual <name pos:line="4014" pos:column="17">HRESULT</name> <name pos:line="4014" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4014" pos:column="43">ConnectToServer</name><argument_list pos:line="4014" pos:column="58">( 
            <comment type="block" pos:line="4015" pos:column="13">/* [full][in] */</comment> <argument pos:line="4015" pos:column="30">__RPC__in_opt LPCOLESTR szServerName</argument>,
            <comment type="block" pos:line="4016" pos:column="13">/* [out] */</comment> <argument pos:line="4016" pos:column="25">__RPC__deref_out_opt IDebugCoreServer2 **ppServer</argument>)</argument_list></macro> <op:operator pos:line="4016" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="4016" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="4018" pos:column="9">virtual <name pos:line="4018" pos:column="17">HRESULT</name> <name pos:line="4018" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4018" pos:column="43">DisconnectServer</name><argument_list pos:line="4018" pos:column="59">( 
            <comment type="block" pos:line="4019" pos:column="13">/* [in] */</comment> <argument pos:line="4019" pos:column="24">__RPC__in_opt IDebugCoreServer2 *pServer</argument>)</argument_list></macro> <op:operator pos:line="4019" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="4019" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="4021" pos:column="9">virtual <name pos:line="4021" pos:column="17">HRESULT</name> <name pos:line="4021" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4021" pos:column="43">ShutdownSession</name><argument_list pos:line="4021" pos:column="58">( <argument><expr><name pos:line="4021" pos:column="60">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4021" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="4021" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="4023" pos:column="9">virtual <name pos:line="4023" pos:column="17">HRESULT</name> <name pos:line="4023" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4023" pos:column="43">EnumCodeContexts</name><argument_list pos:line="4023" pos:column="59">( 
            <comment type="block" pos:line="4024" pos:column="13">/* [in] */</comment> <argument pos:line="4024" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="4025" pos:column="13">/* [in] */</comment> <argument pos:line="4025" pos:column="24">__RPC__in_opt IDebugDocumentPosition2 *pDocPos</argument>,
            <comment type="block" pos:line="4026" pos:column="13">/* [out] */</comment> <argument pos:line="4026" pos:column="25">__RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="4026" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="4026" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="4028" pos:column="9">virtual <name pos:line="4028" pos:column="17">HRESULT</name> <name pos:line="4028" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4028" pos:column="43">SetException</name><argument_list pos:line="4028" pos:column="55">( 
            <comment type="block" pos:line="4029" pos:column="13">/* [in] */</comment> <argument pos:line="4029" pos:column="24">__RPC__in EXCEPTION_INFO *pException</argument>)</argument_list></macro> <op:operator pos:line="4029" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4029" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="4031" pos:column="9">virtual <name pos:line="4031" pos:column="17">HRESULT</name> <name pos:line="4031" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4031" pos:column="43">EnumSetExceptions</name><argument_list pos:line="4031" pos:column="60">( 
            <comment type="block" pos:line="4032" pos:column="13">/* [in] */</comment> <argument pos:line="4032" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="4033" pos:column="13">/* [full][in] */</comment> <argument pos:line="4033" pos:column="30">__RPC__in_opt LPCOLESTR pszProgram</argument>,
            <comment type="block" pos:line="4034" pos:column="13">/* [in] */</comment> <argument pos:line="4034" pos:column="24">__RPC__in REFGUID guidType</argument>,
            <comment type="block" pos:line="4035" pos:column="13">/* [out] */</comment> <argument pos:line="4035" pos:column="25">__RPC__deref_out_opt IEnumDebugExceptionInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="4035" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="4035" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="4037" pos:column="9">virtual <name pos:line="4037" pos:column="17">HRESULT</name> <name pos:line="4037" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4037" pos:column="43">RemoveSetException</name><argument_list pos:line="4037" pos:column="61">( 
            <comment type="block" pos:line="4038" pos:column="13">/* [in] */</comment> <argument pos:line="4038" pos:column="24">__RPC__in EXCEPTION_INFO *pException</argument>)</argument_list></macro> <op:operator pos:line="4038" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4038" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="4040" pos:column="9">virtual <name pos:line="4040" pos:column="17">HRESULT</name> <name pos:line="4040" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4040" pos:column="43">RemoveAllSetExceptions</name><argument_list pos:line="4040" pos:column="65">( 
            <comment type="block" pos:line="4041" pos:column="13">/* [in] */</comment> <argument pos:line="4041" pos:column="24">__RPC__in REFGUID guidType</argument>)</argument_list></macro> <op:operator pos:line="4041" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="4041" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="4043" pos:column="9">virtual <name pos:line="4043" pos:column="17">HRESULT</name> <name pos:line="4043" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4043" pos:column="43">EnumDefaultExceptions</name><argument_list pos:line="4043" pos:column="64">( 
            <comment type="block" pos:line="4044" pos:column="13">/* [full][in] */</comment> <argument pos:line="4044" pos:column="30">__RPC__in_opt EXCEPTION_INFO *pParentException</argument>,
            <comment type="block" pos:line="4045" pos:column="13">/* [out] */</comment> <argument pos:line="4045" pos:column="25">__RPC__deref_out_opt IEnumDebugExceptionInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="4045" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="4045" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="4047" pos:column="9">virtual <name pos:line="4047" pos:column="17">HRESULT</name> <name pos:line="4047" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4047" pos:column="43">GetENCUpdate</name><argument_list pos:line="4047" pos:column="55">( 
            <comment type="block" pos:line="4048" pos:column="13">/* [in] */</comment> <argument pos:line="4048" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="4049" pos:column="13">/* [out] */</comment> <argument pos:line="4049" pos:column="25">__RPC__deref_out_opt IDebugENCUpdate **ppUpdate</argument>)</argument_list></macro> <op:operator pos:line="4049" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="4049" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="4051" pos:column="9">virtual <name pos:line="4051" pos:column="17">HRESULT</name> <name pos:line="4051" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4051" pos:column="43">SetLocale</name><argument_list pos:line="4051" pos:column="52">( 
            <comment type="block" pos:line="4052" pos:column="13">/* [in] */</comment> <argument pos:line="4052" pos:column="24">WORD wLangID</argument>)</argument_list></macro> <op:operator pos:line="4052" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="4052" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="4054" pos:column="9">virtual <name pos:line="4054" pos:column="17">HRESULT</name> <name pos:line="4054" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4054" pos:column="43">SetRegistryRoot</name><argument_list pos:line="4054" pos:column="58">( 
            <comment type="block" pos:line="4055" pos:column="13">/* [full][in] */</comment> <argument pos:line="4055" pos:column="30">__RPC__in_opt LPCOLESTR pszRegistryRoot</argument>)</argument_list></macro> <op:operator pos:line="4055" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="4055" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="4057" pos:column="9">virtual <name pos:line="4057" pos:column="17">HRESULT</name> <name pos:line="4057" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4057" pos:column="43">IsAlive</name><argument_list pos:line="4057" pos:column="50">( <argument><expr><name pos:line="4057" pos:column="52">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4057" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4057" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="4059" pos:column="9">virtual <name pos:line="4059" pos:column="17">HRESULT</name> <name pos:line="4059" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4059" pos:column="43">ClearAllSessionThreadStackFrames</name><argument_list pos:line="4059" pos:column="75">( <argument><expr><name pos:line="4059" pos:column="77">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4059" pos:column="83">=</op:operator> <lit:literal type="number" pos:line="4059" pos:column="85">0</lit:literal></expr>;
        
        <expr pos:line="4061" pos:column="9">virtual <name pos:line="4061" pos:column="17">HRESULT</name> <name pos:line="4061" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4061" pos:column="43">__deprecated_GetSessionId</name><argument_list pos:line="4061" pos:column="68">( 
            <comment type="block" pos:line="4062" pos:column="13">/* [in] */</comment> <argument pos:line="4062" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>,
            <comment type="block" pos:line="4063" pos:column="13">/* [full][size_is][in] */</comment> <argument pos:line="4063" pos:column="39">__RPC__in_ecount_full_opt(celtSpecificEngines) GUID *rgguidSpecificEngines</argument>,
            <comment type="block" pos:line="4064" pos:column="13">/* [in] */</comment> <argument pos:line="4064" pos:column="24">DWORD celtSpecificEngines</argument>,
            <comment type="block" pos:line="4065" pos:column="13">/* [full][in] */</comment> <argument pos:line="4065" pos:column="30">__RPC__in_opt LPCOLESTR pszStartPageUrl</argument>,
            <comment type="block" pos:line="4066" pos:column="13">/* [out] */</comment> <argument pos:line="4066" pos:column="25">__RPC__deref_out_opt BSTR *pbstrSessionId</argument>)</argument_list></macro> <op:operator pos:line="4066" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="4066" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="4068" pos:column="9">virtual <name pos:line="4068" pos:column="17">HRESULT</name> <name pos:line="4068" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4068" pos:column="43">SetEngineMetric</name><argument_list pos:line="4068" pos:column="58">( 
            <comment type="block" pos:line="4069" pos:column="13">/* [in] */</comment> <argument pos:line="4069" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="4070" pos:column="13">/* [in] */</comment> <argument pos:line="4070" pos:column="24">__RPC__in LPCOLESTR pszMetric</argument>,
            <comment type="block" pos:line="4071" pos:column="13">/* [in] */</comment> <argument pos:line="4071" pos:column="24">VARIANT varValue</argument>)</argument_list></macro> <op:operator pos:line="4071" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="4071" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="4073" pos:column="9">virtual <name pos:line="4073" pos:column="17">HRESULT</name> <name pos:line="4073" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4073" pos:column="43">SetStoppingModel</name><argument_list pos:line="4073" pos:column="59">( 
            <comment type="block" pos:line="4074" pos:column="13">/* [in] */</comment> <argument pos:line="4074" pos:column="24">STOPPING_MODEL dwStoppingModel</argument>)</argument_list></macro> <op:operator pos:line="4074" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="4074" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="4076" pos:column="9">virtual <name pos:line="4076" pos:column="17">HRESULT</name> <name pos:line="4076" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4076" pos:column="43">GetStoppingModel</name><argument_list pos:line="4076" pos:column="59">( 
            <comment type="block" pos:line="4077" pos:column="13">/* [out] */</comment> <argument pos:line="4077" pos:column="25">__RPC__out STOPPING_MODEL *pdwStoppingModel</argument>)</argument_list></macro> <op:operator pos:line="4077" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="4077" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="4079" pos:column="9">virtual <name pos:line="4079" pos:column="17">HRESULT</name> <name pos:line="4079" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4079" pos:column="43">__deprecated_RegisterSessionWithServer</name><argument_list pos:line="4079" pos:column="81">( 
            <comment type="block" pos:line="4080" pos:column="13">/* [in] */</comment> <argument pos:line="4080" pos:column="24">__RPC__in LPCOLESTR pwszServerName</argument>)</argument_list></macro> <op:operator pos:line="4080" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="4080" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4084" pos:column="1">#<cpp:directive pos:line="4084" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4084" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4086" pos:column="5">typedef <type><struct pos:line="4086" pos:column="13">struct <name pos:line="4086" pos:column="20">IDebugSession2Vtbl</name>
    <block pos:line="4087" pos:column="5">{<public type="default" pos:line="4087" pos:column="6">
        <function_decl><type><name pos:line="4088" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4090" pos:column="9">HRESULT</name></type> ( <name pos:line="4090" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4090" pos:column="37">*</type:modifier><name pos:line="4090" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4090" pos:column="54">( 
            <param><decl><type><name pos:line="4091" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4091" pos:column="28">*</type:modifier></type> <name pos:line="4091" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4092" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4092" pos:column="24">__RPC__in</name> <name pos:line="4092" pos:column="34">REFIID</name></type> <name pos:line="4092" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4093" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4094" pos:column="13">__RPC__deref_out</name>  <name pos:line="4094" pos:column="31">void</name> <type:modifier pos:line="4094" pos:column="36">*</type:modifier><type:modifier pos:line="4094" pos:column="37">*</type:modifier></type><name pos:line="4094" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4096" pos:column="9">ULONG</name></type> ( <name pos:line="4096" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4096" pos:column="35">*</type:modifier><name pos:line="4096" pos:column="36">AddRef</name> )<parameter_list pos:line="4096" pos:column="44">( 
            <param><decl><type><name pos:line="4097" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4097" pos:column="28">*</type:modifier></type> <name pos:line="4097" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4099" pos:column="9">ULONG</name></type> ( <name pos:line="4099" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4099" pos:column="35">*</type:modifier><name pos:line="4099" pos:column="36">Release</name> )<parameter_list pos:line="4099" pos:column="45">( 
            <param><decl><type><name pos:line="4100" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4100" pos:column="28">*</type:modifier></type> <name pos:line="4100" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4102" pos:column="9">HRESULT</name></type> ( <name pos:line="4102" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4102" pos:column="37">*</type:modifier><name pos:line="4102" pos:column="38">GetName</name> )<parameter_list pos:line="4102" pos:column="47">( 
            <param><decl><type><name pos:line="4103" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4103" pos:column="28">*</type:modifier></type> <name pos:line="4103" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4104" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4104" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4104" pos:column="46">BSTR</name> <type:modifier pos:line="4104" pos:column="51">*</type:modifier></type><name pos:line="4104" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4106" pos:column="9">HRESULT</name></type> ( <name pos:line="4106" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4106" pos:column="37">*</type:modifier><name pos:line="4106" pos:column="38">SetName</name> )<parameter_list pos:line="4106" pos:column="47">( 
            <param><decl><type><name pos:line="4107" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4107" pos:column="28">*</type:modifier></type> <name pos:line="4107" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4108" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4108" pos:column="24">__RPC__in</name> <name pos:line="4108" pos:column="34">LPCOLESTR</name></type> <name pos:line="4108" pos:column="44">pszName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4110" pos:column="9">HRESULT</name></type> ( <name pos:line="4110" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4110" pos:column="37">*</type:modifier><name pos:line="4110" pos:column="38">EnumProcesses</name> )<parameter_list pos:line="4110" pos:column="53">( 
            <param><decl><type><name pos:line="4111" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4111" pos:column="28">*</type:modifier></type> <name pos:line="4111" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4112" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4112" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4112" pos:column="46">IEnumDebugProcesses2</name> <type:modifier pos:line="4112" pos:column="67">*</type:modifier><type:modifier pos:line="4112" pos:column="68">*</type:modifier></type><name pos:line="4112" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4114" pos:column="9">HRESULT</name> <argument_list pos:line="4114" pos:column="17">( <argument pos:line="4114" pos:column="19">STDMETHODCALLTYPE *Launch</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4114" pos:column="46">(</op:operator> 
            <name pos:line="4115" pos:column="13">IDebugSession2</name> <op:operator pos:line="4115" pos:column="28">*</op:operator> <name pos:line="4115" pos:column="30">This</name><op:operator pos:line="4115" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4116" pos:column="13">/* [full][in] */</comment> <name pos:line="4116" pos:column="30">__RPC__in_opt</name> <name pos:line="4116" pos:column="44">LPCOLESTR</name> <name pos:line="4116" pos:column="54">pszMachine</name><op:operator pos:line="4116" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4117" pos:column="13">/* [in] */</comment> <name pos:line="4117" pos:column="24">__RPC__in_opt</name> <name pos:line="4117" pos:column="38">IDebugPort2</name> <op:operator pos:line="4117" pos:column="50">*</op:operator><name pos:line="4117" pos:column="51">pPort</name><op:operator pos:line="4117" pos:column="56">,</op:operator>
            <comment type="block" pos:line="4118" pos:column="13">/* [full][in] */</comment> <name pos:line="4118" pos:column="30">__RPC__in_opt</name> <name pos:line="4118" pos:column="44">LPCOLESTR</name> <name pos:line="4118" pos:column="54">pszExe</name><op:operator pos:line="4118" pos:column="60">,</op:operator>
            <comment type="block" pos:line="4119" pos:column="13">/* [full][in] */</comment> <name pos:line="4119" pos:column="30">__RPC__in_opt</name> <name pos:line="4119" pos:column="44">LPCOLESTR</name> <name pos:line="4119" pos:column="54">pszArgs</name><op:operator pos:line="4119" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4120" pos:column="13">/* [full][in] */</comment> <name pos:line="4120" pos:column="30">__RPC__in_opt</name> <name pos:line="4120" pos:column="44">LPCOLESTR</name> <name pos:line="4120" pos:column="54">pszDir</name><op:operator pos:line="4120" pos:column="60">,</op:operator>
            <comment type="block" pos:line="4121" pos:column="13">/* [full][in] */</comment> <name pos:line="4121" pos:column="30">__RPC__in_opt</name> <name pos:line="4121" pos:column="44">BSTR</name> <name pos:line="4121" pos:column="49">bstrEnv</name><op:operator pos:line="4121" pos:column="56">,</op:operator>
            <comment type="block" pos:line="4122" pos:column="13">/* [full][in] */</comment> <name pos:line="4122" pos:column="30">__RPC__in_opt</name> <name pos:line="4122" pos:column="44">LPCOLESTR</name> <name pos:line="4122" pos:column="54">pszOptions</name><op:operator pos:line="4122" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4123" pos:column="13">/* [in] */</comment> <name pos:line="4123" pos:column="24">LAUNCH_FLAGS</name> <name pos:line="4123" pos:column="37">dwLaunchFlags</name><op:operator pos:line="4123" pos:column="50">,</op:operator>
            <comment type="block" pos:line="4124" pos:column="13">/* [in] */</comment> <name pos:line="4124" pos:column="24">DWORD</name> <name pos:line="4124" pos:column="30">hStdInput</name><op:operator pos:line="4124" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4125" pos:column="13">/* [in] */</comment> <name pos:line="4125" pos:column="24">DWORD</name> <name pos:line="4125" pos:column="30">hStdOutput</name><op:operator pos:line="4125" pos:column="40">,</op:operator>
            <comment type="block" pos:line="4126" pos:column="13">/* [in] */</comment> <name pos:line="4126" pos:column="24">DWORD</name> <name pos:line="4126" pos:column="30">hStdError</name><op:operator pos:line="4126" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4127" pos:column="13">/* [in] */</comment> <name pos:line="4127" pos:column="24">__RPC__in</name> <name pos:line="4127" pos:column="34">REFGUID</name> <name pos:line="4127" pos:column="42">guidLaunchingEngine</name><op:operator pos:line="4127" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4128" pos:column="13">/* [in] */</comment> <name pos:line="4128" pos:column="24">__RPC__in_opt</name> <name pos:line="4128" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="4128" pos:column="59">*</op:operator><name pos:line="4128" pos:column="60">pCallback</name><op:operator pos:line="4128" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4129" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4129" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4129" pos:column="54">(<argument pos:line="4129" pos:column="55">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="4129" pos:column="76">GUID</name> <op:operator pos:line="4129" pos:column="81">*</op:operator><name pos:line="4129" pos:column="82">rgguidSpecificEngines</name><op:operator pos:line="4129" pos:column="103">,</op:operator>
            <comment type="block" pos:line="4130" pos:column="13">/* [in] */</comment> <name pos:line="4130" pos:column="24">DWORD</name> <name pos:line="4130" pos:column="30">celtSpecificEngines</name><op:operator pos:line="4130" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4131" pos:column="13">/* [out] */</comment> <name pos:line="4131" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4131" pos:column="46">IDebugProcess2</name> <op:operator pos:line="4131" pos:column="61">*</op:operator><op:operator pos:line="4131" pos:column="62">*</op:operator><name pos:line="4131" pos:column="63">ppProcess</name><op:operator pos:line="4131" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4133" pos:column="9">HRESULT</name></type> ( <name pos:line="4133" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4133" pos:column="37">*</type:modifier><name pos:line="4133" pos:column="38">RegisterJITServer</name> )<parameter_list pos:line="4133" pos:column="57">( 
            <param><decl><type><name pos:line="4134" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4134" pos:column="28">*</type:modifier></type> <name pos:line="4134" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4135" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4135" pos:column="24">__RPC__in</name> <name pos:line="4135" pos:column="34">REFCLSID</name></type> <name pos:line="4135" pos:column="43">clsidJITServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4137" pos:column="9">HRESULT</name></type> ( <name pos:line="4137" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4137" pos:column="37">*</type:modifier><name pos:line="4137" pos:column="38">Terminate</name> )<parameter_list pos:line="4137" pos:column="49">( 
            <param><decl><type><name pos:line="4138" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4138" pos:column="28">*</type:modifier></type> <name pos:line="4138" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4139" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4139" pos:column="24">BOOL</name></type> <name pos:line="4139" pos:column="29">fForce</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4141" pos:column="9">HRESULT</name></type> ( <name pos:line="4141" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4141" pos:column="37">*</type:modifier><name pos:line="4141" pos:column="38">Detach</name> )<parameter_list pos:line="4141" pos:column="46">( 
            <param><decl><type><name pos:line="4142" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4142" pos:column="28">*</type:modifier></type> <name pos:line="4142" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4144" pos:column="9">HRESULT</name></type> ( <name pos:line="4144" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4144" pos:column="37">*</type:modifier><name pos:line="4144" pos:column="38">CauseBreak</name> )<parameter_list pos:line="4144" pos:column="50">( 
            <param><decl><type><name pos:line="4145" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4145" pos:column="28">*</type:modifier></type> <name pos:line="4145" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4147" pos:column="9">HRESULT</name></type> ( <name pos:line="4147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4147" pos:column="37">*</type:modifier><name pos:line="4147" pos:column="38">CreatePendingBreakpoint</name> )<parameter_list pos:line="4147" pos:column="63">( 
            <param><decl><type><name pos:line="4148" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4148" pos:column="28">*</type:modifier></type> <name pos:line="4148" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4149" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4149" pos:column="24">__RPC__in_opt</name> <name pos:line="4149" pos:column="38">IDebugBreakpointRequest2</name> <type:modifier pos:line="4149" pos:column="63">*</type:modifier></type><name pos:line="4149" pos:column="64">pBPRequest</name></decl></param>,
            <comment type="block" pos:line="4150" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4150" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4150" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="4150" pos:column="71">*</type:modifier><type:modifier pos:line="4150" pos:column="72">*</type:modifier></type><name pos:line="4150" pos:column="73">ppPendingBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4152" pos:column="9">HRESULT</name></type> ( <name pos:line="4152" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4152" pos:column="37">*</type:modifier><name pos:line="4152" pos:column="38">EnumPendingBreakpoints</name> )<parameter_list pos:line="4152" pos:column="62">( 
            <param><decl><type><name pos:line="4153" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4153" pos:column="28">*</type:modifier></type> <name pos:line="4153" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4154" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4154" pos:column="24">__RPC__in_opt</name> <name pos:line="4154" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4154" pos:column="53">*</type:modifier></type><name pos:line="4154" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4155" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4155" pos:column="30">__RPC__in_opt</name> <name pos:line="4155" pos:column="44">LPCOLESTR</name></type> <name pos:line="4155" pos:column="54">pszProgram</name></decl></param>,
            <comment type="block" pos:line="4156" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4156" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4156" pos:column="46">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="4156" pos:column="76">*</type:modifier><type:modifier pos:line="4156" pos:column="77">*</type:modifier></type><name pos:line="4156" pos:column="78">ppEnumBPs</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4158" pos:column="9">HRESULT</name></type> ( <name pos:line="4158" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4158" pos:column="37">*</type:modifier><name pos:line="4158" pos:column="38">EnumMachines__deprecated</name> )<parameter_list pos:line="4158" pos:column="64">( 
            <param><decl><type><name pos:line="4159" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4159" pos:column="28">*</type:modifier></type> <name pos:line="4159" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4160" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4160" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4160" pos:column="46">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="4160" pos:column="78">*</type:modifier><type:modifier pos:line="4160" pos:column="79">*</type:modifier></type><name pos:line="4160" pos:column="80">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4162" pos:column="9">HRESULT</name></type> ( <name pos:line="4162" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4162" pos:column="37">*</type:modifier><name pos:line="4162" pos:column="38">ConnectToServer</name> )<parameter_list pos:line="4162" pos:column="55">( 
            <param><decl><type><name pos:line="4163" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4163" pos:column="28">*</type:modifier></type> <name pos:line="4163" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4164" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4164" pos:column="30">__RPC__in_opt</name> <name pos:line="4164" pos:column="44">LPCOLESTR</name></type> <name pos:line="4164" pos:column="54">szServerName</name></decl></param>,
            <comment type="block" pos:line="4165" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4165" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4165" pos:column="46">IDebugCoreServer2</name> <type:modifier pos:line="4165" pos:column="64">*</type:modifier><type:modifier pos:line="4165" pos:column="65">*</type:modifier></type><name pos:line="4165" pos:column="66">ppServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4167" pos:column="9">HRESULT</name></type> ( <name pos:line="4167" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4167" pos:column="37">*</type:modifier><name pos:line="4167" pos:column="38">DisconnectServer</name> )<parameter_list pos:line="4167" pos:column="56">( 
            <param><decl><type><name pos:line="4168" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4168" pos:column="28">*</type:modifier></type> <name pos:line="4168" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4169" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4169" pos:column="24">__RPC__in_opt</name> <name pos:line="4169" pos:column="38">IDebugCoreServer2</name> <type:modifier pos:line="4169" pos:column="56">*</type:modifier></type><name pos:line="4169" pos:column="57">pServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4171" pos:column="9">HRESULT</name></type> ( <name pos:line="4171" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4171" pos:column="37">*</type:modifier><name pos:line="4171" pos:column="38">ShutdownSession</name> )<parameter_list pos:line="4171" pos:column="55">( 
            <param><decl><type><name pos:line="4172" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4172" pos:column="28">*</type:modifier></type> <name pos:line="4172" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4174" pos:column="9">HRESULT</name></type> ( <name pos:line="4174" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4174" pos:column="37">*</type:modifier><name pos:line="4174" pos:column="38">EnumCodeContexts</name> )<parameter_list pos:line="4174" pos:column="56">( 
            <param><decl><type><name pos:line="4175" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4175" pos:column="28">*</type:modifier></type> <name pos:line="4175" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4176" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4176" pos:column="24">__RPC__in_opt</name> <name pos:line="4176" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4176" pos:column="53">*</type:modifier></type><name pos:line="4176" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4177" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4177" pos:column="24">__RPC__in_opt</name> <name pos:line="4177" pos:column="38">IDebugDocumentPosition2</name> <type:modifier pos:line="4177" pos:column="62">*</type:modifier></type><name pos:line="4177" pos:column="63">pDocPos</name></decl></param>,
            <comment type="block" pos:line="4178" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4178" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4178" pos:column="46">IEnumDebugCodeContexts2</name> <type:modifier pos:line="4178" pos:column="70">*</type:modifier><type:modifier pos:line="4178" pos:column="71">*</type:modifier></type><name pos:line="4178" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4180" pos:column="9">HRESULT</name></type> ( <name pos:line="4180" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4180" pos:column="37">*</type:modifier><name pos:line="4180" pos:column="38">SetException</name> )<parameter_list pos:line="4180" pos:column="52">( 
            <param><decl><type><name pos:line="4181" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4181" pos:column="28">*</type:modifier></type> <name pos:line="4181" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4182" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4182" pos:column="24">__RPC__in</name> <name pos:line="4182" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4182" pos:column="49">*</type:modifier></type><name pos:line="4182" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4184" pos:column="9">HRESULT</name></type> ( <name pos:line="4184" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4184" pos:column="37">*</type:modifier><name pos:line="4184" pos:column="38">EnumSetExceptions</name> )<parameter_list pos:line="4184" pos:column="57">( 
            <param><decl><type><name pos:line="4185" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4185" pos:column="28">*</type:modifier></type> <name pos:line="4185" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4186" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4186" pos:column="24">__RPC__in_opt</name> <name pos:line="4186" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4186" pos:column="53">*</type:modifier></type><name pos:line="4186" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4187" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4187" pos:column="30">__RPC__in_opt</name> <name pos:line="4187" pos:column="44">LPCOLESTR</name></type> <name pos:line="4187" pos:column="54">pszProgram</name></decl></param>,
            <comment type="block" pos:line="4188" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4188" pos:column="24">__RPC__in</name> <name pos:line="4188" pos:column="34">REFGUID</name></type> <name pos:line="4188" pos:column="42">guidType</name></decl></param>,
            <comment type="block" pos:line="4189" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4189" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4189" pos:column="46">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="4189" pos:column="71">*</type:modifier><type:modifier pos:line="4189" pos:column="72">*</type:modifier></type><name pos:line="4189" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4191" pos:column="9">HRESULT</name></type> ( <name pos:line="4191" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4191" pos:column="37">*</type:modifier><name pos:line="4191" pos:column="38">RemoveSetException</name> )<parameter_list pos:line="4191" pos:column="58">( 
            <param><decl><type><name pos:line="4192" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4192" pos:column="28">*</type:modifier></type> <name pos:line="4192" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4193" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4193" pos:column="24">__RPC__in</name> <name pos:line="4193" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4193" pos:column="49">*</type:modifier></type><name pos:line="4193" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4195" pos:column="9">HRESULT</name></type> ( <name pos:line="4195" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4195" pos:column="37">*</type:modifier><name pos:line="4195" pos:column="38">RemoveAllSetExceptions</name> )<parameter_list pos:line="4195" pos:column="62">( 
            <param><decl><type><name pos:line="4196" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4196" pos:column="28">*</type:modifier></type> <name pos:line="4196" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4197" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4197" pos:column="24">__RPC__in</name> <name pos:line="4197" pos:column="34">REFGUID</name></type> <name pos:line="4197" pos:column="42">guidType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4199" pos:column="9">HRESULT</name></type> ( <name pos:line="4199" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4199" pos:column="37">*</type:modifier><name pos:line="4199" pos:column="38">EnumDefaultExceptions</name> )<parameter_list pos:line="4199" pos:column="61">( 
            <param><decl><type><name pos:line="4200" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4200" pos:column="28">*</type:modifier></type> <name pos:line="4200" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4201" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4201" pos:column="30">__RPC__in_opt</name> <name pos:line="4201" pos:column="44">EXCEPTION_INFO</name> <type:modifier pos:line="4201" pos:column="59">*</type:modifier></type><name pos:line="4201" pos:column="60">pParentException</name></decl></param>,
            <comment type="block" pos:line="4202" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4202" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4202" pos:column="46">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="4202" pos:column="71">*</type:modifier><type:modifier pos:line="4202" pos:column="72">*</type:modifier></type><name pos:line="4202" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4204" pos:column="9">HRESULT</name></type> ( <name pos:line="4204" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4204" pos:column="37">*</type:modifier><name pos:line="4204" pos:column="38">GetENCUpdate</name> )<parameter_list pos:line="4204" pos:column="52">( 
            <param><decl><type><name pos:line="4205" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4205" pos:column="28">*</type:modifier></type> <name pos:line="4205" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4206" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4206" pos:column="24">__RPC__in_opt</name> <name pos:line="4206" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4206" pos:column="53">*</type:modifier></type><name pos:line="4206" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4207" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4207" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4207" pos:column="46">IDebugENCUpdate</name> <type:modifier pos:line="4207" pos:column="62">*</type:modifier><type:modifier pos:line="4207" pos:column="63">*</type:modifier></type><name pos:line="4207" pos:column="64">ppUpdate</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4209" pos:column="9">HRESULT</name></type> ( <name pos:line="4209" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4209" pos:column="37">*</type:modifier><name pos:line="4209" pos:column="38">SetLocale</name> )<parameter_list pos:line="4209" pos:column="49">( 
            <param><decl><type><name pos:line="4210" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4210" pos:column="28">*</type:modifier></type> <name pos:line="4210" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4211" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4211" pos:column="24">WORD</name></type> <name pos:line="4211" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4213" pos:column="9">HRESULT</name></type> ( <name pos:line="4213" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4213" pos:column="37">*</type:modifier><name pos:line="4213" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="4213" pos:column="55">( 
            <param><decl><type><name pos:line="4214" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4214" pos:column="28">*</type:modifier></type> <name pos:line="4214" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4215" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4215" pos:column="30">__RPC__in_opt</name> <name pos:line="4215" pos:column="44">LPCOLESTR</name></type> <name pos:line="4215" pos:column="54">pszRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4217" pos:column="9">HRESULT</name></type> ( <name pos:line="4217" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4217" pos:column="37">*</type:modifier><name pos:line="4217" pos:column="38">IsAlive</name> )<parameter_list pos:line="4217" pos:column="47">( 
            <param><decl><type><name pos:line="4218" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4218" pos:column="28">*</type:modifier></type> <name pos:line="4218" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4220" pos:column="9">HRESULT</name></type> ( <name pos:line="4220" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4220" pos:column="37">*</type:modifier><name pos:line="4220" pos:column="38">ClearAllSessionThreadStackFrames</name> )<parameter_list pos:line="4220" pos:column="72">( 
            <param><decl><type><name pos:line="4221" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4221" pos:column="28">*</type:modifier></type> <name pos:line="4221" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4223" pos:column="9">HRESULT</name> <argument_list pos:line="4223" pos:column="17">( <argument pos:line="4223" pos:column="19">STDMETHODCALLTYPE *__deprecated_GetSessionId</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4223" pos:column="65">(</op:operator> 
            <name pos:line="4224" pos:column="13">IDebugSession2</name> <op:operator pos:line="4224" pos:column="28">*</op:operator> <name pos:line="4224" pos:column="30">This</name><op:operator pos:line="4224" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4225" pos:column="13">/* [in] */</comment> <name pos:line="4225" pos:column="24">__RPC__in_opt</name> <name pos:line="4225" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="4225" pos:column="59">*</op:operator><name pos:line="4225" pos:column="60">pCallback</name><op:operator pos:line="4225" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4226" pos:column="13">/* [full][size_is][in] */</comment> <macro><name pos:line="4226" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="4226" pos:column="64">(<argument pos:line="4226" pos:column="65">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="4226" pos:column="86">GUID</name> <op:operator pos:line="4226" pos:column="91">*</op:operator><name pos:line="4226" pos:column="92">rgguidSpecificEngines</name><op:operator pos:line="4226" pos:column="113">,</op:operator>
            <comment type="block" pos:line="4227" pos:column="13">/* [in] */</comment> <name pos:line="4227" pos:column="24">DWORD</name> <name pos:line="4227" pos:column="30">celtSpecificEngines</name><op:operator pos:line="4227" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4228" pos:column="13">/* [full][in] */</comment> <name pos:line="4228" pos:column="30">__RPC__in_opt</name> <name pos:line="4228" pos:column="44">LPCOLESTR</name> <name pos:line="4228" pos:column="54">pszStartPageUrl</name><op:operator pos:line="4228" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4229" pos:column="13">/* [out] */</comment> <name pos:line="4229" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4229" pos:column="46">BSTR</name> <op:operator pos:line="4229" pos:column="51">*</op:operator><name pos:line="4229" pos:column="52">pbstrSessionId</name><op:operator pos:line="4229" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4231" pos:column="9">HRESULT</name></type> ( <name pos:line="4231" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4231" pos:column="37">*</type:modifier><name pos:line="4231" pos:column="38">SetEngineMetric</name> )<parameter_list pos:line="4231" pos:column="55">( 
            <param><decl><type><name pos:line="4232" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4232" pos:column="28">*</type:modifier></type> <name pos:line="4232" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4233" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4233" pos:column="24">__RPC__in</name> <name pos:line="4233" pos:column="34">REFGUID</name></type> <name pos:line="4233" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="4234" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4234" pos:column="24">__RPC__in</name> <name pos:line="4234" pos:column="34">LPCOLESTR</name></type> <name pos:line="4234" pos:column="44">pszMetric</name></decl></param>,
            <comment type="block" pos:line="4235" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4235" pos:column="24">VARIANT</name></type> <name pos:line="4235" pos:column="32">varValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4237" pos:column="9">HRESULT</name></type> ( <name pos:line="4237" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4237" pos:column="37">*</type:modifier><name pos:line="4237" pos:column="38">SetStoppingModel</name> )<parameter_list pos:line="4237" pos:column="56">( 
            <param><decl><type><name pos:line="4238" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4238" pos:column="28">*</type:modifier></type> <name pos:line="4238" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4239" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4239" pos:column="24">STOPPING_MODEL</name></type> <name pos:line="4239" pos:column="39">dwStoppingModel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4241" pos:column="9">HRESULT</name></type> ( <name pos:line="4241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4241" pos:column="37">*</type:modifier><name pos:line="4241" pos:column="38">GetStoppingModel</name> )<parameter_list pos:line="4241" pos:column="56">( 
            <param><decl><type><name pos:line="4242" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4242" pos:column="28">*</type:modifier></type> <name pos:line="4242" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4243" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4243" pos:column="25">__RPC__out</name> <name pos:line="4243" pos:column="36">STOPPING_MODEL</name> <type:modifier pos:line="4243" pos:column="51">*</type:modifier></type><name pos:line="4243" pos:column="52">pdwStoppingModel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4245" pos:column="9">HRESULT</name></type> ( <name pos:line="4245" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4245" pos:column="37">*</type:modifier><name pos:line="4245" pos:column="38">__deprecated_RegisterSessionWithServer</name> )<parameter_list pos:line="4245" pos:column="78">( 
            <param><decl><type><name pos:line="4246" pos:column="13">IDebugSession2</name> <type:modifier pos:line="4246" pos:column="28">*</type:modifier></type> <name pos:line="4246" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4247" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4247" pos:column="24">__RPC__in</name> <name pos:line="4247" pos:column="34">LPCOLESTR</name></type> <name pos:line="4247" pos:column="44">pwszServerName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4249" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4250" pos:column="7">IDebugSession2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4252" pos:column="5">interface</name></type> <name pos:line="4252" pos:column="15">IDebugSession2</name>
    <argument_list pos:line="4253" pos:column="5">{
        <argument><expr><name pos:line="4254" pos:column="9">CONST_VTBL</name> struct <name pos:line="4254" pos:column="27">IDebugSession2Vtbl</name> <op:operator pos:line="4254" pos:column="46">*</op:operator><name pos:line="4254" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4259" pos:column="1">#<cpp:directive pos:line="4259" pos:column="2">ifdef</cpp:directive> <name pos:line="4259" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4262" pos:column="1">#<cpp:directive pos:line="4262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4262" pos:column="9">IDebugSession2_QueryInterface</name><parameter_list pos:line="4262" pos:column="38">(<param><type><name pos:line="4262" pos:column="39">This</name></type></param>,<param><type><name pos:line="4262" pos:column="44">riid</name></type></param>,<param><type><name pos:line="4262" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4263" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4265" pos:column="1">#<cpp:directive pos:line="4265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4265" pos:column="9">IDebugSession2_AddRef</name><parameter_list pos:line="4265" pos:column="30">(<param><type><name pos:line="4265" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4266" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4268" pos:column="1">#<cpp:directive pos:line="4268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4268" pos:column="9">IDebugSession2_Release</name><parameter_list pos:line="4268" pos:column="31">(<param><type><name pos:line="4268" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4269" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4272" pos:column="1">#<cpp:directive pos:line="4272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4272" pos:column="9">IDebugSession2_GetName</name><parameter_list pos:line="4272" pos:column="31">(<param><type><name pos:line="4272" pos:column="32">This</name></type></param>,<param><type><name pos:line="4272" pos:column="37">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4273" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4275" pos:column="1">#<cpp:directive pos:line="4275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4275" pos:column="9">IDebugSession2_SetName</name><parameter_list pos:line="4275" pos:column="31">(<param><type><name pos:line="4275" pos:column="32">This</name></type></param>,<param><type><name pos:line="4275" pos:column="37">pszName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4276" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetName(This,pszName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4278" pos:column="1">#<cpp:directive pos:line="4278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4278" pos:column="9">IDebugSession2_EnumProcesses</name><parameter_list pos:line="4278" pos:column="37">(<param><type><name pos:line="4278" pos:column="38">This</name></type></param>,<param><type><name pos:line="4278" pos:column="43">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4279" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumProcesses(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4281" pos:column="1">#<cpp:directive pos:line="4281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4281" pos:column="9">IDebugSession2_Launch</name><parameter_list pos:line="4281" pos:column="30">(<param><type><name pos:line="4281" pos:column="31">This</name></type></param>,<param><type><name pos:line="4281" pos:column="36">pszMachine</name></type></param>,<param><type><name pos:line="4281" pos:column="47">pPort</name></type></param>,<param><type><name pos:line="4281" pos:column="53">pszExe</name></type></param>,<param><type><name pos:line="4281" pos:column="60">pszArgs</name></type></param>,<param><type><name pos:line="4281" pos:column="68">pszDir</name></type></param>,<param><type><name pos:line="4281" pos:column="75">bstrEnv</name></type></param>,<param><type><name pos:line="4281" pos:column="83">pszOptions</name></type></param>,<param><type><name pos:line="4281" pos:column="94">dwLaunchFlags</name></type></param>,<param><type><name pos:line="4281" pos:column="108">hStdInput</name></type></param>,<param><type><name pos:line="4281" pos:column="118">hStdOutput</name></type></param>,<param><type><name pos:line="4281" pos:column="129">hStdError</name></type></param>,<param><type><name pos:line="4281" pos:column="139">guidLaunchingEngine</name></type></param>,<param><type><name pos:line="4281" pos:column="159">pCallback</name></type></param>,<param><type><name pos:line="4281" pos:column="169">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="4281" pos:column="191">celtSpecificEngines</name></type></param>,<param><type><name pos:line="4281" pos:column="211">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4282" pos:column="5">( (This)-&gt;lpVtbl -&gt; Launch(This,pszMachine,pPort,pszExe,pszArgs,pszDir,bstrEnv,pszOptions,dwLaunchFlags,hStdInput,hStdOutput,hStdError,guidLaunchingEngine,pCallback,rgguidSpecificEngines,celtSpecificEngines,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="4284" pos:column="1">#<cpp:directive pos:line="4284" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4284" pos:column="9">IDebugSession2_RegisterJITServer</name><parameter_list pos:line="4284" pos:column="41">(<param><type><name pos:line="4284" pos:column="42">This</name></type></param>,<param><type><name pos:line="4284" pos:column="47">clsidJITServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4285" pos:column="5">( (This)-&gt;lpVtbl -&gt; RegisterJITServer(This,clsidJITServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4287" pos:column="1">#<cpp:directive pos:line="4287" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4287" pos:column="9">IDebugSession2_Terminate</name><parameter_list pos:line="4287" pos:column="33">(<param><type><name pos:line="4287" pos:column="34">This</name></type></param>,<param><type><name pos:line="4287" pos:column="39">fForce</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4288" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This,fForce) )</cpp:value></cpp:define> 

<cpp:define pos:line="4290" pos:column="1">#<cpp:directive pos:line="4290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4290" pos:column="9">IDebugSession2_Detach</name><parameter_list pos:line="4290" pos:column="30">(<param><type><name pos:line="4290" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4291" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4293" pos:column="1">#<cpp:directive pos:line="4293" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4293" pos:column="9">IDebugSession2_CauseBreak</name><parameter_list pos:line="4293" pos:column="34">(<param><type><name pos:line="4293" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4294" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4296" pos:column="1">#<cpp:directive pos:line="4296" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4296" pos:column="9">IDebugSession2_CreatePendingBreakpoint</name><parameter_list pos:line="4296" pos:column="47">(<param><type><name pos:line="4296" pos:column="48">This</name></type></param>,<param><type><name pos:line="4296" pos:column="53">pBPRequest</name></type></param>,<param><type><name pos:line="4296" pos:column="64">ppPendingBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4297" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreatePendingBreakpoint(This,pBPRequest,ppPendingBP) )</cpp:value></cpp:define> 

<cpp:define pos:line="4299" pos:column="1">#<cpp:directive pos:line="4299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4299" pos:column="9">IDebugSession2_EnumPendingBreakpoints</name><parameter_list pos:line="4299" pos:column="46">(<param><type><name pos:line="4299" pos:column="47">This</name></type></param>,<param><type><name pos:line="4299" pos:column="52">pProgram</name></type></param>,<param><type><name pos:line="4299" pos:column="61">pszProgram</name></type></param>,<param><type><name pos:line="4299" pos:column="72">ppEnumBPs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4300" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPendingBreakpoints(This,pProgram,pszProgram,ppEnumBPs) )</cpp:value></cpp:define> 

<cpp:define pos:line="4302" pos:column="1">#<cpp:directive pos:line="4302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4302" pos:column="9">IDebugSession2_EnumMachines__deprecated</name><parameter_list pos:line="4302" pos:column="48">(<param><type><name pos:line="4302" pos:column="49">This</name></type></param>,<param><type><name pos:line="4302" pos:column="54">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4303" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumMachines__deprecated(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4305" pos:column="1">#<cpp:directive pos:line="4305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4305" pos:column="9">IDebugSession2_ConnectToServer</name><parameter_list pos:line="4305" pos:column="39">(<param><type><name pos:line="4305" pos:column="40">This</name></type></param>,<param><type><name pos:line="4305" pos:column="45">szServerName</name></type></param>,<param><type><name pos:line="4305" pos:column="58">ppServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4306" pos:column="5">( (This)-&gt;lpVtbl -&gt; ConnectToServer(This,szServerName,ppServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4308" pos:column="1">#<cpp:directive pos:line="4308" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4308" pos:column="9">IDebugSession2_DisconnectServer</name><parameter_list pos:line="4308" pos:column="40">(<param><type><name pos:line="4308" pos:column="41">This</name></type></param>,<param><type><name pos:line="4308" pos:column="46">pServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4309" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisconnectServer(This,pServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4311" pos:column="1">#<cpp:directive pos:line="4311" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4311" pos:column="9">IDebugSession2_ShutdownSession</name><parameter_list pos:line="4311" pos:column="39">(<param><type><name pos:line="4311" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4312" pos:column="5">( (This)-&gt;lpVtbl -&gt; ShutdownSession(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4314" pos:column="1">#<cpp:directive pos:line="4314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4314" pos:column="9">IDebugSession2_EnumCodeContexts</name><parameter_list pos:line="4314" pos:column="40">(<param><type><name pos:line="4314" pos:column="41">This</name></type></param>,<param><type><name pos:line="4314" pos:column="46">pProgram</name></type></param>,<param><type><name pos:line="4314" pos:column="55">pDocPos</name></type></param>,<param><type><name pos:line="4314" pos:column="63">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4315" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodeContexts(This,pProgram,pDocPos,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4317" pos:column="1">#<cpp:directive pos:line="4317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4317" pos:column="9">IDebugSession2_SetException</name><parameter_list pos:line="4317" pos:column="36">(<param><type><name pos:line="4317" pos:column="37">This</name></type></param>,<param><type><name pos:line="4317" pos:column="42">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4318" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="4320" pos:column="1">#<cpp:directive pos:line="4320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4320" pos:column="9">IDebugSession2_EnumSetExceptions</name><parameter_list pos:line="4320" pos:column="41">(<param><type><name pos:line="4320" pos:column="42">This</name></type></param>,<param><type><name pos:line="4320" pos:column="47">pProgram</name></type></param>,<param><type><name pos:line="4320" pos:column="56">pszProgram</name></type></param>,<param><type><name pos:line="4320" pos:column="67">guidType</name></type></param>,<param><type><name pos:line="4320" pos:column="76">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4321" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumSetExceptions(This,pProgram,pszProgram,guidType,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4323" pos:column="1">#<cpp:directive pos:line="4323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4323" pos:column="9">IDebugSession2_RemoveSetException</name><parameter_list pos:line="4323" pos:column="42">(<param><type><name pos:line="4323" pos:column="43">This</name></type></param>,<param><type><name pos:line="4323" pos:column="48">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4324" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveSetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="4326" pos:column="1">#<cpp:directive pos:line="4326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4326" pos:column="9">IDebugSession2_RemoveAllSetExceptions</name><parameter_list pos:line="4326" pos:column="46">(<param><type><name pos:line="4326" pos:column="47">This</name></type></param>,<param><type><name pos:line="4326" pos:column="52">guidType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4327" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveAllSetExceptions(This,guidType) )</cpp:value></cpp:define> 

<cpp:define pos:line="4329" pos:column="1">#<cpp:directive pos:line="4329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4329" pos:column="9">IDebugSession2_EnumDefaultExceptions</name><parameter_list pos:line="4329" pos:column="45">(<param><type><name pos:line="4329" pos:column="46">This</name></type></param>,<param><type><name pos:line="4329" pos:column="51">pParentException</name></type></param>,<param><type><name pos:line="4329" pos:column="68">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4330" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumDefaultExceptions(This,pParentException,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4332" pos:column="1">#<cpp:directive pos:line="4332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4332" pos:column="9">IDebugSession2_GetENCUpdate</name><parameter_list pos:line="4332" pos:column="36">(<param><type><name pos:line="4332" pos:column="37">This</name></type></param>,<param><type><name pos:line="4332" pos:column="42">pProgram</name></type></param>,<param><type><name pos:line="4332" pos:column="51">ppUpdate</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4333" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCUpdate(This,pProgram,ppUpdate) )</cpp:value></cpp:define> 

<cpp:define pos:line="4335" pos:column="1">#<cpp:directive pos:line="4335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4335" pos:column="9">IDebugSession2_SetLocale</name><parameter_list pos:line="4335" pos:column="33">(<param><type><name pos:line="4335" pos:column="34">This</name></type></param>,<param><type><name pos:line="4335" pos:column="39">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4336" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="4338" pos:column="1">#<cpp:directive pos:line="4338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4338" pos:column="9">IDebugSession2_SetRegistryRoot</name><parameter_list pos:line="4338" pos:column="39">(<param><type><name pos:line="4338" pos:column="40">This</name></type></param>,<param><type><name pos:line="4338" pos:column="45">pszRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4339" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,pszRegistryRoot) )</cpp:value></cpp:define> 

<cpp:define pos:line="4341" pos:column="1">#<cpp:directive pos:line="4341" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4341" pos:column="9">IDebugSession2_IsAlive</name><parameter_list pos:line="4341" pos:column="31">(<param><type><name pos:line="4341" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4342" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsAlive(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4344" pos:column="1">#<cpp:directive pos:line="4344" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4344" pos:column="9">IDebugSession2_ClearAllSessionThreadStackFrames</name><parameter_list pos:line="4344" pos:column="56">(<param><type><name pos:line="4344" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4345" pos:column="5">( (This)-&gt;lpVtbl -&gt; ClearAllSessionThreadStackFrames(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4347" pos:column="1">#<cpp:directive pos:line="4347" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4347" pos:column="9">IDebugSession2___deprecated_GetSessionId</name><parameter_list pos:line="4347" pos:column="49">(<param><type><name pos:line="4347" pos:column="50">This</name></type></param>,<param><type><name pos:line="4347" pos:column="55">pCallback</name></type></param>,<param><type><name pos:line="4347" pos:column="65">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="4347" pos:column="87">celtSpecificEngines</name></type></param>,<param><type><name pos:line="4347" pos:column="107">pszStartPageUrl</name></type></param>,<param><type><name pos:line="4347" pos:column="123">pbstrSessionId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4348" pos:column="5">( (This)-&gt;lpVtbl -&gt; __deprecated_GetSessionId(This,pCallback,rgguidSpecificEngines,celtSpecificEngines,pszStartPageUrl,pbstrSessionId) )</cpp:value></cpp:define> 

<cpp:define pos:line="4350" pos:column="1">#<cpp:directive pos:line="4350" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4350" pos:column="9">IDebugSession2_SetEngineMetric</name><parameter_list pos:line="4350" pos:column="39">(<param><type><name pos:line="4350" pos:column="40">This</name></type></param>,<param><type><name pos:line="4350" pos:column="45">guidEngine</name></type></param>,<param><type><name pos:line="4350" pos:column="56">pszMetric</name></type></param>,<param><type><name pos:line="4350" pos:column="66">varValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4351" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetEngineMetric(This,guidEngine,pszMetric,varValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="4353" pos:column="1">#<cpp:directive pos:line="4353" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4353" pos:column="9">IDebugSession2_SetStoppingModel</name><parameter_list pos:line="4353" pos:column="40">(<param><type><name pos:line="4353" pos:column="41">This</name></type></param>,<param><type><name pos:line="4353" pos:column="46">dwStoppingModel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4354" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetStoppingModel(This,dwStoppingModel) )</cpp:value></cpp:define> 

<cpp:define pos:line="4356" pos:column="1">#<cpp:directive pos:line="4356" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4356" pos:column="9">IDebugSession2_GetStoppingModel</name><parameter_list pos:line="4356" pos:column="40">(<param><type><name pos:line="4356" pos:column="41">This</name></type></param>,<param><type><name pos:line="4356" pos:column="46">pdwStoppingModel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4357" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStoppingModel(This,pdwStoppingModel) )</cpp:value></cpp:define> 

<cpp:define pos:line="4359" pos:column="1">#<cpp:directive pos:line="4359" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4359" pos:column="9">IDebugSession2___deprecated_RegisterSessionWithServer</name><parameter_list pos:line="4359" pos:column="62">(<param><type><name pos:line="4359" pos:column="63">This</name></type></param>,<param><type><name pos:line="4359" pos:column="68">pwszServerName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4360" pos:column="5">( (This)-&gt;lpVtbl -&gt; __deprecated_RegisterSessionWithServer(This,pwszServerName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4362" pos:column="1">#<cpp:directive pos:line="4362" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4362" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4365" pos:column="1">#<cpp:directive pos:line="4365" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4365" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4370" pos:column="1">#<cpp:directive pos:line="4370" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4370" pos:column="9">/* __IDebugSession2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="4373" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0016 */</comment>
<comment type="block" pos:line="4374" pos:column="1">/* [local] */</comment> 

<typedef pos:line="4376" pos:column="1">typedef <type><struct pos:line="4376" pos:column="9">struct <name pos:line="4376" pos:column="16">_JMC_CODE_SPEC</name>
    <block pos:line="4377" pos:column="5">{<public type="default" pos:line="4377" pos:column="6">
    <decl_stmt><decl><type><name pos:line="4378" pos:column="5">BOOL</name></type> <name pos:line="4378" pos:column="10">fIsUserCode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="4379" pos:column="5">BSTR</name></type> <name pos:line="4379" pos:column="10">bstrModuleName</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="4380" pos:column="9">JMC_CODE_SPEC</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="4384" pos:column="1">extern</specifier> <name pos:line="4384" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4384" pos:column="22">__MIDL_itf_msdbg_0000_0016_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="4385" pos:column="1">extern</specifier> <name pos:line="4385" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4385" pos:column="22">__MIDL_itf_msdbg_0000_0016_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="4387" pos:column="1">#<cpp:directive pos:line="4387" pos:column="2">ifndef</cpp:directive> <name pos:line="4387" pos:column="9">__IDebugSession3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4388" pos:column="1">#<cpp:directive pos:line="4388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4388" pos:column="9">__IDebugSession3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4390" pos:column="1">/* interface IDebugSession3 */</comment>
<comment type="block" pos:line="4391" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="4393" pos:column="1">typedef <comment type="block" pos:line="4393" pos:column="9">/* [public][public] */</comment> 
<type><enum pos:line="4394" pos:column="1">enum <name pos:line="4394" pos:column="6">__MIDL_IDebugSession3_0001</name>
    <block pos:line="4395" pos:column="5">{	<decl><name pos:line="4395" pos:column="9">CONNECT_LOCAL</name>	<init pos:line="4395" pos:column="25">= <expr><lit:literal type="number" pos:line="4395" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="4395" pos:column="28">,</op:operator>
	<decl><name pos:line="4396" pos:column="9">CONNECT_ATTACH</name>	<init pos:line="4396" pos:column="25">= <expr><op:operator pos:line="4396" pos:column="27">(</op:operator> <name pos:line="4396" pos:column="29">CONNECT_LOCAL</name> <op:operator pos:line="4396" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="4396" pos:column="45">1</lit:literal> <op:operator pos:line="4396" pos:column="47">)</op:operator></expr></init></decl> <op:operator pos:line="4396" pos:column="49">,</op:operator>
	<decl><name pos:line="4397" pos:column="9">CONNECT_LAUNCH</name>	<init pos:line="4397" pos:column="25">= <expr><op:operator pos:line="4397" pos:column="27">(</op:operator> <name pos:line="4397" pos:column="29">CONNECT_ATTACH</name> <op:operator pos:line="4397" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="4397" pos:column="46">1</lit:literal> <op:operator pos:line="4397" pos:column="48">)</op:operator></expr></init></decl> <op:operator pos:line="4397" pos:column="50">,</op:operator>
	<decl><name pos:line="4398" pos:column="9">CONNECT_WEB_AUTO_ATTACH</name>	<init pos:line="4398" pos:column="33">= <expr><op:operator pos:line="4398" pos:column="35">(</op:operator> <name pos:line="4398" pos:column="37">CONNECT_LAUNCH</name> <op:operator pos:line="4398" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="4398" pos:column="54">1</lit:literal> <op:operator pos:line="4398" pos:column="56">)</op:operator></expr></init></decl> <op:operator pos:line="4398" pos:column="58">,</op:operator>
	<decl><name pos:line="4399" pos:column="9">CONNECT_SQL_AUTO_ATTACH</name>	<init pos:line="4399" pos:column="33">= <expr><op:operator pos:line="4399" pos:column="35">(</op:operator> <name pos:line="4399" pos:column="37">CONNECT_WEB_AUTO_ATTACH</name> <op:operator pos:line="4399" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="4399" pos:column="63">1</lit:literal> <op:operator pos:line="4399" pos:column="65">)</op:operator></expr></init></decl> <op:operator pos:line="4399" pos:column="67">,</op:operator>
	<decl><name pos:line="4400" pos:column="9">CONNECT_CAUSALITY</name>	<init pos:line="4400" pos:column="33">= <expr><op:operator pos:line="4400" pos:column="35">(</op:operator> <name pos:line="4400" pos:column="37">CONNECT_SQL_AUTO_ATTACH</name> <op:operator pos:line="4400" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="4400" pos:column="63">1</lit:literal> <op:operator pos:line="4400" pos:column="65">)</op:operator></expr></init></decl> <op:operator pos:line="4400" pos:column="67">,</op:operator>
	<decl><name pos:line="4401" pos:column="9">CONNECT_DIAGNOSE_WEB_ERROR</name>	<init pos:line="4401" pos:column="41">= <expr><op:operator pos:line="4401" pos:column="43">(</op:operator> <name pos:line="4401" pos:column="45">CONNECT_CAUSALITY</name> <op:operator pos:line="4401" pos:column="63">+</op:operator> <lit:literal type="number" pos:line="4401" pos:column="65">1</lit:literal> <op:operator pos:line="4401" pos:column="67">)</op:operator></expr></init></decl> 
    }</block></enum></type> 	<name pos:line="4402" pos:column="9">CONNECT_REASON</name>;</typedef>


<enum pos:line="4405" pos:column="1">enum <name pos:line="4405" pos:column="6">enum_SESSION_FEATURES</name>
    <block pos:line="4406" pos:column="5">{	<decl><name pos:line="4406" pos:column="9">FEATURE_REMOTE_DEBUGGING</name>	<init pos:line="4406" pos:column="41">= <expr><lit:literal type="number" pos:line="4406" pos:column="43">0x1</lit:literal></expr></init></decl><op:operator pos:line="4406" pos:column="46">,</op:operator>
	<decl><name pos:line="4407" pos:column="9">FEATURE_CAUSALITY</name>	<init pos:line="4407" pos:column="33">= <expr><lit:literal type="number" pos:line="4407" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="4409" pos:column="1">typedef <type><name pos:line="4409" pos:column="9">DWORD</name></type> <name pos:line="4409" pos:column="15">SESSION_FEATURES</name>;</typedef>

<typedef pos:line="4411" pos:column="1">typedef <type><name pos:line="4411" pos:column="9">DWORD</name></type> <name pos:line="4411" pos:column="15">LOAD_SYMBOLS_FLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="4414" pos:column="1">EXTERN_C</name> <specifier pos:line="4414" pos:column="10">const</specifier> <name pos:line="4414" pos:column="16">IID</name></type> <name pos:line="4414" pos:column="20">IID_IDebugSession3</name></decl>;</decl_stmt>

<cpp:if pos:line="4416" pos:column="1">#<cpp:directive pos:line="4416" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4416" pos:column="5">defined</name><argument_list pos:line="4416" pos:column="12">(<argument><expr><name pos:line="4416" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4416" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4416" pos:column="29">!</op:operator><call><name pos:line="4416" pos:column="30">defined</name><argument_list pos:line="4416" pos:column="37">(<argument><expr><name pos:line="4416" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4418" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4418" pos:column="19">(<argument pos:line="4418" pos:column="20">"BBF74DB9-39D5-406e-8BC3-3BA9DD34C02E"</argument>)</argument_list></macro>
    <label><name pos:line="4419" pos:column="5">IDebugSession3</name> :</label> <expr_stmt><expr pos:line="4419" pos:column="22">public <name pos:line="4419" pos:column="29">IDebugSession2</name>
    <block pos:line="4420" pos:column="5">{
    <expr pos:line="4421" pos:column="5">public<op:operator pos:line="4421" pos:column="11">:</op:operator>
        virtual <name pos:line="4422" pos:column="17">HRESULT</name> <name pos:line="4422" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4422" pos:column="43">SetSymbolPath</name><argument_list pos:line="4422" pos:column="56">( 
            <comment type="block" pos:line="4423" pos:column="13">/* [full][in] */</comment> <argument pos:line="4423" pos:column="30">__RPC__in_opt LPCOLESTR szSymbolSearchPath</argument>,
            <comment type="block" pos:line="4424" pos:column="13">/* [full][in] */</comment> <argument pos:line="4424" pos:column="30">__RPC__in_opt LPCOLESTR szSymbolCachePath</argument>,
            <comment type="block" pos:line="4425" pos:column="13">/* [in] */</comment> <argument pos:line="4425" pos:column="24">LOAD_SYMBOLS_FLAGS Flags</argument>)</argument_list></macro> <op:operator pos:line="4425" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="4425" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="4427" pos:column="9">virtual <name pos:line="4427" pos:column="17">HRESULT</name> <name pos:line="4427" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4427" pos:column="43">LoadSymbols</name><argument_list pos:line="4427" pos:column="54">( <argument><expr><name pos:line="4427" pos:column="56">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4427" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4427" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="4429" pos:column="9">virtual <name pos:line="4429" pos:column="17">HRESULT</name> <name pos:line="4429" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4429" pos:column="43">RegisterCallback</name><argument_list pos:line="4429" pos:column="59">( 
            <comment type="block" pos:line="4430" pos:column="13">/* [in] */</comment> <argument pos:line="4430" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>)</argument_list></macro> <op:operator pos:line="4430" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="4430" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="4432" pos:column="9">virtual <name pos:line="4432" pos:column="17">HRESULT</name> <name pos:line="4432" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4432" pos:column="43">ConnectToServerEx</name><argument_list pos:line="4432" pos:column="60">( 
            <comment type="block" pos:line="4433" pos:column="13">/* [full][in] */</comment> <argument pos:line="4433" pos:column="30">__RPC__in_opt LPCOLESTR szServerName</argument>,
            <comment type="block" pos:line="4434" pos:column="13">/* [in] */</comment> <argument pos:line="4434" pos:column="24">CONNECT_REASON ConnectReason</argument>,
            <comment type="block" pos:line="4435" pos:column="13">/* [out] */</comment> <argument pos:line="4435" pos:column="25">__RPC__deref_out_opt IDebugCoreServer3 **ppServer</argument>)</argument_list></macro> <op:operator pos:line="4435" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="4435" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="4437" pos:column="9">virtual <name pos:line="4437" pos:column="17">HRESULT</name> <name pos:line="4437" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4437" pos:column="43">SetJustMyCodeState</name><argument_list pos:line="4437" pos:column="61">( 
            <comment type="block" pos:line="4438" pos:column="13">/* [in] */</comment> <argument pos:line="4438" pos:column="24">BOOL fUpdate</argument>,
            <comment type="block" pos:line="4439" pos:column="13">/* [in] */</comment> <argument pos:line="4439" pos:column="24">DWORD dwModules</argument>,
            <comment type="block" pos:line="4440" pos:column="13">/* [full][size_is][in] */</comment> <argument pos:line="4440" pos:column="39">__RPC__in_ecount_full_opt(dwModules) JMC_CODE_SPEC *rgJMCSpec</argument>)</argument_list></macro> <op:operator pos:line="4440" pos:column="102">=</op:operator> <lit:literal type="number" pos:line="4440" pos:column="104">0</lit:literal></expr>;
        
        <expr pos:line="4442" pos:column="9">virtual <name pos:line="4442" pos:column="17">HRESULT</name> <name pos:line="4442" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4442" pos:column="43">GetRecentServerNames</name><argument_list pos:line="4442" pos:column="63">( 
            <comment type="block" pos:line="4443" pos:column="13">/* [out] */</comment> <argument pos:line="4443" pos:column="25">__RPC__out BSTR_ARRAY *pServers</argument>)</argument_list></macro> <op:operator pos:line="4443" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4443" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="4445" pos:column="9">virtual <name pos:line="4445" pos:column="17">HRESULT</name> <name pos:line="4445" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4445" pos:column="43">SetMaxRecentServerNames</name><argument_list pos:line="4445" pos:column="66">( 
            <comment type="block" pos:line="4446" pos:column="13">/* [in] */</comment> <argument pos:line="4446" pos:column="24">DWORD dwNewMax</argument>)</argument_list></macro> <op:operator pos:line="4446" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="4446" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="4448" pos:column="9">virtual <name pos:line="4448" pos:column="17">HRESULT</name> <name pos:line="4448" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4448" pos:column="43">InitializeFeatures</name><argument_list pos:line="4448" pos:column="61">( 
            <comment type="block" pos:line="4449" pos:column="13">/* [in] */</comment> <argument pos:line="4449" pos:column="24">SESSION_FEATURES EnabledFeatures</argument>)</argument_list></macro> <op:operator pos:line="4449" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4449" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="4451" pos:column="9">virtual <name pos:line="4451" pos:column="17">HRESULT</name> <name pos:line="4451" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4451" pos:column="43">SetAllExceptions</name><argument_list pos:line="4451" pos:column="59">( 
            <comment type="block" pos:line="4452" pos:column="13">/* [in] */</comment> <argument pos:line="4452" pos:column="24">EXCEPTION_STATE dwState</argument>)</argument_list></macro> <op:operator pos:line="4452" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="4452" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="4454" pos:column="9">virtual <name pos:line="4454" pos:column="17">HRESULT</name> <name pos:line="4454" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4454" pos:column="43">GetStateForAllExceptions</name><argument_list pos:line="4454" pos:column="67">( 
            <comment type="block" pos:line="4455" pos:column="13">/* [out] */</comment> <argument pos:line="4455" pos:column="25">__RPC__out EXCEPTION_STATE *pdwState</argument>)</argument_list></macro> <op:operator pos:line="4455" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="4455" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="4457" pos:column="9">virtual <name pos:line="4457" pos:column="17">HRESULT</name> <name pos:line="4457" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4457" pos:column="43">AddExceptionCallback</name><argument_list pos:line="4457" pos:column="63">( 
            <comment type="block" pos:line="4458" pos:column="13">/* [in] */</comment> <argument pos:line="4458" pos:column="24">__RPC__in EXCEPTION_INFO *pException</argument>,
            <comment type="block" pos:line="4459" pos:column="13">/* [in] */</comment> <argument pos:line="4459" pos:column="24">__RPC__in_opt IDebugExceptionCallback2 *pCallback</argument>)</argument_list></macro> <op:operator pos:line="4459" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="4459" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="4461" pos:column="9">virtual <name pos:line="4461" pos:column="17">HRESULT</name> <name pos:line="4461" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4461" pos:column="43">RemoveExceptionCallback</name><argument_list pos:line="4461" pos:column="66">( 
            <comment type="block" pos:line="4462" pos:column="13">/* [in] */</comment> <argument pos:line="4462" pos:column="24">__RPC__in EXCEPTION_INFO *pException</argument>,
            <comment type="block" pos:line="4463" pos:column="13">/* [in] */</comment> <argument pos:line="4463" pos:column="24">__RPC__in_opt IDebugExceptionCallback2 *pCallback</argument>)</argument_list></macro> <op:operator pos:line="4463" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="4463" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="4465" pos:column="9">virtual <name pos:line="4465" pos:column="17">HRESULT</name> <name pos:line="4465" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4465" pos:column="43">BlockingShutdownSession</name><argument_list pos:line="4465" pos:column="66">( 
            <comment type="block" pos:line="4466" pos:column="13">/* [in] */</comment> <argument pos:line="4466" pos:column="24">DWORD dwTimeout</argument>)</argument_list></macro> <op:operator pos:line="4466" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="4466" pos:column="43">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4470" pos:column="1">#<cpp:directive pos:line="4470" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4470" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4472" pos:column="5">typedef <type><struct pos:line="4472" pos:column="13">struct <name pos:line="4472" pos:column="20">IDebugSession3Vtbl</name>
    <block pos:line="4473" pos:column="5">{<public type="default" pos:line="4473" pos:column="6">
        <function_decl><type><name pos:line="4474" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4476" pos:column="9">HRESULT</name></type> ( <name pos:line="4476" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4476" pos:column="37">*</type:modifier><name pos:line="4476" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4476" pos:column="54">( 
            <param><decl><type><name pos:line="4477" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4477" pos:column="28">*</type:modifier></type> <name pos:line="4477" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4478" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4478" pos:column="24">__RPC__in</name> <name pos:line="4478" pos:column="34">REFIID</name></type> <name pos:line="4478" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4479" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4480" pos:column="13">__RPC__deref_out</name>  <name pos:line="4480" pos:column="31">void</name> <type:modifier pos:line="4480" pos:column="36">*</type:modifier><type:modifier pos:line="4480" pos:column="37">*</type:modifier></type><name pos:line="4480" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4482" pos:column="9">ULONG</name></type> ( <name pos:line="4482" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4482" pos:column="35">*</type:modifier><name pos:line="4482" pos:column="36">AddRef</name> )<parameter_list pos:line="4482" pos:column="44">( 
            <param><decl><type><name pos:line="4483" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4483" pos:column="28">*</type:modifier></type> <name pos:line="4483" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4485" pos:column="9">ULONG</name></type> ( <name pos:line="4485" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4485" pos:column="35">*</type:modifier><name pos:line="4485" pos:column="36">Release</name> )<parameter_list pos:line="4485" pos:column="45">( 
            <param><decl><type><name pos:line="4486" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4486" pos:column="28">*</type:modifier></type> <name pos:line="4486" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4488" pos:column="9">HRESULT</name></type> ( <name pos:line="4488" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4488" pos:column="37">*</type:modifier><name pos:line="4488" pos:column="38">GetName</name> )<parameter_list pos:line="4488" pos:column="47">( 
            <param><decl><type><name pos:line="4489" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4489" pos:column="28">*</type:modifier></type> <name pos:line="4489" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4490" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4490" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4490" pos:column="46">BSTR</name> <type:modifier pos:line="4490" pos:column="51">*</type:modifier></type><name pos:line="4490" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4492" pos:column="9">HRESULT</name></type> ( <name pos:line="4492" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4492" pos:column="37">*</type:modifier><name pos:line="4492" pos:column="38">SetName</name> )<parameter_list pos:line="4492" pos:column="47">( 
            <param><decl><type><name pos:line="4493" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4493" pos:column="28">*</type:modifier></type> <name pos:line="4493" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4494" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4494" pos:column="24">__RPC__in</name> <name pos:line="4494" pos:column="34">LPCOLESTR</name></type> <name pos:line="4494" pos:column="44">pszName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4496" pos:column="9">HRESULT</name></type> ( <name pos:line="4496" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4496" pos:column="37">*</type:modifier><name pos:line="4496" pos:column="38">EnumProcesses</name> )<parameter_list pos:line="4496" pos:column="53">( 
            <param><decl><type><name pos:line="4497" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4497" pos:column="28">*</type:modifier></type> <name pos:line="4497" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4498" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4498" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4498" pos:column="46">IEnumDebugProcesses2</name> <type:modifier pos:line="4498" pos:column="67">*</type:modifier><type:modifier pos:line="4498" pos:column="68">*</type:modifier></type><name pos:line="4498" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4500" pos:column="9">HRESULT</name> <argument_list pos:line="4500" pos:column="17">( <argument pos:line="4500" pos:column="19">STDMETHODCALLTYPE *Launch</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4500" pos:column="46">(</op:operator> 
            <name pos:line="4501" pos:column="13">IDebugSession3</name> <op:operator pos:line="4501" pos:column="28">*</op:operator> <name pos:line="4501" pos:column="30">This</name><op:operator pos:line="4501" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4502" pos:column="13">/* [full][in] */</comment> <name pos:line="4502" pos:column="30">__RPC__in_opt</name> <name pos:line="4502" pos:column="44">LPCOLESTR</name> <name pos:line="4502" pos:column="54">pszMachine</name><op:operator pos:line="4502" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4503" pos:column="13">/* [in] */</comment> <name pos:line="4503" pos:column="24">__RPC__in_opt</name> <name pos:line="4503" pos:column="38">IDebugPort2</name> <op:operator pos:line="4503" pos:column="50">*</op:operator><name pos:line="4503" pos:column="51">pPort</name><op:operator pos:line="4503" pos:column="56">,</op:operator>
            <comment type="block" pos:line="4504" pos:column="13">/* [full][in] */</comment> <name pos:line="4504" pos:column="30">__RPC__in_opt</name> <name pos:line="4504" pos:column="44">LPCOLESTR</name> <name pos:line="4504" pos:column="54">pszExe</name><op:operator pos:line="4504" pos:column="60">,</op:operator>
            <comment type="block" pos:line="4505" pos:column="13">/* [full][in] */</comment> <name pos:line="4505" pos:column="30">__RPC__in_opt</name> <name pos:line="4505" pos:column="44">LPCOLESTR</name> <name pos:line="4505" pos:column="54">pszArgs</name><op:operator pos:line="4505" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4506" pos:column="13">/* [full][in] */</comment> <name pos:line="4506" pos:column="30">__RPC__in_opt</name> <name pos:line="4506" pos:column="44">LPCOLESTR</name> <name pos:line="4506" pos:column="54">pszDir</name><op:operator pos:line="4506" pos:column="60">,</op:operator>
            <comment type="block" pos:line="4507" pos:column="13">/* [full][in] */</comment> <name pos:line="4507" pos:column="30">__RPC__in_opt</name> <name pos:line="4507" pos:column="44">BSTR</name> <name pos:line="4507" pos:column="49">bstrEnv</name><op:operator pos:line="4507" pos:column="56">,</op:operator>
            <comment type="block" pos:line="4508" pos:column="13">/* [full][in] */</comment> <name pos:line="4508" pos:column="30">__RPC__in_opt</name> <name pos:line="4508" pos:column="44">LPCOLESTR</name> <name pos:line="4508" pos:column="54">pszOptions</name><op:operator pos:line="4508" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4509" pos:column="13">/* [in] */</comment> <name pos:line="4509" pos:column="24">LAUNCH_FLAGS</name> <name pos:line="4509" pos:column="37">dwLaunchFlags</name><op:operator pos:line="4509" pos:column="50">,</op:operator>
            <comment type="block" pos:line="4510" pos:column="13">/* [in] */</comment> <name pos:line="4510" pos:column="24">DWORD</name> <name pos:line="4510" pos:column="30">hStdInput</name><op:operator pos:line="4510" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4511" pos:column="13">/* [in] */</comment> <name pos:line="4511" pos:column="24">DWORD</name> <name pos:line="4511" pos:column="30">hStdOutput</name><op:operator pos:line="4511" pos:column="40">,</op:operator>
            <comment type="block" pos:line="4512" pos:column="13">/* [in] */</comment> <name pos:line="4512" pos:column="24">DWORD</name> <name pos:line="4512" pos:column="30">hStdError</name><op:operator pos:line="4512" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4513" pos:column="13">/* [in] */</comment> <name pos:line="4513" pos:column="24">__RPC__in</name> <name pos:line="4513" pos:column="34">REFGUID</name> <name pos:line="4513" pos:column="42">guidLaunchingEngine</name><op:operator pos:line="4513" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4514" pos:column="13">/* [in] */</comment> <name pos:line="4514" pos:column="24">__RPC__in_opt</name> <name pos:line="4514" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="4514" pos:column="59">*</op:operator><name pos:line="4514" pos:column="60">pCallback</name><op:operator pos:line="4514" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4515" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4515" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4515" pos:column="54">(<argument pos:line="4515" pos:column="55">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="4515" pos:column="76">GUID</name> <op:operator pos:line="4515" pos:column="81">*</op:operator><name pos:line="4515" pos:column="82">rgguidSpecificEngines</name><op:operator pos:line="4515" pos:column="103">,</op:operator>
            <comment type="block" pos:line="4516" pos:column="13">/* [in] */</comment> <name pos:line="4516" pos:column="24">DWORD</name> <name pos:line="4516" pos:column="30">celtSpecificEngines</name><op:operator pos:line="4516" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4517" pos:column="13">/* [out] */</comment> <name pos:line="4517" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4517" pos:column="46">IDebugProcess2</name> <op:operator pos:line="4517" pos:column="61">*</op:operator><op:operator pos:line="4517" pos:column="62">*</op:operator><name pos:line="4517" pos:column="63">ppProcess</name><op:operator pos:line="4517" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4519" pos:column="9">HRESULT</name></type> ( <name pos:line="4519" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4519" pos:column="37">*</type:modifier><name pos:line="4519" pos:column="38">RegisterJITServer</name> )<parameter_list pos:line="4519" pos:column="57">( 
            <param><decl><type><name pos:line="4520" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4520" pos:column="28">*</type:modifier></type> <name pos:line="4520" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4521" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4521" pos:column="24">__RPC__in</name> <name pos:line="4521" pos:column="34">REFCLSID</name></type> <name pos:line="4521" pos:column="43">clsidJITServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4523" pos:column="9">HRESULT</name></type> ( <name pos:line="4523" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4523" pos:column="37">*</type:modifier><name pos:line="4523" pos:column="38">Terminate</name> )<parameter_list pos:line="4523" pos:column="49">( 
            <param><decl><type><name pos:line="4524" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4524" pos:column="28">*</type:modifier></type> <name pos:line="4524" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4525" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4525" pos:column="24">BOOL</name></type> <name pos:line="4525" pos:column="29">fForce</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4527" pos:column="9">HRESULT</name></type> ( <name pos:line="4527" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4527" pos:column="37">*</type:modifier><name pos:line="4527" pos:column="38">Detach</name> )<parameter_list pos:line="4527" pos:column="46">( 
            <param><decl><type><name pos:line="4528" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4528" pos:column="28">*</type:modifier></type> <name pos:line="4528" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4530" pos:column="9">HRESULT</name></type> ( <name pos:line="4530" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4530" pos:column="37">*</type:modifier><name pos:line="4530" pos:column="38">CauseBreak</name> )<parameter_list pos:line="4530" pos:column="50">( 
            <param><decl><type><name pos:line="4531" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4531" pos:column="28">*</type:modifier></type> <name pos:line="4531" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4533" pos:column="9">HRESULT</name></type> ( <name pos:line="4533" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4533" pos:column="37">*</type:modifier><name pos:line="4533" pos:column="38">CreatePendingBreakpoint</name> )<parameter_list pos:line="4533" pos:column="63">( 
            <param><decl><type><name pos:line="4534" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4534" pos:column="28">*</type:modifier></type> <name pos:line="4534" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4535" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4535" pos:column="24">__RPC__in_opt</name> <name pos:line="4535" pos:column="38">IDebugBreakpointRequest2</name> <type:modifier pos:line="4535" pos:column="63">*</type:modifier></type><name pos:line="4535" pos:column="64">pBPRequest</name></decl></param>,
            <comment type="block" pos:line="4536" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4536" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4536" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="4536" pos:column="71">*</type:modifier><type:modifier pos:line="4536" pos:column="72">*</type:modifier></type><name pos:line="4536" pos:column="73">ppPendingBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4538" pos:column="9">HRESULT</name></type> ( <name pos:line="4538" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4538" pos:column="37">*</type:modifier><name pos:line="4538" pos:column="38">EnumPendingBreakpoints</name> )<parameter_list pos:line="4538" pos:column="62">( 
            <param><decl><type><name pos:line="4539" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4539" pos:column="28">*</type:modifier></type> <name pos:line="4539" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4540" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4540" pos:column="24">__RPC__in_opt</name> <name pos:line="4540" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4540" pos:column="53">*</type:modifier></type><name pos:line="4540" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4541" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4541" pos:column="30">__RPC__in_opt</name> <name pos:line="4541" pos:column="44">LPCOLESTR</name></type> <name pos:line="4541" pos:column="54">pszProgram</name></decl></param>,
            <comment type="block" pos:line="4542" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4542" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4542" pos:column="46">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="4542" pos:column="76">*</type:modifier><type:modifier pos:line="4542" pos:column="77">*</type:modifier></type><name pos:line="4542" pos:column="78">ppEnumBPs</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4544" pos:column="9">HRESULT</name></type> ( <name pos:line="4544" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4544" pos:column="37">*</type:modifier><name pos:line="4544" pos:column="38">EnumMachines__deprecated</name> )<parameter_list pos:line="4544" pos:column="64">( 
            <param><decl><type><name pos:line="4545" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4545" pos:column="28">*</type:modifier></type> <name pos:line="4545" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4546" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4546" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4546" pos:column="46">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="4546" pos:column="78">*</type:modifier><type:modifier pos:line="4546" pos:column="79">*</type:modifier></type><name pos:line="4546" pos:column="80">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4548" pos:column="9">HRESULT</name></type> ( <name pos:line="4548" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4548" pos:column="37">*</type:modifier><name pos:line="4548" pos:column="38">ConnectToServer</name> )<parameter_list pos:line="4548" pos:column="55">( 
            <param><decl><type><name pos:line="4549" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4549" pos:column="28">*</type:modifier></type> <name pos:line="4549" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4550" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4550" pos:column="30">__RPC__in_opt</name> <name pos:line="4550" pos:column="44">LPCOLESTR</name></type> <name pos:line="4550" pos:column="54">szServerName</name></decl></param>,
            <comment type="block" pos:line="4551" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4551" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4551" pos:column="46">IDebugCoreServer2</name> <type:modifier pos:line="4551" pos:column="64">*</type:modifier><type:modifier pos:line="4551" pos:column="65">*</type:modifier></type><name pos:line="4551" pos:column="66">ppServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4553" pos:column="9">HRESULT</name></type> ( <name pos:line="4553" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4553" pos:column="37">*</type:modifier><name pos:line="4553" pos:column="38">DisconnectServer</name> )<parameter_list pos:line="4553" pos:column="56">( 
            <param><decl><type><name pos:line="4554" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4554" pos:column="28">*</type:modifier></type> <name pos:line="4554" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4555" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4555" pos:column="24">__RPC__in_opt</name> <name pos:line="4555" pos:column="38">IDebugCoreServer2</name> <type:modifier pos:line="4555" pos:column="56">*</type:modifier></type><name pos:line="4555" pos:column="57">pServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4557" pos:column="9">HRESULT</name></type> ( <name pos:line="4557" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4557" pos:column="37">*</type:modifier><name pos:line="4557" pos:column="38">ShutdownSession</name> )<parameter_list pos:line="4557" pos:column="55">( 
            <param><decl><type><name pos:line="4558" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4558" pos:column="28">*</type:modifier></type> <name pos:line="4558" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4560" pos:column="9">HRESULT</name></type> ( <name pos:line="4560" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4560" pos:column="37">*</type:modifier><name pos:line="4560" pos:column="38">EnumCodeContexts</name> )<parameter_list pos:line="4560" pos:column="56">( 
            <param><decl><type><name pos:line="4561" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4561" pos:column="28">*</type:modifier></type> <name pos:line="4561" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4562" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4562" pos:column="24">__RPC__in_opt</name> <name pos:line="4562" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4562" pos:column="53">*</type:modifier></type><name pos:line="4562" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4563" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4563" pos:column="24">__RPC__in_opt</name> <name pos:line="4563" pos:column="38">IDebugDocumentPosition2</name> <type:modifier pos:line="4563" pos:column="62">*</type:modifier></type><name pos:line="4563" pos:column="63">pDocPos</name></decl></param>,
            <comment type="block" pos:line="4564" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4564" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4564" pos:column="46">IEnumDebugCodeContexts2</name> <type:modifier pos:line="4564" pos:column="70">*</type:modifier><type:modifier pos:line="4564" pos:column="71">*</type:modifier></type><name pos:line="4564" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4566" pos:column="9">HRESULT</name></type> ( <name pos:line="4566" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4566" pos:column="37">*</type:modifier><name pos:line="4566" pos:column="38">SetException</name> )<parameter_list pos:line="4566" pos:column="52">( 
            <param><decl><type><name pos:line="4567" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4567" pos:column="28">*</type:modifier></type> <name pos:line="4567" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4568" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4568" pos:column="24">__RPC__in</name> <name pos:line="4568" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4568" pos:column="49">*</type:modifier></type><name pos:line="4568" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4570" pos:column="9">HRESULT</name></type> ( <name pos:line="4570" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4570" pos:column="37">*</type:modifier><name pos:line="4570" pos:column="38">EnumSetExceptions</name> )<parameter_list pos:line="4570" pos:column="57">( 
            <param><decl><type><name pos:line="4571" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4571" pos:column="28">*</type:modifier></type> <name pos:line="4571" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4572" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4572" pos:column="24">__RPC__in_opt</name> <name pos:line="4572" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4572" pos:column="53">*</type:modifier></type><name pos:line="4572" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4573" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4573" pos:column="30">__RPC__in_opt</name> <name pos:line="4573" pos:column="44">LPCOLESTR</name></type> <name pos:line="4573" pos:column="54">pszProgram</name></decl></param>,
            <comment type="block" pos:line="4574" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4574" pos:column="24">__RPC__in</name> <name pos:line="4574" pos:column="34">REFGUID</name></type> <name pos:line="4574" pos:column="42">guidType</name></decl></param>,
            <comment type="block" pos:line="4575" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4575" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4575" pos:column="46">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="4575" pos:column="71">*</type:modifier><type:modifier pos:line="4575" pos:column="72">*</type:modifier></type><name pos:line="4575" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4577" pos:column="9">HRESULT</name></type> ( <name pos:line="4577" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4577" pos:column="37">*</type:modifier><name pos:line="4577" pos:column="38">RemoveSetException</name> )<parameter_list pos:line="4577" pos:column="58">( 
            <param><decl><type><name pos:line="4578" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4578" pos:column="28">*</type:modifier></type> <name pos:line="4578" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4579" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4579" pos:column="24">__RPC__in</name> <name pos:line="4579" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4579" pos:column="49">*</type:modifier></type><name pos:line="4579" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4581" pos:column="9">HRESULT</name></type> ( <name pos:line="4581" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4581" pos:column="37">*</type:modifier><name pos:line="4581" pos:column="38">RemoveAllSetExceptions</name> )<parameter_list pos:line="4581" pos:column="62">( 
            <param><decl><type><name pos:line="4582" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4582" pos:column="28">*</type:modifier></type> <name pos:line="4582" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4583" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4583" pos:column="24">__RPC__in</name> <name pos:line="4583" pos:column="34">REFGUID</name></type> <name pos:line="4583" pos:column="42">guidType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4585" pos:column="9">HRESULT</name></type> ( <name pos:line="4585" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4585" pos:column="37">*</type:modifier><name pos:line="4585" pos:column="38">EnumDefaultExceptions</name> )<parameter_list pos:line="4585" pos:column="61">( 
            <param><decl><type><name pos:line="4586" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4586" pos:column="28">*</type:modifier></type> <name pos:line="4586" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4587" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4587" pos:column="30">__RPC__in_opt</name> <name pos:line="4587" pos:column="44">EXCEPTION_INFO</name> <type:modifier pos:line="4587" pos:column="59">*</type:modifier></type><name pos:line="4587" pos:column="60">pParentException</name></decl></param>,
            <comment type="block" pos:line="4588" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4588" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4588" pos:column="46">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="4588" pos:column="71">*</type:modifier><type:modifier pos:line="4588" pos:column="72">*</type:modifier></type><name pos:line="4588" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4590" pos:column="9">HRESULT</name></type> ( <name pos:line="4590" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4590" pos:column="37">*</type:modifier><name pos:line="4590" pos:column="38">GetENCUpdate</name> )<parameter_list pos:line="4590" pos:column="52">( 
            <param><decl><type><name pos:line="4591" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4591" pos:column="28">*</type:modifier></type> <name pos:line="4591" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4592" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4592" pos:column="24">__RPC__in_opt</name> <name pos:line="4592" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4592" pos:column="53">*</type:modifier></type><name pos:line="4592" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="4593" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4593" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4593" pos:column="46">IDebugENCUpdate</name> <type:modifier pos:line="4593" pos:column="62">*</type:modifier><type:modifier pos:line="4593" pos:column="63">*</type:modifier></type><name pos:line="4593" pos:column="64">ppUpdate</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4595" pos:column="9">HRESULT</name></type> ( <name pos:line="4595" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4595" pos:column="37">*</type:modifier><name pos:line="4595" pos:column="38">SetLocale</name> )<parameter_list pos:line="4595" pos:column="49">( 
            <param><decl><type><name pos:line="4596" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4596" pos:column="28">*</type:modifier></type> <name pos:line="4596" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4597" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4597" pos:column="24">WORD</name></type> <name pos:line="4597" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4599" pos:column="9">HRESULT</name></type> ( <name pos:line="4599" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4599" pos:column="37">*</type:modifier><name pos:line="4599" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="4599" pos:column="55">( 
            <param><decl><type><name pos:line="4600" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4600" pos:column="28">*</type:modifier></type> <name pos:line="4600" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4601" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4601" pos:column="30">__RPC__in_opt</name> <name pos:line="4601" pos:column="44">LPCOLESTR</name></type> <name pos:line="4601" pos:column="54">pszRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4603" pos:column="9">HRESULT</name></type> ( <name pos:line="4603" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4603" pos:column="37">*</type:modifier><name pos:line="4603" pos:column="38">IsAlive</name> )<parameter_list pos:line="4603" pos:column="47">( 
            <param><decl><type><name pos:line="4604" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4604" pos:column="28">*</type:modifier></type> <name pos:line="4604" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4606" pos:column="9">HRESULT</name></type> ( <name pos:line="4606" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4606" pos:column="37">*</type:modifier><name pos:line="4606" pos:column="38">ClearAllSessionThreadStackFrames</name> )<parameter_list pos:line="4606" pos:column="72">( 
            <param><decl><type><name pos:line="4607" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4607" pos:column="28">*</type:modifier></type> <name pos:line="4607" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4609" pos:column="9">HRESULT</name> <argument_list pos:line="4609" pos:column="17">( <argument pos:line="4609" pos:column="19">STDMETHODCALLTYPE *__deprecated_GetSessionId</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4609" pos:column="65">(</op:operator> 
            <name pos:line="4610" pos:column="13">IDebugSession3</name> <op:operator pos:line="4610" pos:column="28">*</op:operator> <name pos:line="4610" pos:column="30">This</name><op:operator pos:line="4610" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4611" pos:column="13">/* [in] */</comment> <name pos:line="4611" pos:column="24">__RPC__in_opt</name> <name pos:line="4611" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="4611" pos:column="59">*</op:operator><name pos:line="4611" pos:column="60">pCallback</name><op:operator pos:line="4611" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4612" pos:column="13">/* [full][size_is][in] */</comment> <macro><name pos:line="4612" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="4612" pos:column="64">(<argument pos:line="4612" pos:column="65">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="4612" pos:column="86">GUID</name> <op:operator pos:line="4612" pos:column="91">*</op:operator><name pos:line="4612" pos:column="92">rgguidSpecificEngines</name><op:operator pos:line="4612" pos:column="113">,</op:operator>
            <comment type="block" pos:line="4613" pos:column="13">/* [in] */</comment> <name pos:line="4613" pos:column="24">DWORD</name> <name pos:line="4613" pos:column="30">celtSpecificEngines</name><op:operator pos:line="4613" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4614" pos:column="13">/* [full][in] */</comment> <name pos:line="4614" pos:column="30">__RPC__in_opt</name> <name pos:line="4614" pos:column="44">LPCOLESTR</name> <name pos:line="4614" pos:column="54">pszStartPageUrl</name><op:operator pos:line="4614" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4615" pos:column="13">/* [out] */</comment> <name pos:line="4615" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4615" pos:column="46">BSTR</name> <op:operator pos:line="4615" pos:column="51">*</op:operator><name pos:line="4615" pos:column="52">pbstrSessionId</name><op:operator pos:line="4615" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4617" pos:column="9">HRESULT</name></type> ( <name pos:line="4617" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4617" pos:column="37">*</type:modifier><name pos:line="4617" pos:column="38">SetEngineMetric</name> )<parameter_list pos:line="4617" pos:column="55">( 
            <param><decl><type><name pos:line="4618" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4618" pos:column="28">*</type:modifier></type> <name pos:line="4618" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4619" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4619" pos:column="24">__RPC__in</name> <name pos:line="4619" pos:column="34">REFGUID</name></type> <name pos:line="4619" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="4620" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4620" pos:column="24">__RPC__in</name> <name pos:line="4620" pos:column="34">LPCOLESTR</name></type> <name pos:line="4620" pos:column="44">pszMetric</name></decl></param>,
            <comment type="block" pos:line="4621" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4621" pos:column="24">VARIANT</name></type> <name pos:line="4621" pos:column="32">varValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4623" pos:column="9">HRESULT</name></type> ( <name pos:line="4623" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4623" pos:column="37">*</type:modifier><name pos:line="4623" pos:column="38">SetStoppingModel</name> )<parameter_list pos:line="4623" pos:column="56">( 
            <param><decl><type><name pos:line="4624" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4624" pos:column="28">*</type:modifier></type> <name pos:line="4624" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4625" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4625" pos:column="24">STOPPING_MODEL</name></type> <name pos:line="4625" pos:column="39">dwStoppingModel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4627" pos:column="9">HRESULT</name></type> ( <name pos:line="4627" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4627" pos:column="37">*</type:modifier><name pos:line="4627" pos:column="38">GetStoppingModel</name> )<parameter_list pos:line="4627" pos:column="56">( 
            <param><decl><type><name pos:line="4628" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4628" pos:column="28">*</type:modifier></type> <name pos:line="4628" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4629" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4629" pos:column="25">__RPC__out</name> <name pos:line="4629" pos:column="36">STOPPING_MODEL</name> <type:modifier pos:line="4629" pos:column="51">*</type:modifier></type><name pos:line="4629" pos:column="52">pdwStoppingModel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4631" pos:column="9">HRESULT</name></type> ( <name pos:line="4631" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4631" pos:column="37">*</type:modifier><name pos:line="4631" pos:column="38">__deprecated_RegisterSessionWithServer</name> )<parameter_list pos:line="4631" pos:column="78">( 
            <param><decl><type><name pos:line="4632" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4632" pos:column="28">*</type:modifier></type> <name pos:line="4632" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4633" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4633" pos:column="24">__RPC__in</name> <name pos:line="4633" pos:column="34">LPCOLESTR</name></type> <name pos:line="4633" pos:column="44">pwszServerName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4635" pos:column="9">HRESULT</name></type> ( <name pos:line="4635" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4635" pos:column="37">*</type:modifier><name pos:line="4635" pos:column="38">SetSymbolPath</name> )<parameter_list pos:line="4635" pos:column="53">( 
            <param><decl><type><name pos:line="4636" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4636" pos:column="28">*</type:modifier></type> <name pos:line="4636" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4637" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4637" pos:column="30">__RPC__in_opt</name> <name pos:line="4637" pos:column="44">LPCOLESTR</name></type> <name pos:line="4637" pos:column="54">szSymbolSearchPath</name></decl></param>,
            <comment type="block" pos:line="4638" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4638" pos:column="30">__RPC__in_opt</name> <name pos:line="4638" pos:column="44">LPCOLESTR</name></type> <name pos:line="4638" pos:column="54">szSymbolCachePath</name></decl></param>,
            <comment type="block" pos:line="4639" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4639" pos:column="24">LOAD_SYMBOLS_FLAGS</name></type> <name pos:line="4639" pos:column="43">Flags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4641" pos:column="9">HRESULT</name></type> ( <name pos:line="4641" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4641" pos:column="37">*</type:modifier><name pos:line="4641" pos:column="38">LoadSymbols</name> )<parameter_list pos:line="4641" pos:column="51">( 
            <param><decl><type><name pos:line="4642" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4642" pos:column="28">*</type:modifier></type> <name pos:line="4642" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4644" pos:column="9">HRESULT</name></type> ( <name pos:line="4644" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4644" pos:column="37">*</type:modifier><name pos:line="4644" pos:column="38">RegisterCallback</name> )<parameter_list pos:line="4644" pos:column="56">( 
            <param><decl><type><name pos:line="4645" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4645" pos:column="28">*</type:modifier></type> <name pos:line="4645" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4646" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4646" pos:column="24">__RPC__in_opt</name> <name pos:line="4646" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="4646" pos:column="59">*</type:modifier></type><name pos:line="4646" pos:column="60">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4648" pos:column="9">HRESULT</name></type> ( <name pos:line="4648" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4648" pos:column="37">*</type:modifier><name pos:line="4648" pos:column="38">ConnectToServerEx</name> )<parameter_list pos:line="4648" pos:column="57">( 
            <param><decl><type><name pos:line="4649" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4649" pos:column="28">*</type:modifier></type> <name pos:line="4649" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4650" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4650" pos:column="30">__RPC__in_opt</name> <name pos:line="4650" pos:column="44">LPCOLESTR</name></type> <name pos:line="4650" pos:column="54">szServerName</name></decl></param>,
            <comment type="block" pos:line="4651" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4651" pos:column="24">CONNECT_REASON</name></type> <name pos:line="4651" pos:column="39">ConnectReason</name></decl></param>,
            <comment type="block" pos:line="4652" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4652" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4652" pos:column="46">IDebugCoreServer3</name> <type:modifier pos:line="4652" pos:column="64">*</type:modifier><type:modifier pos:line="4652" pos:column="65">*</type:modifier></type><name pos:line="4652" pos:column="66">ppServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4654" pos:column="9">HRESULT</name> <argument_list pos:line="4654" pos:column="17">( <argument pos:line="4654" pos:column="19">STDMETHODCALLTYPE *SetJustMyCodeState</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4654" pos:column="58">(</op:operator> 
            <name pos:line="4655" pos:column="13">IDebugSession3</name> <op:operator pos:line="4655" pos:column="28">*</op:operator> <name pos:line="4655" pos:column="30">This</name><op:operator pos:line="4655" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4656" pos:column="13">/* [in] */</comment> <name pos:line="4656" pos:column="24">BOOL</name> <name pos:line="4656" pos:column="29">fUpdate</name><op:operator pos:line="4656" pos:column="36">,</op:operator>
            <comment type="block" pos:line="4657" pos:column="13">/* [in] */</comment> <name pos:line="4657" pos:column="24">DWORD</name> <name pos:line="4657" pos:column="30">dwModules</name><op:operator pos:line="4657" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4658" pos:column="13">/* [full][size_is][in] */</comment> <macro><name pos:line="4658" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="4658" pos:column="64">(<argument pos:line="4658" pos:column="65">dwModules</argument>)</argument_list></macro> <name pos:line="4658" pos:column="76">JMC_CODE_SPEC</name> <op:operator pos:line="4658" pos:column="90">*</op:operator><name pos:line="4658" pos:column="91">rgJMCSpec</name><op:operator pos:line="4658" pos:column="100">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4660" pos:column="9">HRESULT</name></type> ( <name pos:line="4660" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4660" pos:column="37">*</type:modifier><name pos:line="4660" pos:column="38">GetRecentServerNames</name> )<parameter_list pos:line="4660" pos:column="60">( 
            <param><decl><type><name pos:line="4661" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4661" pos:column="28">*</type:modifier></type> <name pos:line="4661" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4662" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4662" pos:column="25">__RPC__out</name> <name pos:line="4662" pos:column="36">BSTR_ARRAY</name> <type:modifier pos:line="4662" pos:column="47">*</type:modifier></type><name pos:line="4662" pos:column="48">pServers</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4664" pos:column="9">HRESULT</name></type> ( <name pos:line="4664" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4664" pos:column="37">*</type:modifier><name pos:line="4664" pos:column="38">SetMaxRecentServerNames</name> )<parameter_list pos:line="4664" pos:column="63">( 
            <param><decl><type><name pos:line="4665" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4665" pos:column="28">*</type:modifier></type> <name pos:line="4665" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4666" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4666" pos:column="24">DWORD</name></type> <name pos:line="4666" pos:column="30">dwNewMax</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4668" pos:column="9">HRESULT</name></type> ( <name pos:line="4668" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4668" pos:column="37">*</type:modifier><name pos:line="4668" pos:column="38">InitializeFeatures</name> )<parameter_list pos:line="4668" pos:column="58">( 
            <param><decl><type><name pos:line="4669" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4669" pos:column="28">*</type:modifier></type> <name pos:line="4669" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4670" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4670" pos:column="24">SESSION_FEATURES</name></type> <name pos:line="4670" pos:column="41">EnabledFeatures</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4672" pos:column="9">HRESULT</name></type> ( <name pos:line="4672" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4672" pos:column="37">*</type:modifier><name pos:line="4672" pos:column="38">SetAllExceptions</name> )<parameter_list pos:line="4672" pos:column="56">( 
            <param><decl><type><name pos:line="4673" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4673" pos:column="28">*</type:modifier></type> <name pos:line="4673" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4674" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4674" pos:column="24">EXCEPTION_STATE</name></type> <name pos:line="4674" pos:column="40">dwState</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4676" pos:column="9">HRESULT</name></type> ( <name pos:line="4676" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4676" pos:column="37">*</type:modifier><name pos:line="4676" pos:column="38">GetStateForAllExceptions</name> )<parameter_list pos:line="4676" pos:column="64">( 
            <param><decl><type><name pos:line="4677" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4677" pos:column="28">*</type:modifier></type> <name pos:line="4677" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4678" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4678" pos:column="25">__RPC__out</name> <name pos:line="4678" pos:column="36">EXCEPTION_STATE</name> <type:modifier pos:line="4678" pos:column="52">*</type:modifier></type><name pos:line="4678" pos:column="53">pdwState</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4680" pos:column="9">HRESULT</name></type> ( <name pos:line="4680" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4680" pos:column="37">*</type:modifier><name pos:line="4680" pos:column="38">AddExceptionCallback</name> )<parameter_list pos:line="4680" pos:column="60">( 
            <param><decl><type><name pos:line="4681" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4681" pos:column="28">*</type:modifier></type> <name pos:line="4681" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4682" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4682" pos:column="24">__RPC__in</name> <name pos:line="4682" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4682" pos:column="49">*</type:modifier></type><name pos:line="4682" pos:column="50">pException</name></decl></param>,
            <comment type="block" pos:line="4683" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4683" pos:column="24">__RPC__in_opt</name> <name pos:line="4683" pos:column="38">IDebugExceptionCallback2</name> <type:modifier pos:line="4683" pos:column="63">*</type:modifier></type><name pos:line="4683" pos:column="64">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4685" pos:column="9">HRESULT</name></type> ( <name pos:line="4685" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4685" pos:column="37">*</type:modifier><name pos:line="4685" pos:column="38">RemoveExceptionCallback</name> )<parameter_list pos:line="4685" pos:column="63">( 
            <param><decl><type><name pos:line="4686" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4686" pos:column="28">*</type:modifier></type> <name pos:line="4686" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4687" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4687" pos:column="24">__RPC__in</name> <name pos:line="4687" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4687" pos:column="49">*</type:modifier></type><name pos:line="4687" pos:column="50">pException</name></decl></param>,
            <comment type="block" pos:line="4688" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4688" pos:column="24">__RPC__in_opt</name> <name pos:line="4688" pos:column="38">IDebugExceptionCallback2</name> <type:modifier pos:line="4688" pos:column="63">*</type:modifier></type><name pos:line="4688" pos:column="64">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4690" pos:column="9">HRESULT</name></type> ( <name pos:line="4690" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4690" pos:column="37">*</type:modifier><name pos:line="4690" pos:column="38">BlockingShutdownSession</name> )<parameter_list pos:line="4690" pos:column="63">( 
            <param><decl><type><name pos:line="4691" pos:column="13">IDebugSession3</name> <type:modifier pos:line="4691" pos:column="28">*</type:modifier></type> <name pos:line="4691" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4692" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4692" pos:column="24">DWORD</name></type> <name pos:line="4692" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4694" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4695" pos:column="7">IDebugSession3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4697" pos:column="5">interface</name></type> <name pos:line="4697" pos:column="15">IDebugSession3</name>
    <argument_list pos:line="4698" pos:column="5">{
        <argument><expr><name pos:line="4699" pos:column="9">CONST_VTBL</name> struct <name pos:line="4699" pos:column="27">IDebugSession3Vtbl</name> <op:operator pos:line="4699" pos:column="46">*</op:operator><name pos:line="4699" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4704" pos:column="1">#<cpp:directive pos:line="4704" pos:column="2">ifdef</cpp:directive> <name pos:line="4704" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4707" pos:column="1">#<cpp:directive pos:line="4707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4707" pos:column="9">IDebugSession3_QueryInterface</name><parameter_list pos:line="4707" pos:column="38">(<param><type><name pos:line="4707" pos:column="39">This</name></type></param>,<param><type><name pos:line="4707" pos:column="44">riid</name></type></param>,<param><type><name pos:line="4707" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4708" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4710" pos:column="1">#<cpp:directive pos:line="4710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4710" pos:column="9">IDebugSession3_AddRef</name><parameter_list pos:line="4710" pos:column="30">(<param><type><name pos:line="4710" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4711" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4713" pos:column="1">#<cpp:directive pos:line="4713" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4713" pos:column="9">IDebugSession3_Release</name><parameter_list pos:line="4713" pos:column="31">(<param><type><name pos:line="4713" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4714" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4717" pos:column="1">#<cpp:directive pos:line="4717" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4717" pos:column="9">IDebugSession3_GetName</name><parameter_list pos:line="4717" pos:column="31">(<param><type><name pos:line="4717" pos:column="32">This</name></type></param>,<param><type><name pos:line="4717" pos:column="37">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4718" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4720" pos:column="1">#<cpp:directive pos:line="4720" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4720" pos:column="9">IDebugSession3_SetName</name><parameter_list pos:line="4720" pos:column="31">(<param><type><name pos:line="4720" pos:column="32">This</name></type></param>,<param><type><name pos:line="4720" pos:column="37">pszName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4721" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetName(This,pszName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4723" pos:column="1">#<cpp:directive pos:line="4723" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4723" pos:column="9">IDebugSession3_EnumProcesses</name><parameter_list pos:line="4723" pos:column="37">(<param><type><name pos:line="4723" pos:column="38">This</name></type></param>,<param><type><name pos:line="4723" pos:column="43">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4724" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumProcesses(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4726" pos:column="1">#<cpp:directive pos:line="4726" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4726" pos:column="9">IDebugSession3_Launch</name><parameter_list pos:line="4726" pos:column="30">(<param><type><name pos:line="4726" pos:column="31">This</name></type></param>,<param><type><name pos:line="4726" pos:column="36">pszMachine</name></type></param>,<param><type><name pos:line="4726" pos:column="47">pPort</name></type></param>,<param><type><name pos:line="4726" pos:column="53">pszExe</name></type></param>,<param><type><name pos:line="4726" pos:column="60">pszArgs</name></type></param>,<param><type><name pos:line="4726" pos:column="68">pszDir</name></type></param>,<param><type><name pos:line="4726" pos:column="75">bstrEnv</name></type></param>,<param><type><name pos:line="4726" pos:column="83">pszOptions</name></type></param>,<param><type><name pos:line="4726" pos:column="94">dwLaunchFlags</name></type></param>,<param><type><name pos:line="4726" pos:column="108">hStdInput</name></type></param>,<param><type><name pos:line="4726" pos:column="118">hStdOutput</name></type></param>,<param><type><name pos:line="4726" pos:column="129">hStdError</name></type></param>,<param><type><name pos:line="4726" pos:column="139">guidLaunchingEngine</name></type></param>,<param><type><name pos:line="4726" pos:column="159">pCallback</name></type></param>,<param><type><name pos:line="4726" pos:column="169">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="4726" pos:column="191">celtSpecificEngines</name></type></param>,<param><type><name pos:line="4726" pos:column="211">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4727" pos:column="5">( (This)-&gt;lpVtbl -&gt; Launch(This,pszMachine,pPort,pszExe,pszArgs,pszDir,bstrEnv,pszOptions,dwLaunchFlags,hStdInput,hStdOutput,hStdError,guidLaunchingEngine,pCallback,rgguidSpecificEngines,celtSpecificEngines,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="4729" pos:column="1">#<cpp:directive pos:line="4729" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4729" pos:column="9">IDebugSession3_RegisterJITServer</name><parameter_list pos:line="4729" pos:column="41">(<param><type><name pos:line="4729" pos:column="42">This</name></type></param>,<param><type><name pos:line="4729" pos:column="47">clsidJITServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4730" pos:column="5">( (This)-&gt;lpVtbl -&gt; RegisterJITServer(This,clsidJITServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4732" pos:column="1">#<cpp:directive pos:line="4732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4732" pos:column="9">IDebugSession3_Terminate</name><parameter_list pos:line="4732" pos:column="33">(<param><type><name pos:line="4732" pos:column="34">This</name></type></param>,<param><type><name pos:line="4732" pos:column="39">fForce</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4733" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This,fForce) )</cpp:value></cpp:define> 

<cpp:define pos:line="4735" pos:column="1">#<cpp:directive pos:line="4735" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4735" pos:column="9">IDebugSession3_Detach</name><parameter_list pos:line="4735" pos:column="30">(<param><type><name pos:line="4735" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4736" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4738" pos:column="1">#<cpp:directive pos:line="4738" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4738" pos:column="9">IDebugSession3_CauseBreak</name><parameter_list pos:line="4738" pos:column="34">(<param><type><name pos:line="4738" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4739" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4741" pos:column="1">#<cpp:directive pos:line="4741" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4741" pos:column="9">IDebugSession3_CreatePendingBreakpoint</name><parameter_list pos:line="4741" pos:column="47">(<param><type><name pos:line="4741" pos:column="48">This</name></type></param>,<param><type><name pos:line="4741" pos:column="53">pBPRequest</name></type></param>,<param><type><name pos:line="4741" pos:column="64">ppPendingBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4742" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreatePendingBreakpoint(This,pBPRequest,ppPendingBP) )</cpp:value></cpp:define> 

<cpp:define pos:line="4744" pos:column="1">#<cpp:directive pos:line="4744" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4744" pos:column="9">IDebugSession3_EnumPendingBreakpoints</name><parameter_list pos:line="4744" pos:column="46">(<param><type><name pos:line="4744" pos:column="47">This</name></type></param>,<param><type><name pos:line="4744" pos:column="52">pProgram</name></type></param>,<param><type><name pos:line="4744" pos:column="61">pszProgram</name></type></param>,<param><type><name pos:line="4744" pos:column="72">ppEnumBPs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4745" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPendingBreakpoints(This,pProgram,pszProgram,ppEnumBPs) )</cpp:value></cpp:define> 

<cpp:define pos:line="4747" pos:column="1">#<cpp:directive pos:line="4747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4747" pos:column="9">IDebugSession3_EnumMachines__deprecated</name><parameter_list pos:line="4747" pos:column="48">(<param><type><name pos:line="4747" pos:column="49">This</name></type></param>,<param><type><name pos:line="4747" pos:column="54">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4748" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumMachines__deprecated(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4750" pos:column="1">#<cpp:directive pos:line="4750" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4750" pos:column="9">IDebugSession3_ConnectToServer</name><parameter_list pos:line="4750" pos:column="39">(<param><type><name pos:line="4750" pos:column="40">This</name></type></param>,<param><type><name pos:line="4750" pos:column="45">szServerName</name></type></param>,<param><type><name pos:line="4750" pos:column="58">ppServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4751" pos:column="5">( (This)-&gt;lpVtbl -&gt; ConnectToServer(This,szServerName,ppServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4753" pos:column="1">#<cpp:directive pos:line="4753" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4753" pos:column="9">IDebugSession3_DisconnectServer</name><parameter_list pos:line="4753" pos:column="40">(<param><type><name pos:line="4753" pos:column="41">This</name></type></param>,<param><type><name pos:line="4753" pos:column="46">pServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4754" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisconnectServer(This,pServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4756" pos:column="1">#<cpp:directive pos:line="4756" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4756" pos:column="9">IDebugSession3_ShutdownSession</name><parameter_list pos:line="4756" pos:column="39">(<param><type><name pos:line="4756" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4757" pos:column="5">( (This)-&gt;lpVtbl -&gt; ShutdownSession(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4759" pos:column="1">#<cpp:directive pos:line="4759" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4759" pos:column="9">IDebugSession3_EnumCodeContexts</name><parameter_list pos:line="4759" pos:column="40">(<param><type><name pos:line="4759" pos:column="41">This</name></type></param>,<param><type><name pos:line="4759" pos:column="46">pProgram</name></type></param>,<param><type><name pos:line="4759" pos:column="55">pDocPos</name></type></param>,<param><type><name pos:line="4759" pos:column="63">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4760" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodeContexts(This,pProgram,pDocPos,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4762" pos:column="1">#<cpp:directive pos:line="4762" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4762" pos:column="9">IDebugSession3_SetException</name><parameter_list pos:line="4762" pos:column="36">(<param><type><name pos:line="4762" pos:column="37">This</name></type></param>,<param><type><name pos:line="4762" pos:column="42">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4763" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="4765" pos:column="1">#<cpp:directive pos:line="4765" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4765" pos:column="9">IDebugSession3_EnumSetExceptions</name><parameter_list pos:line="4765" pos:column="41">(<param><type><name pos:line="4765" pos:column="42">This</name></type></param>,<param><type><name pos:line="4765" pos:column="47">pProgram</name></type></param>,<param><type><name pos:line="4765" pos:column="56">pszProgram</name></type></param>,<param><type><name pos:line="4765" pos:column="67">guidType</name></type></param>,<param><type><name pos:line="4765" pos:column="76">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4766" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumSetExceptions(This,pProgram,pszProgram,guidType,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4768" pos:column="1">#<cpp:directive pos:line="4768" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4768" pos:column="9">IDebugSession3_RemoveSetException</name><parameter_list pos:line="4768" pos:column="42">(<param><type><name pos:line="4768" pos:column="43">This</name></type></param>,<param><type><name pos:line="4768" pos:column="48">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4769" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveSetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="4771" pos:column="1">#<cpp:directive pos:line="4771" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4771" pos:column="9">IDebugSession3_RemoveAllSetExceptions</name><parameter_list pos:line="4771" pos:column="46">(<param><type><name pos:line="4771" pos:column="47">This</name></type></param>,<param><type><name pos:line="4771" pos:column="52">guidType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4772" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveAllSetExceptions(This,guidType) )</cpp:value></cpp:define> 

<cpp:define pos:line="4774" pos:column="1">#<cpp:directive pos:line="4774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4774" pos:column="9">IDebugSession3_EnumDefaultExceptions</name><parameter_list pos:line="4774" pos:column="45">(<param><type><name pos:line="4774" pos:column="46">This</name></type></param>,<param><type><name pos:line="4774" pos:column="51">pParentException</name></type></param>,<param><type><name pos:line="4774" pos:column="68">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4775" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumDefaultExceptions(This,pParentException,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="4777" pos:column="1">#<cpp:directive pos:line="4777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4777" pos:column="9">IDebugSession3_GetENCUpdate</name><parameter_list pos:line="4777" pos:column="36">(<param><type><name pos:line="4777" pos:column="37">This</name></type></param>,<param><type><name pos:line="4777" pos:column="42">pProgram</name></type></param>,<param><type><name pos:line="4777" pos:column="51">ppUpdate</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4778" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCUpdate(This,pProgram,ppUpdate) )</cpp:value></cpp:define> 

<cpp:define pos:line="4780" pos:column="1">#<cpp:directive pos:line="4780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4780" pos:column="9">IDebugSession3_SetLocale</name><parameter_list pos:line="4780" pos:column="33">(<param><type><name pos:line="4780" pos:column="34">This</name></type></param>,<param><type><name pos:line="4780" pos:column="39">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4781" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="4783" pos:column="1">#<cpp:directive pos:line="4783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4783" pos:column="9">IDebugSession3_SetRegistryRoot</name><parameter_list pos:line="4783" pos:column="39">(<param><type><name pos:line="4783" pos:column="40">This</name></type></param>,<param><type><name pos:line="4783" pos:column="45">pszRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4784" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,pszRegistryRoot) )</cpp:value></cpp:define> 

<cpp:define pos:line="4786" pos:column="1">#<cpp:directive pos:line="4786" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4786" pos:column="9">IDebugSession3_IsAlive</name><parameter_list pos:line="4786" pos:column="31">(<param><type><name pos:line="4786" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4787" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsAlive(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4789" pos:column="1">#<cpp:directive pos:line="4789" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4789" pos:column="9">IDebugSession3_ClearAllSessionThreadStackFrames</name><parameter_list pos:line="4789" pos:column="56">(<param><type><name pos:line="4789" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4790" pos:column="5">( (This)-&gt;lpVtbl -&gt; ClearAllSessionThreadStackFrames(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4792" pos:column="1">#<cpp:directive pos:line="4792" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4792" pos:column="9">IDebugSession3___deprecated_GetSessionId</name><parameter_list pos:line="4792" pos:column="49">(<param><type><name pos:line="4792" pos:column="50">This</name></type></param>,<param><type><name pos:line="4792" pos:column="55">pCallback</name></type></param>,<param><type><name pos:line="4792" pos:column="65">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="4792" pos:column="87">celtSpecificEngines</name></type></param>,<param><type><name pos:line="4792" pos:column="107">pszStartPageUrl</name></type></param>,<param><type><name pos:line="4792" pos:column="123">pbstrSessionId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4793" pos:column="5">( (This)-&gt;lpVtbl -&gt; __deprecated_GetSessionId(This,pCallback,rgguidSpecificEngines,celtSpecificEngines,pszStartPageUrl,pbstrSessionId) )</cpp:value></cpp:define> 

<cpp:define pos:line="4795" pos:column="1">#<cpp:directive pos:line="4795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4795" pos:column="9">IDebugSession3_SetEngineMetric</name><parameter_list pos:line="4795" pos:column="39">(<param><type><name pos:line="4795" pos:column="40">This</name></type></param>,<param><type><name pos:line="4795" pos:column="45">guidEngine</name></type></param>,<param><type><name pos:line="4795" pos:column="56">pszMetric</name></type></param>,<param><type><name pos:line="4795" pos:column="66">varValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4796" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetEngineMetric(This,guidEngine,pszMetric,varValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="4798" pos:column="1">#<cpp:directive pos:line="4798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4798" pos:column="9">IDebugSession3_SetStoppingModel</name><parameter_list pos:line="4798" pos:column="40">(<param><type><name pos:line="4798" pos:column="41">This</name></type></param>,<param><type><name pos:line="4798" pos:column="46">dwStoppingModel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4799" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetStoppingModel(This,dwStoppingModel) )</cpp:value></cpp:define> 

<cpp:define pos:line="4801" pos:column="1">#<cpp:directive pos:line="4801" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4801" pos:column="9">IDebugSession3_GetStoppingModel</name><parameter_list pos:line="4801" pos:column="40">(<param><type><name pos:line="4801" pos:column="41">This</name></type></param>,<param><type><name pos:line="4801" pos:column="46">pdwStoppingModel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4802" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStoppingModel(This,pdwStoppingModel) )</cpp:value></cpp:define> 

<cpp:define pos:line="4804" pos:column="1">#<cpp:directive pos:line="4804" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4804" pos:column="9">IDebugSession3___deprecated_RegisterSessionWithServer</name><parameter_list pos:line="4804" pos:column="62">(<param><type><name pos:line="4804" pos:column="63">This</name></type></param>,<param><type><name pos:line="4804" pos:column="68">pwszServerName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4805" pos:column="5">( (This)-&gt;lpVtbl -&gt; __deprecated_RegisterSessionWithServer(This,pwszServerName) )</cpp:value></cpp:define> 


<cpp:define pos:line="4808" pos:column="1">#<cpp:directive pos:line="4808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4808" pos:column="9">IDebugSession3_SetSymbolPath</name><parameter_list pos:line="4808" pos:column="37">(<param><type><name pos:line="4808" pos:column="38">This</name></type></param>,<param><type><name pos:line="4808" pos:column="43">szSymbolSearchPath</name></type></param>,<param><type><name pos:line="4808" pos:column="62">szSymbolCachePath</name></type></param>,<param><type><name pos:line="4808" pos:column="80">Flags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4809" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSymbolPath(This,szSymbolSearchPath,szSymbolCachePath,Flags) )</cpp:value></cpp:define> 

<cpp:define pos:line="4811" pos:column="1">#<cpp:directive pos:line="4811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4811" pos:column="9">IDebugSession3_LoadSymbols</name><parameter_list pos:line="4811" pos:column="35">(<param><type><name pos:line="4811" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4812" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadSymbols(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4814" pos:column="1">#<cpp:directive pos:line="4814" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4814" pos:column="9">IDebugSession3_RegisterCallback</name><parameter_list pos:line="4814" pos:column="40">(<param><type><name pos:line="4814" pos:column="41">This</name></type></param>,<param><type><name pos:line="4814" pos:column="46">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4815" pos:column="5">( (This)-&gt;lpVtbl -&gt; RegisterCallback(This,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="4817" pos:column="1">#<cpp:directive pos:line="4817" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4817" pos:column="9">IDebugSession3_ConnectToServerEx</name><parameter_list pos:line="4817" pos:column="41">(<param><type><name pos:line="4817" pos:column="42">This</name></type></param>,<param><type><name pos:line="4817" pos:column="47">szServerName</name></type></param>,<param><type><name pos:line="4817" pos:column="60">ConnectReason</name></type></param>,<param><type><name pos:line="4817" pos:column="74">ppServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4818" pos:column="5">( (This)-&gt;lpVtbl -&gt; ConnectToServerEx(This,szServerName,ConnectReason,ppServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="4820" pos:column="1">#<cpp:directive pos:line="4820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4820" pos:column="9">IDebugSession3_SetJustMyCodeState</name><parameter_list pos:line="4820" pos:column="42">(<param><type><name pos:line="4820" pos:column="43">This</name></type></param>,<param><type><name pos:line="4820" pos:column="48">fUpdate</name></type></param>,<param><type><name pos:line="4820" pos:column="56">dwModules</name></type></param>,<param><type><name pos:line="4820" pos:column="66">rgJMCSpec</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4821" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetJustMyCodeState(This,fUpdate,dwModules,rgJMCSpec) )</cpp:value></cpp:define> 

<cpp:define pos:line="4823" pos:column="1">#<cpp:directive pos:line="4823" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4823" pos:column="9">IDebugSession3_GetRecentServerNames</name><parameter_list pos:line="4823" pos:column="44">(<param><type><name pos:line="4823" pos:column="45">This</name></type></param>,<param><type><name pos:line="4823" pos:column="50">pServers</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4824" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRecentServerNames(This,pServers) )</cpp:value></cpp:define> 

<cpp:define pos:line="4826" pos:column="1">#<cpp:directive pos:line="4826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4826" pos:column="9">IDebugSession3_SetMaxRecentServerNames</name><parameter_list pos:line="4826" pos:column="47">(<param><type><name pos:line="4826" pos:column="48">This</name></type></param>,<param><type><name pos:line="4826" pos:column="53">dwNewMax</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4827" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetMaxRecentServerNames(This,dwNewMax) )</cpp:value></cpp:define> 

<cpp:define pos:line="4829" pos:column="1">#<cpp:directive pos:line="4829" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4829" pos:column="9">IDebugSession3_InitializeFeatures</name><parameter_list pos:line="4829" pos:column="42">(<param><type><name pos:line="4829" pos:column="43">This</name></type></param>,<param><type><name pos:line="4829" pos:column="48">EnabledFeatures</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4830" pos:column="5">( (This)-&gt;lpVtbl -&gt; InitializeFeatures(This,EnabledFeatures) )</cpp:value></cpp:define> 

<cpp:define pos:line="4832" pos:column="1">#<cpp:directive pos:line="4832" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4832" pos:column="9">IDebugSession3_SetAllExceptions</name><parameter_list pos:line="4832" pos:column="40">(<param><type><name pos:line="4832" pos:column="41">This</name></type></param>,<param><type><name pos:line="4832" pos:column="46">dwState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4833" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetAllExceptions(This,dwState) )</cpp:value></cpp:define> 

<cpp:define pos:line="4835" pos:column="1">#<cpp:directive pos:line="4835" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4835" pos:column="9">IDebugSession3_GetStateForAllExceptions</name><parameter_list pos:line="4835" pos:column="48">(<param><type><name pos:line="4835" pos:column="49">This</name></type></param>,<param><type><name pos:line="4835" pos:column="54">pdwState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4836" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStateForAllExceptions(This,pdwState) )</cpp:value></cpp:define> 

<cpp:define pos:line="4838" pos:column="1">#<cpp:directive pos:line="4838" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4838" pos:column="9">IDebugSession3_AddExceptionCallback</name><parameter_list pos:line="4838" pos:column="44">(<param><type><name pos:line="4838" pos:column="45">This</name></type></param>,<param><type><name pos:line="4838" pos:column="50">pException</name></type></param>,<param><type><name pos:line="4838" pos:column="61">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4839" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddExceptionCallback(This,pException,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="4841" pos:column="1">#<cpp:directive pos:line="4841" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4841" pos:column="9">IDebugSession3_RemoveExceptionCallback</name><parameter_list pos:line="4841" pos:column="47">(<param><type><name pos:line="4841" pos:column="48">This</name></type></param>,<param><type><name pos:line="4841" pos:column="53">pException</name></type></param>,<param><type><name pos:line="4841" pos:column="64">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4842" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveExceptionCallback(This,pException,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="4844" pos:column="1">#<cpp:directive pos:line="4844" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4844" pos:column="9">IDebugSession3_BlockingShutdownSession</name><parameter_list pos:line="4844" pos:column="47">(<param><type><name pos:line="4844" pos:column="48">This</name></type></param>,<param><type><name pos:line="4844" pos:column="53">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4845" pos:column="5">( (This)-&gt;lpVtbl -&gt; BlockingShutdownSession(This,dwTimeout) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4847" pos:column="1">#<cpp:directive pos:line="4847" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4847" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4850" pos:column="1">#<cpp:directive pos:line="4850" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4850" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4855" pos:column="1">#<cpp:directive pos:line="4855" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4855" pos:column="9">/* __IDebugSession3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4858" pos:column="1">#<cpp:directive pos:line="4858" pos:column="2">ifndef</cpp:directive> <name pos:line="4858" pos:column="9">__IDebugEngine2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4859" pos:column="1">#<cpp:directive pos:line="4859" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4859" pos:column="9">__IDebugEngine2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4861" pos:column="1">/* interface IDebugEngine2 */</comment>
<comment type="block" pos:line="4862" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="4865" pos:column="1">enum <name pos:line="4865" pos:column="6">enum_ATTACH_REASON</name>
    <block pos:line="4866" pos:column="5">{	<decl><name pos:line="4866" pos:column="9">ATTACH_REASON_LAUNCH</name>	<init pos:line="4866" pos:column="33">= <expr><lit:literal type="number" pos:line="4866" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="4866" pos:column="38">,</op:operator>
	<decl><name pos:line="4867" pos:column="9">ATTACH_REASON_USER</name>	<init pos:line="4867" pos:column="33">= <expr><lit:literal type="number" pos:line="4867" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="4867" pos:column="38">,</op:operator>
	<decl><name pos:line="4868" pos:column="9">ATTACH_REASON_AUTO</name>	<init pos:line="4868" pos:column="33">= <expr><lit:literal type="number" pos:line="4868" pos:column="35">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="4870" pos:column="1">typedef <type><name pos:line="4870" pos:column="9">DWORD</name></type> <name pos:line="4870" pos:column="15">ATTACH_REASON</name>;</typedef>


<decl_stmt><decl><type><name pos:line="4873" pos:column="1">EXTERN_C</name> <specifier pos:line="4873" pos:column="10">const</specifier> <name pos:line="4873" pos:column="16">IID</name></type> <name pos:line="4873" pos:column="20">IID_IDebugEngine2</name></decl>;</decl_stmt>

<cpp:if pos:line="4875" pos:column="1">#<cpp:directive pos:line="4875" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4875" pos:column="5">defined</name><argument_list pos:line="4875" pos:column="12">(<argument><expr><name pos:line="4875" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4875" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4875" pos:column="29">!</op:operator><call><name pos:line="4875" pos:column="30">defined</name><argument_list pos:line="4875" pos:column="37">(<argument><expr><name pos:line="4875" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4877" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4877" pos:column="19">(<argument pos:line="4877" pos:column="20">"ba105b52-12f1-4038-ae64-d95785874c47"</argument>)</argument_list></macro>
    <label><name pos:line="4878" pos:column="5">IDebugEngine2</name> :</label> <expr_stmt><expr pos:line="4878" pos:column="21">public <name pos:line="4878" pos:column="28">IUnknown</name>
    <block pos:line="4879" pos:column="5">{
    <expr pos:line="4880" pos:column="5">public<op:operator pos:line="4880" pos:column="11">:</op:operator>
        virtual <name pos:line="4881" pos:column="17">HRESULT</name> <name pos:line="4881" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4881" pos:column="43">EnumPrograms</name><argument_list pos:line="4881" pos:column="55">( 
            <comment type="block" pos:line="4882" pos:column="13">/* [out] */</comment> <argument pos:line="4882" pos:column="25">__RPC__deref_out_opt IEnumDebugPrograms2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="4882" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="4882" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="4884" pos:column="9">virtual <name pos:line="4884" pos:column="17">HRESULT</name> <name pos:line="4884" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4884" pos:column="43">Attach</name><argument_list pos:line="4884" pos:column="49">( 
            <comment type="block" pos:line="4885" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4885" pos:column="44">__RPC__in_ecount_part(celtPrograms, celtPrograms) IDebugProgram2 **rgpPrograms</argument>,
            <comment type="block" pos:line="4886" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4886" pos:column="44">__RPC__in_ecount_part(celtPrograms, celtPrograms) IDebugProgramNode2 **rgpProgramNodes</argument>,
            <comment type="block" pos:line="4887" pos:column="13">/* [in] */</comment> <argument pos:line="4887" pos:column="24">DWORD celtPrograms</argument>,
            <comment type="block" pos:line="4888" pos:column="13">/* [in] */</comment> <argument pos:line="4888" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>,
            <comment type="block" pos:line="4889" pos:column="13">/* [in] */</comment> <argument pos:line="4889" pos:column="24">ATTACH_REASON dwReason</argument>)</argument_list></macro> <op:operator pos:line="4889" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="4889" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="4891" pos:column="9">virtual <name pos:line="4891" pos:column="17">HRESULT</name> <name pos:line="4891" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4891" pos:column="43">CreatePendingBreakpoint</name><argument_list pos:line="4891" pos:column="66">( 
            <comment type="block" pos:line="4892" pos:column="13">/* [in] */</comment> <argument pos:line="4892" pos:column="24">__RPC__in_opt IDebugBreakpointRequest2 *pBPRequest</argument>,
            <comment type="block" pos:line="4893" pos:column="13">/* [out] */</comment> <argument pos:line="4893" pos:column="25">__RPC__deref_out_opt IDebugPendingBreakpoint2 **ppPendingBP</argument>)</argument_list></macro> <op:operator pos:line="4893" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="4893" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="4895" pos:column="9">virtual <name pos:line="4895" pos:column="17">HRESULT</name> <name pos:line="4895" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4895" pos:column="43">SetException</name><argument_list pos:line="4895" pos:column="55">( 
            <comment type="block" pos:line="4896" pos:column="13">/* [in] */</comment> <argument pos:line="4896" pos:column="24">__RPC__in EXCEPTION_INFO *pException</argument>)</argument_list></macro> <op:operator pos:line="4896" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4896" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="4898" pos:column="9">virtual <name pos:line="4898" pos:column="17">HRESULT</name> <name pos:line="4898" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4898" pos:column="43">RemoveSetException</name><argument_list pos:line="4898" pos:column="61">( 
            <comment type="block" pos:line="4899" pos:column="13">/* [in] */</comment> <argument pos:line="4899" pos:column="24">__RPC__in EXCEPTION_INFO *pException</argument>)</argument_list></macro> <op:operator pos:line="4899" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4899" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="4901" pos:column="9">virtual <name pos:line="4901" pos:column="17">HRESULT</name> <name pos:line="4901" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4901" pos:column="43">RemoveAllSetExceptions</name><argument_list pos:line="4901" pos:column="65">( 
            <comment type="block" pos:line="4902" pos:column="13">/* [in] */</comment> <argument pos:line="4902" pos:column="24">__RPC__in REFGUID guidType</argument>)</argument_list></macro> <op:operator pos:line="4902" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="4902" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="4904" pos:column="9">virtual <name pos:line="4904" pos:column="17">HRESULT</name> <name pos:line="4904" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4904" pos:column="43">GetEngineId</name><argument_list pos:line="4904" pos:column="54">( 
            <comment type="block" pos:line="4905" pos:column="13">/* [out] */</comment> <argument pos:line="4905" pos:column="25">__RPC__out GUID *pguidEngine</argument>)</argument_list></macro> <op:operator pos:line="4905" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="4905" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="4907" pos:column="9">virtual <name pos:line="4907" pos:column="17">HRESULT</name> <name pos:line="4907" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4907" pos:column="43">DestroyProgram</name><argument_list pos:line="4907" pos:column="57">( 
            <comment type="block" pos:line="4908" pos:column="13">/* [in] */</comment> <argument pos:line="4908" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>)</argument_list></macro> <op:operator pos:line="4908" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="4908" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="4910" pos:column="9">virtual <name pos:line="4910" pos:column="17">HRESULT</name> <name pos:line="4910" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4910" pos:column="43">ContinueFromSynchronousEvent</name><argument_list pos:line="4910" pos:column="71">( 
            <comment type="block" pos:line="4911" pos:column="13">/* [in] */</comment> <argument pos:line="4911" pos:column="24">__RPC__in_opt IDebugEvent2 *pEvent</argument>)</argument_list></macro> <op:operator pos:line="4911" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="4911" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="4913" pos:column="9">virtual <name pos:line="4913" pos:column="17">HRESULT</name> <name pos:line="4913" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4913" pos:column="43">SetLocale</name><argument_list pos:line="4913" pos:column="52">( 
            <comment type="block" pos:line="4914" pos:column="13">/* [in] */</comment> <argument pos:line="4914" pos:column="24">WORD wLangID</argument>)</argument_list></macro> <op:operator pos:line="4914" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="4914" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="4916" pos:column="9">virtual <name pos:line="4916" pos:column="17">HRESULT</name> <name pos:line="4916" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4916" pos:column="43">SetRegistryRoot</name><argument_list pos:line="4916" pos:column="58">( 
            <comment type="block" pos:line="4917" pos:column="13">/* [full][in] */</comment> <argument pos:line="4917" pos:column="30">__RPC__in_opt LPCOLESTR pszRegistryRoot</argument>)</argument_list></macro> <op:operator pos:line="4917" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="4917" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="4919" pos:column="9">virtual <name pos:line="4919" pos:column="17">HRESULT</name> <name pos:line="4919" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4919" pos:column="43">SetMetric</name><argument_list pos:line="4919" pos:column="52">( 
            <comment type="block" pos:line="4920" pos:column="13">/* [in] */</comment> <argument pos:line="4920" pos:column="24">__RPC__in LPCOLESTR pszMetric</argument>,
            <comment type="block" pos:line="4921" pos:column="13">/* [in] */</comment> <argument pos:line="4921" pos:column="24">VARIANT varValue</argument>)</argument_list></macro> <op:operator pos:line="4921" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="4921" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="4923" pos:column="9">virtual <name pos:line="4923" pos:column="17">HRESULT</name> <name pos:line="4923" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4923" pos:column="43">CauseBreak</name><argument_list pos:line="4923" pos:column="53">( <argument><expr><name pos:line="4923" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4923" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="4923" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4927" pos:column="1">#<cpp:directive pos:line="4927" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4927" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4929" pos:column="5">typedef <type><struct pos:line="4929" pos:column="13">struct <name pos:line="4929" pos:column="20">IDebugEngine2Vtbl</name>
    <block pos:line="4930" pos:column="5">{<public type="default" pos:line="4930" pos:column="6">
        <function_decl><type><name pos:line="4931" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4933" pos:column="9">HRESULT</name></type> ( <name pos:line="4933" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4933" pos:column="37">*</type:modifier><name pos:line="4933" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4933" pos:column="54">( 
            <param><decl><type><name pos:line="4934" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4934" pos:column="27">*</type:modifier></type> <name pos:line="4934" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4935" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4935" pos:column="24">__RPC__in</name> <name pos:line="4935" pos:column="34">REFIID</name></type> <name pos:line="4935" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4936" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4937" pos:column="13">__RPC__deref_out</name>  <name pos:line="4937" pos:column="31">void</name> <type:modifier pos:line="4937" pos:column="36">*</type:modifier><type:modifier pos:line="4937" pos:column="37">*</type:modifier></type><name pos:line="4937" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4939" pos:column="9">ULONG</name></type> ( <name pos:line="4939" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4939" pos:column="35">*</type:modifier><name pos:line="4939" pos:column="36">AddRef</name> )<parameter_list pos:line="4939" pos:column="44">( 
            <param><decl><type><name pos:line="4940" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4940" pos:column="27">*</type:modifier></type> <name pos:line="4940" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4942" pos:column="9">ULONG</name></type> ( <name pos:line="4942" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4942" pos:column="35">*</type:modifier><name pos:line="4942" pos:column="36">Release</name> )<parameter_list pos:line="4942" pos:column="45">( 
            <param><decl><type><name pos:line="4943" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4943" pos:column="27">*</type:modifier></type> <name pos:line="4943" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4945" pos:column="9">HRESULT</name></type> ( <name pos:line="4945" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4945" pos:column="37">*</type:modifier><name pos:line="4945" pos:column="38">EnumPrograms</name> )<parameter_list pos:line="4945" pos:column="52">( 
            <param><decl><type><name pos:line="4946" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4946" pos:column="27">*</type:modifier></type> <name pos:line="4946" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4947" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4947" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4947" pos:column="46">IEnumDebugPrograms2</name> <type:modifier pos:line="4947" pos:column="66">*</type:modifier><type:modifier pos:line="4947" pos:column="67">*</type:modifier></type><name pos:line="4947" pos:column="68">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4949" pos:column="9">HRESULT</name> <argument_list pos:line="4949" pos:column="17">( <argument pos:line="4949" pos:column="19">STDMETHODCALLTYPE *Attach</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4949" pos:column="46">(</op:operator> 
            <name pos:line="4950" pos:column="13">IDebugEngine2</name> <op:operator pos:line="4950" pos:column="27">*</op:operator> <name pos:line="4950" pos:column="29">This</name><op:operator pos:line="4950" pos:column="33">,</op:operator>
            <comment type="block" pos:line="4951" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4951" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4951" pos:column="65">(<argument pos:line="4951" pos:column="66">celtPrograms</argument>, <argument pos:line="4951" pos:column="80">celtPrograms</argument>)</argument_list></macro> <name pos:line="4951" pos:column="94">IDebugProgram2</name> <op:operator pos:line="4951" pos:column="109">*</op:operator><op:operator pos:line="4951" pos:column="110">*</op:operator><name pos:line="4951" pos:column="111">rgpPrograms</name><op:operator pos:line="4951" pos:column="122">,</op:operator>
            <comment type="block" pos:line="4952" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4952" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4952" pos:column="65">(<argument pos:line="4952" pos:column="66">celtPrograms</argument>, <argument pos:line="4952" pos:column="80">celtPrograms</argument>)</argument_list></macro> <name pos:line="4952" pos:column="94">IDebugProgramNode2</name> <op:operator pos:line="4952" pos:column="113">*</op:operator><op:operator pos:line="4952" pos:column="114">*</op:operator><name pos:line="4952" pos:column="115">rgpProgramNodes</name><op:operator pos:line="4952" pos:column="130">,</op:operator>
            <comment type="block" pos:line="4953" pos:column="13">/* [in] */</comment> <name pos:line="4953" pos:column="24">DWORD</name> <name pos:line="4953" pos:column="30">celtPrograms</name><op:operator pos:line="4953" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4954" pos:column="13">/* [in] */</comment> <name pos:line="4954" pos:column="24">__RPC__in_opt</name> <name pos:line="4954" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="4954" pos:column="59">*</op:operator><name pos:line="4954" pos:column="60">pCallback</name><op:operator pos:line="4954" pos:column="69">,</op:operator>
            <comment type="block" pos:line="4955" pos:column="13">/* [in] */</comment> <name pos:line="4955" pos:column="24">ATTACH_REASON</name> <name pos:line="4955" pos:column="38">dwReason</name><op:operator pos:line="4955" pos:column="46">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4957" pos:column="9">HRESULT</name></type> ( <name pos:line="4957" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4957" pos:column="37">*</type:modifier><name pos:line="4957" pos:column="38">CreatePendingBreakpoint</name> )<parameter_list pos:line="4957" pos:column="63">( 
            <param><decl><type><name pos:line="4958" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4958" pos:column="27">*</type:modifier></type> <name pos:line="4958" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4959" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4959" pos:column="24">__RPC__in_opt</name> <name pos:line="4959" pos:column="38">IDebugBreakpointRequest2</name> <type:modifier pos:line="4959" pos:column="63">*</type:modifier></type><name pos:line="4959" pos:column="64">pBPRequest</name></decl></param>,
            <comment type="block" pos:line="4960" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4960" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4960" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="4960" pos:column="71">*</type:modifier><type:modifier pos:line="4960" pos:column="72">*</type:modifier></type><name pos:line="4960" pos:column="73">ppPendingBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4962" pos:column="9">HRESULT</name></type> ( <name pos:line="4962" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4962" pos:column="37">*</type:modifier><name pos:line="4962" pos:column="38">SetException</name> )<parameter_list pos:line="4962" pos:column="52">( 
            <param><decl><type><name pos:line="4963" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4963" pos:column="27">*</type:modifier></type> <name pos:line="4963" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4964" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4964" pos:column="24">__RPC__in</name> <name pos:line="4964" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4964" pos:column="49">*</type:modifier></type><name pos:line="4964" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4966" pos:column="9">HRESULT</name></type> ( <name pos:line="4966" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4966" pos:column="37">*</type:modifier><name pos:line="4966" pos:column="38">RemoveSetException</name> )<parameter_list pos:line="4966" pos:column="58">( 
            <param><decl><type><name pos:line="4967" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4967" pos:column="27">*</type:modifier></type> <name pos:line="4967" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4968" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4968" pos:column="24">__RPC__in</name> <name pos:line="4968" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="4968" pos:column="49">*</type:modifier></type><name pos:line="4968" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4970" pos:column="9">HRESULT</name></type> ( <name pos:line="4970" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4970" pos:column="37">*</type:modifier><name pos:line="4970" pos:column="38">RemoveAllSetExceptions</name> )<parameter_list pos:line="4970" pos:column="62">( 
            <param><decl><type><name pos:line="4971" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4971" pos:column="27">*</type:modifier></type> <name pos:line="4971" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4972" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4972" pos:column="24">__RPC__in</name> <name pos:line="4972" pos:column="34">REFGUID</name></type> <name pos:line="4972" pos:column="42">guidType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4974" pos:column="9">HRESULT</name></type> ( <name pos:line="4974" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4974" pos:column="37">*</type:modifier><name pos:line="4974" pos:column="38">GetEngineId</name> )<parameter_list pos:line="4974" pos:column="51">( 
            <param><decl><type><name pos:line="4975" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4975" pos:column="27">*</type:modifier></type> <name pos:line="4975" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4976" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4976" pos:column="25">__RPC__out</name> <name pos:line="4976" pos:column="36">GUID</name> <type:modifier pos:line="4976" pos:column="41">*</type:modifier></type><name pos:line="4976" pos:column="42">pguidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4978" pos:column="9">HRESULT</name></type> ( <name pos:line="4978" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4978" pos:column="37">*</type:modifier><name pos:line="4978" pos:column="38">DestroyProgram</name> )<parameter_list pos:line="4978" pos:column="54">( 
            <param><decl><type><name pos:line="4979" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4979" pos:column="27">*</type:modifier></type> <name pos:line="4979" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4980" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4980" pos:column="24">__RPC__in_opt</name> <name pos:line="4980" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="4980" pos:column="53">*</type:modifier></type><name pos:line="4980" pos:column="54">pProgram</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4982" pos:column="9">HRESULT</name></type> ( <name pos:line="4982" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4982" pos:column="37">*</type:modifier><name pos:line="4982" pos:column="38">ContinueFromSynchronousEvent</name> )<parameter_list pos:line="4982" pos:column="68">( 
            <param><decl><type><name pos:line="4983" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4983" pos:column="27">*</type:modifier></type> <name pos:line="4983" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4984" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4984" pos:column="24">__RPC__in_opt</name> <name pos:line="4984" pos:column="38">IDebugEvent2</name> <type:modifier pos:line="4984" pos:column="51">*</type:modifier></type><name pos:line="4984" pos:column="52">pEvent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4986" pos:column="9">HRESULT</name></type> ( <name pos:line="4986" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4986" pos:column="37">*</type:modifier><name pos:line="4986" pos:column="38">SetLocale</name> )<parameter_list pos:line="4986" pos:column="49">( 
            <param><decl><type><name pos:line="4987" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4987" pos:column="27">*</type:modifier></type> <name pos:line="4987" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4988" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4988" pos:column="24">WORD</name></type> <name pos:line="4988" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4990" pos:column="9">HRESULT</name></type> ( <name pos:line="4990" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4990" pos:column="37">*</type:modifier><name pos:line="4990" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="4990" pos:column="55">( 
            <param><decl><type><name pos:line="4991" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4991" pos:column="27">*</type:modifier></type> <name pos:line="4991" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4992" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="4992" pos:column="30">__RPC__in_opt</name> <name pos:line="4992" pos:column="44">LPCOLESTR</name></type> <name pos:line="4992" pos:column="54">pszRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4994" pos:column="9">HRESULT</name></type> ( <name pos:line="4994" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4994" pos:column="37">*</type:modifier><name pos:line="4994" pos:column="38">SetMetric</name> )<parameter_list pos:line="4994" pos:column="49">( 
            <param><decl><type><name pos:line="4995" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="4995" pos:column="27">*</type:modifier></type> <name pos:line="4995" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4996" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4996" pos:column="24">__RPC__in</name> <name pos:line="4996" pos:column="34">LPCOLESTR</name></type> <name pos:line="4996" pos:column="44">pszMetric</name></decl></param>,
            <comment type="block" pos:line="4997" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4997" pos:column="24">VARIANT</name></type> <name pos:line="4997" pos:column="32">varValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4999" pos:column="9">HRESULT</name></type> ( <name pos:line="4999" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4999" pos:column="37">*</type:modifier><name pos:line="4999" pos:column="38">CauseBreak</name> )<parameter_list pos:line="4999" pos:column="50">( 
            <param><decl><type><name pos:line="5000" pos:column="13">IDebugEngine2</name> <type:modifier pos:line="5000" pos:column="27">*</type:modifier></type> <name pos:line="5000" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5002" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5003" pos:column="7">IDebugEngine2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5005" pos:column="5">interface</name></type> <name pos:line="5005" pos:column="15">IDebugEngine2</name>
    <argument_list pos:line="5006" pos:column="5">{
        <argument><expr><name pos:line="5007" pos:column="9">CONST_VTBL</name> struct <name pos:line="5007" pos:column="27">IDebugEngine2Vtbl</name> <op:operator pos:line="5007" pos:column="45">*</op:operator><name pos:line="5007" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5012" pos:column="1">#<cpp:directive pos:line="5012" pos:column="2">ifdef</cpp:directive> <name pos:line="5012" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5015" pos:column="1">#<cpp:directive pos:line="5015" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5015" pos:column="9">IDebugEngine2_QueryInterface</name><parameter_list pos:line="5015" pos:column="37">(<param><type><name pos:line="5015" pos:column="38">This</name></type></param>,<param><type><name pos:line="5015" pos:column="43">riid</name></type></param>,<param><type><name pos:line="5015" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5016" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5018" pos:column="1">#<cpp:directive pos:line="5018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5018" pos:column="9">IDebugEngine2_AddRef</name><parameter_list pos:line="5018" pos:column="29">(<param><type><name pos:line="5018" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5019" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5021" pos:column="1">#<cpp:directive pos:line="5021" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5021" pos:column="9">IDebugEngine2_Release</name><parameter_list pos:line="5021" pos:column="30">(<param><type><name pos:line="5021" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5022" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5025" pos:column="1">#<cpp:directive pos:line="5025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5025" pos:column="9">IDebugEngine2_EnumPrograms</name><parameter_list pos:line="5025" pos:column="35">(<param><type><name pos:line="5025" pos:column="36">This</name></type></param>,<param><type><name pos:line="5025" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5026" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPrograms(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="5028" pos:column="1">#<cpp:directive pos:line="5028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5028" pos:column="9">IDebugEngine2_Attach</name><parameter_list pos:line="5028" pos:column="29">(<param><type><name pos:line="5028" pos:column="30">This</name></type></param>,<param><type><name pos:line="5028" pos:column="35">rgpPrograms</name></type></param>,<param><type><name pos:line="5028" pos:column="47">rgpProgramNodes</name></type></param>,<param><type><name pos:line="5028" pos:column="63">celtPrograms</name></type></param>,<param><type><name pos:line="5028" pos:column="76">pCallback</name></type></param>,<param><type><name pos:line="5028" pos:column="86">dwReason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5029" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,rgpPrograms,rgpProgramNodes,celtPrograms,pCallback,dwReason) )</cpp:value></cpp:define> 

<cpp:define pos:line="5031" pos:column="1">#<cpp:directive pos:line="5031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5031" pos:column="9">IDebugEngine2_CreatePendingBreakpoint</name><parameter_list pos:line="5031" pos:column="46">(<param><type><name pos:line="5031" pos:column="47">This</name></type></param>,<param><type><name pos:line="5031" pos:column="52">pBPRequest</name></type></param>,<param><type><name pos:line="5031" pos:column="63">ppPendingBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5032" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreatePendingBreakpoint(This,pBPRequest,ppPendingBP) )</cpp:value></cpp:define> 

<cpp:define pos:line="5034" pos:column="1">#<cpp:directive pos:line="5034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5034" pos:column="9">IDebugEngine2_SetException</name><parameter_list pos:line="5034" pos:column="35">(<param><type><name pos:line="5034" pos:column="36">This</name></type></param>,<param><type><name pos:line="5034" pos:column="41">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5035" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="5037" pos:column="1">#<cpp:directive pos:line="5037" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5037" pos:column="9">IDebugEngine2_RemoveSetException</name><parameter_list pos:line="5037" pos:column="41">(<param><type><name pos:line="5037" pos:column="42">This</name></type></param>,<param><type><name pos:line="5037" pos:column="47">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5038" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveSetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="5040" pos:column="1">#<cpp:directive pos:line="5040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5040" pos:column="9">IDebugEngine2_RemoveAllSetExceptions</name><parameter_list pos:line="5040" pos:column="45">(<param><type><name pos:line="5040" pos:column="46">This</name></type></param>,<param><type><name pos:line="5040" pos:column="51">guidType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5041" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveAllSetExceptions(This,guidType) )</cpp:value></cpp:define> 

<cpp:define pos:line="5043" pos:column="1">#<cpp:directive pos:line="5043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5043" pos:column="9">IDebugEngine2_GetEngineId</name><parameter_list pos:line="5043" pos:column="34">(<param><type><name pos:line="5043" pos:column="35">This</name></type></param>,<param><type><name pos:line="5043" pos:column="40">pguidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5044" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineId(This,pguidEngine) )</cpp:value></cpp:define> 

<cpp:define pos:line="5046" pos:column="1">#<cpp:directive pos:line="5046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5046" pos:column="9">IDebugEngine2_DestroyProgram</name><parameter_list pos:line="5046" pos:column="37">(<param><type><name pos:line="5046" pos:column="38">This</name></type></param>,<param><type><name pos:line="5046" pos:column="43">pProgram</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5047" pos:column="5">( (This)-&gt;lpVtbl -&gt; DestroyProgram(This,pProgram) )</cpp:value></cpp:define> 

<cpp:define pos:line="5049" pos:column="1">#<cpp:directive pos:line="5049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5049" pos:column="9">IDebugEngine2_ContinueFromSynchronousEvent</name><parameter_list pos:line="5049" pos:column="51">(<param><type><name pos:line="5049" pos:column="52">This</name></type></param>,<param><type><name pos:line="5049" pos:column="57">pEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5050" pos:column="5">( (This)-&gt;lpVtbl -&gt; ContinueFromSynchronousEvent(This,pEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="5052" pos:column="1">#<cpp:directive pos:line="5052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5052" pos:column="9">IDebugEngine2_SetLocale</name><parameter_list pos:line="5052" pos:column="32">(<param><type><name pos:line="5052" pos:column="33">This</name></type></param>,<param><type><name pos:line="5052" pos:column="38">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5053" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="5055" pos:column="1">#<cpp:directive pos:line="5055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5055" pos:column="9">IDebugEngine2_SetRegistryRoot</name><parameter_list pos:line="5055" pos:column="38">(<param><type><name pos:line="5055" pos:column="39">This</name></type></param>,<param><type><name pos:line="5055" pos:column="44">pszRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5056" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,pszRegistryRoot) )</cpp:value></cpp:define> 

<cpp:define pos:line="5058" pos:column="1">#<cpp:directive pos:line="5058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5058" pos:column="9">IDebugEngine2_SetMetric</name><parameter_list pos:line="5058" pos:column="32">(<param><type><name pos:line="5058" pos:column="33">This</name></type></param>,<param><type><name pos:line="5058" pos:column="38">pszMetric</name></type></param>,<param><type><name pos:line="5058" pos:column="48">varValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5059" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetMetric(This,pszMetric,varValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5061" pos:column="1">#<cpp:directive pos:line="5061" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5061" pos:column="9">IDebugEngine2_CauseBreak</name><parameter_list pos:line="5061" pos:column="33">(<param><type><name pos:line="5061" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5062" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5064" pos:column="1">#<cpp:directive pos:line="5064" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5064" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5067" pos:column="1">#<cpp:directive pos:line="5067" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5067" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5072" pos:column="1">#<cpp:directive pos:line="5072" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5072" pos:column="9">/* __IDebugEngine2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5075" pos:column="1">#<cpp:directive pos:line="5075" pos:column="2">ifndef</cpp:directive> <name pos:line="5075" pos:column="9">__IDebugEngineLaunch2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5076" pos:column="1">#<cpp:directive pos:line="5076" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5076" pos:column="9">__IDebugEngineLaunch2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5078" pos:column="1">/* interface IDebugEngineLaunch2 */</comment>
<comment type="block" pos:line="5079" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5082" pos:column="1">EXTERN_C</name> <specifier pos:line="5082" pos:column="10">const</specifier> <name pos:line="5082" pos:column="16">IID</name></type> <name pos:line="5082" pos:column="20">IID_IDebugEngineLaunch2</name></decl>;</decl_stmt>

<cpp:if pos:line="5084" pos:column="1">#<cpp:directive pos:line="5084" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5084" pos:column="5">defined</name><argument_list pos:line="5084" pos:column="12">(<argument><expr><name pos:line="5084" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5084" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5084" pos:column="29">!</op:operator><call><name pos:line="5084" pos:column="30">defined</name><argument_list pos:line="5084" pos:column="37">(<argument><expr><name pos:line="5084" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5086" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5086" pos:column="19">(<argument pos:line="5086" pos:column="20">"c7c1462f-9736-466c-b2c1-b6b2dedbf4a7"</argument>)</argument_list></macro>
    <label><name pos:line="5087" pos:column="5">IDebugEngineLaunch2</name> :</label> <expr_stmt><expr pos:line="5087" pos:column="27">public <name pos:line="5087" pos:column="34">IUnknown</name>
    <block pos:line="5088" pos:column="5">{
    <expr pos:line="5089" pos:column="5">public<op:operator pos:line="5089" pos:column="11">:</op:operator>
        virtual <name pos:line="5090" pos:column="17">HRESULT</name> <name pos:line="5090" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5090" pos:column="43">LaunchSuspended</name><argument_list pos:line="5090" pos:column="58">( 
            <comment type="block" pos:line="5091" pos:column="13">/* [full][in] */</comment> <argument pos:line="5091" pos:column="30">__RPC__in_opt LPCOLESTR pszServer</argument>,
            <comment type="block" pos:line="5092" pos:column="13">/* [in] */</comment> <argument pos:line="5092" pos:column="24">__RPC__in_opt IDebugPort2 *pPort</argument>,
            <comment type="block" pos:line="5093" pos:column="13">/* [full][in] */</comment> <argument pos:line="5093" pos:column="30">__RPC__in_opt LPCOLESTR pszExe</argument>,
            <comment type="block" pos:line="5094" pos:column="13">/* [full][in] */</comment> <argument pos:line="5094" pos:column="30">__RPC__in_opt LPCOLESTR pszArgs</argument>,
            <comment type="block" pos:line="5095" pos:column="13">/* [full][in] */</comment> <argument pos:line="5095" pos:column="30">__RPC__in_opt LPCOLESTR pszDir</argument>,
            <comment type="block" pos:line="5096" pos:column="13">/* [full][in] */</comment> <argument pos:line="5096" pos:column="30">__RPC__in_opt BSTR bstrEnv</argument>,
            <comment type="block" pos:line="5097" pos:column="13">/* [full][in] */</comment> <argument pos:line="5097" pos:column="30">__RPC__in_opt LPCOLESTR pszOptions</argument>,
            <comment type="block" pos:line="5098" pos:column="13">/* [in] */</comment> <argument pos:line="5098" pos:column="24">LAUNCH_FLAGS dwLaunchFlags</argument>,
            <comment type="block" pos:line="5099" pos:column="13">/* [in] */</comment> <argument pos:line="5099" pos:column="24">DWORD hStdInput</argument>,
            <comment type="block" pos:line="5100" pos:column="13">/* [in] */</comment> <argument pos:line="5100" pos:column="24">DWORD hStdOutput</argument>,
            <comment type="block" pos:line="5101" pos:column="13">/* [in] */</comment> <argument pos:line="5101" pos:column="24">DWORD hStdError</argument>,
            <comment type="block" pos:line="5102" pos:column="13">/* [in] */</comment> <argument pos:line="5102" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>,
            <comment type="block" pos:line="5103" pos:column="13">/* [out] */</comment> <argument pos:line="5103" pos:column="25">__RPC__deref_out_opt IDebugProcess2 **ppProcess</argument>)</argument_list></macro> <op:operator pos:line="5103" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="5103" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="5105" pos:column="9">virtual <name pos:line="5105" pos:column="17">HRESULT</name> <name pos:line="5105" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5105" pos:column="43">ResumeProcess</name><argument_list pos:line="5105" pos:column="56">( 
            <comment type="block" pos:line="5106" pos:column="13">/* [in] */</comment> <argument pos:line="5106" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>)</argument_list></macro> <op:operator pos:line="5106" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5106" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="5108" pos:column="9">virtual <name pos:line="5108" pos:column="17">HRESULT</name> <name pos:line="5108" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5108" pos:column="43">CanTerminateProcess</name><argument_list pos:line="5108" pos:column="62">( 
            <comment type="block" pos:line="5109" pos:column="13">/* [in] */</comment> <argument pos:line="5109" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>)</argument_list></macro> <op:operator pos:line="5109" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5109" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="5111" pos:column="9">virtual <name pos:line="5111" pos:column="17">HRESULT</name> <name pos:line="5111" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5111" pos:column="43">TerminateProcess</name><argument_list pos:line="5111" pos:column="59">( 
            <comment type="block" pos:line="5112" pos:column="13">/* [in] */</comment> <argument pos:line="5112" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>)</argument_list></macro> <op:operator pos:line="5112" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5112" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5116" pos:column="1">#<cpp:directive pos:line="5116" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5116" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5118" pos:column="5">typedef <type><struct pos:line="5118" pos:column="13">struct <name pos:line="5118" pos:column="20">IDebugEngineLaunch2Vtbl</name>
    <block pos:line="5119" pos:column="5">{<public type="default" pos:line="5119" pos:column="6">
        <function_decl><type><name pos:line="5120" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5122" pos:column="9">HRESULT</name></type> ( <name pos:line="5122" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5122" pos:column="37">*</type:modifier><name pos:line="5122" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5122" pos:column="54">( 
            <param><decl><type><name pos:line="5123" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5123" pos:column="33">*</type:modifier></type> <name pos:line="5123" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="5124" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5124" pos:column="24">__RPC__in</name> <name pos:line="5124" pos:column="34">REFIID</name></type> <name pos:line="5124" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5125" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5126" pos:column="13">__RPC__deref_out</name>  <name pos:line="5126" pos:column="31">void</name> <type:modifier pos:line="5126" pos:column="36">*</type:modifier><type:modifier pos:line="5126" pos:column="37">*</type:modifier></type><name pos:line="5126" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5128" pos:column="9">ULONG</name></type> ( <name pos:line="5128" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5128" pos:column="35">*</type:modifier><name pos:line="5128" pos:column="36">AddRef</name> )<parameter_list pos:line="5128" pos:column="44">( 
            <param><decl><type><name pos:line="5129" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5129" pos:column="33">*</type:modifier></type> <name pos:line="5129" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5131" pos:column="9">ULONG</name></type> ( <name pos:line="5131" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5131" pos:column="35">*</type:modifier><name pos:line="5131" pos:column="36">Release</name> )<parameter_list pos:line="5131" pos:column="45">( 
            <param><decl><type><name pos:line="5132" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5132" pos:column="33">*</type:modifier></type> <name pos:line="5132" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5134" pos:column="9">HRESULT</name></type> ( <name pos:line="5134" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5134" pos:column="37">*</type:modifier><name pos:line="5134" pos:column="38">LaunchSuspended</name> )<parameter_list pos:line="5134" pos:column="55">( 
            <param><decl><type><name pos:line="5135" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5135" pos:column="33">*</type:modifier></type> <name pos:line="5135" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="5136" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5136" pos:column="30">__RPC__in_opt</name> <name pos:line="5136" pos:column="44">LPCOLESTR</name></type> <name pos:line="5136" pos:column="54">pszServer</name></decl></param>,
            <comment type="block" pos:line="5137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5137" pos:column="24">__RPC__in_opt</name> <name pos:line="5137" pos:column="38">IDebugPort2</name> <type:modifier pos:line="5137" pos:column="50">*</type:modifier></type><name pos:line="5137" pos:column="51">pPort</name></decl></param>,
            <comment type="block" pos:line="5138" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5138" pos:column="30">__RPC__in_opt</name> <name pos:line="5138" pos:column="44">LPCOLESTR</name></type> <name pos:line="5138" pos:column="54">pszExe</name></decl></param>,
            <comment type="block" pos:line="5139" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5139" pos:column="30">__RPC__in_opt</name> <name pos:line="5139" pos:column="44">LPCOLESTR</name></type> <name pos:line="5139" pos:column="54">pszArgs</name></decl></param>,
            <comment type="block" pos:line="5140" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5140" pos:column="30">__RPC__in_opt</name> <name pos:line="5140" pos:column="44">LPCOLESTR</name></type> <name pos:line="5140" pos:column="54">pszDir</name></decl></param>,
            <comment type="block" pos:line="5141" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5141" pos:column="30">__RPC__in_opt</name> <name pos:line="5141" pos:column="44">BSTR</name></type> <name pos:line="5141" pos:column="49">bstrEnv</name></decl></param>,
            <comment type="block" pos:line="5142" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5142" pos:column="30">__RPC__in_opt</name> <name pos:line="5142" pos:column="44">LPCOLESTR</name></type> <name pos:line="5142" pos:column="54">pszOptions</name></decl></param>,
            <comment type="block" pos:line="5143" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5143" pos:column="24">LAUNCH_FLAGS</name></type> <name pos:line="5143" pos:column="37">dwLaunchFlags</name></decl></param>,
            <comment type="block" pos:line="5144" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5144" pos:column="24">DWORD</name></type> <name pos:line="5144" pos:column="30">hStdInput</name></decl></param>,
            <comment type="block" pos:line="5145" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5145" pos:column="24">DWORD</name></type> <name pos:line="5145" pos:column="30">hStdOutput</name></decl></param>,
            <comment type="block" pos:line="5146" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5146" pos:column="24">DWORD</name></type> <name pos:line="5146" pos:column="30">hStdError</name></decl></param>,
            <comment type="block" pos:line="5147" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5147" pos:column="24">__RPC__in_opt</name> <name pos:line="5147" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="5147" pos:column="59">*</type:modifier></type><name pos:line="5147" pos:column="60">pCallback</name></decl></param>,
            <comment type="block" pos:line="5148" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5148" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5148" pos:column="46">IDebugProcess2</name> <type:modifier pos:line="5148" pos:column="61">*</type:modifier><type:modifier pos:line="5148" pos:column="62">*</type:modifier></type><name pos:line="5148" pos:column="63">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5150" pos:column="9">HRESULT</name></type> ( <name pos:line="5150" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5150" pos:column="37">*</type:modifier><name pos:line="5150" pos:column="38">ResumeProcess</name> )<parameter_list pos:line="5150" pos:column="53">( 
            <param><decl><type><name pos:line="5151" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5151" pos:column="33">*</type:modifier></type> <name pos:line="5151" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="5152" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5152" pos:column="24">__RPC__in_opt</name> <name pos:line="5152" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="5152" pos:column="53">*</type:modifier></type><name pos:line="5152" pos:column="54">pProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5154" pos:column="9">HRESULT</name></type> ( <name pos:line="5154" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5154" pos:column="37">*</type:modifier><name pos:line="5154" pos:column="38">CanTerminateProcess</name> )<parameter_list pos:line="5154" pos:column="59">( 
            <param><decl><type><name pos:line="5155" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5155" pos:column="33">*</type:modifier></type> <name pos:line="5155" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="5156" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5156" pos:column="24">__RPC__in_opt</name> <name pos:line="5156" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="5156" pos:column="53">*</type:modifier></type><name pos:line="5156" pos:column="54">pProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5158" pos:column="9">HRESULT</name></type> ( <name pos:line="5158" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5158" pos:column="37">*</type:modifier><name pos:line="5158" pos:column="38">TerminateProcess</name> )<parameter_list pos:line="5158" pos:column="56">( 
            <param><decl><type><name pos:line="5159" pos:column="13">IDebugEngineLaunch2</name> <type:modifier pos:line="5159" pos:column="33">*</type:modifier></type> <name pos:line="5159" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="5160" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5160" pos:column="24">__RPC__in_opt</name> <name pos:line="5160" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="5160" pos:column="53">*</type:modifier></type><name pos:line="5160" pos:column="54">pProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5162" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5163" pos:column="7">IDebugEngineLaunch2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5165" pos:column="5">interface</name></type> <name pos:line="5165" pos:column="15">IDebugEngineLaunch2</name>
    <argument_list pos:line="5166" pos:column="5">{
        <argument><expr><name pos:line="5167" pos:column="9">CONST_VTBL</name> struct <name pos:line="5167" pos:column="27">IDebugEngineLaunch2Vtbl</name> <op:operator pos:line="5167" pos:column="51">*</op:operator><name pos:line="5167" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5172" pos:column="1">#<cpp:directive pos:line="5172" pos:column="2">ifdef</cpp:directive> <name pos:line="5172" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5175" pos:column="1">#<cpp:directive pos:line="5175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5175" pos:column="9">IDebugEngineLaunch2_QueryInterface</name><parameter_list pos:line="5175" pos:column="43">(<param><type><name pos:line="5175" pos:column="44">This</name></type></param>,<param><type><name pos:line="5175" pos:column="49">riid</name></type></param>,<param><type><name pos:line="5175" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5176" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5178" pos:column="1">#<cpp:directive pos:line="5178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5178" pos:column="9">IDebugEngineLaunch2_AddRef</name><parameter_list pos:line="5178" pos:column="35">(<param><type><name pos:line="5178" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5179" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5181" pos:column="1">#<cpp:directive pos:line="5181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5181" pos:column="9">IDebugEngineLaunch2_Release</name><parameter_list pos:line="5181" pos:column="36">(<param><type><name pos:line="5181" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5182" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5185" pos:column="1">#<cpp:directive pos:line="5185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5185" pos:column="9">IDebugEngineLaunch2_LaunchSuspended</name><parameter_list pos:line="5185" pos:column="44">(<param><type><name pos:line="5185" pos:column="45">This</name></type></param>,<param><type><name pos:line="5185" pos:column="50">pszServer</name></type></param>,<param><type><name pos:line="5185" pos:column="60">pPort</name></type></param>,<param><type><name pos:line="5185" pos:column="66">pszExe</name></type></param>,<param><type><name pos:line="5185" pos:column="73">pszArgs</name></type></param>,<param><type><name pos:line="5185" pos:column="81">pszDir</name></type></param>,<param><type><name pos:line="5185" pos:column="88">bstrEnv</name></type></param>,<param><type><name pos:line="5185" pos:column="96">pszOptions</name></type></param>,<param><type><name pos:line="5185" pos:column="107">dwLaunchFlags</name></type></param>,<param><type><name pos:line="5185" pos:column="121">hStdInput</name></type></param>,<param><type><name pos:line="5185" pos:column="131">hStdOutput</name></type></param>,<param><type><name pos:line="5185" pos:column="142">hStdError</name></type></param>,<param><type><name pos:line="5185" pos:column="152">pCallback</name></type></param>,<param><type><name pos:line="5185" pos:column="162">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5186" pos:column="5">( (This)-&gt;lpVtbl -&gt; LaunchSuspended(This,pszServer,pPort,pszExe,pszArgs,pszDir,bstrEnv,pszOptions,dwLaunchFlags,hStdInput,hStdOutput,hStdError,pCallback,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="5188" pos:column="1">#<cpp:directive pos:line="5188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5188" pos:column="9">IDebugEngineLaunch2_ResumeProcess</name><parameter_list pos:line="5188" pos:column="42">(<param><type><name pos:line="5188" pos:column="43">This</name></type></param>,<param><type><name pos:line="5188" pos:column="48">pProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5189" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResumeProcess(This,pProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="5191" pos:column="1">#<cpp:directive pos:line="5191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5191" pos:column="9">IDebugEngineLaunch2_CanTerminateProcess</name><parameter_list pos:line="5191" pos:column="48">(<param><type><name pos:line="5191" pos:column="49">This</name></type></param>,<param><type><name pos:line="5191" pos:column="54">pProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5192" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanTerminateProcess(This,pProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="5194" pos:column="1">#<cpp:directive pos:line="5194" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5194" pos:column="9">IDebugEngineLaunch2_TerminateProcess</name><parameter_list pos:line="5194" pos:column="45">(<param><type><name pos:line="5194" pos:column="46">This</name></type></param>,<param><type><name pos:line="5194" pos:column="51">pProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5195" pos:column="5">( (This)-&gt;lpVtbl -&gt; TerminateProcess(This,pProcess) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5197" pos:column="1">#<cpp:directive pos:line="5197" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5197" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5200" pos:column="1">#<cpp:directive pos:line="5200" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5200" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5205" pos:column="1">#<cpp:directive pos:line="5205" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5205" pos:column="9">/* __IDebugEngineLaunch2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5208" pos:column="1">#<cpp:directive pos:line="5208" pos:column="2">ifndef</cpp:directive> <name pos:line="5208" pos:column="9">__IDebugEngine3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5209" pos:column="1">#<cpp:directive pos:line="5209" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5209" pos:column="9">__IDebugEngine3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5211" pos:column="1">/* interface IDebugEngine3 */</comment>
<comment type="block" pos:line="5212" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5215" pos:column="1">EXTERN_C</name> <specifier pos:line="5215" pos:column="10">const</specifier> <name pos:line="5215" pos:column="16">IID</name></type> <name pos:line="5215" pos:column="20">IID_IDebugEngine3</name></decl>;</decl_stmt>

<cpp:if pos:line="5217" pos:column="1">#<cpp:directive pos:line="5217" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5217" pos:column="5">defined</name><argument_list pos:line="5217" pos:column="12">(<argument><expr><name pos:line="5217" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5217" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5217" pos:column="29">!</op:operator><call><name pos:line="5217" pos:column="30">defined</name><argument_list pos:line="5217" pos:column="37">(<argument><expr><name pos:line="5217" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5219" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5219" pos:column="19">(<argument pos:line="5219" pos:column="20">"A60384F6-3712-4cb3-BC46-81E6402FEE99"</argument>)</argument_list></macro>
    <label><name pos:line="5220" pos:column="5">IDebugEngine3</name> :</label> <expr_stmt><expr pos:line="5220" pos:column="21">public <name pos:line="5220" pos:column="28">IDebugEngine2</name>
    <block pos:line="5221" pos:column="5">{
    <expr pos:line="5222" pos:column="5">public<op:operator pos:line="5222" pos:column="11">:</op:operator>
        virtual <name pos:line="5223" pos:column="17">HRESULT</name> <name pos:line="5223" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5223" pos:column="43">SetSymbolPath</name><argument_list pos:line="5223" pos:column="56">( 
            <comment type="block" pos:line="5224" pos:column="13">/* [in] */</comment> <argument pos:line="5224" pos:column="24">__RPC__in LPCOLESTR szSymbolSearchPath</argument>,
            <comment type="block" pos:line="5225" pos:column="13">/* [in] */</comment> <argument pos:line="5225" pos:column="24">__RPC__in LPCOLESTR szSymbolCachePath</argument>,
            <comment type="block" pos:line="5226" pos:column="13">/* [in] */</comment> <argument pos:line="5226" pos:column="24">LOAD_SYMBOLS_FLAGS Flags</argument>)</argument_list></macro> <op:operator pos:line="5226" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="5226" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="5228" pos:column="9">virtual <name pos:line="5228" pos:column="17">HRESULT</name> <name pos:line="5228" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="5228" pos:column="43">LoadSymbols</name><argument_list pos:line="5228" pos:column="54">( <argument><expr><name pos:line="5228" pos:column="56">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="5228" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="5228" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="5230" pos:column="9">virtual <name pos:line="5230" pos:column="17">HRESULT</name> <name pos:line="5230" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5230" pos:column="43">SetJustMyCodeState</name><argument_list pos:line="5230" pos:column="61">( 
            <comment type="block" pos:line="5231" pos:column="13">/* [in] */</comment> <argument pos:line="5231" pos:column="24">BOOL fUpdate</argument>,
            <comment type="block" pos:line="5232" pos:column="13">/* [in] */</comment> <argument pos:line="5232" pos:column="24">DWORD dwModules</argument>,
            <comment type="block" pos:line="5233" pos:column="13">/* [full][size_is][in] */</comment> <argument pos:line="5233" pos:column="39">__RPC__in_ecount_full_opt(dwModules) JMC_CODE_SPEC *rgJMCSpec</argument>)</argument_list></macro> <op:operator pos:line="5233" pos:column="102">=</op:operator> <lit:literal type="number" pos:line="5233" pos:column="104">0</lit:literal></expr>;
        
        <expr pos:line="5235" pos:column="9">virtual <name pos:line="5235" pos:column="17">HRESULT</name> <name pos:line="5235" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5235" pos:column="43">SetEngineGuid</name><argument_list pos:line="5235" pos:column="56">( 
            <comment type="block" pos:line="5236" pos:column="13">/* [in] */</comment> <argument pos:line="5236" pos:column="24">__RPC__in GUID *guidEngine</argument>)</argument_list></macro> <op:operator pos:line="5236" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="5236" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="5238" pos:column="9">virtual <name pos:line="5238" pos:column="17">HRESULT</name> <name pos:line="5238" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5238" pos:column="43">SetAllExceptions</name><argument_list pos:line="5238" pos:column="59">( 
            <comment type="block" pos:line="5239" pos:column="13">/* [in] */</comment> <argument pos:line="5239" pos:column="24">EXCEPTION_STATE dwState</argument>)</argument_list></macro> <op:operator pos:line="5239" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="5239" pos:column="51">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5243" pos:column="1">#<cpp:directive pos:line="5243" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5243" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5245" pos:column="5">typedef <type><struct pos:line="5245" pos:column="13">struct <name pos:line="5245" pos:column="20">IDebugEngine3Vtbl</name>
    <block pos:line="5246" pos:column="5">{<public type="default" pos:line="5246" pos:column="6">
        <function_decl><type><name pos:line="5247" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5249" pos:column="9">HRESULT</name></type> ( <name pos:line="5249" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5249" pos:column="37">*</type:modifier><name pos:line="5249" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5249" pos:column="54">( 
            <param><decl><type><name pos:line="5250" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5250" pos:column="27">*</type:modifier></type> <name pos:line="5250" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5251" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5251" pos:column="24">__RPC__in</name> <name pos:line="5251" pos:column="34">REFIID</name></type> <name pos:line="5251" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5252" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5253" pos:column="13">__RPC__deref_out</name>  <name pos:line="5253" pos:column="31">void</name> <type:modifier pos:line="5253" pos:column="36">*</type:modifier><type:modifier pos:line="5253" pos:column="37">*</type:modifier></type><name pos:line="5253" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5255" pos:column="9">ULONG</name></type> ( <name pos:line="5255" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5255" pos:column="35">*</type:modifier><name pos:line="5255" pos:column="36">AddRef</name> )<parameter_list pos:line="5255" pos:column="44">( 
            <param><decl><type><name pos:line="5256" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5256" pos:column="27">*</type:modifier></type> <name pos:line="5256" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5258" pos:column="9">ULONG</name></type> ( <name pos:line="5258" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5258" pos:column="35">*</type:modifier><name pos:line="5258" pos:column="36">Release</name> )<parameter_list pos:line="5258" pos:column="45">( 
            <param><decl><type><name pos:line="5259" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5259" pos:column="27">*</type:modifier></type> <name pos:line="5259" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5261" pos:column="9">HRESULT</name></type> ( <name pos:line="5261" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5261" pos:column="37">*</type:modifier><name pos:line="5261" pos:column="38">EnumPrograms</name> )<parameter_list pos:line="5261" pos:column="52">( 
            <param><decl><type><name pos:line="5262" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5262" pos:column="27">*</type:modifier></type> <name pos:line="5262" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5263" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5263" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5263" pos:column="46">IEnumDebugPrograms2</name> <type:modifier pos:line="5263" pos:column="66">*</type:modifier><type:modifier pos:line="5263" pos:column="67">*</type:modifier></type><name pos:line="5263" pos:column="68">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5265" pos:column="9">HRESULT</name> <argument_list pos:line="5265" pos:column="17">( <argument pos:line="5265" pos:column="19">STDMETHODCALLTYPE *Attach</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5265" pos:column="46">(</op:operator> 
            <name pos:line="5266" pos:column="13">IDebugEngine3</name> <op:operator pos:line="5266" pos:column="27">*</op:operator> <name pos:line="5266" pos:column="29">This</name><op:operator pos:line="5266" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5267" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="5267" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="5267" pos:column="65">(<argument pos:line="5267" pos:column="66">celtPrograms</argument>, <argument pos:line="5267" pos:column="80">celtPrograms</argument>)</argument_list></macro> <name pos:line="5267" pos:column="94">IDebugProgram2</name> <op:operator pos:line="5267" pos:column="109">*</op:operator><op:operator pos:line="5267" pos:column="110">*</op:operator><name pos:line="5267" pos:column="111">rgpPrograms</name><op:operator pos:line="5267" pos:column="122">,</op:operator>
            <comment type="block" pos:line="5268" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="5268" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="5268" pos:column="65">(<argument pos:line="5268" pos:column="66">celtPrograms</argument>, <argument pos:line="5268" pos:column="80">celtPrograms</argument>)</argument_list></macro> <name pos:line="5268" pos:column="94">IDebugProgramNode2</name> <op:operator pos:line="5268" pos:column="113">*</op:operator><op:operator pos:line="5268" pos:column="114">*</op:operator><name pos:line="5268" pos:column="115">rgpProgramNodes</name><op:operator pos:line="5268" pos:column="130">,</op:operator>
            <comment type="block" pos:line="5269" pos:column="13">/* [in] */</comment> <name pos:line="5269" pos:column="24">DWORD</name> <name pos:line="5269" pos:column="30">celtPrograms</name><op:operator pos:line="5269" pos:column="42">,</op:operator>
            <comment type="block" pos:line="5270" pos:column="13">/* [in] */</comment> <name pos:line="5270" pos:column="24">__RPC__in_opt</name> <name pos:line="5270" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="5270" pos:column="59">*</op:operator><name pos:line="5270" pos:column="60">pCallback</name><op:operator pos:line="5270" pos:column="69">,</op:operator>
            <comment type="block" pos:line="5271" pos:column="13">/* [in] */</comment> <name pos:line="5271" pos:column="24">ATTACH_REASON</name> <name pos:line="5271" pos:column="38">dwReason</name><op:operator pos:line="5271" pos:column="46">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="5273" pos:column="9">HRESULT</name></type> ( <name pos:line="5273" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5273" pos:column="37">*</type:modifier><name pos:line="5273" pos:column="38">CreatePendingBreakpoint</name> )<parameter_list pos:line="5273" pos:column="63">( 
            <param><decl><type><name pos:line="5274" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5274" pos:column="27">*</type:modifier></type> <name pos:line="5274" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5275" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5275" pos:column="24">__RPC__in_opt</name> <name pos:line="5275" pos:column="38">IDebugBreakpointRequest2</name> <type:modifier pos:line="5275" pos:column="63">*</type:modifier></type><name pos:line="5275" pos:column="64">pBPRequest</name></decl></param>,
            <comment type="block" pos:line="5276" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5276" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5276" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="5276" pos:column="71">*</type:modifier><type:modifier pos:line="5276" pos:column="72">*</type:modifier></type><name pos:line="5276" pos:column="73">ppPendingBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5278" pos:column="9">HRESULT</name></type> ( <name pos:line="5278" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5278" pos:column="37">*</type:modifier><name pos:line="5278" pos:column="38">SetException</name> )<parameter_list pos:line="5278" pos:column="52">( 
            <param><decl><type><name pos:line="5279" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5279" pos:column="27">*</type:modifier></type> <name pos:line="5279" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5280" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5280" pos:column="24">__RPC__in</name> <name pos:line="5280" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="5280" pos:column="49">*</type:modifier></type><name pos:line="5280" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5282" pos:column="9">HRESULT</name></type> ( <name pos:line="5282" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5282" pos:column="37">*</type:modifier><name pos:line="5282" pos:column="38">RemoveSetException</name> )<parameter_list pos:line="5282" pos:column="58">( 
            <param><decl><type><name pos:line="5283" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5283" pos:column="27">*</type:modifier></type> <name pos:line="5283" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5284" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5284" pos:column="24">__RPC__in</name> <name pos:line="5284" pos:column="34">EXCEPTION_INFO</name> <type:modifier pos:line="5284" pos:column="49">*</type:modifier></type><name pos:line="5284" pos:column="50">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5286" pos:column="9">HRESULT</name></type> ( <name pos:line="5286" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5286" pos:column="37">*</type:modifier><name pos:line="5286" pos:column="38">RemoveAllSetExceptions</name> )<parameter_list pos:line="5286" pos:column="62">( 
            <param><decl><type><name pos:line="5287" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5287" pos:column="27">*</type:modifier></type> <name pos:line="5287" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5288" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5288" pos:column="24">__RPC__in</name> <name pos:line="5288" pos:column="34">REFGUID</name></type> <name pos:line="5288" pos:column="42">guidType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5290" pos:column="9">HRESULT</name></type> ( <name pos:line="5290" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5290" pos:column="37">*</type:modifier><name pos:line="5290" pos:column="38">GetEngineId</name> )<parameter_list pos:line="5290" pos:column="51">( 
            <param><decl><type><name pos:line="5291" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5291" pos:column="27">*</type:modifier></type> <name pos:line="5291" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5292" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5292" pos:column="25">__RPC__out</name> <name pos:line="5292" pos:column="36">GUID</name> <type:modifier pos:line="5292" pos:column="41">*</type:modifier></type><name pos:line="5292" pos:column="42">pguidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5294" pos:column="9">HRESULT</name></type> ( <name pos:line="5294" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5294" pos:column="37">*</type:modifier><name pos:line="5294" pos:column="38">DestroyProgram</name> )<parameter_list pos:line="5294" pos:column="54">( 
            <param><decl><type><name pos:line="5295" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5295" pos:column="27">*</type:modifier></type> <name pos:line="5295" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5296" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5296" pos:column="24">__RPC__in_opt</name> <name pos:line="5296" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="5296" pos:column="53">*</type:modifier></type><name pos:line="5296" pos:column="54">pProgram</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5298" pos:column="9">HRESULT</name></type> ( <name pos:line="5298" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5298" pos:column="37">*</type:modifier><name pos:line="5298" pos:column="38">ContinueFromSynchronousEvent</name> )<parameter_list pos:line="5298" pos:column="68">( 
            <param><decl><type><name pos:line="5299" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5299" pos:column="27">*</type:modifier></type> <name pos:line="5299" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5300" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5300" pos:column="24">__RPC__in_opt</name> <name pos:line="5300" pos:column="38">IDebugEvent2</name> <type:modifier pos:line="5300" pos:column="51">*</type:modifier></type><name pos:line="5300" pos:column="52">pEvent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5302" pos:column="9">HRESULT</name></type> ( <name pos:line="5302" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5302" pos:column="37">*</type:modifier><name pos:line="5302" pos:column="38">SetLocale</name> )<parameter_list pos:line="5302" pos:column="49">( 
            <param><decl><type><name pos:line="5303" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5303" pos:column="27">*</type:modifier></type> <name pos:line="5303" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5304" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5304" pos:column="24">WORD</name></type> <name pos:line="5304" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5306" pos:column="9">HRESULT</name></type> ( <name pos:line="5306" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5306" pos:column="37">*</type:modifier><name pos:line="5306" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="5306" pos:column="55">( 
            <param><decl><type><name pos:line="5307" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5307" pos:column="27">*</type:modifier></type> <name pos:line="5307" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5308" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="5308" pos:column="30">__RPC__in_opt</name> <name pos:line="5308" pos:column="44">LPCOLESTR</name></type> <name pos:line="5308" pos:column="54">pszRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5310" pos:column="9">HRESULT</name></type> ( <name pos:line="5310" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5310" pos:column="37">*</type:modifier><name pos:line="5310" pos:column="38">SetMetric</name> )<parameter_list pos:line="5310" pos:column="49">( 
            <param><decl><type><name pos:line="5311" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5311" pos:column="27">*</type:modifier></type> <name pos:line="5311" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5312" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5312" pos:column="24">__RPC__in</name> <name pos:line="5312" pos:column="34">LPCOLESTR</name></type> <name pos:line="5312" pos:column="44">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5313" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5313" pos:column="24">VARIANT</name></type> <name pos:line="5313" pos:column="32">varValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5315" pos:column="9">HRESULT</name></type> ( <name pos:line="5315" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5315" pos:column="37">*</type:modifier><name pos:line="5315" pos:column="38">CauseBreak</name> )<parameter_list pos:line="5315" pos:column="50">( 
            <param><decl><type><name pos:line="5316" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5316" pos:column="27">*</type:modifier></type> <name pos:line="5316" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5318" pos:column="9">HRESULT</name></type> ( <name pos:line="5318" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5318" pos:column="37">*</type:modifier><name pos:line="5318" pos:column="38">SetSymbolPath</name> )<parameter_list pos:line="5318" pos:column="53">( 
            <param><decl><type><name pos:line="5319" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5319" pos:column="27">*</type:modifier></type> <name pos:line="5319" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5320" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5320" pos:column="24">__RPC__in</name> <name pos:line="5320" pos:column="34">LPCOLESTR</name></type> <name pos:line="5320" pos:column="44">szSymbolSearchPath</name></decl></param>,
            <comment type="block" pos:line="5321" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5321" pos:column="24">__RPC__in</name> <name pos:line="5321" pos:column="34">LPCOLESTR</name></type> <name pos:line="5321" pos:column="44">szSymbolCachePath</name></decl></param>,
            <comment type="block" pos:line="5322" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5322" pos:column="24">LOAD_SYMBOLS_FLAGS</name></type> <name pos:line="5322" pos:column="43">Flags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5324" pos:column="9">HRESULT</name></type> ( <name pos:line="5324" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5324" pos:column="37">*</type:modifier><name pos:line="5324" pos:column="38">LoadSymbols</name> )<parameter_list pos:line="5324" pos:column="51">( 
            <param><decl><type><name pos:line="5325" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5325" pos:column="27">*</type:modifier></type> <name pos:line="5325" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5327" pos:column="9">HRESULT</name> <argument_list pos:line="5327" pos:column="17">( <argument pos:line="5327" pos:column="19">STDMETHODCALLTYPE *SetJustMyCodeState</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5327" pos:column="58">(</op:operator> 
            <name pos:line="5328" pos:column="13">IDebugEngine3</name> <op:operator pos:line="5328" pos:column="27">*</op:operator> <name pos:line="5328" pos:column="29">This</name><op:operator pos:line="5328" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5329" pos:column="13">/* [in] */</comment> <name pos:line="5329" pos:column="24">BOOL</name> <name pos:line="5329" pos:column="29">fUpdate</name><op:operator pos:line="5329" pos:column="36">,</op:operator>
            <comment type="block" pos:line="5330" pos:column="13">/* [in] */</comment> <name pos:line="5330" pos:column="24">DWORD</name> <name pos:line="5330" pos:column="30">dwModules</name><op:operator pos:line="5330" pos:column="39">,</op:operator>
            <comment type="block" pos:line="5331" pos:column="13">/* [full][size_is][in] */</comment> <macro><name pos:line="5331" pos:column="39">__RPC__in_ecount_full_opt</name><argument_list pos:line="5331" pos:column="64">(<argument pos:line="5331" pos:column="65">dwModules</argument>)</argument_list></macro> <name pos:line="5331" pos:column="76">JMC_CODE_SPEC</name> <op:operator pos:line="5331" pos:column="90">*</op:operator><name pos:line="5331" pos:column="91">rgJMCSpec</name><op:operator pos:line="5331" pos:column="100">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="5333" pos:column="9">HRESULT</name></type> ( <name pos:line="5333" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5333" pos:column="37">*</type:modifier><name pos:line="5333" pos:column="38">SetEngineGuid</name> )<parameter_list pos:line="5333" pos:column="53">( 
            <param><decl><type><name pos:line="5334" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5334" pos:column="27">*</type:modifier></type> <name pos:line="5334" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5335" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5335" pos:column="24">__RPC__in</name> <name pos:line="5335" pos:column="34">GUID</name> <type:modifier pos:line="5335" pos:column="39">*</type:modifier></type><name pos:line="5335" pos:column="40">guidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5337" pos:column="9">HRESULT</name></type> ( <name pos:line="5337" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5337" pos:column="37">*</type:modifier><name pos:line="5337" pos:column="38">SetAllExceptions</name> )<parameter_list pos:line="5337" pos:column="56">( 
            <param><decl><type><name pos:line="5338" pos:column="13">IDebugEngine3</name> <type:modifier pos:line="5338" pos:column="27">*</type:modifier></type> <name pos:line="5338" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5339" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5339" pos:column="24">EXCEPTION_STATE</name></type> <name pos:line="5339" pos:column="40">dwState</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5341" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5342" pos:column="7">IDebugEngine3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5344" pos:column="5">interface</name></type> <name pos:line="5344" pos:column="15">IDebugEngine3</name>
    <argument_list pos:line="5345" pos:column="5">{
        <argument><expr><name pos:line="5346" pos:column="9">CONST_VTBL</name> struct <name pos:line="5346" pos:column="27">IDebugEngine3Vtbl</name> <op:operator pos:line="5346" pos:column="45">*</op:operator><name pos:line="5346" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5351" pos:column="1">#<cpp:directive pos:line="5351" pos:column="2">ifdef</cpp:directive> <name pos:line="5351" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5354" pos:column="1">#<cpp:directive pos:line="5354" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5354" pos:column="9">IDebugEngine3_QueryInterface</name><parameter_list pos:line="5354" pos:column="37">(<param><type><name pos:line="5354" pos:column="38">This</name></type></param>,<param><type><name pos:line="5354" pos:column="43">riid</name></type></param>,<param><type><name pos:line="5354" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5355" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5357" pos:column="1">#<cpp:directive pos:line="5357" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5357" pos:column="9">IDebugEngine3_AddRef</name><parameter_list pos:line="5357" pos:column="29">(<param><type><name pos:line="5357" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5358" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5360" pos:column="1">#<cpp:directive pos:line="5360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5360" pos:column="9">IDebugEngine3_Release</name><parameter_list pos:line="5360" pos:column="30">(<param><type><name pos:line="5360" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5361" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5364" pos:column="1">#<cpp:directive pos:line="5364" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5364" pos:column="9">IDebugEngine3_EnumPrograms</name><parameter_list pos:line="5364" pos:column="35">(<param><type><name pos:line="5364" pos:column="36">This</name></type></param>,<param><type><name pos:line="5364" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5365" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPrograms(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="5367" pos:column="1">#<cpp:directive pos:line="5367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5367" pos:column="9">IDebugEngine3_Attach</name><parameter_list pos:line="5367" pos:column="29">(<param><type><name pos:line="5367" pos:column="30">This</name></type></param>,<param><type><name pos:line="5367" pos:column="35">rgpPrograms</name></type></param>,<param><type><name pos:line="5367" pos:column="47">rgpProgramNodes</name></type></param>,<param><type><name pos:line="5367" pos:column="63">celtPrograms</name></type></param>,<param><type><name pos:line="5367" pos:column="76">pCallback</name></type></param>,<param><type><name pos:line="5367" pos:column="86">dwReason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5368" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,rgpPrograms,rgpProgramNodes,celtPrograms,pCallback,dwReason) )</cpp:value></cpp:define> 

<cpp:define pos:line="5370" pos:column="1">#<cpp:directive pos:line="5370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5370" pos:column="9">IDebugEngine3_CreatePendingBreakpoint</name><parameter_list pos:line="5370" pos:column="46">(<param><type><name pos:line="5370" pos:column="47">This</name></type></param>,<param><type><name pos:line="5370" pos:column="52">pBPRequest</name></type></param>,<param><type><name pos:line="5370" pos:column="63">ppPendingBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5371" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreatePendingBreakpoint(This,pBPRequest,ppPendingBP) )</cpp:value></cpp:define> 

<cpp:define pos:line="5373" pos:column="1">#<cpp:directive pos:line="5373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5373" pos:column="9">IDebugEngine3_SetException</name><parameter_list pos:line="5373" pos:column="35">(<param><type><name pos:line="5373" pos:column="36">This</name></type></param>,<param><type><name pos:line="5373" pos:column="41">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5374" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="5376" pos:column="1">#<cpp:directive pos:line="5376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5376" pos:column="9">IDebugEngine3_RemoveSetException</name><parameter_list pos:line="5376" pos:column="41">(<param><type><name pos:line="5376" pos:column="42">This</name></type></param>,<param><type><name pos:line="5376" pos:column="47">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5377" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveSetException(This,pException) )</cpp:value></cpp:define> 

<cpp:define pos:line="5379" pos:column="1">#<cpp:directive pos:line="5379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5379" pos:column="9">IDebugEngine3_RemoveAllSetExceptions</name><parameter_list pos:line="5379" pos:column="45">(<param><type><name pos:line="5379" pos:column="46">This</name></type></param>,<param><type><name pos:line="5379" pos:column="51">guidType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5380" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveAllSetExceptions(This,guidType) )</cpp:value></cpp:define> 

<cpp:define pos:line="5382" pos:column="1">#<cpp:directive pos:line="5382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5382" pos:column="9">IDebugEngine3_GetEngineId</name><parameter_list pos:line="5382" pos:column="34">(<param><type><name pos:line="5382" pos:column="35">This</name></type></param>,<param><type><name pos:line="5382" pos:column="40">pguidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5383" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineId(This,pguidEngine) )</cpp:value></cpp:define> 

<cpp:define pos:line="5385" pos:column="1">#<cpp:directive pos:line="5385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5385" pos:column="9">IDebugEngine3_DestroyProgram</name><parameter_list pos:line="5385" pos:column="37">(<param><type><name pos:line="5385" pos:column="38">This</name></type></param>,<param><type><name pos:line="5385" pos:column="43">pProgram</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5386" pos:column="5">( (This)-&gt;lpVtbl -&gt; DestroyProgram(This,pProgram) )</cpp:value></cpp:define> 

<cpp:define pos:line="5388" pos:column="1">#<cpp:directive pos:line="5388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5388" pos:column="9">IDebugEngine3_ContinueFromSynchronousEvent</name><parameter_list pos:line="5388" pos:column="51">(<param><type><name pos:line="5388" pos:column="52">This</name></type></param>,<param><type><name pos:line="5388" pos:column="57">pEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5389" pos:column="5">( (This)-&gt;lpVtbl -&gt; ContinueFromSynchronousEvent(This,pEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="5391" pos:column="1">#<cpp:directive pos:line="5391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5391" pos:column="9">IDebugEngine3_SetLocale</name><parameter_list pos:line="5391" pos:column="32">(<param><type><name pos:line="5391" pos:column="33">This</name></type></param>,<param><type><name pos:line="5391" pos:column="38">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5392" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="5394" pos:column="1">#<cpp:directive pos:line="5394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5394" pos:column="9">IDebugEngine3_SetRegistryRoot</name><parameter_list pos:line="5394" pos:column="38">(<param><type><name pos:line="5394" pos:column="39">This</name></type></param>,<param><type><name pos:line="5394" pos:column="44">pszRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5395" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,pszRegistryRoot) )</cpp:value></cpp:define> 

<cpp:define pos:line="5397" pos:column="1">#<cpp:directive pos:line="5397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5397" pos:column="9">IDebugEngine3_SetMetric</name><parameter_list pos:line="5397" pos:column="32">(<param><type><name pos:line="5397" pos:column="33">This</name></type></param>,<param><type><name pos:line="5397" pos:column="38">pszMetric</name></type></param>,<param><type><name pos:line="5397" pos:column="48">varValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5398" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetMetric(This,pszMetric,varValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5400" pos:column="1">#<cpp:directive pos:line="5400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5400" pos:column="9">IDebugEngine3_CauseBreak</name><parameter_list pos:line="5400" pos:column="33">(<param><type><name pos:line="5400" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5401" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5404" pos:column="1">#<cpp:directive pos:line="5404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5404" pos:column="9">IDebugEngine3_SetSymbolPath</name><parameter_list pos:line="5404" pos:column="36">(<param><type><name pos:line="5404" pos:column="37">This</name></type></param>,<param><type><name pos:line="5404" pos:column="42">szSymbolSearchPath</name></type></param>,<param><type><name pos:line="5404" pos:column="61">szSymbolCachePath</name></type></param>,<param><type><name pos:line="5404" pos:column="79">Flags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5405" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSymbolPath(This,szSymbolSearchPath,szSymbolCachePath,Flags) )</cpp:value></cpp:define> 

<cpp:define pos:line="5407" pos:column="1">#<cpp:directive pos:line="5407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5407" pos:column="9">IDebugEngine3_LoadSymbols</name><parameter_list pos:line="5407" pos:column="34">(<param><type><name pos:line="5407" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5408" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadSymbols(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5410" pos:column="1">#<cpp:directive pos:line="5410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5410" pos:column="9">IDebugEngine3_SetJustMyCodeState</name><parameter_list pos:line="5410" pos:column="41">(<param><type><name pos:line="5410" pos:column="42">This</name></type></param>,<param><type><name pos:line="5410" pos:column="47">fUpdate</name></type></param>,<param><type><name pos:line="5410" pos:column="55">dwModules</name></type></param>,<param><type><name pos:line="5410" pos:column="65">rgJMCSpec</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5411" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetJustMyCodeState(This,fUpdate,dwModules,rgJMCSpec) )</cpp:value></cpp:define> 

<cpp:define pos:line="5413" pos:column="1">#<cpp:directive pos:line="5413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5413" pos:column="9">IDebugEngine3_SetEngineGuid</name><parameter_list pos:line="5413" pos:column="36">(<param><type><name pos:line="5413" pos:column="37">This</name></type></param>,<param><type><name pos:line="5413" pos:column="42">guidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5414" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetEngineGuid(This,guidEngine) )</cpp:value></cpp:define> 

<cpp:define pos:line="5416" pos:column="1">#<cpp:directive pos:line="5416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5416" pos:column="9">IDebugEngine3_SetAllExceptions</name><parameter_list pos:line="5416" pos:column="39">(<param><type><name pos:line="5416" pos:column="40">This</name></type></param>,<param><type><name pos:line="5416" pos:column="45">dwState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5417" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetAllExceptions(This,dwState) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5419" pos:column="1">#<cpp:directive pos:line="5419" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5419" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5422" pos:column="1">#<cpp:directive pos:line="5422" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5422" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5427" pos:column="1">#<cpp:directive pos:line="5427" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5427" pos:column="9">/* __IDebugEngine3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5430" pos:column="1">#<cpp:directive pos:line="5430" pos:column="2">ifndef</cpp:directive> <name pos:line="5430" pos:column="9">__IDebugEventCallback2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5431" pos:column="1">#<cpp:directive pos:line="5431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5431" pos:column="9">__IDebugEventCallback2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5433" pos:column="1">/* interface IDebugEventCallback2 */</comment>
<comment type="block" pos:line="5434" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="5437" pos:column="1">enum <name pos:line="5437" pos:column="6">enum_EVENTATTRIBUTES</name>
    <block pos:line="5438" pos:column="5">{	<decl><name pos:line="5438" pos:column="9">EVENT_ASYNCHRONOUS</name>	<init pos:line="5438" pos:column="33">= <expr><lit:literal type="number" pos:line="5438" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="5438" pos:column="36">,</op:operator>
	<decl><name pos:line="5439" pos:column="9">EVENT_SYNCHRONOUS</name>	<init pos:line="5439" pos:column="33">= <expr><lit:literal type="number" pos:line="5439" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="5439" pos:column="38">,</op:operator>
	<decl><name pos:line="5440" pos:column="9">EVENT_STOPPING</name>	<init pos:line="5440" pos:column="25">= <expr><lit:literal type="number" pos:line="5440" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="5440" pos:column="30">,</op:operator>
	<decl><name pos:line="5441" pos:column="9">EVENT_ASYNC_STOP</name>	<init pos:line="5441" pos:column="33">= <expr><lit:literal type="number" pos:line="5441" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="5441" pos:column="38">,</op:operator>
	<decl><name pos:line="5442" pos:column="9">EVENT_SYNC_STOP</name>	<init pos:line="5442" pos:column="25">= <expr><lit:literal type="number" pos:line="5442" pos:column="27">0x3</lit:literal></expr></init></decl><op:operator pos:line="5442" pos:column="30">,</op:operator>
	<decl><name pos:line="5443" pos:column="9">EVENT_IMMEDIATE</name>	<init pos:line="5443" pos:column="25">= <expr><lit:literal type="number" pos:line="5443" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="5443" pos:column="30">,</op:operator>
	<decl><name pos:line="5444" pos:column="9">EVENT_EXPRESSION_EVALUATION</name>	<init pos:line="5444" pos:column="41">= <expr><lit:literal type="number" pos:line="5444" pos:column="43">0x8</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="5446" pos:column="1">typedef <type><name pos:line="5446" pos:column="9">DWORD</name></type> <name pos:line="5446" pos:column="15">EVENTATTRIBUTES</name>;</typedef>


<decl_stmt><decl><type><name pos:line="5449" pos:column="1">EXTERN_C</name> <specifier pos:line="5449" pos:column="10">const</specifier> <name pos:line="5449" pos:column="16">IID</name></type> <name pos:line="5449" pos:column="20">IID_IDebugEventCallback2</name></decl>;</decl_stmt>

<cpp:if pos:line="5451" pos:column="1">#<cpp:directive pos:line="5451" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5451" pos:column="5">defined</name><argument_list pos:line="5451" pos:column="12">(<argument><expr><name pos:line="5451" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5451" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5451" pos:column="29">!</op:operator><call><name pos:line="5451" pos:column="30">defined</name><argument_list pos:line="5451" pos:column="37">(<argument><expr><name pos:line="5451" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5453" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5453" pos:column="19">(<argument pos:line="5453" pos:column="20">"ade2eeb9-fc85-4f5b-b5d9-d431b4aac31a"</argument>)</argument_list></macro>
    <label><name pos:line="5454" pos:column="5">IDebugEventCallback2</name> :</label> <expr_stmt><expr pos:line="5454" pos:column="28">public <name pos:line="5454" pos:column="35">IUnknown</name>
    <block pos:line="5455" pos:column="5">{
    <expr pos:line="5456" pos:column="5">public<op:operator pos:line="5456" pos:column="11">:</op:operator>
        virtual <name pos:line="5457" pos:column="17">HRESULT</name> <name pos:line="5457" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5457" pos:column="43">Event</name><argument_list pos:line="5457" pos:column="48">( 
            <comment type="block" pos:line="5458" pos:column="13">/* [in] */</comment> <argument pos:line="5458" pos:column="24">__RPC__in_opt IDebugEngine2 *pEngine</argument>,
            <comment type="block" pos:line="5459" pos:column="13">/* [in] */</comment> <argument pos:line="5459" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>,
            <comment type="block" pos:line="5460" pos:column="13">/* [in] */</comment> <argument pos:line="5460" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="5461" pos:column="13">/* [in] */</comment> <argument pos:line="5461" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>,
            <comment type="block" pos:line="5462" pos:column="13">/* [in] */</comment> <argument pos:line="5462" pos:column="24">__RPC__in_opt IDebugEvent2 *pEvent</argument>,
            <comment type="block" pos:line="5463" pos:column="13">/* [in] */</comment> <argument pos:line="5463" pos:column="24">__RPC__in REFIID riidEvent</argument>,
            <comment type="block" pos:line="5464" pos:column="13">/* [in] */</comment> <argument pos:line="5464" pos:column="24">DWORD dwAttrib</argument>)</argument_list></macro> <op:operator pos:line="5464" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="5464" pos:column="42">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5468" pos:column="1">#<cpp:directive pos:line="5468" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5468" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5470" pos:column="5">typedef <type><struct pos:line="5470" pos:column="13">struct <name pos:line="5470" pos:column="20">IDebugEventCallback2Vtbl</name>
    <block pos:line="5471" pos:column="5">{<public type="default" pos:line="5471" pos:column="6">
        <function_decl><type><name pos:line="5472" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5474" pos:column="9">HRESULT</name></type> ( <name pos:line="5474" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5474" pos:column="37">*</type:modifier><name pos:line="5474" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5474" pos:column="54">( 
            <param><decl><type><name pos:line="5475" pos:column="13">IDebugEventCallback2</name> <type:modifier pos:line="5475" pos:column="34">*</type:modifier></type> <name pos:line="5475" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="5476" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5476" pos:column="24">__RPC__in</name> <name pos:line="5476" pos:column="34">REFIID</name></type> <name pos:line="5476" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5477" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5478" pos:column="13">__RPC__deref_out</name>  <name pos:line="5478" pos:column="31">void</name> <type:modifier pos:line="5478" pos:column="36">*</type:modifier><type:modifier pos:line="5478" pos:column="37">*</type:modifier></type><name pos:line="5478" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5480" pos:column="9">ULONG</name></type> ( <name pos:line="5480" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5480" pos:column="35">*</type:modifier><name pos:line="5480" pos:column="36">AddRef</name> )<parameter_list pos:line="5480" pos:column="44">( 
            <param><decl><type><name pos:line="5481" pos:column="13">IDebugEventCallback2</name> <type:modifier pos:line="5481" pos:column="34">*</type:modifier></type> <name pos:line="5481" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5483" pos:column="9">ULONG</name></type> ( <name pos:line="5483" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5483" pos:column="35">*</type:modifier><name pos:line="5483" pos:column="36">Release</name> )<parameter_list pos:line="5483" pos:column="45">( 
            <param><decl><type><name pos:line="5484" pos:column="13">IDebugEventCallback2</name> <type:modifier pos:line="5484" pos:column="34">*</type:modifier></type> <name pos:line="5484" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5486" pos:column="9">HRESULT</name></type> ( <name pos:line="5486" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5486" pos:column="37">*</type:modifier><name pos:line="5486" pos:column="38">Event</name> )<parameter_list pos:line="5486" pos:column="45">( 
            <param><decl><type><name pos:line="5487" pos:column="13">IDebugEventCallback2</name> <type:modifier pos:line="5487" pos:column="34">*</type:modifier></type> <name pos:line="5487" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="5488" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5488" pos:column="24">__RPC__in_opt</name> <name pos:line="5488" pos:column="38">IDebugEngine2</name> <type:modifier pos:line="5488" pos:column="52">*</type:modifier></type><name pos:line="5488" pos:column="53">pEngine</name></decl></param>,
            <comment type="block" pos:line="5489" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5489" pos:column="24">__RPC__in_opt</name> <name pos:line="5489" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="5489" pos:column="53">*</type:modifier></type><name pos:line="5489" pos:column="54">pProcess</name></decl></param>,
            <comment type="block" pos:line="5490" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5490" pos:column="24">__RPC__in_opt</name> <name pos:line="5490" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="5490" pos:column="53">*</type:modifier></type><name pos:line="5490" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="5491" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5491" pos:column="24">__RPC__in_opt</name> <name pos:line="5491" pos:column="38">IDebugThread2</name> <type:modifier pos:line="5491" pos:column="52">*</type:modifier></type><name pos:line="5491" pos:column="53">pThread</name></decl></param>,
            <comment type="block" pos:line="5492" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5492" pos:column="24">__RPC__in_opt</name> <name pos:line="5492" pos:column="38">IDebugEvent2</name> <type:modifier pos:line="5492" pos:column="51">*</type:modifier></type><name pos:line="5492" pos:column="52">pEvent</name></decl></param>,
            <comment type="block" pos:line="5493" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5493" pos:column="24">__RPC__in</name> <name pos:line="5493" pos:column="34">REFIID</name></type> <name pos:line="5493" pos:column="41">riidEvent</name></decl></param>,
            <comment type="block" pos:line="5494" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5494" pos:column="24">DWORD</name></type> <name pos:line="5494" pos:column="30">dwAttrib</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5496" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5497" pos:column="7">IDebugEventCallback2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5499" pos:column="5">interface</name></type> <name pos:line="5499" pos:column="15">IDebugEventCallback2</name>
    <argument_list pos:line="5500" pos:column="5">{
        <argument><expr><name pos:line="5501" pos:column="9">CONST_VTBL</name> struct <name pos:line="5501" pos:column="27">IDebugEventCallback2Vtbl</name> <op:operator pos:line="5501" pos:column="52">*</op:operator><name pos:line="5501" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5506" pos:column="1">#<cpp:directive pos:line="5506" pos:column="2">ifdef</cpp:directive> <name pos:line="5506" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5509" pos:column="1">#<cpp:directive pos:line="5509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5509" pos:column="9">IDebugEventCallback2_QueryInterface</name><parameter_list pos:line="5509" pos:column="44">(<param><type><name pos:line="5509" pos:column="45">This</name></type></param>,<param><type><name pos:line="5509" pos:column="50">riid</name></type></param>,<param><type><name pos:line="5509" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5510" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5512" pos:column="1">#<cpp:directive pos:line="5512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5512" pos:column="9">IDebugEventCallback2_AddRef</name><parameter_list pos:line="5512" pos:column="36">(<param><type><name pos:line="5512" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5513" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5515" pos:column="1">#<cpp:directive pos:line="5515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5515" pos:column="9">IDebugEventCallback2_Release</name><parameter_list pos:line="5515" pos:column="37">(<param><type><name pos:line="5515" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5516" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5519" pos:column="1">#<cpp:directive pos:line="5519" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5519" pos:column="9">IDebugEventCallback2_Event</name><parameter_list pos:line="5519" pos:column="35">(<param><type><name pos:line="5519" pos:column="36">This</name></type></param>,<param><type><name pos:line="5519" pos:column="41">pEngine</name></type></param>,<param><type><name pos:line="5519" pos:column="49">pProcess</name></type></param>,<param><type><name pos:line="5519" pos:column="58">pProgram</name></type></param>,<param><type><name pos:line="5519" pos:column="67">pThread</name></type></param>,<param><type><name pos:line="5519" pos:column="75">pEvent</name></type></param>,<param><type><name pos:line="5519" pos:column="82">riidEvent</name></type></param>,<param><type><name pos:line="5519" pos:column="92">dwAttrib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5520" pos:column="5">( (This)-&gt;lpVtbl -&gt; Event(This,pEngine,pProcess,pProgram,pThread,pEvent,riidEvent,dwAttrib) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5522" pos:column="1">#<cpp:directive pos:line="5522" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5522" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5525" pos:column="1">#<cpp:directive pos:line="5525" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5525" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5530" pos:column="1">#<cpp:directive pos:line="5530" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5530" pos:column="9">/* __IDebugEventCallback2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5533" pos:column="1">#<cpp:directive pos:line="5533" pos:column="2">ifndef</cpp:directive> <name pos:line="5533" pos:column="9">__IDebugSettingsCallback2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5534" pos:column="1">#<cpp:directive pos:line="5534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5534" pos:column="9">__IDebugSettingsCallback2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5536" pos:column="1">/* interface IDebugSettingsCallback2 */</comment>
<comment type="block" pos:line="5537" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5540" pos:column="1">EXTERN_C</name> <specifier pos:line="5540" pos:column="10">const</specifier> <name pos:line="5540" pos:column="16">IID</name></type> <name pos:line="5540" pos:column="20">IID_IDebugSettingsCallback2</name></decl>;</decl_stmt>

<cpp:if pos:line="5542" pos:column="1">#<cpp:directive pos:line="5542" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5542" pos:column="5">defined</name><argument_list pos:line="5542" pos:column="12">(<argument><expr><name pos:line="5542" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5542" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5542" pos:column="29">!</op:operator><call><name pos:line="5542" pos:column="30">defined</name><argument_list pos:line="5542" pos:column="37">(<argument><expr><name pos:line="5542" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5544" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5544" pos:column="19">(<argument pos:line="5544" pos:column="20">"050b1813-91db-47a0-8987-fc55bdd6362b"</argument>)</argument_list></macro>
    <label><name pos:line="5545" pos:column="5">IDebugSettingsCallback2</name> :</label> <expr_stmt><expr pos:line="5545" pos:column="31">public <name pos:line="5545" pos:column="38">IUnknown</name>
    <block pos:line="5546" pos:column="5">{
    <expr pos:line="5547" pos:column="5">public<op:operator pos:line="5547" pos:column="11">:</op:operator>
        virtual <name pos:line="5548" pos:column="17">HRESULT</name> <name pos:line="5548" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5548" pos:column="43">GetMetricGuid</name><argument_list pos:line="5548" pos:column="56">( 
            <comment type="block" pos:line="5549" pos:column="13">/* [in] */</comment> <argument pos:line="5549" pos:column="24">__RPC__in LPCWSTR pszType</argument>,
            <comment type="block" pos:line="5550" pos:column="13">/* [in] */</comment> <argument pos:line="5550" pos:column="24">__RPC__in REFGUID guidSection</argument>,
            <comment type="block" pos:line="5551" pos:column="13">/* [in] */</comment> <argument pos:line="5551" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5552" pos:column="13">/* [out] */</comment> <argument pos:line="5552" pos:column="25">__RPC__out GUID *pguidValue</argument>)</argument_list></macro> <op:operator pos:line="5552" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5552" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="5554" pos:column="9">virtual <name pos:line="5554" pos:column="17">HRESULT</name> <name pos:line="5554" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5554" pos:column="43">GetMetricDword</name><argument_list pos:line="5554" pos:column="57">( 
            <comment type="block" pos:line="5555" pos:column="13">/* [in] */</comment> <argument pos:line="5555" pos:column="24">__RPC__in LPCWSTR pszType</argument>,
            <comment type="block" pos:line="5556" pos:column="13">/* [in] */</comment> <argument pos:line="5556" pos:column="24">__RPC__in REFGUID guidSection</argument>,
            <comment type="block" pos:line="5557" pos:column="13">/* [in] */</comment> <argument pos:line="5557" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5558" pos:column="13">/* [out] */</comment> <argument pos:line="5558" pos:column="25">__RPC__out DWORD *pdwValue</argument>)</argument_list></macro> <op:operator pos:line="5558" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="5558" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="5560" pos:column="9">virtual <name pos:line="5560" pos:column="17">HRESULT</name> <name pos:line="5560" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5560" pos:column="43">GetEEMetricString</name><argument_list pos:line="5560" pos:column="60">( 
            <comment type="block" pos:line="5561" pos:column="13">/* [in] */</comment> <argument pos:line="5561" pos:column="24">__RPC__in REFGUID guidLang</argument>,
            <comment type="block" pos:line="5562" pos:column="13">/* [in] */</comment> <argument pos:line="5562" pos:column="24">__RPC__in REFGUID guidVendor</argument>,
            <comment type="block" pos:line="5563" pos:column="13">/* [in] */</comment> <argument pos:line="5563" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5564" pos:column="13">/* [out] */</comment> <argument pos:line="5564" pos:column="25">__RPC__deref_out_opt BSTR *pbstrValue</argument>)</argument_list></macro> <op:operator pos:line="5564" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5564" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="5566" pos:column="9">virtual <name pos:line="5566" pos:column="17">HRESULT</name> <name pos:line="5566" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5566" pos:column="43">GetEEMetricGuid</name><argument_list pos:line="5566" pos:column="58">( 
            <comment type="block" pos:line="5567" pos:column="13">/* [in] */</comment> <argument pos:line="5567" pos:column="24">__RPC__in REFGUID guidLang</argument>,
            <comment type="block" pos:line="5568" pos:column="13">/* [in] */</comment> <argument pos:line="5568" pos:column="24">__RPC__in REFGUID guidVendor</argument>,
            <comment type="block" pos:line="5569" pos:column="13">/* [in] */</comment> <argument pos:line="5569" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5570" pos:column="13">/* [out] */</comment> <argument pos:line="5570" pos:column="25">__RPC__out GUID *pguidValue</argument>)</argument_list></macro> <op:operator pos:line="5570" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5570" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="5572" pos:column="9">virtual <name pos:line="5572" pos:column="17">HRESULT</name> <name pos:line="5572" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5572" pos:column="43">GetEEMetricFile</name><argument_list pos:line="5572" pos:column="58">( 
            <comment type="block" pos:line="5573" pos:column="13">/* [in] */</comment> <argument pos:line="5573" pos:column="24">__RPC__in REFGUID guidLang</argument>,
            <comment type="block" pos:line="5574" pos:column="13">/* [in] */</comment> <argument pos:line="5574" pos:column="24">__RPC__in REFGUID guidVendor</argument>,
            <comment type="block" pos:line="5575" pos:column="13">/* [in] */</comment> <argument pos:line="5575" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5576" pos:column="13">/* [out] */</comment> <argument pos:line="5576" pos:column="25">__RPC__deref_out_opt BSTR *pbstrValue</argument>)</argument_list></macro> <op:operator pos:line="5576" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5576" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="5578" pos:column="9">virtual <name pos:line="5578" pos:column="17">HRESULT</name> <name pos:line="5578" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5578" pos:column="43">EnumEEs</name><argument_list pos:line="5578" pos:column="50">( 
            <comment type="block" pos:line="5579" pos:column="13">/* [in] */</comment> <argument pos:line="5579" pos:column="24">DWORD celtBuffer</argument>,
            <comment type="block" pos:line="5580" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <argument pos:line="5580" pos:column="55">__RPC__inout_ecount_part_opt(celtBuffer, *pceltEEs) GUID *rgguidLang</argument>,
            <comment type="block" pos:line="5581" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <argument pos:line="5581" pos:column="55">__RPC__inout_ecount_part_opt(celtBuffer, *pceltEEs) GUID *rgguidVendor</argument>,
            <comment type="block" pos:line="5582" pos:column="13">/* [out][in] */</comment> <argument pos:line="5582" pos:column="29">__RPC__inout DWORD *pceltEEs</argument>)</argument_list></macro> <op:operator pos:line="5582" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="5582" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="5584" pos:column="9">virtual <name pos:line="5584" pos:column="17">HRESULT</name> <name pos:line="5584" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5584" pos:column="43">GetEEMetricDword</name><argument_list pos:line="5584" pos:column="59">( 
            <comment type="block" pos:line="5585" pos:column="13">/* [in] */</comment> <argument pos:line="5585" pos:column="24">__RPC__in REFGUID guidLang</argument>,
            <comment type="block" pos:line="5586" pos:column="13">/* [in] */</comment> <argument pos:line="5586" pos:column="24">__RPC__in REFGUID guidVendor</argument>,
            <comment type="block" pos:line="5587" pos:column="13">/* [in] */</comment> <argument pos:line="5587" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5588" pos:column="13">/* [out] */</comment> <argument pos:line="5588" pos:column="25">__RPC__out DWORD *pdwValue</argument>)</argument_list></macro> <op:operator pos:line="5588" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="5588" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="5590" pos:column="9">virtual <name pos:line="5590" pos:column="17">HRESULT</name> <name pos:line="5590" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5590" pos:column="43">GetEELocalObject</name><argument_list pos:line="5590" pos:column="59">( 
            <comment type="block" pos:line="5591" pos:column="13">/* [in] */</comment> <argument pos:line="5591" pos:column="24">__RPC__in REFGUID guidLang</argument>,
            <comment type="block" pos:line="5592" pos:column="13">/* [in] */</comment> <argument pos:line="5592" pos:column="24">__RPC__in REFGUID guidVendor</argument>,
            <comment type="block" pos:line="5593" pos:column="13">/* [in] */</comment> <argument pos:line="5593" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5594" pos:column="13">/* [out] */</comment> <argument pos:line="5594" pos:column="25">__RPC__deref_out_opt IUnknown **ppUnk</argument>)</argument_list></macro> <op:operator pos:line="5594" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5594" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="5596" pos:column="9">virtual <name pos:line="5596" pos:column="17">HRESULT</name> <name pos:line="5596" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5596" pos:column="43">GetMetricString</name><argument_list pos:line="5596" pos:column="58">( 
            <comment type="block" pos:line="5597" pos:column="13">/* [in] */</comment> <argument pos:line="5597" pos:column="24">__RPC__in LPCWSTR pszType</argument>,
            <comment type="block" pos:line="5598" pos:column="13">/* [in] */</comment> <argument pos:line="5598" pos:column="24">__RPC__in REFGUID guidSection</argument>,
            <comment type="block" pos:line="5599" pos:column="13">/* [in] */</comment> <argument pos:line="5599" pos:column="24">__RPC__in LPCWSTR pszMetric</argument>,
            <comment type="block" pos:line="5600" pos:column="13">/* [out] */</comment> <argument pos:line="5600" pos:column="25">__RPC__deref_out_opt BSTR *pbstrValue</argument>)</argument_list></macro> <op:operator pos:line="5600" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="5600" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5604" pos:column="1">#<cpp:directive pos:line="5604" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5604" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5606" pos:column="5">typedef <type><struct pos:line="5606" pos:column="13">struct <name pos:line="5606" pos:column="20">IDebugSettingsCallback2Vtbl</name>
    <block pos:line="5607" pos:column="5">{<public type="default" pos:line="5607" pos:column="6">
        <function_decl><type><name pos:line="5608" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5610" pos:column="9">HRESULT</name></type> ( <name pos:line="5610" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5610" pos:column="37">*</type:modifier><name pos:line="5610" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5610" pos:column="54">( 
            <param><decl><type><name pos:line="5611" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5611" pos:column="37">*</type:modifier></type> <name pos:line="5611" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5612" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5612" pos:column="24">__RPC__in</name> <name pos:line="5612" pos:column="34">REFIID</name></type> <name pos:line="5612" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5613" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5614" pos:column="13">__RPC__deref_out</name>  <name pos:line="5614" pos:column="31">void</name> <type:modifier pos:line="5614" pos:column="36">*</type:modifier><type:modifier pos:line="5614" pos:column="37">*</type:modifier></type><name pos:line="5614" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5616" pos:column="9">ULONG</name></type> ( <name pos:line="5616" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5616" pos:column="35">*</type:modifier><name pos:line="5616" pos:column="36">AddRef</name> )<parameter_list pos:line="5616" pos:column="44">( 
            <param><decl><type><name pos:line="5617" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5617" pos:column="37">*</type:modifier></type> <name pos:line="5617" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5619" pos:column="9">ULONG</name></type> ( <name pos:line="5619" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5619" pos:column="35">*</type:modifier><name pos:line="5619" pos:column="36">Release</name> )<parameter_list pos:line="5619" pos:column="45">( 
            <param><decl><type><name pos:line="5620" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5620" pos:column="37">*</type:modifier></type> <name pos:line="5620" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5622" pos:column="9">HRESULT</name></type> ( <name pos:line="5622" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5622" pos:column="37">*</type:modifier><name pos:line="5622" pos:column="38">GetMetricGuid</name> )<parameter_list pos:line="5622" pos:column="53">( 
            <param><decl><type><name pos:line="5623" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5623" pos:column="37">*</type:modifier></type> <name pos:line="5623" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5624" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5624" pos:column="24">__RPC__in</name> <name pos:line="5624" pos:column="34">LPCWSTR</name></type> <name pos:line="5624" pos:column="42">pszType</name></decl></param>,
            <comment type="block" pos:line="5625" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5625" pos:column="24">__RPC__in</name> <name pos:line="5625" pos:column="34">REFGUID</name></type> <name pos:line="5625" pos:column="42">guidSection</name></decl></param>,
            <comment type="block" pos:line="5626" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5626" pos:column="24">__RPC__in</name> <name pos:line="5626" pos:column="34">LPCWSTR</name></type> <name pos:line="5626" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5627" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5627" pos:column="25">__RPC__out</name> <name pos:line="5627" pos:column="36">GUID</name> <type:modifier pos:line="5627" pos:column="41">*</type:modifier></type><name pos:line="5627" pos:column="42">pguidValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5629" pos:column="9">HRESULT</name></type> ( <name pos:line="5629" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5629" pos:column="37">*</type:modifier><name pos:line="5629" pos:column="38">GetMetricDword</name> )<parameter_list pos:line="5629" pos:column="54">( 
            <param><decl><type><name pos:line="5630" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5630" pos:column="37">*</type:modifier></type> <name pos:line="5630" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5631" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5631" pos:column="24">__RPC__in</name> <name pos:line="5631" pos:column="34">LPCWSTR</name></type> <name pos:line="5631" pos:column="42">pszType</name></decl></param>,
            <comment type="block" pos:line="5632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5632" pos:column="24">__RPC__in</name> <name pos:line="5632" pos:column="34">REFGUID</name></type> <name pos:line="5632" pos:column="42">guidSection</name></decl></param>,
            <comment type="block" pos:line="5633" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5633" pos:column="24">__RPC__in</name> <name pos:line="5633" pos:column="34">LPCWSTR</name></type> <name pos:line="5633" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5634" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5634" pos:column="25">__RPC__out</name> <name pos:line="5634" pos:column="36">DWORD</name> <type:modifier pos:line="5634" pos:column="42">*</type:modifier></type><name pos:line="5634" pos:column="43">pdwValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5636" pos:column="9">HRESULT</name></type> ( <name pos:line="5636" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5636" pos:column="37">*</type:modifier><name pos:line="5636" pos:column="38">GetEEMetricString</name> )<parameter_list pos:line="5636" pos:column="57">( 
            <param><decl><type><name pos:line="5637" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5637" pos:column="37">*</type:modifier></type> <name pos:line="5637" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5638" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5638" pos:column="24">__RPC__in</name> <name pos:line="5638" pos:column="34">REFGUID</name></type> <name pos:line="5638" pos:column="42">guidLang</name></decl></param>,
            <comment type="block" pos:line="5639" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5639" pos:column="24">__RPC__in</name> <name pos:line="5639" pos:column="34">REFGUID</name></type> <name pos:line="5639" pos:column="42">guidVendor</name></decl></param>,
            <comment type="block" pos:line="5640" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5640" pos:column="24">__RPC__in</name> <name pos:line="5640" pos:column="34">LPCWSTR</name></type> <name pos:line="5640" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5641" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5641" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5641" pos:column="46">BSTR</name> <type:modifier pos:line="5641" pos:column="51">*</type:modifier></type><name pos:line="5641" pos:column="52">pbstrValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5643" pos:column="9">HRESULT</name></type> ( <name pos:line="5643" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5643" pos:column="37">*</type:modifier><name pos:line="5643" pos:column="38">GetEEMetricGuid</name> )<parameter_list pos:line="5643" pos:column="55">( 
            <param><decl><type><name pos:line="5644" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5644" pos:column="37">*</type:modifier></type> <name pos:line="5644" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5645" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5645" pos:column="24">__RPC__in</name> <name pos:line="5645" pos:column="34">REFGUID</name></type> <name pos:line="5645" pos:column="42">guidLang</name></decl></param>,
            <comment type="block" pos:line="5646" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5646" pos:column="24">__RPC__in</name> <name pos:line="5646" pos:column="34">REFGUID</name></type> <name pos:line="5646" pos:column="42">guidVendor</name></decl></param>,
            <comment type="block" pos:line="5647" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5647" pos:column="24">__RPC__in</name> <name pos:line="5647" pos:column="34">LPCWSTR</name></type> <name pos:line="5647" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5648" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5648" pos:column="25">__RPC__out</name> <name pos:line="5648" pos:column="36">GUID</name> <type:modifier pos:line="5648" pos:column="41">*</type:modifier></type><name pos:line="5648" pos:column="42">pguidValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5650" pos:column="9">HRESULT</name></type> ( <name pos:line="5650" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5650" pos:column="37">*</type:modifier><name pos:line="5650" pos:column="38">GetEEMetricFile</name> )<parameter_list pos:line="5650" pos:column="55">( 
            <param><decl><type><name pos:line="5651" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5651" pos:column="37">*</type:modifier></type> <name pos:line="5651" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5652" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5652" pos:column="24">__RPC__in</name> <name pos:line="5652" pos:column="34">REFGUID</name></type> <name pos:line="5652" pos:column="42">guidLang</name></decl></param>,
            <comment type="block" pos:line="5653" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5653" pos:column="24">__RPC__in</name> <name pos:line="5653" pos:column="34">REFGUID</name></type> <name pos:line="5653" pos:column="42">guidVendor</name></decl></param>,
            <comment type="block" pos:line="5654" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5654" pos:column="24">__RPC__in</name> <name pos:line="5654" pos:column="34">LPCWSTR</name></type> <name pos:line="5654" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5655" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5655" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5655" pos:column="46">BSTR</name> <type:modifier pos:line="5655" pos:column="51">*</type:modifier></type><name pos:line="5655" pos:column="52">pbstrValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5657" pos:column="9">HRESULT</name> <argument_list pos:line="5657" pos:column="17">( <argument pos:line="5657" pos:column="19">STDMETHODCALLTYPE *EnumEEs</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5657" pos:column="47">(</op:operator> 
            <name pos:line="5658" pos:column="13">IDebugSettingsCallback2</name> <op:operator pos:line="5658" pos:column="37">*</op:operator> <name pos:line="5658" pos:column="39">This</name><op:operator pos:line="5658" pos:column="43">,</op:operator>
            <comment type="block" pos:line="5659" pos:column="13">/* [in] */</comment> <name pos:line="5659" pos:column="24">DWORD</name> <name pos:line="5659" pos:column="30">celtBuffer</name><op:operator pos:line="5659" pos:column="40">,</op:operator>
            <comment type="block" pos:line="5660" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <macro><name pos:line="5660" pos:column="55">__RPC__inout_ecount_part_opt</name><argument_list pos:line="5660" pos:column="83">(<argument pos:line="5660" pos:column="84">celtBuffer</argument>, <argument pos:line="5660" pos:column="96">*pceltEEs</argument>)</argument_list></macro> <name pos:line="5660" pos:column="107">GUID</name> <op:operator pos:line="5660" pos:column="112">*</op:operator><name pos:line="5660" pos:column="113">rgguidLang</name><op:operator pos:line="5660" pos:column="123">,</op:operator>
            <comment type="block" pos:line="5661" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <macro><name pos:line="5661" pos:column="55">__RPC__inout_ecount_part_opt</name><argument_list pos:line="5661" pos:column="83">(<argument pos:line="5661" pos:column="84">celtBuffer</argument>, <argument pos:line="5661" pos:column="96">*pceltEEs</argument>)</argument_list></macro> <name pos:line="5661" pos:column="107">GUID</name> <op:operator pos:line="5661" pos:column="112">*</op:operator><name pos:line="5661" pos:column="113">rgguidVendor</name><op:operator pos:line="5661" pos:column="125">,</op:operator>
            <comment type="block" pos:line="5662" pos:column="13">/* [out][in] */</comment> <name pos:line="5662" pos:column="29">__RPC__inout</name> <name pos:line="5662" pos:column="42">DWORD</name> <op:operator pos:line="5662" pos:column="48">*</op:operator><name pos:line="5662" pos:column="49">pceltEEs</name><op:operator pos:line="5662" pos:column="57">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="5664" pos:column="9">HRESULT</name></type> ( <name pos:line="5664" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5664" pos:column="37">*</type:modifier><name pos:line="5664" pos:column="38">GetEEMetricDword</name> )<parameter_list pos:line="5664" pos:column="56">( 
            <param><decl><type><name pos:line="5665" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5665" pos:column="37">*</type:modifier></type> <name pos:line="5665" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5666" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5666" pos:column="24">__RPC__in</name> <name pos:line="5666" pos:column="34">REFGUID</name></type> <name pos:line="5666" pos:column="42">guidLang</name></decl></param>,
            <comment type="block" pos:line="5667" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5667" pos:column="24">__RPC__in</name> <name pos:line="5667" pos:column="34">REFGUID</name></type> <name pos:line="5667" pos:column="42">guidVendor</name></decl></param>,
            <comment type="block" pos:line="5668" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5668" pos:column="24">__RPC__in</name> <name pos:line="5668" pos:column="34">LPCWSTR</name></type> <name pos:line="5668" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5669" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5669" pos:column="25">__RPC__out</name> <name pos:line="5669" pos:column="36">DWORD</name> <type:modifier pos:line="5669" pos:column="42">*</type:modifier></type><name pos:line="5669" pos:column="43">pdwValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5671" pos:column="9">HRESULT</name></type> ( <name pos:line="5671" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5671" pos:column="37">*</type:modifier><name pos:line="5671" pos:column="38">GetEELocalObject</name> )<parameter_list pos:line="5671" pos:column="56">( 
            <param><decl><type><name pos:line="5672" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5672" pos:column="37">*</type:modifier></type> <name pos:line="5672" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5673" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5673" pos:column="24">__RPC__in</name> <name pos:line="5673" pos:column="34">REFGUID</name></type> <name pos:line="5673" pos:column="42">guidLang</name></decl></param>,
            <comment type="block" pos:line="5674" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5674" pos:column="24">__RPC__in</name> <name pos:line="5674" pos:column="34">REFGUID</name></type> <name pos:line="5674" pos:column="42">guidVendor</name></decl></param>,
            <comment type="block" pos:line="5675" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5675" pos:column="24">__RPC__in</name> <name pos:line="5675" pos:column="34">LPCWSTR</name></type> <name pos:line="5675" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5676" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5676" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5676" pos:column="46">IUnknown</name> <type:modifier pos:line="5676" pos:column="55">*</type:modifier><type:modifier pos:line="5676" pos:column="56">*</type:modifier></type><name pos:line="5676" pos:column="57">ppUnk</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5678" pos:column="9">HRESULT</name></type> ( <name pos:line="5678" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5678" pos:column="37">*</type:modifier><name pos:line="5678" pos:column="38">GetMetricString</name> )<parameter_list pos:line="5678" pos:column="55">( 
            <param><decl><type><name pos:line="5679" pos:column="13">IDebugSettingsCallback2</name> <type:modifier pos:line="5679" pos:column="37">*</type:modifier></type> <name pos:line="5679" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="5680" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5680" pos:column="24">__RPC__in</name> <name pos:line="5680" pos:column="34">LPCWSTR</name></type> <name pos:line="5680" pos:column="42">pszType</name></decl></param>,
            <comment type="block" pos:line="5681" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5681" pos:column="24">__RPC__in</name> <name pos:line="5681" pos:column="34">REFGUID</name></type> <name pos:line="5681" pos:column="42">guidSection</name></decl></param>,
            <comment type="block" pos:line="5682" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5682" pos:column="24">__RPC__in</name> <name pos:line="5682" pos:column="34">LPCWSTR</name></type> <name pos:line="5682" pos:column="42">pszMetric</name></decl></param>,
            <comment type="block" pos:line="5683" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5683" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="5683" pos:column="46">BSTR</name> <type:modifier pos:line="5683" pos:column="51">*</type:modifier></type><name pos:line="5683" pos:column="52">pbstrValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5685" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5686" pos:column="7">IDebugSettingsCallback2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5688" pos:column="5">interface</name></type> <name pos:line="5688" pos:column="15">IDebugSettingsCallback2</name>
    <argument_list pos:line="5689" pos:column="5">{
        <argument><expr><name pos:line="5690" pos:column="9">CONST_VTBL</name> struct <name pos:line="5690" pos:column="27">IDebugSettingsCallback2Vtbl</name> <op:operator pos:line="5690" pos:column="55">*</op:operator><name pos:line="5690" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5695" pos:column="1">#<cpp:directive pos:line="5695" pos:column="2">ifdef</cpp:directive> <name pos:line="5695" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5698" pos:column="1">#<cpp:directive pos:line="5698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5698" pos:column="9">IDebugSettingsCallback2_QueryInterface</name><parameter_list pos:line="5698" pos:column="47">(<param><type><name pos:line="5698" pos:column="48">This</name></type></param>,<param><type><name pos:line="5698" pos:column="53">riid</name></type></param>,<param><type><name pos:line="5698" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5699" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5701" pos:column="1">#<cpp:directive pos:line="5701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5701" pos:column="9">IDebugSettingsCallback2_AddRef</name><parameter_list pos:line="5701" pos:column="39">(<param><type><name pos:line="5701" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5702" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5704" pos:column="1">#<cpp:directive pos:line="5704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5704" pos:column="9">IDebugSettingsCallback2_Release</name><parameter_list pos:line="5704" pos:column="40">(<param><type><name pos:line="5704" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5705" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5708" pos:column="1">#<cpp:directive pos:line="5708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5708" pos:column="9">IDebugSettingsCallback2_GetMetricGuid</name><parameter_list pos:line="5708" pos:column="46">(<param><type><name pos:line="5708" pos:column="47">This</name></type></param>,<param><type><name pos:line="5708" pos:column="52">pszType</name></type></param>,<param><type><name pos:line="5708" pos:column="60">guidSection</name></type></param>,<param><type><name pos:line="5708" pos:column="72">pszMetric</name></type></param>,<param><type><name pos:line="5708" pos:column="82">pguidValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5709" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMetricGuid(This,pszType,guidSection,pszMetric,pguidValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5711" pos:column="1">#<cpp:directive pos:line="5711" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5711" pos:column="9">IDebugSettingsCallback2_GetMetricDword</name><parameter_list pos:line="5711" pos:column="47">(<param><type><name pos:line="5711" pos:column="48">This</name></type></param>,<param><type><name pos:line="5711" pos:column="53">pszType</name></type></param>,<param><type><name pos:line="5711" pos:column="61">guidSection</name></type></param>,<param><type><name pos:line="5711" pos:column="73">pszMetric</name></type></param>,<param><type><name pos:line="5711" pos:column="83">pdwValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5712" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMetricDword(This,pszType,guidSection,pszMetric,pdwValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5714" pos:column="1">#<cpp:directive pos:line="5714" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5714" pos:column="9">IDebugSettingsCallback2_GetEEMetricString</name><parameter_list pos:line="5714" pos:column="50">(<param><type><name pos:line="5714" pos:column="51">This</name></type></param>,<param><type><name pos:line="5714" pos:column="56">guidLang</name></type></param>,<param><type><name pos:line="5714" pos:column="65">guidVendor</name></type></param>,<param><type><name pos:line="5714" pos:column="76">pszMetric</name></type></param>,<param><type><name pos:line="5714" pos:column="86">pbstrValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5715" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEEMetricString(This,guidLang,guidVendor,pszMetric,pbstrValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5717" pos:column="1">#<cpp:directive pos:line="5717" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5717" pos:column="9">IDebugSettingsCallback2_GetEEMetricGuid</name><parameter_list pos:line="5717" pos:column="48">(<param><type><name pos:line="5717" pos:column="49">This</name></type></param>,<param><type><name pos:line="5717" pos:column="54">guidLang</name></type></param>,<param><type><name pos:line="5717" pos:column="63">guidVendor</name></type></param>,<param><type><name pos:line="5717" pos:column="74">pszMetric</name></type></param>,<param><type><name pos:line="5717" pos:column="84">pguidValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5718" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEEMetricGuid(This,guidLang,guidVendor,pszMetric,pguidValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5720" pos:column="1">#<cpp:directive pos:line="5720" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5720" pos:column="9">IDebugSettingsCallback2_GetEEMetricFile</name><parameter_list pos:line="5720" pos:column="48">(<param><type><name pos:line="5720" pos:column="49">This</name></type></param>,<param><type><name pos:line="5720" pos:column="54">guidLang</name></type></param>,<param><type><name pos:line="5720" pos:column="63">guidVendor</name></type></param>,<param><type><name pos:line="5720" pos:column="74">pszMetric</name></type></param>,<param><type><name pos:line="5720" pos:column="84">pbstrValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5721" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEEMetricFile(This,guidLang,guidVendor,pszMetric,pbstrValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5723" pos:column="1">#<cpp:directive pos:line="5723" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5723" pos:column="9">IDebugSettingsCallback2_EnumEEs</name><parameter_list pos:line="5723" pos:column="40">(<param><type><name pos:line="5723" pos:column="41">This</name></type></param>,<param><type><name pos:line="5723" pos:column="46">celtBuffer</name></type></param>,<param><type><name pos:line="5723" pos:column="57">rgguidLang</name></type></param>,<param><type><name pos:line="5723" pos:column="68">rgguidVendor</name></type></param>,<param><type><name pos:line="5723" pos:column="81">pceltEEs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5724" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumEEs(This,celtBuffer,rgguidLang,rgguidVendor,pceltEEs) )</cpp:value></cpp:define> 

<cpp:define pos:line="5726" pos:column="1">#<cpp:directive pos:line="5726" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5726" pos:column="9">IDebugSettingsCallback2_GetEEMetricDword</name><parameter_list pos:line="5726" pos:column="49">(<param><type><name pos:line="5726" pos:column="50">This</name></type></param>,<param><type><name pos:line="5726" pos:column="55">guidLang</name></type></param>,<param><type><name pos:line="5726" pos:column="64">guidVendor</name></type></param>,<param><type><name pos:line="5726" pos:column="75">pszMetric</name></type></param>,<param><type><name pos:line="5726" pos:column="85">pdwValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5727" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEEMetricDword(This,guidLang,guidVendor,pszMetric,pdwValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="5729" pos:column="1">#<cpp:directive pos:line="5729" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5729" pos:column="9">IDebugSettingsCallback2_GetEELocalObject</name><parameter_list pos:line="5729" pos:column="49">(<param><type><name pos:line="5729" pos:column="50">This</name></type></param>,<param><type><name pos:line="5729" pos:column="55">guidLang</name></type></param>,<param><type><name pos:line="5729" pos:column="64">guidVendor</name></type></param>,<param><type><name pos:line="5729" pos:column="75">pszMetric</name></type></param>,<param><type><name pos:line="5729" pos:column="85">ppUnk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5730" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEELocalObject(This,guidLang,guidVendor,pszMetric,ppUnk) )</cpp:value></cpp:define> 

<cpp:define pos:line="5732" pos:column="1">#<cpp:directive pos:line="5732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5732" pos:column="9">IDebugSettingsCallback2_GetMetricString</name><parameter_list pos:line="5732" pos:column="48">(<param><type><name pos:line="5732" pos:column="49">This</name></type></param>,<param><type><name pos:line="5732" pos:column="54">pszType</name></type></param>,<param><type><name pos:line="5732" pos:column="62">guidSection</name></type></param>,<param><type><name pos:line="5732" pos:column="74">pszMetric</name></type></param>,<param><type><name pos:line="5732" pos:column="84">pbstrValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5733" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMetricString(This,pszType,guidSection,pszMetric,pbstrValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5735" pos:column="1">#<cpp:directive pos:line="5735" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5735" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5738" pos:column="1">#<cpp:directive pos:line="5738" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5738" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5743" pos:column="1">#<cpp:directive pos:line="5743" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5743" pos:column="9">/* __IDebugSettingsCallback2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5746" pos:column="1">#<cpp:directive pos:line="5746" pos:column="2">ifndef</cpp:directive> <name pos:line="5746" pos:column="9">__IDebugEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5747" pos:column="1">#<cpp:directive pos:line="5747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5747" pos:column="9">__IDebugEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5749" pos:column="1">/* interface IDebugEvent2 */</comment>
<comment type="block" pos:line="5750" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5753" pos:column="1">EXTERN_C</name> <specifier pos:line="5753" pos:column="10">const</specifier> <name pos:line="5753" pos:column="16">IID</name></type> <name pos:line="5753" pos:column="20">IID_IDebugEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="5755" pos:column="1">#<cpp:directive pos:line="5755" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5755" pos:column="5">defined</name><argument_list pos:line="5755" pos:column="12">(<argument><expr><name pos:line="5755" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5755" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5755" pos:column="29">!</op:operator><call><name pos:line="5755" pos:column="30">defined</name><argument_list pos:line="5755" pos:column="37">(<argument><expr><name pos:line="5755" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5757" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5757" pos:column="19">(<argument pos:line="5757" pos:column="20">"423238d6-da42-4989-96fb-6bba26e72e09"</argument>)</argument_list></macro>
    <label><name pos:line="5758" pos:column="5">IDebugEvent2</name> :</label> <expr_stmt><expr pos:line="5758" pos:column="20">public <name pos:line="5758" pos:column="27">IUnknown</name>
    <block pos:line="5759" pos:column="5">{
    <expr pos:line="5760" pos:column="5">public<op:operator pos:line="5760" pos:column="11">:</op:operator>
        virtual <name pos:line="5761" pos:column="17">HRESULT</name> <name pos:line="5761" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5761" pos:column="43">GetAttributes</name><argument_list pos:line="5761" pos:column="56">( 
            <comment type="block" pos:line="5762" pos:column="13">/* [out] */</comment> <argument pos:line="5762" pos:column="25">__RPC__out DWORD *pdwAttrib</argument>)</argument_list></macro> <op:operator pos:line="5762" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="5762" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5766" pos:column="1">#<cpp:directive pos:line="5766" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5766" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5768" pos:column="5">typedef <type><struct pos:line="5768" pos:column="13">struct <name pos:line="5768" pos:column="20">IDebugEvent2Vtbl</name>
    <block pos:line="5769" pos:column="5">{<public type="default" pos:line="5769" pos:column="6">
        <function_decl><type><name pos:line="5770" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5772" pos:column="9">HRESULT</name></type> ( <name pos:line="5772" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5772" pos:column="37">*</type:modifier><name pos:line="5772" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5772" pos:column="54">( 
            <param><decl><type><name pos:line="5773" pos:column="13">IDebugEvent2</name> <type:modifier pos:line="5773" pos:column="26">*</type:modifier></type> <name pos:line="5773" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="5774" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5774" pos:column="24">__RPC__in</name> <name pos:line="5774" pos:column="34">REFIID</name></type> <name pos:line="5774" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5775" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5776" pos:column="13">__RPC__deref_out</name>  <name pos:line="5776" pos:column="31">void</name> <type:modifier pos:line="5776" pos:column="36">*</type:modifier><type:modifier pos:line="5776" pos:column="37">*</type:modifier></type><name pos:line="5776" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5778" pos:column="9">ULONG</name></type> ( <name pos:line="5778" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5778" pos:column="35">*</type:modifier><name pos:line="5778" pos:column="36">AddRef</name> )<parameter_list pos:line="5778" pos:column="44">( 
            <param><decl><type><name pos:line="5779" pos:column="13">IDebugEvent2</name> <type:modifier pos:line="5779" pos:column="26">*</type:modifier></type> <name pos:line="5779" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5781" pos:column="9">ULONG</name></type> ( <name pos:line="5781" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5781" pos:column="35">*</type:modifier><name pos:line="5781" pos:column="36">Release</name> )<parameter_list pos:line="5781" pos:column="45">( 
            <param><decl><type><name pos:line="5782" pos:column="13">IDebugEvent2</name> <type:modifier pos:line="5782" pos:column="26">*</type:modifier></type> <name pos:line="5782" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5784" pos:column="9">HRESULT</name></type> ( <name pos:line="5784" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5784" pos:column="37">*</type:modifier><name pos:line="5784" pos:column="38">GetAttributes</name> )<parameter_list pos:line="5784" pos:column="53">( 
            <param><decl><type><name pos:line="5785" pos:column="13">IDebugEvent2</name> <type:modifier pos:line="5785" pos:column="26">*</type:modifier></type> <name pos:line="5785" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="5786" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="5786" pos:column="25">__RPC__out</name> <name pos:line="5786" pos:column="36">DWORD</name> <type:modifier pos:line="5786" pos:column="42">*</type:modifier></type><name pos:line="5786" pos:column="43">pdwAttrib</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5788" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5789" pos:column="7">IDebugEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5791" pos:column="5">interface</name></type> <name pos:line="5791" pos:column="15">IDebugEvent2</name>
    <argument_list pos:line="5792" pos:column="5">{
        <argument><expr><name pos:line="5793" pos:column="9">CONST_VTBL</name> struct <name pos:line="5793" pos:column="27">IDebugEvent2Vtbl</name> <op:operator pos:line="5793" pos:column="44">*</op:operator><name pos:line="5793" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5798" pos:column="1">#<cpp:directive pos:line="5798" pos:column="2">ifdef</cpp:directive> <name pos:line="5798" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5801" pos:column="1">#<cpp:directive pos:line="5801" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5801" pos:column="9">IDebugEvent2_QueryInterface</name><parameter_list pos:line="5801" pos:column="36">(<param><type><name pos:line="5801" pos:column="37">This</name></type></param>,<param><type><name pos:line="5801" pos:column="42">riid</name></type></param>,<param><type><name pos:line="5801" pos:column="47">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5802" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5804" pos:column="1">#<cpp:directive pos:line="5804" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5804" pos:column="9">IDebugEvent2_AddRef</name><parameter_list pos:line="5804" pos:column="28">(<param><type><name pos:line="5804" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5805" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5807" pos:column="1">#<cpp:directive pos:line="5807" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5807" pos:column="9">IDebugEvent2_Release</name><parameter_list pos:line="5807" pos:column="29">(<param><type><name pos:line="5807" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5808" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="5811" pos:column="1">#<cpp:directive pos:line="5811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5811" pos:column="9">IDebugEvent2_GetAttributes</name><parameter_list pos:line="5811" pos:column="35">(<param><type><name pos:line="5811" pos:column="36">This</name></type></param>,<param><type><name pos:line="5811" pos:column="41">pdwAttrib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5812" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAttributes(This,pdwAttrib) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5814" pos:column="1">#<cpp:directive pos:line="5814" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5814" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5817" pos:column="1">#<cpp:directive pos:line="5817" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5817" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5822" pos:column="1">#<cpp:directive pos:line="5822" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5822" pos:column="9">/* __IDebugEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5825" pos:column="1">#<cpp:directive pos:line="5825" pos:column="2">ifndef</cpp:directive> <name pos:line="5825" pos:column="9">__IDebugSessionCreateEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5826" pos:column="1">#<cpp:directive pos:line="5826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5826" pos:column="9">__IDebugSessionCreateEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5828" pos:column="1">/* interface IDebugSessionCreateEvent2 */</comment>
<comment type="block" pos:line="5829" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5832" pos:column="1">EXTERN_C</name> <specifier pos:line="5832" pos:column="10">const</specifier> <name pos:line="5832" pos:column="16">IID</name></type> <name pos:line="5832" pos:column="20">IID_IDebugSessionCreateEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="5834" pos:column="1">#<cpp:directive pos:line="5834" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5834" pos:column="5">defined</name><argument_list pos:line="5834" pos:column="12">(<argument><expr><name pos:line="5834" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5834" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5834" pos:column="29">!</op:operator><call><name pos:line="5834" pos:column="30">defined</name><argument_list pos:line="5834" pos:column="37">(<argument><expr><name pos:line="5834" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5836" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5836" pos:column="19">(<argument pos:line="5836" pos:column="20">"2c2b15b7-fc6d-45b3-9622-29665d964a76"</argument>)</argument_list></macro>
    <label><name pos:line="5837" pos:column="5">IDebugSessionCreateEvent2</name> :</label> <expr_stmt><expr pos:line="5837" pos:column="33">public <name pos:line="5837" pos:column="40">IUnknown</name>
    <block pos:line="5838" pos:column="5">{
    <expr pos:line="5839" pos:column="5">public<op:operator pos:line="5839" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5842" pos:column="1">#<cpp:directive pos:line="5842" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5842" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5844" pos:column="5">typedef <type><struct pos:line="5844" pos:column="13">struct <name pos:line="5844" pos:column="20">IDebugSessionCreateEvent2Vtbl</name>
    <block pos:line="5845" pos:column="5">{<public type="default" pos:line="5845" pos:column="6">
        <function_decl><type><name pos:line="5846" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5848" pos:column="9">HRESULT</name></type> ( <name pos:line="5848" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5848" pos:column="37">*</type:modifier><name pos:line="5848" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5848" pos:column="54">( 
            <param><decl><type><name pos:line="5849" pos:column="13">IDebugSessionCreateEvent2</name> <type:modifier pos:line="5849" pos:column="39">*</type:modifier></type> <name pos:line="5849" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="5850" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5850" pos:column="24">__RPC__in</name> <name pos:line="5850" pos:column="34">REFIID</name></type> <name pos:line="5850" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5851" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5852" pos:column="13">__RPC__deref_out</name>  <name pos:line="5852" pos:column="31">void</name> <type:modifier pos:line="5852" pos:column="36">*</type:modifier><type:modifier pos:line="5852" pos:column="37">*</type:modifier></type><name pos:line="5852" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5854" pos:column="9">ULONG</name></type> ( <name pos:line="5854" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5854" pos:column="35">*</type:modifier><name pos:line="5854" pos:column="36">AddRef</name> )<parameter_list pos:line="5854" pos:column="44">( 
            <param><decl><type><name pos:line="5855" pos:column="13">IDebugSessionCreateEvent2</name> <type:modifier pos:line="5855" pos:column="39">*</type:modifier></type> <name pos:line="5855" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5857" pos:column="9">ULONG</name></type> ( <name pos:line="5857" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5857" pos:column="35">*</type:modifier><name pos:line="5857" pos:column="36">Release</name> )<parameter_list pos:line="5857" pos:column="45">( 
            <param><decl><type><name pos:line="5858" pos:column="13">IDebugSessionCreateEvent2</name> <type:modifier pos:line="5858" pos:column="39">*</type:modifier></type> <name pos:line="5858" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5860" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5861" pos:column="7">IDebugSessionCreateEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5863" pos:column="5">interface</name></type> <name pos:line="5863" pos:column="15">IDebugSessionCreateEvent2</name>
    <argument_list pos:line="5864" pos:column="5">{
        <argument><expr><name pos:line="5865" pos:column="9">CONST_VTBL</name> struct <name pos:line="5865" pos:column="27">IDebugSessionCreateEvent2Vtbl</name> <op:operator pos:line="5865" pos:column="57">*</op:operator><name pos:line="5865" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5870" pos:column="1">#<cpp:directive pos:line="5870" pos:column="2">ifdef</cpp:directive> <name pos:line="5870" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5873" pos:column="1">#<cpp:directive pos:line="5873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5873" pos:column="9">IDebugSessionCreateEvent2_QueryInterface</name><parameter_list pos:line="5873" pos:column="49">(<param><type><name pos:line="5873" pos:column="50">This</name></type></param>,<param><type><name pos:line="5873" pos:column="55">riid</name></type></param>,<param><type><name pos:line="5873" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5874" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5876" pos:column="1">#<cpp:directive pos:line="5876" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5876" pos:column="9">IDebugSessionCreateEvent2_AddRef</name><parameter_list pos:line="5876" pos:column="41">(<param><type><name pos:line="5876" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5877" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5879" pos:column="1">#<cpp:directive pos:line="5879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5879" pos:column="9">IDebugSessionCreateEvent2_Release</name><parameter_list pos:line="5879" pos:column="42">(<param><type><name pos:line="5879" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5880" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="5883" pos:column="1">#<cpp:directive pos:line="5883" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5883" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5886" pos:column="1">#<cpp:directive pos:line="5886" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5886" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5891" pos:column="1">#<cpp:directive pos:line="5891" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5891" pos:column="9">/* __IDebugSessionCreateEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5894" pos:column="1">#<cpp:directive pos:line="5894" pos:column="2">ifndef</cpp:directive> <name pos:line="5894" pos:column="9">__IDebugSessionDestroyEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5895" pos:column="1">#<cpp:directive pos:line="5895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5895" pos:column="9">__IDebugSessionDestroyEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5897" pos:column="1">/* interface IDebugSessionDestroyEvent2 */</comment>
<comment type="block" pos:line="5898" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5901" pos:column="1">EXTERN_C</name> <specifier pos:line="5901" pos:column="10">const</specifier> <name pos:line="5901" pos:column="16">IID</name></type> <name pos:line="5901" pos:column="20">IID_IDebugSessionDestroyEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="5903" pos:column="1">#<cpp:directive pos:line="5903" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5903" pos:column="5">defined</name><argument_list pos:line="5903" pos:column="12">(<argument><expr><name pos:line="5903" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5903" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5903" pos:column="29">!</op:operator><call><name pos:line="5903" pos:column="30">defined</name><argument_list pos:line="5903" pos:column="37">(<argument><expr><name pos:line="5903" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5905" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5905" pos:column="19">(<argument pos:line="5905" pos:column="20">"f199b2c2-88fe-4c5d-a0fd-aa046b0dc0dc"</argument>)</argument_list></macro>
    <label><name pos:line="5906" pos:column="5">IDebugSessionDestroyEvent2</name> :</label> <expr_stmt><expr pos:line="5906" pos:column="34">public <name pos:line="5906" pos:column="41">IUnknown</name>
    <block pos:line="5907" pos:column="5">{
    <expr pos:line="5908" pos:column="5">public<op:operator pos:line="5908" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5911" pos:column="1">#<cpp:directive pos:line="5911" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5911" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5913" pos:column="5">typedef <type><struct pos:line="5913" pos:column="13">struct <name pos:line="5913" pos:column="20">IDebugSessionDestroyEvent2Vtbl</name>
    <block pos:line="5914" pos:column="5">{<public type="default" pos:line="5914" pos:column="6">
        <function_decl><type><name pos:line="5915" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5917" pos:column="9">HRESULT</name></type> ( <name pos:line="5917" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5917" pos:column="37">*</type:modifier><name pos:line="5917" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5917" pos:column="54">( 
            <param><decl><type><name pos:line="5918" pos:column="13">IDebugSessionDestroyEvent2</name> <type:modifier pos:line="5918" pos:column="40">*</type:modifier></type> <name pos:line="5918" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="5919" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5919" pos:column="24">__RPC__in</name> <name pos:line="5919" pos:column="34">REFIID</name></type> <name pos:line="5919" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5920" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5921" pos:column="13">__RPC__deref_out</name>  <name pos:line="5921" pos:column="31">void</name> <type:modifier pos:line="5921" pos:column="36">*</type:modifier><type:modifier pos:line="5921" pos:column="37">*</type:modifier></type><name pos:line="5921" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5923" pos:column="9">ULONG</name></type> ( <name pos:line="5923" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5923" pos:column="35">*</type:modifier><name pos:line="5923" pos:column="36">AddRef</name> )<parameter_list pos:line="5923" pos:column="44">( 
            <param><decl><type><name pos:line="5924" pos:column="13">IDebugSessionDestroyEvent2</name> <type:modifier pos:line="5924" pos:column="40">*</type:modifier></type> <name pos:line="5924" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5926" pos:column="9">ULONG</name></type> ( <name pos:line="5926" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5926" pos:column="35">*</type:modifier><name pos:line="5926" pos:column="36">Release</name> )<parameter_list pos:line="5926" pos:column="45">( 
            <param><decl><type><name pos:line="5927" pos:column="13">IDebugSessionDestroyEvent2</name> <type:modifier pos:line="5927" pos:column="40">*</type:modifier></type> <name pos:line="5927" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5929" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5930" pos:column="7">IDebugSessionDestroyEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5932" pos:column="5">interface</name></type> <name pos:line="5932" pos:column="15">IDebugSessionDestroyEvent2</name>
    <argument_list pos:line="5933" pos:column="5">{
        <argument><expr><name pos:line="5934" pos:column="9">CONST_VTBL</name> struct <name pos:line="5934" pos:column="27">IDebugSessionDestroyEvent2Vtbl</name> <op:operator pos:line="5934" pos:column="58">*</op:operator><name pos:line="5934" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5939" pos:column="1">#<cpp:directive pos:line="5939" pos:column="2">ifdef</cpp:directive> <name pos:line="5939" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5942" pos:column="1">#<cpp:directive pos:line="5942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5942" pos:column="9">IDebugSessionDestroyEvent2_QueryInterface</name><parameter_list pos:line="5942" pos:column="50">(<param><type><name pos:line="5942" pos:column="51">This</name></type></param>,<param><type><name pos:line="5942" pos:column="56">riid</name></type></param>,<param><type><name pos:line="5942" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5943" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="5945" pos:column="1">#<cpp:directive pos:line="5945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5945" pos:column="9">IDebugSessionDestroyEvent2_AddRef</name><parameter_list pos:line="5945" pos:column="42">(<param><type><name pos:line="5945" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5946" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="5948" pos:column="1">#<cpp:directive pos:line="5948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5948" pos:column="9">IDebugSessionDestroyEvent2_Release</name><parameter_list pos:line="5948" pos:column="43">(<param><type><name pos:line="5948" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5949" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="5952" pos:column="1">#<cpp:directive pos:line="5952" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5952" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5955" pos:column="1">#<cpp:directive pos:line="5955" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5955" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5960" pos:column="1">#<cpp:directive pos:line="5960" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5960" pos:column="9">/* __IDebugSessionDestroyEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5963" pos:column="1">#<cpp:directive pos:line="5963" pos:column="2">ifndef</cpp:directive> <name pos:line="5963" pos:column="9">__IDebugEngineCreateEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5964" pos:column="1">#<cpp:directive pos:line="5964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5964" pos:column="9">__IDebugEngineCreateEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5966" pos:column="1">/* interface IDebugEngineCreateEvent2 */</comment>
<comment type="block" pos:line="5967" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="5970" pos:column="1">EXTERN_C</name> <specifier pos:line="5970" pos:column="10">const</specifier> <name pos:line="5970" pos:column="16">IID</name></type> <name pos:line="5970" pos:column="20">IID_IDebugEngineCreateEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="5972" pos:column="1">#<cpp:directive pos:line="5972" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5972" pos:column="5">defined</name><argument_list pos:line="5972" pos:column="12">(<argument><expr><name pos:line="5972" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5972" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5972" pos:column="29">!</op:operator><call><name pos:line="5972" pos:column="30">defined</name><argument_list pos:line="5972" pos:column="37">(<argument><expr><name pos:line="5972" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5974" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5974" pos:column="19">(<argument pos:line="5974" pos:column="20">"fe5b734c-759d-4e59-ab04-f103343bdd06"</argument>)</argument_list></macro>
    <label><name pos:line="5975" pos:column="5">IDebugEngineCreateEvent2</name> :</label> <expr_stmt><expr pos:line="5975" pos:column="32">public <name pos:line="5975" pos:column="39">IUnknown</name>
    <block pos:line="5976" pos:column="5">{
    <expr pos:line="5977" pos:column="5">public<op:operator pos:line="5977" pos:column="11">:</op:operator>
        virtual <name pos:line="5978" pos:column="17">HRESULT</name> <name pos:line="5978" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="5978" pos:column="43">GetEngine</name><argument_list pos:line="5978" pos:column="52">( 
            <comment type="block" pos:line="5979" pos:column="13">/* [out] */</comment> <argument pos:line="5979" pos:column="25">__RPC__deref_out_opt IDebugEngine2 **pEngine</argument>)</argument_list></macro> <op:operator pos:line="5979" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="5979" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5983" pos:column="1">#<cpp:directive pos:line="5983" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5983" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5985" pos:column="5">typedef <type><struct pos:line="5985" pos:column="13">struct <name pos:line="5985" pos:column="20">IDebugEngineCreateEvent2Vtbl</name>
    <block pos:line="5986" pos:column="5">{<public type="default" pos:line="5986" pos:column="6">
        <function_decl><type><name pos:line="5987" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="5989" pos:column="9">HRESULT</name></type> ( <name pos:line="5989" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="5989" pos:column="37">*</type:modifier><name pos:line="5989" pos:column="38">QueryInterface</name> )<parameter_list pos:line="5989" pos:column="54">( 
            <param><decl><type><name pos:line="5990" pos:column="13">IDebugEngineCreateEvent2</name> <type:modifier pos:line="5990" pos:column="38">*</type:modifier></type> <name pos:line="5990" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="5991" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="5991" pos:column="24">__RPC__in</name> <name pos:line="5991" pos:column="34">REFIID</name></type> <name pos:line="5991" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="5992" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="5993" pos:column="13">__RPC__deref_out</name>  <name pos:line="5993" pos:column="31">void</name> <type:modifier pos:line="5993" pos:column="36">*</type:modifier><type:modifier pos:line="5993" pos:column="37">*</type:modifier></type><name pos:line="5993" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5995" pos:column="9">ULONG</name></type> ( <name pos:line="5995" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5995" pos:column="35">*</type:modifier><name pos:line="5995" pos:column="36">AddRef</name> )<parameter_list pos:line="5995" pos:column="44">( 
            <param><decl><type><name pos:line="5996" pos:column="13">IDebugEngineCreateEvent2</name> <type:modifier pos:line="5996" pos:column="38">*</type:modifier></type> <name pos:line="5996" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="5998" pos:column="9">ULONG</name></type> ( <name pos:line="5998" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="5998" pos:column="35">*</type:modifier><name pos:line="5998" pos:column="36">Release</name> )<parameter_list pos:line="5998" pos:column="45">( 
            <param><decl><type><name pos:line="5999" pos:column="13">IDebugEngineCreateEvent2</name> <type:modifier pos:line="5999" pos:column="38">*</type:modifier></type> <name pos:line="5999" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6001" pos:column="9">HRESULT</name></type> ( <name pos:line="6001" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6001" pos:column="37">*</type:modifier><name pos:line="6001" pos:column="38">GetEngine</name> )<parameter_list pos:line="6001" pos:column="49">( 
            <param><decl><type><name pos:line="6002" pos:column="13">IDebugEngineCreateEvent2</name> <type:modifier pos:line="6002" pos:column="38">*</type:modifier></type> <name pos:line="6002" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="6003" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6003" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="6003" pos:column="46">IDebugEngine2</name> <type:modifier pos:line="6003" pos:column="60">*</type:modifier><type:modifier pos:line="6003" pos:column="61">*</type:modifier></type><name pos:line="6003" pos:column="62">pEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6005" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6006" pos:column="7">IDebugEngineCreateEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6008" pos:column="5">interface</name></type> <name pos:line="6008" pos:column="15">IDebugEngineCreateEvent2</name>
    <argument_list pos:line="6009" pos:column="5">{
        <argument><expr><name pos:line="6010" pos:column="9">CONST_VTBL</name> struct <name pos:line="6010" pos:column="27">IDebugEngineCreateEvent2Vtbl</name> <op:operator pos:line="6010" pos:column="56">*</op:operator><name pos:line="6010" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6015" pos:column="1">#<cpp:directive pos:line="6015" pos:column="2">ifdef</cpp:directive> <name pos:line="6015" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6018" pos:column="1">#<cpp:directive pos:line="6018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6018" pos:column="9">IDebugEngineCreateEvent2_QueryInterface</name><parameter_list pos:line="6018" pos:column="48">(<param><type><name pos:line="6018" pos:column="49">This</name></type></param>,<param><type><name pos:line="6018" pos:column="54">riid</name></type></param>,<param><type><name pos:line="6018" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6019" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6021" pos:column="1">#<cpp:directive pos:line="6021" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6021" pos:column="9">IDebugEngineCreateEvent2_AddRef</name><parameter_list pos:line="6021" pos:column="40">(<param><type><name pos:line="6021" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6022" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6024" pos:column="1">#<cpp:directive pos:line="6024" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6024" pos:column="9">IDebugEngineCreateEvent2_Release</name><parameter_list pos:line="6024" pos:column="41">(<param><type><name pos:line="6024" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6025" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6028" pos:column="1">#<cpp:directive pos:line="6028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6028" pos:column="9">IDebugEngineCreateEvent2_GetEngine</name><parameter_list pos:line="6028" pos:column="43">(<param><type><name pos:line="6028" pos:column="44">This</name></type></param>,<param><type><name pos:line="6028" pos:column="49">pEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6029" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngine(This,pEngine) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6031" pos:column="1">#<cpp:directive pos:line="6031" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6031" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6034" pos:column="1">#<cpp:directive pos:line="6034" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6034" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6039" pos:column="1">#<cpp:directive pos:line="6039" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6039" pos:column="9">/* __IDebugEngineCreateEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6042" pos:column="1">#<cpp:directive pos:line="6042" pos:column="2">ifndef</cpp:directive> <name pos:line="6042" pos:column="9">__IDebugProcessCreateEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6043" pos:column="1">#<cpp:directive pos:line="6043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6043" pos:column="9">__IDebugProcessCreateEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6045" pos:column="1">/* interface IDebugProcessCreateEvent2 */</comment>
<comment type="block" pos:line="6046" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6049" pos:column="1">EXTERN_C</name> <specifier pos:line="6049" pos:column="10">const</specifier> <name pos:line="6049" pos:column="16">IID</name></type> <name pos:line="6049" pos:column="20">IID_IDebugProcessCreateEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6051" pos:column="1">#<cpp:directive pos:line="6051" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6051" pos:column="5">defined</name><argument_list pos:line="6051" pos:column="12">(<argument><expr><name pos:line="6051" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6051" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6051" pos:column="29">!</op:operator><call><name pos:line="6051" pos:column="30">defined</name><argument_list pos:line="6051" pos:column="37">(<argument><expr><name pos:line="6051" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6053" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6053" pos:column="19">(<argument pos:line="6053" pos:column="20">"bac3780f-04da-4726-901c-ba6a4633e1ca"</argument>)</argument_list></macro>
    <label><name pos:line="6054" pos:column="5">IDebugProcessCreateEvent2</name> :</label> <expr_stmt><expr pos:line="6054" pos:column="33">public <name pos:line="6054" pos:column="40">IUnknown</name>
    <block pos:line="6055" pos:column="5">{
    <expr pos:line="6056" pos:column="5">public<op:operator pos:line="6056" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6059" pos:column="1">#<cpp:directive pos:line="6059" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6059" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6061" pos:column="5">typedef <type><struct pos:line="6061" pos:column="13">struct <name pos:line="6061" pos:column="20">IDebugProcessCreateEvent2Vtbl</name>
    <block pos:line="6062" pos:column="5">{<public type="default" pos:line="6062" pos:column="6">
        <function_decl><type><name pos:line="6063" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6065" pos:column="9">HRESULT</name></type> ( <name pos:line="6065" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6065" pos:column="37">*</type:modifier><name pos:line="6065" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6065" pos:column="54">( 
            <param><decl><type><name pos:line="6066" pos:column="13">IDebugProcessCreateEvent2</name> <type:modifier pos:line="6066" pos:column="39">*</type:modifier></type> <name pos:line="6066" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="6067" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6067" pos:column="24">__RPC__in</name> <name pos:line="6067" pos:column="34">REFIID</name></type> <name pos:line="6067" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6068" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6069" pos:column="13">__RPC__deref_out</name>  <name pos:line="6069" pos:column="31">void</name> <type:modifier pos:line="6069" pos:column="36">*</type:modifier><type:modifier pos:line="6069" pos:column="37">*</type:modifier></type><name pos:line="6069" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6071" pos:column="9">ULONG</name></type> ( <name pos:line="6071" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6071" pos:column="35">*</type:modifier><name pos:line="6071" pos:column="36">AddRef</name> )<parameter_list pos:line="6071" pos:column="44">( 
            <param><decl><type><name pos:line="6072" pos:column="13">IDebugProcessCreateEvent2</name> <type:modifier pos:line="6072" pos:column="39">*</type:modifier></type> <name pos:line="6072" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6074" pos:column="9">ULONG</name></type> ( <name pos:line="6074" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6074" pos:column="35">*</type:modifier><name pos:line="6074" pos:column="36">Release</name> )<parameter_list pos:line="6074" pos:column="45">( 
            <param><decl><type><name pos:line="6075" pos:column="13">IDebugProcessCreateEvent2</name> <type:modifier pos:line="6075" pos:column="39">*</type:modifier></type> <name pos:line="6075" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6077" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6078" pos:column="7">IDebugProcessCreateEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6080" pos:column="5">interface</name></type> <name pos:line="6080" pos:column="15">IDebugProcessCreateEvent2</name>
    <argument_list pos:line="6081" pos:column="5">{
        <argument><expr><name pos:line="6082" pos:column="9">CONST_VTBL</name> struct <name pos:line="6082" pos:column="27">IDebugProcessCreateEvent2Vtbl</name> <op:operator pos:line="6082" pos:column="57">*</op:operator><name pos:line="6082" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6087" pos:column="1">#<cpp:directive pos:line="6087" pos:column="2">ifdef</cpp:directive> <name pos:line="6087" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6090" pos:column="1">#<cpp:directive pos:line="6090" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6090" pos:column="9">IDebugProcessCreateEvent2_QueryInterface</name><parameter_list pos:line="6090" pos:column="49">(<param><type><name pos:line="6090" pos:column="50">This</name></type></param>,<param><type><name pos:line="6090" pos:column="55">riid</name></type></param>,<param><type><name pos:line="6090" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6091" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6093" pos:column="1">#<cpp:directive pos:line="6093" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6093" pos:column="9">IDebugProcessCreateEvent2_AddRef</name><parameter_list pos:line="6093" pos:column="41">(<param><type><name pos:line="6093" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6094" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6096" pos:column="1">#<cpp:directive pos:line="6096" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6096" pos:column="9">IDebugProcessCreateEvent2_Release</name><parameter_list pos:line="6096" pos:column="42">(<param><type><name pos:line="6096" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6097" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6100" pos:column="1">#<cpp:directive pos:line="6100" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6100" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6103" pos:column="1">#<cpp:directive pos:line="6103" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6103" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6108" pos:column="1">#<cpp:directive pos:line="6108" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6108" pos:column="9">/* __IDebugProcessCreateEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6111" pos:column="1">#<cpp:directive pos:line="6111" pos:column="2">ifndef</cpp:directive> <name pos:line="6111" pos:column="9">__IDebugProcessDestroyEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6112" pos:column="1">#<cpp:directive pos:line="6112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6112" pos:column="9">__IDebugProcessDestroyEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6114" pos:column="1">/* interface IDebugProcessDestroyEvent2 */</comment>
<comment type="block" pos:line="6115" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6118" pos:column="1">EXTERN_C</name> <specifier pos:line="6118" pos:column="10">const</specifier> <name pos:line="6118" pos:column="16">IID</name></type> <name pos:line="6118" pos:column="20">IID_IDebugProcessDestroyEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6120" pos:column="1">#<cpp:directive pos:line="6120" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6120" pos:column="5">defined</name><argument_list pos:line="6120" pos:column="12">(<argument><expr><name pos:line="6120" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6120" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6120" pos:column="29">!</op:operator><call><name pos:line="6120" pos:column="30">defined</name><argument_list pos:line="6120" pos:column="37">(<argument><expr><name pos:line="6120" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6122" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6122" pos:column="19">(<argument pos:line="6122" pos:column="20">"3e2a0832-17e1-4886-8c0e-204da242995f"</argument>)</argument_list></macro>
    <label><name pos:line="6123" pos:column="5">IDebugProcessDestroyEvent2</name> :</label> <expr_stmt><expr pos:line="6123" pos:column="34">public <name pos:line="6123" pos:column="41">IUnknown</name>
    <block pos:line="6124" pos:column="5">{
    <expr pos:line="6125" pos:column="5">public<op:operator pos:line="6125" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6128" pos:column="1">#<cpp:directive pos:line="6128" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6128" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6130" pos:column="5">typedef <type><struct pos:line="6130" pos:column="13">struct <name pos:line="6130" pos:column="20">IDebugProcessDestroyEvent2Vtbl</name>
    <block pos:line="6131" pos:column="5">{<public type="default" pos:line="6131" pos:column="6">
        <function_decl><type><name pos:line="6132" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6134" pos:column="9">HRESULT</name></type> ( <name pos:line="6134" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6134" pos:column="37">*</type:modifier><name pos:line="6134" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6134" pos:column="54">( 
            <param><decl><type><name pos:line="6135" pos:column="13">IDebugProcessDestroyEvent2</name> <type:modifier pos:line="6135" pos:column="40">*</type:modifier></type> <name pos:line="6135" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="6136" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6136" pos:column="24">__RPC__in</name> <name pos:line="6136" pos:column="34">REFIID</name></type> <name pos:line="6136" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6137" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6138" pos:column="13">__RPC__deref_out</name>  <name pos:line="6138" pos:column="31">void</name> <type:modifier pos:line="6138" pos:column="36">*</type:modifier><type:modifier pos:line="6138" pos:column="37">*</type:modifier></type><name pos:line="6138" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6140" pos:column="9">ULONG</name></type> ( <name pos:line="6140" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6140" pos:column="35">*</type:modifier><name pos:line="6140" pos:column="36">AddRef</name> )<parameter_list pos:line="6140" pos:column="44">( 
            <param><decl><type><name pos:line="6141" pos:column="13">IDebugProcessDestroyEvent2</name> <type:modifier pos:line="6141" pos:column="40">*</type:modifier></type> <name pos:line="6141" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6143" pos:column="9">ULONG</name></type> ( <name pos:line="6143" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6143" pos:column="35">*</type:modifier><name pos:line="6143" pos:column="36">Release</name> )<parameter_list pos:line="6143" pos:column="45">( 
            <param><decl><type><name pos:line="6144" pos:column="13">IDebugProcessDestroyEvent2</name> <type:modifier pos:line="6144" pos:column="40">*</type:modifier></type> <name pos:line="6144" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6146" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6147" pos:column="7">IDebugProcessDestroyEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6149" pos:column="5">interface</name></type> <name pos:line="6149" pos:column="15">IDebugProcessDestroyEvent2</name>
    <argument_list pos:line="6150" pos:column="5">{
        <argument><expr><name pos:line="6151" pos:column="9">CONST_VTBL</name> struct <name pos:line="6151" pos:column="27">IDebugProcessDestroyEvent2Vtbl</name> <op:operator pos:line="6151" pos:column="58">*</op:operator><name pos:line="6151" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6156" pos:column="1">#<cpp:directive pos:line="6156" pos:column="2">ifdef</cpp:directive> <name pos:line="6156" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6159" pos:column="1">#<cpp:directive pos:line="6159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6159" pos:column="9">IDebugProcessDestroyEvent2_QueryInterface</name><parameter_list pos:line="6159" pos:column="50">(<param><type><name pos:line="6159" pos:column="51">This</name></type></param>,<param><type><name pos:line="6159" pos:column="56">riid</name></type></param>,<param><type><name pos:line="6159" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6160" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6162" pos:column="1">#<cpp:directive pos:line="6162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6162" pos:column="9">IDebugProcessDestroyEvent2_AddRef</name><parameter_list pos:line="6162" pos:column="42">(<param><type><name pos:line="6162" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6163" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6165" pos:column="1">#<cpp:directive pos:line="6165" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6165" pos:column="9">IDebugProcessDestroyEvent2_Release</name><parameter_list pos:line="6165" pos:column="43">(<param><type><name pos:line="6165" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6166" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6169" pos:column="1">#<cpp:directive pos:line="6169" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6169" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6172" pos:column="1">#<cpp:directive pos:line="6172" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6172" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6177" pos:column="1">#<cpp:directive pos:line="6177" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6177" pos:column="9">/* __IDebugProcessDestroyEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6180" pos:column="1">#<cpp:directive pos:line="6180" pos:column="2">ifndef</cpp:directive> <name pos:line="6180" pos:column="9">__IDebugProgramCreateEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6181" pos:column="1">#<cpp:directive pos:line="6181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6181" pos:column="9">__IDebugProgramCreateEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6183" pos:column="1">/* interface IDebugProgramCreateEvent2 */</comment>
<comment type="block" pos:line="6184" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6187" pos:column="1">EXTERN_C</name> <specifier pos:line="6187" pos:column="10">const</specifier> <name pos:line="6187" pos:column="16">IID</name></type> <name pos:line="6187" pos:column="20">IID_IDebugProgramCreateEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6189" pos:column="1">#<cpp:directive pos:line="6189" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6189" pos:column="5">defined</name><argument_list pos:line="6189" pos:column="12">(<argument><expr><name pos:line="6189" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6189" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6189" pos:column="29">!</op:operator><call><name pos:line="6189" pos:column="30">defined</name><argument_list pos:line="6189" pos:column="37">(<argument><expr><name pos:line="6189" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6191" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6191" pos:column="19">(<argument pos:line="6191" pos:column="20">"96cd11ee-ecd4-4e89-957e-b5d496fc4139"</argument>)</argument_list></macro>
    <label><name pos:line="6192" pos:column="5">IDebugProgramCreateEvent2</name> :</label> <expr_stmt><expr pos:line="6192" pos:column="33">public <name pos:line="6192" pos:column="40">IUnknown</name>
    <block pos:line="6193" pos:column="5">{
    <expr pos:line="6194" pos:column="5">public<op:operator pos:line="6194" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6197" pos:column="1">#<cpp:directive pos:line="6197" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6197" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6199" pos:column="5">typedef <type><struct pos:line="6199" pos:column="13">struct <name pos:line="6199" pos:column="20">IDebugProgramCreateEvent2Vtbl</name>
    <block pos:line="6200" pos:column="5">{<public type="default" pos:line="6200" pos:column="6">
        <function_decl><type><name pos:line="6201" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6203" pos:column="9">HRESULT</name></type> ( <name pos:line="6203" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6203" pos:column="37">*</type:modifier><name pos:line="6203" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6203" pos:column="54">( 
            <param><decl><type><name pos:line="6204" pos:column="13">IDebugProgramCreateEvent2</name> <type:modifier pos:line="6204" pos:column="39">*</type:modifier></type> <name pos:line="6204" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="6205" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6205" pos:column="24">__RPC__in</name> <name pos:line="6205" pos:column="34">REFIID</name></type> <name pos:line="6205" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6206" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6207" pos:column="13">__RPC__deref_out</name>  <name pos:line="6207" pos:column="31">void</name> <type:modifier pos:line="6207" pos:column="36">*</type:modifier><type:modifier pos:line="6207" pos:column="37">*</type:modifier></type><name pos:line="6207" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6209" pos:column="9">ULONG</name></type> ( <name pos:line="6209" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6209" pos:column="35">*</type:modifier><name pos:line="6209" pos:column="36">AddRef</name> )<parameter_list pos:line="6209" pos:column="44">( 
            <param><decl><type><name pos:line="6210" pos:column="13">IDebugProgramCreateEvent2</name> <type:modifier pos:line="6210" pos:column="39">*</type:modifier></type> <name pos:line="6210" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6212" pos:column="9">ULONG</name></type> ( <name pos:line="6212" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6212" pos:column="35">*</type:modifier><name pos:line="6212" pos:column="36">Release</name> )<parameter_list pos:line="6212" pos:column="45">( 
            <param><decl><type><name pos:line="6213" pos:column="13">IDebugProgramCreateEvent2</name> <type:modifier pos:line="6213" pos:column="39">*</type:modifier></type> <name pos:line="6213" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6215" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6216" pos:column="7">IDebugProgramCreateEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6218" pos:column="5">interface</name></type> <name pos:line="6218" pos:column="15">IDebugProgramCreateEvent2</name>
    <argument_list pos:line="6219" pos:column="5">{
        <argument><expr><name pos:line="6220" pos:column="9">CONST_VTBL</name> struct <name pos:line="6220" pos:column="27">IDebugProgramCreateEvent2Vtbl</name> <op:operator pos:line="6220" pos:column="57">*</op:operator><name pos:line="6220" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6225" pos:column="1">#<cpp:directive pos:line="6225" pos:column="2">ifdef</cpp:directive> <name pos:line="6225" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6228" pos:column="1">#<cpp:directive pos:line="6228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6228" pos:column="9">IDebugProgramCreateEvent2_QueryInterface</name><parameter_list pos:line="6228" pos:column="49">(<param><type><name pos:line="6228" pos:column="50">This</name></type></param>,<param><type><name pos:line="6228" pos:column="55">riid</name></type></param>,<param><type><name pos:line="6228" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6229" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6231" pos:column="1">#<cpp:directive pos:line="6231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6231" pos:column="9">IDebugProgramCreateEvent2_AddRef</name><parameter_list pos:line="6231" pos:column="41">(<param><type><name pos:line="6231" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6232" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6234" pos:column="1">#<cpp:directive pos:line="6234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6234" pos:column="9">IDebugProgramCreateEvent2_Release</name><parameter_list pos:line="6234" pos:column="42">(<param><type><name pos:line="6234" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6235" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6238" pos:column="1">#<cpp:directive pos:line="6238" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6238" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6241" pos:column="1">#<cpp:directive pos:line="6241" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6241" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6246" pos:column="1">#<cpp:directive pos:line="6246" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6246" pos:column="9">/* __IDebugProgramCreateEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6249" pos:column="1">#<cpp:directive pos:line="6249" pos:column="2">ifndef</cpp:directive> <name pos:line="6249" pos:column="9">__IDebugProgramDestroyEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6250" pos:column="1">#<cpp:directive pos:line="6250" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6250" pos:column="9">__IDebugProgramDestroyEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6252" pos:column="1">/* interface IDebugProgramDestroyEvent2 */</comment>
<comment type="block" pos:line="6253" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6256" pos:column="1">EXTERN_C</name> <specifier pos:line="6256" pos:column="10">const</specifier> <name pos:line="6256" pos:column="16">IID</name></type> <name pos:line="6256" pos:column="20">IID_IDebugProgramDestroyEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6258" pos:column="1">#<cpp:directive pos:line="6258" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6258" pos:column="5">defined</name><argument_list pos:line="6258" pos:column="12">(<argument><expr><name pos:line="6258" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6258" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6258" pos:column="29">!</op:operator><call><name pos:line="6258" pos:column="30">defined</name><argument_list pos:line="6258" pos:column="37">(<argument><expr><name pos:line="6258" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6260" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6260" pos:column="19">(<argument pos:line="6260" pos:column="20">"e147e9e3-6440-4073-a7b7-a65592c714b5"</argument>)</argument_list></macro>
    <label><name pos:line="6261" pos:column="5">IDebugProgramDestroyEvent2</name> :</label> <expr_stmt><expr pos:line="6261" pos:column="34">public <name pos:line="6261" pos:column="41">IUnknown</name>
    <block pos:line="6262" pos:column="5">{
    <expr pos:line="6263" pos:column="5">public<op:operator pos:line="6263" pos:column="11">:</op:operator>
        virtual <name pos:line="6264" pos:column="17">HRESULT</name> <name pos:line="6264" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6264" pos:column="43">GetExitCode</name><argument_list pos:line="6264" pos:column="54">( 
            <comment type="block" pos:line="6265" pos:column="13">/* [out] */</comment> <argument pos:line="6265" pos:column="25">__RPC__out DWORD *pdwExit</argument>)</argument_list></macro> <op:operator pos:line="6265" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="6265" pos:column="54">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6269" pos:column="1">#<cpp:directive pos:line="6269" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6269" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6271" pos:column="5">typedef <type><struct pos:line="6271" pos:column="13">struct <name pos:line="6271" pos:column="20">IDebugProgramDestroyEvent2Vtbl</name>
    <block pos:line="6272" pos:column="5">{<public type="default" pos:line="6272" pos:column="6">
        <function_decl><type><name pos:line="6273" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6275" pos:column="9">HRESULT</name></type> ( <name pos:line="6275" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6275" pos:column="37">*</type:modifier><name pos:line="6275" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6275" pos:column="54">( 
            <param><decl><type><name pos:line="6276" pos:column="13">IDebugProgramDestroyEvent2</name> <type:modifier pos:line="6276" pos:column="40">*</type:modifier></type> <name pos:line="6276" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="6277" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6277" pos:column="24">__RPC__in</name> <name pos:line="6277" pos:column="34">REFIID</name></type> <name pos:line="6277" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6278" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6279" pos:column="13">__RPC__deref_out</name>  <name pos:line="6279" pos:column="31">void</name> <type:modifier pos:line="6279" pos:column="36">*</type:modifier><type:modifier pos:line="6279" pos:column="37">*</type:modifier></type><name pos:line="6279" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6281" pos:column="9">ULONG</name></type> ( <name pos:line="6281" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6281" pos:column="35">*</type:modifier><name pos:line="6281" pos:column="36">AddRef</name> )<parameter_list pos:line="6281" pos:column="44">( 
            <param><decl><type><name pos:line="6282" pos:column="13">IDebugProgramDestroyEvent2</name> <type:modifier pos:line="6282" pos:column="40">*</type:modifier></type> <name pos:line="6282" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6284" pos:column="9">ULONG</name></type> ( <name pos:line="6284" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6284" pos:column="35">*</type:modifier><name pos:line="6284" pos:column="36">Release</name> )<parameter_list pos:line="6284" pos:column="45">( 
            <param><decl><type><name pos:line="6285" pos:column="13">IDebugProgramDestroyEvent2</name> <type:modifier pos:line="6285" pos:column="40">*</type:modifier></type> <name pos:line="6285" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6287" pos:column="9">HRESULT</name></type> ( <name pos:line="6287" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6287" pos:column="37">*</type:modifier><name pos:line="6287" pos:column="38">GetExitCode</name> )<parameter_list pos:line="6287" pos:column="51">( 
            <param><decl><type><name pos:line="6288" pos:column="13">IDebugProgramDestroyEvent2</name> <type:modifier pos:line="6288" pos:column="40">*</type:modifier></type> <name pos:line="6288" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="6289" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6289" pos:column="25">__RPC__out</name> <name pos:line="6289" pos:column="36">DWORD</name> <type:modifier pos:line="6289" pos:column="42">*</type:modifier></type><name pos:line="6289" pos:column="43">pdwExit</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6291" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6292" pos:column="7">IDebugProgramDestroyEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6294" pos:column="5">interface</name></type> <name pos:line="6294" pos:column="15">IDebugProgramDestroyEvent2</name>
    <argument_list pos:line="6295" pos:column="5">{
        <argument><expr><name pos:line="6296" pos:column="9">CONST_VTBL</name> struct <name pos:line="6296" pos:column="27">IDebugProgramDestroyEvent2Vtbl</name> <op:operator pos:line="6296" pos:column="58">*</op:operator><name pos:line="6296" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6301" pos:column="1">#<cpp:directive pos:line="6301" pos:column="2">ifdef</cpp:directive> <name pos:line="6301" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6304" pos:column="1">#<cpp:directive pos:line="6304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6304" pos:column="9">IDebugProgramDestroyEvent2_QueryInterface</name><parameter_list pos:line="6304" pos:column="50">(<param><type><name pos:line="6304" pos:column="51">This</name></type></param>,<param><type><name pos:line="6304" pos:column="56">riid</name></type></param>,<param><type><name pos:line="6304" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6305" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6307" pos:column="1">#<cpp:directive pos:line="6307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6307" pos:column="9">IDebugProgramDestroyEvent2_AddRef</name><parameter_list pos:line="6307" pos:column="42">(<param><type><name pos:line="6307" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6308" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6310" pos:column="1">#<cpp:directive pos:line="6310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6310" pos:column="9">IDebugProgramDestroyEvent2_Release</name><parameter_list pos:line="6310" pos:column="43">(<param><type><name pos:line="6310" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6311" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6314" pos:column="1">#<cpp:directive pos:line="6314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6314" pos:column="9">IDebugProgramDestroyEvent2_GetExitCode</name><parameter_list pos:line="6314" pos:column="47">(<param><type><name pos:line="6314" pos:column="48">This</name></type></param>,<param><type><name pos:line="6314" pos:column="53">pdwExit</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6315" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExitCode(This,pdwExit) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6317" pos:column="1">#<cpp:directive pos:line="6317" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6317" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6320" pos:column="1">#<cpp:directive pos:line="6320" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6320" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6325" pos:column="1">#<cpp:directive pos:line="6325" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6325" pos:column="9">/* __IDebugProgramDestroyEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6328" pos:column="1">#<cpp:directive pos:line="6328" pos:column="2">ifndef</cpp:directive> <name pos:line="6328" pos:column="9">__IDebugProgramDestroyEventFlags2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6329" pos:column="1">#<cpp:directive pos:line="6329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6329" pos:column="9">__IDebugProgramDestroyEventFlags2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6331" pos:column="1">/* interface IDebugProgramDestroyEventFlags2 */</comment>
<comment type="block" pos:line="6332" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="6335" pos:column="1">enum <name pos:line="6335" pos:column="6">enum_PROGRAM_DESTROY_FLAGS</name>
    <block pos:line="6336" pos:column="5">{	<decl><name pos:line="6336" pos:column="9">PROGRAM_DESTROY_CONTINUE_DEBUGGING</name>	<init pos:line="6336" pos:column="49">= <expr><lit:literal type="number" pos:line="6336" pos:column="51">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="6338" pos:column="1">typedef <type><name pos:line="6338" pos:column="9">DWORD</name></type> <name pos:line="6338" pos:column="15">PROGRAM_DESTROY_FLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="6341" pos:column="1">EXTERN_C</name> <specifier pos:line="6341" pos:column="10">const</specifier> <name pos:line="6341" pos:column="16">IID</name></type> <name pos:line="6341" pos:column="20">IID_IDebugProgramDestroyEventFlags2</name></decl>;</decl_stmt>

<cpp:if pos:line="6343" pos:column="1">#<cpp:directive pos:line="6343" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6343" pos:column="5">defined</name><argument_list pos:line="6343" pos:column="12">(<argument><expr><name pos:line="6343" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6343" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6343" pos:column="29">!</op:operator><call><name pos:line="6343" pos:column="30">defined</name><argument_list pos:line="6343" pos:column="37">(<argument><expr><name pos:line="6343" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6345" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6345" pos:column="19">(<argument pos:line="6345" pos:column="20">"7e072bee-24e7-43eb-9bce-06402c70e018"</argument>)</argument_list></macro>
    <label><name pos:line="6346" pos:column="5">IDebugProgramDestroyEventFlags2</name> :</label> <expr_stmt><expr pos:line="6346" pos:column="39">public <name pos:line="6346" pos:column="46">IUnknown</name>
    <block pos:line="6347" pos:column="5">{
    <expr pos:line="6348" pos:column="5">public<op:operator pos:line="6348" pos:column="11">:</op:operator>
        virtual <name pos:line="6349" pos:column="17">HRESULT</name> <name pos:line="6349" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6349" pos:column="43">GetFlags</name><argument_list pos:line="6349" pos:column="51">( 
            <comment type="block" pos:line="6350" pos:column="13">/* [out] */</comment> <argument pos:line="6350" pos:column="25">__RPC__out PROGRAM_DESTROY_FLAGS *pdwFlags</argument>)</argument_list></macro> <op:operator pos:line="6350" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="6350" pos:column="71">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6354" pos:column="1">#<cpp:directive pos:line="6354" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6354" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6356" pos:column="5">typedef <type><struct pos:line="6356" pos:column="13">struct <name pos:line="6356" pos:column="20">IDebugProgramDestroyEventFlags2Vtbl</name>
    <block pos:line="6357" pos:column="5">{<public type="default" pos:line="6357" pos:column="6">
        <function_decl><type><name pos:line="6358" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6360" pos:column="9">HRESULT</name></type> ( <name pos:line="6360" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6360" pos:column="37">*</type:modifier><name pos:line="6360" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6360" pos:column="54">( 
            <param><decl><type><name pos:line="6361" pos:column="13">IDebugProgramDestroyEventFlags2</name> <type:modifier pos:line="6361" pos:column="45">*</type:modifier></type> <name pos:line="6361" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="6362" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6362" pos:column="24">__RPC__in</name> <name pos:line="6362" pos:column="34">REFIID</name></type> <name pos:line="6362" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6363" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6364" pos:column="13">__RPC__deref_out</name>  <name pos:line="6364" pos:column="31">void</name> <type:modifier pos:line="6364" pos:column="36">*</type:modifier><type:modifier pos:line="6364" pos:column="37">*</type:modifier></type><name pos:line="6364" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6366" pos:column="9">ULONG</name></type> ( <name pos:line="6366" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6366" pos:column="35">*</type:modifier><name pos:line="6366" pos:column="36">AddRef</name> )<parameter_list pos:line="6366" pos:column="44">( 
            <param><decl><type><name pos:line="6367" pos:column="13">IDebugProgramDestroyEventFlags2</name> <type:modifier pos:line="6367" pos:column="45">*</type:modifier></type> <name pos:line="6367" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6369" pos:column="9">ULONG</name></type> ( <name pos:line="6369" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6369" pos:column="35">*</type:modifier><name pos:line="6369" pos:column="36">Release</name> )<parameter_list pos:line="6369" pos:column="45">( 
            <param><decl><type><name pos:line="6370" pos:column="13">IDebugProgramDestroyEventFlags2</name> <type:modifier pos:line="6370" pos:column="45">*</type:modifier></type> <name pos:line="6370" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6372" pos:column="9">HRESULT</name></type> ( <name pos:line="6372" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6372" pos:column="37">*</type:modifier><name pos:line="6372" pos:column="38">GetFlags</name> )<parameter_list pos:line="6372" pos:column="48">( 
            <param><decl><type><name pos:line="6373" pos:column="13">IDebugProgramDestroyEventFlags2</name> <type:modifier pos:line="6373" pos:column="45">*</type:modifier></type> <name pos:line="6373" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="6374" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6374" pos:column="25">__RPC__out</name> <name pos:line="6374" pos:column="36">PROGRAM_DESTROY_FLAGS</name> <type:modifier pos:line="6374" pos:column="58">*</type:modifier></type><name pos:line="6374" pos:column="59">pdwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6376" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6377" pos:column="7">IDebugProgramDestroyEventFlags2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6379" pos:column="5">interface</name></type> <name pos:line="6379" pos:column="15">IDebugProgramDestroyEventFlags2</name>
    <argument_list pos:line="6380" pos:column="5">{
        <argument><expr><name pos:line="6381" pos:column="9">CONST_VTBL</name> struct <name pos:line="6381" pos:column="27">IDebugProgramDestroyEventFlags2Vtbl</name> <op:operator pos:line="6381" pos:column="63">*</op:operator><name pos:line="6381" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6386" pos:column="1">#<cpp:directive pos:line="6386" pos:column="2">ifdef</cpp:directive> <name pos:line="6386" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6389" pos:column="1">#<cpp:directive pos:line="6389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6389" pos:column="9">IDebugProgramDestroyEventFlags2_QueryInterface</name><parameter_list pos:line="6389" pos:column="55">(<param><type><name pos:line="6389" pos:column="56">This</name></type></param>,<param><type><name pos:line="6389" pos:column="61">riid</name></type></param>,<param><type><name pos:line="6389" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6390" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6392" pos:column="1">#<cpp:directive pos:line="6392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6392" pos:column="9">IDebugProgramDestroyEventFlags2_AddRef</name><parameter_list pos:line="6392" pos:column="47">(<param><type><name pos:line="6392" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6393" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6395" pos:column="1">#<cpp:directive pos:line="6395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6395" pos:column="9">IDebugProgramDestroyEventFlags2_Release</name><parameter_list pos:line="6395" pos:column="48">(<param><type><name pos:line="6395" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6396" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6399" pos:column="1">#<cpp:directive pos:line="6399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6399" pos:column="9">IDebugProgramDestroyEventFlags2_GetFlags</name><parameter_list pos:line="6399" pos:column="49">(<param><type><name pos:line="6399" pos:column="50">This</name></type></param>,<param><type><name pos:line="6399" pos:column="55">pdwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6400" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFlags(This,pdwFlags) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6402" pos:column="1">#<cpp:directive pos:line="6402" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6402" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6405" pos:column="1">#<cpp:directive pos:line="6405" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6405" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6410" pos:column="1">#<cpp:directive pos:line="6410" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6410" pos:column="9">/* __IDebugProgramDestroyEventFlags2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6413" pos:column="1">#<cpp:directive pos:line="6413" pos:column="2">ifndef</cpp:directive> <name pos:line="6413" pos:column="9">__IDebugThreadCreateEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6414" pos:column="1">#<cpp:directive pos:line="6414" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6414" pos:column="9">__IDebugThreadCreateEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6416" pos:column="1">/* interface IDebugThreadCreateEvent2 */</comment>
<comment type="block" pos:line="6417" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6420" pos:column="1">EXTERN_C</name> <specifier pos:line="6420" pos:column="10">const</specifier> <name pos:line="6420" pos:column="16">IID</name></type> <name pos:line="6420" pos:column="20">IID_IDebugThreadCreateEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6422" pos:column="1">#<cpp:directive pos:line="6422" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6422" pos:column="5">defined</name><argument_list pos:line="6422" pos:column="12">(<argument><expr><name pos:line="6422" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6422" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6422" pos:column="29">!</op:operator><call><name pos:line="6422" pos:column="30">defined</name><argument_list pos:line="6422" pos:column="37">(<argument><expr><name pos:line="6422" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6424" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6424" pos:column="19">(<argument pos:line="6424" pos:column="20">"2090ccfc-70c5-491d-a5e8-bad2dd9ee3ea"</argument>)</argument_list></macro>
    <label><name pos:line="6425" pos:column="5">IDebugThreadCreateEvent2</name> :</label> <expr_stmt><expr pos:line="6425" pos:column="32">public <name pos:line="6425" pos:column="39">IUnknown</name>
    <block pos:line="6426" pos:column="5">{
    <expr pos:line="6427" pos:column="5">public<op:operator pos:line="6427" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6430" pos:column="1">#<cpp:directive pos:line="6430" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6430" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6432" pos:column="5">typedef <type><struct pos:line="6432" pos:column="13">struct <name pos:line="6432" pos:column="20">IDebugThreadCreateEvent2Vtbl</name>
    <block pos:line="6433" pos:column="5">{<public type="default" pos:line="6433" pos:column="6">
        <function_decl><type><name pos:line="6434" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6436" pos:column="9">HRESULT</name></type> ( <name pos:line="6436" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6436" pos:column="37">*</type:modifier><name pos:line="6436" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6436" pos:column="54">( 
            <param><decl><type><name pos:line="6437" pos:column="13">IDebugThreadCreateEvent2</name> <type:modifier pos:line="6437" pos:column="38">*</type:modifier></type> <name pos:line="6437" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="6438" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6438" pos:column="24">__RPC__in</name> <name pos:line="6438" pos:column="34">REFIID</name></type> <name pos:line="6438" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6439" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6440" pos:column="13">__RPC__deref_out</name>  <name pos:line="6440" pos:column="31">void</name> <type:modifier pos:line="6440" pos:column="36">*</type:modifier><type:modifier pos:line="6440" pos:column="37">*</type:modifier></type><name pos:line="6440" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6442" pos:column="9">ULONG</name></type> ( <name pos:line="6442" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6442" pos:column="35">*</type:modifier><name pos:line="6442" pos:column="36">AddRef</name> )<parameter_list pos:line="6442" pos:column="44">( 
            <param><decl><type><name pos:line="6443" pos:column="13">IDebugThreadCreateEvent2</name> <type:modifier pos:line="6443" pos:column="38">*</type:modifier></type> <name pos:line="6443" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6445" pos:column="9">ULONG</name></type> ( <name pos:line="6445" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6445" pos:column="35">*</type:modifier><name pos:line="6445" pos:column="36">Release</name> )<parameter_list pos:line="6445" pos:column="45">( 
            <param><decl><type><name pos:line="6446" pos:column="13">IDebugThreadCreateEvent2</name> <type:modifier pos:line="6446" pos:column="38">*</type:modifier></type> <name pos:line="6446" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6448" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6449" pos:column="7">IDebugThreadCreateEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6451" pos:column="5">interface</name></type> <name pos:line="6451" pos:column="15">IDebugThreadCreateEvent2</name>
    <argument_list pos:line="6452" pos:column="5">{
        <argument><expr><name pos:line="6453" pos:column="9">CONST_VTBL</name> struct <name pos:line="6453" pos:column="27">IDebugThreadCreateEvent2Vtbl</name> <op:operator pos:line="6453" pos:column="56">*</op:operator><name pos:line="6453" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6458" pos:column="1">#<cpp:directive pos:line="6458" pos:column="2">ifdef</cpp:directive> <name pos:line="6458" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6461" pos:column="1">#<cpp:directive pos:line="6461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6461" pos:column="9">IDebugThreadCreateEvent2_QueryInterface</name><parameter_list pos:line="6461" pos:column="48">(<param><type><name pos:line="6461" pos:column="49">This</name></type></param>,<param><type><name pos:line="6461" pos:column="54">riid</name></type></param>,<param><type><name pos:line="6461" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6462" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6464" pos:column="1">#<cpp:directive pos:line="6464" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6464" pos:column="9">IDebugThreadCreateEvent2_AddRef</name><parameter_list pos:line="6464" pos:column="40">(<param><type><name pos:line="6464" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6465" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6467" pos:column="1">#<cpp:directive pos:line="6467" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6467" pos:column="9">IDebugThreadCreateEvent2_Release</name><parameter_list pos:line="6467" pos:column="41">(<param><type><name pos:line="6467" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6468" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6471" pos:column="1">#<cpp:directive pos:line="6471" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6471" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6474" pos:column="1">#<cpp:directive pos:line="6474" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6474" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6479" pos:column="1">#<cpp:directive pos:line="6479" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6479" pos:column="9">/* __IDebugThreadCreateEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6482" pos:column="1">#<cpp:directive pos:line="6482" pos:column="2">ifndef</cpp:directive> <name pos:line="6482" pos:column="9">__IDebugThreadDestroyEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6483" pos:column="1">#<cpp:directive pos:line="6483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6483" pos:column="9">__IDebugThreadDestroyEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6485" pos:column="1">/* interface IDebugThreadDestroyEvent2 */</comment>
<comment type="block" pos:line="6486" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6489" pos:column="1">EXTERN_C</name> <specifier pos:line="6489" pos:column="10">const</specifier> <name pos:line="6489" pos:column="16">IID</name></type> <name pos:line="6489" pos:column="20">IID_IDebugThreadDestroyEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6491" pos:column="1">#<cpp:directive pos:line="6491" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6491" pos:column="5">defined</name><argument_list pos:line="6491" pos:column="12">(<argument><expr><name pos:line="6491" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6491" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6491" pos:column="29">!</op:operator><call><name pos:line="6491" pos:column="30">defined</name><argument_list pos:line="6491" pos:column="37">(<argument><expr><name pos:line="6491" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6493" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6493" pos:column="19">(<argument pos:line="6493" pos:column="20">"2c3b7532-a36f-4a6e-9072-49be649b8541"</argument>)</argument_list></macro>
    <label><name pos:line="6494" pos:column="5">IDebugThreadDestroyEvent2</name> :</label> <expr_stmt><expr pos:line="6494" pos:column="33">public <name pos:line="6494" pos:column="40">IUnknown</name>
    <block pos:line="6495" pos:column="5">{
    <expr pos:line="6496" pos:column="5">public<op:operator pos:line="6496" pos:column="11">:</op:operator>
        virtual <name pos:line="6497" pos:column="17">HRESULT</name> <name pos:line="6497" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6497" pos:column="43">GetExitCode</name><argument_list pos:line="6497" pos:column="54">( 
            <comment type="block" pos:line="6498" pos:column="13">/* [out] */</comment> <argument pos:line="6498" pos:column="25">__RPC__out DWORD *pdwExit</argument>)</argument_list></macro> <op:operator pos:line="6498" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="6498" pos:column="54">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6502" pos:column="1">#<cpp:directive pos:line="6502" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6502" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6504" pos:column="5">typedef <type><struct pos:line="6504" pos:column="13">struct <name pos:line="6504" pos:column="20">IDebugThreadDestroyEvent2Vtbl</name>
    <block pos:line="6505" pos:column="5">{<public type="default" pos:line="6505" pos:column="6">
        <function_decl><type><name pos:line="6506" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6508" pos:column="9">HRESULT</name></type> ( <name pos:line="6508" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6508" pos:column="37">*</type:modifier><name pos:line="6508" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6508" pos:column="54">( 
            <param><decl><type><name pos:line="6509" pos:column="13">IDebugThreadDestroyEvent2</name> <type:modifier pos:line="6509" pos:column="39">*</type:modifier></type> <name pos:line="6509" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="6510" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6510" pos:column="24">__RPC__in</name> <name pos:line="6510" pos:column="34">REFIID</name></type> <name pos:line="6510" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6511" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6512" pos:column="13">__RPC__deref_out</name>  <name pos:line="6512" pos:column="31">void</name> <type:modifier pos:line="6512" pos:column="36">*</type:modifier><type:modifier pos:line="6512" pos:column="37">*</type:modifier></type><name pos:line="6512" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6514" pos:column="9">ULONG</name></type> ( <name pos:line="6514" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6514" pos:column="35">*</type:modifier><name pos:line="6514" pos:column="36">AddRef</name> )<parameter_list pos:line="6514" pos:column="44">( 
            <param><decl><type><name pos:line="6515" pos:column="13">IDebugThreadDestroyEvent2</name> <type:modifier pos:line="6515" pos:column="39">*</type:modifier></type> <name pos:line="6515" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6517" pos:column="9">ULONG</name></type> ( <name pos:line="6517" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6517" pos:column="35">*</type:modifier><name pos:line="6517" pos:column="36">Release</name> )<parameter_list pos:line="6517" pos:column="45">( 
            <param><decl><type><name pos:line="6518" pos:column="13">IDebugThreadDestroyEvent2</name> <type:modifier pos:line="6518" pos:column="39">*</type:modifier></type> <name pos:line="6518" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6520" pos:column="9">HRESULT</name></type> ( <name pos:line="6520" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6520" pos:column="37">*</type:modifier><name pos:line="6520" pos:column="38">GetExitCode</name> )<parameter_list pos:line="6520" pos:column="51">( 
            <param><decl><type><name pos:line="6521" pos:column="13">IDebugThreadDestroyEvent2</name> <type:modifier pos:line="6521" pos:column="39">*</type:modifier></type> <name pos:line="6521" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="6522" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6522" pos:column="25">__RPC__out</name> <name pos:line="6522" pos:column="36">DWORD</name> <type:modifier pos:line="6522" pos:column="42">*</type:modifier></type><name pos:line="6522" pos:column="43">pdwExit</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6524" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6525" pos:column="7">IDebugThreadDestroyEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6527" pos:column="5">interface</name></type> <name pos:line="6527" pos:column="15">IDebugThreadDestroyEvent2</name>
    <argument_list pos:line="6528" pos:column="5">{
        <argument><expr><name pos:line="6529" pos:column="9">CONST_VTBL</name> struct <name pos:line="6529" pos:column="27">IDebugThreadDestroyEvent2Vtbl</name> <op:operator pos:line="6529" pos:column="57">*</op:operator><name pos:line="6529" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6534" pos:column="1">#<cpp:directive pos:line="6534" pos:column="2">ifdef</cpp:directive> <name pos:line="6534" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6537" pos:column="1">#<cpp:directive pos:line="6537" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6537" pos:column="9">IDebugThreadDestroyEvent2_QueryInterface</name><parameter_list pos:line="6537" pos:column="49">(<param><type><name pos:line="6537" pos:column="50">This</name></type></param>,<param><type><name pos:line="6537" pos:column="55">riid</name></type></param>,<param><type><name pos:line="6537" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6538" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6540" pos:column="1">#<cpp:directive pos:line="6540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6540" pos:column="9">IDebugThreadDestroyEvent2_AddRef</name><parameter_list pos:line="6540" pos:column="41">(<param><type><name pos:line="6540" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6541" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6543" pos:column="1">#<cpp:directive pos:line="6543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6543" pos:column="9">IDebugThreadDestroyEvent2_Release</name><parameter_list pos:line="6543" pos:column="42">(<param><type><name pos:line="6543" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6544" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6547" pos:column="1">#<cpp:directive pos:line="6547" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6547" pos:column="9">IDebugThreadDestroyEvent2_GetExitCode</name><parameter_list pos:line="6547" pos:column="46">(<param><type><name pos:line="6547" pos:column="47">This</name></type></param>,<param><type><name pos:line="6547" pos:column="52">pdwExit</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6548" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExitCode(This,pdwExit) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6550" pos:column="1">#<cpp:directive pos:line="6550" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6550" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6553" pos:column="1">#<cpp:directive pos:line="6553" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6553" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6558" pos:column="1">#<cpp:directive pos:line="6558" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6558" pos:column="9">/* __IDebugThreadDestroyEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6561" pos:column="1">#<cpp:directive pos:line="6561" pos:column="2">ifndef</cpp:directive> <name pos:line="6561" pos:column="9">__IDebugLoadCompleteEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6562" pos:column="1">#<cpp:directive pos:line="6562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6562" pos:column="9">__IDebugLoadCompleteEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6564" pos:column="1">/* interface IDebugLoadCompleteEvent2 */</comment>
<comment type="block" pos:line="6565" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6568" pos:column="1">EXTERN_C</name> <specifier pos:line="6568" pos:column="10">const</specifier> <name pos:line="6568" pos:column="16">IID</name></type> <name pos:line="6568" pos:column="20">IID_IDebugLoadCompleteEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6570" pos:column="1">#<cpp:directive pos:line="6570" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6570" pos:column="5">defined</name><argument_list pos:line="6570" pos:column="12">(<argument><expr><name pos:line="6570" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6570" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6570" pos:column="29">!</op:operator><call><name pos:line="6570" pos:column="30">defined</name><argument_list pos:line="6570" pos:column="37">(<argument><expr><name pos:line="6570" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6572" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6572" pos:column="19">(<argument pos:line="6572" pos:column="20">"b1844850-1349-45d4-9f12-495212f5eb0b"</argument>)</argument_list></macro>
    <label><name pos:line="6573" pos:column="5">IDebugLoadCompleteEvent2</name> :</label> <expr_stmt><expr pos:line="6573" pos:column="32">public <name pos:line="6573" pos:column="39">IUnknown</name>
    <block pos:line="6574" pos:column="5">{
    <expr pos:line="6575" pos:column="5">public<op:operator pos:line="6575" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6578" pos:column="1">#<cpp:directive pos:line="6578" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6578" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6580" pos:column="5">typedef <type><struct pos:line="6580" pos:column="13">struct <name pos:line="6580" pos:column="20">IDebugLoadCompleteEvent2Vtbl</name>
    <block pos:line="6581" pos:column="5">{<public type="default" pos:line="6581" pos:column="6">
        <function_decl><type><name pos:line="6582" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6584" pos:column="9">HRESULT</name></type> ( <name pos:line="6584" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6584" pos:column="37">*</type:modifier><name pos:line="6584" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6584" pos:column="54">( 
            <param><decl><type><name pos:line="6585" pos:column="13">IDebugLoadCompleteEvent2</name> <type:modifier pos:line="6585" pos:column="38">*</type:modifier></type> <name pos:line="6585" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="6586" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6586" pos:column="24">__RPC__in</name> <name pos:line="6586" pos:column="34">REFIID</name></type> <name pos:line="6586" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6587" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6588" pos:column="13">__RPC__deref_out</name>  <name pos:line="6588" pos:column="31">void</name> <type:modifier pos:line="6588" pos:column="36">*</type:modifier><type:modifier pos:line="6588" pos:column="37">*</type:modifier></type><name pos:line="6588" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6590" pos:column="9">ULONG</name></type> ( <name pos:line="6590" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6590" pos:column="35">*</type:modifier><name pos:line="6590" pos:column="36">AddRef</name> )<parameter_list pos:line="6590" pos:column="44">( 
            <param><decl><type><name pos:line="6591" pos:column="13">IDebugLoadCompleteEvent2</name> <type:modifier pos:line="6591" pos:column="38">*</type:modifier></type> <name pos:line="6591" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6593" pos:column="9">ULONG</name></type> ( <name pos:line="6593" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6593" pos:column="35">*</type:modifier><name pos:line="6593" pos:column="36">Release</name> )<parameter_list pos:line="6593" pos:column="45">( 
            <param><decl><type><name pos:line="6594" pos:column="13">IDebugLoadCompleteEvent2</name> <type:modifier pos:line="6594" pos:column="38">*</type:modifier></type> <name pos:line="6594" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6596" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6597" pos:column="7">IDebugLoadCompleteEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6599" pos:column="5">interface</name></type> <name pos:line="6599" pos:column="15">IDebugLoadCompleteEvent2</name>
    <argument_list pos:line="6600" pos:column="5">{
        <argument><expr><name pos:line="6601" pos:column="9">CONST_VTBL</name> struct <name pos:line="6601" pos:column="27">IDebugLoadCompleteEvent2Vtbl</name> <op:operator pos:line="6601" pos:column="56">*</op:operator><name pos:line="6601" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6606" pos:column="1">#<cpp:directive pos:line="6606" pos:column="2">ifdef</cpp:directive> <name pos:line="6606" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6609" pos:column="1">#<cpp:directive pos:line="6609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6609" pos:column="9">IDebugLoadCompleteEvent2_QueryInterface</name><parameter_list pos:line="6609" pos:column="48">(<param><type><name pos:line="6609" pos:column="49">This</name></type></param>,<param><type><name pos:line="6609" pos:column="54">riid</name></type></param>,<param><type><name pos:line="6609" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6610" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6612" pos:column="1">#<cpp:directive pos:line="6612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6612" pos:column="9">IDebugLoadCompleteEvent2_AddRef</name><parameter_list pos:line="6612" pos:column="40">(<param><type><name pos:line="6612" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6613" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6615" pos:column="1">#<cpp:directive pos:line="6615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6615" pos:column="9">IDebugLoadCompleteEvent2_Release</name><parameter_list pos:line="6615" pos:column="41">(<param><type><name pos:line="6615" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6616" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6619" pos:column="1">#<cpp:directive pos:line="6619" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6619" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6622" pos:column="1">#<cpp:directive pos:line="6622" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6622" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6627" pos:column="1">#<cpp:directive pos:line="6627" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6627" pos:column="9">/* __IDebugLoadCompleteEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6630" pos:column="1">#<cpp:directive pos:line="6630" pos:column="2">ifndef</cpp:directive> <name pos:line="6630" pos:column="9">__IDebugEntryPointEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6631" pos:column="1">#<cpp:directive pos:line="6631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6631" pos:column="9">__IDebugEntryPointEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6633" pos:column="1">/* interface IDebugEntryPointEvent2 */</comment>
<comment type="block" pos:line="6634" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6637" pos:column="1">EXTERN_C</name> <specifier pos:line="6637" pos:column="10">const</specifier> <name pos:line="6637" pos:column="16">IID</name></type> <name pos:line="6637" pos:column="20">IID_IDebugEntryPointEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6639" pos:column="1">#<cpp:directive pos:line="6639" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6639" pos:column="5">defined</name><argument_list pos:line="6639" pos:column="12">(<argument><expr><name pos:line="6639" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6639" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6639" pos:column="29">!</op:operator><call><name pos:line="6639" pos:column="30">defined</name><argument_list pos:line="6639" pos:column="37">(<argument><expr><name pos:line="6639" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6641" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6641" pos:column="19">(<argument pos:line="6641" pos:column="20">"e8414a3e-1642-48ec-829e-5f4040e16da9"</argument>)</argument_list></macro>
    <label><name pos:line="6642" pos:column="5">IDebugEntryPointEvent2</name> :</label> <expr_stmt><expr pos:line="6642" pos:column="30">public <name pos:line="6642" pos:column="37">IUnknown</name>
    <block pos:line="6643" pos:column="5">{
    <expr pos:line="6644" pos:column="5">public<op:operator pos:line="6644" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6647" pos:column="1">#<cpp:directive pos:line="6647" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6647" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6649" pos:column="5">typedef <type><struct pos:line="6649" pos:column="13">struct <name pos:line="6649" pos:column="20">IDebugEntryPointEvent2Vtbl</name>
    <block pos:line="6650" pos:column="5">{<public type="default" pos:line="6650" pos:column="6">
        <function_decl><type><name pos:line="6651" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6653" pos:column="9">HRESULT</name></type> ( <name pos:line="6653" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6653" pos:column="37">*</type:modifier><name pos:line="6653" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6653" pos:column="54">( 
            <param><decl><type><name pos:line="6654" pos:column="13">IDebugEntryPointEvent2</name> <type:modifier pos:line="6654" pos:column="36">*</type:modifier></type> <name pos:line="6654" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="6655" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6655" pos:column="24">__RPC__in</name> <name pos:line="6655" pos:column="34">REFIID</name></type> <name pos:line="6655" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6656" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6657" pos:column="13">__RPC__deref_out</name>  <name pos:line="6657" pos:column="31">void</name> <type:modifier pos:line="6657" pos:column="36">*</type:modifier><type:modifier pos:line="6657" pos:column="37">*</type:modifier></type><name pos:line="6657" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6659" pos:column="9">ULONG</name></type> ( <name pos:line="6659" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6659" pos:column="35">*</type:modifier><name pos:line="6659" pos:column="36">AddRef</name> )<parameter_list pos:line="6659" pos:column="44">( 
            <param><decl><type><name pos:line="6660" pos:column="13">IDebugEntryPointEvent2</name> <type:modifier pos:line="6660" pos:column="36">*</type:modifier></type> <name pos:line="6660" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6662" pos:column="9">ULONG</name></type> ( <name pos:line="6662" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6662" pos:column="35">*</type:modifier><name pos:line="6662" pos:column="36">Release</name> )<parameter_list pos:line="6662" pos:column="45">( 
            <param><decl><type><name pos:line="6663" pos:column="13">IDebugEntryPointEvent2</name> <type:modifier pos:line="6663" pos:column="36">*</type:modifier></type> <name pos:line="6663" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6665" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6666" pos:column="7">IDebugEntryPointEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6668" pos:column="5">interface</name></type> <name pos:line="6668" pos:column="15">IDebugEntryPointEvent2</name>
    <argument_list pos:line="6669" pos:column="5">{
        <argument><expr><name pos:line="6670" pos:column="9">CONST_VTBL</name> struct <name pos:line="6670" pos:column="27">IDebugEntryPointEvent2Vtbl</name> <op:operator pos:line="6670" pos:column="54">*</op:operator><name pos:line="6670" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6675" pos:column="1">#<cpp:directive pos:line="6675" pos:column="2">ifdef</cpp:directive> <name pos:line="6675" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6678" pos:column="1">#<cpp:directive pos:line="6678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6678" pos:column="9">IDebugEntryPointEvent2_QueryInterface</name><parameter_list pos:line="6678" pos:column="46">(<param><type><name pos:line="6678" pos:column="47">This</name></type></param>,<param><type><name pos:line="6678" pos:column="52">riid</name></type></param>,<param><type><name pos:line="6678" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6679" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6681" pos:column="1">#<cpp:directive pos:line="6681" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6681" pos:column="9">IDebugEntryPointEvent2_AddRef</name><parameter_list pos:line="6681" pos:column="38">(<param><type><name pos:line="6681" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6682" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6684" pos:column="1">#<cpp:directive pos:line="6684" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6684" pos:column="9">IDebugEntryPointEvent2_Release</name><parameter_list pos:line="6684" pos:column="39">(<param><type><name pos:line="6684" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6685" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6688" pos:column="1">#<cpp:directive pos:line="6688" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6688" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6691" pos:column="1">#<cpp:directive pos:line="6691" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6691" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6696" pos:column="1">#<cpp:directive pos:line="6696" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6696" pos:column="9">/* __IDebugEntryPointEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6699" pos:column="1">#<cpp:directive pos:line="6699" pos:column="2">ifndef</cpp:directive> <name pos:line="6699" pos:column="9">__IDebugStepCompleteEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6700" pos:column="1">#<cpp:directive pos:line="6700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6700" pos:column="9">__IDebugStepCompleteEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6702" pos:column="1">/* interface IDebugStepCompleteEvent2 */</comment>
<comment type="block" pos:line="6703" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6706" pos:column="1">EXTERN_C</name> <specifier pos:line="6706" pos:column="10">const</specifier> <name pos:line="6706" pos:column="16">IID</name></type> <name pos:line="6706" pos:column="20">IID_IDebugStepCompleteEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6708" pos:column="1">#<cpp:directive pos:line="6708" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6708" pos:column="5">defined</name><argument_list pos:line="6708" pos:column="12">(<argument><expr><name pos:line="6708" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6708" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6708" pos:column="29">!</op:operator><call><name pos:line="6708" pos:column="30">defined</name><argument_list pos:line="6708" pos:column="37">(<argument><expr><name pos:line="6708" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6710" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6710" pos:column="19">(<argument pos:line="6710" pos:column="20">"0f7f24c1-74d9-4ea6-a3ea-7edb2d81441d"</argument>)</argument_list></macro>
    <label><name pos:line="6711" pos:column="5">IDebugStepCompleteEvent2</name> :</label> <expr_stmt><expr pos:line="6711" pos:column="32">public <name pos:line="6711" pos:column="39">IUnknown</name>
    <block pos:line="6712" pos:column="5">{
    <expr pos:line="6713" pos:column="5">public<op:operator pos:line="6713" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6716" pos:column="1">#<cpp:directive pos:line="6716" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6716" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6718" pos:column="5">typedef <type><struct pos:line="6718" pos:column="13">struct <name pos:line="6718" pos:column="20">IDebugStepCompleteEvent2Vtbl</name>
    <block pos:line="6719" pos:column="5">{<public type="default" pos:line="6719" pos:column="6">
        <function_decl><type><name pos:line="6720" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6722" pos:column="9">HRESULT</name></type> ( <name pos:line="6722" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6722" pos:column="37">*</type:modifier><name pos:line="6722" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6722" pos:column="54">( 
            <param><decl><type><name pos:line="6723" pos:column="13">IDebugStepCompleteEvent2</name> <type:modifier pos:line="6723" pos:column="38">*</type:modifier></type> <name pos:line="6723" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="6724" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6724" pos:column="24">__RPC__in</name> <name pos:line="6724" pos:column="34">REFIID</name></type> <name pos:line="6724" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6725" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6726" pos:column="13">__RPC__deref_out</name>  <name pos:line="6726" pos:column="31">void</name> <type:modifier pos:line="6726" pos:column="36">*</type:modifier><type:modifier pos:line="6726" pos:column="37">*</type:modifier></type><name pos:line="6726" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6728" pos:column="9">ULONG</name></type> ( <name pos:line="6728" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6728" pos:column="35">*</type:modifier><name pos:line="6728" pos:column="36">AddRef</name> )<parameter_list pos:line="6728" pos:column="44">( 
            <param><decl><type><name pos:line="6729" pos:column="13">IDebugStepCompleteEvent2</name> <type:modifier pos:line="6729" pos:column="38">*</type:modifier></type> <name pos:line="6729" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6731" pos:column="9">ULONG</name></type> ( <name pos:line="6731" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6731" pos:column="35">*</type:modifier><name pos:line="6731" pos:column="36">Release</name> )<parameter_list pos:line="6731" pos:column="45">( 
            <param><decl><type><name pos:line="6732" pos:column="13">IDebugStepCompleteEvent2</name> <type:modifier pos:line="6732" pos:column="38">*</type:modifier></type> <name pos:line="6732" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6734" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6735" pos:column="7">IDebugStepCompleteEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6737" pos:column="5">interface</name></type> <name pos:line="6737" pos:column="15">IDebugStepCompleteEvent2</name>
    <argument_list pos:line="6738" pos:column="5">{
        <argument><expr><name pos:line="6739" pos:column="9">CONST_VTBL</name> struct <name pos:line="6739" pos:column="27">IDebugStepCompleteEvent2Vtbl</name> <op:operator pos:line="6739" pos:column="56">*</op:operator><name pos:line="6739" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6744" pos:column="1">#<cpp:directive pos:line="6744" pos:column="2">ifdef</cpp:directive> <name pos:line="6744" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6747" pos:column="1">#<cpp:directive pos:line="6747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6747" pos:column="9">IDebugStepCompleteEvent2_QueryInterface</name><parameter_list pos:line="6747" pos:column="48">(<param><type><name pos:line="6747" pos:column="49">This</name></type></param>,<param><type><name pos:line="6747" pos:column="54">riid</name></type></param>,<param><type><name pos:line="6747" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6748" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6750" pos:column="1">#<cpp:directive pos:line="6750" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6750" pos:column="9">IDebugStepCompleteEvent2_AddRef</name><parameter_list pos:line="6750" pos:column="40">(<param><type><name pos:line="6750" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6751" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6753" pos:column="1">#<cpp:directive pos:line="6753" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6753" pos:column="9">IDebugStepCompleteEvent2_Release</name><parameter_list pos:line="6753" pos:column="41">(<param><type><name pos:line="6753" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6754" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6757" pos:column="1">#<cpp:directive pos:line="6757" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6757" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6760" pos:column="1">#<cpp:directive pos:line="6760" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6760" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6765" pos:column="1">#<cpp:directive pos:line="6765" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6765" pos:column="9">/* __IDebugStepCompleteEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6768" pos:column="1">#<cpp:directive pos:line="6768" pos:column="2">ifndef</cpp:directive> <name pos:line="6768" pos:column="9">__IDebugCanStopEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6769" pos:column="1">#<cpp:directive pos:line="6769" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6769" pos:column="9">__IDebugCanStopEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6771" pos:column="1">/* interface IDebugCanStopEvent2 */</comment>
<comment type="block" pos:line="6772" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="6775" pos:column="1">enum <name pos:line="6775" pos:column="6">enum_CANSTOP_REASON</name>
    <block pos:line="6776" pos:column="5">{	<decl><name pos:line="6776" pos:column="9">CANSTOP_ENTRYPOINT</name>	<init pos:line="6776" pos:column="33">= <expr><lit:literal type="number" pos:line="6776" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="6776" pos:column="36">,</op:operator>
	<decl><name pos:line="6777" pos:column="9">CANSTOP_STEPIN</name>	<init pos:line="6777" pos:column="25">= <expr><lit:literal type="number" pos:line="6777" pos:column="27">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="6779" pos:column="1">typedef <type><name pos:line="6779" pos:column="9">DWORD</name></type> <name pos:line="6779" pos:column="15">CANSTOP_REASON</name>;</typedef>


<decl_stmt><decl><type><name pos:line="6782" pos:column="1">EXTERN_C</name> <specifier pos:line="6782" pos:column="10">const</specifier> <name pos:line="6782" pos:column="16">IID</name></type> <name pos:line="6782" pos:column="20">IID_IDebugCanStopEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6784" pos:column="1">#<cpp:directive pos:line="6784" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6784" pos:column="5">defined</name><argument_list pos:line="6784" pos:column="12">(<argument><expr><name pos:line="6784" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6784" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6784" pos:column="29">!</op:operator><call><name pos:line="6784" pos:column="30">defined</name><argument_list pos:line="6784" pos:column="37">(<argument><expr><name pos:line="6784" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6786" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6786" pos:column="19">(<argument pos:line="6786" pos:column="20">"b5b0d747-d4d2-4e2d-872d-74da22037826"</argument>)</argument_list></macro>
    <label><name pos:line="6787" pos:column="5">IDebugCanStopEvent2</name> :</label> <expr_stmt><expr pos:line="6787" pos:column="27">public <name pos:line="6787" pos:column="34">IUnknown</name>
    <block pos:line="6788" pos:column="5">{
    <expr pos:line="6789" pos:column="5">public<op:operator pos:line="6789" pos:column="11">:</op:operator>
        virtual <name pos:line="6790" pos:column="17">HRESULT</name> <name pos:line="6790" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6790" pos:column="43">GetReason</name><argument_list pos:line="6790" pos:column="52">( 
            <comment type="block" pos:line="6791" pos:column="13">/* [out] */</comment> <argument pos:line="6791" pos:column="25">__RPC__out CANSTOP_REASON *pcr</argument>)</argument_list></macro> <op:operator pos:line="6791" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="6791" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="6793" pos:column="9">virtual <name pos:line="6793" pos:column="17">HRESULT</name> <name pos:line="6793" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6793" pos:column="43">CanStop</name><argument_list pos:line="6793" pos:column="50">( 
            <comment type="block" pos:line="6794" pos:column="13">/* [in] */</comment> <argument pos:line="6794" pos:column="24">BOOL fCanStop</argument>)</argument_list></macro> <op:operator pos:line="6794" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="6794" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="6796" pos:column="9">virtual <name pos:line="6796" pos:column="17">HRESULT</name> <name pos:line="6796" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6796" pos:column="43">GetDocumentContext</name><argument_list pos:line="6796" pos:column="61">( 
            <comment type="block" pos:line="6797" pos:column="13">/* [out] */</comment> <argument pos:line="6797" pos:column="25">__RPC__deref_out_opt IDebugDocumentContext2 **ppDocCxt</argument>)</argument_list></macro> <op:operator pos:line="6797" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="6797" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="6799" pos:column="9">virtual <name pos:line="6799" pos:column="17">HRESULT</name> <name pos:line="6799" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6799" pos:column="43">GetCodeContext</name><argument_list pos:line="6799" pos:column="57">( 
            <comment type="block" pos:line="6800" pos:column="13">/* [out] */</comment> <argument pos:line="6800" pos:column="25">__RPC__deref_out_opt IDebugCodeContext2 **ppCodeContext</argument>)</argument_list></macro> <op:operator pos:line="6800" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="6800" pos:column="84">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6804" pos:column="1">#<cpp:directive pos:line="6804" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6804" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6806" pos:column="5">typedef <type><struct pos:line="6806" pos:column="13">struct <name pos:line="6806" pos:column="20">IDebugCanStopEvent2Vtbl</name>
    <block pos:line="6807" pos:column="5">{<public type="default" pos:line="6807" pos:column="6">
        <function_decl><type><name pos:line="6808" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6810" pos:column="9">HRESULT</name></type> ( <name pos:line="6810" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6810" pos:column="37">*</type:modifier><name pos:line="6810" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6810" pos:column="54">( 
            <param><decl><type><name pos:line="6811" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6811" pos:column="33">*</type:modifier></type> <name pos:line="6811" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="6812" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6812" pos:column="24">__RPC__in</name> <name pos:line="6812" pos:column="34">REFIID</name></type> <name pos:line="6812" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6813" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6814" pos:column="13">__RPC__deref_out</name>  <name pos:line="6814" pos:column="31">void</name> <type:modifier pos:line="6814" pos:column="36">*</type:modifier><type:modifier pos:line="6814" pos:column="37">*</type:modifier></type><name pos:line="6814" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6816" pos:column="9">ULONG</name></type> ( <name pos:line="6816" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6816" pos:column="35">*</type:modifier><name pos:line="6816" pos:column="36">AddRef</name> )<parameter_list pos:line="6816" pos:column="44">( 
            <param><decl><type><name pos:line="6817" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6817" pos:column="33">*</type:modifier></type> <name pos:line="6817" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6819" pos:column="9">ULONG</name></type> ( <name pos:line="6819" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6819" pos:column="35">*</type:modifier><name pos:line="6819" pos:column="36">Release</name> )<parameter_list pos:line="6819" pos:column="45">( 
            <param><decl><type><name pos:line="6820" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6820" pos:column="33">*</type:modifier></type> <name pos:line="6820" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6822" pos:column="9">HRESULT</name></type> ( <name pos:line="6822" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6822" pos:column="37">*</type:modifier><name pos:line="6822" pos:column="38">GetReason</name> )<parameter_list pos:line="6822" pos:column="49">( 
            <param><decl><type><name pos:line="6823" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6823" pos:column="33">*</type:modifier></type> <name pos:line="6823" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="6824" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6824" pos:column="25">__RPC__out</name> <name pos:line="6824" pos:column="36">CANSTOP_REASON</name> <type:modifier pos:line="6824" pos:column="51">*</type:modifier></type><name pos:line="6824" pos:column="52">pcr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6826" pos:column="9">HRESULT</name></type> ( <name pos:line="6826" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6826" pos:column="37">*</type:modifier><name pos:line="6826" pos:column="38">CanStop</name> )<parameter_list pos:line="6826" pos:column="47">( 
            <param><decl><type><name pos:line="6827" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6827" pos:column="33">*</type:modifier></type> <name pos:line="6827" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="6828" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6828" pos:column="24">BOOL</name></type> <name pos:line="6828" pos:column="29">fCanStop</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6830" pos:column="9">HRESULT</name></type> ( <name pos:line="6830" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6830" pos:column="37">*</type:modifier><name pos:line="6830" pos:column="38">GetDocumentContext</name> )<parameter_list pos:line="6830" pos:column="58">( 
            <param><decl><type><name pos:line="6831" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6831" pos:column="33">*</type:modifier></type> <name pos:line="6831" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="6832" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6832" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="6832" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="6832" pos:column="69">*</type:modifier><type:modifier pos:line="6832" pos:column="70">*</type:modifier></type><name pos:line="6832" pos:column="71">ppDocCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6834" pos:column="9">HRESULT</name></type> ( <name pos:line="6834" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6834" pos:column="37">*</type:modifier><name pos:line="6834" pos:column="38">GetCodeContext</name> )<parameter_list pos:line="6834" pos:column="54">( 
            <param><decl><type><name pos:line="6835" pos:column="13">IDebugCanStopEvent2</name> <type:modifier pos:line="6835" pos:column="33">*</type:modifier></type> <name pos:line="6835" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="6836" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6836" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="6836" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="6836" pos:column="65">*</type:modifier><type:modifier pos:line="6836" pos:column="66">*</type:modifier></type><name pos:line="6836" pos:column="67">ppCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6838" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6839" pos:column="7">IDebugCanStopEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6841" pos:column="5">interface</name></type> <name pos:line="6841" pos:column="15">IDebugCanStopEvent2</name>
    <argument_list pos:line="6842" pos:column="5">{
        <argument><expr><name pos:line="6843" pos:column="9">CONST_VTBL</name> struct <name pos:line="6843" pos:column="27">IDebugCanStopEvent2Vtbl</name> <op:operator pos:line="6843" pos:column="51">*</op:operator><name pos:line="6843" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6848" pos:column="1">#<cpp:directive pos:line="6848" pos:column="2">ifdef</cpp:directive> <name pos:line="6848" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6851" pos:column="1">#<cpp:directive pos:line="6851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6851" pos:column="9">IDebugCanStopEvent2_QueryInterface</name><parameter_list pos:line="6851" pos:column="43">(<param><type><name pos:line="6851" pos:column="44">This</name></type></param>,<param><type><name pos:line="6851" pos:column="49">riid</name></type></param>,<param><type><name pos:line="6851" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6852" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6854" pos:column="1">#<cpp:directive pos:line="6854" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6854" pos:column="9">IDebugCanStopEvent2_AddRef</name><parameter_list pos:line="6854" pos:column="35">(<param><type><name pos:line="6854" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6855" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6857" pos:column="1">#<cpp:directive pos:line="6857" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6857" pos:column="9">IDebugCanStopEvent2_Release</name><parameter_list pos:line="6857" pos:column="36">(<param><type><name pos:line="6857" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6858" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="6861" pos:column="1">#<cpp:directive pos:line="6861" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6861" pos:column="9">IDebugCanStopEvent2_GetReason</name><parameter_list pos:line="6861" pos:column="38">(<param><type><name pos:line="6861" pos:column="39">This</name></type></param>,<param><type><name pos:line="6861" pos:column="44">pcr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6862" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReason(This,pcr) )</cpp:value></cpp:define> 

<cpp:define pos:line="6864" pos:column="1">#<cpp:directive pos:line="6864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6864" pos:column="9">IDebugCanStopEvent2_CanStop</name><parameter_list pos:line="6864" pos:column="36">(<param><type><name pos:line="6864" pos:column="37">This</name></type></param>,<param><type><name pos:line="6864" pos:column="42">fCanStop</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6865" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanStop(This,fCanStop) )</cpp:value></cpp:define> 

<cpp:define pos:line="6867" pos:column="1">#<cpp:directive pos:line="6867" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6867" pos:column="9">IDebugCanStopEvent2_GetDocumentContext</name><parameter_list pos:line="6867" pos:column="47">(<param><type><name pos:line="6867" pos:column="48">This</name></type></param>,<param><type><name pos:line="6867" pos:column="53">ppDocCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6868" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentContext(This,ppDocCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="6870" pos:column="1">#<cpp:directive pos:line="6870" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6870" pos:column="9">IDebugCanStopEvent2_GetCodeContext</name><parameter_list pos:line="6870" pos:column="43">(<param><type><name pos:line="6870" pos:column="44">This</name></type></param>,<param><type><name pos:line="6870" pos:column="49">ppCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6871" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCodeContext(This,ppCodeContext) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6873" pos:column="1">#<cpp:directive pos:line="6873" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6873" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6876" pos:column="1">#<cpp:directive pos:line="6876" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6876" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6881" pos:column="1">#<cpp:directive pos:line="6881" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6881" pos:column="9">/* __IDebugCanStopEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6884" pos:column="1">#<cpp:directive pos:line="6884" pos:column="2">ifndef</cpp:directive> <name pos:line="6884" pos:column="9">__IDebugBreakEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6885" pos:column="1">#<cpp:directive pos:line="6885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6885" pos:column="9">__IDebugBreakEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6887" pos:column="1">/* interface IDebugBreakEvent2 */</comment>
<comment type="block" pos:line="6888" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6891" pos:column="1">EXTERN_C</name> <specifier pos:line="6891" pos:column="10">const</specifier> <name pos:line="6891" pos:column="16">IID</name></type> <name pos:line="6891" pos:column="20">IID_IDebugBreakEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6893" pos:column="1">#<cpp:directive pos:line="6893" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6893" pos:column="5">defined</name><argument_list pos:line="6893" pos:column="12">(<argument><expr><name pos:line="6893" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6893" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6893" pos:column="29">!</op:operator><call><name pos:line="6893" pos:column="30">defined</name><argument_list pos:line="6893" pos:column="37">(<argument><expr><name pos:line="6893" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6895" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6895" pos:column="19">(<argument pos:line="6895" pos:column="20">"c7405d1d-e24b-44e0-b707-d8a5a4e1641b"</argument>)</argument_list></macro>
    <label><name pos:line="6896" pos:column="5">IDebugBreakEvent2</name> :</label> <expr_stmt><expr pos:line="6896" pos:column="25">public <name pos:line="6896" pos:column="32">IUnknown</name>
    <block pos:line="6897" pos:column="5">{
    <expr pos:line="6898" pos:column="5">public<op:operator pos:line="6898" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6901" pos:column="1">#<cpp:directive pos:line="6901" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6901" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6903" pos:column="5">typedef <type><struct pos:line="6903" pos:column="13">struct <name pos:line="6903" pos:column="20">IDebugBreakEvent2Vtbl</name>
    <block pos:line="6904" pos:column="5">{<public type="default" pos:line="6904" pos:column="6">
        <function_decl><type><name pos:line="6905" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6907" pos:column="9">HRESULT</name></type> ( <name pos:line="6907" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6907" pos:column="37">*</type:modifier><name pos:line="6907" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6907" pos:column="54">( 
            <param><decl><type><name pos:line="6908" pos:column="13">IDebugBreakEvent2</name> <type:modifier pos:line="6908" pos:column="31">*</type:modifier></type> <name pos:line="6908" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="6909" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6909" pos:column="24">__RPC__in</name> <name pos:line="6909" pos:column="34">REFIID</name></type> <name pos:line="6909" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6910" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6911" pos:column="13">__RPC__deref_out</name>  <name pos:line="6911" pos:column="31">void</name> <type:modifier pos:line="6911" pos:column="36">*</type:modifier><type:modifier pos:line="6911" pos:column="37">*</type:modifier></type><name pos:line="6911" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6913" pos:column="9">ULONG</name></type> ( <name pos:line="6913" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6913" pos:column="35">*</type:modifier><name pos:line="6913" pos:column="36">AddRef</name> )<parameter_list pos:line="6913" pos:column="44">( 
            <param><decl><type><name pos:line="6914" pos:column="13">IDebugBreakEvent2</name> <type:modifier pos:line="6914" pos:column="31">*</type:modifier></type> <name pos:line="6914" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6916" pos:column="9">ULONG</name></type> ( <name pos:line="6916" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6916" pos:column="35">*</type:modifier><name pos:line="6916" pos:column="36">Release</name> )<parameter_list pos:line="6916" pos:column="45">( 
            <param><decl><type><name pos:line="6917" pos:column="13">IDebugBreakEvent2</name> <type:modifier pos:line="6917" pos:column="31">*</type:modifier></type> <name pos:line="6917" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6919" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6920" pos:column="7">IDebugBreakEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6922" pos:column="5">interface</name></type> <name pos:line="6922" pos:column="15">IDebugBreakEvent2</name>
    <argument_list pos:line="6923" pos:column="5">{
        <argument><expr><name pos:line="6924" pos:column="9">CONST_VTBL</name> struct <name pos:line="6924" pos:column="27">IDebugBreakEvent2Vtbl</name> <op:operator pos:line="6924" pos:column="49">*</op:operator><name pos:line="6924" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6929" pos:column="1">#<cpp:directive pos:line="6929" pos:column="2">ifdef</cpp:directive> <name pos:line="6929" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6932" pos:column="1">#<cpp:directive pos:line="6932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6932" pos:column="9">IDebugBreakEvent2_QueryInterface</name><parameter_list pos:line="6932" pos:column="41">(<param><type><name pos:line="6932" pos:column="42">This</name></type></param>,<param><type><name pos:line="6932" pos:column="47">riid</name></type></param>,<param><type><name pos:line="6932" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6933" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="6935" pos:column="1">#<cpp:directive pos:line="6935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6935" pos:column="9">IDebugBreakEvent2_AddRef</name><parameter_list pos:line="6935" pos:column="33">(<param><type><name pos:line="6935" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6936" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="6938" pos:column="1">#<cpp:directive pos:line="6938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6938" pos:column="9">IDebugBreakEvent2_Release</name><parameter_list pos:line="6938" pos:column="34">(<param><type><name pos:line="6938" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6939" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="6942" pos:column="1">#<cpp:directive pos:line="6942" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6942" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6945" pos:column="1">#<cpp:directive pos:line="6945" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6945" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6950" pos:column="1">#<cpp:directive pos:line="6950" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6950" pos:column="9">/* __IDebugBreakEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6953" pos:column="1">#<cpp:directive pos:line="6953" pos:column="2">ifndef</cpp:directive> <name pos:line="6953" pos:column="9">__IDebugBreakpointEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6954" pos:column="1">#<cpp:directive pos:line="6954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6954" pos:column="9">__IDebugBreakpointEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6956" pos:column="1">/* interface IDebugBreakpointEvent2 */</comment>
<comment type="block" pos:line="6957" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="6960" pos:column="1">EXTERN_C</name> <specifier pos:line="6960" pos:column="10">const</specifier> <name pos:line="6960" pos:column="16">IID</name></type> <name pos:line="6960" pos:column="20">IID_IDebugBreakpointEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="6962" pos:column="1">#<cpp:directive pos:line="6962" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6962" pos:column="5">defined</name><argument_list pos:line="6962" pos:column="12">(<argument><expr><name pos:line="6962" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6962" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6962" pos:column="29">!</op:operator><call><name pos:line="6962" pos:column="30">defined</name><argument_list pos:line="6962" pos:column="37">(<argument><expr><name pos:line="6962" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6964" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6964" pos:column="19">(<argument pos:line="6964" pos:column="20">"501c1e21-c557-48b8-ba30-a1eab0bc4a74"</argument>)</argument_list></macro>
    <label><name pos:line="6965" pos:column="5">IDebugBreakpointEvent2</name> :</label> <expr_stmt><expr pos:line="6965" pos:column="30">public <name pos:line="6965" pos:column="37">IUnknown</name>
    <block pos:line="6966" pos:column="5">{
    <expr pos:line="6967" pos:column="5">public<op:operator pos:line="6967" pos:column="11">:</op:operator>
        virtual <name pos:line="6968" pos:column="17">HRESULT</name> <name pos:line="6968" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="6968" pos:column="43">EnumBreakpoints</name><argument_list pos:line="6968" pos:column="58">( 
            <comment type="block" pos:line="6969" pos:column="13">/* [out] */</comment> <argument pos:line="6969" pos:column="25">__RPC__deref_out_opt IEnumDebugBoundBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="6969" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="6969" pos:column="86">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6973" pos:column="1">#<cpp:directive pos:line="6973" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6973" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6975" pos:column="5">typedef <type><struct pos:line="6975" pos:column="13">struct <name pos:line="6975" pos:column="20">IDebugBreakpointEvent2Vtbl</name>
    <block pos:line="6976" pos:column="5">{<public type="default" pos:line="6976" pos:column="6">
        <function_decl><type><name pos:line="6977" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="6979" pos:column="9">HRESULT</name></type> ( <name pos:line="6979" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6979" pos:column="37">*</type:modifier><name pos:line="6979" pos:column="38">QueryInterface</name> )<parameter_list pos:line="6979" pos:column="54">( 
            <param><decl><type><name pos:line="6980" pos:column="13">IDebugBreakpointEvent2</name> <type:modifier pos:line="6980" pos:column="36">*</type:modifier></type> <name pos:line="6980" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="6981" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="6981" pos:column="24">__RPC__in</name> <name pos:line="6981" pos:column="34">REFIID</name></type> <name pos:line="6981" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="6982" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="6983" pos:column="13">__RPC__deref_out</name>  <name pos:line="6983" pos:column="31">void</name> <type:modifier pos:line="6983" pos:column="36">*</type:modifier><type:modifier pos:line="6983" pos:column="37">*</type:modifier></type><name pos:line="6983" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6985" pos:column="9">ULONG</name></type> ( <name pos:line="6985" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6985" pos:column="35">*</type:modifier><name pos:line="6985" pos:column="36">AddRef</name> )<parameter_list pos:line="6985" pos:column="44">( 
            <param><decl><type><name pos:line="6986" pos:column="13">IDebugBreakpointEvent2</name> <type:modifier pos:line="6986" pos:column="36">*</type:modifier></type> <name pos:line="6986" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6988" pos:column="9">ULONG</name></type> ( <name pos:line="6988" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="6988" pos:column="35">*</type:modifier><name pos:line="6988" pos:column="36">Release</name> )<parameter_list pos:line="6988" pos:column="45">( 
            <param><decl><type><name pos:line="6989" pos:column="13">IDebugBreakpointEvent2</name> <type:modifier pos:line="6989" pos:column="36">*</type:modifier></type> <name pos:line="6989" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="6991" pos:column="9">HRESULT</name></type> ( <name pos:line="6991" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="6991" pos:column="37">*</type:modifier><name pos:line="6991" pos:column="38">EnumBreakpoints</name> )<parameter_list pos:line="6991" pos:column="55">( 
            <param><decl><type><name pos:line="6992" pos:column="13">IDebugBreakpointEvent2</name> <type:modifier pos:line="6992" pos:column="36">*</type:modifier></type> <name pos:line="6992" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="6993" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="6993" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="6993" pos:column="46">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="6993" pos:column="74">*</type:modifier><type:modifier pos:line="6993" pos:column="75">*</type:modifier></type><name pos:line="6993" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6995" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6996" pos:column="7">IDebugBreakpointEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6998" pos:column="5">interface</name></type> <name pos:line="6998" pos:column="15">IDebugBreakpointEvent2</name>
    <argument_list pos:line="6999" pos:column="5">{
        <argument><expr><name pos:line="7000" pos:column="9">CONST_VTBL</name> struct <name pos:line="7000" pos:column="27">IDebugBreakpointEvent2Vtbl</name> <op:operator pos:line="7000" pos:column="54">*</op:operator><name pos:line="7000" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7005" pos:column="1">#<cpp:directive pos:line="7005" pos:column="2">ifdef</cpp:directive> <name pos:line="7005" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7008" pos:column="1">#<cpp:directive pos:line="7008" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7008" pos:column="9">IDebugBreakpointEvent2_QueryInterface</name><parameter_list pos:line="7008" pos:column="46">(<param><type><name pos:line="7008" pos:column="47">This</name></type></param>,<param><type><name pos:line="7008" pos:column="52">riid</name></type></param>,<param><type><name pos:line="7008" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7009" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7011" pos:column="1">#<cpp:directive pos:line="7011" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7011" pos:column="9">IDebugBreakpointEvent2_AddRef</name><parameter_list pos:line="7011" pos:column="38">(<param><type><name pos:line="7011" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7012" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7014" pos:column="1">#<cpp:directive pos:line="7014" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7014" pos:column="9">IDebugBreakpointEvent2_Release</name><parameter_list pos:line="7014" pos:column="39">(<param><type><name pos:line="7014" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7015" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7018" pos:column="1">#<cpp:directive pos:line="7018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7018" pos:column="9">IDebugBreakpointEvent2_EnumBreakpoints</name><parameter_list pos:line="7018" pos:column="47">(<param><type><name pos:line="7018" pos:column="48">This</name></type></param>,<param><type><name pos:line="7018" pos:column="53">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7019" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumBreakpoints(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7021" pos:column="1">#<cpp:directive pos:line="7021" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7021" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7024" pos:column="1">#<cpp:directive pos:line="7024" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7024" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7029" pos:column="1">#<cpp:directive pos:line="7029" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7029" pos:column="9">/* __IDebugBreakpointEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7032" pos:column="1">#<cpp:directive pos:line="7032" pos:column="2">ifndef</cpp:directive> <name pos:line="7032" pos:column="9">__IDebugExceptionEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7033" pos:column="1">#<cpp:directive pos:line="7033" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7033" pos:column="9">__IDebugExceptionEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7035" pos:column="1">/* interface IDebugExceptionEvent2 */</comment>
<comment type="block" pos:line="7036" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7039" pos:column="1">EXTERN_C</name> <specifier pos:line="7039" pos:column="10">const</specifier> <name pos:line="7039" pos:column="16">IID</name></type> <name pos:line="7039" pos:column="20">IID_IDebugExceptionEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7041" pos:column="1">#<cpp:directive pos:line="7041" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7041" pos:column="5">defined</name><argument_list pos:line="7041" pos:column="12">(<argument><expr><name pos:line="7041" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7041" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7041" pos:column="29">!</op:operator><call><name pos:line="7041" pos:column="30">defined</name><argument_list pos:line="7041" pos:column="37">(<argument><expr><name pos:line="7041" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7043" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7043" pos:column="19">(<argument pos:line="7043" pos:column="20">"51a94113-8788-4a54-ae15-08b74ff922d0"</argument>)</argument_list></macro>
    <label><name pos:line="7044" pos:column="5">IDebugExceptionEvent2</name> :</label> <expr_stmt><expr pos:line="7044" pos:column="29">public <name pos:line="7044" pos:column="36">IUnknown</name>
    <block pos:line="7045" pos:column="5">{
    <expr pos:line="7046" pos:column="5">public<op:operator pos:line="7046" pos:column="11">:</op:operator>
        virtual <name pos:line="7047" pos:column="17">HRESULT</name> <name pos:line="7047" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7047" pos:column="43">GetException</name><argument_list pos:line="7047" pos:column="55">( 
            <comment type="block" pos:line="7048" pos:column="13">/* [out] */</comment> <argument pos:line="7048" pos:column="25">__RPC__out EXCEPTION_INFO *pExceptionInfo</argument>)</argument_list></macro> <op:operator pos:line="7048" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="7048" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="7050" pos:column="9">virtual <name pos:line="7050" pos:column="17">HRESULT</name> <name pos:line="7050" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7050" pos:column="43">GetExceptionDescription</name><argument_list pos:line="7050" pos:column="66">( 
            <comment type="block" pos:line="7051" pos:column="13">/* [out] */</comment> <argument pos:line="7051" pos:column="25">__RPC__deref_out_opt BSTR *pbstrDescription</argument>)</argument_list></macro> <op:operator pos:line="7051" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="7051" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="7053" pos:column="9">virtual <name pos:line="7053" pos:column="17">HRESULT</name> <name pos:line="7053" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="7053" pos:column="43">CanPassToDebuggee</name><argument_list pos:line="7053" pos:column="60">( <argument><expr><name pos:line="7053" pos:column="62">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="7053" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="7053" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="7055" pos:column="9">virtual <name pos:line="7055" pos:column="17">HRESULT</name> <name pos:line="7055" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7055" pos:column="43">PassToDebuggee</name><argument_list pos:line="7055" pos:column="57">( 
            <comment type="block" pos:line="7056" pos:column="13">/* [in] */</comment> <argument pos:line="7056" pos:column="24">BOOL fPass</argument>)</argument_list></macro> <op:operator pos:line="7056" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="7056" pos:column="38">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7060" pos:column="1">#<cpp:directive pos:line="7060" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7060" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7062" pos:column="5">typedef <type><struct pos:line="7062" pos:column="13">struct <name pos:line="7062" pos:column="20">IDebugExceptionEvent2Vtbl</name>
    <block pos:line="7063" pos:column="5">{<public type="default" pos:line="7063" pos:column="6">
        <function_decl><type><name pos:line="7064" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7066" pos:column="9">HRESULT</name></type> ( <name pos:line="7066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7066" pos:column="37">*</type:modifier><name pos:line="7066" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7066" pos:column="54">( 
            <param><decl><type><name pos:line="7067" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7067" pos:column="35">*</type:modifier></type> <name pos:line="7067" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="7068" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7068" pos:column="24">__RPC__in</name> <name pos:line="7068" pos:column="34">REFIID</name></type> <name pos:line="7068" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7069" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7070" pos:column="13">__RPC__deref_out</name>  <name pos:line="7070" pos:column="31">void</name> <type:modifier pos:line="7070" pos:column="36">*</type:modifier><type:modifier pos:line="7070" pos:column="37">*</type:modifier></type><name pos:line="7070" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7072" pos:column="9">ULONG</name></type> ( <name pos:line="7072" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7072" pos:column="35">*</type:modifier><name pos:line="7072" pos:column="36">AddRef</name> )<parameter_list pos:line="7072" pos:column="44">( 
            <param><decl><type><name pos:line="7073" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7073" pos:column="35">*</type:modifier></type> <name pos:line="7073" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7075" pos:column="9">ULONG</name></type> ( <name pos:line="7075" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7075" pos:column="35">*</type:modifier><name pos:line="7075" pos:column="36">Release</name> )<parameter_list pos:line="7075" pos:column="45">( 
            <param><decl><type><name pos:line="7076" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7076" pos:column="35">*</type:modifier></type> <name pos:line="7076" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7078" pos:column="9">HRESULT</name></type> ( <name pos:line="7078" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7078" pos:column="37">*</type:modifier><name pos:line="7078" pos:column="38">GetException</name> )<parameter_list pos:line="7078" pos:column="52">( 
            <param><decl><type><name pos:line="7079" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7079" pos:column="35">*</type:modifier></type> <name pos:line="7079" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="7080" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7080" pos:column="25">__RPC__out</name> <name pos:line="7080" pos:column="36">EXCEPTION_INFO</name> <type:modifier pos:line="7080" pos:column="51">*</type:modifier></type><name pos:line="7080" pos:column="52">pExceptionInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7082" pos:column="9">HRESULT</name></type> ( <name pos:line="7082" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7082" pos:column="37">*</type:modifier><name pos:line="7082" pos:column="38">GetExceptionDescription</name> )<parameter_list pos:line="7082" pos:column="63">( 
            <param><decl><type><name pos:line="7083" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7083" pos:column="35">*</type:modifier></type> <name pos:line="7083" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="7084" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7084" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7084" pos:column="46">BSTR</name> <type:modifier pos:line="7084" pos:column="51">*</type:modifier></type><name pos:line="7084" pos:column="52">pbstrDescription</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7086" pos:column="9">HRESULT</name></type> ( <name pos:line="7086" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7086" pos:column="37">*</type:modifier><name pos:line="7086" pos:column="38">CanPassToDebuggee</name> )<parameter_list pos:line="7086" pos:column="57">( 
            <param><decl><type><name pos:line="7087" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7087" pos:column="35">*</type:modifier></type> <name pos:line="7087" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7089" pos:column="9">HRESULT</name></type> ( <name pos:line="7089" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7089" pos:column="37">*</type:modifier><name pos:line="7089" pos:column="38">PassToDebuggee</name> )<parameter_list pos:line="7089" pos:column="54">( 
            <param><decl><type><name pos:line="7090" pos:column="13">IDebugExceptionEvent2</name> <type:modifier pos:line="7090" pos:column="35">*</type:modifier></type> <name pos:line="7090" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="7091" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7091" pos:column="24">BOOL</name></type> <name pos:line="7091" pos:column="29">fPass</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7093" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7094" pos:column="7">IDebugExceptionEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7096" pos:column="5">interface</name></type> <name pos:line="7096" pos:column="15">IDebugExceptionEvent2</name>
    <argument_list pos:line="7097" pos:column="5">{
        <argument><expr><name pos:line="7098" pos:column="9">CONST_VTBL</name> struct <name pos:line="7098" pos:column="27">IDebugExceptionEvent2Vtbl</name> <op:operator pos:line="7098" pos:column="53">*</op:operator><name pos:line="7098" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7103" pos:column="1">#<cpp:directive pos:line="7103" pos:column="2">ifdef</cpp:directive> <name pos:line="7103" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7106" pos:column="1">#<cpp:directive pos:line="7106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7106" pos:column="9">IDebugExceptionEvent2_QueryInterface</name><parameter_list pos:line="7106" pos:column="45">(<param><type><name pos:line="7106" pos:column="46">This</name></type></param>,<param><type><name pos:line="7106" pos:column="51">riid</name></type></param>,<param><type><name pos:line="7106" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7107" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7109" pos:column="1">#<cpp:directive pos:line="7109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7109" pos:column="9">IDebugExceptionEvent2_AddRef</name><parameter_list pos:line="7109" pos:column="37">(<param><type><name pos:line="7109" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7110" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7112" pos:column="1">#<cpp:directive pos:line="7112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7112" pos:column="9">IDebugExceptionEvent2_Release</name><parameter_list pos:line="7112" pos:column="38">(<param><type><name pos:line="7112" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7113" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7116" pos:column="1">#<cpp:directive pos:line="7116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7116" pos:column="9">IDebugExceptionEvent2_GetException</name><parameter_list pos:line="7116" pos:column="43">(<param><type><name pos:line="7116" pos:column="44">This</name></type></param>,<param><type><name pos:line="7116" pos:column="49">pExceptionInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7117" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetException(This,pExceptionInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="7119" pos:column="1">#<cpp:directive pos:line="7119" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7119" pos:column="9">IDebugExceptionEvent2_GetExceptionDescription</name><parameter_list pos:line="7119" pos:column="54">(<param><type><name pos:line="7119" pos:column="55">This</name></type></param>,<param><type><name pos:line="7119" pos:column="60">pbstrDescription</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7120" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExceptionDescription(This,pbstrDescription) )</cpp:value></cpp:define> 

<cpp:define pos:line="7122" pos:column="1">#<cpp:directive pos:line="7122" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7122" pos:column="9">IDebugExceptionEvent2_CanPassToDebuggee</name><parameter_list pos:line="7122" pos:column="48">(<param><type><name pos:line="7122" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7123" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanPassToDebuggee(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7125" pos:column="1">#<cpp:directive pos:line="7125" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7125" pos:column="9">IDebugExceptionEvent2_PassToDebuggee</name><parameter_list pos:line="7125" pos:column="45">(<param><type><name pos:line="7125" pos:column="46">This</name></type></param>,<param><type><name pos:line="7125" pos:column="51">fPass</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7126" pos:column="5">( (This)-&gt;lpVtbl -&gt; PassToDebuggee(This,fPass) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7128" pos:column="1">#<cpp:directive pos:line="7128" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7128" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7131" pos:column="1">#<cpp:directive pos:line="7131" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7131" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7136" pos:column="1">#<cpp:directive pos:line="7136" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7136" pos:column="9">/* __IDebugExceptionEvent2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="7139" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0040 */</comment>
<comment type="block" pos:line="7140" pos:column="1">/* [local] */</comment> 

<typedef pos:line="7142" pos:column="1">typedef <type><struct pos:line="7142" pos:column="9">struct <name pos:line="7142" pos:column="16">_NATIVE_EXCEPTION_INFO</name>
    <block pos:line="7143" pos:column="5">{<public type="default" pos:line="7143" pos:column="6">
    <decl_stmt><decl><type><name pos:line="7144" pos:column="5">DWORD</name></type> <name pos:line="7144" pos:column="11">ExceptionCode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="7145" pos:column="5">DWORD</name></type> <name pos:line="7145" pos:column="11">ExceptionFlags</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="7146" pos:column="5">DWORD</name></type> <name pos:line="7146" pos:column="11">NumberOfParameters</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="7147" pos:column="5">UINT64</name></type> <name><name pos:line="7147" pos:column="12">ExceptionInformation</name><index pos:line="7147" pos:column="32">[ <expr><lit:literal type="number" pos:line="7147" pos:column="34">15</lit:literal></expr> ]</index></name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="7148" pos:column="9">NATIVE_EXCEPTION_INFO</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="7152" pos:column="1">extern</specifier> <name pos:line="7152" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="7152" pos:column="22">__MIDL_itf_msdbg_0000_0040_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="7153" pos:column="1">extern</specifier> <name pos:line="7153" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="7153" pos:column="22">__MIDL_itf_msdbg_0000_0040_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="7155" pos:column="1">#<cpp:directive pos:line="7155" pos:column="2">ifndef</cpp:directive> <name pos:line="7155" pos:column="9">__IDebugNativeExceptionInfo_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7156" pos:column="1">#<cpp:directive pos:line="7156" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7156" pos:column="9">__IDebugNativeExceptionInfo_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7158" pos:column="1">/* interface IDebugNativeExceptionInfo */</comment>
<comment type="block" pos:line="7159" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7162" pos:column="1">EXTERN_C</name> <specifier pos:line="7162" pos:column="10">const</specifier> <name pos:line="7162" pos:column="16">IID</name></type> <name pos:line="7162" pos:column="20">IID_IDebugNativeExceptionInfo</name></decl>;</decl_stmt>

<cpp:if pos:line="7164" pos:column="1">#<cpp:directive pos:line="7164" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7164" pos:column="5">defined</name><argument_list pos:line="7164" pos:column="12">(<argument><expr><name pos:line="7164" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7164" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7164" pos:column="29">!</op:operator><call><name pos:line="7164" pos:column="30">defined</name><argument_list pos:line="7164" pos:column="37">(<argument><expr><name pos:line="7164" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7166" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7166" pos:column="19">(<argument pos:line="7166" pos:column="20">"3d320710-06c0-437b-a55f-826f48cc7ee7"</argument>)</argument_list></macro>
    <label><name pos:line="7167" pos:column="5">IDebugNativeExceptionInfo</name> :</label> <expr_stmt><expr pos:line="7167" pos:column="33">public <name pos:line="7167" pos:column="40">IUnknown</name>
    <block pos:line="7168" pos:column="5">{
    <expr pos:line="7169" pos:column="5">public<op:operator pos:line="7169" pos:column="11">:</op:operator>
        virtual <name pos:line="7170" pos:column="17">HRESULT</name> <name pos:line="7170" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7170" pos:column="43">GetNativeException</name><argument_list pos:line="7170" pos:column="61">( 
            <comment type="block" pos:line="7171" pos:column="13">/* [out] */</comment> <argument pos:line="7171" pos:column="25">__RPC__out NATIVE_EXCEPTION_INFO *pExceptionInfo</argument>)</argument_list></macro> <op:operator pos:line="7171" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="7171" pos:column="77">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7175" pos:column="1">#<cpp:directive pos:line="7175" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7175" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7177" pos:column="5">typedef <type><struct pos:line="7177" pos:column="13">struct <name pos:line="7177" pos:column="20">IDebugNativeExceptionInfoVtbl</name>
    <block pos:line="7178" pos:column="5">{<public type="default" pos:line="7178" pos:column="6">
        <function_decl><type><name pos:line="7179" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7181" pos:column="9">HRESULT</name></type> ( <name pos:line="7181" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7181" pos:column="37">*</type:modifier><name pos:line="7181" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7181" pos:column="54">( 
            <param><decl><type><name pos:line="7182" pos:column="13">IDebugNativeExceptionInfo</name> <type:modifier pos:line="7182" pos:column="39">*</type:modifier></type> <name pos:line="7182" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="7183" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7183" pos:column="24">__RPC__in</name> <name pos:line="7183" pos:column="34">REFIID</name></type> <name pos:line="7183" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7184" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7185" pos:column="13">__RPC__deref_out</name>  <name pos:line="7185" pos:column="31">void</name> <type:modifier pos:line="7185" pos:column="36">*</type:modifier><type:modifier pos:line="7185" pos:column="37">*</type:modifier></type><name pos:line="7185" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7187" pos:column="9">ULONG</name></type> ( <name pos:line="7187" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7187" pos:column="35">*</type:modifier><name pos:line="7187" pos:column="36">AddRef</name> )<parameter_list pos:line="7187" pos:column="44">( 
            <param><decl><type><name pos:line="7188" pos:column="13">IDebugNativeExceptionInfo</name> <type:modifier pos:line="7188" pos:column="39">*</type:modifier></type> <name pos:line="7188" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7190" pos:column="9">ULONG</name></type> ( <name pos:line="7190" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7190" pos:column="35">*</type:modifier><name pos:line="7190" pos:column="36">Release</name> )<parameter_list pos:line="7190" pos:column="45">( 
            <param><decl><type><name pos:line="7191" pos:column="13">IDebugNativeExceptionInfo</name> <type:modifier pos:line="7191" pos:column="39">*</type:modifier></type> <name pos:line="7191" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7193" pos:column="9">HRESULT</name></type> ( <name pos:line="7193" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7193" pos:column="37">*</type:modifier><name pos:line="7193" pos:column="38">GetNativeException</name> )<parameter_list pos:line="7193" pos:column="58">( 
            <param><decl><type><name pos:line="7194" pos:column="13">IDebugNativeExceptionInfo</name> <type:modifier pos:line="7194" pos:column="39">*</type:modifier></type> <name pos:line="7194" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="7195" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7195" pos:column="25">__RPC__out</name> <name pos:line="7195" pos:column="36">NATIVE_EXCEPTION_INFO</name> <type:modifier pos:line="7195" pos:column="58">*</type:modifier></type><name pos:line="7195" pos:column="59">pExceptionInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7197" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7198" pos:column="7">IDebugNativeExceptionInfoVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7200" pos:column="5">interface</name></type> <name pos:line="7200" pos:column="15">IDebugNativeExceptionInfo</name>
    <argument_list pos:line="7201" pos:column="5">{
        <argument><expr><name pos:line="7202" pos:column="9">CONST_VTBL</name> struct <name pos:line="7202" pos:column="27">IDebugNativeExceptionInfoVtbl</name> <op:operator pos:line="7202" pos:column="57">*</op:operator><name pos:line="7202" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7207" pos:column="1">#<cpp:directive pos:line="7207" pos:column="2">ifdef</cpp:directive> <name pos:line="7207" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7210" pos:column="1">#<cpp:directive pos:line="7210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7210" pos:column="9">IDebugNativeExceptionInfo_QueryInterface</name><parameter_list pos:line="7210" pos:column="49">(<param><type><name pos:line="7210" pos:column="50">This</name></type></param>,<param><type><name pos:line="7210" pos:column="55">riid</name></type></param>,<param><type><name pos:line="7210" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7211" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7213" pos:column="1">#<cpp:directive pos:line="7213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7213" pos:column="9">IDebugNativeExceptionInfo_AddRef</name><parameter_list pos:line="7213" pos:column="41">(<param><type><name pos:line="7213" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7214" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7216" pos:column="1">#<cpp:directive pos:line="7216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7216" pos:column="9">IDebugNativeExceptionInfo_Release</name><parameter_list pos:line="7216" pos:column="42">(<param><type><name pos:line="7216" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7217" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7220" pos:column="1">#<cpp:directive pos:line="7220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7220" pos:column="9">IDebugNativeExceptionInfo_GetNativeException</name><parameter_list pos:line="7220" pos:column="53">(<param><type><name pos:line="7220" pos:column="54">This</name></type></param>,<param><type><name pos:line="7220" pos:column="59">pExceptionInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7221" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNativeException(This,pExceptionInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7223" pos:column="1">#<cpp:directive pos:line="7223" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7223" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7226" pos:column="1">#<cpp:directive pos:line="7226" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7226" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7231" pos:column="1">#<cpp:directive pos:line="7231" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7231" pos:column="9">/* __IDebugNativeExceptionInfo_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7234" pos:column="1">#<cpp:directive pos:line="7234" pos:column="2">ifndef</cpp:directive> <name pos:line="7234" pos:column="9">__IDebugManagedExceptionInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7235" pos:column="1">#<cpp:directive pos:line="7235" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7235" pos:column="9">__IDebugManagedExceptionInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7237" pos:column="1">/* interface IDebugManagedExceptionInfo2 */</comment>
<comment type="block" pos:line="7238" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="7241" pos:column="1">enum <name pos:line="7241" pos:column="6">tagEXCEPTION_BOUNDARY_TYPE</name>
    <block pos:line="7242" pos:column="5">{	<decl><name pos:line="7242" pos:column="9">EXCEPTION_BOUNDARY_NONE</name>	<init pos:line="7242" pos:column="33">= <expr><lit:literal type="number" pos:line="7242" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="7242" pos:column="36">,</op:operator>
	<decl><name pos:line="7243" pos:column="9">EXCEPTION_BOUNDARY_APPDOMAIN</name>	<init pos:line="7243" pos:column="41">= <expr><op:operator pos:line="7243" pos:column="43">(</op:operator> <name pos:line="7243" pos:column="45">EXCEPTION_BOUNDARY_NONE</name> <op:operator pos:line="7243" pos:column="69">+</op:operator> <lit:literal type="number" pos:line="7243" pos:column="71">1</lit:literal> <op:operator pos:line="7243" pos:column="73">)</op:operator></expr></init></decl> <op:operator pos:line="7243" pos:column="75">,</op:operator>
	<decl><name pos:line="7244" pos:column="9">EXCEPTION_BOUNDARY_UNMANAGED</name>	<init pos:line="7244" pos:column="41">= <expr><op:operator pos:line="7244" pos:column="43">(</op:operator> <name pos:line="7244" pos:column="45">EXCEPTION_BOUNDARY_APPDOMAIN</name> <op:operator pos:line="7244" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="7244" pos:column="76">1</lit:literal> <op:operator pos:line="7244" pos:column="78">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="7246" pos:column="1">typedef <type><enum pos:line="7246" pos:column="9">enum <name pos:line="7246" pos:column="14">tagEXCEPTION_BOUNDARY_TYPE</name> <name pos:line="7246" pos:column="41">EXCEPTION_BOUNDARY_TYPE</name>;</enum></type></typedef>


<decl_stmt><decl><type><name pos:line="7249" pos:column="1">EXTERN_C</name> <specifier pos:line="7249" pos:column="10">const</specifier> <name pos:line="7249" pos:column="16">IID</name></type> <name pos:line="7249" pos:column="20">IID_IDebugManagedExceptionInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="7251" pos:column="1">#<cpp:directive pos:line="7251" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7251" pos:column="5">defined</name><argument_list pos:line="7251" pos:column="12">(<argument><expr><name pos:line="7251" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7251" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7251" pos:column="29">!</op:operator><call><name pos:line="7251" pos:column="30">defined</name><argument_list pos:line="7251" pos:column="37">(<argument><expr><name pos:line="7251" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7253" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7253" pos:column="19">(<argument pos:line="7253" pos:column="20">"d288564a-edb2-4214-8690-ff9a82870379"</argument>)</argument_list></macro>
    <label><name pos:line="7254" pos:column="5">IDebugManagedExceptionInfo2</name> :</label> <expr_stmt><expr pos:line="7254" pos:column="35">public <name pos:line="7254" pos:column="42">IUnknown</name>
    <block pos:line="7255" pos:column="5">{
    <expr pos:line="7256" pos:column="5">public<op:operator pos:line="7256" pos:column="11">:</op:operator>
        virtual <name pos:line="7257" pos:column="17">HRESULT</name> <name pos:line="7257" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7257" pos:column="43">GetExceptionMessage</name><argument_list pos:line="7257" pos:column="62">( 
            <comment type="block" pos:line="7258" pos:column="13">/* [out] */</comment> <argument pos:line="7258" pos:column="25">__RPC__deref_out_opt BSTR *pbstrExceptionMessage</argument>)</argument_list></macro> <op:operator pos:line="7258" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="7258" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="7260" pos:column="9">virtual <name pos:line="7260" pos:column="17">HRESULT</name> <name pos:line="7260" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7260" pos:column="43">GetExceptionBoundaryType</name><argument_list pos:line="7260" pos:column="67">( 
            <comment type="block" pos:line="7261" pos:column="13">/* [out] */</comment> <argument pos:line="7261" pos:column="25">__RPC__out EXCEPTION_BOUNDARY_TYPE *pType</argument>)</argument_list></macro> <op:operator pos:line="7261" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="7261" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7265" pos:column="1">#<cpp:directive pos:line="7265" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7265" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7267" pos:column="5">typedef <type><struct pos:line="7267" pos:column="13">struct <name pos:line="7267" pos:column="20">IDebugManagedExceptionInfo2Vtbl</name>
    <block pos:line="7268" pos:column="5">{<public type="default" pos:line="7268" pos:column="6">
        <function_decl><type><name pos:line="7269" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7271" pos:column="9">HRESULT</name></type> ( <name pos:line="7271" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7271" pos:column="37">*</type:modifier><name pos:line="7271" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7271" pos:column="54">( 
            <param><decl><type><name pos:line="7272" pos:column="13">IDebugManagedExceptionInfo2</name> <type:modifier pos:line="7272" pos:column="41">*</type:modifier></type> <name pos:line="7272" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7273" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7273" pos:column="24">__RPC__in</name> <name pos:line="7273" pos:column="34">REFIID</name></type> <name pos:line="7273" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7274" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7275" pos:column="13">__RPC__deref_out</name>  <name pos:line="7275" pos:column="31">void</name> <type:modifier pos:line="7275" pos:column="36">*</type:modifier><type:modifier pos:line="7275" pos:column="37">*</type:modifier></type><name pos:line="7275" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7277" pos:column="9">ULONG</name></type> ( <name pos:line="7277" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7277" pos:column="35">*</type:modifier><name pos:line="7277" pos:column="36">AddRef</name> )<parameter_list pos:line="7277" pos:column="44">( 
            <param><decl><type><name pos:line="7278" pos:column="13">IDebugManagedExceptionInfo2</name> <type:modifier pos:line="7278" pos:column="41">*</type:modifier></type> <name pos:line="7278" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7280" pos:column="9">ULONG</name></type> ( <name pos:line="7280" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7280" pos:column="35">*</type:modifier><name pos:line="7280" pos:column="36">Release</name> )<parameter_list pos:line="7280" pos:column="45">( 
            <param><decl><type><name pos:line="7281" pos:column="13">IDebugManagedExceptionInfo2</name> <type:modifier pos:line="7281" pos:column="41">*</type:modifier></type> <name pos:line="7281" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7283" pos:column="9">HRESULT</name></type> ( <name pos:line="7283" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7283" pos:column="37">*</type:modifier><name pos:line="7283" pos:column="38">GetExceptionMessage</name> )<parameter_list pos:line="7283" pos:column="59">( 
            <param><decl><type><name pos:line="7284" pos:column="13">IDebugManagedExceptionInfo2</name> <type:modifier pos:line="7284" pos:column="41">*</type:modifier></type> <name pos:line="7284" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7285" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7285" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7285" pos:column="46">BSTR</name> <type:modifier pos:line="7285" pos:column="51">*</type:modifier></type><name pos:line="7285" pos:column="52">pbstrExceptionMessage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7287" pos:column="9">HRESULT</name></type> ( <name pos:line="7287" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7287" pos:column="37">*</type:modifier><name pos:line="7287" pos:column="38">GetExceptionBoundaryType</name> )<parameter_list pos:line="7287" pos:column="64">( 
            <param><decl><type><name pos:line="7288" pos:column="13">IDebugManagedExceptionInfo2</name> <type:modifier pos:line="7288" pos:column="41">*</type:modifier></type> <name pos:line="7288" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7289" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7289" pos:column="25">__RPC__out</name> <name pos:line="7289" pos:column="36">EXCEPTION_BOUNDARY_TYPE</name> <type:modifier pos:line="7289" pos:column="60">*</type:modifier></type><name pos:line="7289" pos:column="61">pType</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7291" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7292" pos:column="7">IDebugManagedExceptionInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7294" pos:column="5">interface</name></type> <name pos:line="7294" pos:column="15">IDebugManagedExceptionInfo2</name>
    <argument_list pos:line="7295" pos:column="5">{
        <argument><expr><name pos:line="7296" pos:column="9">CONST_VTBL</name> struct <name pos:line="7296" pos:column="27">IDebugManagedExceptionInfo2Vtbl</name> <op:operator pos:line="7296" pos:column="59">*</op:operator><name pos:line="7296" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7301" pos:column="1">#<cpp:directive pos:line="7301" pos:column="2">ifdef</cpp:directive> <name pos:line="7301" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7304" pos:column="1">#<cpp:directive pos:line="7304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7304" pos:column="9">IDebugManagedExceptionInfo2_QueryInterface</name><parameter_list pos:line="7304" pos:column="51">(<param><type><name pos:line="7304" pos:column="52">This</name></type></param>,<param><type><name pos:line="7304" pos:column="57">riid</name></type></param>,<param><type><name pos:line="7304" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7305" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7307" pos:column="1">#<cpp:directive pos:line="7307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7307" pos:column="9">IDebugManagedExceptionInfo2_AddRef</name><parameter_list pos:line="7307" pos:column="43">(<param><type><name pos:line="7307" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7308" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7310" pos:column="1">#<cpp:directive pos:line="7310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7310" pos:column="9">IDebugManagedExceptionInfo2_Release</name><parameter_list pos:line="7310" pos:column="44">(<param><type><name pos:line="7310" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7311" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7314" pos:column="1">#<cpp:directive pos:line="7314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7314" pos:column="9">IDebugManagedExceptionInfo2_GetExceptionMessage</name><parameter_list pos:line="7314" pos:column="56">(<param><type><name pos:line="7314" pos:column="57">This</name></type></param>,<param><type><name pos:line="7314" pos:column="62">pbstrExceptionMessage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7315" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExceptionMessage(This,pbstrExceptionMessage) )</cpp:value></cpp:define> 

<cpp:define pos:line="7317" pos:column="1">#<cpp:directive pos:line="7317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7317" pos:column="9">IDebugManagedExceptionInfo2_GetExceptionBoundaryType</name><parameter_list pos:line="7317" pos:column="61">(<param><type><name pos:line="7317" pos:column="62">This</name></type></param>,<param><type><name pos:line="7317" pos:column="67">pType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7318" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExceptionBoundaryType(This,pType) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7320" pos:column="1">#<cpp:directive pos:line="7320" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7320" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7323" pos:column="1">#<cpp:directive pos:line="7323" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7323" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7328" pos:column="1">#<cpp:directive pos:line="7328" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7328" pos:column="9">/* __IDebugManagedExceptionInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7331" pos:column="1">#<cpp:directive pos:line="7331" pos:column="2">ifndef</cpp:directive> <name pos:line="7331" pos:column="9">__IDebugOutputStringEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7332" pos:column="1">#<cpp:directive pos:line="7332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7332" pos:column="9">__IDebugOutputStringEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7334" pos:column="1">/* interface IDebugOutputStringEvent2 */</comment>
<comment type="block" pos:line="7335" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7338" pos:column="1">EXTERN_C</name> <specifier pos:line="7338" pos:column="10">const</specifier> <name pos:line="7338" pos:column="16">IID</name></type> <name pos:line="7338" pos:column="20">IID_IDebugOutputStringEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7340" pos:column="1">#<cpp:directive pos:line="7340" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7340" pos:column="5">defined</name><argument_list pos:line="7340" pos:column="12">(<argument><expr><name pos:line="7340" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7340" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7340" pos:column="29">!</op:operator><call><name pos:line="7340" pos:column="30">defined</name><argument_list pos:line="7340" pos:column="37">(<argument><expr><name pos:line="7340" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7342" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7342" pos:column="19">(<argument pos:line="7342" pos:column="20">"569c4bb1-7b82-46fc-ae28-4536ddad753e"</argument>)</argument_list></macro>
    <label><name pos:line="7343" pos:column="5">IDebugOutputStringEvent2</name> :</label> <expr_stmt><expr pos:line="7343" pos:column="32">public <name pos:line="7343" pos:column="39">IUnknown</name>
    <block pos:line="7344" pos:column="5">{
    <expr pos:line="7345" pos:column="5">public<op:operator pos:line="7345" pos:column="11">:</op:operator>
        virtual <name pos:line="7346" pos:column="17">HRESULT</name> <name pos:line="7346" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7346" pos:column="43">GetString</name><argument_list pos:line="7346" pos:column="52">( 
            <comment type="block" pos:line="7347" pos:column="13">/* [out] */</comment> <argument pos:line="7347" pos:column="25">__RPC__deref_out_opt BSTR *pbstrString</argument>)</argument_list></macro> <op:operator pos:line="7347" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="7347" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7351" pos:column="1">#<cpp:directive pos:line="7351" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7351" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7353" pos:column="5">typedef <type><struct pos:line="7353" pos:column="13">struct <name pos:line="7353" pos:column="20">IDebugOutputStringEvent2Vtbl</name>
    <block pos:line="7354" pos:column="5">{<public type="default" pos:line="7354" pos:column="6">
        <function_decl><type><name pos:line="7355" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7357" pos:column="9">HRESULT</name></type> ( <name pos:line="7357" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7357" pos:column="37">*</type:modifier><name pos:line="7357" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7357" pos:column="54">( 
            <param><decl><type><name pos:line="7358" pos:column="13">IDebugOutputStringEvent2</name> <type:modifier pos:line="7358" pos:column="38">*</type:modifier></type> <name pos:line="7358" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="7359" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7359" pos:column="24">__RPC__in</name> <name pos:line="7359" pos:column="34">REFIID</name></type> <name pos:line="7359" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7360" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7361" pos:column="13">__RPC__deref_out</name>  <name pos:line="7361" pos:column="31">void</name> <type:modifier pos:line="7361" pos:column="36">*</type:modifier><type:modifier pos:line="7361" pos:column="37">*</type:modifier></type><name pos:line="7361" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7363" pos:column="9">ULONG</name></type> ( <name pos:line="7363" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7363" pos:column="35">*</type:modifier><name pos:line="7363" pos:column="36">AddRef</name> )<parameter_list pos:line="7363" pos:column="44">( 
            <param><decl><type><name pos:line="7364" pos:column="13">IDebugOutputStringEvent2</name> <type:modifier pos:line="7364" pos:column="38">*</type:modifier></type> <name pos:line="7364" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7366" pos:column="9">ULONG</name></type> ( <name pos:line="7366" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7366" pos:column="35">*</type:modifier><name pos:line="7366" pos:column="36">Release</name> )<parameter_list pos:line="7366" pos:column="45">( 
            <param><decl><type><name pos:line="7367" pos:column="13">IDebugOutputStringEvent2</name> <type:modifier pos:line="7367" pos:column="38">*</type:modifier></type> <name pos:line="7367" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7369" pos:column="9">HRESULT</name></type> ( <name pos:line="7369" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7369" pos:column="37">*</type:modifier><name pos:line="7369" pos:column="38">GetString</name> )<parameter_list pos:line="7369" pos:column="49">( 
            <param><decl><type><name pos:line="7370" pos:column="13">IDebugOutputStringEvent2</name> <type:modifier pos:line="7370" pos:column="38">*</type:modifier></type> <name pos:line="7370" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="7371" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7371" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7371" pos:column="46">BSTR</name> <type:modifier pos:line="7371" pos:column="51">*</type:modifier></type><name pos:line="7371" pos:column="52">pbstrString</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7373" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7374" pos:column="7">IDebugOutputStringEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7376" pos:column="5">interface</name></type> <name pos:line="7376" pos:column="15">IDebugOutputStringEvent2</name>
    <argument_list pos:line="7377" pos:column="5">{
        <argument><expr><name pos:line="7378" pos:column="9">CONST_VTBL</name> struct <name pos:line="7378" pos:column="27">IDebugOutputStringEvent2Vtbl</name> <op:operator pos:line="7378" pos:column="56">*</op:operator><name pos:line="7378" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7383" pos:column="1">#<cpp:directive pos:line="7383" pos:column="2">ifdef</cpp:directive> <name pos:line="7383" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7386" pos:column="1">#<cpp:directive pos:line="7386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7386" pos:column="9">IDebugOutputStringEvent2_QueryInterface</name><parameter_list pos:line="7386" pos:column="48">(<param><type><name pos:line="7386" pos:column="49">This</name></type></param>,<param><type><name pos:line="7386" pos:column="54">riid</name></type></param>,<param><type><name pos:line="7386" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7387" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7389" pos:column="1">#<cpp:directive pos:line="7389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7389" pos:column="9">IDebugOutputStringEvent2_AddRef</name><parameter_list pos:line="7389" pos:column="40">(<param><type><name pos:line="7389" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7390" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7392" pos:column="1">#<cpp:directive pos:line="7392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7392" pos:column="9">IDebugOutputStringEvent2_Release</name><parameter_list pos:line="7392" pos:column="41">(<param><type><name pos:line="7392" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7393" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7396" pos:column="1">#<cpp:directive pos:line="7396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7396" pos:column="9">IDebugOutputStringEvent2_GetString</name><parameter_list pos:line="7396" pos:column="43">(<param><type><name pos:line="7396" pos:column="44">This</name></type></param>,<param><type><name pos:line="7396" pos:column="49">pbstrString</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7397" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetString(This,pbstrString) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7399" pos:column="1">#<cpp:directive pos:line="7399" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7399" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7402" pos:column="1">#<cpp:directive pos:line="7402" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7402" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7407" pos:column="1">#<cpp:directive pos:line="7407" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7407" pos:column="9">/* __IDebugOutputStringEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7410" pos:column="1">#<cpp:directive pos:line="7410" pos:column="2">ifndef</cpp:directive> <name pos:line="7410" pos:column="9">__IDebugModuleLoadEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7411" pos:column="1">#<cpp:directive pos:line="7411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7411" pos:column="9">__IDebugModuleLoadEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7413" pos:column="1">/* interface IDebugModuleLoadEvent2 */</comment>
<comment type="block" pos:line="7414" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7417" pos:column="1">EXTERN_C</name> <specifier pos:line="7417" pos:column="10">const</specifier> <name pos:line="7417" pos:column="16">IID</name></type> <name pos:line="7417" pos:column="20">IID_IDebugModuleLoadEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7419" pos:column="1">#<cpp:directive pos:line="7419" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7419" pos:column="5">defined</name><argument_list pos:line="7419" pos:column="12">(<argument><expr><name pos:line="7419" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7419" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7419" pos:column="29">!</op:operator><call><name pos:line="7419" pos:column="30">defined</name><argument_list pos:line="7419" pos:column="37">(<argument><expr><name pos:line="7419" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7421" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7421" pos:column="19">(<argument pos:line="7421" pos:column="20">"989db083-0d7c-40d1-a9d9-921bf611a4b2"</argument>)</argument_list></macro>
    <label><name pos:line="7422" pos:column="5">IDebugModuleLoadEvent2</name> :</label> <expr_stmt><expr pos:line="7422" pos:column="30">public <name pos:line="7422" pos:column="37">IUnknown</name>
    <block pos:line="7423" pos:column="5">{
    <expr pos:line="7424" pos:column="5">public<op:operator pos:line="7424" pos:column="11">:</op:operator>
        virtual <name pos:line="7425" pos:column="17">HRESULT</name> <name pos:line="7425" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7425" pos:column="43">GetModule</name><argument_list pos:line="7425" pos:column="52">( 
            <comment type="block" pos:line="7426" pos:column="13">/* [out] */</comment> <argument pos:line="7426" pos:column="25">__RPC__deref_out_opt IDebugModule2 **pModule</argument>,
            <comment type="block" pos:line="7427" pos:column="13">/* [out][in] */</comment> <argument pos:line="7427" pos:column="29">__RPC__deref_inout_opt BSTR *pbstrDebugMessage</argument>,
            <comment type="block" pos:line="7428" pos:column="13">/* [out][in] */</comment> <argument pos:line="7428" pos:column="29">__RPC__inout BOOL *pbLoad</argument>)</argument_list></macro> <op:operator pos:line="7428" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="7428" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7432" pos:column="1">#<cpp:directive pos:line="7432" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7432" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7434" pos:column="5">typedef <type><struct pos:line="7434" pos:column="13">struct <name pos:line="7434" pos:column="20">IDebugModuleLoadEvent2Vtbl</name>
    <block pos:line="7435" pos:column="5">{<public type="default" pos:line="7435" pos:column="6">
        <function_decl><type><name pos:line="7436" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7438" pos:column="9">HRESULT</name></type> ( <name pos:line="7438" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7438" pos:column="37">*</type:modifier><name pos:line="7438" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7438" pos:column="54">( 
            <param><decl><type><name pos:line="7439" pos:column="13">IDebugModuleLoadEvent2</name> <type:modifier pos:line="7439" pos:column="36">*</type:modifier></type> <name pos:line="7439" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="7440" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7440" pos:column="24">__RPC__in</name> <name pos:line="7440" pos:column="34">REFIID</name></type> <name pos:line="7440" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7441" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7442" pos:column="13">__RPC__deref_out</name>  <name pos:line="7442" pos:column="31">void</name> <type:modifier pos:line="7442" pos:column="36">*</type:modifier><type:modifier pos:line="7442" pos:column="37">*</type:modifier></type><name pos:line="7442" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7444" pos:column="9">ULONG</name></type> ( <name pos:line="7444" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7444" pos:column="35">*</type:modifier><name pos:line="7444" pos:column="36">AddRef</name> )<parameter_list pos:line="7444" pos:column="44">( 
            <param><decl><type><name pos:line="7445" pos:column="13">IDebugModuleLoadEvent2</name> <type:modifier pos:line="7445" pos:column="36">*</type:modifier></type> <name pos:line="7445" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7447" pos:column="9">ULONG</name></type> ( <name pos:line="7447" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7447" pos:column="35">*</type:modifier><name pos:line="7447" pos:column="36">Release</name> )<parameter_list pos:line="7447" pos:column="45">( 
            <param><decl><type><name pos:line="7448" pos:column="13">IDebugModuleLoadEvent2</name> <type:modifier pos:line="7448" pos:column="36">*</type:modifier></type> <name pos:line="7448" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7450" pos:column="9">HRESULT</name></type> ( <name pos:line="7450" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7450" pos:column="37">*</type:modifier><name pos:line="7450" pos:column="38">GetModule</name> )<parameter_list pos:line="7450" pos:column="49">( 
            <param><decl><type><name pos:line="7451" pos:column="13">IDebugModuleLoadEvent2</name> <type:modifier pos:line="7451" pos:column="36">*</type:modifier></type> <name pos:line="7451" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="7452" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7452" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7452" pos:column="46">IDebugModule2</name> <type:modifier pos:line="7452" pos:column="60">*</type:modifier><type:modifier pos:line="7452" pos:column="61">*</type:modifier></type><name pos:line="7452" pos:column="62">pModule</name></decl></param>,
            <comment type="block" pos:line="7453" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="7453" pos:column="29">__RPC__deref_inout_opt</name> <name pos:line="7453" pos:column="52">BSTR</name> <type:modifier pos:line="7453" pos:column="57">*</type:modifier></type><name pos:line="7453" pos:column="58">pbstrDebugMessage</name></decl></param>,
            <comment type="block" pos:line="7454" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="7454" pos:column="29">__RPC__inout</name> <name pos:line="7454" pos:column="42">BOOL</name> <type:modifier pos:line="7454" pos:column="47">*</type:modifier></type><name pos:line="7454" pos:column="48">pbLoad</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7456" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7457" pos:column="7">IDebugModuleLoadEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7459" pos:column="5">interface</name></type> <name pos:line="7459" pos:column="15">IDebugModuleLoadEvent2</name>
    <argument_list pos:line="7460" pos:column="5">{
        <argument><expr><name pos:line="7461" pos:column="9">CONST_VTBL</name> struct <name pos:line="7461" pos:column="27">IDebugModuleLoadEvent2Vtbl</name> <op:operator pos:line="7461" pos:column="54">*</op:operator><name pos:line="7461" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7466" pos:column="1">#<cpp:directive pos:line="7466" pos:column="2">ifdef</cpp:directive> <name pos:line="7466" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7469" pos:column="1">#<cpp:directive pos:line="7469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7469" pos:column="9">IDebugModuleLoadEvent2_QueryInterface</name><parameter_list pos:line="7469" pos:column="46">(<param><type><name pos:line="7469" pos:column="47">This</name></type></param>,<param><type><name pos:line="7469" pos:column="52">riid</name></type></param>,<param><type><name pos:line="7469" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7470" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7472" pos:column="1">#<cpp:directive pos:line="7472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7472" pos:column="9">IDebugModuleLoadEvent2_AddRef</name><parameter_list pos:line="7472" pos:column="38">(<param><type><name pos:line="7472" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7473" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7475" pos:column="1">#<cpp:directive pos:line="7475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7475" pos:column="9">IDebugModuleLoadEvent2_Release</name><parameter_list pos:line="7475" pos:column="39">(<param><type><name pos:line="7475" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7476" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7479" pos:column="1">#<cpp:directive pos:line="7479" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7479" pos:column="9">IDebugModuleLoadEvent2_GetModule</name><parameter_list pos:line="7479" pos:column="41">(<param><type><name pos:line="7479" pos:column="42">This</name></type></param>,<param><type><name pos:line="7479" pos:column="47">pModule</name></type></param>,<param><type><name pos:line="7479" pos:column="55">pbstrDebugMessage</name></type></param>,<param><type><name pos:line="7479" pos:column="73">pbLoad</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7480" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetModule(This,pModule,pbstrDebugMessage,pbLoad) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7482" pos:column="1">#<cpp:directive pos:line="7482" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7482" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7485" pos:column="1">#<cpp:directive pos:line="7485" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7485" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7490" pos:column="1">#<cpp:directive pos:line="7490" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7490" pos:column="9">/* __IDebugModuleLoadEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7493" pos:column="1">#<cpp:directive pos:line="7493" pos:column="2">ifndef</cpp:directive> <name pos:line="7493" pos:column="9">__IDebugSymbolSearchEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7494" pos:column="1">#<cpp:directive pos:line="7494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7494" pos:column="9">__IDebugSymbolSearchEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7496" pos:column="1">/* interface IDebugSymbolSearchEvent2 */</comment>
<comment type="block" pos:line="7497" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="7500" pos:column="1">enum <name pos:line="7500" pos:column="6">enum_MODULE_INFO_FLAGS</name>
    <block pos:line="7501" pos:column="5">{	<decl><name pos:line="7501" pos:column="9">MIF_SYMBOLS_LOADED</name>	<init pos:line="7501" pos:column="33">= <expr><lit:literal type="number" pos:line="7501" pos:column="35">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="7503" pos:column="1">typedef <type><name pos:line="7503" pos:column="9">DWORD</name></type> <name pos:line="7503" pos:column="15">MODULE_INFO_FLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="7506" pos:column="1">EXTERN_C</name> <specifier pos:line="7506" pos:column="10">const</specifier> <name pos:line="7506" pos:column="16">IID</name></type> <name pos:line="7506" pos:column="20">IID_IDebugSymbolSearchEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7508" pos:column="1">#<cpp:directive pos:line="7508" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7508" pos:column="5">defined</name><argument_list pos:line="7508" pos:column="12">(<argument><expr><name pos:line="7508" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7508" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7508" pos:column="29">!</op:operator><call><name pos:line="7508" pos:column="30">defined</name><argument_list pos:line="7508" pos:column="37">(<argument><expr><name pos:line="7508" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7510" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7510" pos:column="19">(<argument pos:line="7510" pos:column="20">"638F7C54-C160-4c7b-B2D0-E0337BC61F8C"</argument>)</argument_list></macro>
    <label><name pos:line="7511" pos:column="5">IDebugSymbolSearchEvent2</name> :</label> <expr_stmt><expr pos:line="7511" pos:column="32">public <name pos:line="7511" pos:column="39">IUnknown</name>
    <block pos:line="7512" pos:column="5">{
    <expr pos:line="7513" pos:column="5">public<op:operator pos:line="7513" pos:column="11">:</op:operator>
        virtual <name pos:line="7514" pos:column="17">HRESULT</name> <name pos:line="7514" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7514" pos:column="43">GetSymbolSearchInfo</name><argument_list pos:line="7514" pos:column="62">( 
            <comment type="block" pos:line="7515" pos:column="13">/* [out] */</comment> <argument pos:line="7515" pos:column="25">__RPC__deref_out_opt IDebugModule3 **pModule</argument>,
            <comment type="block" pos:line="7516" pos:column="13">/* [out][in] */</comment> <argument pos:line="7516" pos:column="29">__RPC__deref_inout_opt BSTR *pbstrDebugMessage</argument>,
            <comment type="block" pos:line="7517" pos:column="13">/* [out] */</comment> <argument pos:line="7517" pos:column="25">__RPC__out MODULE_INFO_FLAGS *pdwModuleInfoFlags</argument>)</argument_list></macro> <op:operator pos:line="7517" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="7517" pos:column="77">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7521" pos:column="1">#<cpp:directive pos:line="7521" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7521" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7523" pos:column="5">typedef <type><struct pos:line="7523" pos:column="13">struct <name pos:line="7523" pos:column="20">IDebugSymbolSearchEvent2Vtbl</name>
    <block pos:line="7524" pos:column="5">{<public type="default" pos:line="7524" pos:column="6">
        <function_decl><type><name pos:line="7525" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7527" pos:column="9">HRESULT</name></type> ( <name pos:line="7527" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7527" pos:column="37">*</type:modifier><name pos:line="7527" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7527" pos:column="54">( 
            <param><decl><type><name pos:line="7528" pos:column="13">IDebugSymbolSearchEvent2</name> <type:modifier pos:line="7528" pos:column="38">*</type:modifier></type> <name pos:line="7528" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="7529" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7529" pos:column="24">__RPC__in</name> <name pos:line="7529" pos:column="34">REFIID</name></type> <name pos:line="7529" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7530" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7531" pos:column="13">__RPC__deref_out</name>  <name pos:line="7531" pos:column="31">void</name> <type:modifier pos:line="7531" pos:column="36">*</type:modifier><type:modifier pos:line="7531" pos:column="37">*</type:modifier></type><name pos:line="7531" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7533" pos:column="9">ULONG</name></type> ( <name pos:line="7533" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7533" pos:column="35">*</type:modifier><name pos:line="7533" pos:column="36">AddRef</name> )<parameter_list pos:line="7533" pos:column="44">( 
            <param><decl><type><name pos:line="7534" pos:column="13">IDebugSymbolSearchEvent2</name> <type:modifier pos:line="7534" pos:column="38">*</type:modifier></type> <name pos:line="7534" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7536" pos:column="9">ULONG</name></type> ( <name pos:line="7536" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7536" pos:column="35">*</type:modifier><name pos:line="7536" pos:column="36">Release</name> )<parameter_list pos:line="7536" pos:column="45">( 
            <param><decl><type><name pos:line="7537" pos:column="13">IDebugSymbolSearchEvent2</name> <type:modifier pos:line="7537" pos:column="38">*</type:modifier></type> <name pos:line="7537" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7539" pos:column="9">HRESULT</name></type> ( <name pos:line="7539" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7539" pos:column="37">*</type:modifier><name pos:line="7539" pos:column="38">GetSymbolSearchInfo</name> )<parameter_list pos:line="7539" pos:column="59">( 
            <param><decl><type><name pos:line="7540" pos:column="13">IDebugSymbolSearchEvent2</name> <type:modifier pos:line="7540" pos:column="38">*</type:modifier></type> <name pos:line="7540" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="7541" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7541" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7541" pos:column="46">IDebugModule3</name> <type:modifier pos:line="7541" pos:column="60">*</type:modifier><type:modifier pos:line="7541" pos:column="61">*</type:modifier></type><name pos:line="7541" pos:column="62">pModule</name></decl></param>,
            <comment type="block" pos:line="7542" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="7542" pos:column="29">__RPC__deref_inout_opt</name> <name pos:line="7542" pos:column="52">BSTR</name> <type:modifier pos:line="7542" pos:column="57">*</type:modifier></type><name pos:line="7542" pos:column="58">pbstrDebugMessage</name></decl></param>,
            <comment type="block" pos:line="7543" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7543" pos:column="25">__RPC__out</name> <name pos:line="7543" pos:column="36">MODULE_INFO_FLAGS</name> <type:modifier pos:line="7543" pos:column="54">*</type:modifier></type><name pos:line="7543" pos:column="55">pdwModuleInfoFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7545" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7546" pos:column="7">IDebugSymbolSearchEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7548" pos:column="5">interface</name></type> <name pos:line="7548" pos:column="15">IDebugSymbolSearchEvent2</name>
    <argument_list pos:line="7549" pos:column="5">{
        <argument><expr><name pos:line="7550" pos:column="9">CONST_VTBL</name> struct <name pos:line="7550" pos:column="27">IDebugSymbolSearchEvent2Vtbl</name> <op:operator pos:line="7550" pos:column="56">*</op:operator><name pos:line="7550" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7555" pos:column="1">#<cpp:directive pos:line="7555" pos:column="2">ifdef</cpp:directive> <name pos:line="7555" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7558" pos:column="1">#<cpp:directive pos:line="7558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7558" pos:column="9">IDebugSymbolSearchEvent2_QueryInterface</name><parameter_list pos:line="7558" pos:column="48">(<param><type><name pos:line="7558" pos:column="49">This</name></type></param>,<param><type><name pos:line="7558" pos:column="54">riid</name></type></param>,<param><type><name pos:line="7558" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7559" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7561" pos:column="1">#<cpp:directive pos:line="7561" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7561" pos:column="9">IDebugSymbolSearchEvent2_AddRef</name><parameter_list pos:line="7561" pos:column="40">(<param><type><name pos:line="7561" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7562" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7564" pos:column="1">#<cpp:directive pos:line="7564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7564" pos:column="9">IDebugSymbolSearchEvent2_Release</name><parameter_list pos:line="7564" pos:column="41">(<param><type><name pos:line="7564" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7565" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7568" pos:column="1">#<cpp:directive pos:line="7568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7568" pos:column="9">IDebugSymbolSearchEvent2_GetSymbolSearchInfo</name><parameter_list pos:line="7568" pos:column="53">(<param><type><name pos:line="7568" pos:column="54">This</name></type></param>,<param><type><name pos:line="7568" pos:column="59">pModule</name></type></param>,<param><type><name pos:line="7568" pos:column="67">pbstrDebugMessage</name></type></param>,<param><type><name pos:line="7568" pos:column="85">pdwModuleInfoFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7569" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSymbolSearchInfo(This,pModule,pbstrDebugMessage,pdwModuleInfoFlags) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7571" pos:column="1">#<cpp:directive pos:line="7571" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7571" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7574" pos:column="1">#<cpp:directive pos:line="7574" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7574" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7579" pos:column="1">#<cpp:directive pos:line="7579" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7579" pos:column="9">/* __IDebugSymbolSearchEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7582" pos:column="1">#<cpp:directive pos:line="7582" pos:column="2">ifndef</cpp:directive> <name pos:line="7582" pos:column="9">__IDebugBeforeSymbolSearchEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7583" pos:column="1">#<cpp:directive pos:line="7583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7583" pos:column="9">__IDebugBeforeSymbolSearchEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7585" pos:column="1">/* interface IDebugBeforeSymbolSearchEvent2 */</comment>
<comment type="block" pos:line="7586" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7589" pos:column="1">EXTERN_C</name> <specifier pos:line="7589" pos:column="10">const</specifier> <name pos:line="7589" pos:column="16">IID</name></type> <name pos:line="7589" pos:column="20">IID_IDebugBeforeSymbolSearchEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7591" pos:column="1">#<cpp:directive pos:line="7591" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7591" pos:column="5">defined</name><argument_list pos:line="7591" pos:column="12">(<argument><expr><name pos:line="7591" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7591" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7591" pos:column="29">!</op:operator><call><name pos:line="7591" pos:column="30">defined</name><argument_list pos:line="7591" pos:column="37">(<argument><expr><name pos:line="7591" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7593" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7593" pos:column="19">(<argument pos:line="7593" pos:column="20">"B15C8149-2B81-40ae-9388-62FA276AE14C"</argument>)</argument_list></macro>
    <label><name pos:line="7594" pos:column="5">IDebugBeforeSymbolSearchEvent2</name> :</label> <expr_stmt><expr pos:line="7594" pos:column="38">public <name pos:line="7594" pos:column="45">IUnknown</name>
    <block pos:line="7595" pos:column="5">{
    <expr pos:line="7596" pos:column="5">public<op:operator pos:line="7596" pos:column="11">:</op:operator>
        virtual <name pos:line="7597" pos:column="17">HRESULT</name> <name pos:line="7597" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7597" pos:column="43">GetModuleName</name><argument_list pos:line="7597" pos:column="56">( 
            <comment type="block" pos:line="7598" pos:column="13">/* [out] */</comment> <argument pos:line="7598" pos:column="25">__RPC__deref_out_opt BSTR *pbstrModuleName</argument>)</argument_list></macro> <op:operator pos:line="7598" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="7598" pos:column="71">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7602" pos:column="1">#<cpp:directive pos:line="7602" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7602" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7604" pos:column="5">typedef <type><struct pos:line="7604" pos:column="13">struct <name pos:line="7604" pos:column="20">IDebugBeforeSymbolSearchEvent2Vtbl</name>
    <block pos:line="7605" pos:column="5">{<public type="default" pos:line="7605" pos:column="6">
        <function_decl><type><name pos:line="7606" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7608" pos:column="9">HRESULT</name></type> ( <name pos:line="7608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7608" pos:column="37">*</type:modifier><name pos:line="7608" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7608" pos:column="54">( 
            <param><decl><type><name pos:line="7609" pos:column="13">IDebugBeforeSymbolSearchEvent2</name> <type:modifier pos:line="7609" pos:column="44">*</type:modifier></type> <name pos:line="7609" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="7610" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7610" pos:column="24">__RPC__in</name> <name pos:line="7610" pos:column="34">REFIID</name></type> <name pos:line="7610" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7611" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7612" pos:column="13">__RPC__deref_out</name>  <name pos:line="7612" pos:column="31">void</name> <type:modifier pos:line="7612" pos:column="36">*</type:modifier><type:modifier pos:line="7612" pos:column="37">*</type:modifier></type><name pos:line="7612" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7614" pos:column="9">ULONG</name></type> ( <name pos:line="7614" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7614" pos:column="35">*</type:modifier><name pos:line="7614" pos:column="36">AddRef</name> )<parameter_list pos:line="7614" pos:column="44">( 
            <param><decl><type><name pos:line="7615" pos:column="13">IDebugBeforeSymbolSearchEvent2</name> <type:modifier pos:line="7615" pos:column="44">*</type:modifier></type> <name pos:line="7615" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7617" pos:column="9">ULONG</name></type> ( <name pos:line="7617" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7617" pos:column="35">*</type:modifier><name pos:line="7617" pos:column="36">Release</name> )<parameter_list pos:line="7617" pos:column="45">( 
            <param><decl><type><name pos:line="7618" pos:column="13">IDebugBeforeSymbolSearchEvent2</name> <type:modifier pos:line="7618" pos:column="44">*</type:modifier></type> <name pos:line="7618" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7620" pos:column="9">HRESULT</name></type> ( <name pos:line="7620" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7620" pos:column="37">*</type:modifier><name pos:line="7620" pos:column="38">GetModuleName</name> )<parameter_list pos:line="7620" pos:column="53">( 
            <param><decl><type><name pos:line="7621" pos:column="13">IDebugBeforeSymbolSearchEvent2</name> <type:modifier pos:line="7621" pos:column="44">*</type:modifier></type> <name pos:line="7621" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="7622" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7622" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7622" pos:column="46">BSTR</name> <type:modifier pos:line="7622" pos:column="51">*</type:modifier></type><name pos:line="7622" pos:column="52">pbstrModuleName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7624" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7625" pos:column="7">IDebugBeforeSymbolSearchEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7627" pos:column="5">interface</name></type> <name pos:line="7627" pos:column="15">IDebugBeforeSymbolSearchEvent2</name>
    <argument_list pos:line="7628" pos:column="5">{
        <argument><expr><name pos:line="7629" pos:column="9">CONST_VTBL</name> struct <name pos:line="7629" pos:column="27">IDebugBeforeSymbolSearchEvent2Vtbl</name> <op:operator pos:line="7629" pos:column="62">*</op:operator><name pos:line="7629" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7634" pos:column="1">#<cpp:directive pos:line="7634" pos:column="2">ifdef</cpp:directive> <name pos:line="7634" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7637" pos:column="1">#<cpp:directive pos:line="7637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7637" pos:column="9">IDebugBeforeSymbolSearchEvent2_QueryInterface</name><parameter_list pos:line="7637" pos:column="54">(<param><type><name pos:line="7637" pos:column="55">This</name></type></param>,<param><type><name pos:line="7637" pos:column="60">riid</name></type></param>,<param><type><name pos:line="7637" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7638" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7640" pos:column="1">#<cpp:directive pos:line="7640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7640" pos:column="9">IDebugBeforeSymbolSearchEvent2_AddRef</name><parameter_list pos:line="7640" pos:column="46">(<param><type><name pos:line="7640" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7641" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7643" pos:column="1">#<cpp:directive pos:line="7643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7643" pos:column="9">IDebugBeforeSymbolSearchEvent2_Release</name><parameter_list pos:line="7643" pos:column="47">(<param><type><name pos:line="7643" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7644" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7647" pos:column="1">#<cpp:directive pos:line="7647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7647" pos:column="9">IDebugBeforeSymbolSearchEvent2_GetModuleName</name><parameter_list pos:line="7647" pos:column="53">(<param><type><name pos:line="7647" pos:column="54">This</name></type></param>,<param><type><name pos:line="7647" pos:column="59">pbstrModuleName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7648" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetModuleName(This,pbstrModuleName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7650" pos:column="1">#<cpp:directive pos:line="7650" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7650" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7653" pos:column="1">#<cpp:directive pos:line="7653" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7653" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7658" pos:column="1">#<cpp:directive pos:line="7658" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7658" pos:column="9">/* __IDebugBeforeSymbolSearchEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7661" pos:column="1">#<cpp:directive pos:line="7661" pos:column="2">ifndef</cpp:directive> <name pos:line="7661" pos:column="9">__IDebugPropertyCreateEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7662" pos:column="1">#<cpp:directive pos:line="7662" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7662" pos:column="9">__IDebugPropertyCreateEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7664" pos:column="1">/* interface IDebugPropertyCreateEvent2 */</comment>
<comment type="block" pos:line="7665" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7668" pos:column="1">EXTERN_C</name> <specifier pos:line="7668" pos:column="10">const</specifier> <name pos:line="7668" pos:column="16">IID</name></type> <name pos:line="7668" pos:column="20">IID_IDebugPropertyCreateEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7670" pos:column="1">#<cpp:directive pos:line="7670" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7670" pos:column="5">defined</name><argument_list pos:line="7670" pos:column="12">(<argument><expr><name pos:line="7670" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7670" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7670" pos:column="29">!</op:operator><call><name pos:line="7670" pos:column="30">defined</name><argument_list pos:line="7670" pos:column="37">(<argument><expr><name pos:line="7670" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7672" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7672" pos:column="19">(<argument pos:line="7672" pos:column="20">"ded6d613-a3db-4e35-bb5b-a92391133f03"</argument>)</argument_list></macro>
    <label><name pos:line="7673" pos:column="5">IDebugPropertyCreateEvent2</name> :</label> <expr_stmt><expr pos:line="7673" pos:column="34">public <name pos:line="7673" pos:column="41">IUnknown</name>
    <block pos:line="7674" pos:column="5">{
    <expr pos:line="7675" pos:column="5">public<op:operator pos:line="7675" pos:column="11">:</op:operator>
        virtual <name pos:line="7676" pos:column="17">HRESULT</name> <name pos:line="7676" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7676" pos:column="43">GetDebugProperty</name><argument_list pos:line="7676" pos:column="59">( 
            <comment type="block" pos:line="7677" pos:column="13">/* [out] */</comment> <argument pos:line="7677" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="7677" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="7677" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7681" pos:column="1">#<cpp:directive pos:line="7681" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7681" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7683" pos:column="5">typedef <type><struct pos:line="7683" pos:column="13">struct <name pos:line="7683" pos:column="20">IDebugPropertyCreateEvent2Vtbl</name>
    <block pos:line="7684" pos:column="5">{<public type="default" pos:line="7684" pos:column="6">
        <function_decl><type><name pos:line="7685" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7687" pos:column="9">HRESULT</name></type> ( <name pos:line="7687" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7687" pos:column="37">*</type:modifier><name pos:line="7687" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7687" pos:column="54">( 
            <param><decl><type><name pos:line="7688" pos:column="13">IDebugPropertyCreateEvent2</name> <type:modifier pos:line="7688" pos:column="40">*</type:modifier></type> <name pos:line="7688" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="7689" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7689" pos:column="24">__RPC__in</name> <name pos:line="7689" pos:column="34">REFIID</name></type> <name pos:line="7689" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7690" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7691" pos:column="13">__RPC__deref_out</name>  <name pos:line="7691" pos:column="31">void</name> <type:modifier pos:line="7691" pos:column="36">*</type:modifier><type:modifier pos:line="7691" pos:column="37">*</type:modifier></type><name pos:line="7691" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7693" pos:column="9">ULONG</name></type> ( <name pos:line="7693" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7693" pos:column="35">*</type:modifier><name pos:line="7693" pos:column="36">AddRef</name> )<parameter_list pos:line="7693" pos:column="44">( 
            <param><decl><type><name pos:line="7694" pos:column="13">IDebugPropertyCreateEvent2</name> <type:modifier pos:line="7694" pos:column="40">*</type:modifier></type> <name pos:line="7694" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7696" pos:column="9">ULONG</name></type> ( <name pos:line="7696" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7696" pos:column="35">*</type:modifier><name pos:line="7696" pos:column="36">Release</name> )<parameter_list pos:line="7696" pos:column="45">( 
            <param><decl><type><name pos:line="7697" pos:column="13">IDebugPropertyCreateEvent2</name> <type:modifier pos:line="7697" pos:column="40">*</type:modifier></type> <name pos:line="7697" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7699" pos:column="9">HRESULT</name></type> ( <name pos:line="7699" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7699" pos:column="37">*</type:modifier><name pos:line="7699" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="7699" pos:column="56">( 
            <param><decl><type><name pos:line="7700" pos:column="13">IDebugPropertyCreateEvent2</name> <type:modifier pos:line="7700" pos:column="40">*</type:modifier></type> <name pos:line="7700" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="7701" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7701" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7701" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="7701" pos:column="62">*</type:modifier><type:modifier pos:line="7701" pos:column="63">*</type:modifier></type><name pos:line="7701" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7703" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7704" pos:column="7">IDebugPropertyCreateEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7706" pos:column="5">interface</name></type> <name pos:line="7706" pos:column="15">IDebugPropertyCreateEvent2</name>
    <argument_list pos:line="7707" pos:column="5">{
        <argument><expr><name pos:line="7708" pos:column="9">CONST_VTBL</name> struct <name pos:line="7708" pos:column="27">IDebugPropertyCreateEvent2Vtbl</name> <op:operator pos:line="7708" pos:column="58">*</op:operator><name pos:line="7708" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7713" pos:column="1">#<cpp:directive pos:line="7713" pos:column="2">ifdef</cpp:directive> <name pos:line="7713" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7716" pos:column="1">#<cpp:directive pos:line="7716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7716" pos:column="9">IDebugPropertyCreateEvent2_QueryInterface</name><parameter_list pos:line="7716" pos:column="50">(<param><type><name pos:line="7716" pos:column="51">This</name></type></param>,<param><type><name pos:line="7716" pos:column="56">riid</name></type></param>,<param><type><name pos:line="7716" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7717" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7719" pos:column="1">#<cpp:directive pos:line="7719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7719" pos:column="9">IDebugPropertyCreateEvent2_AddRef</name><parameter_list pos:line="7719" pos:column="42">(<param><type><name pos:line="7719" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7720" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7722" pos:column="1">#<cpp:directive pos:line="7722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7722" pos:column="9">IDebugPropertyCreateEvent2_Release</name><parameter_list pos:line="7722" pos:column="43">(<param><type><name pos:line="7722" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7723" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7726" pos:column="1">#<cpp:directive pos:line="7726" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7726" pos:column="9">IDebugPropertyCreateEvent2_GetDebugProperty</name><parameter_list pos:line="7726" pos:column="52">(<param><type><name pos:line="7726" pos:column="53">This</name></type></param>,<param><type><name pos:line="7726" pos:column="58">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7727" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7729" pos:column="1">#<cpp:directive pos:line="7729" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7729" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7732" pos:column="1">#<cpp:directive pos:line="7732" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7732" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7737" pos:column="1">#<cpp:directive pos:line="7737" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7737" pos:column="9">/* __IDebugPropertyCreateEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7740" pos:column="1">#<cpp:directive pos:line="7740" pos:column="2">ifndef</cpp:directive> <name pos:line="7740" pos:column="9">__IDebugPropertyDestroyEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7741" pos:column="1">#<cpp:directive pos:line="7741" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7741" pos:column="9">__IDebugPropertyDestroyEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7743" pos:column="1">/* interface IDebugPropertyDestroyEvent2 */</comment>
<comment type="block" pos:line="7744" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7747" pos:column="1">EXTERN_C</name> <specifier pos:line="7747" pos:column="10">const</specifier> <name pos:line="7747" pos:column="16">IID</name></type> <name pos:line="7747" pos:column="20">IID_IDebugPropertyDestroyEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7749" pos:column="1">#<cpp:directive pos:line="7749" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7749" pos:column="5">defined</name><argument_list pos:line="7749" pos:column="12">(<argument><expr><name pos:line="7749" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7749" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7749" pos:column="29">!</op:operator><call><name pos:line="7749" pos:column="30">defined</name><argument_list pos:line="7749" pos:column="37">(<argument><expr><name pos:line="7749" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7751" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7751" pos:column="19">(<argument pos:line="7751" pos:column="20">"f3765f18-f395-4b8c-8e95-dcb3fe8e7ec8"</argument>)</argument_list></macro>
    <label><name pos:line="7752" pos:column="5">IDebugPropertyDestroyEvent2</name> :</label> <expr_stmt><expr pos:line="7752" pos:column="35">public <name pos:line="7752" pos:column="42">IUnknown</name>
    <block pos:line="7753" pos:column="5">{
    <expr pos:line="7754" pos:column="5">public<op:operator pos:line="7754" pos:column="11">:</op:operator>
        virtual <name pos:line="7755" pos:column="17">HRESULT</name> <name pos:line="7755" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7755" pos:column="43">GetDebugProperty</name><argument_list pos:line="7755" pos:column="59">( 
            <comment type="block" pos:line="7756" pos:column="13">/* [out] */</comment> <argument pos:line="7756" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="7756" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="7756" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7760" pos:column="1">#<cpp:directive pos:line="7760" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7760" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7762" pos:column="5">typedef <type><struct pos:line="7762" pos:column="13">struct <name pos:line="7762" pos:column="20">IDebugPropertyDestroyEvent2Vtbl</name>
    <block pos:line="7763" pos:column="5">{<public type="default" pos:line="7763" pos:column="6">
        <function_decl><type><name pos:line="7764" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7766" pos:column="9">HRESULT</name></type> ( <name pos:line="7766" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7766" pos:column="37">*</type:modifier><name pos:line="7766" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7766" pos:column="54">( 
            <param><decl><type><name pos:line="7767" pos:column="13">IDebugPropertyDestroyEvent2</name> <type:modifier pos:line="7767" pos:column="41">*</type:modifier></type> <name pos:line="7767" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7768" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7768" pos:column="24">__RPC__in</name> <name pos:line="7768" pos:column="34">REFIID</name></type> <name pos:line="7768" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7769" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7770" pos:column="13">__RPC__deref_out</name>  <name pos:line="7770" pos:column="31">void</name> <type:modifier pos:line="7770" pos:column="36">*</type:modifier><type:modifier pos:line="7770" pos:column="37">*</type:modifier></type><name pos:line="7770" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7772" pos:column="9">ULONG</name></type> ( <name pos:line="7772" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7772" pos:column="35">*</type:modifier><name pos:line="7772" pos:column="36">AddRef</name> )<parameter_list pos:line="7772" pos:column="44">( 
            <param><decl><type><name pos:line="7773" pos:column="13">IDebugPropertyDestroyEvent2</name> <type:modifier pos:line="7773" pos:column="41">*</type:modifier></type> <name pos:line="7773" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7775" pos:column="9">ULONG</name></type> ( <name pos:line="7775" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7775" pos:column="35">*</type:modifier><name pos:line="7775" pos:column="36">Release</name> )<parameter_list pos:line="7775" pos:column="45">( 
            <param><decl><type><name pos:line="7776" pos:column="13">IDebugPropertyDestroyEvent2</name> <type:modifier pos:line="7776" pos:column="41">*</type:modifier></type> <name pos:line="7776" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7778" pos:column="9">HRESULT</name></type> ( <name pos:line="7778" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7778" pos:column="37">*</type:modifier><name pos:line="7778" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="7778" pos:column="56">( 
            <param><decl><type><name pos:line="7779" pos:column="13">IDebugPropertyDestroyEvent2</name> <type:modifier pos:line="7779" pos:column="41">*</type:modifier></type> <name pos:line="7779" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7780" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7780" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7780" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="7780" pos:column="62">*</type:modifier><type:modifier pos:line="7780" pos:column="63">*</type:modifier></type><name pos:line="7780" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7782" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7783" pos:column="7">IDebugPropertyDestroyEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7785" pos:column="5">interface</name></type> <name pos:line="7785" pos:column="15">IDebugPropertyDestroyEvent2</name>
    <argument_list pos:line="7786" pos:column="5">{
        <argument><expr><name pos:line="7787" pos:column="9">CONST_VTBL</name> struct <name pos:line="7787" pos:column="27">IDebugPropertyDestroyEvent2Vtbl</name> <op:operator pos:line="7787" pos:column="59">*</op:operator><name pos:line="7787" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7792" pos:column="1">#<cpp:directive pos:line="7792" pos:column="2">ifdef</cpp:directive> <name pos:line="7792" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7795" pos:column="1">#<cpp:directive pos:line="7795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7795" pos:column="9">IDebugPropertyDestroyEvent2_QueryInterface</name><parameter_list pos:line="7795" pos:column="51">(<param><type><name pos:line="7795" pos:column="52">This</name></type></param>,<param><type><name pos:line="7795" pos:column="57">riid</name></type></param>,<param><type><name pos:line="7795" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7796" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7798" pos:column="1">#<cpp:directive pos:line="7798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7798" pos:column="9">IDebugPropertyDestroyEvent2_AddRef</name><parameter_list pos:line="7798" pos:column="43">(<param><type><name pos:line="7798" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7799" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7801" pos:column="1">#<cpp:directive pos:line="7801" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7801" pos:column="9">IDebugPropertyDestroyEvent2_Release</name><parameter_list pos:line="7801" pos:column="44">(<param><type><name pos:line="7801" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7802" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7805" pos:column="1">#<cpp:directive pos:line="7805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7805" pos:column="9">IDebugPropertyDestroyEvent2_GetDebugProperty</name><parameter_list pos:line="7805" pos:column="53">(<param><type><name pos:line="7805" pos:column="54">This</name></type></param>,<param><type><name pos:line="7805" pos:column="59">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7806" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7808" pos:column="1">#<cpp:directive pos:line="7808" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7808" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7811" pos:column="1">#<cpp:directive pos:line="7811" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7811" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7816" pos:column="1">#<cpp:directive pos:line="7816" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7816" pos:column="9">/* __IDebugPropertyDestroyEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7819" pos:column="1">#<cpp:directive pos:line="7819" pos:column="2">ifndef</cpp:directive> <name pos:line="7819" pos:column="9">__IDebugBreakpointBoundEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7820" pos:column="1">#<cpp:directive pos:line="7820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7820" pos:column="9">__IDebugBreakpointBoundEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7822" pos:column="1">/* interface IDebugBreakpointBoundEvent2 */</comment>
<comment type="block" pos:line="7823" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="7826" pos:column="1">EXTERN_C</name> <specifier pos:line="7826" pos:column="10">const</specifier> <name pos:line="7826" pos:column="16">IID</name></type> <name pos:line="7826" pos:column="20">IID_IDebugBreakpointBoundEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7828" pos:column="1">#<cpp:directive pos:line="7828" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7828" pos:column="5">defined</name><argument_list pos:line="7828" pos:column="12">(<argument><expr><name pos:line="7828" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7828" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7828" pos:column="29">!</op:operator><call><name pos:line="7828" pos:column="30">defined</name><argument_list pos:line="7828" pos:column="37">(<argument><expr><name pos:line="7828" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7830" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7830" pos:column="19">(<argument pos:line="7830" pos:column="20">"1dddb704-cf99-4b8a-b746-dabb01dd13a0"</argument>)</argument_list></macro>
    <label><name pos:line="7831" pos:column="5">IDebugBreakpointBoundEvent2</name> :</label> <expr_stmt><expr pos:line="7831" pos:column="35">public <name pos:line="7831" pos:column="42">IUnknown</name>
    <block pos:line="7832" pos:column="5">{
    <expr pos:line="7833" pos:column="5">public<op:operator pos:line="7833" pos:column="11">:</op:operator>
        virtual <name pos:line="7834" pos:column="17">HRESULT</name> <name pos:line="7834" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7834" pos:column="43">GetPendingBreakpoint</name><argument_list pos:line="7834" pos:column="63">( 
            <comment type="block" pos:line="7835" pos:column="13">/* [out] */</comment> <argument pos:line="7835" pos:column="25">__RPC__deref_out_opt IDebugPendingBreakpoint2 **ppPendingBP</argument>)</argument_list></macro> <op:operator pos:line="7835" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="7835" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="7837" pos:column="9">virtual <name pos:line="7837" pos:column="17">HRESULT</name> <name pos:line="7837" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7837" pos:column="43">EnumBoundBreakpoints</name><argument_list pos:line="7837" pos:column="63">( 
            <comment type="block" pos:line="7838" pos:column="13">/* [out] */</comment> <argument pos:line="7838" pos:column="25">__RPC__deref_out_opt IEnumDebugBoundBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="7838" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="7838" pos:column="86">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7842" pos:column="1">#<cpp:directive pos:line="7842" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7842" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7844" pos:column="5">typedef <type><struct pos:line="7844" pos:column="13">struct <name pos:line="7844" pos:column="20">IDebugBreakpointBoundEvent2Vtbl</name>
    <block pos:line="7845" pos:column="5">{<public type="default" pos:line="7845" pos:column="6">
        <function_decl><type><name pos:line="7846" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7848" pos:column="9">HRESULT</name></type> ( <name pos:line="7848" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7848" pos:column="37">*</type:modifier><name pos:line="7848" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7848" pos:column="54">( 
            <param><decl><type><name pos:line="7849" pos:column="13">IDebugBreakpointBoundEvent2</name> <type:modifier pos:line="7849" pos:column="41">*</type:modifier></type> <name pos:line="7849" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7850" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7850" pos:column="24">__RPC__in</name> <name pos:line="7850" pos:column="34">REFIID</name></type> <name pos:line="7850" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7851" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7852" pos:column="13">__RPC__deref_out</name>  <name pos:line="7852" pos:column="31">void</name> <type:modifier pos:line="7852" pos:column="36">*</type:modifier><type:modifier pos:line="7852" pos:column="37">*</type:modifier></type><name pos:line="7852" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7854" pos:column="9">ULONG</name></type> ( <name pos:line="7854" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7854" pos:column="35">*</type:modifier><name pos:line="7854" pos:column="36">AddRef</name> )<parameter_list pos:line="7854" pos:column="44">( 
            <param><decl><type><name pos:line="7855" pos:column="13">IDebugBreakpointBoundEvent2</name> <type:modifier pos:line="7855" pos:column="41">*</type:modifier></type> <name pos:line="7855" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7857" pos:column="9">ULONG</name></type> ( <name pos:line="7857" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7857" pos:column="35">*</type:modifier><name pos:line="7857" pos:column="36">Release</name> )<parameter_list pos:line="7857" pos:column="45">( 
            <param><decl><type><name pos:line="7858" pos:column="13">IDebugBreakpointBoundEvent2</name> <type:modifier pos:line="7858" pos:column="41">*</type:modifier></type> <name pos:line="7858" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7860" pos:column="9">HRESULT</name></type> ( <name pos:line="7860" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7860" pos:column="37">*</type:modifier><name pos:line="7860" pos:column="38">GetPendingBreakpoint</name> )<parameter_list pos:line="7860" pos:column="60">( 
            <param><decl><type><name pos:line="7861" pos:column="13">IDebugBreakpointBoundEvent2</name> <type:modifier pos:line="7861" pos:column="41">*</type:modifier></type> <name pos:line="7861" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7862" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7862" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7862" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="7862" pos:column="71">*</type:modifier><type:modifier pos:line="7862" pos:column="72">*</type:modifier></type><name pos:line="7862" pos:column="73">ppPendingBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7864" pos:column="9">HRESULT</name></type> ( <name pos:line="7864" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7864" pos:column="37">*</type:modifier><name pos:line="7864" pos:column="38">EnumBoundBreakpoints</name> )<parameter_list pos:line="7864" pos:column="60">( 
            <param><decl><type><name pos:line="7865" pos:column="13">IDebugBreakpointBoundEvent2</name> <type:modifier pos:line="7865" pos:column="41">*</type:modifier></type> <name pos:line="7865" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="7866" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7866" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7866" pos:column="46">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="7866" pos:column="74">*</type:modifier><type:modifier pos:line="7866" pos:column="75">*</type:modifier></type><name pos:line="7866" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7868" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7869" pos:column="7">IDebugBreakpointBoundEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7871" pos:column="5">interface</name></type> <name pos:line="7871" pos:column="15">IDebugBreakpointBoundEvent2</name>
    <argument_list pos:line="7872" pos:column="5">{
        <argument><expr><name pos:line="7873" pos:column="9">CONST_VTBL</name> struct <name pos:line="7873" pos:column="27">IDebugBreakpointBoundEvent2Vtbl</name> <op:operator pos:line="7873" pos:column="59">*</op:operator><name pos:line="7873" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7878" pos:column="1">#<cpp:directive pos:line="7878" pos:column="2">ifdef</cpp:directive> <name pos:line="7878" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7881" pos:column="1">#<cpp:directive pos:line="7881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7881" pos:column="9">IDebugBreakpointBoundEvent2_QueryInterface</name><parameter_list pos:line="7881" pos:column="51">(<param><type><name pos:line="7881" pos:column="52">This</name></type></param>,<param><type><name pos:line="7881" pos:column="57">riid</name></type></param>,<param><type><name pos:line="7881" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7882" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7884" pos:column="1">#<cpp:directive pos:line="7884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7884" pos:column="9">IDebugBreakpointBoundEvent2_AddRef</name><parameter_list pos:line="7884" pos:column="43">(<param><type><name pos:line="7884" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7885" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7887" pos:column="1">#<cpp:directive pos:line="7887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7887" pos:column="9">IDebugBreakpointBoundEvent2_Release</name><parameter_list pos:line="7887" pos:column="44">(<param><type><name pos:line="7887" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7888" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7891" pos:column="1">#<cpp:directive pos:line="7891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7891" pos:column="9">IDebugBreakpointBoundEvent2_GetPendingBreakpoint</name><parameter_list pos:line="7891" pos:column="57">(<param><type><name pos:line="7891" pos:column="58">This</name></type></param>,<param><type><name pos:line="7891" pos:column="63">ppPendingBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7892" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPendingBreakpoint(This,ppPendingBP) )</cpp:value></cpp:define> 

<cpp:define pos:line="7894" pos:column="1">#<cpp:directive pos:line="7894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7894" pos:column="9">IDebugBreakpointBoundEvent2_EnumBoundBreakpoints</name><parameter_list pos:line="7894" pos:column="57">(<param><type><name pos:line="7894" pos:column="58">This</name></type></param>,<param><type><name pos:line="7894" pos:column="63">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7895" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumBoundBreakpoints(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7897" pos:column="1">#<cpp:directive pos:line="7897" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7897" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7900" pos:column="1">#<cpp:directive pos:line="7900" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7900" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7905" pos:column="1">#<cpp:directive pos:line="7905" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7905" pos:column="9">/* __IDebugBreakpointBoundEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7908" pos:column="1">#<cpp:directive pos:line="7908" pos:column="2">ifndef</cpp:directive> <name pos:line="7908" pos:column="9">__IDebugBreakpointUnboundEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7909" pos:column="1">#<cpp:directive pos:line="7909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7909" pos:column="9">__IDebugBreakpointUnboundEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7911" pos:column="1">/* interface IDebugBreakpointUnboundEvent2 */</comment>
<comment type="block" pos:line="7912" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="7915" pos:column="1">enum <name pos:line="7915" pos:column="6">enum_BP_UNBOUND_REASON</name>
    <block pos:line="7916" pos:column="5">{	<decl><name pos:line="7916" pos:column="9">BPUR_UNKNOWN</name>	<init pos:line="7916" pos:column="25">= <expr><lit:literal type="number" pos:line="7916" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="7916" pos:column="30">,</op:operator>
	<decl><name pos:line="7917" pos:column="9">BPUR_CODE_UNLOADED</name>	<init pos:line="7917" pos:column="33">= <expr><lit:literal type="number" pos:line="7917" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="7917" pos:column="38">,</op:operator>
	<decl><name pos:line="7918" pos:column="9">BPUR_BREAKPOINT_REBIND</name>	<init pos:line="7918" pos:column="33">= <expr><lit:literal type="number" pos:line="7918" pos:column="35">0x3</lit:literal></expr></init></decl><op:operator pos:line="7918" pos:column="38">,</op:operator>
	<decl><name pos:line="7919" pos:column="9">BPUR_BREAKPOINT_ERROR</name>	<init pos:line="7919" pos:column="33">= <expr><lit:literal type="number" pos:line="7919" pos:column="35">0x4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="7921" pos:column="1">typedef <type><name pos:line="7921" pos:column="9">DWORD</name></type> <name pos:line="7921" pos:column="15">BP_UNBOUND_REASON</name>;</typedef>


<decl_stmt><decl><type><name pos:line="7924" pos:column="1">EXTERN_C</name> <specifier pos:line="7924" pos:column="10">const</specifier> <name pos:line="7924" pos:column="16">IID</name></type> <name pos:line="7924" pos:column="20">IID_IDebugBreakpointUnboundEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="7926" pos:column="1">#<cpp:directive pos:line="7926" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7926" pos:column="5">defined</name><argument_list pos:line="7926" pos:column="12">(<argument><expr><name pos:line="7926" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7926" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7926" pos:column="29">!</op:operator><call><name pos:line="7926" pos:column="30">defined</name><argument_list pos:line="7926" pos:column="37">(<argument><expr><name pos:line="7926" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7928" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7928" pos:column="19">(<argument pos:line="7928" pos:column="20">"78d1db4f-c557-4dc5-a2dd-5369d21b1c8c"</argument>)</argument_list></macro>
    <label><name pos:line="7929" pos:column="5">IDebugBreakpointUnboundEvent2</name> :</label> <expr_stmt><expr pos:line="7929" pos:column="37">public <name pos:line="7929" pos:column="44">IUnknown</name>
    <block pos:line="7930" pos:column="5">{
    <expr pos:line="7931" pos:column="5">public<op:operator pos:line="7931" pos:column="11">:</op:operator>
        virtual <name pos:line="7932" pos:column="17">HRESULT</name> <name pos:line="7932" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7932" pos:column="43">GetBreakpoint</name><argument_list pos:line="7932" pos:column="56">( 
            <comment type="block" pos:line="7933" pos:column="13">/* [out] */</comment> <argument pos:line="7933" pos:column="25">__RPC__deref_out_opt IDebugBoundBreakpoint2 **ppBP</argument>)</argument_list></macro> <op:operator pos:line="7933" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="7933" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="7935" pos:column="9">virtual <name pos:line="7935" pos:column="17">HRESULT</name> <name pos:line="7935" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="7935" pos:column="43">GetReason</name><argument_list pos:line="7935" pos:column="52">( 
            <comment type="block" pos:line="7936" pos:column="13">/* [out] */</comment> <argument pos:line="7936" pos:column="25">__RPC__out BP_UNBOUND_REASON *pdwUnboundReason</argument>)</argument_list></macro> <op:operator pos:line="7936" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="7936" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7940" pos:column="1">#<cpp:directive pos:line="7940" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7940" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7942" pos:column="5">typedef <type><struct pos:line="7942" pos:column="13">struct <name pos:line="7942" pos:column="20">IDebugBreakpointUnboundEvent2Vtbl</name>
    <block pos:line="7943" pos:column="5">{<public type="default" pos:line="7943" pos:column="6">
        <function_decl><type><name pos:line="7944" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="7946" pos:column="9">HRESULT</name></type> ( <name pos:line="7946" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7946" pos:column="37">*</type:modifier><name pos:line="7946" pos:column="38">QueryInterface</name> )<parameter_list pos:line="7946" pos:column="54">( 
            <param><decl><type><name pos:line="7947" pos:column="13">IDebugBreakpointUnboundEvent2</name> <type:modifier pos:line="7947" pos:column="43">*</type:modifier></type> <name pos:line="7947" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="7948" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="7948" pos:column="24">__RPC__in</name> <name pos:line="7948" pos:column="34">REFIID</name></type> <name pos:line="7948" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="7949" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="7950" pos:column="13">__RPC__deref_out</name>  <name pos:line="7950" pos:column="31">void</name> <type:modifier pos:line="7950" pos:column="36">*</type:modifier><type:modifier pos:line="7950" pos:column="37">*</type:modifier></type><name pos:line="7950" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7952" pos:column="9">ULONG</name></type> ( <name pos:line="7952" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7952" pos:column="35">*</type:modifier><name pos:line="7952" pos:column="36">AddRef</name> )<parameter_list pos:line="7952" pos:column="44">( 
            <param><decl><type><name pos:line="7953" pos:column="13">IDebugBreakpointUnboundEvent2</name> <type:modifier pos:line="7953" pos:column="43">*</type:modifier></type> <name pos:line="7953" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7955" pos:column="9">ULONG</name></type> ( <name pos:line="7955" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="7955" pos:column="35">*</type:modifier><name pos:line="7955" pos:column="36">Release</name> )<parameter_list pos:line="7955" pos:column="45">( 
            <param><decl><type><name pos:line="7956" pos:column="13">IDebugBreakpointUnboundEvent2</name> <type:modifier pos:line="7956" pos:column="43">*</type:modifier></type> <name pos:line="7956" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7958" pos:column="9">HRESULT</name></type> ( <name pos:line="7958" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7958" pos:column="37">*</type:modifier><name pos:line="7958" pos:column="38">GetBreakpoint</name> )<parameter_list pos:line="7958" pos:column="53">( 
            <param><decl><type><name pos:line="7959" pos:column="13">IDebugBreakpointUnboundEvent2</name> <type:modifier pos:line="7959" pos:column="43">*</type:modifier></type> <name pos:line="7959" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="7960" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7960" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="7960" pos:column="46">IDebugBoundBreakpoint2</name> <type:modifier pos:line="7960" pos:column="69">*</type:modifier><type:modifier pos:line="7960" pos:column="70">*</type:modifier></type><name pos:line="7960" pos:column="71">ppBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="7962" pos:column="9">HRESULT</name></type> ( <name pos:line="7962" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="7962" pos:column="37">*</type:modifier><name pos:line="7962" pos:column="38">GetReason</name> )<parameter_list pos:line="7962" pos:column="49">( 
            <param><decl><type><name pos:line="7963" pos:column="13">IDebugBreakpointUnboundEvent2</name> <type:modifier pos:line="7963" pos:column="43">*</type:modifier></type> <name pos:line="7963" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="7964" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="7964" pos:column="25">__RPC__out</name> <name pos:line="7964" pos:column="36">BP_UNBOUND_REASON</name> <type:modifier pos:line="7964" pos:column="54">*</type:modifier></type><name pos:line="7964" pos:column="55">pdwUnboundReason</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7966" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7967" pos:column="7">IDebugBreakpointUnboundEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7969" pos:column="5">interface</name></type> <name pos:line="7969" pos:column="15">IDebugBreakpointUnboundEvent2</name>
    <argument_list pos:line="7970" pos:column="5">{
        <argument><expr><name pos:line="7971" pos:column="9">CONST_VTBL</name> struct <name pos:line="7971" pos:column="27">IDebugBreakpointUnboundEvent2Vtbl</name> <op:operator pos:line="7971" pos:column="61">*</op:operator><name pos:line="7971" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7976" pos:column="1">#<cpp:directive pos:line="7976" pos:column="2">ifdef</cpp:directive> <name pos:line="7976" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7979" pos:column="1">#<cpp:directive pos:line="7979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7979" pos:column="9">IDebugBreakpointUnboundEvent2_QueryInterface</name><parameter_list pos:line="7979" pos:column="53">(<param><type><name pos:line="7979" pos:column="54">This</name></type></param>,<param><type><name pos:line="7979" pos:column="59">riid</name></type></param>,<param><type><name pos:line="7979" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7980" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="7982" pos:column="1">#<cpp:directive pos:line="7982" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7982" pos:column="9">IDebugBreakpointUnboundEvent2_AddRef</name><parameter_list pos:line="7982" pos:column="45">(<param><type><name pos:line="7982" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7983" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="7985" pos:column="1">#<cpp:directive pos:line="7985" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7985" pos:column="9">IDebugBreakpointUnboundEvent2_Release</name><parameter_list pos:line="7985" pos:column="46">(<param><type><name pos:line="7985" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7986" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="7989" pos:column="1">#<cpp:directive pos:line="7989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7989" pos:column="9">IDebugBreakpointUnboundEvent2_GetBreakpoint</name><parameter_list pos:line="7989" pos:column="52">(<param><type><name pos:line="7989" pos:column="53">This</name></type></param>,<param><type><name pos:line="7989" pos:column="58">ppBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7990" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpoint(This,ppBP) )</cpp:value></cpp:define> 

<cpp:define pos:line="7992" pos:column="1">#<cpp:directive pos:line="7992" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7992" pos:column="9">IDebugBreakpointUnboundEvent2_GetReason</name><parameter_list pos:line="7992" pos:column="48">(<param><type><name pos:line="7992" pos:column="49">This</name></type></param>,<param><type><name pos:line="7992" pos:column="54">pdwUnboundReason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7993" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReason(This,pdwUnboundReason) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7995" pos:column="1">#<cpp:directive pos:line="7995" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7995" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7998" pos:column="1">#<cpp:directive pos:line="7998" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7998" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8003" pos:column="1">#<cpp:directive pos:line="8003" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8003" pos:column="9">/* __IDebugBreakpointUnboundEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8006" pos:column="1">#<cpp:directive pos:line="8006" pos:column="2">ifndef</cpp:directive> <name pos:line="8006" pos:column="9">__IDebugBreakpointErrorEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8007" pos:column="1">#<cpp:directive pos:line="8007" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8007" pos:column="9">__IDebugBreakpointErrorEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8009" pos:column="1">/* interface IDebugBreakpointErrorEvent2 */</comment>
<comment type="block" pos:line="8010" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8013" pos:column="1">EXTERN_C</name> <specifier pos:line="8013" pos:column="10">const</specifier> <name pos:line="8013" pos:column="16">IID</name></type> <name pos:line="8013" pos:column="20">IID_IDebugBreakpointErrorEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8015" pos:column="1">#<cpp:directive pos:line="8015" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8015" pos:column="5">defined</name><argument_list pos:line="8015" pos:column="12">(<argument><expr><name pos:line="8015" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8015" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8015" pos:column="29">!</op:operator><call><name pos:line="8015" pos:column="30">defined</name><argument_list pos:line="8015" pos:column="37">(<argument><expr><name pos:line="8015" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8017" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8017" pos:column="19">(<argument pos:line="8017" pos:column="20">"abb0ca42-f82b-4622-84e4-6903ae90f210"</argument>)</argument_list></macro>
    <label><name pos:line="8018" pos:column="5">IDebugBreakpointErrorEvent2</name> :</label> <expr_stmt><expr pos:line="8018" pos:column="35">public <name pos:line="8018" pos:column="42">IUnknown</name>
    <block pos:line="8019" pos:column="5">{
    <expr pos:line="8020" pos:column="5">public<op:operator pos:line="8020" pos:column="11">:</op:operator>
        virtual <name pos:line="8021" pos:column="17">HRESULT</name> <name pos:line="8021" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8021" pos:column="43">GetErrorBreakpoint</name><argument_list pos:line="8021" pos:column="61">( 
            <comment type="block" pos:line="8022" pos:column="13">/* [out] */</comment> <argument pos:line="8022" pos:column="25">__RPC__deref_out_opt IDebugErrorBreakpoint2 **ppErrorBP</argument>)</argument_list></macro> <op:operator pos:line="8022" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="8022" pos:column="84">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8026" pos:column="1">#<cpp:directive pos:line="8026" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8026" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8028" pos:column="5">typedef <type><struct pos:line="8028" pos:column="13">struct <name pos:line="8028" pos:column="20">IDebugBreakpointErrorEvent2Vtbl</name>
    <block pos:line="8029" pos:column="5">{<public type="default" pos:line="8029" pos:column="6">
        <function_decl><type><name pos:line="8030" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8032" pos:column="9">HRESULT</name></type> ( <name pos:line="8032" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8032" pos:column="37">*</type:modifier><name pos:line="8032" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8032" pos:column="54">( 
            <param><decl><type><name pos:line="8033" pos:column="13">IDebugBreakpointErrorEvent2</name> <type:modifier pos:line="8033" pos:column="41">*</type:modifier></type> <name pos:line="8033" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8034" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8034" pos:column="24">__RPC__in</name> <name pos:line="8034" pos:column="34">REFIID</name></type> <name pos:line="8034" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8035" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8036" pos:column="13">__RPC__deref_out</name>  <name pos:line="8036" pos:column="31">void</name> <type:modifier pos:line="8036" pos:column="36">*</type:modifier><type:modifier pos:line="8036" pos:column="37">*</type:modifier></type><name pos:line="8036" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8038" pos:column="9">ULONG</name></type> ( <name pos:line="8038" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8038" pos:column="35">*</type:modifier><name pos:line="8038" pos:column="36">AddRef</name> )<parameter_list pos:line="8038" pos:column="44">( 
            <param><decl><type><name pos:line="8039" pos:column="13">IDebugBreakpointErrorEvent2</name> <type:modifier pos:line="8039" pos:column="41">*</type:modifier></type> <name pos:line="8039" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8041" pos:column="9">ULONG</name></type> ( <name pos:line="8041" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8041" pos:column="35">*</type:modifier><name pos:line="8041" pos:column="36">Release</name> )<parameter_list pos:line="8041" pos:column="45">( 
            <param><decl><type><name pos:line="8042" pos:column="13">IDebugBreakpointErrorEvent2</name> <type:modifier pos:line="8042" pos:column="41">*</type:modifier></type> <name pos:line="8042" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8044" pos:column="9">HRESULT</name></type> ( <name pos:line="8044" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8044" pos:column="37">*</type:modifier><name pos:line="8044" pos:column="38">GetErrorBreakpoint</name> )<parameter_list pos:line="8044" pos:column="58">( 
            <param><decl><type><name pos:line="8045" pos:column="13">IDebugBreakpointErrorEvent2</name> <type:modifier pos:line="8045" pos:column="41">*</type:modifier></type> <name pos:line="8045" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8046" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8046" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8046" pos:column="46">IDebugErrorBreakpoint2</name> <type:modifier pos:line="8046" pos:column="69">*</type:modifier><type:modifier pos:line="8046" pos:column="70">*</type:modifier></type><name pos:line="8046" pos:column="71">ppErrorBP</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8048" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8049" pos:column="7">IDebugBreakpointErrorEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8051" pos:column="5">interface</name></type> <name pos:line="8051" pos:column="15">IDebugBreakpointErrorEvent2</name>
    <argument_list pos:line="8052" pos:column="5">{
        <argument><expr><name pos:line="8053" pos:column="9">CONST_VTBL</name> struct <name pos:line="8053" pos:column="27">IDebugBreakpointErrorEvent2Vtbl</name> <op:operator pos:line="8053" pos:column="59">*</op:operator><name pos:line="8053" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8058" pos:column="1">#<cpp:directive pos:line="8058" pos:column="2">ifdef</cpp:directive> <name pos:line="8058" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8061" pos:column="1">#<cpp:directive pos:line="8061" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8061" pos:column="9">IDebugBreakpointErrorEvent2_QueryInterface</name><parameter_list pos:line="8061" pos:column="51">(<param><type><name pos:line="8061" pos:column="52">This</name></type></param>,<param><type><name pos:line="8061" pos:column="57">riid</name></type></param>,<param><type><name pos:line="8061" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8062" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8064" pos:column="1">#<cpp:directive pos:line="8064" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8064" pos:column="9">IDebugBreakpointErrorEvent2_AddRef</name><parameter_list pos:line="8064" pos:column="43">(<param><type><name pos:line="8064" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8065" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8067" pos:column="1">#<cpp:directive pos:line="8067" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8067" pos:column="9">IDebugBreakpointErrorEvent2_Release</name><parameter_list pos:line="8067" pos:column="44">(<param><type><name pos:line="8067" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8068" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8071" pos:column="1">#<cpp:directive pos:line="8071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8071" pos:column="9">IDebugBreakpointErrorEvent2_GetErrorBreakpoint</name><parameter_list pos:line="8071" pos:column="55">(<param><type><name pos:line="8071" pos:column="56">This</name></type></param>,<param><type><name pos:line="8071" pos:column="61">ppErrorBP</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8072" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetErrorBreakpoint(This,ppErrorBP) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8074" pos:column="1">#<cpp:directive pos:line="8074" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8074" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8077" pos:column="1">#<cpp:directive pos:line="8077" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8077" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8082" pos:column="1">#<cpp:directive pos:line="8082" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8082" pos:column="9">/* __IDebugBreakpointErrorEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8085" pos:column="1">#<cpp:directive pos:line="8085" pos:column="2">ifndef</cpp:directive> <name pos:line="8085" pos:column="9">__IDebugExpressionEvaluationCompleteEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8086" pos:column="1">#<cpp:directive pos:line="8086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8086" pos:column="9">__IDebugExpressionEvaluationCompleteEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8088" pos:column="1">/* interface IDebugExpressionEvaluationCompleteEvent2 */</comment>
<comment type="block" pos:line="8089" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8092" pos:column="1">EXTERN_C</name> <specifier pos:line="8092" pos:column="10">const</specifier> <name pos:line="8092" pos:column="16">IID</name></type> <name pos:line="8092" pos:column="20">IID_IDebugExpressionEvaluationCompleteEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8094" pos:column="1">#<cpp:directive pos:line="8094" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8094" pos:column="5">defined</name><argument_list pos:line="8094" pos:column="12">(<argument><expr><name pos:line="8094" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8094" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8094" pos:column="29">!</op:operator><call><name pos:line="8094" pos:column="30">defined</name><argument_list pos:line="8094" pos:column="37">(<argument><expr><name pos:line="8094" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8096" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8096" pos:column="19">(<argument pos:line="8096" pos:column="20">"c0e13a85-238a-4800-8315-d947c960a843"</argument>)</argument_list></macro>
    <label><name pos:line="8097" pos:column="5">IDebugExpressionEvaluationCompleteEvent2</name> :</label> <expr_stmt><expr pos:line="8097" pos:column="48">public <name pos:line="8097" pos:column="55">IUnknown</name>
    <block pos:line="8098" pos:column="5">{
    <expr pos:line="8099" pos:column="5">public<op:operator pos:line="8099" pos:column="11">:</op:operator>
        virtual <name pos:line="8100" pos:column="17">HRESULT</name> <name pos:line="8100" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8100" pos:column="43">GetExpression</name><argument_list pos:line="8100" pos:column="56">( 
            <comment type="block" pos:line="8101" pos:column="13">/* [out] */</comment> <argument pos:line="8101" pos:column="25">__RPC__deref_out_opt IDebugExpression2 **ppExpr</argument>)</argument_list></macro> <op:operator pos:line="8101" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="8101" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="8103" pos:column="9">virtual <name pos:line="8103" pos:column="17">HRESULT</name> <name pos:line="8103" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8103" pos:column="43">GetResult</name><argument_list pos:line="8103" pos:column="52">( 
            <comment type="block" pos:line="8104" pos:column="13">/* [out] */</comment> <argument pos:line="8104" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppResult</argument>)</argument_list></macro> <op:operator pos:line="8104" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="8104" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8108" pos:column="1">#<cpp:directive pos:line="8108" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8108" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8110" pos:column="5">typedef <type><struct pos:line="8110" pos:column="13">struct <name pos:line="8110" pos:column="20">IDebugExpressionEvaluationCompleteEvent2Vtbl</name>
    <block pos:line="8111" pos:column="5">{<public type="default" pos:line="8111" pos:column="6">
        <function_decl><type><name pos:line="8112" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8114" pos:column="9">HRESULT</name></type> ( <name pos:line="8114" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8114" pos:column="37">*</type:modifier><name pos:line="8114" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8114" pos:column="54">( 
            <param><decl><type><name pos:line="8115" pos:column="13">IDebugExpressionEvaluationCompleteEvent2</name> <type:modifier pos:line="8115" pos:column="54">*</type:modifier></type> <name pos:line="8115" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="8116" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8116" pos:column="24">__RPC__in</name> <name pos:line="8116" pos:column="34">REFIID</name></type> <name pos:line="8116" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8117" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8118" pos:column="13">__RPC__deref_out</name>  <name pos:line="8118" pos:column="31">void</name> <type:modifier pos:line="8118" pos:column="36">*</type:modifier><type:modifier pos:line="8118" pos:column="37">*</type:modifier></type><name pos:line="8118" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8120" pos:column="9">ULONG</name></type> ( <name pos:line="8120" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8120" pos:column="35">*</type:modifier><name pos:line="8120" pos:column="36">AddRef</name> )<parameter_list pos:line="8120" pos:column="44">( 
            <param><decl><type><name pos:line="8121" pos:column="13">IDebugExpressionEvaluationCompleteEvent2</name> <type:modifier pos:line="8121" pos:column="54">*</type:modifier></type> <name pos:line="8121" pos:column="56">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8123" pos:column="9">ULONG</name></type> ( <name pos:line="8123" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8123" pos:column="35">*</type:modifier><name pos:line="8123" pos:column="36">Release</name> )<parameter_list pos:line="8123" pos:column="45">( 
            <param><decl><type><name pos:line="8124" pos:column="13">IDebugExpressionEvaluationCompleteEvent2</name> <type:modifier pos:line="8124" pos:column="54">*</type:modifier></type> <name pos:line="8124" pos:column="56">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8126" pos:column="9">HRESULT</name></type> ( <name pos:line="8126" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8126" pos:column="37">*</type:modifier><name pos:line="8126" pos:column="38">GetExpression</name> )<parameter_list pos:line="8126" pos:column="53">( 
            <param><decl><type><name pos:line="8127" pos:column="13">IDebugExpressionEvaluationCompleteEvent2</name> <type:modifier pos:line="8127" pos:column="54">*</type:modifier></type> <name pos:line="8127" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="8128" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8128" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8128" pos:column="46">IDebugExpression2</name> <type:modifier pos:line="8128" pos:column="64">*</type:modifier><type:modifier pos:line="8128" pos:column="65">*</type:modifier></type><name pos:line="8128" pos:column="66">ppExpr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8130" pos:column="9">HRESULT</name></type> ( <name pos:line="8130" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8130" pos:column="37">*</type:modifier><name pos:line="8130" pos:column="38">GetResult</name> )<parameter_list pos:line="8130" pos:column="49">( 
            <param><decl><type><name pos:line="8131" pos:column="13">IDebugExpressionEvaluationCompleteEvent2</name> <type:modifier pos:line="8131" pos:column="54">*</type:modifier></type> <name pos:line="8131" pos:column="56">This</name></decl></param>,
            <comment type="block" pos:line="8132" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8132" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8132" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="8132" pos:column="62">*</type:modifier><type:modifier pos:line="8132" pos:column="63">*</type:modifier></type><name pos:line="8132" pos:column="64">ppResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8134" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8135" pos:column="7">IDebugExpressionEvaluationCompleteEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8137" pos:column="5">interface</name></type> <name pos:line="8137" pos:column="15">IDebugExpressionEvaluationCompleteEvent2</name>
    <argument_list pos:line="8138" pos:column="5">{
        <argument><expr><name pos:line="8139" pos:column="9">CONST_VTBL</name> struct <name pos:line="8139" pos:column="27">IDebugExpressionEvaluationCompleteEvent2Vtbl</name> <op:operator pos:line="8139" pos:column="72">*</op:operator><name pos:line="8139" pos:column="73">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8144" pos:column="1">#<cpp:directive pos:line="8144" pos:column="2">ifdef</cpp:directive> <name pos:line="8144" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8147" pos:column="1">#<cpp:directive pos:line="8147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8147" pos:column="9">IDebugExpressionEvaluationCompleteEvent2_QueryInterface</name><parameter_list pos:line="8147" pos:column="64">(<param><type><name pos:line="8147" pos:column="65">This</name></type></param>,<param><type><name pos:line="8147" pos:column="70">riid</name></type></param>,<param><type><name pos:line="8147" pos:column="75">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8148" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8150" pos:column="1">#<cpp:directive pos:line="8150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8150" pos:column="9">IDebugExpressionEvaluationCompleteEvent2_AddRef</name><parameter_list pos:line="8150" pos:column="56">(<param><type><name pos:line="8150" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8151" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8153" pos:column="1">#<cpp:directive pos:line="8153" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8153" pos:column="9">IDebugExpressionEvaluationCompleteEvent2_Release</name><parameter_list pos:line="8153" pos:column="57">(<param><type><name pos:line="8153" pos:column="58">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8154" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8157" pos:column="1">#<cpp:directive pos:line="8157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8157" pos:column="9">IDebugExpressionEvaluationCompleteEvent2_GetExpression</name><parameter_list pos:line="8157" pos:column="63">(<param><type><name pos:line="8157" pos:column="64">This</name></type></param>,<param><type><name pos:line="8157" pos:column="69">ppExpr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8158" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpression(This,ppExpr) )</cpp:value></cpp:define> 

<cpp:define pos:line="8160" pos:column="1">#<cpp:directive pos:line="8160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8160" pos:column="9">IDebugExpressionEvaluationCompleteEvent2_GetResult</name><parameter_list pos:line="8160" pos:column="59">(<param><type><name pos:line="8160" pos:column="60">This</name></type></param>,<param><type><name pos:line="8160" pos:column="65">ppResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8161" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetResult(This,ppResult) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8163" pos:column="1">#<cpp:directive pos:line="8163" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8163" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8166" pos:column="1">#<cpp:directive pos:line="8166" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8166" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8171" pos:column="1">#<cpp:directive pos:line="8171" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8171" pos:column="9">/* __IDebugExpressionEvaluationCompleteEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8174" pos:column="1">#<cpp:directive pos:line="8174" pos:column="2">ifndef</cpp:directive> <name pos:line="8174" pos:column="9">__IDebugReturnValueEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8175" pos:column="1">#<cpp:directive pos:line="8175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8175" pos:column="9">__IDebugReturnValueEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8177" pos:column="1">/* interface IDebugReturnValueEvent2 */</comment>
<comment type="block" pos:line="8178" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8181" pos:column="1">EXTERN_C</name> <specifier pos:line="8181" pos:column="10">const</specifier> <name pos:line="8181" pos:column="16">IID</name></type> <name pos:line="8181" pos:column="20">IID_IDebugReturnValueEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8183" pos:column="1">#<cpp:directive pos:line="8183" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8183" pos:column="5">defined</name><argument_list pos:line="8183" pos:column="12">(<argument><expr><name pos:line="8183" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8183" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8183" pos:column="29">!</op:operator><call><name pos:line="8183" pos:column="30">defined</name><argument_list pos:line="8183" pos:column="37">(<argument><expr><name pos:line="8183" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8185" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8185" pos:column="19">(<argument pos:line="8185" pos:column="20">"0da4d4cc-2d0b-410f-8d5d-b6b73a5d35d8"</argument>)</argument_list></macro>
    <label><name pos:line="8186" pos:column="5">IDebugReturnValueEvent2</name> :</label> <expr_stmt><expr pos:line="8186" pos:column="31">public <name pos:line="8186" pos:column="38">IUnknown</name>
    <block pos:line="8187" pos:column="5">{
    <expr pos:line="8188" pos:column="5">public<op:operator pos:line="8188" pos:column="11">:</op:operator>
        virtual <name pos:line="8189" pos:column="17">HRESULT</name> <name pos:line="8189" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8189" pos:column="43">GetReturnValue</name><argument_list pos:line="8189" pos:column="57">( 
            <comment type="block" pos:line="8190" pos:column="13">/* [out] */</comment> <argument pos:line="8190" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppReturnValue</argument>)</argument_list></macro> <op:operator pos:line="8190" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="8190" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8194" pos:column="1">#<cpp:directive pos:line="8194" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8194" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8196" pos:column="5">typedef <type><struct pos:line="8196" pos:column="13">struct <name pos:line="8196" pos:column="20">IDebugReturnValueEvent2Vtbl</name>
    <block pos:line="8197" pos:column="5">{<public type="default" pos:line="8197" pos:column="6">
        <function_decl><type><name pos:line="8198" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8200" pos:column="9">HRESULT</name></type> ( <name pos:line="8200" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8200" pos:column="37">*</type:modifier><name pos:line="8200" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8200" pos:column="54">( 
            <param><decl><type><name pos:line="8201" pos:column="13">IDebugReturnValueEvent2</name> <type:modifier pos:line="8201" pos:column="37">*</type:modifier></type> <name pos:line="8201" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="8202" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8202" pos:column="24">__RPC__in</name> <name pos:line="8202" pos:column="34">REFIID</name></type> <name pos:line="8202" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8203" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8204" pos:column="13">__RPC__deref_out</name>  <name pos:line="8204" pos:column="31">void</name> <type:modifier pos:line="8204" pos:column="36">*</type:modifier><type:modifier pos:line="8204" pos:column="37">*</type:modifier></type><name pos:line="8204" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8206" pos:column="9">ULONG</name></type> ( <name pos:line="8206" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8206" pos:column="35">*</type:modifier><name pos:line="8206" pos:column="36">AddRef</name> )<parameter_list pos:line="8206" pos:column="44">( 
            <param><decl><type><name pos:line="8207" pos:column="13">IDebugReturnValueEvent2</name> <type:modifier pos:line="8207" pos:column="37">*</type:modifier></type> <name pos:line="8207" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8209" pos:column="9">ULONG</name></type> ( <name pos:line="8209" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8209" pos:column="35">*</type:modifier><name pos:line="8209" pos:column="36">Release</name> )<parameter_list pos:line="8209" pos:column="45">( 
            <param><decl><type><name pos:line="8210" pos:column="13">IDebugReturnValueEvent2</name> <type:modifier pos:line="8210" pos:column="37">*</type:modifier></type> <name pos:line="8210" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8212" pos:column="9">HRESULT</name></type> ( <name pos:line="8212" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8212" pos:column="37">*</type:modifier><name pos:line="8212" pos:column="38">GetReturnValue</name> )<parameter_list pos:line="8212" pos:column="54">( 
            <param><decl><type><name pos:line="8213" pos:column="13">IDebugReturnValueEvent2</name> <type:modifier pos:line="8213" pos:column="37">*</type:modifier></type> <name pos:line="8213" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="8214" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8214" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8214" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="8214" pos:column="62">*</type:modifier><type:modifier pos:line="8214" pos:column="63">*</type:modifier></type><name pos:line="8214" pos:column="64">ppReturnValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8216" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8217" pos:column="7">IDebugReturnValueEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8219" pos:column="5">interface</name></type> <name pos:line="8219" pos:column="15">IDebugReturnValueEvent2</name>
    <argument_list pos:line="8220" pos:column="5">{
        <argument><expr><name pos:line="8221" pos:column="9">CONST_VTBL</name> struct <name pos:line="8221" pos:column="27">IDebugReturnValueEvent2Vtbl</name> <op:operator pos:line="8221" pos:column="55">*</op:operator><name pos:line="8221" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8226" pos:column="1">#<cpp:directive pos:line="8226" pos:column="2">ifdef</cpp:directive> <name pos:line="8226" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8229" pos:column="1">#<cpp:directive pos:line="8229" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8229" pos:column="9">IDebugReturnValueEvent2_QueryInterface</name><parameter_list pos:line="8229" pos:column="47">(<param><type><name pos:line="8229" pos:column="48">This</name></type></param>,<param><type><name pos:line="8229" pos:column="53">riid</name></type></param>,<param><type><name pos:line="8229" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8230" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8232" pos:column="1">#<cpp:directive pos:line="8232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8232" pos:column="9">IDebugReturnValueEvent2_AddRef</name><parameter_list pos:line="8232" pos:column="39">(<param><type><name pos:line="8232" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8233" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8235" pos:column="1">#<cpp:directive pos:line="8235" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8235" pos:column="9">IDebugReturnValueEvent2_Release</name><parameter_list pos:line="8235" pos:column="40">(<param><type><name pos:line="8235" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8236" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8239" pos:column="1">#<cpp:directive pos:line="8239" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8239" pos:column="9">IDebugReturnValueEvent2_GetReturnValue</name><parameter_list pos:line="8239" pos:column="47">(<param><type><name pos:line="8239" pos:column="48">This</name></type></param>,<param><type><name pos:line="8239" pos:column="53">ppReturnValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8240" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReturnValue(This,ppReturnValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8242" pos:column="1">#<cpp:directive pos:line="8242" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8242" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8245" pos:column="1">#<cpp:directive pos:line="8245" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8245" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8250" pos:column="1">#<cpp:directive pos:line="8250" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8250" pos:column="9">/* __IDebugReturnValueEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8253" pos:column="1">#<cpp:directive pos:line="8253" pos:column="2">ifndef</cpp:directive> <name pos:line="8253" pos:column="9">__IDebugNoSymbolsEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8254" pos:column="1">#<cpp:directive pos:line="8254" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8254" pos:column="9">__IDebugNoSymbolsEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8256" pos:column="1">/* interface IDebugNoSymbolsEvent2 */</comment>
<comment type="block" pos:line="8257" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8260" pos:column="1">EXTERN_C</name> <specifier pos:line="8260" pos:column="10">const</specifier> <name pos:line="8260" pos:column="16">IID</name></type> <name pos:line="8260" pos:column="20">IID_IDebugNoSymbolsEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8262" pos:column="1">#<cpp:directive pos:line="8262" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8262" pos:column="5">defined</name><argument_list pos:line="8262" pos:column="12">(<argument><expr><name pos:line="8262" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8262" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8262" pos:column="29">!</op:operator><call><name pos:line="8262" pos:column="30">defined</name><argument_list pos:line="8262" pos:column="37">(<argument><expr><name pos:line="8262" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8264" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8264" pos:column="19">(<argument pos:line="8264" pos:column="20">"3ad4fb48-647e-4b03-9c1e-52754e80c880"</argument>)</argument_list></macro>
    <label><name pos:line="8265" pos:column="5">IDebugNoSymbolsEvent2</name> :</label> <expr_stmt><expr pos:line="8265" pos:column="29">public <name pos:line="8265" pos:column="36">IUnknown</name>
    <block pos:line="8266" pos:column="5">{
    <expr pos:line="8267" pos:column="5">public<op:operator pos:line="8267" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8270" pos:column="1">#<cpp:directive pos:line="8270" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8270" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8272" pos:column="5">typedef <type><struct pos:line="8272" pos:column="13">struct <name pos:line="8272" pos:column="20">IDebugNoSymbolsEvent2Vtbl</name>
    <block pos:line="8273" pos:column="5">{<public type="default" pos:line="8273" pos:column="6">
        <function_decl><type><name pos:line="8274" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8276" pos:column="9">HRESULT</name></type> ( <name pos:line="8276" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8276" pos:column="37">*</type:modifier><name pos:line="8276" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8276" pos:column="54">( 
            <param><decl><type><name pos:line="8277" pos:column="13">IDebugNoSymbolsEvent2</name> <type:modifier pos:line="8277" pos:column="35">*</type:modifier></type> <name pos:line="8277" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="8278" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8278" pos:column="24">__RPC__in</name> <name pos:line="8278" pos:column="34">REFIID</name></type> <name pos:line="8278" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8279" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8280" pos:column="13">__RPC__deref_out</name>  <name pos:line="8280" pos:column="31">void</name> <type:modifier pos:line="8280" pos:column="36">*</type:modifier><type:modifier pos:line="8280" pos:column="37">*</type:modifier></type><name pos:line="8280" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8282" pos:column="9">ULONG</name></type> ( <name pos:line="8282" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8282" pos:column="35">*</type:modifier><name pos:line="8282" pos:column="36">AddRef</name> )<parameter_list pos:line="8282" pos:column="44">( 
            <param><decl><type><name pos:line="8283" pos:column="13">IDebugNoSymbolsEvent2</name> <type:modifier pos:line="8283" pos:column="35">*</type:modifier></type> <name pos:line="8283" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8285" pos:column="9">ULONG</name></type> ( <name pos:line="8285" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8285" pos:column="35">*</type:modifier><name pos:line="8285" pos:column="36">Release</name> )<parameter_list pos:line="8285" pos:column="45">( 
            <param><decl><type><name pos:line="8286" pos:column="13">IDebugNoSymbolsEvent2</name> <type:modifier pos:line="8286" pos:column="35">*</type:modifier></type> <name pos:line="8286" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8288" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8289" pos:column="7">IDebugNoSymbolsEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8291" pos:column="5">interface</name></type> <name pos:line="8291" pos:column="15">IDebugNoSymbolsEvent2</name>
    <argument_list pos:line="8292" pos:column="5">{
        <argument><expr><name pos:line="8293" pos:column="9">CONST_VTBL</name> struct <name pos:line="8293" pos:column="27">IDebugNoSymbolsEvent2Vtbl</name> <op:operator pos:line="8293" pos:column="53">*</op:operator><name pos:line="8293" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8298" pos:column="1">#<cpp:directive pos:line="8298" pos:column="2">ifdef</cpp:directive> <name pos:line="8298" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8301" pos:column="1">#<cpp:directive pos:line="8301" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8301" pos:column="9">IDebugNoSymbolsEvent2_QueryInterface</name><parameter_list pos:line="8301" pos:column="45">(<param><type><name pos:line="8301" pos:column="46">This</name></type></param>,<param><type><name pos:line="8301" pos:column="51">riid</name></type></param>,<param><type><name pos:line="8301" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8302" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8304" pos:column="1">#<cpp:directive pos:line="8304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8304" pos:column="9">IDebugNoSymbolsEvent2_AddRef</name><parameter_list pos:line="8304" pos:column="37">(<param><type><name pos:line="8304" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8305" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8307" pos:column="1">#<cpp:directive pos:line="8307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8307" pos:column="9">IDebugNoSymbolsEvent2_Release</name><parameter_list pos:line="8307" pos:column="38">(<param><type><name pos:line="8307" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8308" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="8311" pos:column="1">#<cpp:directive pos:line="8311" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8311" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8314" pos:column="1">#<cpp:directive pos:line="8314" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8314" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8319" pos:column="1">#<cpp:directive pos:line="8319" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8319" pos:column="9">/* __IDebugNoSymbolsEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8322" pos:column="1">#<cpp:directive pos:line="8322" pos:column="2">ifndef</cpp:directive> <name pos:line="8322" pos:column="9">__IDebugProgramNameChangedEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8323" pos:column="1">#<cpp:directive pos:line="8323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8323" pos:column="9">__IDebugProgramNameChangedEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8325" pos:column="1">/* interface IDebugProgramNameChangedEvent2 */</comment>
<comment type="block" pos:line="8326" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8329" pos:column="1">EXTERN_C</name> <specifier pos:line="8329" pos:column="10">const</specifier> <name pos:line="8329" pos:column="16">IID</name></type> <name pos:line="8329" pos:column="20">IID_IDebugProgramNameChangedEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8331" pos:column="1">#<cpp:directive pos:line="8331" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8331" pos:column="5">defined</name><argument_list pos:line="8331" pos:column="12">(<argument><expr><name pos:line="8331" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8331" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8331" pos:column="29">!</op:operator><call><name pos:line="8331" pos:column="30">defined</name><argument_list pos:line="8331" pos:column="37">(<argument><expr><name pos:line="8331" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8333" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8333" pos:column="19">(<argument pos:line="8333" pos:column="20">"e05c2dfd-59d5-46d3-a71c-5d07665d85af"</argument>)</argument_list></macro>
    <label><name pos:line="8334" pos:column="5">IDebugProgramNameChangedEvent2</name> :</label> <expr_stmt><expr pos:line="8334" pos:column="38">public <name pos:line="8334" pos:column="45">IUnknown</name>
    <block pos:line="8335" pos:column="5">{
    <expr pos:line="8336" pos:column="5">public<op:operator pos:line="8336" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8339" pos:column="1">#<cpp:directive pos:line="8339" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8339" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8341" pos:column="5">typedef <type><struct pos:line="8341" pos:column="13">struct <name pos:line="8341" pos:column="20">IDebugProgramNameChangedEvent2Vtbl</name>
    <block pos:line="8342" pos:column="5">{<public type="default" pos:line="8342" pos:column="6">
        <function_decl><type><name pos:line="8343" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8345" pos:column="9">HRESULT</name></type> ( <name pos:line="8345" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8345" pos:column="37">*</type:modifier><name pos:line="8345" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8345" pos:column="54">( 
            <param><decl><type><name pos:line="8346" pos:column="13">IDebugProgramNameChangedEvent2</name> <type:modifier pos:line="8346" pos:column="44">*</type:modifier></type> <name pos:line="8346" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="8347" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8347" pos:column="24">__RPC__in</name> <name pos:line="8347" pos:column="34">REFIID</name></type> <name pos:line="8347" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8348" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8349" pos:column="13">__RPC__deref_out</name>  <name pos:line="8349" pos:column="31">void</name> <type:modifier pos:line="8349" pos:column="36">*</type:modifier><type:modifier pos:line="8349" pos:column="37">*</type:modifier></type><name pos:line="8349" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8351" pos:column="9">ULONG</name></type> ( <name pos:line="8351" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8351" pos:column="35">*</type:modifier><name pos:line="8351" pos:column="36">AddRef</name> )<parameter_list pos:line="8351" pos:column="44">( 
            <param><decl><type><name pos:line="8352" pos:column="13">IDebugProgramNameChangedEvent2</name> <type:modifier pos:line="8352" pos:column="44">*</type:modifier></type> <name pos:line="8352" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8354" pos:column="9">ULONG</name></type> ( <name pos:line="8354" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8354" pos:column="35">*</type:modifier><name pos:line="8354" pos:column="36">Release</name> )<parameter_list pos:line="8354" pos:column="45">( 
            <param><decl><type><name pos:line="8355" pos:column="13">IDebugProgramNameChangedEvent2</name> <type:modifier pos:line="8355" pos:column="44">*</type:modifier></type> <name pos:line="8355" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8357" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8358" pos:column="7">IDebugProgramNameChangedEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8360" pos:column="5">interface</name></type> <name pos:line="8360" pos:column="15">IDebugProgramNameChangedEvent2</name>
    <argument_list pos:line="8361" pos:column="5">{
        <argument><expr><name pos:line="8362" pos:column="9">CONST_VTBL</name> struct <name pos:line="8362" pos:column="27">IDebugProgramNameChangedEvent2Vtbl</name> <op:operator pos:line="8362" pos:column="62">*</op:operator><name pos:line="8362" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8367" pos:column="1">#<cpp:directive pos:line="8367" pos:column="2">ifdef</cpp:directive> <name pos:line="8367" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8370" pos:column="1">#<cpp:directive pos:line="8370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8370" pos:column="9">IDebugProgramNameChangedEvent2_QueryInterface</name><parameter_list pos:line="8370" pos:column="54">(<param><type><name pos:line="8370" pos:column="55">This</name></type></param>,<param><type><name pos:line="8370" pos:column="60">riid</name></type></param>,<param><type><name pos:line="8370" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8371" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8373" pos:column="1">#<cpp:directive pos:line="8373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8373" pos:column="9">IDebugProgramNameChangedEvent2_AddRef</name><parameter_list pos:line="8373" pos:column="46">(<param><type><name pos:line="8373" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8374" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8376" pos:column="1">#<cpp:directive pos:line="8376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8376" pos:column="9">IDebugProgramNameChangedEvent2_Release</name><parameter_list pos:line="8376" pos:column="47">(<param><type><name pos:line="8376" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8377" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="8380" pos:column="1">#<cpp:directive pos:line="8380" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8380" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8383" pos:column="1">#<cpp:directive pos:line="8383" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8383" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8388" pos:column="1">#<cpp:directive pos:line="8388" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8388" pos:column="9">/* __IDebugProgramNameChangedEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8391" pos:column="1">#<cpp:directive pos:line="8391" pos:column="2">ifndef</cpp:directive> <name pos:line="8391" pos:column="9">__IDebugThreadNameChangedEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8392" pos:column="1">#<cpp:directive pos:line="8392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8392" pos:column="9">__IDebugThreadNameChangedEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8394" pos:column="1">/* interface IDebugThreadNameChangedEvent2 */</comment>
<comment type="block" pos:line="8395" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8398" pos:column="1">EXTERN_C</name> <specifier pos:line="8398" pos:column="10">const</specifier> <name pos:line="8398" pos:column="16">IID</name></type> <name pos:line="8398" pos:column="20">IID_IDebugThreadNameChangedEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8400" pos:column="1">#<cpp:directive pos:line="8400" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8400" pos:column="5">defined</name><argument_list pos:line="8400" pos:column="12">(<argument><expr><name pos:line="8400" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8400" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8400" pos:column="29">!</op:operator><call><name pos:line="8400" pos:column="30">defined</name><argument_list pos:line="8400" pos:column="37">(<argument><expr><name pos:line="8400" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8402" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8402" pos:column="19">(<argument pos:line="8402" pos:column="20">"1ef4ef78-2c44-4b7a-8473-8f4357611729"</argument>)</argument_list></macro>
    <label><name pos:line="8403" pos:column="5">IDebugThreadNameChangedEvent2</name> :</label> <expr_stmt><expr pos:line="8403" pos:column="37">public <name pos:line="8403" pos:column="44">IUnknown</name>
    <block pos:line="8404" pos:column="5">{
    <expr pos:line="8405" pos:column="5">public<op:operator pos:line="8405" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8408" pos:column="1">#<cpp:directive pos:line="8408" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8408" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8410" pos:column="5">typedef <type><struct pos:line="8410" pos:column="13">struct <name pos:line="8410" pos:column="20">IDebugThreadNameChangedEvent2Vtbl</name>
    <block pos:line="8411" pos:column="5">{<public type="default" pos:line="8411" pos:column="6">
        <function_decl><type><name pos:line="8412" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8414" pos:column="9">HRESULT</name></type> ( <name pos:line="8414" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8414" pos:column="37">*</type:modifier><name pos:line="8414" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8414" pos:column="54">( 
            <param><decl><type><name pos:line="8415" pos:column="13">IDebugThreadNameChangedEvent2</name> <type:modifier pos:line="8415" pos:column="43">*</type:modifier></type> <name pos:line="8415" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="8416" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8416" pos:column="24">__RPC__in</name> <name pos:line="8416" pos:column="34">REFIID</name></type> <name pos:line="8416" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8417" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8418" pos:column="13">__RPC__deref_out</name>  <name pos:line="8418" pos:column="31">void</name> <type:modifier pos:line="8418" pos:column="36">*</type:modifier><type:modifier pos:line="8418" pos:column="37">*</type:modifier></type><name pos:line="8418" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8420" pos:column="9">ULONG</name></type> ( <name pos:line="8420" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8420" pos:column="35">*</type:modifier><name pos:line="8420" pos:column="36">AddRef</name> )<parameter_list pos:line="8420" pos:column="44">( 
            <param><decl><type><name pos:line="8421" pos:column="13">IDebugThreadNameChangedEvent2</name> <type:modifier pos:line="8421" pos:column="43">*</type:modifier></type> <name pos:line="8421" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8423" pos:column="9">ULONG</name></type> ( <name pos:line="8423" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8423" pos:column="35">*</type:modifier><name pos:line="8423" pos:column="36">Release</name> )<parameter_list pos:line="8423" pos:column="45">( 
            <param><decl><type><name pos:line="8424" pos:column="13">IDebugThreadNameChangedEvent2</name> <type:modifier pos:line="8424" pos:column="43">*</type:modifier></type> <name pos:line="8424" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8426" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8427" pos:column="7">IDebugThreadNameChangedEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8429" pos:column="5">interface</name></type> <name pos:line="8429" pos:column="15">IDebugThreadNameChangedEvent2</name>
    <argument_list pos:line="8430" pos:column="5">{
        <argument><expr><name pos:line="8431" pos:column="9">CONST_VTBL</name> struct <name pos:line="8431" pos:column="27">IDebugThreadNameChangedEvent2Vtbl</name> <op:operator pos:line="8431" pos:column="61">*</op:operator><name pos:line="8431" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8436" pos:column="1">#<cpp:directive pos:line="8436" pos:column="2">ifdef</cpp:directive> <name pos:line="8436" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8439" pos:column="1">#<cpp:directive pos:line="8439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8439" pos:column="9">IDebugThreadNameChangedEvent2_QueryInterface</name><parameter_list pos:line="8439" pos:column="53">(<param><type><name pos:line="8439" pos:column="54">This</name></type></param>,<param><type><name pos:line="8439" pos:column="59">riid</name></type></param>,<param><type><name pos:line="8439" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8440" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8442" pos:column="1">#<cpp:directive pos:line="8442" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8442" pos:column="9">IDebugThreadNameChangedEvent2_AddRef</name><parameter_list pos:line="8442" pos:column="45">(<param><type><name pos:line="8442" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8443" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8445" pos:column="1">#<cpp:directive pos:line="8445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8445" pos:column="9">IDebugThreadNameChangedEvent2_Release</name><parameter_list pos:line="8445" pos:column="46">(<param><type><name pos:line="8445" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8446" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="8449" pos:column="1">#<cpp:directive pos:line="8449" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8449" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8452" pos:column="1">#<cpp:directive pos:line="8452" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8452" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8457" pos:column="1">#<cpp:directive pos:line="8457" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8457" pos:column="9">/* __IDebugThreadNameChangedEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8460" pos:column="1">#<cpp:directive pos:line="8460" pos:column="2">ifndef</cpp:directive> <name pos:line="8460" pos:column="9">__IDebugMessageEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8461" pos:column="1">#<cpp:directive pos:line="8461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8461" pos:column="9">__IDebugMessageEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8463" pos:column="1">/* interface IDebugMessageEvent2 */</comment>
<comment type="block" pos:line="8464" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="8467" pos:column="1">enum <name pos:line="8467" pos:column="6">enum_MESSAGETYPE</name>
    <block pos:line="8468" pos:column="5">{	<decl><name pos:line="8468" pos:column="9">MT_OUTPUTSTRING</name>	<init pos:line="8468" pos:column="25">= <expr><lit:literal type="number" pos:line="8468" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="8468" pos:column="30">,</op:operator>
	<decl><name pos:line="8469" pos:column="9">MT_MESSAGEBOX</name>	<init pos:line="8469" pos:column="25">= <expr><lit:literal type="number" pos:line="8469" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="8469" pos:column="30">,</op:operator>
	<decl><name pos:line="8470" pos:column="9">MT_TYPE_MASK</name>	<init pos:line="8470" pos:column="25">= <expr><lit:literal type="number" pos:line="8470" pos:column="27">0xff</lit:literal></expr></init></decl><op:operator pos:line="8470" pos:column="31">,</op:operator>
	<decl><name pos:line="8471" pos:column="9">MT_REASON_EXCEPTION</name>	<init pos:line="8471" pos:column="33">= <expr><lit:literal type="number" pos:line="8471" pos:column="35">0x100</lit:literal></expr></init></decl><op:operator pos:line="8471" pos:column="40">,</op:operator>
	<decl><name pos:line="8472" pos:column="9">MT_REASON_TRACEPOINT</name>	<init pos:line="8472" pos:column="33">= <expr><lit:literal type="number" pos:line="8472" pos:column="35">0x200</lit:literal></expr></init></decl><op:operator pos:line="8472" pos:column="40">,</op:operator>
	<decl><name pos:line="8473" pos:column="9">MT_REASON_MASK</name>	<init pos:line="8473" pos:column="25">= <expr><lit:literal type="number" pos:line="8473" pos:column="27">0xff00</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="8475" pos:column="1">typedef <type><name pos:line="8475" pos:column="9">DWORD</name></type> <name pos:line="8475" pos:column="15">MESSAGETYPE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="8478" pos:column="1">EXTERN_C</name> <specifier pos:line="8478" pos:column="10">const</specifier> <name pos:line="8478" pos:column="16">IID</name></type> <name pos:line="8478" pos:column="20">IID_IDebugMessageEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8480" pos:column="1">#<cpp:directive pos:line="8480" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8480" pos:column="5">defined</name><argument_list pos:line="8480" pos:column="12">(<argument><expr><name pos:line="8480" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8480" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8480" pos:column="29">!</op:operator><call><name pos:line="8480" pos:column="30">defined</name><argument_list pos:line="8480" pos:column="37">(<argument><expr><name pos:line="8480" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8482" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8482" pos:column="19">(<argument pos:line="8482" pos:column="20">"3bdb28cf-dbd2-4d24-af03-01072b67eb9e"</argument>)</argument_list></macro>
    <label><name pos:line="8483" pos:column="5">IDebugMessageEvent2</name> :</label> <expr_stmt><expr pos:line="8483" pos:column="27">public <name pos:line="8483" pos:column="34">IUnknown</name>
    <block pos:line="8484" pos:column="5">{
    <expr pos:line="8485" pos:column="5">public<op:operator pos:line="8485" pos:column="11">:</op:operator>
        virtual <name pos:line="8486" pos:column="17">HRESULT</name> <name pos:line="8486" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8486" pos:column="43">GetMessage</name><argument_list pos:line="8486" pos:column="53">( 
            <comment type="block" pos:line="8487" pos:column="13">/* [out] */</comment> <argument pos:line="8487" pos:column="25">__RPC__out MESSAGETYPE *pMessageType</argument>,
            <comment type="block" pos:line="8488" pos:column="13">/* [out] */</comment> <argument pos:line="8488" pos:column="25">__RPC__deref_out_opt BSTR *pbstrMessage</argument>,
            <comment type="block" pos:line="8489" pos:column="13">/* [out] */</comment> <argument pos:line="8489" pos:column="25">__RPC__out DWORD *pdwType</argument>,
            <comment type="block" pos:line="8490" pos:column="13">/* [out] */</comment> <argument pos:line="8490" pos:column="25">__RPC__deref_out_opt BSTR *pbstrHelpFileName</argument>,
            <comment type="block" pos:line="8491" pos:column="13">/* [out] */</comment> <argument pos:line="8491" pos:column="25">__RPC__out DWORD *pdwHelpId</argument>)</argument_list></macro> <op:operator pos:line="8491" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="8491" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="8493" pos:column="9">virtual <name pos:line="8493" pos:column="17">HRESULT</name> <name pos:line="8493" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8493" pos:column="43">SetResponse</name><argument_list pos:line="8493" pos:column="54">( 
            <comment type="block" pos:line="8494" pos:column="13">/* [in] */</comment> <argument pos:line="8494" pos:column="24">DWORD dwResponse</argument>)</argument_list></macro> <op:operator pos:line="8494" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="8494" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8498" pos:column="1">#<cpp:directive pos:line="8498" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8498" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8500" pos:column="5">typedef <type><struct pos:line="8500" pos:column="13">struct <name pos:line="8500" pos:column="20">IDebugMessageEvent2Vtbl</name>
    <block pos:line="8501" pos:column="5">{<public type="default" pos:line="8501" pos:column="6">
        <function_decl><type><name pos:line="8502" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8504" pos:column="9">HRESULT</name></type> ( <name pos:line="8504" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8504" pos:column="37">*</type:modifier><name pos:line="8504" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8504" pos:column="54">( 
            <param><decl><type><name pos:line="8505" pos:column="13">IDebugMessageEvent2</name> <type:modifier pos:line="8505" pos:column="33">*</type:modifier></type> <name pos:line="8505" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="8506" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8506" pos:column="24">__RPC__in</name> <name pos:line="8506" pos:column="34">REFIID</name></type> <name pos:line="8506" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8507" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8508" pos:column="13">__RPC__deref_out</name>  <name pos:line="8508" pos:column="31">void</name> <type:modifier pos:line="8508" pos:column="36">*</type:modifier><type:modifier pos:line="8508" pos:column="37">*</type:modifier></type><name pos:line="8508" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8510" pos:column="9">ULONG</name></type> ( <name pos:line="8510" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8510" pos:column="35">*</type:modifier><name pos:line="8510" pos:column="36">AddRef</name> )<parameter_list pos:line="8510" pos:column="44">( 
            <param><decl><type><name pos:line="8511" pos:column="13">IDebugMessageEvent2</name> <type:modifier pos:line="8511" pos:column="33">*</type:modifier></type> <name pos:line="8511" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8513" pos:column="9">ULONG</name></type> ( <name pos:line="8513" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8513" pos:column="35">*</type:modifier><name pos:line="8513" pos:column="36">Release</name> )<parameter_list pos:line="8513" pos:column="45">( 
            <param><decl><type><name pos:line="8514" pos:column="13">IDebugMessageEvent2</name> <type:modifier pos:line="8514" pos:column="33">*</type:modifier></type> <name pos:line="8514" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8516" pos:column="9">HRESULT</name></type> ( <name pos:line="8516" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8516" pos:column="37">*</type:modifier><name pos:line="8516" pos:column="38">GetMessage</name> )<parameter_list pos:line="8516" pos:column="50">( 
            <param><decl><type><name pos:line="8517" pos:column="13">IDebugMessageEvent2</name> <type:modifier pos:line="8517" pos:column="33">*</type:modifier></type> <name pos:line="8517" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="8518" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8518" pos:column="25">__RPC__out</name> <name pos:line="8518" pos:column="36">MESSAGETYPE</name> <type:modifier pos:line="8518" pos:column="48">*</type:modifier></type><name pos:line="8518" pos:column="49">pMessageType</name></decl></param>,
            <comment type="block" pos:line="8519" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8519" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8519" pos:column="46">BSTR</name> <type:modifier pos:line="8519" pos:column="51">*</type:modifier></type><name pos:line="8519" pos:column="52">pbstrMessage</name></decl></param>,
            <comment type="block" pos:line="8520" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8520" pos:column="25">__RPC__out</name> <name pos:line="8520" pos:column="36">DWORD</name> <type:modifier pos:line="8520" pos:column="42">*</type:modifier></type><name pos:line="8520" pos:column="43">pdwType</name></decl></param>,
            <comment type="block" pos:line="8521" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8521" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8521" pos:column="46">BSTR</name> <type:modifier pos:line="8521" pos:column="51">*</type:modifier></type><name pos:line="8521" pos:column="52">pbstrHelpFileName</name></decl></param>,
            <comment type="block" pos:line="8522" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8522" pos:column="25">__RPC__out</name> <name pos:line="8522" pos:column="36">DWORD</name> <type:modifier pos:line="8522" pos:column="42">*</type:modifier></type><name pos:line="8522" pos:column="43">pdwHelpId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8524" pos:column="9">HRESULT</name></type> ( <name pos:line="8524" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8524" pos:column="37">*</type:modifier><name pos:line="8524" pos:column="38">SetResponse</name> )<parameter_list pos:line="8524" pos:column="51">( 
            <param><decl><type><name pos:line="8525" pos:column="13">IDebugMessageEvent2</name> <type:modifier pos:line="8525" pos:column="33">*</type:modifier></type> <name pos:line="8525" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="8526" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8526" pos:column="24">DWORD</name></type> <name pos:line="8526" pos:column="30">dwResponse</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8528" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8529" pos:column="7">IDebugMessageEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8531" pos:column="5">interface</name></type> <name pos:line="8531" pos:column="15">IDebugMessageEvent2</name>
    <argument_list pos:line="8532" pos:column="5">{
        <argument><expr><name pos:line="8533" pos:column="9">CONST_VTBL</name> struct <name pos:line="8533" pos:column="27">IDebugMessageEvent2Vtbl</name> <op:operator pos:line="8533" pos:column="51">*</op:operator><name pos:line="8533" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8538" pos:column="1">#<cpp:directive pos:line="8538" pos:column="2">ifdef</cpp:directive> <name pos:line="8538" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8541" pos:column="1">#<cpp:directive pos:line="8541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8541" pos:column="9">IDebugMessageEvent2_QueryInterface</name><parameter_list pos:line="8541" pos:column="43">(<param><type><name pos:line="8541" pos:column="44">This</name></type></param>,<param><type><name pos:line="8541" pos:column="49">riid</name></type></param>,<param><type><name pos:line="8541" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8542" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8544" pos:column="1">#<cpp:directive pos:line="8544" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8544" pos:column="9">IDebugMessageEvent2_AddRef</name><parameter_list pos:line="8544" pos:column="35">(<param><type><name pos:line="8544" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8545" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8547" pos:column="1">#<cpp:directive pos:line="8547" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8547" pos:column="9">IDebugMessageEvent2_Release</name><parameter_list pos:line="8547" pos:column="36">(<param><type><name pos:line="8547" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8548" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8551" pos:column="1">#<cpp:directive pos:line="8551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8551" pos:column="9">IDebugMessageEvent2_GetMessage</name><parameter_list pos:line="8551" pos:column="39">(<param><type><name pos:line="8551" pos:column="40">This</name></type></param>,<param><type><name pos:line="8551" pos:column="45">pMessageType</name></type></param>,<param><type><name pos:line="8551" pos:column="58">pbstrMessage</name></type></param>,<param><type><name pos:line="8551" pos:column="71">pdwType</name></type></param>,<param><type><name pos:line="8551" pos:column="79">pbstrHelpFileName</name></type></param>,<param><type><name pos:line="8551" pos:column="97">pdwHelpId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8552" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMessage(This,pMessageType,pbstrMessage,pdwType,pbstrHelpFileName,pdwHelpId) )</cpp:value></cpp:define> 

<cpp:define pos:line="8554" pos:column="1">#<cpp:directive pos:line="8554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8554" pos:column="9">IDebugMessageEvent2_SetResponse</name><parameter_list pos:line="8554" pos:column="40">(<param><type><name pos:line="8554" pos:column="41">This</name></type></param>,<param><type><name pos:line="8554" pos:column="46">dwResponse</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8555" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetResponse(This,dwResponse) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8557" pos:column="1">#<cpp:directive pos:line="8557" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8557" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8560" pos:column="1">#<cpp:directive pos:line="8560" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8560" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8565" pos:column="1">#<cpp:directive pos:line="8565" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8565" pos:column="9">/* __IDebugMessageEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8568" pos:column="1">#<cpp:directive pos:line="8568" pos:column="2">ifndef</cpp:directive> <name pos:line="8568" pos:column="9">__IDebugErrorEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8569" pos:column="1">#<cpp:directive pos:line="8569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8569" pos:column="9">__IDebugErrorEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8571" pos:column="1">/* interface IDebugErrorEvent2 */</comment>
<comment type="block" pos:line="8572" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8575" pos:column="1">EXTERN_C</name> <specifier pos:line="8575" pos:column="10">const</specifier> <name pos:line="8575" pos:column="16">IID</name></type> <name pos:line="8575" pos:column="20">IID_IDebugErrorEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8577" pos:column="1">#<cpp:directive pos:line="8577" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8577" pos:column="5">defined</name><argument_list pos:line="8577" pos:column="12">(<argument><expr><name pos:line="8577" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8577" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8577" pos:column="29">!</op:operator><call><name pos:line="8577" pos:column="30">defined</name><argument_list pos:line="8577" pos:column="37">(<argument><expr><name pos:line="8577" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8579" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8579" pos:column="19">(<argument pos:line="8579" pos:column="20">"fdb7a36c-8c53-41da-a337-8bd86b14d5cb"</argument>)</argument_list></macro>
    <label><name pos:line="8580" pos:column="5">IDebugErrorEvent2</name> :</label> <expr_stmt><expr pos:line="8580" pos:column="25">public <name pos:line="8580" pos:column="32">IUnknown</name>
    <block pos:line="8581" pos:column="5">{
    <expr pos:line="8582" pos:column="5">public<op:operator pos:line="8582" pos:column="11">:</op:operator>
        virtual <name pos:line="8583" pos:column="17">HRESULT</name> <name pos:line="8583" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8583" pos:column="43">GetErrorMessage</name><argument_list pos:line="8583" pos:column="58">( 
            <comment type="block" pos:line="8584" pos:column="13">/* [out] */</comment> <argument pos:line="8584" pos:column="25">__RPC__out MESSAGETYPE *pMessageType</argument>,
            <comment type="block" pos:line="8585" pos:column="13">/* [out] */</comment> <argument pos:line="8585" pos:column="25">__RPC__deref_out_opt BSTR *pbstrErrorFormat</argument>,
            <comment type="block" pos:line="8586" pos:column="13">/* [out] */</comment> <argument pos:line="8586" pos:column="25">__RPC__out HRESULT *phrErrorReason</argument>,
            <comment type="block" pos:line="8587" pos:column="13">/* [out] */</comment> <argument pos:line="8587" pos:column="25">__RPC__out DWORD *pdwType</argument>,
            <comment type="block" pos:line="8588" pos:column="13">/* [out] */</comment> <argument pos:line="8588" pos:column="25">__RPC__deref_out_opt BSTR *pbstrHelpFileName</argument>,
            <comment type="block" pos:line="8589" pos:column="13">/* [out] */</comment> <argument pos:line="8589" pos:column="25">__RPC__out DWORD *pdwHelpId</argument>)</argument_list></macro> <op:operator pos:line="8589" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="8589" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8593" pos:column="1">#<cpp:directive pos:line="8593" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8593" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8595" pos:column="5">typedef <type><struct pos:line="8595" pos:column="13">struct <name pos:line="8595" pos:column="20">IDebugErrorEvent2Vtbl</name>
    <block pos:line="8596" pos:column="5">{<public type="default" pos:line="8596" pos:column="6">
        <function_decl><type><name pos:line="8597" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8599" pos:column="9">HRESULT</name></type> ( <name pos:line="8599" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8599" pos:column="37">*</type:modifier><name pos:line="8599" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8599" pos:column="54">( 
            <param><decl><type><name pos:line="8600" pos:column="13">IDebugErrorEvent2</name> <type:modifier pos:line="8600" pos:column="31">*</type:modifier></type> <name pos:line="8600" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="8601" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8601" pos:column="24">__RPC__in</name> <name pos:line="8601" pos:column="34">REFIID</name></type> <name pos:line="8601" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8602" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8603" pos:column="13">__RPC__deref_out</name>  <name pos:line="8603" pos:column="31">void</name> <type:modifier pos:line="8603" pos:column="36">*</type:modifier><type:modifier pos:line="8603" pos:column="37">*</type:modifier></type><name pos:line="8603" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8605" pos:column="9">ULONG</name></type> ( <name pos:line="8605" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8605" pos:column="35">*</type:modifier><name pos:line="8605" pos:column="36">AddRef</name> )<parameter_list pos:line="8605" pos:column="44">( 
            <param><decl><type><name pos:line="8606" pos:column="13">IDebugErrorEvent2</name> <type:modifier pos:line="8606" pos:column="31">*</type:modifier></type> <name pos:line="8606" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8608" pos:column="9">ULONG</name></type> ( <name pos:line="8608" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8608" pos:column="35">*</type:modifier><name pos:line="8608" pos:column="36">Release</name> )<parameter_list pos:line="8608" pos:column="45">( 
            <param><decl><type><name pos:line="8609" pos:column="13">IDebugErrorEvent2</name> <type:modifier pos:line="8609" pos:column="31">*</type:modifier></type> <name pos:line="8609" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8611" pos:column="9">HRESULT</name></type> ( <name pos:line="8611" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8611" pos:column="37">*</type:modifier><name pos:line="8611" pos:column="38">GetErrorMessage</name> )<parameter_list pos:line="8611" pos:column="55">( 
            <param><decl><type><name pos:line="8612" pos:column="13">IDebugErrorEvent2</name> <type:modifier pos:line="8612" pos:column="31">*</type:modifier></type> <name pos:line="8612" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="8613" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8613" pos:column="25">__RPC__out</name> <name pos:line="8613" pos:column="36">MESSAGETYPE</name> <type:modifier pos:line="8613" pos:column="48">*</type:modifier></type><name pos:line="8613" pos:column="49">pMessageType</name></decl></param>,
            <comment type="block" pos:line="8614" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8614" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8614" pos:column="46">BSTR</name> <type:modifier pos:line="8614" pos:column="51">*</type:modifier></type><name pos:line="8614" pos:column="52">pbstrErrorFormat</name></decl></param>,
            <comment type="block" pos:line="8615" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8615" pos:column="25">__RPC__out</name> <name pos:line="8615" pos:column="36">HRESULT</name> <type:modifier pos:line="8615" pos:column="44">*</type:modifier></type><name pos:line="8615" pos:column="45">phrErrorReason</name></decl></param>,
            <comment type="block" pos:line="8616" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8616" pos:column="25">__RPC__out</name> <name pos:line="8616" pos:column="36">DWORD</name> <type:modifier pos:line="8616" pos:column="42">*</type:modifier></type><name pos:line="8616" pos:column="43">pdwType</name></decl></param>,
            <comment type="block" pos:line="8617" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8617" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8617" pos:column="46">BSTR</name> <type:modifier pos:line="8617" pos:column="51">*</type:modifier></type><name pos:line="8617" pos:column="52">pbstrHelpFileName</name></decl></param>,
            <comment type="block" pos:line="8618" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8618" pos:column="25">__RPC__out</name> <name pos:line="8618" pos:column="36">DWORD</name> <type:modifier pos:line="8618" pos:column="42">*</type:modifier></type><name pos:line="8618" pos:column="43">pdwHelpId</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8620" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8621" pos:column="7">IDebugErrorEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8623" pos:column="5">interface</name></type> <name pos:line="8623" pos:column="15">IDebugErrorEvent2</name>
    <argument_list pos:line="8624" pos:column="5">{
        <argument><expr><name pos:line="8625" pos:column="9">CONST_VTBL</name> struct <name pos:line="8625" pos:column="27">IDebugErrorEvent2Vtbl</name> <op:operator pos:line="8625" pos:column="49">*</op:operator><name pos:line="8625" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8630" pos:column="1">#<cpp:directive pos:line="8630" pos:column="2">ifdef</cpp:directive> <name pos:line="8630" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8633" pos:column="1">#<cpp:directive pos:line="8633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8633" pos:column="9">IDebugErrorEvent2_QueryInterface</name><parameter_list pos:line="8633" pos:column="41">(<param><type><name pos:line="8633" pos:column="42">This</name></type></param>,<param><type><name pos:line="8633" pos:column="47">riid</name></type></param>,<param><type><name pos:line="8633" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8634" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8636" pos:column="1">#<cpp:directive pos:line="8636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8636" pos:column="9">IDebugErrorEvent2_AddRef</name><parameter_list pos:line="8636" pos:column="33">(<param><type><name pos:line="8636" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8637" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8639" pos:column="1">#<cpp:directive pos:line="8639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8639" pos:column="9">IDebugErrorEvent2_Release</name><parameter_list pos:line="8639" pos:column="34">(<param><type><name pos:line="8639" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8640" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8643" pos:column="1">#<cpp:directive pos:line="8643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8643" pos:column="9">IDebugErrorEvent2_GetErrorMessage</name><parameter_list pos:line="8643" pos:column="42">(<param><type><name pos:line="8643" pos:column="43">This</name></type></param>,<param><type><name pos:line="8643" pos:column="48">pMessageType</name></type></param>,<param><type><name pos:line="8643" pos:column="61">pbstrErrorFormat</name></type></param>,<param><type><name pos:line="8643" pos:column="78">phrErrorReason</name></type></param>,<param><type><name pos:line="8643" pos:column="93">pdwType</name></type></param>,<param><type><name pos:line="8643" pos:column="101">pbstrHelpFileName</name></type></param>,<param><type><name pos:line="8643" pos:column="119">pdwHelpId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8644" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetErrorMessage(This,pMessageType,pbstrErrorFormat,phrErrorReason,pdwType,pbstrHelpFileName,pdwHelpId) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8646" pos:column="1">#<cpp:directive pos:line="8646" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8646" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8649" pos:column="1">#<cpp:directive pos:line="8649" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8649" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8654" pos:column="1">#<cpp:directive pos:line="8654" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8654" pos:column="9">/* __IDebugErrorEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8657" pos:column="1">#<cpp:directive pos:line="8657" pos:column="2">ifndef</cpp:directive> <name pos:line="8657" pos:column="9">__IDebugActivateDocumentEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8658" pos:column="1">#<cpp:directive pos:line="8658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8658" pos:column="9">__IDebugActivateDocumentEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8660" pos:column="1">/* interface IDebugActivateDocumentEvent2 */</comment>
<comment type="block" pos:line="8661" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8664" pos:column="1">EXTERN_C</name> <specifier pos:line="8664" pos:column="10">const</specifier> <name pos:line="8664" pos:column="16">IID</name></type> <name pos:line="8664" pos:column="20">IID_IDebugActivateDocumentEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8666" pos:column="1">#<cpp:directive pos:line="8666" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8666" pos:column="5">defined</name><argument_list pos:line="8666" pos:column="12">(<argument><expr><name pos:line="8666" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8666" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8666" pos:column="29">!</op:operator><call><name pos:line="8666" pos:column="30">defined</name><argument_list pos:line="8666" pos:column="37">(<argument><expr><name pos:line="8666" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8668" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8668" pos:column="19">(<argument pos:line="8668" pos:column="20">"58f36c3d-7d07-4eba-a041-62f63e188037"</argument>)</argument_list></macro>
    <label><name pos:line="8669" pos:column="5">IDebugActivateDocumentEvent2</name> :</label> <expr_stmt><expr pos:line="8669" pos:column="36">public <name pos:line="8669" pos:column="43">IUnknown</name>
    <block pos:line="8670" pos:column="5">{
    <expr pos:line="8671" pos:column="5">public<op:operator pos:line="8671" pos:column="11">:</op:operator>
        virtual <name pos:line="8672" pos:column="17">HRESULT</name> <name pos:line="8672" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8672" pos:column="43">GetDocument</name><argument_list pos:line="8672" pos:column="54">( 
            <comment type="block" pos:line="8673" pos:column="13">/* [out] */</comment> <argument pos:line="8673" pos:column="25">__RPC__deref_out_opt IDebugDocument2 **ppDoc</argument>)</argument_list></macro> <op:operator pos:line="8673" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="8673" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="8675" pos:column="9">virtual <name pos:line="8675" pos:column="17">HRESULT</name> <name pos:line="8675" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8675" pos:column="43">GetDocumentContext</name><argument_list pos:line="8675" pos:column="61">( 
            <comment type="block" pos:line="8676" pos:column="13">/* [out] */</comment> <argument pos:line="8676" pos:column="25">__RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext</argument>)</argument_list></macro> <op:operator pos:line="8676" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="8676" pos:column="87">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8680" pos:column="1">#<cpp:directive pos:line="8680" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8680" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8682" pos:column="5">typedef <type><struct pos:line="8682" pos:column="13">struct <name pos:line="8682" pos:column="20">IDebugActivateDocumentEvent2Vtbl</name>
    <block pos:line="8683" pos:column="5">{<public type="default" pos:line="8683" pos:column="6">
        <function_decl><type><name pos:line="8684" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8686" pos:column="9">HRESULT</name></type> ( <name pos:line="8686" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8686" pos:column="37">*</type:modifier><name pos:line="8686" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8686" pos:column="54">( 
            <param><decl><type><name pos:line="8687" pos:column="13">IDebugActivateDocumentEvent2</name> <type:modifier pos:line="8687" pos:column="42">*</type:modifier></type> <name pos:line="8687" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="8688" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8688" pos:column="24">__RPC__in</name> <name pos:line="8688" pos:column="34">REFIID</name></type> <name pos:line="8688" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8689" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8690" pos:column="13">__RPC__deref_out</name>  <name pos:line="8690" pos:column="31">void</name> <type:modifier pos:line="8690" pos:column="36">*</type:modifier><type:modifier pos:line="8690" pos:column="37">*</type:modifier></type><name pos:line="8690" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8692" pos:column="9">ULONG</name></type> ( <name pos:line="8692" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8692" pos:column="35">*</type:modifier><name pos:line="8692" pos:column="36">AddRef</name> )<parameter_list pos:line="8692" pos:column="44">( 
            <param><decl><type><name pos:line="8693" pos:column="13">IDebugActivateDocumentEvent2</name> <type:modifier pos:line="8693" pos:column="42">*</type:modifier></type> <name pos:line="8693" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8695" pos:column="9">ULONG</name></type> ( <name pos:line="8695" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8695" pos:column="35">*</type:modifier><name pos:line="8695" pos:column="36">Release</name> )<parameter_list pos:line="8695" pos:column="45">( 
            <param><decl><type><name pos:line="8696" pos:column="13">IDebugActivateDocumentEvent2</name> <type:modifier pos:line="8696" pos:column="42">*</type:modifier></type> <name pos:line="8696" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8698" pos:column="9">HRESULT</name></type> ( <name pos:line="8698" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8698" pos:column="37">*</type:modifier><name pos:line="8698" pos:column="38">GetDocument</name> )<parameter_list pos:line="8698" pos:column="51">( 
            <param><decl><type><name pos:line="8699" pos:column="13">IDebugActivateDocumentEvent2</name> <type:modifier pos:line="8699" pos:column="42">*</type:modifier></type> <name pos:line="8699" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="8700" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8700" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8700" pos:column="46">IDebugDocument2</name> <type:modifier pos:line="8700" pos:column="62">*</type:modifier><type:modifier pos:line="8700" pos:column="63">*</type:modifier></type><name pos:line="8700" pos:column="64">ppDoc</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8702" pos:column="9">HRESULT</name></type> ( <name pos:line="8702" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8702" pos:column="37">*</type:modifier><name pos:line="8702" pos:column="38">GetDocumentContext</name> )<parameter_list pos:line="8702" pos:column="58">( 
            <param><decl><type><name pos:line="8703" pos:column="13">IDebugActivateDocumentEvent2</name> <type:modifier pos:line="8703" pos:column="42">*</type:modifier></type> <name pos:line="8703" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="8704" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8704" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8704" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="8704" pos:column="69">*</type:modifier><type:modifier pos:line="8704" pos:column="70">*</type:modifier></type><name pos:line="8704" pos:column="71">ppDocContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8706" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8707" pos:column="7">IDebugActivateDocumentEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8709" pos:column="5">interface</name></type> <name pos:line="8709" pos:column="15">IDebugActivateDocumentEvent2</name>
    <argument_list pos:line="8710" pos:column="5">{
        <argument><expr><name pos:line="8711" pos:column="9">CONST_VTBL</name> struct <name pos:line="8711" pos:column="27">IDebugActivateDocumentEvent2Vtbl</name> <op:operator pos:line="8711" pos:column="60">*</op:operator><name pos:line="8711" pos:column="61">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8716" pos:column="1">#<cpp:directive pos:line="8716" pos:column="2">ifdef</cpp:directive> <name pos:line="8716" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8719" pos:column="1">#<cpp:directive pos:line="8719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8719" pos:column="9">IDebugActivateDocumentEvent2_QueryInterface</name><parameter_list pos:line="8719" pos:column="52">(<param><type><name pos:line="8719" pos:column="53">This</name></type></param>,<param><type><name pos:line="8719" pos:column="58">riid</name></type></param>,<param><type><name pos:line="8719" pos:column="63">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8720" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8722" pos:column="1">#<cpp:directive pos:line="8722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8722" pos:column="9">IDebugActivateDocumentEvent2_AddRef</name><parameter_list pos:line="8722" pos:column="44">(<param><type><name pos:line="8722" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8723" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8725" pos:column="1">#<cpp:directive pos:line="8725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8725" pos:column="9">IDebugActivateDocumentEvent2_Release</name><parameter_list pos:line="8725" pos:column="45">(<param><type><name pos:line="8725" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8726" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8729" pos:column="1">#<cpp:directive pos:line="8729" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8729" pos:column="9">IDebugActivateDocumentEvent2_GetDocument</name><parameter_list pos:line="8729" pos:column="49">(<param><type><name pos:line="8729" pos:column="50">This</name></type></param>,<param><type><name pos:line="8729" pos:column="55">ppDoc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8730" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocument(This,ppDoc) )</cpp:value></cpp:define> 

<cpp:define pos:line="8732" pos:column="1">#<cpp:directive pos:line="8732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8732" pos:column="9">IDebugActivateDocumentEvent2_GetDocumentContext</name><parameter_list pos:line="8732" pos:column="56">(<param><type><name pos:line="8732" pos:column="57">This</name></type></param>,<param><type><name pos:line="8732" pos:column="62">ppDocContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8733" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentContext(This,ppDocContext) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8735" pos:column="1">#<cpp:directive pos:line="8735" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8735" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8738" pos:column="1">#<cpp:directive pos:line="8738" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8738" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8743" pos:column="1">#<cpp:directive pos:line="8743" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8743" pos:column="9">/* __IDebugActivateDocumentEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8746" pos:column="1">#<cpp:directive pos:line="8746" pos:column="2">ifndef</cpp:directive> <name pos:line="8746" pos:column="9">__IDebugInterceptExceptionCompleteEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8747" pos:column="1">#<cpp:directive pos:line="8747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8747" pos:column="9">__IDebugInterceptExceptionCompleteEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8749" pos:column="1">/* interface IDebugInterceptExceptionCompleteEvent2 */</comment>
<comment type="block" pos:line="8750" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8753" pos:column="1">EXTERN_C</name> <specifier pos:line="8753" pos:column="10">const</specifier> <name pos:line="8753" pos:column="16">IID</name></type> <name pos:line="8753" pos:column="20">IID_IDebugInterceptExceptionCompleteEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8755" pos:column="1">#<cpp:directive pos:line="8755" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8755" pos:column="5">defined</name><argument_list pos:line="8755" pos:column="12">(<argument><expr><name pos:line="8755" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8755" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8755" pos:column="29">!</op:operator><call><name pos:line="8755" pos:column="30">defined</name><argument_list pos:line="8755" pos:column="37">(<argument><expr><name pos:line="8755" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8757" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8757" pos:column="19">(<argument pos:line="8757" pos:column="20">"44FCEACA-7F56-4d2c-A637-60052B1B9CBE"</argument>)</argument_list></macro>
    <label><name pos:line="8758" pos:column="5">IDebugInterceptExceptionCompleteEvent2</name> :</label> <expr_stmt><expr pos:line="8758" pos:column="46">public <name pos:line="8758" pos:column="53">IUnknown</name>
    <block pos:line="8759" pos:column="5">{
    <expr pos:line="8760" pos:column="5">public<op:operator pos:line="8760" pos:column="11">:</op:operator>
        virtual <name pos:line="8761" pos:column="17">HRESULT</name> <name pos:line="8761" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8761" pos:column="43">GetInterceptCookie</name><argument_list pos:line="8761" pos:column="61">( 
            <comment type="block" pos:line="8762" pos:column="13">/* [out] */</comment> <argument pos:line="8762" pos:column="25">__RPC__out UINT64 *pqwCookie</argument>)</argument_list></macro> <op:operator pos:line="8762" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="8762" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8766" pos:column="1">#<cpp:directive pos:line="8766" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8766" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8768" pos:column="5">typedef <type><struct pos:line="8768" pos:column="13">struct <name pos:line="8768" pos:column="20">IDebugInterceptExceptionCompleteEvent2Vtbl</name>
    <block pos:line="8769" pos:column="5">{<public type="default" pos:line="8769" pos:column="6">
        <function_decl><type><name pos:line="8770" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8772" pos:column="9">HRESULT</name></type> ( <name pos:line="8772" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8772" pos:column="37">*</type:modifier><name pos:line="8772" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8772" pos:column="54">( 
            <param><decl><type><name pos:line="8773" pos:column="13">IDebugInterceptExceptionCompleteEvent2</name> <type:modifier pos:line="8773" pos:column="52">*</type:modifier></type> <name pos:line="8773" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="8774" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8774" pos:column="24">__RPC__in</name> <name pos:line="8774" pos:column="34">REFIID</name></type> <name pos:line="8774" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8775" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8776" pos:column="13">__RPC__deref_out</name>  <name pos:line="8776" pos:column="31">void</name> <type:modifier pos:line="8776" pos:column="36">*</type:modifier><type:modifier pos:line="8776" pos:column="37">*</type:modifier></type><name pos:line="8776" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8778" pos:column="9">ULONG</name></type> ( <name pos:line="8778" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8778" pos:column="35">*</type:modifier><name pos:line="8778" pos:column="36">AddRef</name> )<parameter_list pos:line="8778" pos:column="44">( 
            <param><decl><type><name pos:line="8779" pos:column="13">IDebugInterceptExceptionCompleteEvent2</name> <type:modifier pos:line="8779" pos:column="52">*</type:modifier></type> <name pos:line="8779" pos:column="54">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8781" pos:column="9">ULONG</name></type> ( <name pos:line="8781" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8781" pos:column="35">*</type:modifier><name pos:line="8781" pos:column="36">Release</name> )<parameter_list pos:line="8781" pos:column="45">( 
            <param><decl><type><name pos:line="8782" pos:column="13">IDebugInterceptExceptionCompleteEvent2</name> <type:modifier pos:line="8782" pos:column="52">*</type:modifier></type> <name pos:line="8782" pos:column="54">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8784" pos:column="9">HRESULT</name></type> ( <name pos:line="8784" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8784" pos:column="37">*</type:modifier><name pos:line="8784" pos:column="38">GetInterceptCookie</name> )<parameter_list pos:line="8784" pos:column="58">( 
            <param><decl><type><name pos:line="8785" pos:column="13">IDebugInterceptExceptionCompleteEvent2</name> <type:modifier pos:line="8785" pos:column="52">*</type:modifier></type> <name pos:line="8785" pos:column="54">This</name></decl></param>,
            <comment type="block" pos:line="8786" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8786" pos:column="25">__RPC__out</name> <name pos:line="8786" pos:column="36">UINT64</name> <type:modifier pos:line="8786" pos:column="43">*</type:modifier></type><name pos:line="8786" pos:column="44">pqwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8788" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8789" pos:column="7">IDebugInterceptExceptionCompleteEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8791" pos:column="5">interface</name></type> <name pos:line="8791" pos:column="15">IDebugInterceptExceptionCompleteEvent2</name>
    <argument_list pos:line="8792" pos:column="5">{
        <argument><expr><name pos:line="8793" pos:column="9">CONST_VTBL</name> struct <name pos:line="8793" pos:column="27">IDebugInterceptExceptionCompleteEvent2Vtbl</name> <op:operator pos:line="8793" pos:column="70">*</op:operator><name pos:line="8793" pos:column="71">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8798" pos:column="1">#<cpp:directive pos:line="8798" pos:column="2">ifdef</cpp:directive> <name pos:line="8798" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8801" pos:column="1">#<cpp:directive pos:line="8801" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8801" pos:column="9">IDebugInterceptExceptionCompleteEvent2_QueryInterface</name><parameter_list pos:line="8801" pos:column="62">(<param><type><name pos:line="8801" pos:column="63">This</name></type></param>,<param><type><name pos:line="8801" pos:column="68">riid</name></type></param>,<param><type><name pos:line="8801" pos:column="73">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8802" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8804" pos:column="1">#<cpp:directive pos:line="8804" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8804" pos:column="9">IDebugInterceptExceptionCompleteEvent2_AddRef</name><parameter_list pos:line="8804" pos:column="54">(<param><type><name pos:line="8804" pos:column="55">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8805" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8807" pos:column="1">#<cpp:directive pos:line="8807" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8807" pos:column="9">IDebugInterceptExceptionCompleteEvent2_Release</name><parameter_list pos:line="8807" pos:column="55">(<param><type><name pos:line="8807" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8808" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8811" pos:column="1">#<cpp:directive pos:line="8811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8811" pos:column="9">IDebugInterceptExceptionCompleteEvent2_GetInterceptCookie</name><parameter_list pos:line="8811" pos:column="66">(<param><type><name pos:line="8811" pos:column="67">This</name></type></param>,<param><type><name pos:line="8811" pos:column="72">pqwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8812" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInterceptCookie(This,pqwCookie) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8814" pos:column="1">#<cpp:directive pos:line="8814" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8814" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8817" pos:column="1">#<cpp:directive pos:line="8817" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8817" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8822" pos:column="1">#<cpp:directive pos:line="8822" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8822" pos:column="9">/* __IDebugInterceptExceptionCompleteEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8825" pos:column="1">#<cpp:directive pos:line="8825" pos:column="2">ifndef</cpp:directive> <name pos:line="8825" pos:column="9">__IDebugAttachCompleteEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8826" pos:column="1">#<cpp:directive pos:line="8826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8826" pos:column="9">__IDebugAttachCompleteEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8828" pos:column="1">/* interface IDebugAttachCompleteEvent2 */</comment>
<comment type="block" pos:line="8829" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="8832" pos:column="1">EXTERN_C</name> <specifier pos:line="8832" pos:column="10">const</specifier> <name pos:line="8832" pos:column="16">IID</name></type> <name pos:line="8832" pos:column="20">IID_IDebugAttachCompleteEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8834" pos:column="1">#<cpp:directive pos:line="8834" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8834" pos:column="5">defined</name><argument_list pos:line="8834" pos:column="12">(<argument><expr><name pos:line="8834" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8834" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8834" pos:column="29">!</op:operator><call><name pos:line="8834" pos:column="30">defined</name><argument_list pos:line="8834" pos:column="37">(<argument><expr><name pos:line="8834" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8836" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8836" pos:column="19">(<argument pos:line="8836" pos:column="20">"fe1fd9ea-6413-4183-a67d-588870014e97"</argument>)</argument_list></macro>
    <label><name pos:line="8837" pos:column="5">IDebugAttachCompleteEvent2</name> :</label> <expr_stmt><expr pos:line="8837" pos:column="34">public <name pos:line="8837" pos:column="41">IUnknown</name>
    <block pos:line="8838" pos:column="5">{
    <expr pos:line="8839" pos:column="5">public<op:operator pos:line="8839" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8842" pos:column="1">#<cpp:directive pos:line="8842" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8842" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8844" pos:column="5">typedef <type><struct pos:line="8844" pos:column="13">struct <name pos:line="8844" pos:column="20">IDebugAttachCompleteEvent2Vtbl</name>
    <block pos:line="8845" pos:column="5">{<public type="default" pos:line="8845" pos:column="6">
        <function_decl><type><name pos:line="8846" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8848" pos:column="9">HRESULT</name></type> ( <name pos:line="8848" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8848" pos:column="37">*</type:modifier><name pos:line="8848" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8848" pos:column="54">( 
            <param><decl><type><name pos:line="8849" pos:column="13">IDebugAttachCompleteEvent2</name> <type:modifier pos:line="8849" pos:column="40">*</type:modifier></type> <name pos:line="8849" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="8850" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8850" pos:column="24">__RPC__in</name> <name pos:line="8850" pos:column="34">REFIID</name></type> <name pos:line="8850" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8851" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8852" pos:column="13">__RPC__deref_out</name>  <name pos:line="8852" pos:column="31">void</name> <type:modifier pos:line="8852" pos:column="36">*</type:modifier><type:modifier pos:line="8852" pos:column="37">*</type:modifier></type><name pos:line="8852" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8854" pos:column="9">ULONG</name></type> ( <name pos:line="8854" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8854" pos:column="35">*</type:modifier><name pos:line="8854" pos:column="36">AddRef</name> )<parameter_list pos:line="8854" pos:column="44">( 
            <param><decl><type><name pos:line="8855" pos:column="13">IDebugAttachCompleteEvent2</name> <type:modifier pos:line="8855" pos:column="40">*</type:modifier></type> <name pos:line="8855" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8857" pos:column="9">ULONG</name></type> ( <name pos:line="8857" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8857" pos:column="35">*</type:modifier><name pos:line="8857" pos:column="36">Release</name> )<parameter_list pos:line="8857" pos:column="45">( 
            <param><decl><type><name pos:line="8858" pos:column="13">IDebugAttachCompleteEvent2</name> <type:modifier pos:line="8858" pos:column="40">*</type:modifier></type> <name pos:line="8858" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8860" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8861" pos:column="7">IDebugAttachCompleteEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8863" pos:column="5">interface</name></type> <name pos:line="8863" pos:column="15">IDebugAttachCompleteEvent2</name>
    <argument_list pos:line="8864" pos:column="5">{
        <argument><expr><name pos:line="8865" pos:column="9">CONST_VTBL</name> struct <name pos:line="8865" pos:column="27">IDebugAttachCompleteEvent2Vtbl</name> <op:operator pos:line="8865" pos:column="58">*</op:operator><name pos:line="8865" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8870" pos:column="1">#<cpp:directive pos:line="8870" pos:column="2">ifdef</cpp:directive> <name pos:line="8870" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8873" pos:column="1">#<cpp:directive pos:line="8873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8873" pos:column="9">IDebugAttachCompleteEvent2_QueryInterface</name><parameter_list pos:line="8873" pos:column="50">(<param><type><name pos:line="8873" pos:column="51">This</name></type></param>,<param><type><name pos:line="8873" pos:column="56">riid</name></type></param>,<param><type><name pos:line="8873" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8874" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8876" pos:column="1">#<cpp:directive pos:line="8876" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8876" pos:column="9">IDebugAttachCompleteEvent2_AddRef</name><parameter_list pos:line="8876" pos:column="42">(<param><type><name pos:line="8876" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8877" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8879" pos:column="1">#<cpp:directive pos:line="8879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8879" pos:column="9">IDebugAttachCompleteEvent2_Release</name><parameter_list pos:line="8879" pos:column="43">(<param><type><name pos:line="8879" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8880" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="8883" pos:column="1">#<cpp:directive pos:line="8883" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8883" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8886" pos:column="1">#<cpp:directive pos:line="8886" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8886" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8891" pos:column="1">#<cpp:directive pos:line="8891" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8891" pos:column="9">/* __IDebugAttachCompleteEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8894" pos:column="1">#<cpp:directive pos:line="8894" pos:column="2">ifndef</cpp:directive> <name pos:line="8894" pos:column="9">__IDebugFuncEvalAbortedEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8895" pos:column="1">#<cpp:directive pos:line="8895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8895" pos:column="9">__IDebugFuncEvalAbortedEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8897" pos:column="1">/* interface IDebugFuncEvalAbortedEvent2 */</comment>
<comment type="block" pos:line="8898" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="8901" pos:column="1">enum <name pos:line="8901" pos:column="6">tagFUNC_EVAL_ABORT_RESULT</name>
    <block pos:line="8902" pos:column="5">{	<decl><name pos:line="8902" pos:column="9">ABORT_SUCCEEDED</name>	<init pos:line="8902" pos:column="25">= <expr><lit:literal type="number" pos:line="8902" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="8902" pos:column="28">,</op:operator>
	<decl><name pos:line="8903" pos:column="9">RUDE_ABORT_SUCCEEDED</name>	<init pos:line="8903" pos:column="33">= <expr><lit:literal type="number" pos:line="8903" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="8903" pos:column="36">,</op:operator>
	<decl><name pos:line="8904" pos:column="9">ABORT_FAILED</name>	<init pos:line="8904" pos:column="25">= <expr><lit:literal type="number" pos:line="8904" pos:column="27">2</lit:literal></expr></init></decl><op:operator pos:line="8904" pos:column="28">,</op:operator>
	<decl><name pos:line="8905" pos:column="9">ABORT_HUNG</name>	<init pos:line="8905" pos:column="25">= <expr><lit:literal type="number" pos:line="8905" pos:column="27">3</lit:literal></expr></init></decl><op:operator pos:line="8905" pos:column="28">,</op:operator>
	<decl><name pos:line="8906" pos:column="9">PROCESS_TERMINATED</name>	<init pos:line="8906" pos:column="33">= <expr><lit:literal type="number" pos:line="8906" pos:column="35">4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="8908" pos:column="1">typedef <type><enum pos:line="8908" pos:column="9">enum <name pos:line="8908" pos:column="14">tagFUNC_EVAL_ABORT_RESULT</name> <name pos:line="8908" pos:column="40">FUNC_EVAL_ABORT_RESULT</name>;</enum></type></typedef>


<decl_stmt><decl><type><name pos:line="8911" pos:column="1">EXTERN_C</name> <specifier pos:line="8911" pos:column="10">const</specifier> <name pos:line="8911" pos:column="16">IID</name></type> <name pos:line="8911" pos:column="20">IID_IDebugFuncEvalAbortedEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="8913" pos:column="1">#<cpp:directive pos:line="8913" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8913" pos:column="5">defined</name><argument_list pos:line="8913" pos:column="12">(<argument><expr><name pos:line="8913" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8913" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8913" pos:column="29">!</op:operator><call><name pos:line="8913" pos:column="30">defined</name><argument_list pos:line="8913" pos:column="37">(<argument><expr><name pos:line="8913" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8915" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8915" pos:column="19">(<argument pos:line="8915" pos:column="20">"3f3be369-0b78-4511-91e5-08f9fc5cae0d"</argument>)</argument_list></macro>
    <label><name pos:line="8916" pos:column="5">IDebugFuncEvalAbortedEvent2</name> :</label> <expr_stmt><expr pos:line="8916" pos:column="35">public <name pos:line="8916" pos:column="42">IUnknown</name>
    <block pos:line="8917" pos:column="5">{
    <expr pos:line="8918" pos:column="5">public<op:operator pos:line="8918" pos:column="11">:</op:operator>
        virtual <name pos:line="8919" pos:column="17">HRESULT</name> <name pos:line="8919" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8919" pos:column="43">GetAbortResult</name><argument_list pos:line="8919" pos:column="57">( 
            <comment type="block" pos:line="8920" pos:column="13">/* [out] */</comment> <argument pos:line="8920" pos:column="25">__RPC__out FUNC_EVAL_ABORT_RESULT *pResult</argument>)</argument_list></macro> <op:operator pos:line="8920" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="8920" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="8922" pos:column="9">virtual <name pos:line="8922" pos:column="17">HRESULT</name> <name pos:line="8922" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="8922" pos:column="43">GetFunctionName</name><argument_list pos:line="8922" pos:column="58">( 
            <comment type="block" pos:line="8923" pos:column="13">/* [out] */</comment> <argument pos:line="8923" pos:column="25">__RPC__deref_out_opt BSTR *pbstrFunctionName</argument>)</argument_list></macro> <op:operator pos:line="8923" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="8923" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8927" pos:column="1">#<cpp:directive pos:line="8927" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8927" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8929" pos:column="5">typedef <type><struct pos:line="8929" pos:column="13">struct <name pos:line="8929" pos:column="20">IDebugFuncEvalAbortedEvent2Vtbl</name>
    <block pos:line="8930" pos:column="5">{<public type="default" pos:line="8930" pos:column="6">
        <function_decl><type><name pos:line="8931" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8933" pos:column="9">HRESULT</name></type> ( <name pos:line="8933" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8933" pos:column="37">*</type:modifier><name pos:line="8933" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8933" pos:column="54">( 
            <param><decl><type><name pos:line="8934" pos:column="13">IDebugFuncEvalAbortedEvent2</name> <type:modifier pos:line="8934" pos:column="41">*</type:modifier></type> <name pos:line="8934" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8935" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8935" pos:column="24">__RPC__in</name> <name pos:line="8935" pos:column="34">REFIID</name></type> <name pos:line="8935" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8936" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8937" pos:column="13">__RPC__deref_out</name>  <name pos:line="8937" pos:column="31">void</name> <type:modifier pos:line="8937" pos:column="36">*</type:modifier><type:modifier pos:line="8937" pos:column="37">*</type:modifier></type><name pos:line="8937" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8939" pos:column="9">ULONG</name></type> ( <name pos:line="8939" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8939" pos:column="35">*</type:modifier><name pos:line="8939" pos:column="36">AddRef</name> )<parameter_list pos:line="8939" pos:column="44">( 
            <param><decl><type><name pos:line="8940" pos:column="13">IDebugFuncEvalAbortedEvent2</name> <type:modifier pos:line="8940" pos:column="41">*</type:modifier></type> <name pos:line="8940" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8942" pos:column="9">ULONG</name></type> ( <name pos:line="8942" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8942" pos:column="35">*</type:modifier><name pos:line="8942" pos:column="36">Release</name> )<parameter_list pos:line="8942" pos:column="45">( 
            <param><decl><type><name pos:line="8943" pos:column="13">IDebugFuncEvalAbortedEvent2</name> <type:modifier pos:line="8943" pos:column="41">*</type:modifier></type> <name pos:line="8943" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8945" pos:column="9">HRESULT</name></type> ( <name pos:line="8945" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8945" pos:column="37">*</type:modifier><name pos:line="8945" pos:column="38">GetAbortResult</name> )<parameter_list pos:line="8945" pos:column="54">( 
            <param><decl><type><name pos:line="8946" pos:column="13">IDebugFuncEvalAbortedEvent2</name> <type:modifier pos:line="8946" pos:column="41">*</type:modifier></type> <name pos:line="8946" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8947" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8947" pos:column="25">__RPC__out</name> <name pos:line="8947" pos:column="36">FUNC_EVAL_ABORT_RESULT</name> <type:modifier pos:line="8947" pos:column="59">*</type:modifier></type><name pos:line="8947" pos:column="60">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8949" pos:column="9">HRESULT</name></type> ( <name pos:line="8949" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8949" pos:column="37">*</type:modifier><name pos:line="8949" pos:column="38">GetFunctionName</name> )<parameter_list pos:line="8949" pos:column="55">( 
            <param><decl><type><name pos:line="8950" pos:column="13">IDebugFuncEvalAbortedEvent2</name> <type:modifier pos:line="8950" pos:column="41">*</type:modifier></type> <name pos:line="8950" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="8951" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8951" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8951" pos:column="46">BSTR</name> <type:modifier pos:line="8951" pos:column="51">*</type:modifier></type><name pos:line="8951" pos:column="52">pbstrFunctionName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8953" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8954" pos:column="7">IDebugFuncEvalAbortedEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8956" pos:column="5">interface</name></type> <name pos:line="8956" pos:column="15">IDebugFuncEvalAbortedEvent2</name>
    <argument_list pos:line="8957" pos:column="5">{
        <argument><expr><name pos:line="8958" pos:column="9">CONST_VTBL</name> struct <name pos:line="8958" pos:column="27">IDebugFuncEvalAbortedEvent2Vtbl</name> <op:operator pos:line="8958" pos:column="59">*</op:operator><name pos:line="8958" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8963" pos:column="1">#<cpp:directive pos:line="8963" pos:column="2">ifdef</cpp:directive> <name pos:line="8963" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8966" pos:column="1">#<cpp:directive pos:line="8966" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8966" pos:column="9">IDebugFuncEvalAbortedEvent2_QueryInterface</name><parameter_list pos:line="8966" pos:column="51">(<param><type><name pos:line="8966" pos:column="52">This</name></type></param>,<param><type><name pos:line="8966" pos:column="57">riid</name></type></param>,<param><type><name pos:line="8966" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8967" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8969" pos:column="1">#<cpp:directive pos:line="8969" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8969" pos:column="9">IDebugFuncEvalAbortedEvent2_AddRef</name><parameter_list pos:line="8969" pos:column="43">(<param><type><name pos:line="8969" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8970" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8972" pos:column="1">#<cpp:directive pos:line="8972" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8972" pos:column="9">IDebugFuncEvalAbortedEvent2_Release</name><parameter_list pos:line="8972" pos:column="44">(<param><type><name pos:line="8972" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8973" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8976" pos:column="1">#<cpp:directive pos:line="8976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8976" pos:column="9">IDebugFuncEvalAbortedEvent2_GetAbortResult</name><parameter_list pos:line="8976" pos:column="51">(<param><type><name pos:line="8976" pos:column="52">This</name></type></param>,<param><type><name pos:line="8976" pos:column="57">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8977" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAbortResult(This,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="8979" pos:column="1">#<cpp:directive pos:line="8979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8979" pos:column="9">IDebugFuncEvalAbortedEvent2_GetFunctionName</name><parameter_list pos:line="8979" pos:column="52">(<param><type><name pos:line="8979" pos:column="53">This</name></type></param>,<param><type><name pos:line="8979" pos:column="58">pbstrFunctionName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8980" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFunctionName(This,pbstrFunctionName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8982" pos:column="1">#<cpp:directive pos:line="8982" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8982" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8985" pos:column="1">#<cpp:directive pos:line="8985" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8985" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8990" pos:column="1">#<cpp:directive pos:line="8990" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8990" pos:column="9">/* __IDebugFuncEvalAbortedEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8993" pos:column="1">#<cpp:directive pos:line="8993" pos:column="2">ifndef</cpp:directive> <name pos:line="8993" pos:column="9">__IDebugStopCompleteEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8994" pos:column="1">#<cpp:directive pos:line="8994" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8994" pos:column="9">__IDebugStopCompleteEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8996" pos:column="1">/* interface IDebugStopCompleteEvent2 */</comment>
<comment type="block" pos:line="8997" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9000" pos:column="1">EXTERN_C</name> <specifier pos:line="9000" pos:column="10">const</specifier> <name pos:line="9000" pos:column="16">IID</name></type> <name pos:line="9000" pos:column="20">IID_IDebugStopCompleteEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="9002" pos:column="1">#<cpp:directive pos:line="9002" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9002" pos:column="5">defined</name><argument_list pos:line="9002" pos:column="12">(<argument><expr><name pos:line="9002" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9002" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9002" pos:column="29">!</op:operator><call><name pos:line="9002" pos:column="30">defined</name><argument_list pos:line="9002" pos:column="37">(<argument><expr><name pos:line="9002" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9004" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9004" pos:column="19">(<argument pos:line="9004" pos:column="20">"3dca9dcd-fb09-4af1-a926-45f293d48b2d"</argument>)</argument_list></macro>
    <label><name pos:line="9005" pos:column="5">IDebugStopCompleteEvent2</name> :</label> <expr_stmt><expr pos:line="9005" pos:column="32">public <name pos:line="9005" pos:column="39">IUnknown</name>
    <block pos:line="9006" pos:column="5">{
    <expr pos:line="9007" pos:column="5">public<op:operator pos:line="9007" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9010" pos:column="1">#<cpp:directive pos:line="9010" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9010" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9012" pos:column="5">typedef <type><struct pos:line="9012" pos:column="13">struct <name pos:line="9012" pos:column="20">IDebugStopCompleteEvent2Vtbl</name>
    <block pos:line="9013" pos:column="5">{<public type="default" pos:line="9013" pos:column="6">
        <function_decl><type><name pos:line="9014" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9016" pos:column="9">HRESULT</name></type> ( <name pos:line="9016" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9016" pos:column="37">*</type:modifier><name pos:line="9016" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9016" pos:column="54">( 
            <param><decl><type><name pos:line="9017" pos:column="13">IDebugStopCompleteEvent2</name> <type:modifier pos:line="9017" pos:column="38">*</type:modifier></type> <name pos:line="9017" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="9018" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9018" pos:column="24">__RPC__in</name> <name pos:line="9018" pos:column="34">REFIID</name></type> <name pos:line="9018" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9019" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9020" pos:column="13">__RPC__deref_out</name>  <name pos:line="9020" pos:column="31">void</name> <type:modifier pos:line="9020" pos:column="36">*</type:modifier><type:modifier pos:line="9020" pos:column="37">*</type:modifier></type><name pos:line="9020" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9022" pos:column="9">ULONG</name></type> ( <name pos:line="9022" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9022" pos:column="35">*</type:modifier><name pos:line="9022" pos:column="36">AddRef</name> )<parameter_list pos:line="9022" pos:column="44">( 
            <param><decl><type><name pos:line="9023" pos:column="13">IDebugStopCompleteEvent2</name> <type:modifier pos:line="9023" pos:column="38">*</type:modifier></type> <name pos:line="9023" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9025" pos:column="9">ULONG</name></type> ( <name pos:line="9025" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9025" pos:column="35">*</type:modifier><name pos:line="9025" pos:column="36">Release</name> )<parameter_list pos:line="9025" pos:column="45">( 
            <param><decl><type><name pos:line="9026" pos:column="13">IDebugStopCompleteEvent2</name> <type:modifier pos:line="9026" pos:column="38">*</type:modifier></type> <name pos:line="9026" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9028" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9029" pos:column="7">IDebugStopCompleteEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9031" pos:column="5">interface</name></type> <name pos:line="9031" pos:column="15">IDebugStopCompleteEvent2</name>
    <argument_list pos:line="9032" pos:column="5">{
        <argument><expr><name pos:line="9033" pos:column="9">CONST_VTBL</name> struct <name pos:line="9033" pos:column="27">IDebugStopCompleteEvent2Vtbl</name> <op:operator pos:line="9033" pos:column="56">*</op:operator><name pos:line="9033" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9038" pos:column="1">#<cpp:directive pos:line="9038" pos:column="2">ifdef</cpp:directive> <name pos:line="9038" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9041" pos:column="1">#<cpp:directive pos:line="9041" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9041" pos:column="9">IDebugStopCompleteEvent2_QueryInterface</name><parameter_list pos:line="9041" pos:column="48">(<param><type><name pos:line="9041" pos:column="49">This</name></type></param>,<param><type><name pos:line="9041" pos:column="54">riid</name></type></param>,<param><type><name pos:line="9041" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9042" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9044" pos:column="1">#<cpp:directive pos:line="9044" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9044" pos:column="9">IDebugStopCompleteEvent2_AddRef</name><parameter_list pos:line="9044" pos:column="40">(<param><type><name pos:line="9044" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9045" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9047" pos:column="1">#<cpp:directive pos:line="9047" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9047" pos:column="9">IDebugStopCompleteEvent2_Release</name><parameter_list pos:line="9047" pos:column="41">(<param><type><name pos:line="9047" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9048" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="9051" pos:column="1">#<cpp:directive pos:line="9051" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9051" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9054" pos:column="1">#<cpp:directive pos:line="9054" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9054" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9059" pos:column="1">#<cpp:directive pos:line="9059" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9059" pos:column="9">/* __IDebugStopCompleteEvent2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="9062" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0063 */</comment>
<comment type="block" pos:line="9063" pos:column="1">/* [local] */</comment> 


<enum pos:line="9066" pos:column="1">enum <name pos:line="9066" pos:column="6">tagEncUnavailableReason</name>
    <block pos:line="9067" pos:column="5">{	<decl><name pos:line="9067" pos:column="9">ENCUN_NONE</name>	<init pos:line="9067" pos:column="25">= <expr><lit:literal type="number" pos:line="9067" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="9067" pos:column="28">,</op:operator>
	<decl><name pos:line="9068" pos:column="9">ENCUN_INTEROP</name>	<init pos:line="9068" pos:column="25">= <expr><op:operator pos:line="9068" pos:column="27">(</op:operator> <name pos:line="9068" pos:column="29">ENCUN_NONE</name> <op:operator pos:line="9068" pos:column="40">+</op:operator> <lit:literal type="number" pos:line="9068" pos:column="42">1</lit:literal> <op:operator pos:line="9068" pos:column="44">)</op:operator></expr></init></decl> <op:operator pos:line="9068" pos:column="46">,</op:operator>
	<decl><name pos:line="9069" pos:column="9">ENCUN_SQLCLR</name>	<init pos:line="9069" pos:column="25">= <expr><op:operator pos:line="9069" pos:column="27">(</op:operator> <name pos:line="9069" pos:column="29">ENCUN_INTEROP</name> <op:operator pos:line="9069" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="9069" pos:column="45">1</lit:literal> <op:operator pos:line="9069" pos:column="47">)</op:operator></expr></init></decl> <op:operator pos:line="9069" pos:column="49">,</op:operator>
	<decl><name pos:line="9070" pos:column="9">ENCUN_MINIDUMP</name>	<init pos:line="9070" pos:column="25">= <expr><op:operator pos:line="9070" pos:column="27">(</op:operator> <name pos:line="9070" pos:column="29">ENCUN_SQLCLR</name> <op:operator pos:line="9070" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="9070" pos:column="44">1</lit:literal> <op:operator pos:line="9070" pos:column="46">)</op:operator></expr></init></decl> <op:operator pos:line="9070" pos:column="48">,</op:operator>
	<decl><name pos:line="9071" pos:column="9">ENCUN_EMBEDDED</name>	<init pos:line="9071" pos:column="25">= <expr><op:operator pos:line="9071" pos:column="27">(</op:operator> <name pos:line="9071" pos:column="29">ENCUN_MINIDUMP</name> <op:operator pos:line="9071" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="9071" pos:column="46">1</lit:literal> <op:operator pos:line="9071" pos:column="48">)</op:operator></expr></init></decl> <op:operator pos:line="9071" pos:column="50">,</op:operator>
	<decl><name pos:line="9072" pos:column="9">ENCUN_ATTACH</name>	<init pos:line="9072" pos:column="25">= <expr><op:operator pos:line="9072" pos:column="27">(</op:operator> <name pos:line="9072" pos:column="29">ENCUN_EMBEDDED</name> <op:operator pos:line="9072" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="9072" pos:column="46">1</lit:literal> <op:operator pos:line="9072" pos:column="48">)</op:operator></expr></init></decl> <op:operator pos:line="9072" pos:column="50">,</op:operator>
	<decl><name pos:line="9073" pos:column="9">ENCUN_WIN64</name>	<init pos:line="9073" pos:column="25">= <expr><op:operator pos:line="9073" pos:column="27">(</op:operator> <name pos:line="9073" pos:column="29">ENCUN_ATTACH</name> <op:operator pos:line="9073" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="9073" pos:column="44">1</lit:literal> <op:operator pos:line="9073" pos:column="46">)</op:operator></expr></init></decl> <op:operator pos:line="9073" pos:column="48">,</op:operator>
	<decl><name pos:line="9074" pos:column="9">ENCUN_STOPONEMODE</name>	<init pos:line="9074" pos:column="33">= <expr><op:operator pos:line="9074" pos:column="35">(</op:operator> <name pos:line="9074" pos:column="37">ENCUN_WIN64</name> <op:operator pos:line="9074" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="9074" pos:column="51">1</lit:literal> <op:operator pos:line="9074" pos:column="53">)</op:operator></expr></init></decl> <op:operator pos:line="9074" pos:column="55">,</op:operator>
	<decl><name pos:line="9075" pos:column="9">ENCUN_MODULENOTLOADED</name>	<init pos:line="9075" pos:column="33">= <expr><op:operator pos:line="9075" pos:column="35">(</op:operator> <name pos:line="9075" pos:column="37">ENCUN_STOPONEMODE</name> <op:operator pos:line="9075" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="9075" pos:column="57">1</lit:literal> <op:operator pos:line="9075" pos:column="59">)</op:operator></expr></init></decl> <op:operator pos:line="9075" pos:column="61">,</op:operator>
	<decl><name pos:line="9076" pos:column="9">ENCUN_MODULERELOADED</name>	<init pos:line="9076" pos:column="33">= <expr><op:operator pos:line="9076" pos:column="35">(</op:operator> <name pos:line="9076" pos:column="37">ENCUN_MODULENOTLOADED</name> <op:operator pos:line="9076" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="9076" pos:column="61">1</lit:literal> <op:operator pos:line="9076" pos:column="63">)</op:operator></expr></init></decl> <op:operator pos:line="9076" pos:column="65">,</op:operator>
	<decl><name pos:line="9077" pos:column="9">ENCUN_INRUNMODE</name>	<init pos:line="9077" pos:column="25">= <expr><op:operator pos:line="9077" pos:column="27">(</op:operator> <name pos:line="9077" pos:column="29">ENCUN_MODULERELOADED</name> <op:operator pos:line="9077" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="9077" pos:column="52">1</lit:literal> <op:operator pos:line="9077" pos:column="54">)</op:operator></expr></init></decl> <op:operator pos:line="9077" pos:column="56">,</op:operator>
	<decl><name pos:line="9078" pos:column="9">ENCUN_NOTBUILT</name>	<init pos:line="9078" pos:column="25">= <expr><op:operator pos:line="9078" pos:column="27">(</op:operator> <name pos:line="9078" pos:column="29">ENCUN_INRUNMODE</name> <op:operator pos:line="9078" pos:column="45">+</op:operator> <lit:literal type="number" pos:line="9078" pos:column="47">1</lit:literal> <op:operator pos:line="9078" pos:column="49">)</op:operator></expr></init></decl> <op:operator pos:line="9078" pos:column="51">,</op:operator>
	<decl><name pos:line="9079" pos:column="9">ENCUN_REMOTE</name>	<init pos:line="9079" pos:column="25">= <expr><op:operator pos:line="9079" pos:column="27">(</op:operator> <name pos:line="9079" pos:column="29">ENCUN_NOTBUILT</name> <op:operator pos:line="9079" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="9079" pos:column="46">1</lit:literal> <op:operator pos:line="9079" pos:column="48">)</op:operator></expr></init></decl> <op:operator pos:line="9079" pos:column="50">,</op:operator>
	<decl><name pos:line="9080" pos:column="9">ENCUN_SILVERLIGHT</name>	<init pos:line="9080" pos:column="33">= <expr><op:operator pos:line="9080" pos:column="35">(</op:operator> <name pos:line="9080" pos:column="37">ENCUN_REMOTE</name> <op:operator pos:line="9080" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="9080" pos:column="52">1</lit:literal> <op:operator pos:line="9080" pos:column="54">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="9082" pos:column="1">typedef <type><enum pos:line="9082" pos:column="9">enum <name pos:line="9082" pos:column="14">tagEncUnavailableReason</name> <name pos:line="9082" pos:column="38">EncUnavailableReason</name>;</enum></type></typedef>



<decl_stmt><decl><type><specifier pos:line="9086" pos:column="1">extern</specifier> <name pos:line="9086" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="9086" pos:column="22">__MIDL_itf_msdbg_0000_0063_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="9087" pos:column="1">extern</specifier> <name pos:line="9087" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="9087" pos:column="22">__MIDL_itf_msdbg_0000_0063_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="9089" pos:column="1">#<cpp:directive pos:line="9089" pos:column="2">ifndef</cpp:directive> <name pos:line="9089" pos:column="9">__IDebugEncNotify_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9090" pos:column="1">#<cpp:directive pos:line="9090" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9090" pos:column="9">__IDebugEncNotify_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9092" pos:column="1">/* interface IDebugEncNotify */</comment>
<comment type="block" pos:line="9093" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9096" pos:column="1">EXTERN_C</name> <specifier pos:line="9096" pos:column="10">const</specifier> <name pos:line="9096" pos:column="16">IID</name></type> <name pos:line="9096" pos:column="20">IID_IDebugEncNotify</name></decl>;</decl_stmt>

<cpp:if pos:line="9098" pos:column="1">#<cpp:directive pos:line="9098" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9098" pos:column="5">defined</name><argument_list pos:line="9098" pos:column="12">(<argument><expr><name pos:line="9098" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9098" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9098" pos:column="29">!</op:operator><call><name pos:line="9098" pos:column="30">defined</name><argument_list pos:line="9098" pos:column="37">(<argument><expr><name pos:line="9098" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9100" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9100" pos:column="19">(<argument pos:line="9100" pos:column="20">"347C45E1-5C42-4e0e-9E15-DEFF9CFC7841"</argument>)</argument_list></macro>
    <label><name pos:line="9101" pos:column="5">IDebugEncNotify</name> :</label> <expr_stmt><expr pos:line="9101" pos:column="23">public <name pos:line="9101" pos:column="30">IUnknown</name>
    <block pos:line="9102" pos:column="5">{
    <expr pos:line="9103" pos:column="5">public<op:operator pos:line="9103" pos:column="11">:</op:operator>
        virtual <name pos:line="9104" pos:column="17">HRESULT</name> <name pos:line="9104" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9104" pos:column="43">NotifyEncIsUnavailable</name><argument_list pos:line="9104" pos:column="65">( 
            <comment type="block" pos:line="9105" pos:column="13">/* [in] */</comment> <argument pos:line="9105" pos:column="24">EncUnavailableReason reason</argument>,
            <comment type="block" pos:line="9106" pos:column="13">/* [in] */</comment> <argument pos:line="9106" pos:column="24">BOOL fEditWasApplied</argument>)</argument_list></macro> <op:operator pos:line="9106" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="9106" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="9108" pos:column="9">virtual <name pos:line="9108" pos:column="17">HRESULT</name> <name pos:line="9108" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9108" pos:column="43">NotifyEncUpdateCurrentStatement</name><argument_list pos:line="9108" pos:column="74">( <argument><expr><name pos:line="9108" pos:column="76">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9108" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="9108" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="9110" pos:column="9">virtual <name pos:line="9110" pos:column="17">HRESULT</name> <name pos:line="9110" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9110" pos:column="43">NotifyEncEditAttemptedAtInvalidStopState</name><argument_list pos:line="9110" pos:column="83">( <argument><expr><name pos:line="9110" pos:column="85">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9110" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="9110" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="9112" pos:column="9">virtual <name pos:line="9112" pos:column="17">HRESULT</name> <name pos:line="9112" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9112" pos:column="43">NotifyEncEditDisallowedByProject</name><argument_list pos:line="9112" pos:column="75">( 
            <comment type="block" pos:line="9113" pos:column="13">/* [in] */</comment> <argument pos:line="9113" pos:column="24">__RPC__in_opt IUnknown *pProject</argument>)</argument_list></macro> <op:operator pos:line="9113" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="9113" pos:column="60">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9117" pos:column="1">#<cpp:directive pos:line="9117" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9117" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9119" pos:column="5">typedef <type><struct pos:line="9119" pos:column="13">struct <name pos:line="9119" pos:column="20">IDebugEncNotifyVtbl</name>
    <block pos:line="9120" pos:column="5">{<public type="default" pos:line="9120" pos:column="6">
        <function_decl><type><name pos:line="9121" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9123" pos:column="9">HRESULT</name></type> ( <name pos:line="9123" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9123" pos:column="37">*</type:modifier><name pos:line="9123" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9123" pos:column="54">( 
            <param><decl><type><name pos:line="9124" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9124" pos:column="29">*</type:modifier></type> <name pos:line="9124" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="9125" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9125" pos:column="24">__RPC__in</name> <name pos:line="9125" pos:column="34">REFIID</name></type> <name pos:line="9125" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9126" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9127" pos:column="13">__RPC__deref_out</name>  <name pos:line="9127" pos:column="31">void</name> <type:modifier pos:line="9127" pos:column="36">*</type:modifier><type:modifier pos:line="9127" pos:column="37">*</type:modifier></type><name pos:line="9127" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9129" pos:column="9">ULONG</name></type> ( <name pos:line="9129" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9129" pos:column="35">*</type:modifier><name pos:line="9129" pos:column="36">AddRef</name> )<parameter_list pos:line="9129" pos:column="44">( 
            <param><decl><type><name pos:line="9130" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9130" pos:column="29">*</type:modifier></type> <name pos:line="9130" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9132" pos:column="9">ULONG</name></type> ( <name pos:line="9132" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9132" pos:column="35">*</type:modifier><name pos:line="9132" pos:column="36">Release</name> )<parameter_list pos:line="9132" pos:column="45">( 
            <param><decl><type><name pos:line="9133" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9133" pos:column="29">*</type:modifier></type> <name pos:line="9133" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9135" pos:column="9">HRESULT</name></type> ( <name pos:line="9135" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9135" pos:column="37">*</type:modifier><name pos:line="9135" pos:column="38">NotifyEncIsUnavailable</name> )<parameter_list pos:line="9135" pos:column="62">( 
            <param><decl><type><name pos:line="9136" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9136" pos:column="29">*</type:modifier></type> <name pos:line="9136" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="9137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9137" pos:column="24">EncUnavailableReason</name></type> <name pos:line="9137" pos:column="45">reason</name></decl></param>,
            <comment type="block" pos:line="9138" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9138" pos:column="24">BOOL</name></type> <name pos:line="9138" pos:column="29">fEditWasApplied</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9140" pos:column="9">HRESULT</name></type> ( <name pos:line="9140" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9140" pos:column="37">*</type:modifier><name pos:line="9140" pos:column="38">NotifyEncUpdateCurrentStatement</name> )<parameter_list pos:line="9140" pos:column="71">( 
            <param><decl><type><name pos:line="9141" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9141" pos:column="29">*</type:modifier></type> <name pos:line="9141" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9143" pos:column="9">HRESULT</name></type> ( <name pos:line="9143" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9143" pos:column="37">*</type:modifier><name pos:line="9143" pos:column="38">NotifyEncEditAttemptedAtInvalidStopState</name> )<parameter_list pos:line="9143" pos:column="80">( 
            <param><decl><type><name pos:line="9144" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9144" pos:column="29">*</type:modifier></type> <name pos:line="9144" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9146" pos:column="9">HRESULT</name></type> ( <name pos:line="9146" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9146" pos:column="37">*</type:modifier><name pos:line="9146" pos:column="38">NotifyEncEditDisallowedByProject</name> )<parameter_list pos:line="9146" pos:column="72">( 
            <param><decl><type><name pos:line="9147" pos:column="13">IDebugEncNotify</name> <type:modifier pos:line="9147" pos:column="29">*</type:modifier></type> <name pos:line="9147" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="9148" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9148" pos:column="24">__RPC__in_opt</name> <name pos:line="9148" pos:column="38">IUnknown</name> <type:modifier pos:line="9148" pos:column="47">*</type:modifier></type><name pos:line="9148" pos:column="48">pProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9150" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9151" pos:column="7">IDebugEncNotifyVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9153" pos:column="5">interface</name></type> <name pos:line="9153" pos:column="15">IDebugEncNotify</name>
    <argument_list pos:line="9154" pos:column="5">{
        <argument><expr><name pos:line="9155" pos:column="9">CONST_VTBL</name> struct <name pos:line="9155" pos:column="27">IDebugEncNotifyVtbl</name> <op:operator pos:line="9155" pos:column="47">*</op:operator><name pos:line="9155" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9160" pos:column="1">#<cpp:directive pos:line="9160" pos:column="2">ifdef</cpp:directive> <name pos:line="9160" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9163" pos:column="1">#<cpp:directive pos:line="9163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9163" pos:column="9">IDebugEncNotify_QueryInterface</name><parameter_list pos:line="9163" pos:column="39">(<param><type><name pos:line="9163" pos:column="40">This</name></type></param>,<param><type><name pos:line="9163" pos:column="45">riid</name></type></param>,<param><type><name pos:line="9163" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9164" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9166" pos:column="1">#<cpp:directive pos:line="9166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9166" pos:column="9">IDebugEncNotify_AddRef</name><parameter_list pos:line="9166" pos:column="31">(<param><type><name pos:line="9166" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9167" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9169" pos:column="1">#<cpp:directive pos:line="9169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9169" pos:column="9">IDebugEncNotify_Release</name><parameter_list pos:line="9169" pos:column="32">(<param><type><name pos:line="9169" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9170" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9173" pos:column="1">#<cpp:directive pos:line="9173" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9173" pos:column="9">IDebugEncNotify_NotifyEncIsUnavailable</name><parameter_list pos:line="9173" pos:column="47">(<param><type><name pos:line="9173" pos:column="48">This</name></type></param>,<param><type><name pos:line="9173" pos:column="53">reason</name></type></param>,<param><type><name pos:line="9173" pos:column="60">fEditWasApplied</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9174" pos:column="5">( (This)-&gt;lpVtbl -&gt; NotifyEncIsUnavailable(This,reason,fEditWasApplied) )</cpp:value></cpp:define> 

<cpp:define pos:line="9176" pos:column="1">#<cpp:directive pos:line="9176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9176" pos:column="9">IDebugEncNotify_NotifyEncUpdateCurrentStatement</name><parameter_list pos:line="9176" pos:column="56">(<param><type><name pos:line="9176" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9177" pos:column="5">( (This)-&gt;lpVtbl -&gt; NotifyEncUpdateCurrentStatement(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9179" pos:column="1">#<cpp:directive pos:line="9179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9179" pos:column="9">IDebugEncNotify_NotifyEncEditAttemptedAtInvalidStopState</name><parameter_list pos:line="9179" pos:column="65">(<param><type><name pos:line="9179" pos:column="66">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9180" pos:column="5">( (This)-&gt;lpVtbl -&gt; NotifyEncEditAttemptedAtInvalidStopState(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9182" pos:column="1">#<cpp:directive pos:line="9182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9182" pos:column="9">IDebugEncNotify_NotifyEncEditDisallowedByProject</name><parameter_list pos:line="9182" pos:column="57">(<param><type><name pos:line="9182" pos:column="58">This</name></type></param>,<param><type><name pos:line="9182" pos:column="63">pProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9183" pos:column="5">( (This)-&gt;lpVtbl -&gt; NotifyEncEditDisallowedByProject(This,pProject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9185" pos:column="1">#<cpp:directive pos:line="9185" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9185" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9188" pos:column="1">#<cpp:directive pos:line="9188" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9188" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9193" pos:column="1">#<cpp:directive pos:line="9193" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9193" pos:column="9">/* __IDebugEncNotify_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9196" pos:column="1">#<cpp:directive pos:line="9196" pos:column="2">ifndef</cpp:directive> <name pos:line="9196" pos:column="9">__IDebugSessionEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9197" pos:column="1">#<cpp:directive pos:line="9197" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9197" pos:column="9">__IDebugSessionEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9199" pos:column="1">/* interface IDebugSessionEvent2 */</comment>
<comment type="block" pos:line="9200" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9203" pos:column="1">EXTERN_C</name> <specifier pos:line="9203" pos:column="10">const</specifier> <name pos:line="9203" pos:column="16">IID</name></type> <name pos:line="9203" pos:column="20">IID_IDebugSessionEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="9205" pos:column="1">#<cpp:directive pos:line="9205" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9205" pos:column="5">defined</name><argument_list pos:line="9205" pos:column="12">(<argument><expr><name pos:line="9205" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9205" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9205" pos:column="29">!</op:operator><call><name pos:line="9205" pos:column="30">defined</name><argument_list pos:line="9205" pos:column="37">(<argument><expr><name pos:line="9205" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9207" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9207" pos:column="19">(<argument pos:line="9207" pos:column="20">"fd1a378c-f117-4f43-917c-dadca1308606"</argument>)</argument_list></macro>
    <label><name pos:line="9208" pos:column="5">IDebugSessionEvent2</name> :</label> <expr_stmt><expr pos:line="9208" pos:column="27">public <name pos:line="9208" pos:column="34">IUnknown</name>
    <block pos:line="9209" pos:column="5">{
    <expr pos:line="9210" pos:column="5">public<op:operator pos:line="9210" pos:column="11">:</op:operator>
        virtual <name pos:line="9211" pos:column="17">HRESULT</name> <name pos:line="9211" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9211" pos:column="43">GetSession</name><argument_list pos:line="9211" pos:column="53">( 
            <comment type="block" pos:line="9212" pos:column="13">/* [out] */</comment> <argument pos:line="9212" pos:column="25">__RPC__deref_out_opt IDebugSession2 **ppSession</argument>)</argument_list></macro> <op:operator pos:line="9212" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="9212" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9216" pos:column="1">#<cpp:directive pos:line="9216" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9216" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9218" pos:column="5">typedef <type><struct pos:line="9218" pos:column="13">struct <name pos:line="9218" pos:column="20">IDebugSessionEvent2Vtbl</name>
    <block pos:line="9219" pos:column="5">{<public type="default" pos:line="9219" pos:column="6">
        <function_decl><type><name pos:line="9220" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9222" pos:column="9">HRESULT</name></type> ( <name pos:line="9222" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9222" pos:column="37">*</type:modifier><name pos:line="9222" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9222" pos:column="54">( 
            <param><decl><type><name pos:line="9223" pos:column="13">IDebugSessionEvent2</name> <type:modifier pos:line="9223" pos:column="33">*</type:modifier></type> <name pos:line="9223" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="9224" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9224" pos:column="24">__RPC__in</name> <name pos:line="9224" pos:column="34">REFIID</name></type> <name pos:line="9224" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9225" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9226" pos:column="13">__RPC__deref_out</name>  <name pos:line="9226" pos:column="31">void</name> <type:modifier pos:line="9226" pos:column="36">*</type:modifier><type:modifier pos:line="9226" pos:column="37">*</type:modifier></type><name pos:line="9226" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9228" pos:column="9">ULONG</name></type> ( <name pos:line="9228" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9228" pos:column="35">*</type:modifier><name pos:line="9228" pos:column="36">AddRef</name> )<parameter_list pos:line="9228" pos:column="44">( 
            <param><decl><type><name pos:line="9229" pos:column="13">IDebugSessionEvent2</name> <type:modifier pos:line="9229" pos:column="33">*</type:modifier></type> <name pos:line="9229" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9231" pos:column="9">ULONG</name></type> ( <name pos:line="9231" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9231" pos:column="35">*</type:modifier><name pos:line="9231" pos:column="36">Release</name> )<parameter_list pos:line="9231" pos:column="45">( 
            <param><decl><type><name pos:line="9232" pos:column="13">IDebugSessionEvent2</name> <type:modifier pos:line="9232" pos:column="33">*</type:modifier></type> <name pos:line="9232" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9234" pos:column="9">HRESULT</name></type> ( <name pos:line="9234" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9234" pos:column="37">*</type:modifier><name pos:line="9234" pos:column="38">GetSession</name> )<parameter_list pos:line="9234" pos:column="50">( 
            <param><decl><type><name pos:line="9235" pos:column="13">IDebugSessionEvent2</name> <type:modifier pos:line="9235" pos:column="33">*</type:modifier></type> <name pos:line="9235" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="9236" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9236" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9236" pos:column="46">IDebugSession2</name> <type:modifier pos:line="9236" pos:column="61">*</type:modifier><type:modifier pos:line="9236" pos:column="62">*</type:modifier></type><name pos:line="9236" pos:column="63">ppSession</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9238" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9239" pos:column="7">IDebugSessionEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9241" pos:column="5">interface</name></type> <name pos:line="9241" pos:column="15">IDebugSessionEvent2</name>
    <argument_list pos:line="9242" pos:column="5">{
        <argument><expr><name pos:line="9243" pos:column="9">CONST_VTBL</name> struct <name pos:line="9243" pos:column="27">IDebugSessionEvent2Vtbl</name> <op:operator pos:line="9243" pos:column="51">*</op:operator><name pos:line="9243" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9248" pos:column="1">#<cpp:directive pos:line="9248" pos:column="2">ifdef</cpp:directive> <name pos:line="9248" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9251" pos:column="1">#<cpp:directive pos:line="9251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9251" pos:column="9">IDebugSessionEvent2_QueryInterface</name><parameter_list pos:line="9251" pos:column="43">(<param><type><name pos:line="9251" pos:column="44">This</name></type></param>,<param><type><name pos:line="9251" pos:column="49">riid</name></type></param>,<param><type><name pos:line="9251" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9252" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9254" pos:column="1">#<cpp:directive pos:line="9254" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9254" pos:column="9">IDebugSessionEvent2_AddRef</name><parameter_list pos:line="9254" pos:column="35">(<param><type><name pos:line="9254" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9255" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9257" pos:column="1">#<cpp:directive pos:line="9257" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9257" pos:column="9">IDebugSessionEvent2_Release</name><parameter_list pos:line="9257" pos:column="36">(<param><type><name pos:line="9257" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9258" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9261" pos:column="1">#<cpp:directive pos:line="9261" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9261" pos:column="9">IDebugSessionEvent2_GetSession</name><parameter_list pos:line="9261" pos:column="39">(<param><type><name pos:line="9261" pos:column="40">This</name></type></param>,<param><type><name pos:line="9261" pos:column="45">ppSession</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9262" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSession(This,ppSession) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9264" pos:column="1">#<cpp:directive pos:line="9264" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9264" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9267" pos:column="1">#<cpp:directive pos:line="9267" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9267" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9272" pos:column="1">#<cpp:directive pos:line="9272" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9272" pos:column="9">/* __IDebugSessionEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9275" pos:column="1">#<cpp:directive pos:line="9275" pos:column="2">ifndef</cpp:directive> <name pos:line="9275" pos:column="9">__IDebugProcess2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9276" pos:column="1">#<cpp:directive pos:line="9276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9276" pos:column="9">__IDebugProcess2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9278" pos:column="1">/* interface IDebugProcess2 */</comment>
<comment type="block" pos:line="9279" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="9282" pos:column="1">enum <name pos:line="9282" pos:column="6">enum_PROCESS_INFO_FLAGS</name>
    <block pos:line="9283" pos:column="5">{	<decl><name pos:line="9283" pos:column="9">PIFLAG_SYSTEM_PROCESS</name>	<init pos:line="9283" pos:column="33">= <expr><lit:literal type="number" pos:line="9283" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="9283" pos:column="38">,</op:operator>
	<decl><name pos:line="9284" pos:column="9">PIFLAG_DEBUGGER_ATTACHED</name>	<init pos:line="9284" pos:column="41">= <expr><lit:literal type="number" pos:line="9284" pos:column="43">0x2</lit:literal></expr></init></decl><op:operator pos:line="9284" pos:column="46">,</op:operator>
	<decl><name pos:line="9285" pos:column="9">PIFLAG_PROCESS_STOPPED</name>	<init pos:line="9285" pos:column="33">= <expr><lit:literal type="number" pos:line="9285" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="9285" pos:column="38">,</op:operator>
	<decl><name pos:line="9286" pos:column="9">PIFLAG_PROCESS_RUNNING</name>	<init pos:line="9286" pos:column="33">= <expr><lit:literal type="number" pos:line="9286" pos:column="35">0x8</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="9288" pos:column="1">typedef <type><name pos:line="9288" pos:column="9">DWORD</name></type> <name pos:line="9288" pos:column="15">PROCESS_INFO_FLAGS</name>;</typedef>


<enum pos:line="9291" pos:column="1">enum <name pos:line="9291" pos:column="6">enum_PROCESS_INFO_FIELDS</name>
    <block pos:line="9292" pos:column="5">{	<decl><name pos:line="9292" pos:column="9">PIF_FILE_NAME</name>	<init pos:line="9292" pos:column="25">= <expr><lit:literal type="number" pos:line="9292" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="9292" pos:column="30">,</op:operator>
	<decl><name pos:line="9293" pos:column="9">PIF_BASE_NAME</name>	<init pos:line="9293" pos:column="25">= <expr><lit:literal type="number" pos:line="9293" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="9293" pos:column="30">,</op:operator>
	<decl><name pos:line="9294" pos:column="9">PIF_TITLE</name>	<init pos:line="9294" pos:column="25">= <expr><lit:literal type="number" pos:line="9294" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="9294" pos:column="30">,</op:operator>
	<decl><name pos:line="9295" pos:column="9">PIF_PROCESS_ID</name>	<init pos:line="9295" pos:column="25">= <expr><lit:literal type="number" pos:line="9295" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="9295" pos:column="30">,</op:operator>
	<decl><name pos:line="9296" pos:column="9">PIF_SESSION_ID</name>	<init pos:line="9296" pos:column="25">= <expr><lit:literal type="number" pos:line="9296" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="9296" pos:column="31">,</op:operator>
	<decl><name pos:line="9297" pos:column="9">PIF_ATTACHED_SESSION_NAME</name>	<init pos:line="9297" pos:column="41">= <expr><lit:literal type="number" pos:line="9297" pos:column="43">0x20</lit:literal></expr></init></decl><op:operator pos:line="9297" pos:column="47">,</op:operator>
	<decl><name pos:line="9298" pos:column="9">PIF_CREATION_TIME</name>	<init pos:line="9298" pos:column="33">= <expr><lit:literal type="number" pos:line="9298" pos:column="35">0x40</lit:literal></expr></init></decl><op:operator pos:line="9298" pos:column="39">,</op:operator>
	<decl><name pos:line="9299" pos:column="9">PIF_FLAGS</name>	<init pos:line="9299" pos:column="25">= <expr><lit:literal type="number" pos:line="9299" pos:column="27">0x80</lit:literal></expr></init></decl><op:operator pos:line="9299" pos:column="31">,</op:operator>
	<decl><name pos:line="9300" pos:column="9">PIF_ALL</name>	<init pos:line="9300" pos:column="17">= <expr><lit:literal type="number" pos:line="9300" pos:column="19">0xff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="9302" pos:column="1">typedef <type><name pos:line="9302" pos:column="9">DWORD</name></type> <name pos:line="9302" pos:column="15">PROCESS_INFO_FIELDS</name>;</typedef>

<typedef pos:line="9304" pos:column="1">typedef <type><struct pos:line="9304" pos:column="9">struct <name pos:line="9304" pos:column="16">tagPROCESS_INFO</name>
    <block pos:line="9305" pos:column="5">{<public type="default" pos:line="9305" pos:column="6">
    <decl_stmt><decl><type><name pos:line="9306" pos:column="5">PROCESS_INFO_FIELDS</name></type> <name pos:line="9306" pos:column="25">Fields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9307" pos:column="5">BSTR</name></type> <name pos:line="9307" pos:column="10">bstrFileName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9308" pos:column="5">BSTR</name></type> <name pos:line="9308" pos:column="10">bstrBaseName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9309" pos:column="5">BSTR</name></type> <name pos:line="9309" pos:column="10">bstrTitle</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9310" pos:column="5">AD_PROCESS_ID</name></type> <name pos:line="9310" pos:column="19">ProcessId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9311" pos:column="5">DWORD</name></type> <name pos:line="9311" pos:column="11">dwSessionId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9312" pos:column="5">BSTR</name></type> <name pos:line="9312" pos:column="10">bstrAttachedSessionName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9313" pos:column="5">FILETIME</name></type> <name pos:line="9313" pos:column="14">CreationTime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9314" pos:column="5">PROCESS_INFO_FLAGS</name></type> <name pos:line="9314" pos:column="24">Flags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="9315" pos:column="9">PROCESS_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="9318" pos:column="1">EXTERN_C</name> <specifier pos:line="9318" pos:column="10">const</specifier> <name pos:line="9318" pos:column="16">IID</name></type> <name pos:line="9318" pos:column="20">IID_IDebugProcess2</name></decl>;</decl_stmt>

<cpp:if pos:line="9320" pos:column="1">#<cpp:directive pos:line="9320" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9320" pos:column="5">defined</name><argument_list pos:line="9320" pos:column="12">(<argument><expr><name pos:line="9320" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9320" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9320" pos:column="29">!</op:operator><call><name pos:line="9320" pos:column="30">defined</name><argument_list pos:line="9320" pos:column="37">(<argument><expr><name pos:line="9320" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9322" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9322" pos:column="19">(<argument pos:line="9322" pos:column="20">"43286fea-6997-4543-803e-60a20c473de5"</argument>)</argument_list></macro>
    <label><name pos:line="9323" pos:column="5">IDebugProcess2</name> :</label> <expr_stmt><expr pos:line="9323" pos:column="22">public <name pos:line="9323" pos:column="29">IUnknown</name>
    <block pos:line="9324" pos:column="5">{
    <expr pos:line="9325" pos:column="5">public<op:operator pos:line="9325" pos:column="11">:</op:operator>
        virtual <name pos:line="9326" pos:column="17">HRESULT</name> <name pos:line="9326" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9326" pos:column="43">GetInfo</name><argument_list pos:line="9326" pos:column="50">( 
            <comment type="block" pos:line="9327" pos:column="13">/* [in] */</comment> <argument pos:line="9327" pos:column="24">PROCESS_INFO_FIELDS Fields</argument>,
            <comment type="block" pos:line="9328" pos:column="13">/* [out] */</comment> <argument pos:line="9328" pos:column="25">__RPC__out PROCESS_INFO *pProcessInfo</argument>)</argument_list></macro> <op:operator pos:line="9328" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="9328" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="9330" pos:column="9">virtual <name pos:line="9330" pos:column="17">HRESULT</name> <name pos:line="9330" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9330" pos:column="43">EnumPrograms</name><argument_list pos:line="9330" pos:column="55">( 
            <comment type="block" pos:line="9331" pos:column="13">/* [out] */</comment> <argument pos:line="9331" pos:column="25">__RPC__deref_out_opt IEnumDebugPrograms2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="9331" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="9331" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="9333" pos:column="9">virtual <name pos:line="9333" pos:column="17">HRESULT</name> <name pos:line="9333" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9333" pos:column="43">GetName</name><argument_list pos:line="9333" pos:column="50">( 
            <comment type="block" pos:line="9334" pos:column="13">/* [in] */</comment> <argument pos:line="9334" pos:column="24">GETNAME_TYPE gnType</argument>,
            <comment type="block" pos:line="9335" pos:column="13">/* [out] */</comment> <argument pos:line="9335" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="9335" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="9335" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="9337" pos:column="9">virtual <name pos:line="9337" pos:column="17">HRESULT</name> <name pos:line="9337" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9337" pos:column="43">GetServer</name><argument_list pos:line="9337" pos:column="52">( 
            <comment type="block" pos:line="9338" pos:column="13">/* [out] */</comment> <argument pos:line="9338" pos:column="25">__RPC__deref_out_opt IDebugCoreServer2 **ppServer</argument>)</argument_list></macro> <op:operator pos:line="9338" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="9338" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="9340" pos:column="9">virtual <name pos:line="9340" pos:column="17">HRESULT</name> <name pos:line="9340" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9340" pos:column="43">Terminate</name><argument_list pos:line="9340" pos:column="52">( <argument><expr><name pos:line="9340" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9340" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="9340" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="9342" pos:column="9">virtual <name pos:line="9342" pos:column="17">HRESULT</name> <name pos:line="9342" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9342" pos:column="43">Attach</name><argument_list pos:line="9342" pos:column="49">( 
            <comment type="block" pos:line="9343" pos:column="13">/* [in] */</comment> <argument pos:line="9343" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>,
            <comment type="block" pos:line="9344" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="9344" pos:column="33">__RPC__in_ecount_full(celtSpecificEngines) GUID *rgguidSpecificEngines</argument>,
            <comment type="block" pos:line="9345" pos:column="13">/* [in] */</comment> <argument pos:line="9345" pos:column="24">DWORD celtSpecificEngines</argument>,
            <comment type="block" pos:line="9346" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="9346" pos:column="45">__RPC__out_ecount_part(celtSpecificEngines, celtSpecificEngines) HRESULT *rghrEngineAttach</argument>)</argument_list></macro> <op:operator pos:line="9346" pos:column="137">=</op:operator> <lit:literal type="number" pos:line="9346" pos:column="139">0</lit:literal></expr>;
        
        <expr pos:line="9348" pos:column="9">virtual <name pos:line="9348" pos:column="17">HRESULT</name> <name pos:line="9348" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9348" pos:column="43">CanDetach</name><argument_list pos:line="9348" pos:column="52">( <argument><expr><name pos:line="9348" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9348" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="9348" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="9350" pos:column="9">virtual <name pos:line="9350" pos:column="17">HRESULT</name> <name pos:line="9350" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9350" pos:column="43">Detach</name><argument_list pos:line="9350" pos:column="49">( <argument><expr><name pos:line="9350" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9350" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="9350" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="9352" pos:column="9">virtual <name pos:line="9352" pos:column="17">HRESULT</name> <name pos:line="9352" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9352" pos:column="43">GetPhysicalProcessId</name><argument_list pos:line="9352" pos:column="63">( 
            <comment type="block" pos:line="9353" pos:column="13">/* [out] */</comment> <argument pos:line="9353" pos:column="25">__RPC__out AD_PROCESS_ID *pProcessId</argument>)</argument_list></macro> <op:operator pos:line="9353" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="9353" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="9355" pos:column="9">virtual <name pos:line="9355" pos:column="17">HRESULT</name> <name pos:line="9355" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9355" pos:column="43">GetProcessId</name><argument_list pos:line="9355" pos:column="55">( 
            <comment type="block" pos:line="9356" pos:column="13">/* [out] */</comment> <argument pos:line="9356" pos:column="25">__RPC__out GUID *pguidProcessId</argument>)</argument_list></macro> <op:operator pos:line="9356" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="9356" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="9358" pos:column="9">virtual <name pos:line="9358" pos:column="17">HRESULT</name> <name pos:line="9358" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9358" pos:column="43">GetAttachedSessionName</name><argument_list pos:line="9358" pos:column="65">( 
            <comment type="block" pos:line="9359" pos:column="13">/* [out] */</comment> <argument pos:line="9359" pos:column="25">__RPC__deref_out_opt BSTR *pbstrSessionName</argument>)</argument_list></macro> <op:operator pos:line="9359" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="9359" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="9361" pos:column="9">virtual <name pos:line="9361" pos:column="17">HRESULT</name> <name pos:line="9361" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9361" pos:column="43">EnumThreads</name><argument_list pos:line="9361" pos:column="54">( 
            <comment type="block" pos:line="9362" pos:column="13">/* [out] */</comment> <argument pos:line="9362" pos:column="25">__RPC__deref_out_opt IEnumDebugThreads2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="9362" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="9362" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="9364" pos:column="9">virtual <name pos:line="9364" pos:column="17">HRESULT</name> <name pos:line="9364" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9364" pos:column="43">CauseBreak</name><argument_list pos:line="9364" pos:column="53">( <argument><expr><name pos:line="9364" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9364" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="9364" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="9366" pos:column="9">virtual <name pos:line="9366" pos:column="17">HRESULT</name> <name pos:line="9366" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9366" pos:column="43">GetPort</name><argument_list pos:line="9366" pos:column="50">( 
            <comment type="block" pos:line="9367" pos:column="13">/* [out] */</comment> <argument pos:line="9367" pos:column="25">__RPC__deref_out_opt IDebugPort2 **ppPort</argument>)</argument_list></macro> <op:operator pos:line="9367" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="9367" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9371" pos:column="1">#<cpp:directive pos:line="9371" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9371" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9373" pos:column="5">typedef <type><struct pos:line="9373" pos:column="13">struct <name pos:line="9373" pos:column="20">IDebugProcess2Vtbl</name>
    <block pos:line="9374" pos:column="5">{<public type="default" pos:line="9374" pos:column="6">
        <function_decl><type><name pos:line="9375" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9377" pos:column="9">HRESULT</name></type> ( <name pos:line="9377" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9377" pos:column="37">*</type:modifier><name pos:line="9377" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9377" pos:column="54">( 
            <param><decl><type><name pos:line="9378" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9378" pos:column="28">*</type:modifier></type> <name pos:line="9378" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9379" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9379" pos:column="24">__RPC__in</name> <name pos:line="9379" pos:column="34">REFIID</name></type> <name pos:line="9379" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9380" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9381" pos:column="13">__RPC__deref_out</name>  <name pos:line="9381" pos:column="31">void</name> <type:modifier pos:line="9381" pos:column="36">*</type:modifier><type:modifier pos:line="9381" pos:column="37">*</type:modifier></type><name pos:line="9381" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9383" pos:column="9">ULONG</name></type> ( <name pos:line="9383" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9383" pos:column="35">*</type:modifier><name pos:line="9383" pos:column="36">AddRef</name> )<parameter_list pos:line="9383" pos:column="44">( 
            <param><decl><type><name pos:line="9384" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9384" pos:column="28">*</type:modifier></type> <name pos:line="9384" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9386" pos:column="9">ULONG</name></type> ( <name pos:line="9386" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9386" pos:column="35">*</type:modifier><name pos:line="9386" pos:column="36">Release</name> )<parameter_list pos:line="9386" pos:column="45">( 
            <param><decl><type><name pos:line="9387" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9387" pos:column="28">*</type:modifier></type> <name pos:line="9387" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9389" pos:column="9">HRESULT</name></type> ( <name pos:line="9389" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9389" pos:column="37">*</type:modifier><name pos:line="9389" pos:column="38">GetInfo</name> )<parameter_list pos:line="9389" pos:column="47">( 
            <param><decl><type><name pos:line="9390" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9390" pos:column="28">*</type:modifier></type> <name pos:line="9390" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9391" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9391" pos:column="24">PROCESS_INFO_FIELDS</name></type> <name pos:line="9391" pos:column="44">Fields</name></decl></param>,
            <comment type="block" pos:line="9392" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9392" pos:column="25">__RPC__out</name> <name pos:line="9392" pos:column="36">PROCESS_INFO</name> <type:modifier pos:line="9392" pos:column="49">*</type:modifier></type><name pos:line="9392" pos:column="50">pProcessInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9394" pos:column="9">HRESULT</name></type> ( <name pos:line="9394" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9394" pos:column="37">*</type:modifier><name pos:line="9394" pos:column="38">EnumPrograms</name> )<parameter_list pos:line="9394" pos:column="52">( 
            <param><decl><type><name pos:line="9395" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9395" pos:column="28">*</type:modifier></type> <name pos:line="9395" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9396" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9396" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9396" pos:column="46">IEnumDebugPrograms2</name> <type:modifier pos:line="9396" pos:column="66">*</type:modifier><type:modifier pos:line="9396" pos:column="67">*</type:modifier></type><name pos:line="9396" pos:column="68">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9398" pos:column="9">HRESULT</name></type> ( <name pos:line="9398" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9398" pos:column="37">*</type:modifier><name pos:line="9398" pos:column="38">GetName</name> )<parameter_list pos:line="9398" pos:column="47">( 
            <param><decl><type><name pos:line="9399" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9399" pos:column="28">*</type:modifier></type> <name pos:line="9399" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9400" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9400" pos:column="24">GETNAME_TYPE</name></type> <name pos:line="9400" pos:column="37">gnType</name></decl></param>,
            <comment type="block" pos:line="9401" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9401" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9401" pos:column="46">BSTR</name> <type:modifier pos:line="9401" pos:column="51">*</type:modifier></type><name pos:line="9401" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9403" pos:column="9">HRESULT</name></type> ( <name pos:line="9403" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9403" pos:column="37">*</type:modifier><name pos:line="9403" pos:column="38">GetServer</name> )<parameter_list pos:line="9403" pos:column="49">( 
            <param><decl><type><name pos:line="9404" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9404" pos:column="28">*</type:modifier></type> <name pos:line="9404" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9405" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9405" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9405" pos:column="46">IDebugCoreServer2</name> <type:modifier pos:line="9405" pos:column="64">*</type:modifier><type:modifier pos:line="9405" pos:column="65">*</type:modifier></type><name pos:line="9405" pos:column="66">ppServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9407" pos:column="9">HRESULT</name></type> ( <name pos:line="9407" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9407" pos:column="37">*</type:modifier><name pos:line="9407" pos:column="38">Terminate</name> )<parameter_list pos:line="9407" pos:column="49">( 
            <param><decl><type><name pos:line="9408" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9408" pos:column="28">*</type:modifier></type> <name pos:line="9408" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9410" pos:column="9">HRESULT</name> <argument_list pos:line="9410" pos:column="17">( <argument pos:line="9410" pos:column="19">STDMETHODCALLTYPE *Attach</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9410" pos:column="46">(</op:operator> 
            <name pos:line="9411" pos:column="13">IDebugProcess2</name> <op:operator pos:line="9411" pos:column="28">*</op:operator> <name pos:line="9411" pos:column="30">This</name><op:operator pos:line="9411" pos:column="34">,</op:operator>
            <comment type="block" pos:line="9412" pos:column="13">/* [in] */</comment> <name pos:line="9412" pos:column="24">__RPC__in_opt</name> <name pos:line="9412" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="9412" pos:column="59">*</op:operator><name pos:line="9412" pos:column="60">pCallback</name><op:operator pos:line="9412" pos:column="69">,</op:operator>
            <comment type="block" pos:line="9413" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="9413" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="9413" pos:column="54">(<argument pos:line="9413" pos:column="55">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="9413" pos:column="76">GUID</name> <op:operator pos:line="9413" pos:column="81">*</op:operator><name pos:line="9413" pos:column="82">rgguidSpecificEngines</name><op:operator pos:line="9413" pos:column="103">,</op:operator>
            <comment type="block" pos:line="9414" pos:column="13">/* [in] */</comment> <name pos:line="9414" pos:column="24">DWORD</name> <name pos:line="9414" pos:column="30">celtSpecificEngines</name><op:operator pos:line="9414" pos:column="49">,</op:operator>
            <comment type="block" pos:line="9415" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="9415" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="9415" pos:column="67">(<argument pos:line="9415" pos:column="68">celtSpecificEngines</argument>, <argument pos:line="9415" pos:column="89">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="9415" pos:column="110">HRESULT</name> <op:operator pos:line="9415" pos:column="118">*</op:operator><name pos:line="9415" pos:column="119">rghrEngineAttach</name><op:operator pos:line="9415" pos:column="135">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="9417" pos:column="9">HRESULT</name></type> ( <name pos:line="9417" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9417" pos:column="37">*</type:modifier><name pos:line="9417" pos:column="38">CanDetach</name> )<parameter_list pos:line="9417" pos:column="49">( 
            <param><decl><type><name pos:line="9418" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9418" pos:column="28">*</type:modifier></type> <name pos:line="9418" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9420" pos:column="9">HRESULT</name></type> ( <name pos:line="9420" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9420" pos:column="37">*</type:modifier><name pos:line="9420" pos:column="38">Detach</name> )<parameter_list pos:line="9420" pos:column="46">( 
            <param><decl><type><name pos:line="9421" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9421" pos:column="28">*</type:modifier></type> <name pos:line="9421" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9423" pos:column="9">HRESULT</name></type> ( <name pos:line="9423" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9423" pos:column="37">*</type:modifier><name pos:line="9423" pos:column="38">GetPhysicalProcessId</name> )<parameter_list pos:line="9423" pos:column="60">( 
            <param><decl><type><name pos:line="9424" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9424" pos:column="28">*</type:modifier></type> <name pos:line="9424" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9425" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9425" pos:column="25">__RPC__out</name> <name pos:line="9425" pos:column="36">AD_PROCESS_ID</name> <type:modifier pos:line="9425" pos:column="50">*</type:modifier></type><name pos:line="9425" pos:column="51">pProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9427" pos:column="9">HRESULT</name></type> ( <name pos:line="9427" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9427" pos:column="37">*</type:modifier><name pos:line="9427" pos:column="38">GetProcessId</name> )<parameter_list pos:line="9427" pos:column="52">( 
            <param><decl><type><name pos:line="9428" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9428" pos:column="28">*</type:modifier></type> <name pos:line="9428" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9429" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9429" pos:column="25">__RPC__out</name> <name pos:line="9429" pos:column="36">GUID</name> <type:modifier pos:line="9429" pos:column="41">*</type:modifier></type><name pos:line="9429" pos:column="42">pguidProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9431" pos:column="9">HRESULT</name></type> ( <name pos:line="9431" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9431" pos:column="37">*</type:modifier><name pos:line="9431" pos:column="38">GetAttachedSessionName</name> )<parameter_list pos:line="9431" pos:column="62">( 
            <param><decl><type><name pos:line="9432" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9432" pos:column="28">*</type:modifier></type> <name pos:line="9432" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9433" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9433" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9433" pos:column="46">BSTR</name> <type:modifier pos:line="9433" pos:column="51">*</type:modifier></type><name pos:line="9433" pos:column="52">pbstrSessionName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9435" pos:column="9">HRESULT</name></type> ( <name pos:line="9435" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9435" pos:column="37">*</type:modifier><name pos:line="9435" pos:column="38">EnumThreads</name> )<parameter_list pos:line="9435" pos:column="51">( 
            <param><decl><type><name pos:line="9436" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9436" pos:column="28">*</type:modifier></type> <name pos:line="9436" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9437" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9437" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9437" pos:column="46">IEnumDebugThreads2</name> <type:modifier pos:line="9437" pos:column="65">*</type:modifier><type:modifier pos:line="9437" pos:column="66">*</type:modifier></type><name pos:line="9437" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9439" pos:column="9">HRESULT</name></type> ( <name pos:line="9439" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9439" pos:column="37">*</type:modifier><name pos:line="9439" pos:column="38">CauseBreak</name> )<parameter_list pos:line="9439" pos:column="50">( 
            <param><decl><type><name pos:line="9440" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9440" pos:column="28">*</type:modifier></type> <name pos:line="9440" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9442" pos:column="9">HRESULT</name></type> ( <name pos:line="9442" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9442" pos:column="37">*</type:modifier><name pos:line="9442" pos:column="38">GetPort</name> )<parameter_list pos:line="9442" pos:column="47">( 
            <param><decl><type><name pos:line="9443" pos:column="13">IDebugProcess2</name> <type:modifier pos:line="9443" pos:column="28">*</type:modifier></type> <name pos:line="9443" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9444" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9444" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9444" pos:column="46">IDebugPort2</name> <type:modifier pos:line="9444" pos:column="58">*</type:modifier><type:modifier pos:line="9444" pos:column="59">*</type:modifier></type><name pos:line="9444" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9446" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9447" pos:column="7">IDebugProcess2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9449" pos:column="5">interface</name></type> <name pos:line="9449" pos:column="15">IDebugProcess2</name>
    <argument_list pos:line="9450" pos:column="5">{
        <argument><expr><name pos:line="9451" pos:column="9">CONST_VTBL</name> struct <name pos:line="9451" pos:column="27">IDebugProcess2Vtbl</name> <op:operator pos:line="9451" pos:column="46">*</op:operator><name pos:line="9451" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9456" pos:column="1">#<cpp:directive pos:line="9456" pos:column="2">ifdef</cpp:directive> <name pos:line="9456" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9459" pos:column="1">#<cpp:directive pos:line="9459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9459" pos:column="9">IDebugProcess2_QueryInterface</name><parameter_list pos:line="9459" pos:column="38">(<param><type><name pos:line="9459" pos:column="39">This</name></type></param>,<param><type><name pos:line="9459" pos:column="44">riid</name></type></param>,<param><type><name pos:line="9459" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9460" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9462" pos:column="1">#<cpp:directive pos:line="9462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9462" pos:column="9">IDebugProcess2_AddRef</name><parameter_list pos:line="9462" pos:column="30">(<param><type><name pos:line="9462" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9463" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9465" pos:column="1">#<cpp:directive pos:line="9465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9465" pos:column="9">IDebugProcess2_Release</name><parameter_list pos:line="9465" pos:column="31">(<param><type><name pos:line="9465" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9466" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9469" pos:column="1">#<cpp:directive pos:line="9469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9469" pos:column="9">IDebugProcess2_GetInfo</name><parameter_list pos:line="9469" pos:column="31">(<param><type><name pos:line="9469" pos:column="32">This</name></type></param>,<param><type><name pos:line="9469" pos:column="37">Fields</name></type></param>,<param><type><name pos:line="9469" pos:column="44">pProcessInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9470" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,Fields,pProcessInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="9472" pos:column="1">#<cpp:directive pos:line="9472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9472" pos:column="9">IDebugProcess2_EnumPrograms</name><parameter_list pos:line="9472" pos:column="36">(<param><type><name pos:line="9472" pos:column="37">This</name></type></param>,<param><type><name pos:line="9472" pos:column="42">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9473" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPrograms(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="9475" pos:column="1">#<cpp:directive pos:line="9475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9475" pos:column="9">IDebugProcess2_GetName</name><parameter_list pos:line="9475" pos:column="31">(<param><type><name pos:line="9475" pos:column="32">This</name></type></param>,<param><type><name pos:line="9475" pos:column="37">gnType</name></type></param>,<param><type><name pos:line="9475" pos:column="44">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9476" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,gnType,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="9478" pos:column="1">#<cpp:directive pos:line="9478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9478" pos:column="9">IDebugProcess2_GetServer</name><parameter_list pos:line="9478" pos:column="33">(<param><type><name pos:line="9478" pos:column="34">This</name></type></param>,<param><type><name pos:line="9478" pos:column="39">ppServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9479" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServer(This,ppServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="9481" pos:column="1">#<cpp:directive pos:line="9481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9481" pos:column="9">IDebugProcess2_Terminate</name><parameter_list pos:line="9481" pos:column="33">(<param><type><name pos:line="9481" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9482" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9484" pos:column="1">#<cpp:directive pos:line="9484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9484" pos:column="9">IDebugProcess2_Attach</name><parameter_list pos:line="9484" pos:column="30">(<param><type><name pos:line="9484" pos:column="31">This</name></type></param>,<param><type><name pos:line="9484" pos:column="36">pCallback</name></type></param>,<param><type><name pos:line="9484" pos:column="46">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="9484" pos:column="68">celtSpecificEngines</name></type></param>,<param><type><name pos:line="9484" pos:column="88">rghrEngineAttach</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9485" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,pCallback,rgguidSpecificEngines,celtSpecificEngines,rghrEngineAttach) )</cpp:value></cpp:define> 

<cpp:define pos:line="9487" pos:column="1">#<cpp:directive pos:line="9487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9487" pos:column="9">IDebugProcess2_CanDetach</name><parameter_list pos:line="9487" pos:column="33">(<param><type><name pos:line="9487" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9488" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDetach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9490" pos:column="1">#<cpp:directive pos:line="9490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9490" pos:column="9">IDebugProcess2_Detach</name><parameter_list pos:line="9490" pos:column="30">(<param><type><name pos:line="9490" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9491" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9493" pos:column="1">#<cpp:directive pos:line="9493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9493" pos:column="9">IDebugProcess2_GetPhysicalProcessId</name><parameter_list pos:line="9493" pos:column="44">(<param><type><name pos:line="9493" pos:column="45">This</name></type></param>,<param><type><name pos:line="9493" pos:column="50">pProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9494" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPhysicalProcessId(This,pProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="9496" pos:column="1">#<cpp:directive pos:line="9496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9496" pos:column="9">IDebugProcess2_GetProcessId</name><parameter_list pos:line="9496" pos:column="36">(<param><type><name pos:line="9496" pos:column="37">This</name></type></param>,<param><type><name pos:line="9496" pos:column="42">pguidProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9497" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcessId(This,pguidProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="9499" pos:column="1">#<cpp:directive pos:line="9499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9499" pos:column="9">IDebugProcess2_GetAttachedSessionName</name><parameter_list pos:line="9499" pos:column="46">(<param><type><name pos:line="9499" pos:column="47">This</name></type></param>,<param><type><name pos:line="9499" pos:column="52">pbstrSessionName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9500" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAttachedSessionName(This,pbstrSessionName) )</cpp:value></cpp:define> 

<cpp:define pos:line="9502" pos:column="1">#<cpp:directive pos:line="9502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9502" pos:column="9">IDebugProcess2_EnumThreads</name><parameter_list pos:line="9502" pos:column="35">(<param><type><name pos:line="9502" pos:column="36">This</name></type></param>,<param><type><name pos:line="9502" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9503" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumThreads(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="9505" pos:column="1">#<cpp:directive pos:line="9505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9505" pos:column="9">IDebugProcess2_CauseBreak</name><parameter_list pos:line="9505" pos:column="34">(<param><type><name pos:line="9505" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9506" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9508" pos:column="1">#<cpp:directive pos:line="9508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9508" pos:column="9">IDebugProcess2_GetPort</name><parameter_list pos:line="9508" pos:column="31">(<param><type><name pos:line="9508" pos:column="32">This</name></type></param>,<param><type><name pos:line="9508" pos:column="37">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9509" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPort(This,ppPort) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9511" pos:column="1">#<cpp:directive pos:line="9511" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9511" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9514" pos:column="1">#<cpp:directive pos:line="9514" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9514" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9519" pos:column="1">#<cpp:directive pos:line="9519" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9519" pos:column="9">/* __IDebugProcess2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9522" pos:column="1">#<cpp:directive pos:line="9522" pos:column="2">ifndef</cpp:directive> <name pos:line="9522" pos:column="9">__IDebugProcess3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9523" pos:column="1">#<cpp:directive pos:line="9523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9523" pos:column="9">__IDebugProcess3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9525" pos:column="1">/* interface IDebugProcess3 */</comment>
<comment type="block" pos:line="9526" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="9529" pos:column="1">enum <name pos:line="9529" pos:column="6">enum_STEPKIND</name>
    <block pos:line="9530" pos:column="5">{	<decl><name pos:line="9530" pos:column="9">STEP_INTO</name>	<init pos:line="9530" pos:column="25">= <expr><lit:literal type="number" pos:line="9530" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="9530" pos:column="28">,</op:operator>
	<decl><name pos:line="9531" pos:column="9">STEP_OVER</name>	<init pos:line="9531" pos:column="25">= <expr><op:operator pos:line="9531" pos:column="27">(</op:operator> <name pos:line="9531" pos:column="29">STEP_INTO</name> <op:operator pos:line="9531" pos:column="39">+</op:operator> <lit:literal type="number" pos:line="9531" pos:column="41">1</lit:literal> <op:operator pos:line="9531" pos:column="43">)</op:operator></expr></init></decl> <op:operator pos:line="9531" pos:column="45">,</op:operator>
	<decl><name pos:line="9532" pos:column="9">STEP_OUT</name>	<init pos:line="9532" pos:column="25">= <expr><op:operator pos:line="9532" pos:column="27">(</op:operator> <name pos:line="9532" pos:column="29">STEP_OVER</name> <op:operator pos:line="9532" pos:column="39">+</op:operator> <lit:literal type="number" pos:line="9532" pos:column="41">1</lit:literal> <op:operator pos:line="9532" pos:column="43">)</op:operator></expr></init></decl> <op:operator pos:line="9532" pos:column="45">,</op:operator>
	<decl><name pos:line="9533" pos:column="9">STEP_BACKWARDS</name>	<init pos:line="9533" pos:column="25">= <expr><op:operator pos:line="9533" pos:column="27">(</op:operator> <name pos:line="9533" pos:column="29">STEP_OUT</name> <op:operator pos:line="9533" pos:column="38">+</op:operator> <lit:literal type="number" pos:line="9533" pos:column="40">1</lit:literal> <op:operator pos:line="9533" pos:column="42">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="9535" pos:column="1">typedef <type><name pos:line="9535" pos:column="9">DWORD</name></type> <name pos:line="9535" pos:column="15">STEPKIND</name>;</typedef>


<enum pos:line="9538" pos:column="1">enum <name pos:line="9538" pos:column="6">enum_STEPUNIT</name>
    <block pos:line="9539" pos:column="5">{	<decl><name pos:line="9539" pos:column="9">STEP_STATEMENT</name>	<init pos:line="9539" pos:column="25">= <expr><lit:literal type="number" pos:line="9539" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="9539" pos:column="28">,</op:operator>
	<decl><name pos:line="9540" pos:column="9">STEP_LINE</name>	<init pos:line="9540" pos:column="25">= <expr><op:operator pos:line="9540" pos:column="27">(</op:operator> <name pos:line="9540" pos:column="29">STEP_STATEMENT</name> <op:operator pos:line="9540" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="9540" pos:column="46">1</lit:literal> <op:operator pos:line="9540" pos:column="48">)</op:operator></expr></init></decl> <op:operator pos:line="9540" pos:column="50">,</op:operator>
	<decl><name pos:line="9541" pos:column="9">STEP_INSTRUCTION</name>	<init pos:line="9541" pos:column="33">= <expr><op:operator pos:line="9541" pos:column="35">(</op:operator> <name pos:line="9541" pos:column="37">STEP_LINE</name> <op:operator pos:line="9541" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="9541" pos:column="49">1</lit:literal> <op:operator pos:line="9541" pos:column="51">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="9543" pos:column="1">typedef <type><name pos:line="9543" pos:column="9">DWORD</name></type> <name pos:line="9543" pos:column="15">STEPUNIT</name>;</typedef>


<enum pos:line="9546" pos:column="1">enum <name pos:line="9546" pos:column="6">enum_DEBUG_REASON</name>
    <block pos:line="9547" pos:column="5">{	<decl><name pos:line="9547" pos:column="9">DEBUG_REASON_ERROR</name>	<init pos:line="9547" pos:column="33">= <expr><lit:literal type="number" pos:line="9547" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="9547" pos:column="36">,</op:operator>
	<decl><name pos:line="9548" pos:column="9">DEBUG_REASON_USER_LAUNCHED</name>	<init pos:line="9548" pos:column="41">= <expr><op:operator pos:line="9548" pos:column="43">(</op:operator> <name pos:line="9548" pos:column="45">DEBUG_REASON_ERROR</name> <op:operator pos:line="9548" pos:column="64">+</op:operator> <lit:literal type="number" pos:line="9548" pos:column="66">1</lit:literal> <op:operator pos:line="9548" pos:column="68">)</op:operator></expr></init></decl> <op:operator pos:line="9548" pos:column="70">,</op:operator>
	<decl><name pos:line="9549" pos:column="9">DEBUG_REASON_USER_ATTACHED</name>	<init pos:line="9549" pos:column="41">= <expr><op:operator pos:line="9549" pos:column="43">(</op:operator> <name pos:line="9549" pos:column="45">DEBUG_REASON_USER_LAUNCHED</name> <op:operator pos:line="9549" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="9549" pos:column="74">1</lit:literal> <op:operator pos:line="9549" pos:column="76">)</op:operator></expr></init></decl> <op:operator pos:line="9549" pos:column="78">,</op:operator>
	<decl><name pos:line="9550" pos:column="9">DEBUG_REASON_AUTO_ATTACHED</name>	<init pos:line="9550" pos:column="41">= <expr><op:operator pos:line="9550" pos:column="43">(</op:operator> <name pos:line="9550" pos:column="45">DEBUG_REASON_USER_ATTACHED</name> <op:operator pos:line="9550" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="9550" pos:column="74">1</lit:literal> <op:operator pos:line="9550" pos:column="76">)</op:operator></expr></init></decl> <op:operator pos:line="9550" pos:column="78">,</op:operator>
	<decl><name pos:line="9551" pos:column="9">DEBUG_REASON_CAUSALITY</name>	<init pos:line="9551" pos:column="33">= <expr><op:operator pos:line="9551" pos:column="35">(</op:operator> <name pos:line="9551" pos:column="37">DEBUG_REASON_AUTO_ATTACHED</name> <op:operator pos:line="9551" pos:column="64">+</op:operator> <lit:literal type="number" pos:line="9551" pos:column="66">1</lit:literal> <op:operator pos:line="9551" pos:column="68">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="9553" pos:column="1">typedef <type><name pos:line="9553" pos:column="9">DWORD</name></type> <name pos:line="9553" pos:column="15">DEBUG_REASON</name>;</typedef>


<decl_stmt><decl><type><name pos:line="9556" pos:column="1">EXTERN_C</name> <specifier pos:line="9556" pos:column="10">const</specifier> <name pos:line="9556" pos:column="16">IID</name></type> <name pos:line="9556" pos:column="20">IID_IDebugProcess3</name></decl>;</decl_stmt>

<cpp:if pos:line="9558" pos:column="1">#<cpp:directive pos:line="9558" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9558" pos:column="5">defined</name><argument_list pos:line="9558" pos:column="12">(<argument><expr><name pos:line="9558" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9558" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9558" pos:column="29">!</op:operator><call><name pos:line="9558" pos:column="30">defined</name><argument_list pos:line="9558" pos:column="37">(<argument><expr><name pos:line="9558" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9560" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9560" pos:column="19">(<argument pos:line="9560" pos:column="20">"83ab1712-18a6-47a1-8da6-8c7b0f96092e"</argument>)</argument_list></macro>
    <label><name pos:line="9561" pos:column="5">IDebugProcess3</name> :</label> <expr_stmt><expr pos:line="9561" pos:column="22">public <name pos:line="9561" pos:column="29">IDebugProcess2</name>
    <block pos:line="9562" pos:column="5">{
    <expr pos:line="9563" pos:column="5">public<op:operator pos:line="9563" pos:column="11">:</op:operator>
        virtual <name pos:line="9564" pos:column="17">HRESULT</name> <name pos:line="9564" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9564" pos:column="43">Execute</name><argument_list pos:line="9564" pos:column="50">( 
            <comment type="block" pos:line="9565" pos:column="13">/* [in] */</comment> <argument pos:line="9565" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>)</argument_list></macro> <op:operator pos:line="9565" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="9565" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="9567" pos:column="9">virtual <name pos:line="9567" pos:column="17">HRESULT</name> <name pos:line="9567" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9567" pos:column="43">Continue</name><argument_list pos:line="9567" pos:column="51">( 
            <comment type="block" pos:line="9568" pos:column="13">/* [in] */</comment> <argument pos:line="9568" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>)</argument_list></macro> <op:operator pos:line="9568" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="9568" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="9570" pos:column="9">virtual <name pos:line="9570" pos:column="17">HRESULT</name> <name pos:line="9570" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9570" pos:column="43">Step</name><argument_list pos:line="9570" pos:column="47">( 
            <comment type="block" pos:line="9571" pos:column="13">/* [in] */</comment> <argument pos:line="9571" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>,
            <comment type="block" pos:line="9572" pos:column="13">/* [in] */</comment> <argument pos:line="9572" pos:column="24">STEPKIND sk</argument>,
            <comment type="block" pos:line="9573" pos:column="13">/* [in] */</comment> <argument pos:line="9573" pos:column="24">STEPUNIT step</argument>)</argument_list></macro> <op:operator pos:line="9573" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="9573" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="9575" pos:column="9">virtual <name pos:line="9575" pos:column="17">HRESULT</name> <name pos:line="9575" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9575" pos:column="43">GetDebugReason</name><argument_list pos:line="9575" pos:column="57">( 
            <comment type="block" pos:line="9576" pos:column="13">/* [out] */</comment> <argument pos:line="9576" pos:column="25">__RPC__out DEBUG_REASON *pReason</argument>)</argument_list></macro> <op:operator pos:line="9576" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="9576" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="9578" pos:column="9">virtual <name pos:line="9578" pos:column="17">HRESULT</name> <name pos:line="9578" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9578" pos:column="43">SetHostingProcessLanguage</name><argument_list pos:line="9578" pos:column="68">( 
            <comment type="block" pos:line="9579" pos:column="13">/* [in] */</comment> <argument pos:line="9579" pos:column="24">__RPC__in REFGUID guidLang</argument>)</argument_list></macro> <op:operator pos:line="9579" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="9579" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="9581" pos:column="9">virtual <name pos:line="9581" pos:column="17">HRESULT</name> <name pos:line="9581" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9581" pos:column="43">GetHostingProcessLanguage</name><argument_list pos:line="9581" pos:column="68">( 
            <comment type="block" pos:line="9582" pos:column="13">/* [out] */</comment> <argument pos:line="9582" pos:column="25">__RPC__out GUID *pguidLang</argument>)</argument_list></macro> <op:operator pos:line="9582" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="9582" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="9584" pos:column="9">virtual <name pos:line="9584" pos:column="17">HRESULT</name> <name pos:line="9584" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9584" pos:column="43">DisableENC</name><argument_list pos:line="9584" pos:column="53">( 
            <comment type="block" pos:line="9585" pos:column="13">/* [in] */</comment> <argument pos:line="9585" pos:column="24">EncUnavailableReason reason</argument>)</argument_list></macro> <op:operator pos:line="9585" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="9585" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="9587" pos:column="9">virtual <name pos:line="9587" pos:column="17">HRESULT</name> <name pos:line="9587" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9587" pos:column="43">GetENCAvailableState</name><argument_list pos:line="9587" pos:column="63">( 
            <comment type="block" pos:line="9588" pos:column="13">/* [out] */</comment> <argument pos:line="9588" pos:column="25">__RPC__out EncUnavailableReason *preason</argument>)</argument_list></macro> <op:operator pos:line="9588" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9588" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="9590" pos:column="9">virtual <name pos:line="9590" pos:column="17">HRESULT</name> <name pos:line="9590" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9590" pos:column="43">GetEngineFilter</name><argument_list pos:line="9590" pos:column="58">( 
            <comment type="block" pos:line="9591" pos:column="13">/* [out] */</comment> <argument pos:line="9591" pos:column="25">__RPC__out GUID_ARRAY *pEngineArray</argument>)</argument_list></macro> <op:operator pos:line="9591" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="9591" pos:column="64">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9595" pos:column="1">#<cpp:directive pos:line="9595" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9595" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9597" pos:column="5">typedef <type><struct pos:line="9597" pos:column="13">struct <name pos:line="9597" pos:column="20">IDebugProcess3Vtbl</name>
    <block pos:line="9598" pos:column="5">{<public type="default" pos:line="9598" pos:column="6">
        <function_decl><type><name pos:line="9599" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9601" pos:column="9">HRESULT</name></type> ( <name pos:line="9601" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9601" pos:column="37">*</type:modifier><name pos:line="9601" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9601" pos:column="54">( 
            <param><decl><type><name pos:line="9602" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9602" pos:column="28">*</type:modifier></type> <name pos:line="9602" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9603" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9603" pos:column="24">__RPC__in</name> <name pos:line="9603" pos:column="34">REFIID</name></type> <name pos:line="9603" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9604" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9605" pos:column="13">__RPC__deref_out</name>  <name pos:line="9605" pos:column="31">void</name> <type:modifier pos:line="9605" pos:column="36">*</type:modifier><type:modifier pos:line="9605" pos:column="37">*</type:modifier></type><name pos:line="9605" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9607" pos:column="9">ULONG</name></type> ( <name pos:line="9607" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9607" pos:column="35">*</type:modifier><name pos:line="9607" pos:column="36">AddRef</name> )<parameter_list pos:line="9607" pos:column="44">( 
            <param><decl><type><name pos:line="9608" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9608" pos:column="28">*</type:modifier></type> <name pos:line="9608" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9610" pos:column="9">ULONG</name></type> ( <name pos:line="9610" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9610" pos:column="35">*</type:modifier><name pos:line="9610" pos:column="36">Release</name> )<parameter_list pos:line="9610" pos:column="45">( 
            <param><decl><type><name pos:line="9611" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9611" pos:column="28">*</type:modifier></type> <name pos:line="9611" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9613" pos:column="9">HRESULT</name></type> ( <name pos:line="9613" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9613" pos:column="37">*</type:modifier><name pos:line="9613" pos:column="38">GetInfo</name> )<parameter_list pos:line="9613" pos:column="47">( 
            <param><decl><type><name pos:line="9614" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9614" pos:column="28">*</type:modifier></type> <name pos:line="9614" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9615" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9615" pos:column="24">PROCESS_INFO_FIELDS</name></type> <name pos:line="9615" pos:column="44">Fields</name></decl></param>,
            <comment type="block" pos:line="9616" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9616" pos:column="25">__RPC__out</name> <name pos:line="9616" pos:column="36">PROCESS_INFO</name> <type:modifier pos:line="9616" pos:column="49">*</type:modifier></type><name pos:line="9616" pos:column="50">pProcessInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9618" pos:column="9">HRESULT</name></type> ( <name pos:line="9618" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9618" pos:column="37">*</type:modifier><name pos:line="9618" pos:column="38">EnumPrograms</name> )<parameter_list pos:line="9618" pos:column="52">( 
            <param><decl><type><name pos:line="9619" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9619" pos:column="28">*</type:modifier></type> <name pos:line="9619" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9620" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9620" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9620" pos:column="46">IEnumDebugPrograms2</name> <type:modifier pos:line="9620" pos:column="66">*</type:modifier><type:modifier pos:line="9620" pos:column="67">*</type:modifier></type><name pos:line="9620" pos:column="68">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9622" pos:column="9">HRESULT</name></type> ( <name pos:line="9622" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9622" pos:column="37">*</type:modifier><name pos:line="9622" pos:column="38">GetName</name> )<parameter_list pos:line="9622" pos:column="47">( 
            <param><decl><type><name pos:line="9623" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9623" pos:column="28">*</type:modifier></type> <name pos:line="9623" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9624" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9624" pos:column="24">GETNAME_TYPE</name></type> <name pos:line="9624" pos:column="37">gnType</name></decl></param>,
            <comment type="block" pos:line="9625" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9625" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9625" pos:column="46">BSTR</name> <type:modifier pos:line="9625" pos:column="51">*</type:modifier></type><name pos:line="9625" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9627" pos:column="9">HRESULT</name></type> ( <name pos:line="9627" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9627" pos:column="37">*</type:modifier><name pos:line="9627" pos:column="38">GetServer</name> )<parameter_list pos:line="9627" pos:column="49">( 
            <param><decl><type><name pos:line="9628" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9628" pos:column="28">*</type:modifier></type> <name pos:line="9628" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9629" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9629" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9629" pos:column="46">IDebugCoreServer2</name> <type:modifier pos:line="9629" pos:column="64">*</type:modifier><type:modifier pos:line="9629" pos:column="65">*</type:modifier></type><name pos:line="9629" pos:column="66">ppServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9631" pos:column="9">HRESULT</name></type> ( <name pos:line="9631" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9631" pos:column="37">*</type:modifier><name pos:line="9631" pos:column="38">Terminate</name> )<parameter_list pos:line="9631" pos:column="49">( 
            <param><decl><type><name pos:line="9632" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9632" pos:column="28">*</type:modifier></type> <name pos:line="9632" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9634" pos:column="9">HRESULT</name> <argument_list pos:line="9634" pos:column="17">( <argument pos:line="9634" pos:column="19">STDMETHODCALLTYPE *Attach</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9634" pos:column="46">(</op:operator> 
            <name pos:line="9635" pos:column="13">IDebugProcess3</name> <op:operator pos:line="9635" pos:column="28">*</op:operator> <name pos:line="9635" pos:column="30">This</name><op:operator pos:line="9635" pos:column="34">,</op:operator>
            <comment type="block" pos:line="9636" pos:column="13">/* [in] */</comment> <name pos:line="9636" pos:column="24">__RPC__in_opt</name> <name pos:line="9636" pos:column="38">IDebugEventCallback2</name> <op:operator pos:line="9636" pos:column="59">*</op:operator><name pos:line="9636" pos:column="60">pCallback</name><op:operator pos:line="9636" pos:column="69">,</op:operator>
            <comment type="block" pos:line="9637" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="9637" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="9637" pos:column="54">(<argument pos:line="9637" pos:column="55">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="9637" pos:column="76">GUID</name> <op:operator pos:line="9637" pos:column="81">*</op:operator><name pos:line="9637" pos:column="82">rgguidSpecificEngines</name><op:operator pos:line="9637" pos:column="103">,</op:operator>
            <comment type="block" pos:line="9638" pos:column="13">/* [in] */</comment> <name pos:line="9638" pos:column="24">DWORD</name> <name pos:line="9638" pos:column="30">celtSpecificEngines</name><op:operator pos:line="9638" pos:column="49">,</op:operator>
            <comment type="block" pos:line="9639" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="9639" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="9639" pos:column="67">(<argument pos:line="9639" pos:column="68">celtSpecificEngines</argument>, <argument pos:line="9639" pos:column="89">celtSpecificEngines</argument>)</argument_list></macro> <name pos:line="9639" pos:column="110">HRESULT</name> <op:operator pos:line="9639" pos:column="118">*</op:operator><name pos:line="9639" pos:column="119">rghrEngineAttach</name><op:operator pos:line="9639" pos:column="135">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="9641" pos:column="9">HRESULT</name></type> ( <name pos:line="9641" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9641" pos:column="37">*</type:modifier><name pos:line="9641" pos:column="38">CanDetach</name> )<parameter_list pos:line="9641" pos:column="49">( 
            <param><decl><type><name pos:line="9642" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9642" pos:column="28">*</type:modifier></type> <name pos:line="9642" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9644" pos:column="9">HRESULT</name></type> ( <name pos:line="9644" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9644" pos:column="37">*</type:modifier><name pos:line="9644" pos:column="38">Detach</name> )<parameter_list pos:line="9644" pos:column="46">( 
            <param><decl><type><name pos:line="9645" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9645" pos:column="28">*</type:modifier></type> <name pos:line="9645" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9647" pos:column="9">HRESULT</name></type> ( <name pos:line="9647" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9647" pos:column="37">*</type:modifier><name pos:line="9647" pos:column="38">GetPhysicalProcessId</name> )<parameter_list pos:line="9647" pos:column="60">( 
            <param><decl><type><name pos:line="9648" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9648" pos:column="28">*</type:modifier></type> <name pos:line="9648" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9649" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9649" pos:column="25">__RPC__out</name> <name pos:line="9649" pos:column="36">AD_PROCESS_ID</name> <type:modifier pos:line="9649" pos:column="50">*</type:modifier></type><name pos:line="9649" pos:column="51">pProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9651" pos:column="9">HRESULT</name></type> ( <name pos:line="9651" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9651" pos:column="37">*</type:modifier><name pos:line="9651" pos:column="38">GetProcessId</name> )<parameter_list pos:line="9651" pos:column="52">( 
            <param><decl><type><name pos:line="9652" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9652" pos:column="28">*</type:modifier></type> <name pos:line="9652" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9653" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9653" pos:column="25">__RPC__out</name> <name pos:line="9653" pos:column="36">GUID</name> <type:modifier pos:line="9653" pos:column="41">*</type:modifier></type><name pos:line="9653" pos:column="42">pguidProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9655" pos:column="9">HRESULT</name></type> ( <name pos:line="9655" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9655" pos:column="37">*</type:modifier><name pos:line="9655" pos:column="38">GetAttachedSessionName</name> )<parameter_list pos:line="9655" pos:column="62">( 
            <param><decl><type><name pos:line="9656" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9656" pos:column="28">*</type:modifier></type> <name pos:line="9656" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9657" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9657" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9657" pos:column="46">BSTR</name> <type:modifier pos:line="9657" pos:column="51">*</type:modifier></type><name pos:line="9657" pos:column="52">pbstrSessionName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9659" pos:column="9">HRESULT</name></type> ( <name pos:line="9659" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9659" pos:column="37">*</type:modifier><name pos:line="9659" pos:column="38">EnumThreads</name> )<parameter_list pos:line="9659" pos:column="51">( 
            <param><decl><type><name pos:line="9660" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9660" pos:column="28">*</type:modifier></type> <name pos:line="9660" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9661" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9661" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9661" pos:column="46">IEnumDebugThreads2</name> <type:modifier pos:line="9661" pos:column="65">*</type:modifier><type:modifier pos:line="9661" pos:column="66">*</type:modifier></type><name pos:line="9661" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9663" pos:column="9">HRESULT</name></type> ( <name pos:line="9663" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9663" pos:column="37">*</type:modifier><name pos:line="9663" pos:column="38">CauseBreak</name> )<parameter_list pos:line="9663" pos:column="50">( 
            <param><decl><type><name pos:line="9664" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9664" pos:column="28">*</type:modifier></type> <name pos:line="9664" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9666" pos:column="9">HRESULT</name></type> ( <name pos:line="9666" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9666" pos:column="37">*</type:modifier><name pos:line="9666" pos:column="38">GetPort</name> )<parameter_list pos:line="9666" pos:column="47">( 
            <param><decl><type><name pos:line="9667" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9667" pos:column="28">*</type:modifier></type> <name pos:line="9667" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9668" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9668" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9668" pos:column="46">IDebugPort2</name> <type:modifier pos:line="9668" pos:column="58">*</type:modifier><type:modifier pos:line="9668" pos:column="59">*</type:modifier></type><name pos:line="9668" pos:column="60">ppPort</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9670" pos:column="9">HRESULT</name></type> ( <name pos:line="9670" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9670" pos:column="37">*</type:modifier><name pos:line="9670" pos:column="38">Execute</name> )<parameter_list pos:line="9670" pos:column="47">( 
            <param><decl><type><name pos:line="9671" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9671" pos:column="28">*</type:modifier></type> <name pos:line="9671" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9672" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9672" pos:column="24">__RPC__in_opt</name> <name pos:line="9672" pos:column="38">IDebugThread2</name> <type:modifier pos:line="9672" pos:column="52">*</type:modifier></type><name pos:line="9672" pos:column="53">pThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9674" pos:column="9">HRESULT</name></type> ( <name pos:line="9674" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9674" pos:column="37">*</type:modifier><name pos:line="9674" pos:column="38">Continue</name> )<parameter_list pos:line="9674" pos:column="48">( 
            <param><decl><type><name pos:line="9675" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9675" pos:column="28">*</type:modifier></type> <name pos:line="9675" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9676" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9676" pos:column="24">__RPC__in_opt</name> <name pos:line="9676" pos:column="38">IDebugThread2</name> <type:modifier pos:line="9676" pos:column="52">*</type:modifier></type><name pos:line="9676" pos:column="53">pThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9678" pos:column="9">HRESULT</name></type> ( <name pos:line="9678" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9678" pos:column="37">*</type:modifier><name pos:line="9678" pos:column="38">Step</name> )<parameter_list pos:line="9678" pos:column="44">( 
            <param><decl><type><name pos:line="9679" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9679" pos:column="28">*</type:modifier></type> <name pos:line="9679" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9680" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9680" pos:column="24">__RPC__in_opt</name> <name pos:line="9680" pos:column="38">IDebugThread2</name> <type:modifier pos:line="9680" pos:column="52">*</type:modifier></type><name pos:line="9680" pos:column="53">pThread</name></decl></param>,
            <comment type="block" pos:line="9681" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9681" pos:column="24">STEPKIND</name></type> <name pos:line="9681" pos:column="33">sk</name></decl></param>,
            <comment type="block" pos:line="9682" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9682" pos:column="24">STEPUNIT</name></type> <name pos:line="9682" pos:column="33">step</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9684" pos:column="9">HRESULT</name></type> ( <name pos:line="9684" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9684" pos:column="37">*</type:modifier><name pos:line="9684" pos:column="38">GetDebugReason</name> )<parameter_list pos:line="9684" pos:column="54">( 
            <param><decl><type><name pos:line="9685" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9685" pos:column="28">*</type:modifier></type> <name pos:line="9685" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9686" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9686" pos:column="25">__RPC__out</name> <name pos:line="9686" pos:column="36">DEBUG_REASON</name> <type:modifier pos:line="9686" pos:column="49">*</type:modifier></type><name pos:line="9686" pos:column="50">pReason</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9688" pos:column="9">HRESULT</name></type> ( <name pos:line="9688" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9688" pos:column="37">*</type:modifier><name pos:line="9688" pos:column="38">SetHostingProcessLanguage</name> )<parameter_list pos:line="9688" pos:column="65">( 
            <param><decl><type><name pos:line="9689" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9689" pos:column="28">*</type:modifier></type> <name pos:line="9689" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9690" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9690" pos:column="24">__RPC__in</name> <name pos:line="9690" pos:column="34">REFGUID</name></type> <name pos:line="9690" pos:column="42">guidLang</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9692" pos:column="9">HRESULT</name></type> ( <name pos:line="9692" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9692" pos:column="37">*</type:modifier><name pos:line="9692" pos:column="38">GetHostingProcessLanguage</name> )<parameter_list pos:line="9692" pos:column="65">( 
            <param><decl><type><name pos:line="9693" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9693" pos:column="28">*</type:modifier></type> <name pos:line="9693" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9694" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9694" pos:column="25">__RPC__out</name> <name pos:line="9694" pos:column="36">GUID</name> <type:modifier pos:line="9694" pos:column="41">*</type:modifier></type><name pos:line="9694" pos:column="42">pguidLang</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9696" pos:column="9">HRESULT</name></type> ( <name pos:line="9696" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9696" pos:column="37">*</type:modifier><name pos:line="9696" pos:column="38">DisableENC</name> )<parameter_list pos:line="9696" pos:column="50">( 
            <param><decl><type><name pos:line="9697" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9697" pos:column="28">*</type:modifier></type> <name pos:line="9697" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9698" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9698" pos:column="24">EncUnavailableReason</name></type> <name pos:line="9698" pos:column="45">reason</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9700" pos:column="9">HRESULT</name></type> ( <name pos:line="9700" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9700" pos:column="37">*</type:modifier><name pos:line="9700" pos:column="38">GetENCAvailableState</name> )<parameter_list pos:line="9700" pos:column="60">( 
            <param><decl><type><name pos:line="9701" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9701" pos:column="28">*</type:modifier></type> <name pos:line="9701" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9702" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9702" pos:column="25">__RPC__out</name> <name pos:line="9702" pos:column="36">EncUnavailableReason</name> <type:modifier pos:line="9702" pos:column="57">*</type:modifier></type><name pos:line="9702" pos:column="58">preason</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9704" pos:column="9">HRESULT</name></type> ( <name pos:line="9704" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9704" pos:column="37">*</type:modifier><name pos:line="9704" pos:column="38">GetEngineFilter</name> )<parameter_list pos:line="9704" pos:column="55">( 
            <param><decl><type><name pos:line="9705" pos:column="13">IDebugProcess3</name> <type:modifier pos:line="9705" pos:column="28">*</type:modifier></type> <name pos:line="9705" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="9706" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9706" pos:column="25">__RPC__out</name> <name pos:line="9706" pos:column="36">GUID_ARRAY</name> <type:modifier pos:line="9706" pos:column="47">*</type:modifier></type><name pos:line="9706" pos:column="48">pEngineArray</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9708" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9709" pos:column="7">IDebugProcess3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9711" pos:column="5">interface</name></type> <name pos:line="9711" pos:column="15">IDebugProcess3</name>
    <argument_list pos:line="9712" pos:column="5">{
        <argument><expr><name pos:line="9713" pos:column="9">CONST_VTBL</name> struct <name pos:line="9713" pos:column="27">IDebugProcess3Vtbl</name> <op:operator pos:line="9713" pos:column="46">*</op:operator><name pos:line="9713" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9718" pos:column="1">#<cpp:directive pos:line="9718" pos:column="2">ifdef</cpp:directive> <name pos:line="9718" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9721" pos:column="1">#<cpp:directive pos:line="9721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9721" pos:column="9">IDebugProcess3_QueryInterface</name><parameter_list pos:line="9721" pos:column="38">(<param><type><name pos:line="9721" pos:column="39">This</name></type></param>,<param><type><name pos:line="9721" pos:column="44">riid</name></type></param>,<param><type><name pos:line="9721" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9722" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9724" pos:column="1">#<cpp:directive pos:line="9724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9724" pos:column="9">IDebugProcess3_AddRef</name><parameter_list pos:line="9724" pos:column="30">(<param><type><name pos:line="9724" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9725" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9727" pos:column="1">#<cpp:directive pos:line="9727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9727" pos:column="9">IDebugProcess3_Release</name><parameter_list pos:line="9727" pos:column="31">(<param><type><name pos:line="9727" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9728" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9731" pos:column="1">#<cpp:directive pos:line="9731" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9731" pos:column="9">IDebugProcess3_GetInfo</name><parameter_list pos:line="9731" pos:column="31">(<param><type><name pos:line="9731" pos:column="32">This</name></type></param>,<param><type><name pos:line="9731" pos:column="37">Fields</name></type></param>,<param><type><name pos:line="9731" pos:column="44">pProcessInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9732" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,Fields,pProcessInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="9734" pos:column="1">#<cpp:directive pos:line="9734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9734" pos:column="9">IDebugProcess3_EnumPrograms</name><parameter_list pos:line="9734" pos:column="36">(<param><type><name pos:line="9734" pos:column="37">This</name></type></param>,<param><type><name pos:line="9734" pos:column="42">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9735" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPrograms(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="9737" pos:column="1">#<cpp:directive pos:line="9737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9737" pos:column="9">IDebugProcess3_GetName</name><parameter_list pos:line="9737" pos:column="31">(<param><type><name pos:line="9737" pos:column="32">This</name></type></param>,<param><type><name pos:line="9737" pos:column="37">gnType</name></type></param>,<param><type><name pos:line="9737" pos:column="44">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9738" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,gnType,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="9740" pos:column="1">#<cpp:directive pos:line="9740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9740" pos:column="9">IDebugProcess3_GetServer</name><parameter_list pos:line="9740" pos:column="33">(<param><type><name pos:line="9740" pos:column="34">This</name></type></param>,<param><type><name pos:line="9740" pos:column="39">ppServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9741" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetServer(This,ppServer) )</cpp:value></cpp:define> 

<cpp:define pos:line="9743" pos:column="1">#<cpp:directive pos:line="9743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9743" pos:column="9">IDebugProcess3_Terminate</name><parameter_list pos:line="9743" pos:column="33">(<param><type><name pos:line="9743" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9744" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9746" pos:column="1">#<cpp:directive pos:line="9746" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9746" pos:column="9">IDebugProcess3_Attach</name><parameter_list pos:line="9746" pos:column="30">(<param><type><name pos:line="9746" pos:column="31">This</name></type></param>,<param><type><name pos:line="9746" pos:column="36">pCallback</name></type></param>,<param><type><name pos:line="9746" pos:column="46">rgguidSpecificEngines</name></type></param>,<param><type><name pos:line="9746" pos:column="68">celtSpecificEngines</name></type></param>,<param><type><name pos:line="9746" pos:column="88">rghrEngineAttach</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9747" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,pCallback,rgguidSpecificEngines,celtSpecificEngines,rghrEngineAttach) )</cpp:value></cpp:define> 

<cpp:define pos:line="9749" pos:column="1">#<cpp:directive pos:line="9749" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9749" pos:column="9">IDebugProcess3_CanDetach</name><parameter_list pos:line="9749" pos:column="33">(<param><type><name pos:line="9749" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9750" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDetach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9752" pos:column="1">#<cpp:directive pos:line="9752" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9752" pos:column="9">IDebugProcess3_Detach</name><parameter_list pos:line="9752" pos:column="30">(<param><type><name pos:line="9752" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9753" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9755" pos:column="1">#<cpp:directive pos:line="9755" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9755" pos:column="9">IDebugProcess3_GetPhysicalProcessId</name><parameter_list pos:line="9755" pos:column="44">(<param><type><name pos:line="9755" pos:column="45">This</name></type></param>,<param><type><name pos:line="9755" pos:column="50">pProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9756" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPhysicalProcessId(This,pProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="9758" pos:column="1">#<cpp:directive pos:line="9758" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9758" pos:column="9">IDebugProcess3_GetProcessId</name><parameter_list pos:line="9758" pos:column="36">(<param><type><name pos:line="9758" pos:column="37">This</name></type></param>,<param><type><name pos:line="9758" pos:column="42">pguidProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9759" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcessId(This,pguidProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="9761" pos:column="1">#<cpp:directive pos:line="9761" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9761" pos:column="9">IDebugProcess3_GetAttachedSessionName</name><parameter_list pos:line="9761" pos:column="46">(<param><type><name pos:line="9761" pos:column="47">This</name></type></param>,<param><type><name pos:line="9761" pos:column="52">pbstrSessionName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9762" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAttachedSessionName(This,pbstrSessionName) )</cpp:value></cpp:define> 

<cpp:define pos:line="9764" pos:column="1">#<cpp:directive pos:line="9764" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9764" pos:column="9">IDebugProcess3_EnumThreads</name><parameter_list pos:line="9764" pos:column="35">(<param><type><name pos:line="9764" pos:column="36">This</name></type></param>,<param><type><name pos:line="9764" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9765" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumThreads(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="9767" pos:column="1">#<cpp:directive pos:line="9767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9767" pos:column="9">IDebugProcess3_CauseBreak</name><parameter_list pos:line="9767" pos:column="34">(<param><type><name pos:line="9767" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9768" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9770" pos:column="1">#<cpp:directive pos:line="9770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9770" pos:column="9">IDebugProcess3_GetPort</name><parameter_list pos:line="9770" pos:column="31">(<param><type><name pos:line="9770" pos:column="32">This</name></type></param>,<param><type><name pos:line="9770" pos:column="37">ppPort</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9771" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPort(This,ppPort) )</cpp:value></cpp:define> 


<cpp:define pos:line="9774" pos:column="1">#<cpp:directive pos:line="9774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9774" pos:column="9">IDebugProcess3_Execute</name><parameter_list pos:line="9774" pos:column="31">(<param><type><name pos:line="9774" pos:column="32">This</name></type></param>,<param><type><name pos:line="9774" pos:column="37">pThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9775" pos:column="5">( (This)-&gt;lpVtbl -&gt; Execute(This,pThread) )</cpp:value></cpp:define> 

<cpp:define pos:line="9777" pos:column="1">#<cpp:directive pos:line="9777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9777" pos:column="9">IDebugProcess3_Continue</name><parameter_list pos:line="9777" pos:column="32">(<param><type><name pos:line="9777" pos:column="33">This</name></type></param>,<param><type><name pos:line="9777" pos:column="38">pThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9778" pos:column="5">( (This)-&gt;lpVtbl -&gt; Continue(This,pThread) )</cpp:value></cpp:define> 

<cpp:define pos:line="9780" pos:column="1">#<cpp:directive pos:line="9780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9780" pos:column="9">IDebugProcess3_Step</name><parameter_list pos:line="9780" pos:column="28">(<param><type><name pos:line="9780" pos:column="29">This</name></type></param>,<param><type><name pos:line="9780" pos:column="34">pThread</name></type></param>,<param><type><name pos:line="9780" pos:column="42">sk</name></type></param>,<param><type><name pos:line="9780" pos:column="45">step</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9781" pos:column="5">( (This)-&gt;lpVtbl -&gt; Step(This,pThread,sk,step) )</cpp:value></cpp:define> 

<cpp:define pos:line="9783" pos:column="1">#<cpp:directive pos:line="9783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9783" pos:column="9">IDebugProcess3_GetDebugReason</name><parameter_list pos:line="9783" pos:column="38">(<param><type><name pos:line="9783" pos:column="39">This</name></type></param>,<param><type><name pos:line="9783" pos:column="44">pReason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9784" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugReason(This,pReason) )</cpp:value></cpp:define> 

<cpp:define pos:line="9786" pos:column="1">#<cpp:directive pos:line="9786" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9786" pos:column="9">IDebugProcess3_SetHostingProcessLanguage</name><parameter_list pos:line="9786" pos:column="49">(<param><type><name pos:line="9786" pos:column="50">This</name></type></param>,<param><type><name pos:line="9786" pos:column="55">guidLang</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9787" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetHostingProcessLanguage(This,guidLang) )</cpp:value></cpp:define> 

<cpp:define pos:line="9789" pos:column="1">#<cpp:directive pos:line="9789" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9789" pos:column="9">IDebugProcess3_GetHostingProcessLanguage</name><parameter_list pos:line="9789" pos:column="49">(<param><type><name pos:line="9789" pos:column="50">This</name></type></param>,<param><type><name pos:line="9789" pos:column="55">pguidLang</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9790" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostingProcessLanguage(This,pguidLang) )</cpp:value></cpp:define> 

<cpp:define pos:line="9792" pos:column="1">#<cpp:directive pos:line="9792" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9792" pos:column="9">IDebugProcess3_DisableENC</name><parameter_list pos:line="9792" pos:column="34">(<param><type><name pos:line="9792" pos:column="35">This</name></type></param>,<param><type><name pos:line="9792" pos:column="40">reason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9793" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisableENC(This,reason) )</cpp:value></cpp:define> 

<cpp:define pos:line="9795" pos:column="1">#<cpp:directive pos:line="9795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9795" pos:column="9">IDebugProcess3_GetENCAvailableState</name><parameter_list pos:line="9795" pos:column="44">(<param><type><name pos:line="9795" pos:column="45">This</name></type></param>,<param><type><name pos:line="9795" pos:column="50">preason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9796" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCAvailableState(This,preason) )</cpp:value></cpp:define> 

<cpp:define pos:line="9798" pos:column="1">#<cpp:directive pos:line="9798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9798" pos:column="9">IDebugProcess3_GetEngineFilter</name><parameter_list pos:line="9798" pos:column="39">(<param><type><name pos:line="9798" pos:column="40">This</name></type></param>,<param><type><name pos:line="9798" pos:column="45">pEngineArray</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9799" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineFilter(This,pEngineArray) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9801" pos:column="1">#<cpp:directive pos:line="9801" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9801" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9804" pos:column="1">#<cpp:directive pos:line="9804" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9804" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9809" pos:column="1">#<cpp:directive pos:line="9809" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9809" pos:column="9">/* __IDebugProcess3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9812" pos:column="1">#<cpp:directive pos:line="9812" pos:column="2">ifndef</cpp:directive> <name pos:line="9812" pos:column="9">__IDebugProcessSecurity2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9813" pos:column="1">#<cpp:directive pos:line="9813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9813" pos:column="9">__IDebugProcessSecurity2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9815" pos:column="1">/* interface IDebugProcessSecurity2 */</comment>
<comment type="block" pos:line="9816" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="9819" pos:column="1">EXTERN_C</name> <specifier pos:line="9819" pos:column="10">const</specifier> <name pos:line="9819" pos:column="16">IID</name></type> <name pos:line="9819" pos:column="20">IID_IDebugProcessSecurity2</name></decl>;</decl_stmt>

<cpp:if pos:line="9821" pos:column="1">#<cpp:directive pos:line="9821" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9821" pos:column="5">defined</name><argument_list pos:line="9821" pos:column="12">(<argument><expr><name pos:line="9821" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9821" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9821" pos:column="29">!</op:operator><call><name pos:line="9821" pos:column="30">defined</name><argument_list pos:line="9821" pos:column="37">(<argument><expr><name pos:line="9821" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9823" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9823" pos:column="19">(<argument pos:line="9823" pos:column="20">"fca0c35c-4c02-432b-88f7-eb277be2ba55"</argument>)</argument_list></macro>
    <label><name pos:line="9824" pos:column="5">IDebugProcessSecurity2</name> :</label> <expr_stmt><expr pos:line="9824" pos:column="30">public <name pos:line="9824" pos:column="37">IUnknown</name>
    <block pos:line="9825" pos:column="5">{
    <expr pos:line="9826" pos:column="5">public<op:operator pos:line="9826" pos:column="11">:</op:operator>
        virtual <name pos:line="9827" pos:column="17">HRESULT</name> <name pos:line="9827" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9827" pos:column="43">QueryCanSafelyAttach</name><argument_list pos:line="9827" pos:column="63">( <argument><expr><name pos:line="9827" pos:column="65">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9827" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="9827" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="9829" pos:column="9">virtual <name pos:line="9829" pos:column="17">HRESULT</name> <name pos:line="9829" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9829" pos:column="43">GetUserName</name><argument_list pos:line="9829" pos:column="54">( 
            <comment type="block" pos:line="9830" pos:column="13">/* [out] */</comment> <argument pos:line="9830" pos:column="25">__RPC__deref_out_opt BSTR *pbstrUserName</argument>)</argument_list></macro> <op:operator pos:line="9830" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9830" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9834" pos:column="1">#<cpp:directive pos:line="9834" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9834" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9836" pos:column="5">typedef <type><struct pos:line="9836" pos:column="13">struct <name pos:line="9836" pos:column="20">IDebugProcessSecurity2Vtbl</name>
    <block pos:line="9837" pos:column="5">{<public type="default" pos:line="9837" pos:column="6">
        <function_decl><type><name pos:line="9838" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9840" pos:column="9">HRESULT</name></type> ( <name pos:line="9840" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9840" pos:column="37">*</type:modifier><name pos:line="9840" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9840" pos:column="54">( 
            <param><decl><type><name pos:line="9841" pos:column="13">IDebugProcessSecurity2</name> <type:modifier pos:line="9841" pos:column="36">*</type:modifier></type> <name pos:line="9841" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="9842" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9842" pos:column="24">__RPC__in</name> <name pos:line="9842" pos:column="34">REFIID</name></type> <name pos:line="9842" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9843" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9844" pos:column="13">__RPC__deref_out</name>  <name pos:line="9844" pos:column="31">void</name> <type:modifier pos:line="9844" pos:column="36">*</type:modifier><type:modifier pos:line="9844" pos:column="37">*</type:modifier></type><name pos:line="9844" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9846" pos:column="9">ULONG</name></type> ( <name pos:line="9846" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9846" pos:column="35">*</type:modifier><name pos:line="9846" pos:column="36">AddRef</name> )<parameter_list pos:line="9846" pos:column="44">( 
            <param><decl><type><name pos:line="9847" pos:column="13">IDebugProcessSecurity2</name> <type:modifier pos:line="9847" pos:column="36">*</type:modifier></type> <name pos:line="9847" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9849" pos:column="9">ULONG</name></type> ( <name pos:line="9849" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9849" pos:column="35">*</type:modifier><name pos:line="9849" pos:column="36">Release</name> )<parameter_list pos:line="9849" pos:column="45">( 
            <param><decl><type><name pos:line="9850" pos:column="13">IDebugProcessSecurity2</name> <type:modifier pos:line="9850" pos:column="36">*</type:modifier></type> <name pos:line="9850" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9852" pos:column="9">HRESULT</name></type> ( <name pos:line="9852" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9852" pos:column="37">*</type:modifier><name pos:line="9852" pos:column="38">QueryCanSafelyAttach</name> )<parameter_list pos:line="9852" pos:column="60">( 
            <param><decl><type><name pos:line="9853" pos:column="13">IDebugProcessSecurity2</name> <type:modifier pos:line="9853" pos:column="36">*</type:modifier></type> <name pos:line="9853" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9855" pos:column="9">HRESULT</name></type> ( <name pos:line="9855" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9855" pos:column="37">*</type:modifier><name pos:line="9855" pos:column="38">GetUserName</name> )<parameter_list pos:line="9855" pos:column="51">( 
            <param><decl><type><name pos:line="9856" pos:column="13">IDebugProcessSecurity2</name> <type:modifier pos:line="9856" pos:column="36">*</type:modifier></type> <name pos:line="9856" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="9857" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9857" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9857" pos:column="46">BSTR</name> <type:modifier pos:line="9857" pos:column="51">*</type:modifier></type><name pos:line="9857" pos:column="52">pbstrUserName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9859" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9860" pos:column="7">IDebugProcessSecurity2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9862" pos:column="5">interface</name></type> <name pos:line="9862" pos:column="15">IDebugProcessSecurity2</name>
    <argument_list pos:line="9863" pos:column="5">{
        <argument><expr><name pos:line="9864" pos:column="9">CONST_VTBL</name> struct <name pos:line="9864" pos:column="27">IDebugProcessSecurity2Vtbl</name> <op:operator pos:line="9864" pos:column="54">*</op:operator><name pos:line="9864" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9869" pos:column="1">#<cpp:directive pos:line="9869" pos:column="2">ifdef</cpp:directive> <name pos:line="9869" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9872" pos:column="1">#<cpp:directive pos:line="9872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9872" pos:column="9">IDebugProcessSecurity2_QueryInterface</name><parameter_list pos:line="9872" pos:column="46">(<param><type><name pos:line="9872" pos:column="47">This</name></type></param>,<param><type><name pos:line="9872" pos:column="52">riid</name></type></param>,<param><type><name pos:line="9872" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9873" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9875" pos:column="1">#<cpp:directive pos:line="9875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9875" pos:column="9">IDebugProcessSecurity2_AddRef</name><parameter_list pos:line="9875" pos:column="38">(<param><type><name pos:line="9875" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9876" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9878" pos:column="1">#<cpp:directive pos:line="9878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9878" pos:column="9">IDebugProcessSecurity2_Release</name><parameter_list pos:line="9878" pos:column="39">(<param><type><name pos:line="9878" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9879" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9882" pos:column="1">#<cpp:directive pos:line="9882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9882" pos:column="9">IDebugProcessSecurity2_QueryCanSafelyAttach</name><parameter_list pos:line="9882" pos:column="52">(<param><type><name pos:line="9882" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9883" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryCanSafelyAttach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9885" pos:column="1">#<cpp:directive pos:line="9885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9885" pos:column="9">IDebugProcessSecurity2_GetUserName</name><parameter_list pos:line="9885" pos:column="43">(<param><type><name pos:line="9885" pos:column="44">This</name></type></param>,<param><type><name pos:line="9885" pos:column="49">pbstrUserName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9886" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetUserName(This,pbstrUserName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9888" pos:column="1">#<cpp:directive pos:line="9888" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9888" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9891" pos:column="1">#<cpp:directive pos:line="9891" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9891" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9896" pos:column="1">#<cpp:directive pos:line="9896" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9896" pos:column="9">/* __IDebugProcessSecurity2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9899" pos:column="1">#<cpp:directive pos:line="9899" pos:column="2">ifndef</cpp:directive> <name pos:line="9899" pos:column="9">__IDebugProgram2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9900" pos:column="1">#<cpp:directive pos:line="9900" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9900" pos:column="9">__IDebugProgram2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9902" pos:column="1">/* interface IDebugProgram2 */</comment>
<comment type="block" pos:line="9903" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="9906" pos:column="1">enum <name pos:line="9906" pos:column="6">enum_DISASSEMBLY_STREAM_SCOPE</name>
    <block pos:line="9907" pos:column="5">{	<decl><name pos:line="9907" pos:column="9">DSS_HUGE</name>	<init pos:line="9907" pos:column="25">= <expr><lit:literal type="number" pos:line="9907" pos:column="27">0x10000000</lit:literal></expr></init></decl><op:operator pos:line="9907" pos:column="37">,</op:operator>
	<decl><name pos:line="9908" pos:column="9">DSS_FUNCTION</name>	<init pos:line="9908" pos:column="25">= <expr><lit:literal type="number" pos:line="9908" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="9908" pos:column="30">,</op:operator>
	<decl><name pos:line="9909" pos:column="9">DSS_MODULE</name>	<init pos:line="9909" pos:column="25">= <expr><op:operator pos:line="9909" pos:column="27">(</op:operator> <name pos:line="9909" pos:column="29">DSS_HUGE</name> <op:operator pos:line="9909" pos:column="38">|</op:operator> <lit:literal type="number" pos:line="9909" pos:column="40">0x2</lit:literal> <op:operator pos:line="9909" pos:column="44">)</op:operator></expr></init></decl> <op:operator pos:line="9909" pos:column="46">,</op:operator>
	<decl><name pos:line="9910" pos:column="9">DSS_ALL</name>	<init pos:line="9910" pos:column="17">= <expr><op:operator pos:line="9910" pos:column="19">(</op:operator> <name pos:line="9910" pos:column="21">DSS_HUGE</name> <op:operator pos:line="9910" pos:column="30">|</op:operator> <lit:literal type="number" pos:line="9910" pos:column="32">0x3</lit:literal> <op:operator pos:line="9910" pos:column="36">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="9912" pos:column="1">typedef <type><name pos:line="9912" pos:column="9">DWORD</name></type> <name pos:line="9912" pos:column="15">DISASSEMBLY_STREAM_SCOPE</name>;</typedef>


<enum pos:line="9915" pos:column="1">enum <name pos:line="9915" pos:column="6">enum_DUMPTYPE</name>
    <block pos:line="9916" pos:column="5">{	<decl><name pos:line="9916" pos:column="9">DUMP_MINIDUMP</name>	<init pos:line="9916" pos:column="25">= <expr><lit:literal type="number" pos:line="9916" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="9916" pos:column="28">,</op:operator>
	<decl><name pos:line="9917" pos:column="9">DUMP_FULLDUMP</name>	<init pos:line="9917" pos:column="25">= <expr><op:operator pos:line="9917" pos:column="27">(</op:operator> <name pos:line="9917" pos:column="29">DUMP_MINIDUMP</name> <op:operator pos:line="9917" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="9917" pos:column="45">1</lit:literal> <op:operator pos:line="9917" pos:column="47">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="9919" pos:column="1">typedef <type><name pos:line="9919" pos:column="9">DWORD</name></type> <name pos:line="9919" pos:column="15">DUMPTYPE</name>;</typedef>

<typedef pos:line="9921" pos:column="1">typedef <type><struct pos:line="9921" pos:column="9">struct <name pos:line="9921" pos:column="16">tagCODE_PATH</name>
    <block pos:line="9922" pos:column="5">{<public type="default" pos:line="9922" pos:column="6">
    <decl_stmt><decl><type><name pos:line="9923" pos:column="5">BSTR</name></type> <name pos:line="9923" pos:column="10">bstrName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="9924" pos:column="5">IDebugCodeContext2</name> <type:modifier pos:line="9924" pos:column="24">*</type:modifier></type><name pos:line="9924" pos:column="25">pCode</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="9925" pos:column="9">CODE_PATH</name>;</typedef>


<decl_stmt><decl><type><name pos:line="9928" pos:column="1">EXTERN_C</name> <specifier pos:line="9928" pos:column="10">const</specifier> <name pos:line="9928" pos:column="16">IID</name></type> <name pos:line="9928" pos:column="20">IID_IDebugProgram2</name></decl>;</decl_stmt>

<cpp:if pos:line="9930" pos:column="1">#<cpp:directive pos:line="9930" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9930" pos:column="5">defined</name><argument_list pos:line="9930" pos:column="12">(<argument><expr><name pos:line="9930" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9930" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9930" pos:column="29">!</op:operator><call><name pos:line="9930" pos:column="30">defined</name><argument_list pos:line="9930" pos:column="37">(<argument><expr><name pos:line="9930" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9932" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9932" pos:column="19">(<argument pos:line="9932" pos:column="20">"69d172ef-f2c4-44e1-89f7-c86231e706e9"</argument>)</argument_list></macro>
    <label><name pos:line="9933" pos:column="5">IDebugProgram2</name> :</label> <expr_stmt><expr pos:line="9933" pos:column="22">public <name pos:line="9933" pos:column="29">IUnknown</name>
    <block pos:line="9934" pos:column="5">{
    <expr pos:line="9935" pos:column="5">public<op:operator pos:line="9935" pos:column="11">:</op:operator>
        virtual <name pos:line="9936" pos:column="17">HRESULT</name> <name pos:line="9936" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9936" pos:column="43">EnumThreads</name><argument_list pos:line="9936" pos:column="54">( 
            <comment type="block" pos:line="9937" pos:column="13">/* [out] */</comment> <argument pos:line="9937" pos:column="25">__RPC__deref_out_opt IEnumDebugThreads2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="9937" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="9937" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="9939" pos:column="9">virtual <name pos:line="9939" pos:column="17">HRESULT</name> <name pos:line="9939" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9939" pos:column="43">GetName</name><argument_list pos:line="9939" pos:column="50">( 
            <comment type="block" pos:line="9940" pos:column="13">/* [out] */</comment> <argument pos:line="9940" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="9940" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="9940" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="9942" pos:column="9">virtual <name pos:line="9942" pos:column="17">HRESULT</name> <name pos:line="9942" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9942" pos:column="43">GetProcess</name><argument_list pos:line="9942" pos:column="53">( 
            <comment type="block" pos:line="9943" pos:column="13">/* [out] */</comment> <argument pos:line="9943" pos:column="25">__RPC__deref_out_opt IDebugProcess2 **ppProcess</argument>)</argument_list></macro> <op:operator pos:line="9943" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="9943" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="9945" pos:column="9">virtual <name pos:line="9945" pos:column="17">HRESULT</name> <name pos:line="9945" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9945" pos:column="43">Terminate</name><argument_list pos:line="9945" pos:column="52">( <argument><expr><name pos:line="9945" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9945" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="9945" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="9947" pos:column="9">virtual <name pos:line="9947" pos:column="17">HRESULT</name> <name pos:line="9947" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9947" pos:column="43">Attach</name><argument_list pos:line="9947" pos:column="49">( 
            <comment type="block" pos:line="9948" pos:column="13">/* [in] */</comment> <argument pos:line="9948" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>)</argument_list></macro> <op:operator pos:line="9948" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="9948" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="9950" pos:column="9">virtual <name pos:line="9950" pos:column="17">HRESULT</name> <name pos:line="9950" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9950" pos:column="43">CanDetach</name><argument_list pos:line="9950" pos:column="52">( <argument><expr><name pos:line="9950" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9950" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="9950" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="9952" pos:column="9">virtual <name pos:line="9952" pos:column="17">HRESULT</name> <name pos:line="9952" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9952" pos:column="43">Detach</name><argument_list pos:line="9952" pos:column="49">( <argument><expr><name pos:line="9952" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9952" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="9952" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="9954" pos:column="9">virtual <name pos:line="9954" pos:column="17">HRESULT</name> <name pos:line="9954" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9954" pos:column="43">GetProgramId</name><argument_list pos:line="9954" pos:column="55">( 
            <comment type="block" pos:line="9955" pos:column="13">/* [out] */</comment> <argument pos:line="9955" pos:column="25">__RPC__out GUID *pguidProgramId</argument>)</argument_list></macro> <op:operator pos:line="9955" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="9955" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="9957" pos:column="9">virtual <name pos:line="9957" pos:column="17">HRESULT</name> <name pos:line="9957" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9957" pos:column="43">GetDebugProperty</name><argument_list pos:line="9957" pos:column="59">( 
            <comment type="block" pos:line="9958" pos:column="13">/* [out] */</comment> <argument pos:line="9958" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="9958" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="9958" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="9960" pos:column="9">virtual <name pos:line="9960" pos:column="17">HRESULT</name> <name pos:line="9960" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9960" pos:column="43">Execute</name><argument_list pos:line="9960" pos:column="50">( <argument><expr><name pos:line="9960" pos:column="52">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9960" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="9960" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="9962" pos:column="9">virtual <name pos:line="9962" pos:column="17">HRESULT</name> <name pos:line="9962" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9962" pos:column="43">Continue</name><argument_list pos:line="9962" pos:column="51">( 
            <comment type="block" pos:line="9963" pos:column="13">/* [in] */</comment> <argument pos:line="9963" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>)</argument_list></macro> <op:operator pos:line="9963" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="9963" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="9965" pos:column="9">virtual <name pos:line="9965" pos:column="17">HRESULT</name> <name pos:line="9965" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9965" pos:column="43">Step</name><argument_list pos:line="9965" pos:column="47">( 
            <comment type="block" pos:line="9966" pos:column="13">/* [in] */</comment> <argument pos:line="9966" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>,
            <comment type="block" pos:line="9967" pos:column="13">/* [in] */</comment> <argument pos:line="9967" pos:column="24">STEPKIND sk</argument>,
            <comment type="block" pos:line="9968" pos:column="13">/* [in] */</comment> <argument pos:line="9968" pos:column="24">STEPUNIT step</argument>)</argument_list></macro> <op:operator pos:line="9968" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="9968" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="9970" pos:column="9">virtual <name pos:line="9970" pos:column="17">HRESULT</name> <name pos:line="9970" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="9970" pos:column="43">CauseBreak</name><argument_list pos:line="9970" pos:column="53">( <argument><expr><name pos:line="9970" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="9970" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="9970" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="9972" pos:column="9">virtual <name pos:line="9972" pos:column="17">HRESULT</name> <name pos:line="9972" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9972" pos:column="43">GetEngineInfo</name><argument_list pos:line="9972" pos:column="56">( 
            <comment type="block" pos:line="9973" pos:column="13">/* [out] */</comment> <argument pos:line="9973" pos:column="25">__RPC__deref_out_opt BSTR *pbstrEngine</argument>,
            <comment type="block" pos:line="9974" pos:column="13">/* [out] */</comment> <argument pos:line="9974" pos:column="25">__RPC__out GUID *pguidEngine</argument>)</argument_list></macro> <op:operator pos:line="9974" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="9974" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="9976" pos:column="9">virtual <name pos:line="9976" pos:column="17">HRESULT</name> <name pos:line="9976" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9976" pos:column="43">EnumCodeContexts</name><argument_list pos:line="9976" pos:column="59">( 
            <comment type="block" pos:line="9977" pos:column="13">/* [in] */</comment> <argument pos:line="9977" pos:column="24">__RPC__in_opt IDebugDocumentPosition2 *pDocPos</argument>,
            <comment type="block" pos:line="9978" pos:column="13">/* [out] */</comment> <argument pos:line="9978" pos:column="25">__RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="9978" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="9978" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="9980" pos:column="9">virtual <name pos:line="9980" pos:column="17">HRESULT</name> <name pos:line="9980" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9980" pos:column="43">GetMemoryBytes</name><argument_list pos:line="9980" pos:column="57">( 
            <comment type="block" pos:line="9981" pos:column="13">/* [out] */</comment> <argument pos:line="9981" pos:column="25">__RPC__deref_out_opt IDebugMemoryBytes2 **ppMemoryBytes</argument>)</argument_list></macro> <op:operator pos:line="9981" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="9981" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="9983" pos:column="9">virtual <name pos:line="9983" pos:column="17">HRESULT</name> <name pos:line="9983" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9983" pos:column="43">GetDisassemblyStream</name><argument_list pos:line="9983" pos:column="63">( 
            <comment type="block" pos:line="9984" pos:column="13">/* [in] */</comment> <argument pos:line="9984" pos:column="24">DISASSEMBLY_STREAM_SCOPE dwScope</argument>,
            <comment type="block" pos:line="9985" pos:column="13">/* [in] */</comment> <argument pos:line="9985" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pCodeContext</argument>,
            <comment type="block" pos:line="9986" pos:column="13">/* [out] */</comment> <argument pos:line="9986" pos:column="25">__RPC__deref_out_opt IDebugDisassemblyStream2 **ppDisassemblyStream</argument>)</argument_list></macro> <op:operator pos:line="9986" pos:column="94">=</op:operator> <lit:literal type="number" pos:line="9986" pos:column="96">0</lit:literal></expr>;
        
        <expr pos:line="9988" pos:column="9">virtual <name pos:line="9988" pos:column="17">HRESULT</name> <name pos:line="9988" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9988" pos:column="43">EnumModules</name><argument_list pos:line="9988" pos:column="54">( 
            <comment type="block" pos:line="9989" pos:column="13">/* [out] */</comment> <argument pos:line="9989" pos:column="25">__RPC__deref_out_opt IEnumDebugModules2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="9989" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="9989" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="9991" pos:column="9">virtual <name pos:line="9991" pos:column="17">HRESULT</name> <name pos:line="9991" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9991" pos:column="43">GetENCUpdate</name><argument_list pos:line="9991" pos:column="55">( 
            <comment type="block" pos:line="9992" pos:column="13">/* [out] */</comment> <argument pos:line="9992" pos:column="25">__RPC__deref_out_opt IDebugENCUpdate **ppUpdate</argument>)</argument_list></macro> <op:operator pos:line="9992" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="9992" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="9994" pos:column="9">virtual <name pos:line="9994" pos:column="17">HRESULT</name> <name pos:line="9994" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="9994" pos:column="43">EnumCodePaths</name><argument_list pos:line="9994" pos:column="56">( 
            <comment type="block" pos:line="9995" pos:column="13">/* [full][in] */</comment> <argument pos:line="9995" pos:column="30">__RPC__in_opt LPCOLESTR pszHint</argument>,
            <comment type="block" pos:line="9996" pos:column="13">/* [in] */</comment> <argument pos:line="9996" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pStart</argument>,
            <comment type="block" pos:line="9997" pos:column="13">/* [in] */</comment> <argument pos:line="9997" pos:column="24">__RPC__in_opt IDebugStackFrame2 *pFrame</argument>,
            <comment type="block" pos:line="9998" pos:column="13">/* [in] */</comment> <argument pos:line="9998" pos:column="24">BOOL fSource</argument>,
            <comment type="block" pos:line="9999" pos:column="13">/* [out] */</comment> <argument pos:line="9999" pos:column="25">__RPC__deref_out_opt IEnumCodePaths2 **ppEnum</argument>,
            <comment type="block" pos:line="10000" pos:column="13">/* [out] */</comment> <argument pos:line="10000" pos:column="25">__RPC__deref_out_opt IDebugCodeContext2 **ppSafety</argument>)</argument_list></macro> <op:operator pos:line="10000" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="10000" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="10002" pos:column="9">virtual <name pos:line="10002" pos:column="17">HRESULT</name> <name pos:line="10002" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10002" pos:column="43">WriteDump</name><argument_list pos:line="10002" pos:column="52">( 
            <comment type="block" pos:line="10003" pos:column="13">/* [in] */</comment> <argument pos:line="10003" pos:column="24">DUMPTYPE DumpType</argument>,
            <comment type="block" pos:line="10004" pos:column="13">/* [in] */</comment> <argument pos:line="10004" pos:column="24">__RPC__in LPCOLESTR pszDumpUrl</argument>)</argument_list></macro> <op:operator pos:line="10004" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="10004" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10008" pos:column="1">#<cpp:directive pos:line="10008" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10008" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10010" pos:column="5">typedef <type><struct pos:line="10010" pos:column="13">struct <name pos:line="10010" pos:column="20">IDebugProgram2Vtbl</name>
    <block pos:line="10011" pos:column="5">{<public type="default" pos:line="10011" pos:column="6">
        <function_decl><type><name pos:line="10012" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10014" pos:column="9">HRESULT</name></type> ( <name pos:line="10014" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10014" pos:column="37">*</type:modifier><name pos:line="10014" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10014" pos:column="54">( 
            <param><decl><type><name pos:line="10015" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10015" pos:column="28">*</type:modifier></type> <name pos:line="10015" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10016" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10016" pos:column="24">__RPC__in</name> <name pos:line="10016" pos:column="34">REFIID</name></type> <name pos:line="10016" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10017" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10018" pos:column="13">__RPC__deref_out</name>  <name pos:line="10018" pos:column="31">void</name> <type:modifier pos:line="10018" pos:column="36">*</type:modifier><type:modifier pos:line="10018" pos:column="37">*</type:modifier></type><name pos:line="10018" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10020" pos:column="9">ULONG</name></type> ( <name pos:line="10020" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10020" pos:column="35">*</type:modifier><name pos:line="10020" pos:column="36">AddRef</name> )<parameter_list pos:line="10020" pos:column="44">( 
            <param><decl><type><name pos:line="10021" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10021" pos:column="28">*</type:modifier></type> <name pos:line="10021" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10023" pos:column="9">ULONG</name></type> ( <name pos:line="10023" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10023" pos:column="35">*</type:modifier><name pos:line="10023" pos:column="36">Release</name> )<parameter_list pos:line="10023" pos:column="45">( 
            <param><decl><type><name pos:line="10024" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10024" pos:column="28">*</type:modifier></type> <name pos:line="10024" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10026" pos:column="9">HRESULT</name></type> ( <name pos:line="10026" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10026" pos:column="37">*</type:modifier><name pos:line="10026" pos:column="38">EnumThreads</name> )<parameter_list pos:line="10026" pos:column="51">( 
            <param><decl><type><name pos:line="10027" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10027" pos:column="28">*</type:modifier></type> <name pos:line="10027" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10028" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10028" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10028" pos:column="46">IEnumDebugThreads2</name> <type:modifier pos:line="10028" pos:column="65">*</type:modifier><type:modifier pos:line="10028" pos:column="66">*</type:modifier></type><name pos:line="10028" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10030" pos:column="9">HRESULT</name></type> ( <name pos:line="10030" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10030" pos:column="37">*</type:modifier><name pos:line="10030" pos:column="38">GetName</name> )<parameter_list pos:line="10030" pos:column="47">( 
            <param><decl><type><name pos:line="10031" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10031" pos:column="28">*</type:modifier></type> <name pos:line="10031" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10032" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10032" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10032" pos:column="46">BSTR</name> <type:modifier pos:line="10032" pos:column="51">*</type:modifier></type><name pos:line="10032" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10034" pos:column="9">HRESULT</name></type> ( <name pos:line="10034" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10034" pos:column="37">*</type:modifier><name pos:line="10034" pos:column="38">GetProcess</name> )<parameter_list pos:line="10034" pos:column="50">( 
            <param><decl><type><name pos:line="10035" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10035" pos:column="28">*</type:modifier></type> <name pos:line="10035" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10036" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10036" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10036" pos:column="46">IDebugProcess2</name> <type:modifier pos:line="10036" pos:column="61">*</type:modifier><type:modifier pos:line="10036" pos:column="62">*</type:modifier></type><name pos:line="10036" pos:column="63">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10038" pos:column="9">HRESULT</name></type> ( <name pos:line="10038" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10038" pos:column="37">*</type:modifier><name pos:line="10038" pos:column="38">Terminate</name> )<parameter_list pos:line="10038" pos:column="49">( 
            <param><decl><type><name pos:line="10039" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10039" pos:column="28">*</type:modifier></type> <name pos:line="10039" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10041" pos:column="9">HRESULT</name></type> ( <name pos:line="10041" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10041" pos:column="37">*</type:modifier><name pos:line="10041" pos:column="38">Attach</name> )<parameter_list pos:line="10041" pos:column="46">( 
            <param><decl><type><name pos:line="10042" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10042" pos:column="28">*</type:modifier></type> <name pos:line="10042" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10043" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10043" pos:column="24">__RPC__in_opt</name> <name pos:line="10043" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="10043" pos:column="59">*</type:modifier></type><name pos:line="10043" pos:column="60">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10045" pos:column="9">HRESULT</name></type> ( <name pos:line="10045" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10045" pos:column="37">*</type:modifier><name pos:line="10045" pos:column="38">CanDetach</name> )<parameter_list pos:line="10045" pos:column="49">( 
            <param><decl><type><name pos:line="10046" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10046" pos:column="28">*</type:modifier></type> <name pos:line="10046" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10048" pos:column="9">HRESULT</name></type> ( <name pos:line="10048" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10048" pos:column="37">*</type:modifier><name pos:line="10048" pos:column="38">Detach</name> )<parameter_list pos:line="10048" pos:column="46">( 
            <param><decl><type><name pos:line="10049" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10049" pos:column="28">*</type:modifier></type> <name pos:line="10049" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10051" pos:column="9">HRESULT</name></type> ( <name pos:line="10051" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10051" pos:column="37">*</type:modifier><name pos:line="10051" pos:column="38">GetProgramId</name> )<parameter_list pos:line="10051" pos:column="52">( 
            <param><decl><type><name pos:line="10052" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10052" pos:column="28">*</type:modifier></type> <name pos:line="10052" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10053" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10053" pos:column="25">__RPC__out</name> <name pos:line="10053" pos:column="36">GUID</name> <type:modifier pos:line="10053" pos:column="41">*</type:modifier></type><name pos:line="10053" pos:column="42">pguidProgramId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10055" pos:column="9">HRESULT</name></type> ( <name pos:line="10055" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10055" pos:column="37">*</type:modifier><name pos:line="10055" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="10055" pos:column="56">( 
            <param><decl><type><name pos:line="10056" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10056" pos:column="28">*</type:modifier></type> <name pos:line="10056" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10057" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10057" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10057" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="10057" pos:column="62">*</type:modifier><type:modifier pos:line="10057" pos:column="63">*</type:modifier></type><name pos:line="10057" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10059" pos:column="9">HRESULT</name></type> ( <name pos:line="10059" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10059" pos:column="37">*</type:modifier><name pos:line="10059" pos:column="38">Execute</name> )<parameter_list pos:line="10059" pos:column="47">( 
            <param><decl><type><name pos:line="10060" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10060" pos:column="28">*</type:modifier></type> <name pos:line="10060" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10062" pos:column="9">HRESULT</name></type> ( <name pos:line="10062" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10062" pos:column="37">*</type:modifier><name pos:line="10062" pos:column="38">Continue</name> )<parameter_list pos:line="10062" pos:column="48">( 
            <param><decl><type><name pos:line="10063" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10063" pos:column="28">*</type:modifier></type> <name pos:line="10063" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10064" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10064" pos:column="24">__RPC__in_opt</name> <name pos:line="10064" pos:column="38">IDebugThread2</name> <type:modifier pos:line="10064" pos:column="52">*</type:modifier></type><name pos:line="10064" pos:column="53">pThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10066" pos:column="9">HRESULT</name></type> ( <name pos:line="10066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10066" pos:column="37">*</type:modifier><name pos:line="10066" pos:column="38">Step</name> )<parameter_list pos:line="10066" pos:column="44">( 
            <param><decl><type><name pos:line="10067" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10067" pos:column="28">*</type:modifier></type> <name pos:line="10067" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10068" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10068" pos:column="24">__RPC__in_opt</name> <name pos:line="10068" pos:column="38">IDebugThread2</name> <type:modifier pos:line="10068" pos:column="52">*</type:modifier></type><name pos:line="10068" pos:column="53">pThread</name></decl></param>,
            <comment type="block" pos:line="10069" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10069" pos:column="24">STEPKIND</name></type> <name pos:line="10069" pos:column="33">sk</name></decl></param>,
            <comment type="block" pos:line="10070" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10070" pos:column="24">STEPUNIT</name></type> <name pos:line="10070" pos:column="33">step</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10072" pos:column="9">HRESULT</name></type> ( <name pos:line="10072" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10072" pos:column="37">*</type:modifier><name pos:line="10072" pos:column="38">CauseBreak</name> )<parameter_list pos:line="10072" pos:column="50">( 
            <param><decl><type><name pos:line="10073" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10073" pos:column="28">*</type:modifier></type> <name pos:line="10073" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10075" pos:column="9">HRESULT</name></type> ( <name pos:line="10075" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10075" pos:column="37">*</type:modifier><name pos:line="10075" pos:column="38">GetEngineInfo</name> )<parameter_list pos:line="10075" pos:column="53">( 
            <param><decl><type><name pos:line="10076" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10076" pos:column="28">*</type:modifier></type> <name pos:line="10076" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10077" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10077" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10077" pos:column="46">BSTR</name> <type:modifier pos:line="10077" pos:column="51">*</type:modifier></type><name pos:line="10077" pos:column="52">pbstrEngine</name></decl></param>,
            <comment type="block" pos:line="10078" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10078" pos:column="25">__RPC__out</name> <name pos:line="10078" pos:column="36">GUID</name> <type:modifier pos:line="10078" pos:column="41">*</type:modifier></type><name pos:line="10078" pos:column="42">pguidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10080" pos:column="9">HRESULT</name></type> ( <name pos:line="10080" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10080" pos:column="37">*</type:modifier><name pos:line="10080" pos:column="38">EnumCodeContexts</name> )<parameter_list pos:line="10080" pos:column="56">( 
            <param><decl><type><name pos:line="10081" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10081" pos:column="28">*</type:modifier></type> <name pos:line="10081" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10082" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10082" pos:column="24">__RPC__in_opt</name> <name pos:line="10082" pos:column="38">IDebugDocumentPosition2</name> <type:modifier pos:line="10082" pos:column="62">*</type:modifier></type><name pos:line="10082" pos:column="63">pDocPos</name></decl></param>,
            <comment type="block" pos:line="10083" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10083" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10083" pos:column="46">IEnumDebugCodeContexts2</name> <type:modifier pos:line="10083" pos:column="70">*</type:modifier><type:modifier pos:line="10083" pos:column="71">*</type:modifier></type><name pos:line="10083" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10085" pos:column="9">HRESULT</name></type> ( <name pos:line="10085" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10085" pos:column="37">*</type:modifier><name pos:line="10085" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="10085" pos:column="54">( 
            <param><decl><type><name pos:line="10086" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10086" pos:column="28">*</type:modifier></type> <name pos:line="10086" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10087" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10087" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10087" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="10087" pos:column="65">*</type:modifier><type:modifier pos:line="10087" pos:column="66">*</type:modifier></type><name pos:line="10087" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10089" pos:column="9">HRESULT</name></type> ( <name pos:line="10089" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10089" pos:column="37">*</type:modifier><name pos:line="10089" pos:column="38">GetDisassemblyStream</name> )<parameter_list pos:line="10089" pos:column="60">( 
            <param><decl><type><name pos:line="10090" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10090" pos:column="28">*</type:modifier></type> <name pos:line="10090" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10091" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10091" pos:column="24">DISASSEMBLY_STREAM_SCOPE</name></type> <name pos:line="10091" pos:column="49">dwScope</name></decl></param>,
            <comment type="block" pos:line="10092" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10092" pos:column="24">__RPC__in_opt</name> <name pos:line="10092" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="10092" pos:column="57">*</type:modifier></type><name pos:line="10092" pos:column="58">pCodeContext</name></decl></param>,
            <comment type="block" pos:line="10093" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10093" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10093" pos:column="46">IDebugDisassemblyStream2</name> <type:modifier pos:line="10093" pos:column="71">*</type:modifier><type:modifier pos:line="10093" pos:column="72">*</type:modifier></type><name pos:line="10093" pos:column="73">ppDisassemblyStream</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10095" pos:column="9">HRESULT</name></type> ( <name pos:line="10095" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10095" pos:column="37">*</type:modifier><name pos:line="10095" pos:column="38">EnumModules</name> )<parameter_list pos:line="10095" pos:column="51">( 
            <param><decl><type><name pos:line="10096" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10096" pos:column="28">*</type:modifier></type> <name pos:line="10096" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10097" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10097" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10097" pos:column="46">IEnumDebugModules2</name> <type:modifier pos:line="10097" pos:column="65">*</type:modifier><type:modifier pos:line="10097" pos:column="66">*</type:modifier></type><name pos:line="10097" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10099" pos:column="9">HRESULT</name></type> ( <name pos:line="10099" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10099" pos:column="37">*</type:modifier><name pos:line="10099" pos:column="38">GetENCUpdate</name> )<parameter_list pos:line="10099" pos:column="52">( 
            <param><decl><type><name pos:line="10100" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10100" pos:column="28">*</type:modifier></type> <name pos:line="10100" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10101" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10101" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10101" pos:column="46">IDebugENCUpdate</name> <type:modifier pos:line="10101" pos:column="62">*</type:modifier><type:modifier pos:line="10101" pos:column="63">*</type:modifier></type><name pos:line="10101" pos:column="64">ppUpdate</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10103" pos:column="9">HRESULT</name></type> ( <name pos:line="10103" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10103" pos:column="37">*</type:modifier><name pos:line="10103" pos:column="38">EnumCodePaths</name> )<parameter_list pos:line="10103" pos:column="53">( 
            <param><decl><type><name pos:line="10104" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10104" pos:column="28">*</type:modifier></type> <name pos:line="10104" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10105" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="10105" pos:column="30">__RPC__in_opt</name> <name pos:line="10105" pos:column="44">LPCOLESTR</name></type> <name pos:line="10105" pos:column="54">pszHint</name></decl></param>,
            <comment type="block" pos:line="10106" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10106" pos:column="24">__RPC__in_opt</name> <name pos:line="10106" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="10106" pos:column="57">*</type:modifier></type><name pos:line="10106" pos:column="58">pStart</name></decl></param>,
            <comment type="block" pos:line="10107" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10107" pos:column="24">__RPC__in_opt</name> <name pos:line="10107" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="10107" pos:column="56">*</type:modifier></type><name pos:line="10107" pos:column="57">pFrame</name></decl></param>,
            <comment type="block" pos:line="10108" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10108" pos:column="24">BOOL</name></type> <name pos:line="10108" pos:column="29">fSource</name></decl></param>,
            <comment type="block" pos:line="10109" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10109" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10109" pos:column="46">IEnumCodePaths2</name> <type:modifier pos:line="10109" pos:column="62">*</type:modifier><type:modifier pos:line="10109" pos:column="63">*</type:modifier></type><name pos:line="10109" pos:column="64">ppEnum</name></decl></param>,
            <comment type="block" pos:line="10110" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10110" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10110" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="10110" pos:column="65">*</type:modifier><type:modifier pos:line="10110" pos:column="66">*</type:modifier></type><name pos:line="10110" pos:column="67">ppSafety</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10112" pos:column="9">HRESULT</name></type> ( <name pos:line="10112" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10112" pos:column="37">*</type:modifier><name pos:line="10112" pos:column="38">WriteDump</name> )<parameter_list pos:line="10112" pos:column="49">( 
            <param><decl><type><name pos:line="10113" pos:column="13">IDebugProgram2</name> <type:modifier pos:line="10113" pos:column="28">*</type:modifier></type> <name pos:line="10113" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10114" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10114" pos:column="24">DUMPTYPE</name></type> <name pos:line="10114" pos:column="33">DumpType</name></decl></param>,
            <comment type="block" pos:line="10115" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10115" pos:column="24">__RPC__in</name> <name pos:line="10115" pos:column="34">LPCOLESTR</name></type> <name pos:line="10115" pos:column="44">pszDumpUrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10117" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10118" pos:column="7">IDebugProgram2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10120" pos:column="5">interface</name></type> <name pos:line="10120" pos:column="15">IDebugProgram2</name>
    <argument_list pos:line="10121" pos:column="5">{
        <argument><expr><name pos:line="10122" pos:column="9">CONST_VTBL</name> struct <name pos:line="10122" pos:column="27">IDebugProgram2Vtbl</name> <op:operator pos:line="10122" pos:column="46">*</op:operator><name pos:line="10122" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10127" pos:column="1">#<cpp:directive pos:line="10127" pos:column="2">ifdef</cpp:directive> <name pos:line="10127" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10130" pos:column="1">#<cpp:directive pos:line="10130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10130" pos:column="9">IDebugProgram2_QueryInterface</name><parameter_list pos:line="10130" pos:column="38">(<param><type><name pos:line="10130" pos:column="39">This</name></type></param>,<param><type><name pos:line="10130" pos:column="44">riid</name></type></param>,<param><type><name pos:line="10130" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10131" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10133" pos:column="1">#<cpp:directive pos:line="10133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10133" pos:column="9">IDebugProgram2_AddRef</name><parameter_list pos:line="10133" pos:column="30">(<param><type><name pos:line="10133" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10134" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10136" pos:column="1">#<cpp:directive pos:line="10136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10136" pos:column="9">IDebugProgram2_Release</name><parameter_list pos:line="10136" pos:column="31">(<param><type><name pos:line="10136" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10137" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10140" pos:column="1">#<cpp:directive pos:line="10140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10140" pos:column="9">IDebugProgram2_EnumThreads</name><parameter_list pos:line="10140" pos:column="35">(<param><type><name pos:line="10140" pos:column="36">This</name></type></param>,<param><type><name pos:line="10140" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10141" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumThreads(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="10143" pos:column="1">#<cpp:directive pos:line="10143" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10143" pos:column="9">IDebugProgram2_GetName</name><parameter_list pos:line="10143" pos:column="31">(<param><type><name pos:line="10143" pos:column="32">This</name></type></param>,<param><type><name pos:line="10143" pos:column="37">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10144" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="10146" pos:column="1">#<cpp:directive pos:line="10146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10146" pos:column="9">IDebugProgram2_GetProcess</name><parameter_list pos:line="10146" pos:column="34">(<param><type><name pos:line="10146" pos:column="35">This</name></type></param>,<param><type><name pos:line="10146" pos:column="40">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10147" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcess(This,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="10149" pos:column="1">#<cpp:directive pos:line="10149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10149" pos:column="9">IDebugProgram2_Terminate</name><parameter_list pos:line="10149" pos:column="33">(<param><type><name pos:line="10149" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10150" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10152" pos:column="1">#<cpp:directive pos:line="10152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10152" pos:column="9">IDebugProgram2_Attach</name><parameter_list pos:line="10152" pos:column="30">(<param><type><name pos:line="10152" pos:column="31">This</name></type></param>,<param><type><name pos:line="10152" pos:column="36">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10153" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="10155" pos:column="1">#<cpp:directive pos:line="10155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10155" pos:column="9">IDebugProgram2_CanDetach</name><parameter_list pos:line="10155" pos:column="33">(<param><type><name pos:line="10155" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10156" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDetach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10158" pos:column="1">#<cpp:directive pos:line="10158" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10158" pos:column="9">IDebugProgram2_Detach</name><parameter_list pos:line="10158" pos:column="30">(<param><type><name pos:line="10158" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10159" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10161" pos:column="1">#<cpp:directive pos:line="10161" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10161" pos:column="9">IDebugProgram2_GetProgramId</name><parameter_list pos:line="10161" pos:column="36">(<param><type><name pos:line="10161" pos:column="37">This</name></type></param>,<param><type><name pos:line="10161" pos:column="42">pguidProgramId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10162" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProgramId(This,pguidProgramId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10164" pos:column="1">#<cpp:directive pos:line="10164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10164" pos:column="9">IDebugProgram2_GetDebugProperty</name><parameter_list pos:line="10164" pos:column="40">(<param><type><name pos:line="10164" pos:column="41">This</name></type></param>,<param><type><name pos:line="10164" pos:column="46">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10165" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="10167" pos:column="1">#<cpp:directive pos:line="10167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10167" pos:column="9">IDebugProgram2_Execute</name><parameter_list pos:line="10167" pos:column="31">(<param><type><name pos:line="10167" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10168" pos:column="5">( (This)-&gt;lpVtbl -&gt; Execute(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10170" pos:column="1">#<cpp:directive pos:line="10170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10170" pos:column="9">IDebugProgram2_Continue</name><parameter_list pos:line="10170" pos:column="32">(<param><type><name pos:line="10170" pos:column="33">This</name></type></param>,<param><type><name pos:line="10170" pos:column="38">pThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10171" pos:column="5">( (This)-&gt;lpVtbl -&gt; Continue(This,pThread) )</cpp:value></cpp:define> 

<cpp:define pos:line="10173" pos:column="1">#<cpp:directive pos:line="10173" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10173" pos:column="9">IDebugProgram2_Step</name><parameter_list pos:line="10173" pos:column="28">(<param><type><name pos:line="10173" pos:column="29">This</name></type></param>,<param><type><name pos:line="10173" pos:column="34">pThread</name></type></param>,<param><type><name pos:line="10173" pos:column="42">sk</name></type></param>,<param><type><name pos:line="10173" pos:column="45">step</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10174" pos:column="5">( (This)-&gt;lpVtbl -&gt; Step(This,pThread,sk,step) )</cpp:value></cpp:define> 

<cpp:define pos:line="10176" pos:column="1">#<cpp:directive pos:line="10176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10176" pos:column="9">IDebugProgram2_CauseBreak</name><parameter_list pos:line="10176" pos:column="34">(<param><type><name pos:line="10176" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10177" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10179" pos:column="1">#<cpp:directive pos:line="10179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10179" pos:column="9">IDebugProgram2_GetEngineInfo</name><parameter_list pos:line="10179" pos:column="37">(<param><type><name pos:line="10179" pos:column="38">This</name></type></param>,<param><type><name pos:line="10179" pos:column="43">pbstrEngine</name></type></param>,<param><type><name pos:line="10179" pos:column="55">pguidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10180" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineInfo(This,pbstrEngine,pguidEngine) )</cpp:value></cpp:define> 

<cpp:define pos:line="10182" pos:column="1">#<cpp:directive pos:line="10182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10182" pos:column="9">IDebugProgram2_EnumCodeContexts</name><parameter_list pos:line="10182" pos:column="40">(<param><type><name pos:line="10182" pos:column="41">This</name></type></param>,<param><type><name pos:line="10182" pos:column="46">pDocPos</name></type></param>,<param><type><name pos:line="10182" pos:column="54">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10183" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodeContexts(This,pDocPos,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="10185" pos:column="1">#<cpp:directive pos:line="10185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10185" pos:column="9">IDebugProgram2_GetMemoryBytes</name><parameter_list pos:line="10185" pos:column="38">(<param><type><name pos:line="10185" pos:column="39">This</name></type></param>,<param><type><name pos:line="10185" pos:column="44">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10186" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="10188" pos:column="1">#<cpp:directive pos:line="10188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10188" pos:column="9">IDebugProgram2_GetDisassemblyStream</name><parameter_list pos:line="10188" pos:column="44">(<param><type><name pos:line="10188" pos:column="45">This</name></type></param>,<param><type><name pos:line="10188" pos:column="50">dwScope</name></type></param>,<param><type><name pos:line="10188" pos:column="58">pCodeContext</name></type></param>,<param><type><name pos:line="10188" pos:column="71">ppDisassemblyStream</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10189" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDisassemblyStream(This,dwScope,pCodeContext,ppDisassemblyStream) )</cpp:value></cpp:define> 

<cpp:define pos:line="10191" pos:column="1">#<cpp:directive pos:line="10191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10191" pos:column="9">IDebugProgram2_EnumModules</name><parameter_list pos:line="10191" pos:column="35">(<param><type><name pos:line="10191" pos:column="36">This</name></type></param>,<param><type><name pos:line="10191" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10192" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumModules(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="10194" pos:column="1">#<cpp:directive pos:line="10194" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10194" pos:column="9">IDebugProgram2_GetENCUpdate</name><parameter_list pos:line="10194" pos:column="36">(<param><type><name pos:line="10194" pos:column="37">This</name></type></param>,<param><type><name pos:line="10194" pos:column="42">ppUpdate</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10195" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCUpdate(This,ppUpdate) )</cpp:value></cpp:define> 

<cpp:define pos:line="10197" pos:column="1">#<cpp:directive pos:line="10197" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10197" pos:column="9">IDebugProgram2_EnumCodePaths</name><parameter_list pos:line="10197" pos:column="37">(<param><type><name pos:line="10197" pos:column="38">This</name></type></param>,<param><type><name pos:line="10197" pos:column="43">pszHint</name></type></param>,<param><type><name pos:line="10197" pos:column="51">pStart</name></type></param>,<param><type><name pos:line="10197" pos:column="58">pFrame</name></type></param>,<param><type><name pos:line="10197" pos:column="65">fSource</name></type></param>,<param><type><name pos:line="10197" pos:column="73">ppEnum</name></type></param>,<param><type><name pos:line="10197" pos:column="80">ppSafety</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10198" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodePaths(This,pszHint,pStart,pFrame,fSource,ppEnum,ppSafety) )</cpp:value></cpp:define> 

<cpp:define pos:line="10200" pos:column="1">#<cpp:directive pos:line="10200" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10200" pos:column="9">IDebugProgram2_WriteDump</name><parameter_list pos:line="10200" pos:column="33">(<param><type><name pos:line="10200" pos:column="34">This</name></type></param>,<param><type><name pos:line="10200" pos:column="39">DumpType</name></type></param>,<param><type><name pos:line="10200" pos:column="48">pszDumpUrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10201" pos:column="5">( (This)-&gt;lpVtbl -&gt; WriteDump(This,DumpType,pszDumpUrl) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10203" pos:column="1">#<cpp:directive pos:line="10203" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10203" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10206" pos:column="1">#<cpp:directive pos:line="10206" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10206" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10211" pos:column="1">#<cpp:directive pos:line="10211" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10211" pos:column="9">/* __IDebugProgram2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10214" pos:column="1">#<cpp:directive pos:line="10214" pos:column="2">ifndef</cpp:directive> <name pos:line="10214" pos:column="9">__IDebugProgram3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10215" pos:column="1">#<cpp:directive pos:line="10215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10215" pos:column="9">__IDebugProgram3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10217" pos:column="1">/* interface IDebugProgram3 */</comment>
<comment type="block" pos:line="10218" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10221" pos:column="1">EXTERN_C</name> <specifier pos:line="10221" pos:column="10">const</specifier> <name pos:line="10221" pos:column="16">IID</name></type> <name pos:line="10221" pos:column="20">IID_IDebugProgram3</name></decl>;</decl_stmt>

<cpp:if pos:line="10223" pos:column="1">#<cpp:directive pos:line="10223" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10223" pos:column="5">defined</name><argument_list pos:line="10223" pos:column="12">(<argument><expr><name pos:line="10223" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10223" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10223" pos:column="29">!</op:operator><call><name pos:line="10223" pos:column="30">defined</name><argument_list pos:line="10223" pos:column="37">(<argument><expr><name pos:line="10223" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10225" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10225" pos:column="19">(<argument pos:line="10225" pos:column="20">"7CF3EC7F-AC62-4cd6-BB30-39A464CB52CB"</argument>)</argument_list></macro>
    <label><name pos:line="10226" pos:column="5">IDebugProgram3</name> :</label> <expr_stmt><expr pos:line="10226" pos:column="22">public <name pos:line="10226" pos:column="29">IDebugProgram2</name>
    <block pos:line="10227" pos:column="5">{
    <expr pos:line="10228" pos:column="5">public<op:operator pos:line="10228" pos:column="11">:</op:operator>
        virtual <name pos:line="10229" pos:column="17">HRESULT</name> <name pos:line="10229" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10229" pos:column="43">ExecuteOnThread</name><argument_list pos:line="10229" pos:column="58">( 
            <comment type="block" pos:line="10230" pos:column="13">/* [in] */</comment> <argument pos:line="10230" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>)</argument_list></macro> <op:operator pos:line="10230" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="10230" pos:column="64">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10234" pos:column="1">#<cpp:directive pos:line="10234" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10234" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10236" pos:column="5">typedef <type><struct pos:line="10236" pos:column="13">struct <name pos:line="10236" pos:column="20">IDebugProgram3Vtbl</name>
    <block pos:line="10237" pos:column="5">{<public type="default" pos:line="10237" pos:column="6">
        <function_decl><type><name pos:line="10238" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10240" pos:column="9">HRESULT</name></type> ( <name pos:line="10240" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10240" pos:column="37">*</type:modifier><name pos:line="10240" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10240" pos:column="54">( 
            <param><decl><type><name pos:line="10241" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10241" pos:column="28">*</type:modifier></type> <name pos:line="10241" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10242" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10242" pos:column="24">__RPC__in</name> <name pos:line="10242" pos:column="34">REFIID</name></type> <name pos:line="10242" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10243" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10244" pos:column="13">__RPC__deref_out</name>  <name pos:line="10244" pos:column="31">void</name> <type:modifier pos:line="10244" pos:column="36">*</type:modifier><type:modifier pos:line="10244" pos:column="37">*</type:modifier></type><name pos:line="10244" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10246" pos:column="9">ULONG</name></type> ( <name pos:line="10246" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10246" pos:column="35">*</type:modifier><name pos:line="10246" pos:column="36">AddRef</name> )<parameter_list pos:line="10246" pos:column="44">( 
            <param><decl><type><name pos:line="10247" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10247" pos:column="28">*</type:modifier></type> <name pos:line="10247" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10249" pos:column="9">ULONG</name></type> ( <name pos:line="10249" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10249" pos:column="35">*</type:modifier><name pos:line="10249" pos:column="36">Release</name> )<parameter_list pos:line="10249" pos:column="45">( 
            <param><decl><type><name pos:line="10250" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10250" pos:column="28">*</type:modifier></type> <name pos:line="10250" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10252" pos:column="9">HRESULT</name></type> ( <name pos:line="10252" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10252" pos:column="37">*</type:modifier><name pos:line="10252" pos:column="38">EnumThreads</name> )<parameter_list pos:line="10252" pos:column="51">( 
            <param><decl><type><name pos:line="10253" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10253" pos:column="28">*</type:modifier></type> <name pos:line="10253" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10254" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10254" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10254" pos:column="46">IEnumDebugThreads2</name> <type:modifier pos:line="10254" pos:column="65">*</type:modifier><type:modifier pos:line="10254" pos:column="66">*</type:modifier></type><name pos:line="10254" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10256" pos:column="9">HRESULT</name></type> ( <name pos:line="10256" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10256" pos:column="37">*</type:modifier><name pos:line="10256" pos:column="38">GetName</name> )<parameter_list pos:line="10256" pos:column="47">( 
            <param><decl><type><name pos:line="10257" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10257" pos:column="28">*</type:modifier></type> <name pos:line="10257" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10258" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10258" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10258" pos:column="46">BSTR</name> <type:modifier pos:line="10258" pos:column="51">*</type:modifier></type><name pos:line="10258" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10260" pos:column="9">HRESULT</name></type> ( <name pos:line="10260" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10260" pos:column="37">*</type:modifier><name pos:line="10260" pos:column="38">GetProcess</name> )<parameter_list pos:line="10260" pos:column="50">( 
            <param><decl><type><name pos:line="10261" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10261" pos:column="28">*</type:modifier></type> <name pos:line="10261" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10262" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10262" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10262" pos:column="46">IDebugProcess2</name> <type:modifier pos:line="10262" pos:column="61">*</type:modifier><type:modifier pos:line="10262" pos:column="62">*</type:modifier></type><name pos:line="10262" pos:column="63">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10264" pos:column="9">HRESULT</name></type> ( <name pos:line="10264" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10264" pos:column="37">*</type:modifier><name pos:line="10264" pos:column="38">Terminate</name> )<parameter_list pos:line="10264" pos:column="49">( 
            <param><decl><type><name pos:line="10265" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10265" pos:column="28">*</type:modifier></type> <name pos:line="10265" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10267" pos:column="9">HRESULT</name></type> ( <name pos:line="10267" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10267" pos:column="37">*</type:modifier><name pos:line="10267" pos:column="38">Attach</name> )<parameter_list pos:line="10267" pos:column="46">( 
            <param><decl><type><name pos:line="10268" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10268" pos:column="28">*</type:modifier></type> <name pos:line="10268" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10269" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10269" pos:column="24">__RPC__in_opt</name> <name pos:line="10269" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="10269" pos:column="59">*</type:modifier></type><name pos:line="10269" pos:column="60">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10271" pos:column="9">HRESULT</name></type> ( <name pos:line="10271" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10271" pos:column="37">*</type:modifier><name pos:line="10271" pos:column="38">CanDetach</name> )<parameter_list pos:line="10271" pos:column="49">( 
            <param><decl><type><name pos:line="10272" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10272" pos:column="28">*</type:modifier></type> <name pos:line="10272" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10274" pos:column="9">HRESULT</name></type> ( <name pos:line="10274" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10274" pos:column="37">*</type:modifier><name pos:line="10274" pos:column="38">Detach</name> )<parameter_list pos:line="10274" pos:column="46">( 
            <param><decl><type><name pos:line="10275" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10275" pos:column="28">*</type:modifier></type> <name pos:line="10275" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10277" pos:column="9">HRESULT</name></type> ( <name pos:line="10277" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10277" pos:column="37">*</type:modifier><name pos:line="10277" pos:column="38">GetProgramId</name> )<parameter_list pos:line="10277" pos:column="52">( 
            <param><decl><type><name pos:line="10278" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10278" pos:column="28">*</type:modifier></type> <name pos:line="10278" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10279" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10279" pos:column="25">__RPC__out</name> <name pos:line="10279" pos:column="36">GUID</name> <type:modifier pos:line="10279" pos:column="41">*</type:modifier></type><name pos:line="10279" pos:column="42">pguidProgramId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10281" pos:column="9">HRESULT</name></type> ( <name pos:line="10281" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10281" pos:column="37">*</type:modifier><name pos:line="10281" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="10281" pos:column="56">( 
            <param><decl><type><name pos:line="10282" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10282" pos:column="28">*</type:modifier></type> <name pos:line="10282" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10283" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10283" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10283" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="10283" pos:column="62">*</type:modifier><type:modifier pos:line="10283" pos:column="63">*</type:modifier></type><name pos:line="10283" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10285" pos:column="9">HRESULT</name></type> ( <name pos:line="10285" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10285" pos:column="37">*</type:modifier><name pos:line="10285" pos:column="38">Execute</name> )<parameter_list pos:line="10285" pos:column="47">( 
            <param><decl><type><name pos:line="10286" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10286" pos:column="28">*</type:modifier></type> <name pos:line="10286" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10288" pos:column="9">HRESULT</name></type> ( <name pos:line="10288" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10288" pos:column="37">*</type:modifier><name pos:line="10288" pos:column="38">Continue</name> )<parameter_list pos:line="10288" pos:column="48">( 
            <param><decl><type><name pos:line="10289" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10289" pos:column="28">*</type:modifier></type> <name pos:line="10289" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10290" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10290" pos:column="24">__RPC__in_opt</name> <name pos:line="10290" pos:column="38">IDebugThread2</name> <type:modifier pos:line="10290" pos:column="52">*</type:modifier></type><name pos:line="10290" pos:column="53">pThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10292" pos:column="9">HRESULT</name></type> ( <name pos:line="10292" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10292" pos:column="37">*</type:modifier><name pos:line="10292" pos:column="38">Step</name> )<parameter_list pos:line="10292" pos:column="44">( 
            <param><decl><type><name pos:line="10293" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10293" pos:column="28">*</type:modifier></type> <name pos:line="10293" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10294" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10294" pos:column="24">__RPC__in_opt</name> <name pos:line="10294" pos:column="38">IDebugThread2</name> <type:modifier pos:line="10294" pos:column="52">*</type:modifier></type><name pos:line="10294" pos:column="53">pThread</name></decl></param>,
            <comment type="block" pos:line="10295" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10295" pos:column="24">STEPKIND</name></type> <name pos:line="10295" pos:column="33">sk</name></decl></param>,
            <comment type="block" pos:line="10296" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10296" pos:column="24">STEPUNIT</name></type> <name pos:line="10296" pos:column="33">step</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10298" pos:column="9">HRESULT</name></type> ( <name pos:line="10298" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10298" pos:column="37">*</type:modifier><name pos:line="10298" pos:column="38">CauseBreak</name> )<parameter_list pos:line="10298" pos:column="50">( 
            <param><decl><type><name pos:line="10299" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10299" pos:column="28">*</type:modifier></type> <name pos:line="10299" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10301" pos:column="9">HRESULT</name></type> ( <name pos:line="10301" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10301" pos:column="37">*</type:modifier><name pos:line="10301" pos:column="38">GetEngineInfo</name> )<parameter_list pos:line="10301" pos:column="53">( 
            <param><decl><type><name pos:line="10302" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10302" pos:column="28">*</type:modifier></type> <name pos:line="10302" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10303" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10303" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10303" pos:column="46">BSTR</name> <type:modifier pos:line="10303" pos:column="51">*</type:modifier></type><name pos:line="10303" pos:column="52">pbstrEngine</name></decl></param>,
            <comment type="block" pos:line="10304" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10304" pos:column="25">__RPC__out</name> <name pos:line="10304" pos:column="36">GUID</name> <type:modifier pos:line="10304" pos:column="41">*</type:modifier></type><name pos:line="10304" pos:column="42">pguidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10306" pos:column="9">HRESULT</name></type> ( <name pos:line="10306" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10306" pos:column="37">*</type:modifier><name pos:line="10306" pos:column="38">EnumCodeContexts</name> )<parameter_list pos:line="10306" pos:column="56">( 
            <param><decl><type><name pos:line="10307" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10307" pos:column="28">*</type:modifier></type> <name pos:line="10307" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10308" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10308" pos:column="24">__RPC__in_opt</name> <name pos:line="10308" pos:column="38">IDebugDocumentPosition2</name> <type:modifier pos:line="10308" pos:column="62">*</type:modifier></type><name pos:line="10308" pos:column="63">pDocPos</name></decl></param>,
            <comment type="block" pos:line="10309" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10309" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10309" pos:column="46">IEnumDebugCodeContexts2</name> <type:modifier pos:line="10309" pos:column="70">*</type:modifier><type:modifier pos:line="10309" pos:column="71">*</type:modifier></type><name pos:line="10309" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10311" pos:column="9">HRESULT</name></type> ( <name pos:line="10311" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10311" pos:column="37">*</type:modifier><name pos:line="10311" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="10311" pos:column="54">( 
            <param><decl><type><name pos:line="10312" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10312" pos:column="28">*</type:modifier></type> <name pos:line="10312" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10313" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10313" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10313" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="10313" pos:column="65">*</type:modifier><type:modifier pos:line="10313" pos:column="66">*</type:modifier></type><name pos:line="10313" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10315" pos:column="9">HRESULT</name></type> ( <name pos:line="10315" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10315" pos:column="37">*</type:modifier><name pos:line="10315" pos:column="38">GetDisassemblyStream</name> )<parameter_list pos:line="10315" pos:column="60">( 
            <param><decl><type><name pos:line="10316" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10316" pos:column="28">*</type:modifier></type> <name pos:line="10316" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10317" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10317" pos:column="24">DISASSEMBLY_STREAM_SCOPE</name></type> <name pos:line="10317" pos:column="49">dwScope</name></decl></param>,
            <comment type="block" pos:line="10318" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10318" pos:column="24">__RPC__in_opt</name> <name pos:line="10318" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="10318" pos:column="57">*</type:modifier></type><name pos:line="10318" pos:column="58">pCodeContext</name></decl></param>,
            <comment type="block" pos:line="10319" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10319" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10319" pos:column="46">IDebugDisassemblyStream2</name> <type:modifier pos:line="10319" pos:column="71">*</type:modifier><type:modifier pos:line="10319" pos:column="72">*</type:modifier></type><name pos:line="10319" pos:column="73">ppDisassemblyStream</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10321" pos:column="9">HRESULT</name></type> ( <name pos:line="10321" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10321" pos:column="37">*</type:modifier><name pos:line="10321" pos:column="38">EnumModules</name> )<parameter_list pos:line="10321" pos:column="51">( 
            <param><decl><type><name pos:line="10322" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10322" pos:column="28">*</type:modifier></type> <name pos:line="10322" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10323" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10323" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10323" pos:column="46">IEnumDebugModules2</name> <type:modifier pos:line="10323" pos:column="65">*</type:modifier><type:modifier pos:line="10323" pos:column="66">*</type:modifier></type><name pos:line="10323" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10325" pos:column="9">HRESULT</name></type> ( <name pos:line="10325" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10325" pos:column="37">*</type:modifier><name pos:line="10325" pos:column="38">GetENCUpdate</name> )<parameter_list pos:line="10325" pos:column="52">( 
            <param><decl><type><name pos:line="10326" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10326" pos:column="28">*</type:modifier></type> <name pos:line="10326" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10327" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10327" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10327" pos:column="46">IDebugENCUpdate</name> <type:modifier pos:line="10327" pos:column="62">*</type:modifier><type:modifier pos:line="10327" pos:column="63">*</type:modifier></type><name pos:line="10327" pos:column="64">ppUpdate</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10329" pos:column="9">HRESULT</name></type> ( <name pos:line="10329" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10329" pos:column="37">*</type:modifier><name pos:line="10329" pos:column="38">EnumCodePaths</name> )<parameter_list pos:line="10329" pos:column="53">( 
            <param><decl><type><name pos:line="10330" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10330" pos:column="28">*</type:modifier></type> <name pos:line="10330" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10331" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="10331" pos:column="30">__RPC__in_opt</name> <name pos:line="10331" pos:column="44">LPCOLESTR</name></type> <name pos:line="10331" pos:column="54">pszHint</name></decl></param>,
            <comment type="block" pos:line="10332" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10332" pos:column="24">__RPC__in_opt</name> <name pos:line="10332" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="10332" pos:column="57">*</type:modifier></type><name pos:line="10332" pos:column="58">pStart</name></decl></param>,
            <comment type="block" pos:line="10333" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10333" pos:column="24">__RPC__in_opt</name> <name pos:line="10333" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="10333" pos:column="56">*</type:modifier></type><name pos:line="10333" pos:column="57">pFrame</name></decl></param>,
            <comment type="block" pos:line="10334" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10334" pos:column="24">BOOL</name></type> <name pos:line="10334" pos:column="29">fSource</name></decl></param>,
            <comment type="block" pos:line="10335" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10335" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10335" pos:column="46">IEnumCodePaths2</name> <type:modifier pos:line="10335" pos:column="62">*</type:modifier><type:modifier pos:line="10335" pos:column="63">*</type:modifier></type><name pos:line="10335" pos:column="64">ppEnum</name></decl></param>,
            <comment type="block" pos:line="10336" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10336" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10336" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="10336" pos:column="65">*</type:modifier><type:modifier pos:line="10336" pos:column="66">*</type:modifier></type><name pos:line="10336" pos:column="67">ppSafety</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10338" pos:column="9">HRESULT</name></type> ( <name pos:line="10338" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10338" pos:column="37">*</type:modifier><name pos:line="10338" pos:column="38">WriteDump</name> )<parameter_list pos:line="10338" pos:column="49">( 
            <param><decl><type><name pos:line="10339" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10339" pos:column="28">*</type:modifier></type> <name pos:line="10339" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10340" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10340" pos:column="24">DUMPTYPE</name></type> <name pos:line="10340" pos:column="33">DumpType</name></decl></param>,
            <comment type="block" pos:line="10341" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10341" pos:column="24">__RPC__in</name> <name pos:line="10341" pos:column="34">LPCOLESTR</name></type> <name pos:line="10341" pos:column="44">pszDumpUrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10343" pos:column="9">HRESULT</name></type> ( <name pos:line="10343" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10343" pos:column="37">*</type:modifier><name pos:line="10343" pos:column="38">ExecuteOnThread</name> )<parameter_list pos:line="10343" pos:column="55">( 
            <param><decl><type><name pos:line="10344" pos:column="13">IDebugProgram3</name> <type:modifier pos:line="10344" pos:column="28">*</type:modifier></type> <name pos:line="10344" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="10345" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10345" pos:column="24">__RPC__in_opt</name> <name pos:line="10345" pos:column="38">IDebugThread2</name> <type:modifier pos:line="10345" pos:column="52">*</type:modifier></type><name pos:line="10345" pos:column="53">pThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10347" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10348" pos:column="7">IDebugProgram3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10350" pos:column="5">interface</name></type> <name pos:line="10350" pos:column="15">IDebugProgram3</name>
    <argument_list pos:line="10351" pos:column="5">{
        <argument><expr><name pos:line="10352" pos:column="9">CONST_VTBL</name> struct <name pos:line="10352" pos:column="27">IDebugProgram3Vtbl</name> <op:operator pos:line="10352" pos:column="46">*</op:operator><name pos:line="10352" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10357" pos:column="1">#<cpp:directive pos:line="10357" pos:column="2">ifdef</cpp:directive> <name pos:line="10357" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10360" pos:column="1">#<cpp:directive pos:line="10360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10360" pos:column="9">IDebugProgram3_QueryInterface</name><parameter_list pos:line="10360" pos:column="38">(<param><type><name pos:line="10360" pos:column="39">This</name></type></param>,<param><type><name pos:line="10360" pos:column="44">riid</name></type></param>,<param><type><name pos:line="10360" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10361" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10363" pos:column="1">#<cpp:directive pos:line="10363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10363" pos:column="9">IDebugProgram3_AddRef</name><parameter_list pos:line="10363" pos:column="30">(<param><type><name pos:line="10363" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10364" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10366" pos:column="1">#<cpp:directive pos:line="10366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10366" pos:column="9">IDebugProgram3_Release</name><parameter_list pos:line="10366" pos:column="31">(<param><type><name pos:line="10366" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10367" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10370" pos:column="1">#<cpp:directive pos:line="10370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10370" pos:column="9">IDebugProgram3_EnumThreads</name><parameter_list pos:line="10370" pos:column="35">(<param><type><name pos:line="10370" pos:column="36">This</name></type></param>,<param><type><name pos:line="10370" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10371" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumThreads(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="10373" pos:column="1">#<cpp:directive pos:line="10373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10373" pos:column="9">IDebugProgram3_GetName</name><parameter_list pos:line="10373" pos:column="31">(<param><type><name pos:line="10373" pos:column="32">This</name></type></param>,<param><type><name pos:line="10373" pos:column="37">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10374" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="10376" pos:column="1">#<cpp:directive pos:line="10376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10376" pos:column="9">IDebugProgram3_GetProcess</name><parameter_list pos:line="10376" pos:column="34">(<param><type><name pos:line="10376" pos:column="35">This</name></type></param>,<param><type><name pos:line="10376" pos:column="40">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10377" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcess(This,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="10379" pos:column="1">#<cpp:directive pos:line="10379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10379" pos:column="9">IDebugProgram3_Terminate</name><parameter_list pos:line="10379" pos:column="33">(<param><type><name pos:line="10379" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10380" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10382" pos:column="1">#<cpp:directive pos:line="10382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10382" pos:column="9">IDebugProgram3_Attach</name><parameter_list pos:line="10382" pos:column="30">(<param><type><name pos:line="10382" pos:column="31">This</name></type></param>,<param><type><name pos:line="10382" pos:column="36">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10383" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="10385" pos:column="1">#<cpp:directive pos:line="10385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10385" pos:column="9">IDebugProgram3_CanDetach</name><parameter_list pos:line="10385" pos:column="33">(<param><type><name pos:line="10385" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10386" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDetach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10388" pos:column="1">#<cpp:directive pos:line="10388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10388" pos:column="9">IDebugProgram3_Detach</name><parameter_list pos:line="10388" pos:column="30">(<param><type><name pos:line="10388" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10389" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10391" pos:column="1">#<cpp:directive pos:line="10391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10391" pos:column="9">IDebugProgram3_GetProgramId</name><parameter_list pos:line="10391" pos:column="36">(<param><type><name pos:line="10391" pos:column="37">This</name></type></param>,<param><type><name pos:line="10391" pos:column="42">pguidProgramId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10392" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProgramId(This,pguidProgramId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10394" pos:column="1">#<cpp:directive pos:line="10394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10394" pos:column="9">IDebugProgram3_GetDebugProperty</name><parameter_list pos:line="10394" pos:column="40">(<param><type><name pos:line="10394" pos:column="41">This</name></type></param>,<param><type><name pos:line="10394" pos:column="46">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10395" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="10397" pos:column="1">#<cpp:directive pos:line="10397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10397" pos:column="9">IDebugProgram3_Execute</name><parameter_list pos:line="10397" pos:column="31">(<param><type><name pos:line="10397" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10398" pos:column="5">( (This)-&gt;lpVtbl -&gt; Execute(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10400" pos:column="1">#<cpp:directive pos:line="10400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10400" pos:column="9">IDebugProgram3_Continue</name><parameter_list pos:line="10400" pos:column="32">(<param><type><name pos:line="10400" pos:column="33">This</name></type></param>,<param><type><name pos:line="10400" pos:column="38">pThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10401" pos:column="5">( (This)-&gt;lpVtbl -&gt; Continue(This,pThread) )</cpp:value></cpp:define> 

<cpp:define pos:line="10403" pos:column="1">#<cpp:directive pos:line="10403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10403" pos:column="9">IDebugProgram3_Step</name><parameter_list pos:line="10403" pos:column="28">(<param><type><name pos:line="10403" pos:column="29">This</name></type></param>,<param><type><name pos:line="10403" pos:column="34">pThread</name></type></param>,<param><type><name pos:line="10403" pos:column="42">sk</name></type></param>,<param><type><name pos:line="10403" pos:column="45">step</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10404" pos:column="5">( (This)-&gt;lpVtbl -&gt; Step(This,pThread,sk,step) )</cpp:value></cpp:define> 

<cpp:define pos:line="10406" pos:column="1">#<cpp:directive pos:line="10406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10406" pos:column="9">IDebugProgram3_CauseBreak</name><parameter_list pos:line="10406" pos:column="34">(<param><type><name pos:line="10406" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10407" pos:column="5">( (This)-&gt;lpVtbl -&gt; CauseBreak(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10409" pos:column="1">#<cpp:directive pos:line="10409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10409" pos:column="9">IDebugProgram3_GetEngineInfo</name><parameter_list pos:line="10409" pos:column="37">(<param><type><name pos:line="10409" pos:column="38">This</name></type></param>,<param><type><name pos:line="10409" pos:column="43">pbstrEngine</name></type></param>,<param><type><name pos:line="10409" pos:column="55">pguidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10410" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineInfo(This,pbstrEngine,pguidEngine) )</cpp:value></cpp:define> 

<cpp:define pos:line="10412" pos:column="1">#<cpp:directive pos:line="10412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10412" pos:column="9">IDebugProgram3_EnumCodeContexts</name><parameter_list pos:line="10412" pos:column="40">(<param><type><name pos:line="10412" pos:column="41">This</name></type></param>,<param><type><name pos:line="10412" pos:column="46">pDocPos</name></type></param>,<param><type><name pos:line="10412" pos:column="54">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10413" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodeContexts(This,pDocPos,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="10415" pos:column="1">#<cpp:directive pos:line="10415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10415" pos:column="9">IDebugProgram3_GetMemoryBytes</name><parameter_list pos:line="10415" pos:column="38">(<param><type><name pos:line="10415" pos:column="39">This</name></type></param>,<param><type><name pos:line="10415" pos:column="44">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10416" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="10418" pos:column="1">#<cpp:directive pos:line="10418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10418" pos:column="9">IDebugProgram3_GetDisassemblyStream</name><parameter_list pos:line="10418" pos:column="44">(<param><type><name pos:line="10418" pos:column="45">This</name></type></param>,<param><type><name pos:line="10418" pos:column="50">dwScope</name></type></param>,<param><type><name pos:line="10418" pos:column="58">pCodeContext</name></type></param>,<param><type><name pos:line="10418" pos:column="71">ppDisassemblyStream</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10419" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDisassemblyStream(This,dwScope,pCodeContext,ppDisassemblyStream) )</cpp:value></cpp:define> 

<cpp:define pos:line="10421" pos:column="1">#<cpp:directive pos:line="10421" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10421" pos:column="9">IDebugProgram3_EnumModules</name><parameter_list pos:line="10421" pos:column="35">(<param><type><name pos:line="10421" pos:column="36">This</name></type></param>,<param><type><name pos:line="10421" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10422" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumModules(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="10424" pos:column="1">#<cpp:directive pos:line="10424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10424" pos:column="9">IDebugProgram3_GetENCUpdate</name><parameter_list pos:line="10424" pos:column="36">(<param><type><name pos:line="10424" pos:column="37">This</name></type></param>,<param><type><name pos:line="10424" pos:column="42">ppUpdate</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10425" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCUpdate(This,ppUpdate) )</cpp:value></cpp:define> 

<cpp:define pos:line="10427" pos:column="1">#<cpp:directive pos:line="10427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10427" pos:column="9">IDebugProgram3_EnumCodePaths</name><parameter_list pos:line="10427" pos:column="37">(<param><type><name pos:line="10427" pos:column="38">This</name></type></param>,<param><type><name pos:line="10427" pos:column="43">pszHint</name></type></param>,<param><type><name pos:line="10427" pos:column="51">pStart</name></type></param>,<param><type><name pos:line="10427" pos:column="58">pFrame</name></type></param>,<param><type><name pos:line="10427" pos:column="65">fSource</name></type></param>,<param><type><name pos:line="10427" pos:column="73">ppEnum</name></type></param>,<param><type><name pos:line="10427" pos:column="80">ppSafety</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10428" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodePaths(This,pszHint,pStart,pFrame,fSource,ppEnum,ppSafety) )</cpp:value></cpp:define> 

<cpp:define pos:line="10430" pos:column="1">#<cpp:directive pos:line="10430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10430" pos:column="9">IDebugProgram3_WriteDump</name><parameter_list pos:line="10430" pos:column="33">(<param><type><name pos:line="10430" pos:column="34">This</name></type></param>,<param><type><name pos:line="10430" pos:column="39">DumpType</name></type></param>,<param><type><name pos:line="10430" pos:column="48">pszDumpUrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10431" pos:column="5">( (This)-&gt;lpVtbl -&gt; WriteDump(This,DumpType,pszDumpUrl) )</cpp:value></cpp:define> 


<cpp:define pos:line="10434" pos:column="1">#<cpp:directive pos:line="10434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10434" pos:column="9">IDebugProgram3_ExecuteOnThread</name><parameter_list pos:line="10434" pos:column="39">(<param><type><name pos:line="10434" pos:column="40">This</name></type></param>,<param><type><name pos:line="10434" pos:column="45">pThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10435" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExecuteOnThread(This,pThread) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10437" pos:column="1">#<cpp:directive pos:line="10437" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10437" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10440" pos:column="1">#<cpp:directive pos:line="10440" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10440" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10445" pos:column="1">#<cpp:directive pos:line="10445" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10445" pos:column="9">/* __IDebugProgram3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10448" pos:column="1">#<cpp:directive pos:line="10448" pos:column="2">ifndef</cpp:directive> <name pos:line="10448" pos:column="9">__IDebugEngineProgram2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10449" pos:column="1">#<cpp:directive pos:line="10449" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10449" pos:column="9">__IDebugEngineProgram2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10451" pos:column="1">/* interface IDebugEngineProgram2 */</comment>
<comment type="block" pos:line="10452" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="10455" pos:column="1">enum <name pos:line="10455" pos:column="6">enum_WATCHFOREVAL</name>
    <block pos:line="10456" pos:column="5">{	<decl><name pos:line="10456" pos:column="9">WATCHFOREVAL_LEAF_PROGRAM</name>	<init pos:line="10456" pos:column="41">= <expr><lit:literal type="number" pos:line="10456" pos:column="43">0x10000000</lit:literal></expr></init></decl>
    }</block> ;</enum>

<decl_stmt><decl><type><name pos:line="10459" pos:column="1">EXTERN_C</name> <specifier pos:line="10459" pos:column="10">const</specifier> <name pos:line="10459" pos:column="16">IID</name></type> <name pos:line="10459" pos:column="20">IID_IDebugEngineProgram2</name></decl>;</decl_stmt>

<cpp:if pos:line="10461" pos:column="1">#<cpp:directive pos:line="10461" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10461" pos:column="5">defined</name><argument_list pos:line="10461" pos:column="12">(<argument><expr><name pos:line="10461" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10461" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10461" pos:column="29">!</op:operator><call><name pos:line="10461" pos:column="30">defined</name><argument_list pos:line="10461" pos:column="37">(<argument><expr><name pos:line="10461" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10463" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10463" pos:column="19">(<argument pos:line="10463" pos:column="20">"7ce3e768-654d-4ba7-8d95-cdaac642b141"</argument>)</argument_list></macro>
    <label><name pos:line="10464" pos:column="5">IDebugEngineProgram2</name> :</label> <expr_stmt><expr pos:line="10464" pos:column="28">public <name pos:line="10464" pos:column="35">IUnknown</name>
    <block pos:line="10465" pos:column="5">{
    <expr pos:line="10466" pos:column="5">public<op:operator pos:line="10466" pos:column="11">:</op:operator>
        virtual <name pos:line="10467" pos:column="17">HRESULT</name> <name pos:line="10467" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10467" pos:column="43">Stop</name><argument_list pos:line="10467" pos:column="47">( <argument><expr><name pos:line="10467" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="10467" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="10467" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="10469" pos:column="9">virtual <name pos:line="10469" pos:column="17">HRESULT</name> <name pos:line="10469" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10469" pos:column="43">WatchForThreadStep</name><argument_list pos:line="10469" pos:column="61">( 
            <comment type="block" pos:line="10470" pos:column="13">/* [in] */</comment> <argument pos:line="10470" pos:column="24">__RPC__in_opt IDebugProgram2 *pOriginatingProgram</argument>,
            <comment type="block" pos:line="10471" pos:column="13">/* [in] */</comment> <argument pos:line="10471" pos:column="24">DWORD dwTid</argument>,
            <comment type="block" pos:line="10472" pos:column="13">/* [in] */</comment> <argument pos:line="10472" pos:column="24">BOOL fWatch</argument>,
            <comment type="block" pos:line="10473" pos:column="13">/* [in] */</comment> <argument pos:line="10473" pos:column="24">DWORD dwFrame</argument>)</argument_list></macro> <op:operator pos:line="10473" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="10473" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="10475" pos:column="9">virtual <name pos:line="10475" pos:column="17">HRESULT</name> <name pos:line="10475" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10475" pos:column="43">WatchForExpressionEvaluationOnThread</name><argument_list pos:line="10475" pos:column="79">( 
            <comment type="block" pos:line="10476" pos:column="13">/* [in] */</comment> <argument pos:line="10476" pos:column="24">__RPC__in_opt IDebugProgram2 *pOriginatingProgram</argument>,
            <comment type="block" pos:line="10477" pos:column="13">/* [in] */</comment> <argument pos:line="10477" pos:column="24">DWORD dwTid</argument>,
            <comment type="block" pos:line="10478" pos:column="13">/* [in] */</comment> <argument pos:line="10478" pos:column="24">DWORD dwEvalFlags</argument>,
            <comment type="block" pos:line="10479" pos:column="13">/* [in] */</comment> <argument pos:line="10479" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pExprCallback</argument>,
            <comment type="block" pos:line="10480" pos:column="13">/* [in] */</comment> <argument pos:line="10480" pos:column="24">BOOL fWatch</argument>)</argument_list></macro> <op:operator pos:line="10480" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="10480" pos:column="39">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10484" pos:column="1">#<cpp:directive pos:line="10484" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10484" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10486" pos:column="5">typedef <type><struct pos:line="10486" pos:column="13">struct <name pos:line="10486" pos:column="20">IDebugEngineProgram2Vtbl</name>
    <block pos:line="10487" pos:column="5">{<public type="default" pos:line="10487" pos:column="6">
        <function_decl><type><name pos:line="10488" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10490" pos:column="9">HRESULT</name></type> ( <name pos:line="10490" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10490" pos:column="37">*</type:modifier><name pos:line="10490" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10490" pos:column="54">( 
            <param><decl><type><name pos:line="10491" pos:column="13">IDebugEngineProgram2</name> <type:modifier pos:line="10491" pos:column="34">*</type:modifier></type> <name pos:line="10491" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="10492" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10492" pos:column="24">__RPC__in</name> <name pos:line="10492" pos:column="34">REFIID</name></type> <name pos:line="10492" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10493" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10494" pos:column="13">__RPC__deref_out</name>  <name pos:line="10494" pos:column="31">void</name> <type:modifier pos:line="10494" pos:column="36">*</type:modifier><type:modifier pos:line="10494" pos:column="37">*</type:modifier></type><name pos:line="10494" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10496" pos:column="9">ULONG</name></type> ( <name pos:line="10496" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10496" pos:column="35">*</type:modifier><name pos:line="10496" pos:column="36">AddRef</name> )<parameter_list pos:line="10496" pos:column="44">( 
            <param><decl><type><name pos:line="10497" pos:column="13">IDebugEngineProgram2</name> <type:modifier pos:line="10497" pos:column="34">*</type:modifier></type> <name pos:line="10497" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10499" pos:column="9">ULONG</name></type> ( <name pos:line="10499" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10499" pos:column="35">*</type:modifier><name pos:line="10499" pos:column="36">Release</name> )<parameter_list pos:line="10499" pos:column="45">( 
            <param><decl><type><name pos:line="10500" pos:column="13">IDebugEngineProgram2</name> <type:modifier pos:line="10500" pos:column="34">*</type:modifier></type> <name pos:line="10500" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10502" pos:column="9">HRESULT</name></type> ( <name pos:line="10502" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10502" pos:column="37">*</type:modifier><name pos:line="10502" pos:column="38">Stop</name> )<parameter_list pos:line="10502" pos:column="44">( 
            <param><decl><type><name pos:line="10503" pos:column="13">IDebugEngineProgram2</name> <type:modifier pos:line="10503" pos:column="34">*</type:modifier></type> <name pos:line="10503" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10505" pos:column="9">HRESULT</name></type> ( <name pos:line="10505" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10505" pos:column="37">*</type:modifier><name pos:line="10505" pos:column="38">WatchForThreadStep</name> )<parameter_list pos:line="10505" pos:column="58">( 
            <param><decl><type><name pos:line="10506" pos:column="13">IDebugEngineProgram2</name> <type:modifier pos:line="10506" pos:column="34">*</type:modifier></type> <name pos:line="10506" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="10507" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10507" pos:column="24">__RPC__in_opt</name> <name pos:line="10507" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="10507" pos:column="53">*</type:modifier></type><name pos:line="10507" pos:column="54">pOriginatingProgram</name></decl></param>,
            <comment type="block" pos:line="10508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10508" pos:column="24">DWORD</name></type> <name pos:line="10508" pos:column="30">dwTid</name></decl></param>,
            <comment type="block" pos:line="10509" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10509" pos:column="24">BOOL</name></type> <name pos:line="10509" pos:column="29">fWatch</name></decl></param>,
            <comment type="block" pos:line="10510" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10510" pos:column="24">DWORD</name></type> <name pos:line="10510" pos:column="30">dwFrame</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10512" pos:column="9">HRESULT</name></type> ( <name pos:line="10512" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10512" pos:column="37">*</type:modifier><name pos:line="10512" pos:column="38">WatchForExpressionEvaluationOnThread</name> )<parameter_list pos:line="10512" pos:column="76">( 
            <param><decl><type><name pos:line="10513" pos:column="13">IDebugEngineProgram2</name> <type:modifier pos:line="10513" pos:column="34">*</type:modifier></type> <name pos:line="10513" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="10514" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10514" pos:column="24">__RPC__in_opt</name> <name pos:line="10514" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="10514" pos:column="53">*</type:modifier></type><name pos:line="10514" pos:column="54">pOriginatingProgram</name></decl></param>,
            <comment type="block" pos:line="10515" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10515" pos:column="24">DWORD</name></type> <name pos:line="10515" pos:column="30">dwTid</name></decl></param>,
            <comment type="block" pos:line="10516" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10516" pos:column="24">DWORD</name></type> <name pos:line="10516" pos:column="30">dwEvalFlags</name></decl></param>,
            <comment type="block" pos:line="10517" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10517" pos:column="24">__RPC__in_opt</name> <name pos:line="10517" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="10517" pos:column="59">*</type:modifier></type><name pos:line="10517" pos:column="60">pExprCallback</name></decl></param>,
            <comment type="block" pos:line="10518" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10518" pos:column="24">BOOL</name></type> <name pos:line="10518" pos:column="29">fWatch</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10520" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10521" pos:column="7">IDebugEngineProgram2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10523" pos:column="5">interface</name></type> <name pos:line="10523" pos:column="15">IDebugEngineProgram2</name>
    <argument_list pos:line="10524" pos:column="5">{
        <argument><expr><name pos:line="10525" pos:column="9">CONST_VTBL</name> struct <name pos:line="10525" pos:column="27">IDebugEngineProgram2Vtbl</name> <op:operator pos:line="10525" pos:column="52">*</op:operator><name pos:line="10525" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10530" pos:column="1">#<cpp:directive pos:line="10530" pos:column="2">ifdef</cpp:directive> <name pos:line="10530" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10533" pos:column="1">#<cpp:directive pos:line="10533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10533" pos:column="9">IDebugEngineProgram2_QueryInterface</name><parameter_list pos:line="10533" pos:column="44">(<param><type><name pos:line="10533" pos:column="45">This</name></type></param>,<param><type><name pos:line="10533" pos:column="50">riid</name></type></param>,<param><type><name pos:line="10533" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10534" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10536" pos:column="1">#<cpp:directive pos:line="10536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10536" pos:column="9">IDebugEngineProgram2_AddRef</name><parameter_list pos:line="10536" pos:column="36">(<param><type><name pos:line="10536" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10537" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10539" pos:column="1">#<cpp:directive pos:line="10539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10539" pos:column="9">IDebugEngineProgram2_Release</name><parameter_list pos:line="10539" pos:column="37">(<param><type><name pos:line="10539" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10540" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10543" pos:column="1">#<cpp:directive pos:line="10543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10543" pos:column="9">IDebugEngineProgram2_Stop</name><parameter_list pos:line="10543" pos:column="34">(<param><type><name pos:line="10543" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10544" pos:column="5">( (This)-&gt;lpVtbl -&gt; Stop(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10546" pos:column="1">#<cpp:directive pos:line="10546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10546" pos:column="9">IDebugEngineProgram2_WatchForThreadStep</name><parameter_list pos:line="10546" pos:column="48">(<param><type><name pos:line="10546" pos:column="49">This</name></type></param>,<param><type><name pos:line="10546" pos:column="54">pOriginatingProgram</name></type></param>,<param><type><name pos:line="10546" pos:column="74">dwTid</name></type></param>,<param><type><name pos:line="10546" pos:column="80">fWatch</name></type></param>,<param><type><name pos:line="10546" pos:column="87">dwFrame</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10547" pos:column="5">( (This)-&gt;lpVtbl -&gt; WatchForThreadStep(This,pOriginatingProgram,dwTid,fWatch,dwFrame) )</cpp:value></cpp:define> 

<cpp:define pos:line="10549" pos:column="1">#<cpp:directive pos:line="10549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10549" pos:column="9">IDebugEngineProgram2_WatchForExpressionEvaluationOnThread</name><parameter_list pos:line="10549" pos:column="66">(<param><type><name pos:line="10549" pos:column="67">This</name></type></param>,<param><type><name pos:line="10549" pos:column="72">pOriginatingProgram</name></type></param>,<param><type><name pos:line="10549" pos:column="92">dwTid</name></type></param>,<param><type><name pos:line="10549" pos:column="98">dwEvalFlags</name></type></param>,<param><type><name pos:line="10549" pos:column="110">pExprCallback</name></type></param>,<param><type><name pos:line="10549" pos:column="124">fWatch</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10550" pos:column="5">( (This)-&gt;lpVtbl -&gt; WatchForExpressionEvaluationOnThread(This,pOriginatingProgram,dwTid,dwEvalFlags,pExprCallback,fWatch) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10552" pos:column="1">#<cpp:directive pos:line="10552" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10552" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10555" pos:column="1">#<cpp:directive pos:line="10555" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10555" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10560" pos:column="1">#<cpp:directive pos:line="10560" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10560" pos:column="9">/* __IDebugEngineProgram2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10563" pos:column="1">#<cpp:directive pos:line="10563" pos:column="2">ifndef</cpp:directive> <name pos:line="10563" pos:column="9">__IDebugProgramHost2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10564" pos:column="1">#<cpp:directive pos:line="10564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10564" pos:column="9">__IDebugProgramHost2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10566" pos:column="1">/* interface IDebugProgramHost2 */</comment>
<comment type="block" pos:line="10567" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10570" pos:column="1">EXTERN_C</name> <specifier pos:line="10570" pos:column="10">const</specifier> <name pos:line="10570" pos:column="16">IID</name></type> <name pos:line="10570" pos:column="20">IID_IDebugProgramHost2</name></decl>;</decl_stmt>

<cpp:if pos:line="10572" pos:column="1">#<cpp:directive pos:line="10572" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10572" pos:column="5">defined</name><argument_list pos:line="10572" pos:column="12">(<argument><expr><name pos:line="10572" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10572" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10572" pos:column="29">!</op:operator><call><name pos:line="10572" pos:column="30">defined</name><argument_list pos:line="10572" pos:column="37">(<argument><expr><name pos:line="10572" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10574" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10574" pos:column="19">(<argument pos:line="10574" pos:column="20">"c99d588f-778c-44fe-8b2e-40124a738891"</argument>)</argument_list></macro>
    <label><name pos:line="10575" pos:column="5">IDebugProgramHost2</name> :</label> <expr_stmt><expr pos:line="10575" pos:column="26">public <name pos:line="10575" pos:column="33">IUnknown</name>
    <block pos:line="10576" pos:column="5">{
    <expr pos:line="10577" pos:column="5">public<op:operator pos:line="10577" pos:column="11">:</op:operator>
        virtual <name pos:line="10578" pos:column="17">HRESULT</name> <name pos:line="10578" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10578" pos:column="43">GetHostName</name><argument_list pos:line="10578" pos:column="54">( 
            <comment type="block" pos:line="10579" pos:column="13">/* [in] */</comment> <argument pos:line="10579" pos:column="24">DWORD dwType</argument>,
            <comment type="block" pos:line="10580" pos:column="13">/* [out] */</comment> <argument pos:line="10580" pos:column="25">__RPC__deref_out_opt BSTR *pbstrHostName</argument>)</argument_list></macro> <op:operator pos:line="10580" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10580" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10582" pos:column="9">virtual <name pos:line="10582" pos:column="17">HRESULT</name> <name pos:line="10582" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10582" pos:column="43">GetHostId</name><argument_list pos:line="10582" pos:column="52">( 
            <comment type="block" pos:line="10583" pos:column="13">/* [out] */</comment> <argument pos:line="10583" pos:column="25">__RPC__out AD_PROCESS_ID *pProcessId</argument>)</argument_list></macro> <op:operator pos:line="10583" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="10583" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="10585" pos:column="9">virtual <name pos:line="10585" pos:column="17">HRESULT</name> <name pos:line="10585" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10585" pos:column="43">GetHostMachineName</name><argument_list pos:line="10585" pos:column="61">( 
            <comment type="block" pos:line="10586" pos:column="13">/* [out] */</comment> <argument pos:line="10586" pos:column="25">__RPC__deref_out_opt BSTR *pbstrHostMachineName</argument>)</argument_list></macro> <op:operator pos:line="10586" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="10586" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10590" pos:column="1">#<cpp:directive pos:line="10590" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10590" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10592" pos:column="5">typedef <type><struct pos:line="10592" pos:column="13">struct <name pos:line="10592" pos:column="20">IDebugProgramHost2Vtbl</name>
    <block pos:line="10593" pos:column="5">{<public type="default" pos:line="10593" pos:column="6">
        <function_decl><type><name pos:line="10594" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10596" pos:column="9">HRESULT</name></type> ( <name pos:line="10596" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10596" pos:column="37">*</type:modifier><name pos:line="10596" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10596" pos:column="54">( 
            <param><decl><type><name pos:line="10597" pos:column="13">IDebugProgramHost2</name> <type:modifier pos:line="10597" pos:column="32">*</type:modifier></type> <name pos:line="10597" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10598" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10598" pos:column="24">__RPC__in</name> <name pos:line="10598" pos:column="34">REFIID</name></type> <name pos:line="10598" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10599" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10600" pos:column="13">__RPC__deref_out</name>  <name pos:line="10600" pos:column="31">void</name> <type:modifier pos:line="10600" pos:column="36">*</type:modifier><type:modifier pos:line="10600" pos:column="37">*</type:modifier></type><name pos:line="10600" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10602" pos:column="9">ULONG</name></type> ( <name pos:line="10602" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10602" pos:column="35">*</type:modifier><name pos:line="10602" pos:column="36">AddRef</name> )<parameter_list pos:line="10602" pos:column="44">( 
            <param><decl><type><name pos:line="10603" pos:column="13">IDebugProgramHost2</name> <type:modifier pos:line="10603" pos:column="32">*</type:modifier></type> <name pos:line="10603" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10605" pos:column="9">ULONG</name></type> ( <name pos:line="10605" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10605" pos:column="35">*</type:modifier><name pos:line="10605" pos:column="36">Release</name> )<parameter_list pos:line="10605" pos:column="45">( 
            <param><decl><type><name pos:line="10606" pos:column="13">IDebugProgramHost2</name> <type:modifier pos:line="10606" pos:column="32">*</type:modifier></type> <name pos:line="10606" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10608" pos:column="9">HRESULT</name></type> ( <name pos:line="10608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10608" pos:column="37">*</type:modifier><name pos:line="10608" pos:column="38">GetHostName</name> )<parameter_list pos:line="10608" pos:column="51">( 
            <param><decl><type><name pos:line="10609" pos:column="13">IDebugProgramHost2</name> <type:modifier pos:line="10609" pos:column="32">*</type:modifier></type> <name pos:line="10609" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10610" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10610" pos:column="24">DWORD</name></type> <name pos:line="10610" pos:column="30">dwType</name></decl></param>,
            <comment type="block" pos:line="10611" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10611" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10611" pos:column="46">BSTR</name> <type:modifier pos:line="10611" pos:column="51">*</type:modifier></type><name pos:line="10611" pos:column="52">pbstrHostName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10613" pos:column="9">HRESULT</name></type> ( <name pos:line="10613" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10613" pos:column="37">*</type:modifier><name pos:line="10613" pos:column="38">GetHostId</name> )<parameter_list pos:line="10613" pos:column="49">( 
            <param><decl><type><name pos:line="10614" pos:column="13">IDebugProgramHost2</name> <type:modifier pos:line="10614" pos:column="32">*</type:modifier></type> <name pos:line="10614" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10615" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10615" pos:column="25">__RPC__out</name> <name pos:line="10615" pos:column="36">AD_PROCESS_ID</name> <type:modifier pos:line="10615" pos:column="50">*</type:modifier></type><name pos:line="10615" pos:column="51">pProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10617" pos:column="9">HRESULT</name></type> ( <name pos:line="10617" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10617" pos:column="37">*</type:modifier><name pos:line="10617" pos:column="38">GetHostMachineName</name> )<parameter_list pos:line="10617" pos:column="58">( 
            <param><decl><type><name pos:line="10618" pos:column="13">IDebugProgramHost2</name> <type:modifier pos:line="10618" pos:column="32">*</type:modifier></type> <name pos:line="10618" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10619" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10619" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10619" pos:column="46">BSTR</name> <type:modifier pos:line="10619" pos:column="51">*</type:modifier></type><name pos:line="10619" pos:column="52">pbstrHostMachineName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10621" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10622" pos:column="7">IDebugProgramHost2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10624" pos:column="5">interface</name></type> <name pos:line="10624" pos:column="15">IDebugProgramHost2</name>
    <argument_list pos:line="10625" pos:column="5">{
        <argument><expr><name pos:line="10626" pos:column="9">CONST_VTBL</name> struct <name pos:line="10626" pos:column="27">IDebugProgramHost2Vtbl</name> <op:operator pos:line="10626" pos:column="50">*</op:operator><name pos:line="10626" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10631" pos:column="1">#<cpp:directive pos:line="10631" pos:column="2">ifdef</cpp:directive> <name pos:line="10631" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10634" pos:column="1">#<cpp:directive pos:line="10634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10634" pos:column="9">IDebugProgramHost2_QueryInterface</name><parameter_list pos:line="10634" pos:column="42">(<param><type><name pos:line="10634" pos:column="43">This</name></type></param>,<param><type><name pos:line="10634" pos:column="48">riid</name></type></param>,<param><type><name pos:line="10634" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10635" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10637" pos:column="1">#<cpp:directive pos:line="10637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10637" pos:column="9">IDebugProgramHost2_AddRef</name><parameter_list pos:line="10637" pos:column="34">(<param><type><name pos:line="10637" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10638" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10640" pos:column="1">#<cpp:directive pos:line="10640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10640" pos:column="9">IDebugProgramHost2_Release</name><parameter_list pos:line="10640" pos:column="35">(<param><type><name pos:line="10640" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10641" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10644" pos:column="1">#<cpp:directive pos:line="10644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10644" pos:column="9">IDebugProgramHost2_GetHostName</name><parameter_list pos:line="10644" pos:column="39">(<param><type><name pos:line="10644" pos:column="40">This</name></type></param>,<param><type><name pos:line="10644" pos:column="45">dwType</name></type></param>,<param><type><name pos:line="10644" pos:column="52">pbstrHostName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10645" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostName(This,dwType,pbstrHostName) )</cpp:value></cpp:define> 

<cpp:define pos:line="10647" pos:column="1">#<cpp:directive pos:line="10647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10647" pos:column="9">IDebugProgramHost2_GetHostId</name><parameter_list pos:line="10647" pos:column="37">(<param><type><name pos:line="10647" pos:column="38">This</name></type></param>,<param><type><name pos:line="10647" pos:column="43">pProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10648" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostId(This,pProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10650" pos:column="1">#<cpp:directive pos:line="10650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10650" pos:column="9">IDebugProgramHost2_GetHostMachineName</name><parameter_list pos:line="10650" pos:column="46">(<param><type><name pos:line="10650" pos:column="47">This</name></type></param>,<param><type><name pos:line="10650" pos:column="52">pbstrHostMachineName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10651" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostMachineName(This,pbstrHostMachineName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10653" pos:column="1">#<cpp:directive pos:line="10653" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10653" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10656" pos:column="1">#<cpp:directive pos:line="10656" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10656" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10661" pos:column="1">#<cpp:directive pos:line="10661" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10661" pos:column="9">/* __IDebugProgramHost2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10664" pos:column="1">#<cpp:directive pos:line="10664" pos:column="2">ifndef</cpp:directive> <name pos:line="10664" pos:column="9">__IDebugProgramNode2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10665" pos:column="1">#<cpp:directive pos:line="10665" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10665" pos:column="9">__IDebugProgramNode2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10667" pos:column="1">/* interface IDebugProgramNode2 */</comment>
<comment type="block" pos:line="10668" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="10671" pos:column="1">enum <name pos:line="10671" pos:column="6">enum_GETHOSTNAME_TYPE</name>
    <block pos:line="10672" pos:column="5">{	<decl><name pos:line="10672" pos:column="9">GHN_FRIENDLY_NAME</name>	<init pos:line="10672" pos:column="33">= <expr><lit:literal type="number" pos:line="10672" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="10672" pos:column="36">,</op:operator>
	<decl><name pos:line="10673" pos:column="9">GHN_FILE_NAME</name>	<init pos:line="10673" pos:column="25">= <expr><op:operator pos:line="10673" pos:column="27">(</op:operator> <name pos:line="10673" pos:column="29">GHN_FRIENDLY_NAME</name> <op:operator pos:line="10673" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="10673" pos:column="49">1</lit:literal> <op:operator pos:line="10673" pos:column="51">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="10675" pos:column="1">typedef <type><name pos:line="10675" pos:column="9">DWORD</name></type> <name pos:line="10675" pos:column="15">GETHOSTNAME_TYPE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="10678" pos:column="1">EXTERN_C</name> <specifier pos:line="10678" pos:column="10">const</specifier> <name pos:line="10678" pos:column="16">IID</name></type> <name pos:line="10678" pos:column="20">IID_IDebugProgramNode2</name></decl>;</decl_stmt>

<cpp:if pos:line="10680" pos:column="1">#<cpp:directive pos:line="10680" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10680" pos:column="5">defined</name><argument_list pos:line="10680" pos:column="12">(<argument><expr><name pos:line="10680" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10680" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10680" pos:column="29">!</op:operator><call><name pos:line="10680" pos:column="30">defined</name><argument_list pos:line="10680" pos:column="37">(<argument><expr><name pos:line="10680" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10682" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10682" pos:column="19">(<argument pos:line="10682" pos:column="20">"426e255c-f1ce-4d02-a931-f9a254bf7f0f"</argument>)</argument_list></macro>
    <label><name pos:line="10683" pos:column="5">IDebugProgramNode2</name> :</label> <expr_stmt><expr pos:line="10683" pos:column="26">public <name pos:line="10683" pos:column="33">IUnknown</name>
    <block pos:line="10684" pos:column="5">{
    <expr pos:line="10685" pos:column="5">public<op:operator pos:line="10685" pos:column="11">:</op:operator>
        virtual <name pos:line="10686" pos:column="17">HRESULT</name> <name pos:line="10686" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10686" pos:column="43">GetProgramName</name><argument_list pos:line="10686" pos:column="57">( 
            <comment type="block" pos:line="10687" pos:column="13">/* [out] */</comment> <argument pos:line="10687" pos:column="25">__RPC__deref_out_opt BSTR *pbstrProgramName</argument>)</argument_list></macro> <op:operator pos:line="10687" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="10687" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="10689" pos:column="9">virtual <name pos:line="10689" pos:column="17">HRESULT</name> <name pos:line="10689" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10689" pos:column="43">GetHostName</name><argument_list pos:line="10689" pos:column="54">( 
            <comment type="block" pos:line="10690" pos:column="13">/* [in] */</comment> <argument pos:line="10690" pos:column="24">GETHOSTNAME_TYPE dwHostNameType</argument>,
            <comment type="block" pos:line="10691" pos:column="13">/* [out] */</comment> <argument pos:line="10691" pos:column="25">__RPC__deref_out_opt BSTR *pbstrHostName</argument>)</argument_list></macro> <op:operator pos:line="10691" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10691" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10693" pos:column="9">virtual <name pos:line="10693" pos:column="17">HRESULT</name> <name pos:line="10693" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10693" pos:column="43">GetHostPid</name><argument_list pos:line="10693" pos:column="53">( 
            <comment type="block" pos:line="10694" pos:column="13">/* [out] */</comment> <argument pos:line="10694" pos:column="25">__RPC__out AD_PROCESS_ID *pHostProcessId</argument>)</argument_list></macro> <op:operator pos:line="10694" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="10694" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="10696" pos:column="9">virtual <name pos:line="10696" pos:column="17">HRESULT</name> <name pos:line="10696" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10696" pos:column="43">GetHostMachineName_V7</name><argument_list pos:line="10696" pos:column="64">( 
            <comment type="block" pos:line="10697" pos:column="13">/* [out] */</comment> <argument pos:line="10697" pos:column="25">__RPC__deref_out_opt BSTR *pbstrHostMachineName</argument>)</argument_list></macro> <op:operator pos:line="10697" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="10697" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="10699" pos:column="9">virtual <name pos:line="10699" pos:column="17">HRESULT</name> <name pos:line="10699" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10699" pos:column="43">Attach_V7</name><argument_list pos:line="10699" pos:column="52">( 
            <comment type="block" pos:line="10700" pos:column="13">/* [in] */</comment> <argument pos:line="10700" pos:column="24">__RPC__in_opt IDebugProgram2 *pMDMProgram</argument>,
            <comment type="block" pos:line="10701" pos:column="13">/* [in] */</comment> <argument pos:line="10701" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pCallback</argument>,
            <comment type="block" pos:line="10702" pos:column="13">/* [in] */</comment> <argument pos:line="10702" pos:column="24">DWORD dwReason</argument>)</argument_list></macro> <op:operator pos:line="10702" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="10702" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="10704" pos:column="9">virtual <name pos:line="10704" pos:column="17">HRESULT</name> <name pos:line="10704" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10704" pos:column="43">GetEngineInfo</name><argument_list pos:line="10704" pos:column="56">( 
            <comment type="block" pos:line="10705" pos:column="13">/* [out] */</comment> <argument pos:line="10705" pos:column="25">__RPC__deref_out_opt BSTR *pbstrEngine</argument>,
            <comment type="block" pos:line="10706" pos:column="13">/* [out] */</comment> <argument pos:line="10706" pos:column="25">__RPC__out GUID *pguidEngine</argument>)</argument_list></macro> <op:operator pos:line="10706" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="10706" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="10708" pos:column="9">virtual <name pos:line="10708" pos:column="17">HRESULT</name> <name pos:line="10708" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="10708" pos:column="43">DetachDebugger_V7</name><argument_list pos:line="10708" pos:column="60">( <argument><expr><name pos:line="10708" pos:column="62">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="10708" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="10708" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10712" pos:column="1">#<cpp:directive pos:line="10712" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10712" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10714" pos:column="5">typedef <type><struct pos:line="10714" pos:column="13">struct <name pos:line="10714" pos:column="20">IDebugProgramNode2Vtbl</name>
    <block pos:line="10715" pos:column="5">{<public type="default" pos:line="10715" pos:column="6">
        <function_decl><type><name pos:line="10716" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10718" pos:column="9">HRESULT</name></type> ( <name pos:line="10718" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10718" pos:column="37">*</type:modifier><name pos:line="10718" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10718" pos:column="54">( 
            <param><decl><type><name pos:line="10719" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10719" pos:column="32">*</type:modifier></type> <name pos:line="10719" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10720" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10720" pos:column="24">__RPC__in</name> <name pos:line="10720" pos:column="34">REFIID</name></type> <name pos:line="10720" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10721" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10722" pos:column="13">__RPC__deref_out</name>  <name pos:line="10722" pos:column="31">void</name> <type:modifier pos:line="10722" pos:column="36">*</type:modifier><type:modifier pos:line="10722" pos:column="37">*</type:modifier></type><name pos:line="10722" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10724" pos:column="9">ULONG</name></type> ( <name pos:line="10724" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10724" pos:column="35">*</type:modifier><name pos:line="10724" pos:column="36">AddRef</name> )<parameter_list pos:line="10724" pos:column="44">( 
            <param><decl><type><name pos:line="10725" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10725" pos:column="32">*</type:modifier></type> <name pos:line="10725" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10727" pos:column="9">ULONG</name></type> ( <name pos:line="10727" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10727" pos:column="35">*</type:modifier><name pos:line="10727" pos:column="36">Release</name> )<parameter_list pos:line="10727" pos:column="45">( 
            <param><decl><type><name pos:line="10728" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10728" pos:column="32">*</type:modifier></type> <name pos:line="10728" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10730" pos:column="9">HRESULT</name></type> ( <name pos:line="10730" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10730" pos:column="37">*</type:modifier><name pos:line="10730" pos:column="38">GetProgramName</name> )<parameter_list pos:line="10730" pos:column="54">( 
            <param><decl><type><name pos:line="10731" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10731" pos:column="32">*</type:modifier></type> <name pos:line="10731" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10732" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10732" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10732" pos:column="46">BSTR</name> <type:modifier pos:line="10732" pos:column="51">*</type:modifier></type><name pos:line="10732" pos:column="52">pbstrProgramName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10734" pos:column="9">HRESULT</name></type> ( <name pos:line="10734" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10734" pos:column="37">*</type:modifier><name pos:line="10734" pos:column="38">GetHostName</name> )<parameter_list pos:line="10734" pos:column="51">( 
            <param><decl><type><name pos:line="10735" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10735" pos:column="32">*</type:modifier></type> <name pos:line="10735" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10736" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10736" pos:column="24">GETHOSTNAME_TYPE</name></type> <name pos:line="10736" pos:column="41">dwHostNameType</name></decl></param>,
            <comment type="block" pos:line="10737" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10737" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10737" pos:column="46">BSTR</name> <type:modifier pos:line="10737" pos:column="51">*</type:modifier></type><name pos:line="10737" pos:column="52">pbstrHostName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10739" pos:column="9">HRESULT</name></type> ( <name pos:line="10739" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10739" pos:column="37">*</type:modifier><name pos:line="10739" pos:column="38">GetHostPid</name> )<parameter_list pos:line="10739" pos:column="50">( 
            <param><decl><type><name pos:line="10740" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10740" pos:column="32">*</type:modifier></type> <name pos:line="10740" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10741" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10741" pos:column="25">__RPC__out</name> <name pos:line="10741" pos:column="36">AD_PROCESS_ID</name> <type:modifier pos:line="10741" pos:column="50">*</type:modifier></type><name pos:line="10741" pos:column="51">pHostProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10743" pos:column="9">HRESULT</name></type> ( <name pos:line="10743" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10743" pos:column="37">*</type:modifier><name pos:line="10743" pos:column="38">GetHostMachineName_V7</name> )<parameter_list pos:line="10743" pos:column="61">( 
            <param><decl><type><name pos:line="10744" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10744" pos:column="32">*</type:modifier></type> <name pos:line="10744" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10745" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10745" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10745" pos:column="46">BSTR</name> <type:modifier pos:line="10745" pos:column="51">*</type:modifier></type><name pos:line="10745" pos:column="52">pbstrHostMachineName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10747" pos:column="9">HRESULT</name></type> ( <name pos:line="10747" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10747" pos:column="37">*</type:modifier><name pos:line="10747" pos:column="38">Attach_V7</name> )<parameter_list pos:line="10747" pos:column="49">( 
            <param><decl><type><name pos:line="10748" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10748" pos:column="32">*</type:modifier></type> <name pos:line="10748" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10749" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10749" pos:column="24">__RPC__in_opt</name> <name pos:line="10749" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="10749" pos:column="53">*</type:modifier></type><name pos:line="10749" pos:column="54">pMDMProgram</name></decl></param>,
            <comment type="block" pos:line="10750" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10750" pos:column="24">__RPC__in_opt</name> <name pos:line="10750" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="10750" pos:column="59">*</type:modifier></type><name pos:line="10750" pos:column="60">pCallback</name></decl></param>,
            <comment type="block" pos:line="10751" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10751" pos:column="24">DWORD</name></type> <name pos:line="10751" pos:column="30">dwReason</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10753" pos:column="9">HRESULT</name></type> ( <name pos:line="10753" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10753" pos:column="37">*</type:modifier><name pos:line="10753" pos:column="38">GetEngineInfo</name> )<parameter_list pos:line="10753" pos:column="53">( 
            <param><decl><type><name pos:line="10754" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10754" pos:column="32">*</type:modifier></type> <name pos:line="10754" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="10755" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10755" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10755" pos:column="46">BSTR</name> <type:modifier pos:line="10755" pos:column="51">*</type:modifier></type><name pos:line="10755" pos:column="52">pbstrEngine</name></decl></param>,
            <comment type="block" pos:line="10756" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10756" pos:column="25">__RPC__out</name> <name pos:line="10756" pos:column="36">GUID</name> <type:modifier pos:line="10756" pos:column="41">*</type:modifier></type><name pos:line="10756" pos:column="42">pguidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10758" pos:column="9">HRESULT</name></type> ( <name pos:line="10758" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10758" pos:column="37">*</type:modifier><name pos:line="10758" pos:column="38">DetachDebugger_V7</name> )<parameter_list pos:line="10758" pos:column="57">( 
            <param><decl><type><name pos:line="10759" pos:column="13">IDebugProgramNode2</name> <type:modifier pos:line="10759" pos:column="32">*</type:modifier></type> <name pos:line="10759" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10761" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10762" pos:column="7">IDebugProgramNode2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10764" pos:column="5">interface</name></type> <name pos:line="10764" pos:column="15">IDebugProgramNode2</name>
    <argument_list pos:line="10765" pos:column="5">{
        <argument><expr><name pos:line="10766" pos:column="9">CONST_VTBL</name> struct <name pos:line="10766" pos:column="27">IDebugProgramNode2Vtbl</name> <op:operator pos:line="10766" pos:column="50">*</op:operator><name pos:line="10766" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10771" pos:column="1">#<cpp:directive pos:line="10771" pos:column="2">ifdef</cpp:directive> <name pos:line="10771" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10774" pos:column="1">#<cpp:directive pos:line="10774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10774" pos:column="9">IDebugProgramNode2_QueryInterface</name><parameter_list pos:line="10774" pos:column="42">(<param><type><name pos:line="10774" pos:column="43">This</name></type></param>,<param><type><name pos:line="10774" pos:column="48">riid</name></type></param>,<param><type><name pos:line="10774" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10775" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10777" pos:column="1">#<cpp:directive pos:line="10777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10777" pos:column="9">IDebugProgramNode2_AddRef</name><parameter_list pos:line="10777" pos:column="34">(<param><type><name pos:line="10777" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10778" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10780" pos:column="1">#<cpp:directive pos:line="10780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10780" pos:column="9">IDebugProgramNode2_Release</name><parameter_list pos:line="10780" pos:column="35">(<param><type><name pos:line="10780" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10781" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10784" pos:column="1">#<cpp:directive pos:line="10784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10784" pos:column="9">IDebugProgramNode2_GetProgramName</name><parameter_list pos:line="10784" pos:column="42">(<param><type><name pos:line="10784" pos:column="43">This</name></type></param>,<param><type><name pos:line="10784" pos:column="48">pbstrProgramName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10785" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProgramName(This,pbstrProgramName) )</cpp:value></cpp:define> 

<cpp:define pos:line="10787" pos:column="1">#<cpp:directive pos:line="10787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10787" pos:column="9">IDebugProgramNode2_GetHostName</name><parameter_list pos:line="10787" pos:column="39">(<param><type><name pos:line="10787" pos:column="40">This</name></type></param>,<param><type><name pos:line="10787" pos:column="45">dwHostNameType</name></type></param>,<param><type><name pos:line="10787" pos:column="60">pbstrHostName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10788" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostName(This,dwHostNameType,pbstrHostName) )</cpp:value></cpp:define> 

<cpp:define pos:line="10790" pos:column="1">#<cpp:directive pos:line="10790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10790" pos:column="9">IDebugProgramNode2_GetHostPid</name><parameter_list pos:line="10790" pos:column="38">(<param><type><name pos:line="10790" pos:column="39">This</name></type></param>,<param><type><name pos:line="10790" pos:column="44">pHostProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10791" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostPid(This,pHostProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10793" pos:column="1">#<cpp:directive pos:line="10793" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10793" pos:column="9">IDebugProgramNode2_GetHostMachineName_V7</name><parameter_list pos:line="10793" pos:column="49">(<param><type><name pos:line="10793" pos:column="50">This</name></type></param>,<param><type><name pos:line="10793" pos:column="55">pbstrHostMachineName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10794" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostMachineName_V7(This,pbstrHostMachineName) )</cpp:value></cpp:define> 

<cpp:define pos:line="10796" pos:column="1">#<cpp:directive pos:line="10796" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10796" pos:column="9">IDebugProgramNode2_Attach_V7</name><parameter_list pos:line="10796" pos:column="37">(<param><type><name pos:line="10796" pos:column="38">This</name></type></param>,<param><type><name pos:line="10796" pos:column="43">pMDMProgram</name></type></param>,<param><type><name pos:line="10796" pos:column="55">pCallback</name></type></param>,<param><type><name pos:line="10796" pos:column="65">dwReason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10797" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach_V7(This,pMDMProgram,pCallback,dwReason) )</cpp:value></cpp:define> 

<cpp:define pos:line="10799" pos:column="1">#<cpp:directive pos:line="10799" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10799" pos:column="9">IDebugProgramNode2_GetEngineInfo</name><parameter_list pos:line="10799" pos:column="41">(<param><type><name pos:line="10799" pos:column="42">This</name></type></param>,<param><type><name pos:line="10799" pos:column="47">pbstrEngine</name></type></param>,<param><type><name pos:line="10799" pos:column="59">pguidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10800" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineInfo(This,pbstrEngine,pguidEngine) )</cpp:value></cpp:define> 

<cpp:define pos:line="10802" pos:column="1">#<cpp:directive pos:line="10802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10802" pos:column="9">IDebugProgramNode2_DetachDebugger_V7</name><parameter_list pos:line="10802" pos:column="45">(<param><type><name pos:line="10802" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10803" pos:column="5">( (This)-&gt;lpVtbl -&gt; DetachDebugger_V7(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10805" pos:column="1">#<cpp:directive pos:line="10805" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10805" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10808" pos:column="1">#<cpp:directive pos:line="10808" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10808" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10813" pos:column="1">#<cpp:directive pos:line="10813" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10813" pos:column="9">/* __IDebugProgramNode2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10816" pos:column="1">#<cpp:directive pos:line="10816" pos:column="2">ifndef</cpp:directive> <name pos:line="10816" pos:column="9">__IDebugProgramNodeAttach2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10817" pos:column="1">#<cpp:directive pos:line="10817" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10817" pos:column="9">__IDebugProgramNodeAttach2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10819" pos:column="1">/* interface IDebugProgramNodeAttach2 */</comment>
<comment type="block" pos:line="10820" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10823" pos:column="1">EXTERN_C</name> <specifier pos:line="10823" pos:column="10">const</specifier> <name pos:line="10823" pos:column="16">IID</name></type> <name pos:line="10823" pos:column="20">IID_IDebugProgramNodeAttach2</name></decl>;</decl_stmt>

<cpp:if pos:line="10825" pos:column="1">#<cpp:directive pos:line="10825" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10825" pos:column="5">defined</name><argument_list pos:line="10825" pos:column="12">(<argument><expr><name pos:line="10825" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10825" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10825" pos:column="29">!</op:operator><call><name pos:line="10825" pos:column="30">defined</name><argument_list pos:line="10825" pos:column="37">(<argument><expr><name pos:line="10825" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10827" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10827" pos:column="19">(<argument pos:line="10827" pos:column="20">"73faa608-5f87-4d2b-9551-8440b1cbf54c"</argument>)</argument_list></macro>
    <label><name pos:line="10828" pos:column="5">IDebugProgramNodeAttach2</name> :</label> <expr_stmt><expr pos:line="10828" pos:column="32">public <name pos:line="10828" pos:column="39">IUnknown</name>
    <block pos:line="10829" pos:column="5">{
    <expr pos:line="10830" pos:column="5">public<op:operator pos:line="10830" pos:column="11">:</op:operator>
        virtual <name pos:line="10831" pos:column="17">HRESULT</name> <name pos:line="10831" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10831" pos:column="43">OnAttach</name><argument_list pos:line="10831" pos:column="51">( 
            <comment type="block" pos:line="10832" pos:column="13">/* [in] */</comment> <argument pos:line="10832" pos:column="24">__RPC__in REFGUID guidProgramId</argument>)</argument_list></macro> <op:operator pos:line="10832" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="10832" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10836" pos:column="1">#<cpp:directive pos:line="10836" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10836" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10838" pos:column="5">typedef <type><struct pos:line="10838" pos:column="13">struct <name pos:line="10838" pos:column="20">IDebugProgramNodeAttach2Vtbl</name>
    <block pos:line="10839" pos:column="5">{<public type="default" pos:line="10839" pos:column="6">
        <function_decl><type><name pos:line="10840" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10842" pos:column="9">HRESULT</name></type> ( <name pos:line="10842" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10842" pos:column="37">*</type:modifier><name pos:line="10842" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10842" pos:column="54">( 
            <param><decl><type><name pos:line="10843" pos:column="13">IDebugProgramNodeAttach2</name> <type:modifier pos:line="10843" pos:column="38">*</type:modifier></type> <name pos:line="10843" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="10844" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10844" pos:column="24">__RPC__in</name> <name pos:line="10844" pos:column="34">REFIID</name></type> <name pos:line="10844" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10845" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10846" pos:column="13">__RPC__deref_out</name>  <name pos:line="10846" pos:column="31">void</name> <type:modifier pos:line="10846" pos:column="36">*</type:modifier><type:modifier pos:line="10846" pos:column="37">*</type:modifier></type><name pos:line="10846" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10848" pos:column="9">ULONG</name></type> ( <name pos:line="10848" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10848" pos:column="35">*</type:modifier><name pos:line="10848" pos:column="36">AddRef</name> )<parameter_list pos:line="10848" pos:column="44">( 
            <param><decl><type><name pos:line="10849" pos:column="13">IDebugProgramNodeAttach2</name> <type:modifier pos:line="10849" pos:column="38">*</type:modifier></type> <name pos:line="10849" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10851" pos:column="9">ULONG</name></type> ( <name pos:line="10851" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10851" pos:column="35">*</type:modifier><name pos:line="10851" pos:column="36">Release</name> )<parameter_list pos:line="10851" pos:column="45">( 
            <param><decl><type><name pos:line="10852" pos:column="13">IDebugProgramNodeAttach2</name> <type:modifier pos:line="10852" pos:column="38">*</type:modifier></type> <name pos:line="10852" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10854" pos:column="9">HRESULT</name></type> ( <name pos:line="10854" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10854" pos:column="37">*</type:modifier><name pos:line="10854" pos:column="38">OnAttach</name> )<parameter_list pos:line="10854" pos:column="48">( 
            <param><decl><type><name pos:line="10855" pos:column="13">IDebugProgramNodeAttach2</name> <type:modifier pos:line="10855" pos:column="38">*</type:modifier></type> <name pos:line="10855" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="10856" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10856" pos:column="24">__RPC__in</name> <name pos:line="10856" pos:column="34">REFGUID</name></type> <name pos:line="10856" pos:column="42">guidProgramId</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10858" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10859" pos:column="7">IDebugProgramNodeAttach2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10861" pos:column="5">interface</name></type> <name pos:line="10861" pos:column="15">IDebugProgramNodeAttach2</name>
    <argument_list pos:line="10862" pos:column="5">{
        <argument><expr><name pos:line="10863" pos:column="9">CONST_VTBL</name> struct <name pos:line="10863" pos:column="27">IDebugProgramNodeAttach2Vtbl</name> <op:operator pos:line="10863" pos:column="56">*</op:operator><name pos:line="10863" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10868" pos:column="1">#<cpp:directive pos:line="10868" pos:column="2">ifdef</cpp:directive> <name pos:line="10868" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10871" pos:column="1">#<cpp:directive pos:line="10871" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10871" pos:column="9">IDebugProgramNodeAttach2_QueryInterface</name><parameter_list pos:line="10871" pos:column="48">(<param><type><name pos:line="10871" pos:column="49">This</name></type></param>,<param><type><name pos:line="10871" pos:column="54">riid</name></type></param>,<param><type><name pos:line="10871" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10872" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10874" pos:column="1">#<cpp:directive pos:line="10874" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10874" pos:column="9">IDebugProgramNodeAttach2_AddRef</name><parameter_list pos:line="10874" pos:column="40">(<param><type><name pos:line="10874" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10875" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10877" pos:column="1">#<cpp:directive pos:line="10877" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10877" pos:column="9">IDebugProgramNodeAttach2_Release</name><parameter_list pos:line="10877" pos:column="41">(<param><type><name pos:line="10877" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10878" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10881" pos:column="1">#<cpp:directive pos:line="10881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10881" pos:column="9">IDebugProgramNodeAttach2_OnAttach</name><parameter_list pos:line="10881" pos:column="42">(<param><type><name pos:line="10881" pos:column="43">This</name></type></param>,<param><type><name pos:line="10881" pos:column="48">guidProgramId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10882" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnAttach(This,guidProgramId) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10884" pos:column="1">#<cpp:directive pos:line="10884" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10884" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10887" pos:column="1">#<cpp:directive pos:line="10887" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10887" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10892" pos:column="1">#<cpp:directive pos:line="10892" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10892" pos:column="9">/* __IDebugProgramNodeAttach2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10895" pos:column="1">#<cpp:directive pos:line="10895" pos:column="2">ifndef</cpp:directive> <name pos:line="10895" pos:column="9">__IDebugProgramEngines2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10896" pos:column="1">#<cpp:directive pos:line="10896" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10896" pos:column="9">__IDebugProgramEngines2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10898" pos:column="1">/* interface IDebugProgramEngines2 */</comment>
<comment type="block" pos:line="10899" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10902" pos:column="1">EXTERN_C</name> <specifier pos:line="10902" pos:column="10">const</specifier> <name pos:line="10902" pos:column="16">IID</name></type> <name pos:line="10902" pos:column="20">IID_IDebugProgramEngines2</name></decl>;</decl_stmt>

<cpp:if pos:line="10904" pos:column="1">#<cpp:directive pos:line="10904" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10904" pos:column="5">defined</name><argument_list pos:line="10904" pos:column="12">(<argument><expr><name pos:line="10904" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10904" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10904" pos:column="29">!</op:operator><call><name pos:line="10904" pos:column="30">defined</name><argument_list pos:line="10904" pos:column="37">(<argument><expr><name pos:line="10904" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10906" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10906" pos:column="19">(<argument pos:line="10906" pos:column="20">"fda24a6b-b142-447d-bbbc-8654a3d84f80"</argument>)</argument_list></macro>
    <label><name pos:line="10907" pos:column="5">IDebugProgramEngines2</name> :</label> <expr_stmt><expr pos:line="10907" pos:column="29">public <name pos:line="10907" pos:column="36">IUnknown</name>
    <block pos:line="10908" pos:column="5">{
    <expr pos:line="10909" pos:column="5">public<op:operator pos:line="10909" pos:column="11">:</op:operator>
        virtual <name pos:line="10910" pos:column="17">HRESULT</name> <name pos:line="10910" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10910" pos:column="43">EnumPossibleEngines</name><argument_list pos:line="10910" pos:column="62">( 
            <comment type="block" pos:line="10911" pos:column="13">/* [in] */</comment> <argument pos:line="10911" pos:column="24">DWORD celtBuffer</argument>,
            <comment type="block" pos:line="10912" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <argument pos:line="10912" pos:column="55">__RPC__inout_ecount_part_opt(celtBuffer, *pceltEngines) GUID *rgguidEngines</argument>,
            <comment type="block" pos:line="10913" pos:column="13">/* [out][in] */</comment> <argument pos:line="10913" pos:column="29">__RPC__inout DWORD *pceltEngines</argument>)</argument_list></macro> <op:operator pos:line="10913" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="10913" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="10915" pos:column="9">virtual <name pos:line="10915" pos:column="17">HRESULT</name> <name pos:line="10915" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="10915" pos:column="43">SetEngine</name><argument_list pos:line="10915" pos:column="52">( 
            <comment type="block" pos:line="10916" pos:column="13">/* [in] */</comment> <argument pos:line="10916" pos:column="24">__RPC__in REFGUID guidEngine</argument>)</argument_list></macro> <op:operator pos:line="10916" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="10916" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10920" pos:column="1">#<cpp:directive pos:line="10920" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10920" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10922" pos:column="5">typedef <type><struct pos:line="10922" pos:column="13">struct <name pos:line="10922" pos:column="20">IDebugProgramEngines2Vtbl</name>
    <block pos:line="10923" pos:column="5">{<public type="default" pos:line="10923" pos:column="6">
        <function_decl><type><name pos:line="10924" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10926" pos:column="9">HRESULT</name></type> ( <name pos:line="10926" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10926" pos:column="37">*</type:modifier><name pos:line="10926" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10926" pos:column="54">( 
            <param><decl><type><name pos:line="10927" pos:column="13">IDebugProgramEngines2</name> <type:modifier pos:line="10927" pos:column="35">*</type:modifier></type> <name pos:line="10927" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="10928" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10928" pos:column="24">__RPC__in</name> <name pos:line="10928" pos:column="34">REFIID</name></type> <name pos:line="10928" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10929" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10930" pos:column="13">__RPC__deref_out</name>  <name pos:line="10930" pos:column="31">void</name> <type:modifier pos:line="10930" pos:column="36">*</type:modifier><type:modifier pos:line="10930" pos:column="37">*</type:modifier></type><name pos:line="10930" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10932" pos:column="9">ULONG</name></type> ( <name pos:line="10932" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10932" pos:column="35">*</type:modifier><name pos:line="10932" pos:column="36">AddRef</name> )<parameter_list pos:line="10932" pos:column="44">( 
            <param><decl><type><name pos:line="10933" pos:column="13">IDebugProgramEngines2</name> <type:modifier pos:line="10933" pos:column="35">*</type:modifier></type> <name pos:line="10933" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10935" pos:column="9">ULONG</name></type> ( <name pos:line="10935" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10935" pos:column="35">*</type:modifier><name pos:line="10935" pos:column="36">Release</name> )<parameter_list pos:line="10935" pos:column="45">( 
            <param><decl><type><name pos:line="10936" pos:column="13">IDebugProgramEngines2</name> <type:modifier pos:line="10936" pos:column="35">*</type:modifier></type> <name pos:line="10936" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10938" pos:column="9">HRESULT</name> <argument_list pos:line="10938" pos:column="17">( <argument pos:line="10938" pos:column="19">STDMETHODCALLTYPE *EnumPossibleEngines</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10938" pos:column="59">(</op:operator> 
            <name pos:line="10939" pos:column="13">IDebugProgramEngines2</name> <op:operator pos:line="10939" pos:column="35">*</op:operator> <name pos:line="10939" pos:column="37">This</name><op:operator pos:line="10939" pos:column="41">,</op:operator>
            <comment type="block" pos:line="10940" pos:column="13">/* [in] */</comment> <name pos:line="10940" pos:column="24">DWORD</name> <name pos:line="10940" pos:column="30">celtBuffer</name><op:operator pos:line="10940" pos:column="40">,</op:operator>
            <comment type="block" pos:line="10941" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <macro><name pos:line="10941" pos:column="55">__RPC__inout_ecount_part_opt</name><argument_list pos:line="10941" pos:column="83">(<argument pos:line="10941" pos:column="84">celtBuffer</argument>, <argument pos:line="10941" pos:column="96">*pceltEngines</argument>)</argument_list></macro> <name pos:line="10941" pos:column="111">GUID</name> <op:operator pos:line="10941" pos:column="116">*</op:operator><name pos:line="10941" pos:column="117">rgguidEngines</name><op:operator pos:line="10941" pos:column="130">,</op:operator>
            <comment type="block" pos:line="10942" pos:column="13">/* [out][in] */</comment> <name pos:line="10942" pos:column="29">__RPC__inout</name> <name pos:line="10942" pos:column="42">DWORD</name> <op:operator pos:line="10942" pos:column="48">*</op:operator><name pos:line="10942" pos:column="49">pceltEngines</name><op:operator pos:line="10942" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="10944" pos:column="9">HRESULT</name></type> ( <name pos:line="10944" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10944" pos:column="37">*</type:modifier><name pos:line="10944" pos:column="38">SetEngine</name> )<parameter_list pos:line="10944" pos:column="49">( 
            <param><decl><type><name pos:line="10945" pos:column="13">IDebugProgramEngines2</name> <type:modifier pos:line="10945" pos:column="35">*</type:modifier></type> <name pos:line="10945" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="10946" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10946" pos:column="24">__RPC__in</name> <name pos:line="10946" pos:column="34">REFGUID</name></type> <name pos:line="10946" pos:column="42">guidEngine</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10948" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10949" pos:column="7">IDebugProgramEngines2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10951" pos:column="5">interface</name></type> <name pos:line="10951" pos:column="15">IDebugProgramEngines2</name>
    <argument_list pos:line="10952" pos:column="5">{
        <argument><expr><name pos:line="10953" pos:column="9">CONST_VTBL</name> struct <name pos:line="10953" pos:column="27">IDebugProgramEngines2Vtbl</name> <op:operator pos:line="10953" pos:column="53">*</op:operator><name pos:line="10953" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10958" pos:column="1">#<cpp:directive pos:line="10958" pos:column="2">ifdef</cpp:directive> <name pos:line="10958" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10961" pos:column="1">#<cpp:directive pos:line="10961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10961" pos:column="9">IDebugProgramEngines2_QueryInterface</name><parameter_list pos:line="10961" pos:column="45">(<param><type><name pos:line="10961" pos:column="46">This</name></type></param>,<param><type><name pos:line="10961" pos:column="51">riid</name></type></param>,<param><type><name pos:line="10961" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10962" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10964" pos:column="1">#<cpp:directive pos:line="10964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10964" pos:column="9">IDebugProgramEngines2_AddRef</name><parameter_list pos:line="10964" pos:column="37">(<param><type><name pos:line="10964" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10965" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10967" pos:column="1">#<cpp:directive pos:line="10967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10967" pos:column="9">IDebugProgramEngines2_Release</name><parameter_list pos:line="10967" pos:column="38">(<param><type><name pos:line="10967" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10968" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10971" pos:column="1">#<cpp:directive pos:line="10971" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10971" pos:column="9">IDebugProgramEngines2_EnumPossibleEngines</name><parameter_list pos:line="10971" pos:column="50">(<param><type><name pos:line="10971" pos:column="51">This</name></type></param>,<param><type><name pos:line="10971" pos:column="56">celtBuffer</name></type></param>,<param><type><name pos:line="10971" pos:column="67">rgguidEngines</name></type></param>,<param><type><name pos:line="10971" pos:column="81">pceltEngines</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10972" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumPossibleEngines(This,celtBuffer,rgguidEngines,pceltEngines) )</cpp:value></cpp:define> 

<cpp:define pos:line="10974" pos:column="1">#<cpp:directive pos:line="10974" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10974" pos:column="9">IDebugProgramEngines2_SetEngine</name><parameter_list pos:line="10974" pos:column="40">(<param><type><name pos:line="10974" pos:column="41">This</name></type></param>,<param><type><name pos:line="10974" pos:column="46">guidEngine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10975" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetEngine(This,guidEngine) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10977" pos:column="1">#<cpp:directive pos:line="10977" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10977" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10980" pos:column="1">#<cpp:directive pos:line="10980" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10980" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10985" pos:column="1">#<cpp:directive pos:line="10985" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10985" pos:column="9">/* __IDebugProgramEngines2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10988" pos:column="1">#<cpp:directive pos:line="10988" pos:column="2">ifndef</cpp:directive> <name pos:line="10988" pos:column="9">__IDebugCOMPlusProgramNode2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10989" pos:column="1">#<cpp:directive pos:line="10989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10989" pos:column="9">__IDebugCOMPlusProgramNode2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10991" pos:column="1">/* interface IDebugCOMPlusProgramNode2 */</comment>
<comment type="block" pos:line="10992" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="10995" pos:column="1">EXTERN_C</name> <specifier pos:line="10995" pos:column="10">const</specifier> <name pos:line="10995" pos:column="16">IID</name></type> <name pos:line="10995" pos:column="20">IID_IDebugCOMPlusProgramNode2</name></decl>;</decl_stmt>

<cpp:if pos:line="10997" pos:column="1">#<cpp:directive pos:line="10997" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10997" pos:column="5">defined</name><argument_list pos:line="10997" pos:column="12">(<argument><expr><name pos:line="10997" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10997" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10997" pos:column="29">!</op:operator><call><name pos:line="10997" pos:column="30">defined</name><argument_list pos:line="10997" pos:column="37">(<argument><expr><name pos:line="10997" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10999" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10999" pos:column="19">(<argument pos:line="10999" pos:column="20">"d6f7d3d0-506a-448f-8702-46eb2745e4fc"</argument>)</argument_list></macro>
    <label><name pos:line="11000" pos:column="5">IDebugCOMPlusProgramNode2</name> :</label> <expr_stmt><expr pos:line="11000" pos:column="33">public <name pos:line="11000" pos:column="40">IUnknown</name>
    <block pos:line="11001" pos:column="5">{
    <expr pos:line="11002" pos:column="5">public<op:operator pos:line="11002" pos:column="11">:</op:operator>
        virtual <name pos:line="11003" pos:column="17">HRESULT</name> <name pos:line="11003" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11003" pos:column="43">GetAppDomainId</name><argument_list pos:line="11003" pos:column="57">( 
            <comment type="block" pos:line="11004" pos:column="13">/* [out] */</comment> <argument pos:line="11004" pos:column="25">__RPC__out ULONG32 *pul32Id</argument>)</argument_list></macro> <op:operator pos:line="11004" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="11004" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11008" pos:column="1">#<cpp:directive pos:line="11008" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11008" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11010" pos:column="5">typedef <type><struct pos:line="11010" pos:column="13">struct <name pos:line="11010" pos:column="20">IDebugCOMPlusProgramNode2Vtbl</name>
    <block pos:line="11011" pos:column="5">{<public type="default" pos:line="11011" pos:column="6">
        <function_decl><type><name pos:line="11012" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11014" pos:column="9">HRESULT</name></type> ( <name pos:line="11014" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11014" pos:column="37">*</type:modifier><name pos:line="11014" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11014" pos:column="54">( 
            <param><decl><type><name pos:line="11015" pos:column="13">IDebugCOMPlusProgramNode2</name> <type:modifier pos:line="11015" pos:column="39">*</type:modifier></type> <name pos:line="11015" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11016" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11016" pos:column="24">__RPC__in</name> <name pos:line="11016" pos:column="34">REFIID</name></type> <name pos:line="11016" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11017" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11018" pos:column="13">__RPC__deref_out</name>  <name pos:line="11018" pos:column="31">void</name> <type:modifier pos:line="11018" pos:column="36">*</type:modifier><type:modifier pos:line="11018" pos:column="37">*</type:modifier></type><name pos:line="11018" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11020" pos:column="9">ULONG</name></type> ( <name pos:line="11020" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11020" pos:column="35">*</type:modifier><name pos:line="11020" pos:column="36">AddRef</name> )<parameter_list pos:line="11020" pos:column="44">( 
            <param><decl><type><name pos:line="11021" pos:column="13">IDebugCOMPlusProgramNode2</name> <type:modifier pos:line="11021" pos:column="39">*</type:modifier></type> <name pos:line="11021" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11023" pos:column="9">ULONG</name></type> ( <name pos:line="11023" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11023" pos:column="35">*</type:modifier><name pos:line="11023" pos:column="36">Release</name> )<parameter_list pos:line="11023" pos:column="45">( 
            <param><decl><type><name pos:line="11024" pos:column="13">IDebugCOMPlusProgramNode2</name> <type:modifier pos:line="11024" pos:column="39">*</type:modifier></type> <name pos:line="11024" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11026" pos:column="9">HRESULT</name></type> ( <name pos:line="11026" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11026" pos:column="37">*</type:modifier><name pos:line="11026" pos:column="38">GetAppDomainId</name> )<parameter_list pos:line="11026" pos:column="54">( 
            <param><decl><type><name pos:line="11027" pos:column="13">IDebugCOMPlusProgramNode2</name> <type:modifier pos:line="11027" pos:column="39">*</type:modifier></type> <name pos:line="11027" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="11028" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11028" pos:column="25">__RPC__out</name> <name pos:line="11028" pos:column="36">ULONG32</name> <type:modifier pos:line="11028" pos:column="44">*</type:modifier></type><name pos:line="11028" pos:column="45">pul32Id</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11030" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11031" pos:column="7">IDebugCOMPlusProgramNode2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11033" pos:column="5">interface</name></type> <name pos:line="11033" pos:column="15">IDebugCOMPlusProgramNode2</name>
    <argument_list pos:line="11034" pos:column="5">{
        <argument><expr><name pos:line="11035" pos:column="9">CONST_VTBL</name> struct <name pos:line="11035" pos:column="27">IDebugCOMPlusProgramNode2Vtbl</name> <op:operator pos:line="11035" pos:column="57">*</op:operator><name pos:line="11035" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11040" pos:column="1">#<cpp:directive pos:line="11040" pos:column="2">ifdef</cpp:directive> <name pos:line="11040" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11043" pos:column="1">#<cpp:directive pos:line="11043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11043" pos:column="9">IDebugCOMPlusProgramNode2_QueryInterface</name><parameter_list pos:line="11043" pos:column="49">(<param><type><name pos:line="11043" pos:column="50">This</name></type></param>,<param><type><name pos:line="11043" pos:column="55">riid</name></type></param>,<param><type><name pos:line="11043" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11044" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11046" pos:column="1">#<cpp:directive pos:line="11046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11046" pos:column="9">IDebugCOMPlusProgramNode2_AddRef</name><parameter_list pos:line="11046" pos:column="41">(<param><type><name pos:line="11046" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11047" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11049" pos:column="1">#<cpp:directive pos:line="11049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11049" pos:column="9">IDebugCOMPlusProgramNode2_Release</name><parameter_list pos:line="11049" pos:column="42">(<param><type><name pos:line="11049" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11050" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11053" pos:column="1">#<cpp:directive pos:line="11053" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11053" pos:column="9">IDebugCOMPlusProgramNode2_GetAppDomainId</name><parameter_list pos:line="11053" pos:column="49">(<param><type><name pos:line="11053" pos:column="50">This</name></type></param>,<param><type><name pos:line="11053" pos:column="55">pul32Id</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11054" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAppDomainId(This,pul32Id) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11056" pos:column="1">#<cpp:directive pos:line="11056" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11056" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11059" pos:column="1">#<cpp:directive pos:line="11059" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11059" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11064" pos:column="1">#<cpp:directive pos:line="11064" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11064" pos:column="9">/* __IDebugCOMPlusProgramNode2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11067" pos:column="1">#<cpp:directive pos:line="11067" pos:column="2">ifndef</cpp:directive> <name pos:line="11067" pos:column="9">__IDebugSQLCLRProgramNode2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11068" pos:column="1">#<cpp:directive pos:line="11068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11068" pos:column="9">__IDebugSQLCLRProgramNode2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11070" pos:column="1">/* interface IDebugSQLCLRProgramNode2 */</comment>
<comment type="block" pos:line="11071" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11074" pos:column="1">EXTERN_C</name> <specifier pos:line="11074" pos:column="10">const</specifier> <name pos:line="11074" pos:column="16">IID</name></type> <name pos:line="11074" pos:column="20">IID_IDebugSQLCLRProgramNode2</name></decl>;</decl_stmt>

<cpp:if pos:line="11076" pos:column="1">#<cpp:directive pos:line="11076" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11076" pos:column="5">defined</name><argument_list pos:line="11076" pos:column="12">(<argument><expr><name pos:line="11076" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11076" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11076" pos:column="29">!</op:operator><call><name pos:line="11076" pos:column="30">defined</name><argument_list pos:line="11076" pos:column="37">(<argument><expr><name pos:line="11076" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11078" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11078" pos:column="19">(<argument pos:line="11078" pos:column="20">"F617DFCB-0045-4024-837B-7ACAD8F4D67B"</argument>)</argument_list></macro>
    <label><name pos:line="11079" pos:column="5">IDebugSQLCLRProgramNode2</name> :</label> <expr_stmt><expr pos:line="11079" pos:column="32">public <name pos:line="11079" pos:column="39">IUnknown</name>
    <block pos:line="11080" pos:column="5">{
    <expr pos:line="11081" pos:column="5">public<op:operator pos:line="11081" pos:column="11">:</op:operator>
        virtual <name pos:line="11082" pos:column="17">HRESULT</name> <name pos:line="11082" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11082" pos:column="43">GetConnectionId</name><argument_list pos:line="11082" pos:column="58">( 
            <comment type="block" pos:line="11083" pos:column="13">/* [out] */</comment> <argument pos:line="11083" pos:column="25">__RPC__out DWORD *pdwId</argument>)</argument_list></macro> <op:operator pos:line="11083" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="11083" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11087" pos:column="1">#<cpp:directive pos:line="11087" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11087" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11089" pos:column="5">typedef <type><struct pos:line="11089" pos:column="13">struct <name pos:line="11089" pos:column="20">IDebugSQLCLRProgramNode2Vtbl</name>
    <block pos:line="11090" pos:column="5">{<public type="default" pos:line="11090" pos:column="6">
        <function_decl><type><name pos:line="11091" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11093" pos:column="9">HRESULT</name></type> ( <name pos:line="11093" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11093" pos:column="37">*</type:modifier><name pos:line="11093" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11093" pos:column="54">( 
            <param><decl><type><name pos:line="11094" pos:column="13">IDebugSQLCLRProgramNode2</name> <type:modifier pos:line="11094" pos:column="38">*</type:modifier></type> <name pos:line="11094" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="11095" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11095" pos:column="24">__RPC__in</name> <name pos:line="11095" pos:column="34">REFIID</name></type> <name pos:line="11095" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11096" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11097" pos:column="13">__RPC__deref_out</name>  <name pos:line="11097" pos:column="31">void</name> <type:modifier pos:line="11097" pos:column="36">*</type:modifier><type:modifier pos:line="11097" pos:column="37">*</type:modifier></type><name pos:line="11097" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11099" pos:column="9">ULONG</name></type> ( <name pos:line="11099" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11099" pos:column="35">*</type:modifier><name pos:line="11099" pos:column="36">AddRef</name> )<parameter_list pos:line="11099" pos:column="44">( 
            <param><decl><type><name pos:line="11100" pos:column="13">IDebugSQLCLRProgramNode2</name> <type:modifier pos:line="11100" pos:column="38">*</type:modifier></type> <name pos:line="11100" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11102" pos:column="9">ULONG</name></type> ( <name pos:line="11102" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11102" pos:column="35">*</type:modifier><name pos:line="11102" pos:column="36">Release</name> )<parameter_list pos:line="11102" pos:column="45">( 
            <param><decl><type><name pos:line="11103" pos:column="13">IDebugSQLCLRProgramNode2</name> <type:modifier pos:line="11103" pos:column="38">*</type:modifier></type> <name pos:line="11103" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11105" pos:column="9">HRESULT</name></type> ( <name pos:line="11105" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11105" pos:column="37">*</type:modifier><name pos:line="11105" pos:column="38">GetConnectionId</name> )<parameter_list pos:line="11105" pos:column="55">( 
            <param><decl><type><name pos:line="11106" pos:column="13">IDebugSQLCLRProgramNode2</name> <type:modifier pos:line="11106" pos:column="38">*</type:modifier></type> <name pos:line="11106" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="11107" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11107" pos:column="25">__RPC__out</name> <name pos:line="11107" pos:column="36">DWORD</name> <type:modifier pos:line="11107" pos:column="42">*</type:modifier></type><name pos:line="11107" pos:column="43">pdwId</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11109" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11110" pos:column="7">IDebugSQLCLRProgramNode2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11112" pos:column="5">interface</name></type> <name pos:line="11112" pos:column="15">IDebugSQLCLRProgramNode2</name>
    <argument_list pos:line="11113" pos:column="5">{
        <argument><expr><name pos:line="11114" pos:column="9">CONST_VTBL</name> struct <name pos:line="11114" pos:column="27">IDebugSQLCLRProgramNode2Vtbl</name> <op:operator pos:line="11114" pos:column="56">*</op:operator><name pos:line="11114" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11119" pos:column="1">#<cpp:directive pos:line="11119" pos:column="2">ifdef</cpp:directive> <name pos:line="11119" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11122" pos:column="1">#<cpp:directive pos:line="11122" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11122" pos:column="9">IDebugSQLCLRProgramNode2_QueryInterface</name><parameter_list pos:line="11122" pos:column="48">(<param><type><name pos:line="11122" pos:column="49">This</name></type></param>,<param><type><name pos:line="11122" pos:column="54">riid</name></type></param>,<param><type><name pos:line="11122" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11123" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11125" pos:column="1">#<cpp:directive pos:line="11125" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11125" pos:column="9">IDebugSQLCLRProgramNode2_AddRef</name><parameter_list pos:line="11125" pos:column="40">(<param><type><name pos:line="11125" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11126" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11128" pos:column="1">#<cpp:directive pos:line="11128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11128" pos:column="9">IDebugSQLCLRProgramNode2_Release</name><parameter_list pos:line="11128" pos:column="41">(<param><type><name pos:line="11128" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11129" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11132" pos:column="1">#<cpp:directive pos:line="11132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11132" pos:column="9">IDebugSQLCLRProgramNode2_GetConnectionId</name><parameter_list pos:line="11132" pos:column="49">(<param><type><name pos:line="11132" pos:column="50">This</name></type></param>,<param><type><name pos:line="11132" pos:column="55">pdwId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11133" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetConnectionId(This,pdwId) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11135" pos:column="1">#<cpp:directive pos:line="11135" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11135" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11138" pos:column="1">#<cpp:directive pos:line="11138" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11138" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11143" pos:column="1">#<cpp:directive pos:line="11143" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11143" pos:column="9">/* __IDebugSQLCLRProgramNode2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11146" pos:column="1">#<cpp:directive pos:line="11146" pos:column="2">ifndef</cpp:directive> <name pos:line="11146" pos:column="9">__IDebugThread2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11147" pos:column="1">#<cpp:directive pos:line="11147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11147" pos:column="9">__IDebugThread2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11149" pos:column="1">/* interface IDebugThread2 */</comment>
<comment type="block" pos:line="11150" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="11153" pos:column="1">enum <name pos:line="11153" pos:column="6">enum_THREADSTATE</name>
    <block pos:line="11154" pos:column="5">{	<decl><name pos:line="11154" pos:column="9">THREADSTATE_RUNNING</name>	<init pos:line="11154" pos:column="33">= <expr><lit:literal type="number" pos:line="11154" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="11154" pos:column="38">,</op:operator>
	<decl><name pos:line="11155" pos:column="9">THREADSTATE_STOPPED</name>	<init pos:line="11155" pos:column="33">= <expr><lit:literal type="number" pos:line="11155" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="11155" pos:column="38">,</op:operator>
	<decl><name pos:line="11156" pos:column="9">THREADSTATE_FRESH</name>	<init pos:line="11156" pos:column="33">= <expr><lit:literal type="number" pos:line="11156" pos:column="35">0x3</lit:literal></expr></init></decl><op:operator pos:line="11156" pos:column="38">,</op:operator>
	<decl><name pos:line="11157" pos:column="9">THREADSTATE_DEAD</name>	<init pos:line="11157" pos:column="33">= <expr><lit:literal type="number" pos:line="11157" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="11157" pos:column="38">,</op:operator>
	<decl><name pos:line="11158" pos:column="9">THREADSTATE_FROZEN</name>	<init pos:line="11158" pos:column="33">= <expr><lit:literal type="number" pos:line="11158" pos:column="35">0x5</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="11160" pos:column="1">typedef <type><name pos:line="11160" pos:column="9">DWORD</name></type> <name pos:line="11160" pos:column="15">THREADSTATE</name>;</typedef>


<enum pos:line="11163" pos:column="1">enum <name pos:line="11163" pos:column="6">enum_THREADPROPERTY_FIELDS</name>
    <block pos:line="11164" pos:column="5">{	<decl><name pos:line="11164" pos:column="9">TPF_ID</name>	<init pos:line="11164" pos:column="17">= <expr><lit:literal type="number" pos:line="11164" pos:column="19">0x1</lit:literal></expr></init></decl><op:operator pos:line="11164" pos:column="22">,</op:operator>
	<decl><name pos:line="11165" pos:column="9">TPF_SUSPENDCOUNT</name>	<init pos:line="11165" pos:column="33">= <expr><lit:literal type="number" pos:line="11165" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="11165" pos:column="38">,</op:operator>
	<decl><name pos:line="11166" pos:column="9">TPF_STATE</name>	<init pos:line="11166" pos:column="25">= <expr><lit:literal type="number" pos:line="11166" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="11166" pos:column="30">,</op:operator>
	<decl><name pos:line="11167" pos:column="9">TPF_PRIORITY</name>	<init pos:line="11167" pos:column="25">= <expr><lit:literal type="number" pos:line="11167" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="11167" pos:column="30">,</op:operator>
	<decl><name pos:line="11168" pos:column="9">TPF_NAME</name>	<init pos:line="11168" pos:column="25">= <expr><lit:literal type="number" pos:line="11168" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="11168" pos:column="31">,</op:operator>
	<decl><name pos:line="11169" pos:column="9">TPF_LOCATION</name>	<init pos:line="11169" pos:column="25">= <expr><lit:literal type="number" pos:line="11169" pos:column="27">0x20</lit:literal></expr></init></decl><op:operator pos:line="11169" pos:column="31">,</op:operator>
	<decl><name pos:line="11170" pos:column="9">TPF_ALLFIELDS</name>	<init pos:line="11170" pos:column="25">= <expr><lit:literal type="number" pos:line="11170" pos:column="27">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="11172" pos:column="1">typedef <type><name pos:line="11172" pos:column="9">DWORD</name></type> <name pos:line="11172" pos:column="15">THREADPROPERTY_FIELDS</name>;</typedef>

<typedef pos:line="11174" pos:column="1">typedef <type><struct pos:line="11174" pos:column="9">struct <name pos:line="11174" pos:column="16">_tagTHREADPROPERTIES</name>
    <block pos:line="11175" pos:column="5">{<public type="default" pos:line="11175" pos:column="6">
    <decl_stmt><decl><type><name pos:line="11176" pos:column="5">THREADPROPERTY_FIELDS</name></type> <name pos:line="11176" pos:column="27">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11177" pos:column="5">DWORD</name></type> <name pos:line="11177" pos:column="11">dwThreadId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11178" pos:column="5">DWORD</name></type> <name pos:line="11178" pos:column="11">dwSuspendCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11179" pos:column="5">DWORD</name></type> <name pos:line="11179" pos:column="11">dwThreadState</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11180" pos:column="5">BSTR</name></type> <name pos:line="11180" pos:column="10">bstrPriority</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11181" pos:column="5">BSTR</name></type> <name pos:line="11181" pos:column="10">bstrName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11182" pos:column="5">BSTR</name></type> <name pos:line="11182" pos:column="10">bstrLocation</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="11183" pos:column="9">THREADPROPERTIES</name>;</typedef>


<enum pos:line="11186" pos:column="1">enum <name pos:line="11186" pos:column="6">enum_FRAMEINFO_FLAGS</name>
    <block pos:line="11187" pos:column="5">{	<decl><name pos:line="11187" pos:column="9">FIF_FUNCNAME</name>	<init pos:line="11187" pos:column="25">= <expr><lit:literal type="number" pos:line="11187" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="11187" pos:column="30">,</op:operator>
	<decl><name pos:line="11188" pos:column="9">FIF_RETURNTYPE</name>	<init pos:line="11188" pos:column="25">= <expr><lit:literal type="number" pos:line="11188" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="11188" pos:column="30">,</op:operator>
	<decl><name pos:line="11189" pos:column="9">FIF_ARGS</name>	<init pos:line="11189" pos:column="25">= <expr><lit:literal type="number" pos:line="11189" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="11189" pos:column="30">,</op:operator>
	<decl><name pos:line="11190" pos:column="9">FIF_LANGUAGE</name>	<init pos:line="11190" pos:column="25">= <expr><lit:literal type="number" pos:line="11190" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="11190" pos:column="30">,</op:operator>
	<decl><name pos:line="11191" pos:column="9">FIF_MODULE</name>	<init pos:line="11191" pos:column="25">= <expr><lit:literal type="number" pos:line="11191" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="11191" pos:column="31">,</op:operator>
	<decl><name pos:line="11192" pos:column="9">FIF_STACKRANGE</name>	<init pos:line="11192" pos:column="25">= <expr><lit:literal type="number" pos:line="11192" pos:column="27">0x20</lit:literal></expr></init></decl><op:operator pos:line="11192" pos:column="31">,</op:operator>
	<decl><name pos:line="11193" pos:column="9">FIF_FRAME</name>	<init pos:line="11193" pos:column="25">= <expr><lit:literal type="number" pos:line="11193" pos:column="27">0x40</lit:literal></expr></init></decl><op:operator pos:line="11193" pos:column="31">,</op:operator>
	<decl><name pos:line="11194" pos:column="9">FIF_DEBUGINFO</name>	<init pos:line="11194" pos:column="25">= <expr><lit:literal type="number" pos:line="11194" pos:column="27">0x80</lit:literal></expr></init></decl><op:operator pos:line="11194" pos:column="31">,</op:operator>
	<decl><name pos:line="11195" pos:column="9">FIF_STALECODE</name>	<init pos:line="11195" pos:column="25">= <expr><lit:literal type="number" pos:line="11195" pos:column="27">0x100</lit:literal></expr></init></decl><op:operator pos:line="11195" pos:column="32">,</op:operator>
	<decl><name pos:line="11196" pos:column="9">FIF_FLAGS</name>	<init pos:line="11196" pos:column="25">= <expr><lit:literal type="number" pos:line="11196" pos:column="27">0x200</lit:literal></expr></init></decl><op:operator pos:line="11196" pos:column="32">,</op:operator>
	<decl><name pos:line="11197" pos:column="9">FIF_DEBUG_MODULEP</name>	<init pos:line="11197" pos:column="33">= <expr><lit:literal type="number" pos:line="11197" pos:column="35">0x400</lit:literal></expr></init></decl><op:operator pos:line="11197" pos:column="40">,</op:operator>
	<decl><name pos:line="11198" pos:column="9">FIF_FUNCNAME_FORMAT</name>	<init pos:line="11198" pos:column="33">= <expr><lit:literal type="number" pos:line="11198" pos:column="35">0x1000</lit:literal></expr></init></decl><op:operator pos:line="11198" pos:column="41">,</op:operator>
	<decl><name pos:line="11199" pos:column="9">FIF_FUNCNAME_RETURNTYPE</name>	<init pos:line="11199" pos:column="33">= <expr><lit:literal type="number" pos:line="11199" pos:column="35">0x2000</lit:literal></expr></init></decl><op:operator pos:line="11199" pos:column="41">,</op:operator>
	<decl><name pos:line="11200" pos:column="9">FIF_FUNCNAME_ARGS</name>	<init pos:line="11200" pos:column="33">= <expr><lit:literal type="number" pos:line="11200" pos:column="35">0x4000</lit:literal></expr></init></decl><op:operator pos:line="11200" pos:column="41">,</op:operator>
	<decl><name pos:line="11201" pos:column="9">FIF_FUNCNAME_LANGUAGE</name>	<init pos:line="11201" pos:column="33">= <expr><lit:literal type="number" pos:line="11201" pos:column="35">0x8000</lit:literal></expr></init></decl><op:operator pos:line="11201" pos:column="41">,</op:operator>
	<decl><name pos:line="11202" pos:column="9">FIF_FUNCNAME_MODULE</name>	<init pos:line="11202" pos:column="33">= <expr><lit:literal type="number" pos:line="11202" pos:column="35">0x10000</lit:literal></expr></init></decl><op:operator pos:line="11202" pos:column="42">,</op:operator>
	<decl><name pos:line="11203" pos:column="9">FIF_FUNCNAME_LINES</name>	<init pos:line="11203" pos:column="33">= <expr><lit:literal type="number" pos:line="11203" pos:column="35">0x20000</lit:literal></expr></init></decl><op:operator pos:line="11203" pos:column="42">,</op:operator>
	<decl><name pos:line="11204" pos:column="9">FIF_FUNCNAME_OFFSET</name>	<init pos:line="11204" pos:column="33">= <expr><lit:literal type="number" pos:line="11204" pos:column="35">0x40000</lit:literal></expr></init></decl><op:operator pos:line="11204" pos:column="42">,</op:operator>
	<decl><name pos:line="11205" pos:column="9">FIF_FUNCNAME_ARGS_TYPES</name>	<init pos:line="11205" pos:column="33">= <expr><lit:literal type="number" pos:line="11205" pos:column="35">0x100000</lit:literal></expr></init></decl><op:operator pos:line="11205" pos:column="43">,</op:operator>
	<decl><name pos:line="11206" pos:column="9">FIF_FUNCNAME_ARGS_NAMES</name>	<init pos:line="11206" pos:column="33">= <expr><lit:literal type="number" pos:line="11206" pos:column="35">0x200000</lit:literal></expr></init></decl><op:operator pos:line="11206" pos:column="43">,</op:operator>
	<decl><name pos:line="11207" pos:column="9">FIF_FUNCNAME_ARGS_VALUES</name>	<init pos:line="11207" pos:column="41">= <expr><lit:literal type="number" pos:line="11207" pos:column="43">0x400000</lit:literal></expr></init></decl><op:operator pos:line="11207" pos:column="51">,</op:operator>
	<decl><name pos:line="11208" pos:column="9">FIF_FUNCNAME_ARGS_ALL</name>	<init pos:line="11208" pos:column="33">= <expr><lit:literal type="number" pos:line="11208" pos:column="35">0x700000</lit:literal></expr></init></decl><op:operator pos:line="11208" pos:column="43">,</op:operator>
	<decl><name pos:line="11209" pos:column="9">FIF_ARGS_TYPES</name>	<init pos:line="11209" pos:column="25">= <expr><lit:literal type="number" pos:line="11209" pos:column="27">0x1000000</lit:literal></expr></init></decl><op:operator pos:line="11209" pos:column="36">,</op:operator>
	<decl><name pos:line="11210" pos:column="9">FIF_ARGS_NAMES</name>	<init pos:line="11210" pos:column="25">= <expr><lit:literal type="number" pos:line="11210" pos:column="27">0x2000000</lit:literal></expr></init></decl><op:operator pos:line="11210" pos:column="36">,</op:operator>
	<decl><name pos:line="11211" pos:column="9">FIF_ARGS_VALUES</name>	<init pos:line="11211" pos:column="25">= <expr><lit:literal type="number" pos:line="11211" pos:column="27">0x4000000</lit:literal></expr></init></decl><op:operator pos:line="11211" pos:column="36">,</op:operator>
	<decl><name pos:line="11212" pos:column="9">FIF_ARGS_ALL</name>	<init pos:line="11212" pos:column="25">= <expr><lit:literal type="number" pos:line="11212" pos:column="27">0x7000000</lit:literal></expr></init></decl><op:operator pos:line="11212" pos:column="36">,</op:operator>
	<decl><name pos:line="11213" pos:column="9">FIF_ARGS_NOFORMAT</name>	<init pos:line="11213" pos:column="33">= <expr><lit:literal type="number" pos:line="11213" pos:column="35">0x8000000</lit:literal></expr></init></decl><op:operator pos:line="11213" pos:column="44">,</op:operator>
	<decl><name pos:line="11214" pos:column="9">FIF_ARGS_NO_FUNC_EVAL</name>	<init pos:line="11214" pos:column="33">= <expr><lit:literal type="number" pos:line="11214" pos:column="35">0x10000000</lit:literal></expr></init></decl><op:operator pos:line="11214" pos:column="45">,</op:operator>
	<decl><name pos:line="11215" pos:column="9">FIF_FILTER_NON_USER_CODE</name>	<init pos:line="11215" pos:column="41">= <expr><lit:literal type="number" pos:line="11215" pos:column="43">0x20000000</lit:literal></expr></init></decl><op:operator pos:line="11215" pos:column="53">,</op:operator>
	<decl><name pos:line="11216" pos:column="9">FIF_ARGS_NO_TOSTRING</name>	<init pos:line="11216" pos:column="33">= <expr><lit:literal type="number" pos:line="11216" pos:column="35">0x40000000</lit:literal></expr></init></decl><op:operator pos:line="11216" pos:column="45">,</op:operator>
	<decl><name pos:line="11217" pos:column="9">FIF_DESIGN_TIME_EXPR_EVAL</name>	<init pos:line="11217" pos:column="41">= <expr><lit:literal type="number" pos:line="11217" pos:column="43">0x80000000</lit:literal></expr></init></decl><op:operator pos:line="11217" pos:column="53">,</op:operator>
	<decl><name pos:line="11218" pos:column="9">FIF_FILTER_INCLUDE_ALL</name>	<init pos:line="11218" pos:column="33">= <expr><lit:literal type="number" pos:line="11218" pos:column="35">0x80000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="11220" pos:column="1">typedef <type><name pos:line="11220" pos:column="9">DWORD</name></type> <name pos:line="11220" pos:column="15">FRAMEINFO_FLAGS</name>;</typedef>


<enum pos:line="11223" pos:column="1">enum <name pos:line="11223" pos:column="6">enum_FRAMEINFO_FLAGS_VALUES</name>
    <block pos:line="11224" pos:column="5">{	<decl><name pos:line="11224" pos:column="9">FIFV_ANNOTATEDFRAME</name>	<init pos:line="11224" pos:column="33">= <expr><lit:literal type="number" pos:line="11224" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="11224" pos:column="38">,</op:operator>
	<decl><name pos:line="11225" pos:column="9">FIFV_NON_USER_CODE</name>	<init pos:line="11225" pos:column="33">= <expr><lit:literal type="number" pos:line="11225" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="11225" pos:column="38">,</op:operator>
	<decl><name pos:line="11226" pos:column="9">FIFV_CANINTERCEPT_EXCEPTION</name>	<init pos:line="11226" pos:column="41">= <expr><lit:literal type="number" pos:line="11226" pos:column="43">0x4</lit:literal></expr></init></decl><op:operator pos:line="11226" pos:column="46">,</op:operator>
	<decl><name pos:line="11227" pos:column="9">FIFV_FUNCEVALFRAME</name>	<init pos:line="11227" pos:column="33">= <expr><lit:literal type="number" pos:line="11227" pos:column="35">0x8</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="11229" pos:column="1">typedef <type><name pos:line="11229" pos:column="9">DWORD</name></type> <name pos:line="11229" pos:column="15">FRAMEINFO_FLAGS_VALUES</name>;</typedef>

<typedef pos:line="11231" pos:column="1">typedef <type><struct pos:line="11231" pos:column="9">struct <name pos:line="11231" pos:column="16">tagFRAMEINFO</name>
    <block pos:line="11232" pos:column="5">{<public type="default" pos:line="11232" pos:column="6">
    <decl_stmt><decl><type><name pos:line="11233" pos:column="5">FRAMEINFO_FLAGS</name></type> <name pos:line="11233" pos:column="21">m_dwValidFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11234" pos:column="5">BSTR</name></type> <name pos:line="11234" pos:column="10">m_bstrFuncName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11235" pos:column="5">BSTR</name></type> <name pos:line="11235" pos:column="10">m_bstrReturnType</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11236" pos:column="5">BSTR</name></type> <name pos:line="11236" pos:column="10">m_bstrArgs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11237" pos:column="5">BSTR</name></type> <name pos:line="11237" pos:column="10">m_bstrLanguage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11238" pos:column="5">BSTR</name></type> <name pos:line="11238" pos:column="10">m_bstrModule</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11239" pos:column="5">UINT64</name></type> <name pos:line="11239" pos:column="12">m_addrMin</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11240" pos:column="5">UINT64</name></type> <name pos:line="11240" pos:column="12">m_addrMax</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11241" pos:column="5">IDebugStackFrame2</name> <type:modifier pos:line="11241" pos:column="23">*</type:modifier></type><name pos:line="11241" pos:column="24">m_pFrame</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11242" pos:column="5">IDebugModule2</name> <type:modifier pos:line="11242" pos:column="19">*</type:modifier></type><name pos:line="11242" pos:column="20">m_pModule</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11243" pos:column="5">BOOL</name></type> <name pos:line="11243" pos:column="10">m_fHasDebugInfo</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11244" pos:column="5">BOOL</name></type> <name pos:line="11244" pos:column="10">m_fStaleCode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11245" pos:column="5">DWORD</name></type> <name pos:line="11245" pos:column="11">m_dwFlags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="11246" pos:column="9">FRAMEINFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="11249" pos:column="1">EXTERN_C</name> <specifier pos:line="11249" pos:column="10">const</specifier> <name pos:line="11249" pos:column="16">IID</name></type> <name pos:line="11249" pos:column="20">IID_IDebugThread2</name></decl>;</decl_stmt>

<cpp:if pos:line="11251" pos:column="1">#<cpp:directive pos:line="11251" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11251" pos:column="5">defined</name><argument_list pos:line="11251" pos:column="12">(<argument><expr><name pos:line="11251" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11251" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11251" pos:column="29">!</op:operator><call><name pos:line="11251" pos:column="30">defined</name><argument_list pos:line="11251" pos:column="37">(<argument><expr><name pos:line="11251" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11253" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11253" pos:column="19">(<argument pos:line="11253" pos:column="20">"d5168050-a57a-465c-bea9-974f405eba13"</argument>)</argument_list></macro>
    <label><name pos:line="11254" pos:column="5">IDebugThread2</name> :</label> <expr_stmt><expr pos:line="11254" pos:column="21">public <name pos:line="11254" pos:column="28">IUnknown</name>
    <block pos:line="11255" pos:column="5">{
    <expr pos:line="11256" pos:column="5">public<op:operator pos:line="11256" pos:column="11">:</op:operator>
        virtual <name pos:line="11257" pos:column="17">HRESULT</name> <name pos:line="11257" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11257" pos:column="43">EnumFrameInfo</name><argument_list pos:line="11257" pos:column="56">( 
            <comment type="block" pos:line="11258" pos:column="13">/* [in] */</comment> <argument pos:line="11258" pos:column="24">FRAMEINFO_FLAGS dwFieldSpec</argument>,
            <comment type="block" pos:line="11259" pos:column="13">/* [in] */</comment> <argument pos:line="11259" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="11260" pos:column="13">/* [out] */</comment> <argument pos:line="11260" pos:column="25">__RPC__deref_out_opt IEnumDebugFrameInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="11260" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="11260" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="11262" pos:column="9">virtual <name pos:line="11262" pos:column="17">HRESULT</name> <name pos:line="11262" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11262" pos:column="43">GetName</name><argument_list pos:line="11262" pos:column="50">( 
            <comment type="block" pos:line="11263" pos:column="13">/* [out] */</comment> <argument pos:line="11263" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="11263" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="11263" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="11265" pos:column="9">virtual <name pos:line="11265" pos:column="17">HRESULT</name> <name pos:line="11265" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11265" pos:column="43">SetThreadName</name><argument_list pos:line="11265" pos:column="56">( 
            <comment type="block" pos:line="11266" pos:column="13">/* [in] */</comment> <argument pos:line="11266" pos:column="24">__RPC__in LPCOLESTR pszName</argument>)</argument_list></macro> <op:operator pos:line="11266" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="11266" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="11268" pos:column="9">virtual <name pos:line="11268" pos:column="17">HRESULT</name> <name pos:line="11268" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11268" pos:column="43">GetProgram</name><argument_list pos:line="11268" pos:column="53">( 
            <comment type="block" pos:line="11269" pos:column="13">/* [out] */</comment> <argument pos:line="11269" pos:column="25">__RPC__deref_out_opt IDebugProgram2 **ppProgram</argument>)</argument_list></macro> <op:operator pos:line="11269" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="11269" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="11271" pos:column="9">virtual <name pos:line="11271" pos:column="17">HRESULT</name> <name pos:line="11271" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11271" pos:column="43">CanSetNextStatement</name><argument_list pos:line="11271" pos:column="62">( 
            <comment type="block" pos:line="11272" pos:column="13">/* [in] */</comment> <argument pos:line="11272" pos:column="24">__RPC__in_opt IDebugStackFrame2 *pStackFrame</argument>,
            <comment type="block" pos:line="11273" pos:column="13">/* [in] */</comment> <argument pos:line="11273" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pCodeContext</argument>)</argument_list></macro> <op:operator pos:line="11273" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="11273" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="11275" pos:column="9">virtual <name pos:line="11275" pos:column="17">HRESULT</name> <name pos:line="11275" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11275" pos:column="43">SetNextStatement</name><argument_list pos:line="11275" pos:column="59">( 
            <comment type="block" pos:line="11276" pos:column="13">/* [in] */</comment> <argument pos:line="11276" pos:column="24">__RPC__in_opt IDebugStackFrame2 *pStackFrame</argument>,
            <comment type="block" pos:line="11277" pos:column="13">/* [in] */</comment> <argument pos:line="11277" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pCodeContext</argument>)</argument_list></macro> <op:operator pos:line="11277" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="11277" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="11279" pos:column="9">virtual <name pos:line="11279" pos:column="17">HRESULT</name> <name pos:line="11279" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11279" pos:column="43">GetThreadId</name><argument_list pos:line="11279" pos:column="54">( 
            <comment type="block" pos:line="11280" pos:column="13">/* [out] */</comment> <argument pos:line="11280" pos:column="25">__RPC__out DWORD *pdwThreadId</argument>)</argument_list></macro> <op:operator pos:line="11280" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="11280" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="11282" pos:column="9">virtual <name pos:line="11282" pos:column="17">HRESULT</name> <name pos:line="11282" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11282" pos:column="43">Suspend</name><argument_list pos:line="11282" pos:column="50">( 
            <comment type="block" pos:line="11283" pos:column="13">/* [out] */</comment> <argument pos:line="11283" pos:column="25">__RPC__out DWORD *pdwSuspendCount</argument>)</argument_list></macro> <op:operator pos:line="11283" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="11283" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="11285" pos:column="9">virtual <name pos:line="11285" pos:column="17">HRESULT</name> <name pos:line="11285" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11285" pos:column="43">Resume</name><argument_list pos:line="11285" pos:column="49">( 
            <comment type="block" pos:line="11286" pos:column="13">/* [out] */</comment> <argument pos:line="11286" pos:column="25">__RPC__out DWORD *pdwSuspendCount</argument>)</argument_list></macro> <op:operator pos:line="11286" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="11286" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="11288" pos:column="9">virtual <name pos:line="11288" pos:column="17">HRESULT</name> <name pos:line="11288" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11288" pos:column="43">GetThreadProperties</name><argument_list pos:line="11288" pos:column="62">( 
            <comment type="block" pos:line="11289" pos:column="13">/* [in] */</comment> <argument pos:line="11289" pos:column="24">THREADPROPERTY_FIELDS dwFields</argument>,
            <comment type="block" pos:line="11290" pos:column="13">/* [out] */</comment> <argument pos:line="11290" pos:column="25">__RPC__out THREADPROPERTIES *ptp</argument>)</argument_list></macro> <op:operator pos:line="11290" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="11290" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="11292" pos:column="9">virtual <name pos:line="11292" pos:column="17">HRESULT</name> <name pos:line="11292" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11292" pos:column="43">GetLogicalThread</name><argument_list pos:line="11292" pos:column="59">( 
            <comment type="block" pos:line="11293" pos:column="13">/* [in] */</comment> <argument pos:line="11293" pos:column="24">__RPC__in_opt IDebugStackFrame2 *pStackFrame</argument>,
            <comment type="block" pos:line="11294" pos:column="13">/* [out] */</comment> <argument pos:line="11294" pos:column="25">__RPC__deref_out_opt IDebugLogicalThread2 **ppLogicalThread</argument>)</argument_list></macro> <op:operator pos:line="11294" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="11294" pos:column="88">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11298" pos:column="1">#<cpp:directive pos:line="11298" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11298" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11300" pos:column="5">typedef <type><struct pos:line="11300" pos:column="13">struct <name pos:line="11300" pos:column="20">IDebugThread2Vtbl</name>
    <block pos:line="11301" pos:column="5">{<public type="default" pos:line="11301" pos:column="6">
        <function_decl><type><name pos:line="11302" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11304" pos:column="9">HRESULT</name></type> ( <name pos:line="11304" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11304" pos:column="37">*</type:modifier><name pos:line="11304" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11304" pos:column="54">( 
            <param><decl><type><name pos:line="11305" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11305" pos:column="27">*</type:modifier></type> <name pos:line="11305" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11306" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11306" pos:column="24">__RPC__in</name> <name pos:line="11306" pos:column="34">REFIID</name></type> <name pos:line="11306" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11307" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11308" pos:column="13">__RPC__deref_out</name>  <name pos:line="11308" pos:column="31">void</name> <type:modifier pos:line="11308" pos:column="36">*</type:modifier><type:modifier pos:line="11308" pos:column="37">*</type:modifier></type><name pos:line="11308" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11310" pos:column="9">ULONG</name></type> ( <name pos:line="11310" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11310" pos:column="35">*</type:modifier><name pos:line="11310" pos:column="36">AddRef</name> )<parameter_list pos:line="11310" pos:column="44">( 
            <param><decl><type><name pos:line="11311" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11311" pos:column="27">*</type:modifier></type> <name pos:line="11311" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11313" pos:column="9">ULONG</name></type> ( <name pos:line="11313" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11313" pos:column="35">*</type:modifier><name pos:line="11313" pos:column="36">Release</name> )<parameter_list pos:line="11313" pos:column="45">( 
            <param><decl><type><name pos:line="11314" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11314" pos:column="27">*</type:modifier></type> <name pos:line="11314" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11316" pos:column="9">HRESULT</name></type> ( <name pos:line="11316" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11316" pos:column="37">*</type:modifier><name pos:line="11316" pos:column="38">EnumFrameInfo</name> )<parameter_list pos:line="11316" pos:column="53">( 
            <param><decl><type><name pos:line="11317" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11317" pos:column="27">*</type:modifier></type> <name pos:line="11317" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11318" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11318" pos:column="24">FRAMEINFO_FLAGS</name></type> <name pos:line="11318" pos:column="40">dwFieldSpec</name></decl></param>,
            <comment type="block" pos:line="11319" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11319" pos:column="24">UINT</name></type> <name pos:line="11319" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="11320" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11320" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11320" pos:column="46">IEnumDebugFrameInfo2</name> <type:modifier pos:line="11320" pos:column="67">*</type:modifier><type:modifier pos:line="11320" pos:column="68">*</type:modifier></type><name pos:line="11320" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11322" pos:column="9">HRESULT</name></type> ( <name pos:line="11322" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11322" pos:column="37">*</type:modifier><name pos:line="11322" pos:column="38">GetName</name> )<parameter_list pos:line="11322" pos:column="47">( 
            <param><decl><type><name pos:line="11323" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11323" pos:column="27">*</type:modifier></type> <name pos:line="11323" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11324" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11324" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11324" pos:column="46">BSTR</name> <type:modifier pos:line="11324" pos:column="51">*</type:modifier></type><name pos:line="11324" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11326" pos:column="9">HRESULT</name></type> ( <name pos:line="11326" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11326" pos:column="37">*</type:modifier><name pos:line="11326" pos:column="38">SetThreadName</name> )<parameter_list pos:line="11326" pos:column="53">( 
            <param><decl><type><name pos:line="11327" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11327" pos:column="27">*</type:modifier></type> <name pos:line="11327" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11328" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11328" pos:column="24">__RPC__in</name> <name pos:line="11328" pos:column="34">LPCOLESTR</name></type> <name pos:line="11328" pos:column="44">pszName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11330" pos:column="9">HRESULT</name></type> ( <name pos:line="11330" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11330" pos:column="37">*</type:modifier><name pos:line="11330" pos:column="38">GetProgram</name> )<parameter_list pos:line="11330" pos:column="50">( 
            <param><decl><type><name pos:line="11331" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11331" pos:column="27">*</type:modifier></type> <name pos:line="11331" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11332" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11332" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11332" pos:column="46">IDebugProgram2</name> <type:modifier pos:line="11332" pos:column="61">*</type:modifier><type:modifier pos:line="11332" pos:column="62">*</type:modifier></type><name pos:line="11332" pos:column="63">ppProgram</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11334" pos:column="9">HRESULT</name></type> ( <name pos:line="11334" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11334" pos:column="37">*</type:modifier><name pos:line="11334" pos:column="38">CanSetNextStatement</name> )<parameter_list pos:line="11334" pos:column="59">( 
            <param><decl><type><name pos:line="11335" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11335" pos:column="27">*</type:modifier></type> <name pos:line="11335" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11336" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11336" pos:column="24">__RPC__in_opt</name> <name pos:line="11336" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="11336" pos:column="56">*</type:modifier></type><name pos:line="11336" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="11337" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11337" pos:column="24">__RPC__in_opt</name> <name pos:line="11337" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="11337" pos:column="57">*</type:modifier></type><name pos:line="11337" pos:column="58">pCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11339" pos:column="9">HRESULT</name></type> ( <name pos:line="11339" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11339" pos:column="37">*</type:modifier><name pos:line="11339" pos:column="38">SetNextStatement</name> )<parameter_list pos:line="11339" pos:column="56">( 
            <param><decl><type><name pos:line="11340" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11340" pos:column="27">*</type:modifier></type> <name pos:line="11340" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11341" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11341" pos:column="24">__RPC__in_opt</name> <name pos:line="11341" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="11341" pos:column="56">*</type:modifier></type><name pos:line="11341" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="11342" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11342" pos:column="24">__RPC__in_opt</name> <name pos:line="11342" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="11342" pos:column="57">*</type:modifier></type><name pos:line="11342" pos:column="58">pCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11344" pos:column="9">HRESULT</name></type> ( <name pos:line="11344" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11344" pos:column="37">*</type:modifier><name pos:line="11344" pos:column="38">GetThreadId</name> )<parameter_list pos:line="11344" pos:column="51">( 
            <param><decl><type><name pos:line="11345" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11345" pos:column="27">*</type:modifier></type> <name pos:line="11345" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11346" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11346" pos:column="25">__RPC__out</name> <name pos:line="11346" pos:column="36">DWORD</name> <type:modifier pos:line="11346" pos:column="42">*</type:modifier></type><name pos:line="11346" pos:column="43">pdwThreadId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11348" pos:column="9">HRESULT</name></type> ( <name pos:line="11348" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11348" pos:column="37">*</type:modifier><name pos:line="11348" pos:column="38">Suspend</name> )<parameter_list pos:line="11348" pos:column="47">( 
            <param><decl><type><name pos:line="11349" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11349" pos:column="27">*</type:modifier></type> <name pos:line="11349" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11350" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11350" pos:column="25">__RPC__out</name> <name pos:line="11350" pos:column="36">DWORD</name> <type:modifier pos:line="11350" pos:column="42">*</type:modifier></type><name pos:line="11350" pos:column="43">pdwSuspendCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11352" pos:column="9">HRESULT</name></type> ( <name pos:line="11352" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11352" pos:column="37">*</type:modifier><name pos:line="11352" pos:column="38">Resume</name> )<parameter_list pos:line="11352" pos:column="46">( 
            <param><decl><type><name pos:line="11353" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11353" pos:column="27">*</type:modifier></type> <name pos:line="11353" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11354" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11354" pos:column="25">__RPC__out</name> <name pos:line="11354" pos:column="36">DWORD</name> <type:modifier pos:line="11354" pos:column="42">*</type:modifier></type><name pos:line="11354" pos:column="43">pdwSuspendCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11356" pos:column="9">HRESULT</name></type> ( <name pos:line="11356" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11356" pos:column="37">*</type:modifier><name pos:line="11356" pos:column="38">GetThreadProperties</name> )<parameter_list pos:line="11356" pos:column="59">( 
            <param><decl><type><name pos:line="11357" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11357" pos:column="27">*</type:modifier></type> <name pos:line="11357" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11358" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11358" pos:column="24">THREADPROPERTY_FIELDS</name></type> <name pos:line="11358" pos:column="46">dwFields</name></decl></param>,
            <comment type="block" pos:line="11359" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11359" pos:column="25">__RPC__out</name> <name pos:line="11359" pos:column="36">THREADPROPERTIES</name> <type:modifier pos:line="11359" pos:column="53">*</type:modifier></type><name pos:line="11359" pos:column="54">ptp</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11361" pos:column="9">HRESULT</name></type> ( <name pos:line="11361" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11361" pos:column="37">*</type:modifier><name pos:line="11361" pos:column="38">GetLogicalThread</name> )<parameter_list pos:line="11361" pos:column="56">( 
            <param><decl><type><name pos:line="11362" pos:column="13">IDebugThread2</name> <type:modifier pos:line="11362" pos:column="27">*</type:modifier></type> <name pos:line="11362" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11363" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11363" pos:column="24">__RPC__in_opt</name> <name pos:line="11363" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="11363" pos:column="56">*</type:modifier></type><name pos:line="11363" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="11364" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11364" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11364" pos:column="46">IDebugLogicalThread2</name> <type:modifier pos:line="11364" pos:column="67">*</type:modifier><type:modifier pos:line="11364" pos:column="68">*</type:modifier></type><name pos:line="11364" pos:column="69">ppLogicalThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11366" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11367" pos:column="7">IDebugThread2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11369" pos:column="5">interface</name></type> <name pos:line="11369" pos:column="15">IDebugThread2</name>
    <argument_list pos:line="11370" pos:column="5">{
        <argument><expr><name pos:line="11371" pos:column="9">CONST_VTBL</name> struct <name pos:line="11371" pos:column="27">IDebugThread2Vtbl</name> <op:operator pos:line="11371" pos:column="45">*</op:operator><name pos:line="11371" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11376" pos:column="1">#<cpp:directive pos:line="11376" pos:column="2">ifdef</cpp:directive> <name pos:line="11376" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11379" pos:column="1">#<cpp:directive pos:line="11379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11379" pos:column="9">IDebugThread2_QueryInterface</name><parameter_list pos:line="11379" pos:column="37">(<param><type><name pos:line="11379" pos:column="38">This</name></type></param>,<param><type><name pos:line="11379" pos:column="43">riid</name></type></param>,<param><type><name pos:line="11379" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11380" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11382" pos:column="1">#<cpp:directive pos:line="11382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11382" pos:column="9">IDebugThread2_AddRef</name><parameter_list pos:line="11382" pos:column="29">(<param><type><name pos:line="11382" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11383" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11385" pos:column="1">#<cpp:directive pos:line="11385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11385" pos:column="9">IDebugThread2_Release</name><parameter_list pos:line="11385" pos:column="30">(<param><type><name pos:line="11385" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11386" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11389" pos:column="1">#<cpp:directive pos:line="11389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11389" pos:column="9">IDebugThread2_EnumFrameInfo</name><parameter_list pos:line="11389" pos:column="36">(<param><type><name pos:line="11389" pos:column="37">This</name></type></param>,<param><type><name pos:line="11389" pos:column="42">dwFieldSpec</name></type></param>,<param><type><name pos:line="11389" pos:column="54">nRadix</name></type></param>,<param><type><name pos:line="11389" pos:column="61">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11390" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumFrameInfo(This,dwFieldSpec,nRadix,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="11392" pos:column="1">#<cpp:directive pos:line="11392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11392" pos:column="9">IDebugThread2_GetName</name><parameter_list pos:line="11392" pos:column="30">(<param><type><name pos:line="11392" pos:column="31">This</name></type></param>,<param><type><name pos:line="11392" pos:column="36">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11393" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="11395" pos:column="1">#<cpp:directive pos:line="11395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11395" pos:column="9">IDebugThread2_SetThreadName</name><parameter_list pos:line="11395" pos:column="36">(<param><type><name pos:line="11395" pos:column="37">This</name></type></param>,<param><type><name pos:line="11395" pos:column="42">pszName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11396" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetThreadName(This,pszName) )</cpp:value></cpp:define> 

<cpp:define pos:line="11398" pos:column="1">#<cpp:directive pos:line="11398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11398" pos:column="9">IDebugThread2_GetProgram</name><parameter_list pos:line="11398" pos:column="33">(<param><type><name pos:line="11398" pos:column="34">This</name></type></param>,<param><type><name pos:line="11398" pos:column="39">ppProgram</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11399" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProgram(This,ppProgram) )</cpp:value></cpp:define> 

<cpp:define pos:line="11401" pos:column="1">#<cpp:directive pos:line="11401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11401" pos:column="9">IDebugThread2_CanSetNextStatement</name><parameter_list pos:line="11401" pos:column="42">(<param><type><name pos:line="11401" pos:column="43">This</name></type></param>,<param><type><name pos:line="11401" pos:column="48">pStackFrame</name></type></param>,<param><type><name pos:line="11401" pos:column="60">pCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11402" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanSetNextStatement(This,pStackFrame,pCodeContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="11404" pos:column="1">#<cpp:directive pos:line="11404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11404" pos:column="9">IDebugThread2_SetNextStatement</name><parameter_list pos:line="11404" pos:column="39">(<param><type><name pos:line="11404" pos:column="40">This</name></type></param>,<param><type><name pos:line="11404" pos:column="45">pStackFrame</name></type></param>,<param><type><name pos:line="11404" pos:column="57">pCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11405" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetNextStatement(This,pStackFrame,pCodeContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="11407" pos:column="1">#<cpp:directive pos:line="11407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11407" pos:column="9">IDebugThread2_GetThreadId</name><parameter_list pos:line="11407" pos:column="34">(<param><type><name pos:line="11407" pos:column="35">This</name></type></param>,<param><type><name pos:line="11407" pos:column="40">pdwThreadId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11408" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThreadId(This,pdwThreadId) )</cpp:value></cpp:define> 

<cpp:define pos:line="11410" pos:column="1">#<cpp:directive pos:line="11410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11410" pos:column="9">IDebugThread2_Suspend</name><parameter_list pos:line="11410" pos:column="30">(<param><type><name pos:line="11410" pos:column="31">This</name></type></param>,<param><type><name pos:line="11410" pos:column="36">pdwSuspendCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11411" pos:column="5">( (This)-&gt;lpVtbl -&gt; Suspend(This,pdwSuspendCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="11413" pos:column="1">#<cpp:directive pos:line="11413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11413" pos:column="9">IDebugThread2_Resume</name><parameter_list pos:line="11413" pos:column="29">(<param><type><name pos:line="11413" pos:column="30">This</name></type></param>,<param><type><name pos:line="11413" pos:column="35">pdwSuspendCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11414" pos:column="5">( (This)-&gt;lpVtbl -&gt; Resume(This,pdwSuspendCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="11416" pos:column="1">#<cpp:directive pos:line="11416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11416" pos:column="9">IDebugThread2_GetThreadProperties</name><parameter_list pos:line="11416" pos:column="42">(<param><type><name pos:line="11416" pos:column="43">This</name></type></param>,<param><type><name pos:line="11416" pos:column="48">dwFields</name></type></param>,<param><type><name pos:line="11416" pos:column="57">ptp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11417" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThreadProperties(This,dwFields,ptp) )</cpp:value></cpp:define> 

<cpp:define pos:line="11419" pos:column="1">#<cpp:directive pos:line="11419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11419" pos:column="9">IDebugThread2_GetLogicalThread</name><parameter_list pos:line="11419" pos:column="39">(<param><type><name pos:line="11419" pos:column="40">This</name></type></param>,<param><type><name pos:line="11419" pos:column="45">pStackFrame</name></type></param>,<param><type><name pos:line="11419" pos:column="57">ppLogicalThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11420" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLogicalThread(This,pStackFrame,ppLogicalThread) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11422" pos:column="1">#<cpp:directive pos:line="11422" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11422" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11425" pos:column="1">#<cpp:directive pos:line="11425" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11425" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11430" pos:column="1">#<cpp:directive pos:line="11430" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11430" pos:column="9">/* __IDebugThread2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11433" pos:column="1">#<cpp:directive pos:line="11433" pos:column="2">ifndef</cpp:directive> <name pos:line="11433" pos:column="9">__IDebugLogicalThread2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11434" pos:column="1">#<cpp:directive pos:line="11434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11434" pos:column="9">__IDebugLogicalThread2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11436" pos:column="1">/* interface IDebugLogicalThread2 */</comment>
<comment type="block" pos:line="11437" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11440" pos:column="1">EXTERN_C</name> <specifier pos:line="11440" pos:column="10">const</specifier> <name pos:line="11440" pos:column="16">IID</name></type> <name pos:line="11440" pos:column="20">IID_IDebugLogicalThread2</name></decl>;</decl_stmt>

<cpp:if pos:line="11442" pos:column="1">#<cpp:directive pos:line="11442" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11442" pos:column="5">defined</name><argument_list pos:line="11442" pos:column="12">(<argument><expr><name pos:line="11442" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11442" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11442" pos:column="29">!</op:operator><call><name pos:line="11442" pos:column="30">defined</name><argument_list pos:line="11442" pos:column="37">(<argument><expr><name pos:line="11442" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11444" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11444" pos:column="19">(<argument pos:line="11444" pos:column="20">"88d2f75b-d329-4e03-9b75-201f7782d8bd"</argument>)</argument_list></macro>
    <label><name pos:line="11445" pos:column="5">IDebugLogicalThread2</name> :</label> <expr_stmt><expr pos:line="11445" pos:column="28">public <name pos:line="11445" pos:column="35">IUnknown</name>
    <block pos:line="11446" pos:column="5">{
    <expr pos:line="11447" pos:column="5">public<op:operator pos:line="11447" pos:column="11">:</op:operator>
        virtual <name pos:line="11448" pos:column="17">HRESULT</name> <name pos:line="11448" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11448" pos:column="43">EnumFrameInfo</name><argument_list pos:line="11448" pos:column="56">( 
            <comment type="block" pos:line="11449" pos:column="13">/* [in] */</comment> <argument pos:line="11449" pos:column="24">FRAMEINFO_FLAGS dwFieldSpec</argument>,
            <comment type="block" pos:line="11450" pos:column="13">/* [in] */</comment> <argument pos:line="11450" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="11451" pos:column="13">/* [out] */</comment> <argument pos:line="11451" pos:column="25">__RPC__deref_out_opt IEnumDebugFrameInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="11451" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="11451" pos:column="79">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11455" pos:column="1">#<cpp:directive pos:line="11455" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11455" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11457" pos:column="5">typedef <type><struct pos:line="11457" pos:column="13">struct <name pos:line="11457" pos:column="20">IDebugLogicalThread2Vtbl</name>
    <block pos:line="11458" pos:column="5">{<public type="default" pos:line="11458" pos:column="6">
        <function_decl><type><name pos:line="11459" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11461" pos:column="9">HRESULT</name></type> ( <name pos:line="11461" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11461" pos:column="37">*</type:modifier><name pos:line="11461" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11461" pos:column="54">( 
            <param><decl><type><name pos:line="11462" pos:column="13">IDebugLogicalThread2</name> <type:modifier pos:line="11462" pos:column="34">*</type:modifier></type> <name pos:line="11462" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="11463" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11463" pos:column="24">__RPC__in</name> <name pos:line="11463" pos:column="34">REFIID</name></type> <name pos:line="11463" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11464" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11465" pos:column="13">__RPC__deref_out</name>  <name pos:line="11465" pos:column="31">void</name> <type:modifier pos:line="11465" pos:column="36">*</type:modifier><type:modifier pos:line="11465" pos:column="37">*</type:modifier></type><name pos:line="11465" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11467" pos:column="9">ULONG</name></type> ( <name pos:line="11467" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11467" pos:column="35">*</type:modifier><name pos:line="11467" pos:column="36">AddRef</name> )<parameter_list pos:line="11467" pos:column="44">( 
            <param><decl><type><name pos:line="11468" pos:column="13">IDebugLogicalThread2</name> <type:modifier pos:line="11468" pos:column="34">*</type:modifier></type> <name pos:line="11468" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11470" pos:column="9">ULONG</name></type> ( <name pos:line="11470" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11470" pos:column="35">*</type:modifier><name pos:line="11470" pos:column="36">Release</name> )<parameter_list pos:line="11470" pos:column="45">( 
            <param><decl><type><name pos:line="11471" pos:column="13">IDebugLogicalThread2</name> <type:modifier pos:line="11471" pos:column="34">*</type:modifier></type> <name pos:line="11471" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11473" pos:column="9">HRESULT</name></type> ( <name pos:line="11473" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11473" pos:column="37">*</type:modifier><name pos:line="11473" pos:column="38">EnumFrameInfo</name> )<parameter_list pos:line="11473" pos:column="53">( 
            <param><decl><type><name pos:line="11474" pos:column="13">IDebugLogicalThread2</name> <type:modifier pos:line="11474" pos:column="34">*</type:modifier></type> <name pos:line="11474" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="11475" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11475" pos:column="24">FRAMEINFO_FLAGS</name></type> <name pos:line="11475" pos:column="40">dwFieldSpec</name></decl></param>,
            <comment type="block" pos:line="11476" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11476" pos:column="24">UINT</name></type> <name pos:line="11476" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="11477" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11477" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11477" pos:column="46">IEnumDebugFrameInfo2</name> <type:modifier pos:line="11477" pos:column="67">*</type:modifier><type:modifier pos:line="11477" pos:column="68">*</type:modifier></type><name pos:line="11477" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11479" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11480" pos:column="7">IDebugLogicalThread2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11482" pos:column="5">interface</name></type> <name pos:line="11482" pos:column="15">IDebugLogicalThread2</name>
    <argument_list pos:line="11483" pos:column="5">{
        <argument><expr><name pos:line="11484" pos:column="9">CONST_VTBL</name> struct <name pos:line="11484" pos:column="27">IDebugLogicalThread2Vtbl</name> <op:operator pos:line="11484" pos:column="52">*</op:operator><name pos:line="11484" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11489" pos:column="1">#<cpp:directive pos:line="11489" pos:column="2">ifdef</cpp:directive> <name pos:line="11489" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11492" pos:column="1">#<cpp:directive pos:line="11492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11492" pos:column="9">IDebugLogicalThread2_QueryInterface</name><parameter_list pos:line="11492" pos:column="44">(<param><type><name pos:line="11492" pos:column="45">This</name></type></param>,<param><type><name pos:line="11492" pos:column="50">riid</name></type></param>,<param><type><name pos:line="11492" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11493" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11495" pos:column="1">#<cpp:directive pos:line="11495" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11495" pos:column="9">IDebugLogicalThread2_AddRef</name><parameter_list pos:line="11495" pos:column="36">(<param><type><name pos:line="11495" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11496" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11498" pos:column="1">#<cpp:directive pos:line="11498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11498" pos:column="9">IDebugLogicalThread2_Release</name><parameter_list pos:line="11498" pos:column="37">(<param><type><name pos:line="11498" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11499" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11502" pos:column="1">#<cpp:directive pos:line="11502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11502" pos:column="9">IDebugLogicalThread2_EnumFrameInfo</name><parameter_list pos:line="11502" pos:column="43">(<param><type><name pos:line="11502" pos:column="44">This</name></type></param>,<param><type><name pos:line="11502" pos:column="49">dwFieldSpec</name></type></param>,<param><type><name pos:line="11502" pos:column="61">nRadix</name></type></param>,<param><type><name pos:line="11502" pos:column="68">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11503" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumFrameInfo(This,dwFieldSpec,nRadix,ppEnum) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11505" pos:column="1">#<cpp:directive pos:line="11505" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11505" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11508" pos:column="1">#<cpp:directive pos:line="11508" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11508" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11513" pos:column="1">#<cpp:directive pos:line="11513" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11513" pos:column="9">/* __IDebugLogicalThread2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11516" pos:column="1">#<cpp:directive pos:line="11516" pos:column="2">ifndef</cpp:directive> <name pos:line="11516" pos:column="9">__IDebugThread3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11517" pos:column="1">#<cpp:directive pos:line="11517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11517" pos:column="9">__IDebugThread3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11519" pos:column="1">/* interface IDebugThread3 */</comment>
<comment type="block" pos:line="11520" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11523" pos:column="1">EXTERN_C</name> <specifier pos:line="11523" pos:column="10">const</specifier> <name pos:line="11523" pos:column="16">IID</name></type> <name pos:line="11523" pos:column="20">IID_IDebugThread3</name></decl>;</decl_stmt>

<cpp:if pos:line="11525" pos:column="1">#<cpp:directive pos:line="11525" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11525" pos:column="5">defined</name><argument_list pos:line="11525" pos:column="12">(<argument><expr><name pos:line="11525" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11525" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11525" pos:column="29">!</op:operator><call><name pos:line="11525" pos:column="30">defined</name><argument_list pos:line="11525" pos:column="37">(<argument><expr><name pos:line="11525" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11527" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11527" pos:column="19">(<argument pos:line="11527" pos:column="20">"43D24196-0000-467f-8C6B-9C006922D02F"</argument>)</argument_list></macro>
    <label><name pos:line="11528" pos:column="5">IDebugThread3</name> :</label> <expr_stmt><expr pos:line="11528" pos:column="21">public <name pos:line="11528" pos:column="28">IDebugThread2</name>
    <block pos:line="11529" pos:column="5">{
    <expr pos:line="11530" pos:column="5">public<op:operator pos:line="11530" pos:column="11">:</op:operator>
        virtual <name pos:line="11531" pos:column="17">HRESULT</name> <name pos:line="11531" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11531" pos:column="43">IsCurrentException</name><argument_list pos:line="11531" pos:column="61">( <argument><expr><name pos:line="11531" pos:column="63">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="11531" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="11531" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="11533" pos:column="9">virtual <name pos:line="11533" pos:column="17">HRESULT</name> <name pos:line="11533" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11533" pos:column="43">CanRemapLeafFrame</name><argument_list pos:line="11533" pos:column="60">( <argument><expr><name pos:line="11533" pos:column="62">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="11533" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="11533" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="11535" pos:column="9">virtual <name pos:line="11535" pos:column="17">HRESULT</name> <name pos:line="11535" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="11535" pos:column="43">RemapLeafFrame</name><argument_list pos:line="11535" pos:column="57">( <argument><expr><name pos:line="11535" pos:column="59">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="11535" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="11535" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11539" pos:column="1">#<cpp:directive pos:line="11539" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11539" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11541" pos:column="5">typedef <type><struct pos:line="11541" pos:column="13">struct <name pos:line="11541" pos:column="20">IDebugThread3Vtbl</name>
    <block pos:line="11542" pos:column="5">{<public type="default" pos:line="11542" pos:column="6">
        <function_decl><type><name pos:line="11543" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11545" pos:column="9">HRESULT</name></type> ( <name pos:line="11545" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11545" pos:column="37">*</type:modifier><name pos:line="11545" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11545" pos:column="54">( 
            <param><decl><type><name pos:line="11546" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11546" pos:column="27">*</type:modifier></type> <name pos:line="11546" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11547" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11547" pos:column="24">__RPC__in</name> <name pos:line="11547" pos:column="34">REFIID</name></type> <name pos:line="11547" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11548" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11549" pos:column="13">__RPC__deref_out</name>  <name pos:line="11549" pos:column="31">void</name> <type:modifier pos:line="11549" pos:column="36">*</type:modifier><type:modifier pos:line="11549" pos:column="37">*</type:modifier></type><name pos:line="11549" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11551" pos:column="9">ULONG</name></type> ( <name pos:line="11551" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11551" pos:column="35">*</type:modifier><name pos:line="11551" pos:column="36">AddRef</name> )<parameter_list pos:line="11551" pos:column="44">( 
            <param><decl><type><name pos:line="11552" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11552" pos:column="27">*</type:modifier></type> <name pos:line="11552" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11554" pos:column="9">ULONG</name></type> ( <name pos:line="11554" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11554" pos:column="35">*</type:modifier><name pos:line="11554" pos:column="36">Release</name> )<parameter_list pos:line="11554" pos:column="45">( 
            <param><decl><type><name pos:line="11555" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11555" pos:column="27">*</type:modifier></type> <name pos:line="11555" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11557" pos:column="9">HRESULT</name></type> ( <name pos:line="11557" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11557" pos:column="37">*</type:modifier><name pos:line="11557" pos:column="38">EnumFrameInfo</name> )<parameter_list pos:line="11557" pos:column="53">( 
            <param><decl><type><name pos:line="11558" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11558" pos:column="27">*</type:modifier></type> <name pos:line="11558" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11559" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11559" pos:column="24">FRAMEINFO_FLAGS</name></type> <name pos:line="11559" pos:column="40">dwFieldSpec</name></decl></param>,
            <comment type="block" pos:line="11560" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11560" pos:column="24">UINT</name></type> <name pos:line="11560" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="11561" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11561" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11561" pos:column="46">IEnumDebugFrameInfo2</name> <type:modifier pos:line="11561" pos:column="67">*</type:modifier><type:modifier pos:line="11561" pos:column="68">*</type:modifier></type><name pos:line="11561" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11563" pos:column="9">HRESULT</name></type> ( <name pos:line="11563" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11563" pos:column="37">*</type:modifier><name pos:line="11563" pos:column="38">GetName</name> )<parameter_list pos:line="11563" pos:column="47">( 
            <param><decl><type><name pos:line="11564" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11564" pos:column="27">*</type:modifier></type> <name pos:line="11564" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11565" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11565" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11565" pos:column="46">BSTR</name> <type:modifier pos:line="11565" pos:column="51">*</type:modifier></type><name pos:line="11565" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11567" pos:column="9">HRESULT</name></type> ( <name pos:line="11567" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11567" pos:column="37">*</type:modifier><name pos:line="11567" pos:column="38">SetThreadName</name> )<parameter_list pos:line="11567" pos:column="53">( 
            <param><decl><type><name pos:line="11568" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11568" pos:column="27">*</type:modifier></type> <name pos:line="11568" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11569" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11569" pos:column="24">__RPC__in</name> <name pos:line="11569" pos:column="34">LPCOLESTR</name></type> <name pos:line="11569" pos:column="44">pszName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11571" pos:column="9">HRESULT</name></type> ( <name pos:line="11571" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11571" pos:column="37">*</type:modifier><name pos:line="11571" pos:column="38">GetProgram</name> )<parameter_list pos:line="11571" pos:column="50">( 
            <param><decl><type><name pos:line="11572" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11572" pos:column="27">*</type:modifier></type> <name pos:line="11572" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11573" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11573" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11573" pos:column="46">IDebugProgram2</name> <type:modifier pos:line="11573" pos:column="61">*</type:modifier><type:modifier pos:line="11573" pos:column="62">*</type:modifier></type><name pos:line="11573" pos:column="63">ppProgram</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11575" pos:column="9">HRESULT</name></type> ( <name pos:line="11575" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11575" pos:column="37">*</type:modifier><name pos:line="11575" pos:column="38">CanSetNextStatement</name> )<parameter_list pos:line="11575" pos:column="59">( 
            <param><decl><type><name pos:line="11576" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11576" pos:column="27">*</type:modifier></type> <name pos:line="11576" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11577" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11577" pos:column="24">__RPC__in_opt</name> <name pos:line="11577" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="11577" pos:column="56">*</type:modifier></type><name pos:line="11577" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="11578" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11578" pos:column="24">__RPC__in_opt</name> <name pos:line="11578" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="11578" pos:column="57">*</type:modifier></type><name pos:line="11578" pos:column="58">pCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11580" pos:column="9">HRESULT</name></type> ( <name pos:line="11580" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11580" pos:column="37">*</type:modifier><name pos:line="11580" pos:column="38">SetNextStatement</name> )<parameter_list pos:line="11580" pos:column="56">( 
            <param><decl><type><name pos:line="11581" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11581" pos:column="27">*</type:modifier></type> <name pos:line="11581" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11582" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11582" pos:column="24">__RPC__in_opt</name> <name pos:line="11582" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="11582" pos:column="56">*</type:modifier></type><name pos:line="11582" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="11583" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11583" pos:column="24">__RPC__in_opt</name> <name pos:line="11583" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="11583" pos:column="57">*</type:modifier></type><name pos:line="11583" pos:column="58">pCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11585" pos:column="9">HRESULT</name></type> ( <name pos:line="11585" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11585" pos:column="37">*</type:modifier><name pos:line="11585" pos:column="38">GetThreadId</name> )<parameter_list pos:line="11585" pos:column="51">( 
            <param><decl><type><name pos:line="11586" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11586" pos:column="27">*</type:modifier></type> <name pos:line="11586" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11587" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11587" pos:column="25">__RPC__out</name> <name pos:line="11587" pos:column="36">DWORD</name> <type:modifier pos:line="11587" pos:column="42">*</type:modifier></type><name pos:line="11587" pos:column="43">pdwThreadId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11589" pos:column="9">HRESULT</name></type> ( <name pos:line="11589" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11589" pos:column="37">*</type:modifier><name pos:line="11589" pos:column="38">Suspend</name> )<parameter_list pos:line="11589" pos:column="47">( 
            <param><decl><type><name pos:line="11590" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11590" pos:column="27">*</type:modifier></type> <name pos:line="11590" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11591" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11591" pos:column="25">__RPC__out</name> <name pos:line="11591" pos:column="36">DWORD</name> <type:modifier pos:line="11591" pos:column="42">*</type:modifier></type><name pos:line="11591" pos:column="43">pdwSuspendCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11593" pos:column="9">HRESULT</name></type> ( <name pos:line="11593" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11593" pos:column="37">*</type:modifier><name pos:line="11593" pos:column="38">Resume</name> )<parameter_list pos:line="11593" pos:column="46">( 
            <param><decl><type><name pos:line="11594" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11594" pos:column="27">*</type:modifier></type> <name pos:line="11594" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11595" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11595" pos:column="25">__RPC__out</name> <name pos:line="11595" pos:column="36">DWORD</name> <type:modifier pos:line="11595" pos:column="42">*</type:modifier></type><name pos:line="11595" pos:column="43">pdwSuspendCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11597" pos:column="9">HRESULT</name></type> ( <name pos:line="11597" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11597" pos:column="37">*</type:modifier><name pos:line="11597" pos:column="38">GetThreadProperties</name> )<parameter_list pos:line="11597" pos:column="59">( 
            <param><decl><type><name pos:line="11598" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11598" pos:column="27">*</type:modifier></type> <name pos:line="11598" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11599" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11599" pos:column="24">THREADPROPERTY_FIELDS</name></type> <name pos:line="11599" pos:column="46">dwFields</name></decl></param>,
            <comment type="block" pos:line="11600" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11600" pos:column="25">__RPC__out</name> <name pos:line="11600" pos:column="36">THREADPROPERTIES</name> <type:modifier pos:line="11600" pos:column="53">*</type:modifier></type><name pos:line="11600" pos:column="54">ptp</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11602" pos:column="9">HRESULT</name></type> ( <name pos:line="11602" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11602" pos:column="37">*</type:modifier><name pos:line="11602" pos:column="38">GetLogicalThread</name> )<parameter_list pos:line="11602" pos:column="56">( 
            <param><decl><type><name pos:line="11603" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11603" pos:column="27">*</type:modifier></type> <name pos:line="11603" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="11604" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11604" pos:column="24">__RPC__in_opt</name> <name pos:line="11604" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="11604" pos:column="56">*</type:modifier></type><name pos:line="11604" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="11605" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11605" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11605" pos:column="46">IDebugLogicalThread2</name> <type:modifier pos:line="11605" pos:column="67">*</type:modifier><type:modifier pos:line="11605" pos:column="68">*</type:modifier></type><name pos:line="11605" pos:column="69">ppLogicalThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11607" pos:column="9">HRESULT</name></type> ( <name pos:line="11607" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11607" pos:column="37">*</type:modifier><name pos:line="11607" pos:column="38">IsCurrentException</name> )<parameter_list pos:line="11607" pos:column="58">( 
            <param><decl><type><name pos:line="11608" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11608" pos:column="27">*</type:modifier></type> <name pos:line="11608" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11610" pos:column="9">HRESULT</name></type> ( <name pos:line="11610" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11610" pos:column="37">*</type:modifier><name pos:line="11610" pos:column="38">CanRemapLeafFrame</name> )<parameter_list pos:line="11610" pos:column="57">( 
            <param><decl><type><name pos:line="11611" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11611" pos:column="27">*</type:modifier></type> <name pos:line="11611" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11613" pos:column="9">HRESULT</name></type> ( <name pos:line="11613" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11613" pos:column="37">*</type:modifier><name pos:line="11613" pos:column="38">RemapLeafFrame</name> )<parameter_list pos:line="11613" pos:column="54">( 
            <param><decl><type><name pos:line="11614" pos:column="13">IDebugThread3</name> <type:modifier pos:line="11614" pos:column="27">*</type:modifier></type> <name pos:line="11614" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11616" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11617" pos:column="7">IDebugThread3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11619" pos:column="5">interface</name></type> <name pos:line="11619" pos:column="15">IDebugThread3</name>
    <argument_list pos:line="11620" pos:column="5">{
        <argument><expr><name pos:line="11621" pos:column="9">CONST_VTBL</name> struct <name pos:line="11621" pos:column="27">IDebugThread3Vtbl</name> <op:operator pos:line="11621" pos:column="45">*</op:operator><name pos:line="11621" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11626" pos:column="1">#<cpp:directive pos:line="11626" pos:column="2">ifdef</cpp:directive> <name pos:line="11626" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11629" pos:column="1">#<cpp:directive pos:line="11629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11629" pos:column="9">IDebugThread3_QueryInterface</name><parameter_list pos:line="11629" pos:column="37">(<param><type><name pos:line="11629" pos:column="38">This</name></type></param>,<param><type><name pos:line="11629" pos:column="43">riid</name></type></param>,<param><type><name pos:line="11629" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11630" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11632" pos:column="1">#<cpp:directive pos:line="11632" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11632" pos:column="9">IDebugThread3_AddRef</name><parameter_list pos:line="11632" pos:column="29">(<param><type><name pos:line="11632" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11633" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11635" pos:column="1">#<cpp:directive pos:line="11635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11635" pos:column="9">IDebugThread3_Release</name><parameter_list pos:line="11635" pos:column="30">(<param><type><name pos:line="11635" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11636" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11639" pos:column="1">#<cpp:directive pos:line="11639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11639" pos:column="9">IDebugThread3_EnumFrameInfo</name><parameter_list pos:line="11639" pos:column="36">(<param><type><name pos:line="11639" pos:column="37">This</name></type></param>,<param><type><name pos:line="11639" pos:column="42">dwFieldSpec</name></type></param>,<param><type><name pos:line="11639" pos:column="54">nRadix</name></type></param>,<param><type><name pos:line="11639" pos:column="61">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11640" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumFrameInfo(This,dwFieldSpec,nRadix,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="11642" pos:column="1">#<cpp:directive pos:line="11642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11642" pos:column="9">IDebugThread3_GetName</name><parameter_list pos:line="11642" pos:column="30">(<param><type><name pos:line="11642" pos:column="31">This</name></type></param>,<param><type><name pos:line="11642" pos:column="36">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11643" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="11645" pos:column="1">#<cpp:directive pos:line="11645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11645" pos:column="9">IDebugThread3_SetThreadName</name><parameter_list pos:line="11645" pos:column="36">(<param><type><name pos:line="11645" pos:column="37">This</name></type></param>,<param><type><name pos:line="11645" pos:column="42">pszName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11646" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetThreadName(This,pszName) )</cpp:value></cpp:define> 

<cpp:define pos:line="11648" pos:column="1">#<cpp:directive pos:line="11648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11648" pos:column="9">IDebugThread3_GetProgram</name><parameter_list pos:line="11648" pos:column="33">(<param><type><name pos:line="11648" pos:column="34">This</name></type></param>,<param><type><name pos:line="11648" pos:column="39">ppProgram</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11649" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProgram(This,ppProgram) )</cpp:value></cpp:define> 

<cpp:define pos:line="11651" pos:column="1">#<cpp:directive pos:line="11651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11651" pos:column="9">IDebugThread3_CanSetNextStatement</name><parameter_list pos:line="11651" pos:column="42">(<param><type><name pos:line="11651" pos:column="43">This</name></type></param>,<param><type><name pos:line="11651" pos:column="48">pStackFrame</name></type></param>,<param><type><name pos:line="11651" pos:column="60">pCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11652" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanSetNextStatement(This,pStackFrame,pCodeContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="11654" pos:column="1">#<cpp:directive pos:line="11654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11654" pos:column="9">IDebugThread3_SetNextStatement</name><parameter_list pos:line="11654" pos:column="39">(<param><type><name pos:line="11654" pos:column="40">This</name></type></param>,<param><type><name pos:line="11654" pos:column="45">pStackFrame</name></type></param>,<param><type><name pos:line="11654" pos:column="57">pCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11655" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetNextStatement(This,pStackFrame,pCodeContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="11657" pos:column="1">#<cpp:directive pos:line="11657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11657" pos:column="9">IDebugThread3_GetThreadId</name><parameter_list pos:line="11657" pos:column="34">(<param><type><name pos:line="11657" pos:column="35">This</name></type></param>,<param><type><name pos:line="11657" pos:column="40">pdwThreadId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11658" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThreadId(This,pdwThreadId) )</cpp:value></cpp:define> 

<cpp:define pos:line="11660" pos:column="1">#<cpp:directive pos:line="11660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11660" pos:column="9">IDebugThread3_Suspend</name><parameter_list pos:line="11660" pos:column="30">(<param><type><name pos:line="11660" pos:column="31">This</name></type></param>,<param><type><name pos:line="11660" pos:column="36">pdwSuspendCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11661" pos:column="5">( (This)-&gt;lpVtbl -&gt; Suspend(This,pdwSuspendCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="11663" pos:column="1">#<cpp:directive pos:line="11663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11663" pos:column="9">IDebugThread3_Resume</name><parameter_list pos:line="11663" pos:column="29">(<param><type><name pos:line="11663" pos:column="30">This</name></type></param>,<param><type><name pos:line="11663" pos:column="35">pdwSuspendCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11664" pos:column="5">( (This)-&gt;lpVtbl -&gt; Resume(This,pdwSuspendCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="11666" pos:column="1">#<cpp:directive pos:line="11666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11666" pos:column="9">IDebugThread3_GetThreadProperties</name><parameter_list pos:line="11666" pos:column="42">(<param><type><name pos:line="11666" pos:column="43">This</name></type></param>,<param><type><name pos:line="11666" pos:column="48">dwFields</name></type></param>,<param><type><name pos:line="11666" pos:column="57">ptp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11667" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThreadProperties(This,dwFields,ptp) )</cpp:value></cpp:define> 

<cpp:define pos:line="11669" pos:column="1">#<cpp:directive pos:line="11669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11669" pos:column="9">IDebugThread3_GetLogicalThread</name><parameter_list pos:line="11669" pos:column="39">(<param><type><name pos:line="11669" pos:column="40">This</name></type></param>,<param><type><name pos:line="11669" pos:column="45">pStackFrame</name></type></param>,<param><type><name pos:line="11669" pos:column="57">ppLogicalThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11670" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLogicalThread(This,pStackFrame,ppLogicalThread) )</cpp:value></cpp:define> 


<cpp:define pos:line="11673" pos:column="1">#<cpp:directive pos:line="11673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11673" pos:column="9">IDebugThread3_IsCurrentException</name><parameter_list pos:line="11673" pos:column="41">(<param><type><name pos:line="11673" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11674" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsCurrentException(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11676" pos:column="1">#<cpp:directive pos:line="11676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11676" pos:column="9">IDebugThread3_CanRemapLeafFrame</name><parameter_list pos:line="11676" pos:column="40">(<param><type><name pos:line="11676" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11677" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanRemapLeafFrame(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11679" pos:column="1">#<cpp:directive pos:line="11679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11679" pos:column="9">IDebugThread3_RemapLeafFrame</name><parameter_list pos:line="11679" pos:column="37">(<param><type><name pos:line="11679" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11680" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemapLeafFrame(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11682" pos:column="1">#<cpp:directive pos:line="11682" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11682" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11685" pos:column="1">#<cpp:directive pos:line="11685" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11685" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11690" pos:column="1">#<cpp:directive pos:line="11690" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11690" pos:column="9">/* __IDebugThread3_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="11693" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0080 */</comment>
<comment type="block" pos:line="11694" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="11696" pos:column="1">#<cpp:directive pos:line="11696" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11696" pos:column="9">DBG_ATTRIB_NONE</name></cpp:macro>					<cpp:value pos:line="11696" pos:column="57">0x0000000000000000</cpp:value></cpp:define>
<cpp:define pos:line="11697" pos:column="1">#<cpp:directive pos:line="11697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11697" pos:column="9">DBG_ATTRIB_ALL</name></cpp:macro>					<cpp:value pos:line="11697" pos:column="57">0xffffffffffffffff</cpp:value></cpp:define>
<cpp:define pos:line="11698" pos:column="1">#<cpp:directive pos:line="11698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11698" pos:column="9">DBG_ATTRIB_OBJ_IS_EXPANDABLE</name></cpp:macro>		<cpp:value pos:line="11698" pos:column="49">0x0000000000000001</cpp:value></cpp:define>
<cpp:define pos:line="11699" pos:column="1">#<cpp:directive pos:line="11699" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11699" pos:column="9">DBG_ATTRIB_OBJ_HAS_ID</name></cpp:macro>            <cpp:value pos:line="11699" pos:column="42">0x0000000000000002</cpp:value></cpp:define>
<cpp:define pos:line="11700" pos:column="1">#<cpp:directive pos:line="11700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11700" pos:column="9">DBG_ATTRIB_OBJ_CAN_HAVE_ID</name></cpp:macro>            <cpp:value pos:line="11700" pos:column="47">0x0000000000000004</cpp:value></cpp:define>
<cpp:define pos:line="11701" pos:column="1">#<cpp:directive pos:line="11701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11701" pos:column="9">DBG_ATTRIB_VALUE_READONLY</name></cpp:macro>		<cpp:value pos:line="11701" pos:column="49">0x0000000000000010</cpp:value></cpp:define>
<cpp:define pos:line="11702" pos:column="1">#<cpp:directive pos:line="11702" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11702" pos:column="9">DBG_ATTRIB_VALUE_ERROR</name></cpp:macro>			<cpp:value pos:line="11702" pos:column="49">0x0000000000000020</cpp:value></cpp:define>
<cpp:define pos:line="11703" pos:column="1">#<cpp:directive pos:line="11703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11703" pos:column="9">DBG_ATTRIB_VALUE_SIDE_EFFECT</name></cpp:macro>		<cpp:value pos:line="11703" pos:column="49">0x0000000000000040</cpp:value></cpp:define>
<cpp:define pos:line="11704" pos:column="1">#<cpp:directive pos:line="11704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11704" pos:column="9">DBG_ATTRIB_OVERLOADED_CONTAINER</name></cpp:macro>	<cpp:value pos:line="11704" pos:column="41">0x0000000000000080</cpp:value></cpp:define>
<cpp:define pos:line="11705" pos:column="1">#<cpp:directive pos:line="11705" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11705" pos:column="9">DBG_ATTRIB_VALUE_BOOLEAN</name></cpp:macro>			<cpp:value pos:line="11705" pos:column="57">0x0000000000000100</cpp:value></cpp:define>
<cpp:define pos:line="11706" pos:column="1">#<cpp:directive pos:line="11706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11706" pos:column="9">DBG_ATTRIB_VALUE_BOOLEAN_TRUE</name></cpp:macro>	<cpp:value pos:line="11706" pos:column="41">0x0000000000000200</cpp:value></cpp:define>
<cpp:define pos:line="11707" pos:column="1">#<cpp:directive pos:line="11707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11707" pos:column="9">DBG_ATTRIB_VALUE_INVALID</name></cpp:macro>			<cpp:value pos:line="11707" pos:column="57">0x0000000000000400</cpp:value></cpp:define>
<cpp:define pos:line="11708" pos:column="1">#<cpp:directive pos:line="11708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11708" pos:column="9">DBG_ATTRIB_VALUE_NAT</name></cpp:macro>				<cpp:value pos:line="11708" pos:column="57">0x0000000000000800</cpp:value></cpp:define>
<cpp:define pos:line="11709" pos:column="1">#<cpp:directive pos:line="11709" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11709" pos:column="9">DBG_ATTRIB_VALUE_AUTOEXPANDED</name></cpp:macro>	<cpp:value pos:line="11709" pos:column="41">0x0000000000001000</cpp:value></cpp:define>
<cpp:define pos:line="11710" pos:column="1">#<cpp:directive pos:line="11710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11710" pos:column="9">DBG_ATTRIB_VALUE_TIMEOUT</name></cpp:macro>     	<cpp:value pos:line="11710" pos:column="41">0x0000000000002000</cpp:value></cpp:define>
<cpp:define pos:line="11711" pos:column="1">#<cpp:directive pos:line="11711" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11711" pos:column="9">DBG_ATTRIB_VALUE_RAW_STRING</name></cpp:macro>      <cpp:value pos:line="11711" pos:column="42">0x0000000000004000</cpp:value></cpp:define>
<cpp:define pos:line="11712" pos:column="1">#<cpp:directive pos:line="11712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11712" pos:column="9">DBG_ATTRIB_VALUE_CUSTOM_VIEWER</name></cpp:macro>   <cpp:value pos:line="11712" pos:column="42">0x0000000000008000</cpp:value></cpp:define>
<cpp:define pos:line="11713" pos:column="1">#<cpp:directive pos:line="11713" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11713" pos:column="9">DBG_ATTRIB_ACCESS_NONE</name></cpp:macro>			<cpp:value pos:line="11713" pos:column="49">0x0000000000010000</cpp:value></cpp:define>
<cpp:define pos:line="11714" pos:column="1">#<cpp:directive pos:line="11714" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11714" pos:column="9">DBG_ATTRIB_ACCESS_PUBLIC</name></cpp:macro>			<cpp:value pos:line="11714" pos:column="57">0x0000000000020000</cpp:value></cpp:define>
<cpp:define pos:line="11715" pos:column="1">#<cpp:directive pos:line="11715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11715" pos:column="9">DBG_ATTRIB_ACCESS_PRIVATE</name></cpp:macro>		<cpp:value pos:line="11715" pos:column="49">0x0000000000040000</cpp:value></cpp:define>
<cpp:define pos:line="11716" pos:column="1">#<cpp:directive pos:line="11716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11716" pos:column="9">DBG_ATTRIB_ACCESS_PROTECTED</name></cpp:macro>		<cpp:value pos:line="11716" pos:column="49">0x0000000000080000</cpp:value></cpp:define>
<cpp:define pos:line="11717" pos:column="1">#<cpp:directive pos:line="11717" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11717" pos:column="9">DBG_ATTRIB_ACCESS_FINAL</name></cpp:macro>			<cpp:value pos:line="11717" pos:column="49">0x0000000000100000</cpp:value></cpp:define>
<cpp:define pos:line="11718" pos:column="1">#<cpp:directive pos:line="11718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11718" pos:column="9">DBG_ATTRIB_ACCESS_ALL</name></cpp:macro>			<cpp:value pos:line="11718" pos:column="49">0x00000000001f0000</cpp:value></cpp:define>
<cpp:define pos:line="11719" pos:column="1">#<cpp:directive pos:line="11719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11719" pos:column="9">DBG_ATTRIB_STORAGE_NONE</name></cpp:macro>			<cpp:value pos:line="11719" pos:column="49">0x0000000001000000</cpp:value></cpp:define>
<cpp:define pos:line="11720" pos:column="1">#<cpp:directive pos:line="11720" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11720" pos:column="9">DBG_ATTRIB_STORAGE_GLOBAL</name></cpp:macro>		<cpp:value pos:line="11720" pos:column="49">0x0000000002000000</cpp:value></cpp:define>
<cpp:define pos:line="11721" pos:column="1">#<cpp:directive pos:line="11721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11721" pos:column="9">DBG_ATTRIB_STORAGE_STATIC</name></cpp:macro>		<cpp:value pos:line="11721" pos:column="49">0x0000000004000000</cpp:value></cpp:define>
<cpp:define pos:line="11722" pos:column="1">#<cpp:directive pos:line="11722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11722" pos:column="9">DBG_ATTRIB_STORAGE_REGISTER</name></cpp:macro>		<cpp:value pos:line="11722" pos:column="49">0x0000000008000000</cpp:value></cpp:define>
<cpp:define pos:line="11723" pos:column="1">#<cpp:directive pos:line="11723" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11723" pos:column="9">DBG_ATTRIB_STORAGE_ALL</name></cpp:macro>			<cpp:value pos:line="11723" pos:column="49">0x000000000f000000</cpp:value></cpp:define>
<cpp:define pos:line="11724" pos:column="1">#<cpp:directive pos:line="11724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11724" pos:column="9">DBG_ATTRIB_TYPE_NONE</name></cpp:macro>				<cpp:value pos:line="11724" pos:column="57">0x0000000100000000</cpp:value></cpp:define>
<cpp:define pos:line="11725" pos:column="1">#<cpp:directive pos:line="11725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11725" pos:column="9">DBG_ATTRIB_TYPE_VIRTUAL</name></cpp:macro>			<cpp:value pos:line="11725" pos:column="49">0x0000000200000000</cpp:value></cpp:define>
<cpp:define pos:line="11726" pos:column="1">#<cpp:directive pos:line="11726" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11726" pos:column="9">DBG_ATTRIB_TYPE_CONSTANT</name></cpp:macro>			<cpp:value pos:line="11726" pos:column="57">0x0000000400000000</cpp:value></cpp:define>
<cpp:define pos:line="11727" pos:column="1">#<cpp:directive pos:line="11727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11727" pos:column="9">DBG_ATTRIB_TYPE_SYNCHRONIZED</name></cpp:macro>		<cpp:value pos:line="11727" pos:column="49">0x0000000800000000</cpp:value></cpp:define>
<cpp:define pos:line="11728" pos:column="1">#<cpp:directive pos:line="11728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11728" pos:column="9">DBG_ATTRIB_TYPE_VOLATILE</name></cpp:macro>			<cpp:value pos:line="11728" pos:column="57">0x0000001000000000</cpp:value></cpp:define>
<cpp:define pos:line="11729" pos:column="1">#<cpp:directive pos:line="11729" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11729" pos:column="9">DBG_ATTRIB_TYPE_ALL</name></cpp:macro>				<cpp:value pos:line="11729" pos:column="57">0x0000001f00000000</cpp:value></cpp:define>
<cpp:define pos:line="11730" pos:column="1">#<cpp:directive pos:line="11730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11730" pos:column="9">DBG_ATTRIB_DATA</name></cpp:macro>					<cpp:value pos:line="11730" pos:column="57">0x0000010000000000</cpp:value></cpp:define>
<cpp:define pos:line="11731" pos:column="1">#<cpp:directive pos:line="11731" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11731" pos:column="9">DBG_ATTRIB_METHOD</name></cpp:macro>				<cpp:value pos:line="11731" pos:column="57">0x0000020000000000</cpp:value></cpp:define>
<cpp:define pos:line="11732" pos:column="1">#<cpp:directive pos:line="11732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11732" pos:column="9">DBG_ATTRIB_PROPERTY</name></cpp:macro>				<cpp:value pos:line="11732" pos:column="57">0x0000040000000000</cpp:value></cpp:define>
<cpp:define pos:line="11733" pos:column="1">#<cpp:directive pos:line="11733" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11733" pos:column="9">DBG_ATTRIB_CLASS</name></cpp:macro>					<cpp:value pos:line="11733" pos:column="65">0x0000080000000000</cpp:value></cpp:define>
<cpp:define pos:line="11734" pos:column="1">#<cpp:directive pos:line="11734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11734" pos:column="9">DBG_ATTRIB_BASECLASS</name></cpp:macro>				<cpp:value pos:line="11734" pos:column="57">0x0000100000000000</cpp:value></cpp:define>
<cpp:define pos:line="11735" pos:column="1">#<cpp:directive pos:line="11735" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11735" pos:column="9">DBG_ATTRIB_INTERFACE</name></cpp:macro>				<cpp:value pos:line="11735" pos:column="57">0x0000200000000000</cpp:value></cpp:define>
<cpp:define pos:line="11736" pos:column="1">#<cpp:directive pos:line="11736" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11736" pos:column="9">DBG_ATTRIB_INNERCLASS</name></cpp:macro>			<cpp:value pos:line="11736" pos:column="49">0x0000400000000000</cpp:value></cpp:define>
<cpp:define pos:line="11737" pos:column="1">#<cpp:directive pos:line="11737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11737" pos:column="9">DBG_ATTRIB_MOSTDERIVEDCLASS</name></cpp:macro>		<cpp:value pos:line="11737" pos:column="49">0x0000800000000000</cpp:value></cpp:define>
<cpp:define pos:line="11738" pos:column="1">#<cpp:directive pos:line="11738" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11738" pos:column="9">DBG_ATTRIB_CHILD_ALL</name></cpp:macro>				<cpp:value pos:line="11738" pos:column="57">0x0000ff0000000000</cpp:value></cpp:define>
<cpp:define pos:line="11739" pos:column="1">#<cpp:directive pos:line="11739" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11739" pos:column="9">DBG_ATTRIB_MULTI_CUSTOM_VIEWERS</name></cpp:macro>  <cpp:value pos:line="11739" pos:column="42">0x0001000000000000</cpp:value></cpp:define>
<cpp:define pos:line="11740" pos:column="1">#<cpp:directive pos:line="11740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11740" pos:column="9">DBG_ATTRIB_EVENT</name></cpp:macro>                 <cpp:value pos:line="11740" pos:column="42">0x0002000000000000</cpp:value></cpp:define>
<typedef pos:line="11741" pos:column="1">typedef <type><name pos:line="11741" pos:column="9">UINT64</name></type> <name pos:line="11741" pos:column="16">DBG_ATTRIB_FLAGS</name>;</typedef>


<enum pos:line="11744" pos:column="1">enum <name pos:line="11744" pos:column="6">enum_DEBUGPROP_INFO_FLAGS</name>
    <block pos:line="11745" pos:column="5">{	<decl><name pos:line="11745" pos:column="9">DEBUGPROP_INFO_FULLNAME</name>	<init pos:line="11745" pos:column="33">= <expr><lit:literal type="number" pos:line="11745" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="11745" pos:column="38">,</op:operator>
	<decl><name pos:line="11746" pos:column="9">DEBUGPROP_INFO_NAME</name>	<init pos:line="11746" pos:column="33">= <expr><lit:literal type="number" pos:line="11746" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="11746" pos:column="38">,</op:operator>
	<decl><name pos:line="11747" pos:column="9">DEBUGPROP_INFO_TYPE</name>	<init pos:line="11747" pos:column="33">= <expr><lit:literal type="number" pos:line="11747" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="11747" pos:column="38">,</op:operator>
	<decl><name pos:line="11748" pos:column="9">DEBUGPROP_INFO_VALUE</name>	<init pos:line="11748" pos:column="33">= <expr><lit:literal type="number" pos:line="11748" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="11748" pos:column="38">,</op:operator>
	<decl><name pos:line="11749" pos:column="9">DEBUGPROP_INFO_ATTRIB</name>	<init pos:line="11749" pos:column="33">= <expr><lit:literal type="number" pos:line="11749" pos:column="35">0x10</lit:literal></expr></init></decl><op:operator pos:line="11749" pos:column="39">,</op:operator>
	<decl><name pos:line="11750" pos:column="9">DEBUGPROP_INFO_PROP</name>	<init pos:line="11750" pos:column="33">= <expr><lit:literal type="number" pos:line="11750" pos:column="35">0x20</lit:literal></expr></init></decl><op:operator pos:line="11750" pos:column="39">,</op:operator>
	<decl><name pos:line="11751" pos:column="9">DEBUGPROP_INFO_VALUE_AUTOEXPAND</name>	<init pos:line="11751" pos:column="41">= <expr><lit:literal type="number" pos:line="11751" pos:column="43">0x10000</lit:literal></expr></init></decl><op:operator pos:line="11751" pos:column="50">,</op:operator>
	<decl><name pos:line="11752" pos:column="9">DEBUGPROP_INFO_NOFUNCEVAL</name>	<init pos:line="11752" pos:column="41">= <expr><lit:literal type="number" pos:line="11752" pos:column="43">0x20000</lit:literal></expr></init></decl><op:operator pos:line="11752" pos:column="50">,</op:operator>
	<decl><name pos:line="11753" pos:column="9">DEBUGPROP_INFO_VALUE_RAW</name>	<init pos:line="11753" pos:column="41">= <expr><lit:literal type="number" pos:line="11753" pos:column="43">0x40000</lit:literal></expr></init></decl><op:operator pos:line="11753" pos:column="50">,</op:operator>
	<decl><name pos:line="11754" pos:column="9">DEBUGPROP_INFO_VALUE_NO_TOSTRING</name>	<init pos:line="11754" pos:column="49">= <expr><lit:literal type="number" pos:line="11754" pos:column="51">0x80000</lit:literal></expr></init></decl><op:operator pos:line="11754" pos:column="58">,</op:operator>
	<decl><name pos:line="11755" pos:column="9">DEBUGPROP_INFO_NO_NONPUBLIC_MEMBERS</name>	<init pos:line="11755" pos:column="49">= <expr><lit:literal type="number" pos:line="11755" pos:column="51">0x100000</lit:literal></expr></init></decl><op:operator pos:line="11755" pos:column="59">,</op:operator>
	<decl><name pos:line="11756" pos:column="9">DEBUGPROP_INFO_NONE</name>	<init pos:line="11756" pos:column="33">= <expr><lit:literal type="number" pos:line="11756" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="11756" pos:column="36">,</op:operator>
	<decl><name pos:line="11757" pos:column="9">DEBUGPROP_INFO_STANDARD</name>	<init pos:line="11757" pos:column="33">= <expr><op:operator pos:line="11757" pos:column="35">(</op:operator> <op:operator pos:line="11757" pos:column="37">(</op:operator> <op:operator pos:line="11757" pos:column="39">(</op:operator> <name pos:line="11757" pos:column="41">DEBUGPROP_INFO_ATTRIB</name> <op:operator pos:line="11757" pos:column="63">|</op:operator> <name pos:line="11757" pos:column="65">DEBUGPROP_INFO_NAME</name> <op:operator pos:line="11757" pos:column="85">)</op:operator>  <op:operator pos:line="11757" pos:column="88">|</op:operator> <name pos:line="11757" pos:column="90">DEBUGPROP_INFO_TYPE</name> <op:operator pos:line="11757" pos:column="110">)</op:operator>  <op:operator pos:line="11757" pos:column="113">|</op:operator> <name pos:line="11757" pos:column="115">DEBUGPROP_INFO_VALUE</name> <op:operator pos:line="11757" pos:column="136">)</op:operator></expr></init></decl> <op:operator pos:line="11757" pos:column="138">,</op:operator>
	<decl><name pos:line="11758" pos:column="9">DEBUGPROP_INFO_ALL</name>	<init pos:line="11758" pos:column="33">= <expr><lit:literal type="number" pos:line="11758" pos:column="35">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="11760" pos:column="1">typedef <type><name pos:line="11760" pos:column="9">DWORD</name></type> <name pos:line="11760" pos:column="15">DEBUGPROP_INFO_FLAGS</name>;</typedef>

<typedef pos:line="11762" pos:column="1">typedef <type><struct pos:line="11762" pos:column="9">struct <name pos:line="11762" pos:column="16">tagDEBUG_PROPERTY_INFO</name>
    <block pos:line="11763" pos:column="5">{<public type="default" pos:line="11763" pos:column="6">
    <decl_stmt><decl><type><name pos:line="11764" pos:column="5">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="11764" pos:column="26">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11765" pos:column="5">BSTR</name></type> <name pos:line="11765" pos:column="10">bstrFullName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11766" pos:column="5">BSTR</name></type> <name pos:line="11766" pos:column="10">bstrName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11767" pos:column="5">BSTR</name></type> <name pos:line="11767" pos:column="10">bstrType</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11768" pos:column="5">BSTR</name></type> <name pos:line="11768" pos:column="10">bstrValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11769" pos:column="5">IDebugProperty2</name> <type:modifier pos:line="11769" pos:column="21">*</type:modifier></type><name pos:line="11769" pos:column="22">pProperty</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11770" pos:column="5">DBG_ATTRIB_FLAGS</name></type> <name pos:line="11770" pos:column="22">dwAttrib</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="11771" pos:column="9">DEBUG_PROPERTY_INFO</name>;</typedef>

<typedef pos:line="11773" pos:column="1">typedef <type><struct pos:line="11773" pos:column="9">struct <name pos:line="11773" pos:column="16">tagDEBUG_CUSTOM_VIEWER</name>
    <block pos:line="11774" pos:column="5">{<public type="default" pos:line="11774" pos:column="6">
    <decl_stmt><decl><type><name pos:line="11775" pos:column="5">DWORD</name></type> <name pos:line="11775" pos:column="11">dwID</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11776" pos:column="5">BSTR</name></type> <name pos:line="11776" pos:column="10">bstrMenuName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11777" pos:column="5">BSTR</name></type> <name pos:line="11777" pos:column="10">bstrDescription</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11778" pos:column="5">GUID</name></type> <name pos:line="11778" pos:column="10">guidLang</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11779" pos:column="5">GUID</name></type> <name pos:line="11779" pos:column="10">guidVendor</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="11780" pos:column="5">BSTR</name></type> <name pos:line="11780" pos:column="10">bstrMetric</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="11781" pos:column="9">DEBUG_CUSTOM_VIEWER</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="11785" pos:column="1">extern</specifier> <name pos:line="11785" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="11785" pos:column="22">__MIDL_itf_msdbg_0000_0080_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="11786" pos:column="1">extern</specifier> <name pos:line="11786" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="11786" pos:column="22">__MIDL_itf_msdbg_0000_0080_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="11788" pos:column="1">#<cpp:directive pos:line="11788" pos:column="2">ifndef</cpp:directive> <name pos:line="11788" pos:column="9">__IDebugProperty2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11789" pos:column="1">#<cpp:directive pos:line="11789" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11789" pos:column="9">__IDebugProperty2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11791" pos:column="1">/* interface IDebugProperty2 */</comment>
<comment type="block" pos:line="11792" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="11795" pos:column="1">EXTERN_C</name> <specifier pos:line="11795" pos:column="10">const</specifier> <name pos:line="11795" pos:column="16">IID</name></type> <name pos:line="11795" pos:column="20">IID_IDebugProperty2</name></decl>;</decl_stmt>

<cpp:if pos:line="11797" pos:column="1">#<cpp:directive pos:line="11797" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11797" pos:column="5">defined</name><argument_list pos:line="11797" pos:column="12">(<argument><expr><name pos:line="11797" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11797" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11797" pos:column="29">!</op:operator><call><name pos:line="11797" pos:column="30">defined</name><argument_list pos:line="11797" pos:column="37">(<argument><expr><name pos:line="11797" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11799" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11799" pos:column="19">(<argument pos:line="11799" pos:column="20">"a7ee3e7e-2dd2-4ad7-9697-f4aae3427762"</argument>)</argument_list></macro>
    <label><name pos:line="11800" pos:column="5">IDebugProperty2</name> :</label> <expr_stmt><expr pos:line="11800" pos:column="23">public <name pos:line="11800" pos:column="30">IUnknown</name>
    <block pos:line="11801" pos:column="5">{
    <expr pos:line="11802" pos:column="5">public<op:operator pos:line="11802" pos:column="11">:</op:operator>
        virtual <name pos:line="11803" pos:column="17">HRESULT</name> <name pos:line="11803" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11803" pos:column="43">GetPropertyInfo</name><argument_list pos:line="11803" pos:column="58">( 
            <comment type="block" pos:line="11804" pos:column="13">/* [in] */</comment> <argument pos:line="11804" pos:column="24">DEBUGPROP_INFO_FLAGS dwFields</argument>,
            <comment type="block" pos:line="11805" pos:column="13">/* [in] */</comment> <argument pos:line="11805" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="11806" pos:column="13">/* [in] */</comment> <argument pos:line="11806" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="11807" pos:column="13">/* [length_is][size_is][full][in] */</comment> <argument pos:line="11807" pos:column="50">__RPC__in_ecount_part_opt(dwArgCount, dwArgCount) IDebugReference2 **rgpArgs</argument>,
            <comment type="block" pos:line="11808" pos:column="13">/* [in] */</comment> <argument pos:line="11808" pos:column="24">DWORD dwArgCount</argument>,
            <comment type="block" pos:line="11809" pos:column="13">/* [out] */</comment> <argument pos:line="11809" pos:column="25">__RPC__out DEBUG_PROPERTY_INFO *pPropertyInfo</argument>)</argument_list></macro> <op:operator pos:line="11809" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="11809" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="11811" pos:column="9">virtual <name pos:line="11811" pos:column="17">HRESULT</name> <name pos:line="11811" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11811" pos:column="43">SetValueAsString</name><argument_list pos:line="11811" pos:column="59">( 
            <comment type="block" pos:line="11812" pos:column="13">/* [in] */</comment> <argument pos:line="11812" pos:column="24">__RPC__in LPCOLESTR pszValue</argument>,
            <comment type="block" pos:line="11813" pos:column="13">/* [in] */</comment> <argument pos:line="11813" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="11814" pos:column="13">/* [in] */</comment> <argument pos:line="11814" pos:column="24">DWORD dwTimeout</argument>)</argument_list></macro> <op:operator pos:line="11814" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="11814" pos:column="43">0</lit:literal></expr>;
        
        <expr pos:line="11816" pos:column="9">virtual <name pos:line="11816" pos:column="17">HRESULT</name> <name pos:line="11816" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11816" pos:column="43">SetValueAsReference</name><argument_list pos:line="11816" pos:column="62">( 
            <comment type="block" pos:line="11817" pos:column="13">/* [length_is][size_is][full][in] */</comment> <argument pos:line="11817" pos:column="50">__RPC__in_ecount_part_opt(dwArgCount, dwArgCount) IDebugReference2 **rgpArgs</argument>,
            <comment type="block" pos:line="11818" pos:column="13">/* [in] */</comment> <argument pos:line="11818" pos:column="24">DWORD dwArgCount</argument>,
            <comment type="block" pos:line="11819" pos:column="13">/* [in] */</comment> <argument pos:line="11819" pos:column="24">__RPC__in_opt IDebugReference2 *pValue</argument>,
            <comment type="block" pos:line="11820" pos:column="13">/* [in] */</comment> <argument pos:line="11820" pos:column="24">DWORD dwTimeout</argument>)</argument_list></macro> <op:operator pos:line="11820" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="11820" pos:column="43">0</lit:literal></expr>;
        
        <expr pos:line="11822" pos:column="9">virtual <name pos:line="11822" pos:column="17">HRESULT</name> <name pos:line="11822" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11822" pos:column="43">EnumChildren</name><argument_list pos:line="11822" pos:column="55">( 
            <comment type="block" pos:line="11823" pos:column="13">/* [in] */</comment> <argument pos:line="11823" pos:column="24">DEBUGPROP_INFO_FLAGS dwFields</argument>,
            <comment type="block" pos:line="11824" pos:column="13">/* [in] */</comment> <argument pos:line="11824" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="11825" pos:column="13">/* [in] */</comment> <argument pos:line="11825" pos:column="24">__RPC__in REFGUID guidFilter</argument>,
            <comment type="block" pos:line="11826" pos:column="13">/* [in] */</comment> <argument pos:line="11826" pos:column="24">DBG_ATTRIB_FLAGS dwAttribFilter</argument>,
            <comment type="block" pos:line="11827" pos:column="13">/* [full][in] */</comment> <argument pos:line="11827" pos:column="30">__RPC__in_opt LPCOLESTR pszNameFilter</argument>,
            <comment type="block" pos:line="11828" pos:column="13">/* [in] */</comment> <argument pos:line="11828" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="11829" pos:column="13">/* [out] */</comment> <argument pos:line="11829" pos:column="25">__RPC__deref_out_opt IEnumDebugPropertyInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="11829" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="11829" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="11831" pos:column="9">virtual <name pos:line="11831" pos:column="17">HRESULT</name> <name pos:line="11831" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11831" pos:column="43">GetParent</name><argument_list pos:line="11831" pos:column="52">( 
            <comment type="block" pos:line="11832" pos:column="13">/* [out] */</comment> <argument pos:line="11832" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppParent</argument>)</argument_list></macro> <op:operator pos:line="11832" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="11832" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="11834" pos:column="9">virtual <name pos:line="11834" pos:column="17">HRESULT</name> <name pos:line="11834" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11834" pos:column="43">GetDerivedMostProperty</name><argument_list pos:line="11834" pos:column="65">( 
            <comment type="block" pos:line="11835" pos:column="13">/* [out] */</comment> <argument pos:line="11835" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppDerivedMost</argument>)</argument_list></macro> <op:operator pos:line="11835" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="11835" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="11837" pos:column="9">virtual <name pos:line="11837" pos:column="17">HRESULT</name> <name pos:line="11837" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11837" pos:column="43">GetMemoryBytes</name><argument_list pos:line="11837" pos:column="57">( 
            <comment type="block" pos:line="11838" pos:column="13">/* [out] */</comment> <argument pos:line="11838" pos:column="25">__RPC__deref_out_opt IDebugMemoryBytes2 **ppMemoryBytes</argument>)</argument_list></macro> <op:operator pos:line="11838" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="11838" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="11840" pos:column="9">virtual <name pos:line="11840" pos:column="17">HRESULT</name> <name pos:line="11840" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11840" pos:column="43">GetMemoryContext</name><argument_list pos:line="11840" pos:column="59">( 
            <comment type="block" pos:line="11841" pos:column="13">/* [out] */</comment> <argument pos:line="11841" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemory</argument>)</argument_list></macro> <op:operator pos:line="11841" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="11841" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="11843" pos:column="9">virtual <name pos:line="11843" pos:column="17">HRESULT</name> <name pos:line="11843" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11843" pos:column="43">GetSize</name><argument_list pos:line="11843" pos:column="50">( 
            <comment type="block" pos:line="11844" pos:column="13">/* [out] */</comment> <argument pos:line="11844" pos:column="25">__RPC__out DWORD *pdwSize</argument>)</argument_list></macro> <op:operator pos:line="11844" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="11844" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="11846" pos:column="9">virtual <name pos:line="11846" pos:column="17">HRESULT</name> <name pos:line="11846" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11846" pos:column="43">GetReference</name><argument_list pos:line="11846" pos:column="55">( 
            <comment type="block" pos:line="11847" pos:column="13">/* [out] */</comment> <argument pos:line="11847" pos:column="25">__RPC__deref_out_opt IDebugReference2 **ppReference</argument>)</argument_list></macro> <op:operator pos:line="11847" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="11847" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="11849" pos:column="9">virtual <name pos:line="11849" pos:column="17">HRESULT</name> <name pos:line="11849" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="11849" pos:column="43">GetExtendedInfo</name><argument_list pos:line="11849" pos:column="58">( 
            <comment type="block" pos:line="11850" pos:column="13">/* [in] */</comment> <argument pos:line="11850" pos:column="24">__RPC__in REFGUID guidExtendedInfo</argument>,
            <comment type="block" pos:line="11851" pos:column="13">/* [out] */</comment> <argument pos:line="11851" pos:column="25">__RPC__out VARIANT *pExtendedInfo</argument>)</argument_list></macro> <op:operator pos:line="11851" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="11851" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11855" pos:column="1">#<cpp:directive pos:line="11855" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11855" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11857" pos:column="5">typedef <type><struct pos:line="11857" pos:column="13">struct <name pos:line="11857" pos:column="20">IDebugProperty2Vtbl</name>
    <block pos:line="11858" pos:column="5">{<public type="default" pos:line="11858" pos:column="6">
        <function_decl><type><name pos:line="11859" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11861" pos:column="9">HRESULT</name></type> ( <name pos:line="11861" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11861" pos:column="37">*</type:modifier><name pos:line="11861" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11861" pos:column="54">( 
            <param><decl><type><name pos:line="11862" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11862" pos:column="29">*</type:modifier></type> <name pos:line="11862" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11863" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11863" pos:column="24">__RPC__in</name> <name pos:line="11863" pos:column="34">REFIID</name></type> <name pos:line="11863" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11864" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11865" pos:column="13">__RPC__deref_out</name>  <name pos:line="11865" pos:column="31">void</name> <type:modifier pos:line="11865" pos:column="36">*</type:modifier><type:modifier pos:line="11865" pos:column="37">*</type:modifier></type><name pos:line="11865" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11867" pos:column="9">ULONG</name></type> ( <name pos:line="11867" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11867" pos:column="35">*</type:modifier><name pos:line="11867" pos:column="36">AddRef</name> )<parameter_list pos:line="11867" pos:column="44">( 
            <param><decl><type><name pos:line="11868" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11868" pos:column="29">*</type:modifier></type> <name pos:line="11868" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11870" pos:column="9">ULONG</name></type> ( <name pos:line="11870" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11870" pos:column="35">*</type:modifier><name pos:line="11870" pos:column="36">Release</name> )<parameter_list pos:line="11870" pos:column="45">( 
            <param><decl><type><name pos:line="11871" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11871" pos:column="29">*</type:modifier></type> <name pos:line="11871" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11873" pos:column="9">HRESULT</name> <argument_list pos:line="11873" pos:column="17">( <argument pos:line="11873" pos:column="19">STDMETHODCALLTYPE *GetPropertyInfo</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11873" pos:column="55">(</op:operator> 
            <name pos:line="11874" pos:column="13">IDebugProperty2</name> <op:operator pos:line="11874" pos:column="29">*</op:operator> <name pos:line="11874" pos:column="31">This</name><op:operator pos:line="11874" pos:column="35">,</op:operator>
            <comment type="block" pos:line="11875" pos:column="13">/* [in] */</comment> <name pos:line="11875" pos:column="24">DEBUGPROP_INFO_FLAGS</name> <name pos:line="11875" pos:column="45">dwFields</name><op:operator pos:line="11875" pos:column="53">,</op:operator>
            <comment type="block" pos:line="11876" pos:column="13">/* [in] */</comment> <name pos:line="11876" pos:column="24">DWORD</name> <name pos:line="11876" pos:column="30">dwRadix</name><op:operator pos:line="11876" pos:column="37">,</op:operator>
            <comment type="block" pos:line="11877" pos:column="13">/* [in] */</comment> <name pos:line="11877" pos:column="24">DWORD</name> <name pos:line="11877" pos:column="30">dwTimeout</name><op:operator pos:line="11877" pos:column="39">,</op:operator>
            <comment type="block" pos:line="11878" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="11878" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="11878" pos:column="75">(<argument pos:line="11878" pos:column="76">dwArgCount</argument>, <argument pos:line="11878" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="11878" pos:column="100">IDebugReference2</name> <op:operator pos:line="11878" pos:column="117">*</op:operator><op:operator pos:line="11878" pos:column="118">*</op:operator><name pos:line="11878" pos:column="119">rgpArgs</name><op:operator pos:line="11878" pos:column="126">,</op:operator>
            <comment type="block" pos:line="11879" pos:column="13">/* [in] */</comment> <name pos:line="11879" pos:column="24">DWORD</name> <name pos:line="11879" pos:column="30">dwArgCount</name><op:operator pos:line="11879" pos:column="40">,</op:operator>
            <comment type="block" pos:line="11880" pos:column="13">/* [out] */</comment> <name pos:line="11880" pos:column="25">__RPC__out</name> <name pos:line="11880" pos:column="36">DEBUG_PROPERTY_INFO</name> <op:operator pos:line="11880" pos:column="56">*</op:operator><name pos:line="11880" pos:column="57">pPropertyInfo</name><op:operator pos:line="11880" pos:column="70">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="11882" pos:column="9">HRESULT</name></type> ( <name pos:line="11882" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11882" pos:column="37">*</type:modifier><name pos:line="11882" pos:column="38">SetValueAsString</name> )<parameter_list pos:line="11882" pos:column="56">( 
            <param><decl><type><name pos:line="11883" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11883" pos:column="29">*</type:modifier></type> <name pos:line="11883" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11884" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11884" pos:column="24">__RPC__in</name> <name pos:line="11884" pos:column="34">LPCOLESTR</name></type> <name pos:line="11884" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="11885" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11885" pos:column="24">DWORD</name></type> <name pos:line="11885" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="11886" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11886" pos:column="24">DWORD</name></type> <name pos:line="11886" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11888" pos:column="9">HRESULT</name> <argument_list pos:line="11888" pos:column="17">( <argument pos:line="11888" pos:column="19">STDMETHODCALLTYPE *SetValueAsReference</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11888" pos:column="59">(</op:operator> 
            <name pos:line="11889" pos:column="13">IDebugProperty2</name> <op:operator pos:line="11889" pos:column="29">*</op:operator> <name pos:line="11889" pos:column="31">This</name><op:operator pos:line="11889" pos:column="35">,</op:operator>
            <comment type="block" pos:line="11890" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="11890" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="11890" pos:column="75">(<argument pos:line="11890" pos:column="76">dwArgCount</argument>, <argument pos:line="11890" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="11890" pos:column="100">IDebugReference2</name> <op:operator pos:line="11890" pos:column="117">*</op:operator><op:operator pos:line="11890" pos:column="118">*</op:operator><name pos:line="11890" pos:column="119">rgpArgs</name><op:operator pos:line="11890" pos:column="126">,</op:operator>
            <comment type="block" pos:line="11891" pos:column="13">/* [in] */</comment> <name pos:line="11891" pos:column="24">DWORD</name> <name pos:line="11891" pos:column="30">dwArgCount</name><op:operator pos:line="11891" pos:column="40">,</op:operator>
            <comment type="block" pos:line="11892" pos:column="13">/* [in] */</comment> <name pos:line="11892" pos:column="24">__RPC__in_opt</name> <name pos:line="11892" pos:column="38">IDebugReference2</name> <op:operator pos:line="11892" pos:column="55">*</op:operator><name pos:line="11892" pos:column="56">pValue</name><op:operator pos:line="11892" pos:column="62">,</op:operator>
            <comment type="block" pos:line="11893" pos:column="13">/* [in] */</comment> <name pos:line="11893" pos:column="24">DWORD</name> <name pos:line="11893" pos:column="30">dwTimeout</name><op:operator pos:line="11893" pos:column="39">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="11895" pos:column="9">HRESULT</name></type> ( <name pos:line="11895" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11895" pos:column="37">*</type:modifier><name pos:line="11895" pos:column="38">EnumChildren</name> )<parameter_list pos:line="11895" pos:column="52">( 
            <param><decl><type><name pos:line="11896" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11896" pos:column="29">*</type:modifier></type> <name pos:line="11896" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11897" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11897" pos:column="24">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="11897" pos:column="45">dwFields</name></decl></param>,
            <comment type="block" pos:line="11898" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11898" pos:column="24">DWORD</name></type> <name pos:line="11898" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="11899" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11899" pos:column="24">__RPC__in</name> <name pos:line="11899" pos:column="34">REFGUID</name></type> <name pos:line="11899" pos:column="42">guidFilter</name></decl></param>,
            <comment type="block" pos:line="11900" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11900" pos:column="24">DBG_ATTRIB_FLAGS</name></type> <name pos:line="11900" pos:column="41">dwAttribFilter</name></decl></param>,
            <comment type="block" pos:line="11901" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="11901" pos:column="30">__RPC__in_opt</name> <name pos:line="11901" pos:column="44">LPCOLESTR</name></type> <name pos:line="11901" pos:column="54">pszNameFilter</name></decl></param>,
            <comment type="block" pos:line="11902" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11902" pos:column="24">DWORD</name></type> <name pos:line="11902" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="11903" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11903" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11903" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="11903" pos:column="70">*</type:modifier><type:modifier pos:line="11903" pos:column="71">*</type:modifier></type><name pos:line="11903" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11905" pos:column="9">HRESULT</name></type> ( <name pos:line="11905" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11905" pos:column="37">*</type:modifier><name pos:line="11905" pos:column="38">GetParent</name> )<parameter_list pos:line="11905" pos:column="49">( 
            <param><decl><type><name pos:line="11906" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11906" pos:column="29">*</type:modifier></type> <name pos:line="11906" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11907" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11907" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11907" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="11907" pos:column="62">*</type:modifier><type:modifier pos:line="11907" pos:column="63">*</type:modifier></type><name pos:line="11907" pos:column="64">ppParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11909" pos:column="9">HRESULT</name></type> ( <name pos:line="11909" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11909" pos:column="37">*</type:modifier><name pos:line="11909" pos:column="38">GetDerivedMostProperty</name> )<parameter_list pos:line="11909" pos:column="62">( 
            <param><decl><type><name pos:line="11910" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11910" pos:column="29">*</type:modifier></type> <name pos:line="11910" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11911" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11911" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11911" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="11911" pos:column="62">*</type:modifier><type:modifier pos:line="11911" pos:column="63">*</type:modifier></type><name pos:line="11911" pos:column="64">ppDerivedMost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11913" pos:column="9">HRESULT</name></type> ( <name pos:line="11913" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11913" pos:column="37">*</type:modifier><name pos:line="11913" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="11913" pos:column="54">( 
            <param><decl><type><name pos:line="11914" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11914" pos:column="29">*</type:modifier></type> <name pos:line="11914" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11915" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11915" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11915" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="11915" pos:column="65">*</type:modifier><type:modifier pos:line="11915" pos:column="66">*</type:modifier></type><name pos:line="11915" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11917" pos:column="9">HRESULT</name></type> ( <name pos:line="11917" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11917" pos:column="37">*</type:modifier><name pos:line="11917" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="11917" pos:column="56">( 
            <param><decl><type><name pos:line="11918" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11918" pos:column="29">*</type:modifier></type> <name pos:line="11918" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11919" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11919" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11919" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="11919" pos:column="67">*</type:modifier><type:modifier pos:line="11919" pos:column="68">*</type:modifier></type><name pos:line="11919" pos:column="69">ppMemory</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11921" pos:column="9">HRESULT</name></type> ( <name pos:line="11921" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11921" pos:column="37">*</type:modifier><name pos:line="11921" pos:column="38">GetSize</name> )<parameter_list pos:line="11921" pos:column="47">( 
            <param><decl><type><name pos:line="11922" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11922" pos:column="29">*</type:modifier></type> <name pos:line="11922" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11923" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11923" pos:column="25">__RPC__out</name> <name pos:line="11923" pos:column="36">DWORD</name> <type:modifier pos:line="11923" pos:column="42">*</type:modifier></type><name pos:line="11923" pos:column="43">pdwSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11925" pos:column="9">HRESULT</name></type> ( <name pos:line="11925" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11925" pos:column="37">*</type:modifier><name pos:line="11925" pos:column="38">GetReference</name> )<parameter_list pos:line="11925" pos:column="52">( 
            <param><decl><type><name pos:line="11926" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11926" pos:column="29">*</type:modifier></type> <name pos:line="11926" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11927" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11927" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11927" pos:column="46">IDebugReference2</name> <type:modifier pos:line="11927" pos:column="63">*</type:modifier><type:modifier pos:line="11927" pos:column="64">*</type:modifier></type><name pos:line="11927" pos:column="65">ppReference</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11929" pos:column="9">HRESULT</name></type> ( <name pos:line="11929" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11929" pos:column="37">*</type:modifier><name pos:line="11929" pos:column="38">GetExtendedInfo</name> )<parameter_list pos:line="11929" pos:column="55">( 
            <param><decl><type><name pos:line="11930" pos:column="13">IDebugProperty2</name> <type:modifier pos:line="11930" pos:column="29">*</type:modifier></type> <name pos:line="11930" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="11931" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11931" pos:column="24">__RPC__in</name> <name pos:line="11931" pos:column="34">REFGUID</name></type> <name pos:line="11931" pos:column="42">guidExtendedInfo</name></decl></param>,
            <comment type="block" pos:line="11932" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11932" pos:column="25">__RPC__out</name> <name pos:line="11932" pos:column="36">VARIANT</name> <type:modifier pos:line="11932" pos:column="44">*</type:modifier></type><name pos:line="11932" pos:column="45">pExtendedInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11934" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11935" pos:column="7">IDebugProperty2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11937" pos:column="5">interface</name></type> <name pos:line="11937" pos:column="15">IDebugProperty2</name>
    <argument_list pos:line="11938" pos:column="5">{
        <argument><expr><name pos:line="11939" pos:column="9">CONST_VTBL</name> struct <name pos:line="11939" pos:column="27">IDebugProperty2Vtbl</name> <op:operator pos:line="11939" pos:column="47">*</op:operator><name pos:line="11939" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11944" pos:column="1">#<cpp:directive pos:line="11944" pos:column="2">ifdef</cpp:directive> <name pos:line="11944" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11947" pos:column="1">#<cpp:directive pos:line="11947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11947" pos:column="9">IDebugProperty2_QueryInterface</name><parameter_list pos:line="11947" pos:column="39">(<param><type><name pos:line="11947" pos:column="40">This</name></type></param>,<param><type><name pos:line="11947" pos:column="45">riid</name></type></param>,<param><type><name pos:line="11947" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11948" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11950" pos:column="1">#<cpp:directive pos:line="11950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11950" pos:column="9">IDebugProperty2_AddRef</name><parameter_list pos:line="11950" pos:column="31">(<param><type><name pos:line="11950" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11951" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11953" pos:column="1">#<cpp:directive pos:line="11953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11953" pos:column="9">IDebugProperty2_Release</name><parameter_list pos:line="11953" pos:column="32">(<param><type><name pos:line="11953" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11954" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11957" pos:column="1">#<cpp:directive pos:line="11957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11957" pos:column="9">IDebugProperty2_GetPropertyInfo</name><parameter_list pos:line="11957" pos:column="40">(<param><type><name pos:line="11957" pos:column="41">This</name></type></param>,<param><type><name pos:line="11957" pos:column="46">dwFields</name></type></param>,<param><type><name pos:line="11957" pos:column="55">dwRadix</name></type></param>,<param><type><name pos:line="11957" pos:column="63">dwTimeout</name></type></param>,<param><type><name pos:line="11957" pos:column="73">rgpArgs</name></type></param>,<param><type><name pos:line="11957" pos:column="81">dwArgCount</name></type></param>,<param><type><name pos:line="11957" pos:column="92">pPropertyInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11958" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPropertyInfo(This,dwFields,dwRadix,dwTimeout,rgpArgs,dwArgCount,pPropertyInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="11960" pos:column="1">#<cpp:directive pos:line="11960" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11960" pos:column="9">IDebugProperty2_SetValueAsString</name><parameter_list pos:line="11960" pos:column="41">(<param><type><name pos:line="11960" pos:column="42">This</name></type></param>,<param><type><name pos:line="11960" pos:column="47">pszValue</name></type></param>,<param><type><name pos:line="11960" pos:column="56">dwRadix</name></type></param>,<param><type><name pos:line="11960" pos:column="64">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11961" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsString(This,pszValue,dwRadix,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="11963" pos:column="1">#<cpp:directive pos:line="11963" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11963" pos:column="9">IDebugProperty2_SetValueAsReference</name><parameter_list pos:line="11963" pos:column="44">(<param><type><name pos:line="11963" pos:column="45">This</name></type></param>,<param><type><name pos:line="11963" pos:column="50">rgpArgs</name></type></param>,<param><type><name pos:line="11963" pos:column="58">dwArgCount</name></type></param>,<param><type><name pos:line="11963" pos:column="69">pValue</name></type></param>,<param><type><name pos:line="11963" pos:column="76">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11964" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsReference(This,rgpArgs,dwArgCount,pValue,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="11966" pos:column="1">#<cpp:directive pos:line="11966" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11966" pos:column="9">IDebugProperty2_EnumChildren</name><parameter_list pos:line="11966" pos:column="37">(<param><type><name pos:line="11966" pos:column="38">This</name></type></param>,<param><type><name pos:line="11966" pos:column="43">dwFields</name></type></param>,<param><type><name pos:line="11966" pos:column="52">dwRadix</name></type></param>,<param><type><name pos:line="11966" pos:column="60">guidFilter</name></type></param>,<param><type><name pos:line="11966" pos:column="71">dwAttribFilter</name></type></param>,<param><type><name pos:line="11966" pos:column="86">pszNameFilter</name></type></param>,<param><type><name pos:line="11966" pos:column="100">dwTimeout</name></type></param>,<param><type><name pos:line="11966" pos:column="110">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11967" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumChildren(This,dwFields,dwRadix,guidFilter,dwAttribFilter,pszNameFilter,dwTimeout,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="11969" pos:column="1">#<cpp:directive pos:line="11969" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11969" pos:column="9">IDebugProperty2_GetParent</name><parameter_list pos:line="11969" pos:column="34">(<param><type><name pos:line="11969" pos:column="35">This</name></type></param>,<param><type><name pos:line="11969" pos:column="40">ppParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11970" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetParent(This,ppParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="11972" pos:column="1">#<cpp:directive pos:line="11972" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11972" pos:column="9">IDebugProperty2_GetDerivedMostProperty</name><parameter_list pos:line="11972" pos:column="47">(<param><type><name pos:line="11972" pos:column="48">This</name></type></param>,<param><type><name pos:line="11972" pos:column="53">ppDerivedMost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11973" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDerivedMostProperty(This,ppDerivedMost) )</cpp:value></cpp:define> 

<cpp:define pos:line="11975" pos:column="1">#<cpp:directive pos:line="11975" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11975" pos:column="9">IDebugProperty2_GetMemoryBytes</name><parameter_list pos:line="11975" pos:column="39">(<param><type><name pos:line="11975" pos:column="40">This</name></type></param>,<param><type><name pos:line="11975" pos:column="45">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11976" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="11978" pos:column="1">#<cpp:directive pos:line="11978" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11978" pos:column="9">IDebugProperty2_GetMemoryContext</name><parameter_list pos:line="11978" pos:column="41">(<param><type><name pos:line="11978" pos:column="42">This</name></type></param>,<param><type><name pos:line="11978" pos:column="47">ppMemory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11979" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,ppMemory) )</cpp:value></cpp:define> 

<cpp:define pos:line="11981" pos:column="1">#<cpp:directive pos:line="11981" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11981" pos:column="9">IDebugProperty2_GetSize</name><parameter_list pos:line="11981" pos:column="32">(<param><type><name pos:line="11981" pos:column="33">This</name></type></param>,<param><type><name pos:line="11981" pos:column="38">pdwSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11982" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pdwSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="11984" pos:column="1">#<cpp:directive pos:line="11984" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11984" pos:column="9">IDebugProperty2_GetReference</name><parameter_list pos:line="11984" pos:column="37">(<param><type><name pos:line="11984" pos:column="38">This</name></type></param>,<param><type><name pos:line="11984" pos:column="43">ppReference</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11985" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReference(This,ppReference) )</cpp:value></cpp:define> 

<cpp:define pos:line="11987" pos:column="1">#<cpp:directive pos:line="11987" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11987" pos:column="9">IDebugProperty2_GetExtendedInfo</name><parameter_list pos:line="11987" pos:column="40">(<param><type><name pos:line="11987" pos:column="41">This</name></type></param>,<param><type><name pos:line="11987" pos:column="46">guidExtendedInfo</name></type></param>,<param><type><name pos:line="11987" pos:column="63">pExtendedInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11988" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtendedInfo(This,guidExtendedInfo,pExtendedInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11990" pos:column="1">#<cpp:directive pos:line="11990" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11990" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11993" pos:column="1">#<cpp:directive pos:line="11993" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11993" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11998" pos:column="1">#<cpp:directive pos:line="11998" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11998" pos:column="9">/* __IDebugProperty2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="12001" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0081 */</comment>
<comment type="block" pos:line="12002" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="12004" pos:column="1">#<cpp:directive pos:line="12004" pos:column="2">pragma</cpp:directive> warning(push)</cpp:pragma>
<cpp:pragma pos:line="12005" pos:column="1">#<cpp:directive pos:line="12005" pos:column="2">pragma</cpp:directive> warning(disable:28718)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="12008" pos:column="1">extern</specifier> <name pos:line="12008" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12008" pos:column="22">__MIDL_itf_msdbg_0000_0081_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12009" pos:column="1">extern</specifier> <name pos:line="12009" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12009" pos:column="22">__MIDL_itf_msdbg_0000_0081_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="12011" pos:column="1">#<cpp:directive pos:line="12011" pos:column="2">ifndef</cpp:directive> <name pos:line="12011" pos:column="9">__IDebugProperty3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12012" pos:column="1">#<cpp:directive pos:line="12012" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12012" pos:column="9">__IDebugProperty3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12014" pos:column="1">/* interface IDebugProperty3 */</comment>
<comment type="block" pos:line="12015" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="12018" pos:column="1">EXTERN_C</name> <specifier pos:line="12018" pos:column="10">const</specifier> <name pos:line="12018" pos:column="16">IID</name></type> <name pos:line="12018" pos:column="20">IID_IDebugProperty3</name></decl>;</decl_stmt>

<cpp:if pos:line="12020" pos:column="1">#<cpp:directive pos:line="12020" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12020" pos:column="5">defined</name><argument_list pos:line="12020" pos:column="12">(<argument><expr><name pos:line="12020" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12020" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12020" pos:column="29">!</op:operator><call><name pos:line="12020" pos:column="30">defined</name><argument_list pos:line="12020" pos:column="37">(<argument><expr><name pos:line="12020" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12022" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12022" pos:column="19">(<argument pos:line="12022" pos:column="20">"94E1E004-0672-423d-AD62-78783DEF1E76"</argument>)</argument_list></macro>
    <label><name pos:line="12023" pos:column="5">IDebugProperty3</name> :</label> <expr_stmt><expr pos:line="12023" pos:column="23">public <name pos:line="12023" pos:column="30">IDebugProperty2</name>
    <block pos:line="12024" pos:column="5">{
    <expr pos:line="12025" pos:column="5">public<op:operator pos:line="12025" pos:column="11">:</op:operator>
        virtual <name pos:line="12026" pos:column="17">HRESULT</name> <name pos:line="12026" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12026" pos:column="43">GetStringCharLength</name><argument_list pos:line="12026" pos:column="62">( 
            <comment type="block" pos:line="12027" pos:column="13">/* [out] */</comment> <argument pos:line="12027" pos:column="25">__RPC__out ULONG *pLen</argument>)</argument_list></macro> <op:operator pos:line="12027" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="12027" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="12029" pos:column="9">virtual <name pos:line="12029" pos:column="17">HRESULT</name> <name pos:line="12029" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12029" pos:column="43">GetStringChars</name><argument_list pos:line="12029" pos:column="57">( 
            <comment type="block" pos:line="12030" pos:column="13">/* [in] */</comment> <argument pos:line="12030" pos:column="24">ULONG buflen</argument>,
            <comment type="block" pos:line="12031" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="12031" pos:column="45">__RPC__out_ecount_part(buflen, *pceltFetched) WCHAR *rgString</argument>,
            <comment type="block" pos:line="12032" pos:column="13">/* [out] */</comment> <argument pos:line="12032" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="12032" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="12032" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="12034" pos:column="9">virtual <name pos:line="12034" pos:column="17">HRESULT</name> <name pos:line="12034" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="12034" pos:column="43">CreateObjectID</name><argument_list pos:line="12034" pos:column="57">( <argument><expr><name pos:line="12034" pos:column="59">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="12034" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="12034" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="12036" pos:column="9">virtual <name pos:line="12036" pos:column="17">HRESULT</name> <name pos:line="12036" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="12036" pos:column="43">DestroyObjectID</name><argument_list pos:line="12036" pos:column="58">( <argument><expr><name pos:line="12036" pos:column="60">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="12036" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="12036" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="12038" pos:column="9">virtual <name pos:line="12038" pos:column="17">HRESULT</name> <name pos:line="12038" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12038" pos:column="43">GetCustomViewerCount</name><argument_list pos:line="12038" pos:column="63">( 
            <comment type="block" pos:line="12039" pos:column="13">/* [out] */</comment> <argument pos:line="12039" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="12039" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="12039" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="12041" pos:column="9">virtual <name pos:line="12041" pos:column="17">HRESULT</name> <name pos:line="12041" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12041" pos:column="43">GetCustomViewerList</name><argument_list pos:line="12041" pos:column="62">( 
            <comment type="block" pos:line="12042" pos:column="13">/* [in] */</comment> <argument pos:line="12042" pos:column="24">ULONG celtSkip</argument>,
            <comment type="block" pos:line="12043" pos:column="13">/* [in] */</comment> <argument pos:line="12043" pos:column="24">ULONG celtRequested</argument>,
            <comment type="block" pos:line="12044" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="12044" pos:column="45">__RPC__out_ecount_part(celtRequested, *pceltFetched) DEBUG_CUSTOM_VIEWER *rgViewers</argument>,
            <comment type="block" pos:line="12045" pos:column="13">/* [out] */</comment> <argument pos:line="12045" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="12045" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="12045" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="12047" pos:column="9">virtual <name pos:line="12047" pos:column="17">HRESULT</name> <name pos:line="12047" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12047" pos:column="43">SetValueAsStringWithError</name><argument_list pos:line="12047" pos:column="68">( 
            <comment type="block" pos:line="12048" pos:column="13">/* [in] */</comment> <argument pos:line="12048" pos:column="24">__RPC__in LPCOLESTR pszValue</argument>,
            <comment type="block" pos:line="12049" pos:column="13">/* [in] */</comment> <argument pos:line="12049" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="12050" pos:column="13">/* [in] */</comment> <argument pos:line="12050" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="12051" pos:column="13">/* [out] */</comment> <argument pos:line="12051" pos:column="25">__RPC__deref_out_opt BSTR *errorString</argument>)</argument_list></macro> <op:operator pos:line="12051" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="12051" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12055" pos:column="1">#<cpp:directive pos:line="12055" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12055" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12057" pos:column="5">typedef <type><struct pos:line="12057" pos:column="13">struct <name pos:line="12057" pos:column="20">IDebugProperty3Vtbl</name>
    <block pos:line="12058" pos:column="5">{<public type="default" pos:line="12058" pos:column="6">
        <function_decl><type><name pos:line="12059" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12061" pos:column="9">HRESULT</name></type> ( <name pos:line="12061" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12061" pos:column="37">*</type:modifier><name pos:line="12061" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12061" pos:column="54">( 
            <param><decl><type><name pos:line="12062" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12062" pos:column="29">*</type:modifier></type> <name pos:line="12062" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12063" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12063" pos:column="24">__RPC__in</name> <name pos:line="12063" pos:column="34">REFIID</name></type> <name pos:line="12063" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12064" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12065" pos:column="13">__RPC__deref_out</name>  <name pos:line="12065" pos:column="31">void</name> <type:modifier pos:line="12065" pos:column="36">*</type:modifier><type:modifier pos:line="12065" pos:column="37">*</type:modifier></type><name pos:line="12065" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12067" pos:column="9">ULONG</name></type> ( <name pos:line="12067" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12067" pos:column="35">*</type:modifier><name pos:line="12067" pos:column="36">AddRef</name> )<parameter_list pos:line="12067" pos:column="44">( 
            <param><decl><type><name pos:line="12068" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12068" pos:column="29">*</type:modifier></type> <name pos:line="12068" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12070" pos:column="9">ULONG</name></type> ( <name pos:line="12070" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12070" pos:column="35">*</type:modifier><name pos:line="12070" pos:column="36">Release</name> )<parameter_list pos:line="12070" pos:column="45">( 
            <param><decl><type><name pos:line="12071" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12071" pos:column="29">*</type:modifier></type> <name pos:line="12071" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12073" pos:column="9">HRESULT</name> <argument_list pos:line="12073" pos:column="17">( <argument pos:line="12073" pos:column="19">STDMETHODCALLTYPE *GetPropertyInfo</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12073" pos:column="55">(</op:operator> 
            <name pos:line="12074" pos:column="13">IDebugProperty3</name> <op:operator pos:line="12074" pos:column="29">*</op:operator> <name pos:line="12074" pos:column="31">This</name><op:operator pos:line="12074" pos:column="35">,</op:operator>
            <comment type="block" pos:line="12075" pos:column="13">/* [in] */</comment> <name pos:line="12075" pos:column="24">DEBUGPROP_INFO_FLAGS</name> <name pos:line="12075" pos:column="45">dwFields</name><op:operator pos:line="12075" pos:column="53">,</op:operator>
            <comment type="block" pos:line="12076" pos:column="13">/* [in] */</comment> <name pos:line="12076" pos:column="24">DWORD</name> <name pos:line="12076" pos:column="30">dwRadix</name><op:operator pos:line="12076" pos:column="37">,</op:operator>
            <comment type="block" pos:line="12077" pos:column="13">/* [in] */</comment> <name pos:line="12077" pos:column="24">DWORD</name> <name pos:line="12077" pos:column="30">dwTimeout</name><op:operator pos:line="12077" pos:column="39">,</op:operator>
            <comment type="block" pos:line="12078" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="12078" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="12078" pos:column="75">(<argument pos:line="12078" pos:column="76">dwArgCount</argument>, <argument pos:line="12078" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="12078" pos:column="100">IDebugReference2</name> <op:operator pos:line="12078" pos:column="117">*</op:operator><op:operator pos:line="12078" pos:column="118">*</op:operator><name pos:line="12078" pos:column="119">rgpArgs</name><op:operator pos:line="12078" pos:column="126">,</op:operator>
            <comment type="block" pos:line="12079" pos:column="13">/* [in] */</comment> <name pos:line="12079" pos:column="24">DWORD</name> <name pos:line="12079" pos:column="30">dwArgCount</name><op:operator pos:line="12079" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12080" pos:column="13">/* [out] */</comment> <name pos:line="12080" pos:column="25">__RPC__out</name> <name pos:line="12080" pos:column="36">DEBUG_PROPERTY_INFO</name> <op:operator pos:line="12080" pos:column="56">*</op:operator><name pos:line="12080" pos:column="57">pPropertyInfo</name><op:operator pos:line="12080" pos:column="70">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12082" pos:column="9">HRESULT</name></type> ( <name pos:line="12082" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12082" pos:column="37">*</type:modifier><name pos:line="12082" pos:column="38">SetValueAsString</name> )<parameter_list pos:line="12082" pos:column="56">( 
            <param><decl><type><name pos:line="12083" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12083" pos:column="29">*</type:modifier></type> <name pos:line="12083" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12084" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12084" pos:column="24">__RPC__in</name> <name pos:line="12084" pos:column="34">LPCOLESTR</name></type> <name pos:line="12084" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="12085" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12085" pos:column="24">DWORD</name></type> <name pos:line="12085" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12086" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12086" pos:column="24">DWORD</name></type> <name pos:line="12086" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12088" pos:column="9">HRESULT</name> <argument_list pos:line="12088" pos:column="17">( <argument pos:line="12088" pos:column="19">STDMETHODCALLTYPE *SetValueAsReference</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12088" pos:column="59">(</op:operator> 
            <name pos:line="12089" pos:column="13">IDebugProperty3</name> <op:operator pos:line="12089" pos:column="29">*</op:operator> <name pos:line="12089" pos:column="31">This</name><op:operator pos:line="12089" pos:column="35">,</op:operator>
            <comment type="block" pos:line="12090" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="12090" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="12090" pos:column="75">(<argument pos:line="12090" pos:column="76">dwArgCount</argument>, <argument pos:line="12090" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="12090" pos:column="100">IDebugReference2</name> <op:operator pos:line="12090" pos:column="117">*</op:operator><op:operator pos:line="12090" pos:column="118">*</op:operator><name pos:line="12090" pos:column="119">rgpArgs</name><op:operator pos:line="12090" pos:column="126">,</op:operator>
            <comment type="block" pos:line="12091" pos:column="13">/* [in] */</comment> <name pos:line="12091" pos:column="24">DWORD</name> <name pos:line="12091" pos:column="30">dwArgCount</name><op:operator pos:line="12091" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12092" pos:column="13">/* [in] */</comment> <name pos:line="12092" pos:column="24">__RPC__in_opt</name> <name pos:line="12092" pos:column="38">IDebugReference2</name> <op:operator pos:line="12092" pos:column="55">*</op:operator><name pos:line="12092" pos:column="56">pValue</name><op:operator pos:line="12092" pos:column="62">,</op:operator>
            <comment type="block" pos:line="12093" pos:column="13">/* [in] */</comment> <name pos:line="12093" pos:column="24">DWORD</name> <name pos:line="12093" pos:column="30">dwTimeout</name><op:operator pos:line="12093" pos:column="39">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12095" pos:column="9">HRESULT</name></type> ( <name pos:line="12095" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12095" pos:column="37">*</type:modifier><name pos:line="12095" pos:column="38">EnumChildren</name> )<parameter_list pos:line="12095" pos:column="52">( 
            <param><decl><type><name pos:line="12096" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12096" pos:column="29">*</type:modifier></type> <name pos:line="12096" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12097" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12097" pos:column="24">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="12097" pos:column="45">dwFields</name></decl></param>,
            <comment type="block" pos:line="12098" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12098" pos:column="24">DWORD</name></type> <name pos:line="12098" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12099" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12099" pos:column="24">__RPC__in</name> <name pos:line="12099" pos:column="34">REFGUID</name></type> <name pos:line="12099" pos:column="42">guidFilter</name></decl></param>,
            <comment type="block" pos:line="12100" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12100" pos:column="24">DBG_ATTRIB_FLAGS</name></type> <name pos:line="12100" pos:column="41">dwAttribFilter</name></decl></param>,
            <comment type="block" pos:line="12101" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="12101" pos:column="30">__RPC__in_opt</name> <name pos:line="12101" pos:column="44">LPCOLESTR</name></type> <name pos:line="12101" pos:column="54">pszNameFilter</name></decl></param>,
            <comment type="block" pos:line="12102" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12102" pos:column="24">DWORD</name></type> <name pos:line="12102" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="12103" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12103" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12103" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="12103" pos:column="70">*</type:modifier><type:modifier pos:line="12103" pos:column="71">*</type:modifier></type><name pos:line="12103" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12105" pos:column="9">HRESULT</name></type> ( <name pos:line="12105" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12105" pos:column="37">*</type:modifier><name pos:line="12105" pos:column="38">GetParent</name> )<parameter_list pos:line="12105" pos:column="49">( 
            <param><decl><type><name pos:line="12106" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12106" pos:column="29">*</type:modifier></type> <name pos:line="12106" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12107" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12107" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12107" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="12107" pos:column="62">*</type:modifier><type:modifier pos:line="12107" pos:column="63">*</type:modifier></type><name pos:line="12107" pos:column="64">ppParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12109" pos:column="9">HRESULT</name></type> ( <name pos:line="12109" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12109" pos:column="37">*</type:modifier><name pos:line="12109" pos:column="38">GetDerivedMostProperty</name> )<parameter_list pos:line="12109" pos:column="62">( 
            <param><decl><type><name pos:line="12110" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12110" pos:column="29">*</type:modifier></type> <name pos:line="12110" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12111" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12111" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12111" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="12111" pos:column="62">*</type:modifier><type:modifier pos:line="12111" pos:column="63">*</type:modifier></type><name pos:line="12111" pos:column="64">ppDerivedMost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12113" pos:column="9">HRESULT</name></type> ( <name pos:line="12113" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12113" pos:column="37">*</type:modifier><name pos:line="12113" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="12113" pos:column="54">( 
            <param><decl><type><name pos:line="12114" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12114" pos:column="29">*</type:modifier></type> <name pos:line="12114" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12115" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12115" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12115" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="12115" pos:column="65">*</type:modifier><type:modifier pos:line="12115" pos:column="66">*</type:modifier></type><name pos:line="12115" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12117" pos:column="9">HRESULT</name></type> ( <name pos:line="12117" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12117" pos:column="37">*</type:modifier><name pos:line="12117" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="12117" pos:column="56">( 
            <param><decl><type><name pos:line="12118" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12118" pos:column="29">*</type:modifier></type> <name pos:line="12118" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12119" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12119" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12119" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="12119" pos:column="67">*</type:modifier><type:modifier pos:line="12119" pos:column="68">*</type:modifier></type><name pos:line="12119" pos:column="69">ppMemory</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12121" pos:column="9">HRESULT</name></type> ( <name pos:line="12121" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12121" pos:column="37">*</type:modifier><name pos:line="12121" pos:column="38">GetSize</name> )<parameter_list pos:line="12121" pos:column="47">( 
            <param><decl><type><name pos:line="12122" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12122" pos:column="29">*</type:modifier></type> <name pos:line="12122" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12123" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12123" pos:column="25">__RPC__out</name> <name pos:line="12123" pos:column="36">DWORD</name> <type:modifier pos:line="12123" pos:column="42">*</type:modifier></type><name pos:line="12123" pos:column="43">pdwSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12125" pos:column="9">HRESULT</name></type> ( <name pos:line="12125" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12125" pos:column="37">*</type:modifier><name pos:line="12125" pos:column="38">GetReference</name> )<parameter_list pos:line="12125" pos:column="52">( 
            <param><decl><type><name pos:line="12126" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12126" pos:column="29">*</type:modifier></type> <name pos:line="12126" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12127" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12127" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12127" pos:column="46">IDebugReference2</name> <type:modifier pos:line="12127" pos:column="63">*</type:modifier><type:modifier pos:line="12127" pos:column="64">*</type:modifier></type><name pos:line="12127" pos:column="65">ppReference</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12129" pos:column="9">HRESULT</name></type> ( <name pos:line="12129" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12129" pos:column="37">*</type:modifier><name pos:line="12129" pos:column="38">GetExtendedInfo</name> )<parameter_list pos:line="12129" pos:column="55">( 
            <param><decl><type><name pos:line="12130" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12130" pos:column="29">*</type:modifier></type> <name pos:line="12130" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12131" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12131" pos:column="24">__RPC__in</name> <name pos:line="12131" pos:column="34">REFGUID</name></type> <name pos:line="12131" pos:column="42">guidExtendedInfo</name></decl></param>,
            <comment type="block" pos:line="12132" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12132" pos:column="25">__RPC__out</name> <name pos:line="12132" pos:column="36">VARIANT</name> <type:modifier pos:line="12132" pos:column="44">*</type:modifier></type><name pos:line="12132" pos:column="45">pExtendedInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12134" pos:column="9">HRESULT</name></type> ( <name pos:line="12134" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12134" pos:column="37">*</type:modifier><name pos:line="12134" pos:column="38">GetStringCharLength</name> )<parameter_list pos:line="12134" pos:column="59">( 
            <param><decl><type><name pos:line="12135" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12135" pos:column="29">*</type:modifier></type> <name pos:line="12135" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12136" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12136" pos:column="25">__RPC__out</name> <name pos:line="12136" pos:column="36">ULONG</name> <type:modifier pos:line="12136" pos:column="42">*</type:modifier></type><name pos:line="12136" pos:column="43">pLen</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12138" pos:column="9">HRESULT</name> <argument_list pos:line="12138" pos:column="17">( <argument pos:line="12138" pos:column="19">STDMETHODCALLTYPE *GetStringChars</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12138" pos:column="54">(</op:operator> 
            <name pos:line="12139" pos:column="13">IDebugProperty3</name> <op:operator pos:line="12139" pos:column="29">*</op:operator> <name pos:line="12139" pos:column="31">This</name><op:operator pos:line="12139" pos:column="35">,</op:operator>
            <comment type="block" pos:line="12140" pos:column="13">/* [in] */</comment> <name pos:line="12140" pos:column="24">ULONG</name> <name pos:line="12140" pos:column="30">buflen</name><op:operator pos:line="12140" pos:column="36">,</op:operator>
            <comment type="block" pos:line="12141" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="12141" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="12141" pos:column="67">(<argument pos:line="12141" pos:column="68">buflen</argument>, <argument pos:line="12141" pos:column="76">*pceltFetched</argument>)</argument_list></macro> <name pos:line="12141" pos:column="91">WCHAR</name> <op:operator pos:line="12141" pos:column="97">*</op:operator><name pos:line="12141" pos:column="98">rgString</name><op:operator pos:line="12141" pos:column="106">,</op:operator>
            <comment type="block" pos:line="12142" pos:column="13">/* [out] */</comment> <name pos:line="12142" pos:column="25">__RPC__out</name> <name pos:line="12142" pos:column="36">ULONG</name> <op:operator pos:line="12142" pos:column="42">*</op:operator><name pos:line="12142" pos:column="43">pceltFetched</name><op:operator pos:line="12142" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12144" pos:column="9">HRESULT</name></type> ( <name pos:line="12144" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12144" pos:column="37">*</type:modifier><name pos:line="12144" pos:column="38">CreateObjectID</name> )<parameter_list pos:line="12144" pos:column="54">( 
            <param><decl><type><name pos:line="12145" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12145" pos:column="29">*</type:modifier></type> <name pos:line="12145" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12147" pos:column="9">HRESULT</name></type> ( <name pos:line="12147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12147" pos:column="37">*</type:modifier><name pos:line="12147" pos:column="38">DestroyObjectID</name> )<parameter_list pos:line="12147" pos:column="55">( 
            <param><decl><type><name pos:line="12148" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12148" pos:column="29">*</type:modifier></type> <name pos:line="12148" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12150" pos:column="9">HRESULT</name></type> ( <name pos:line="12150" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12150" pos:column="37">*</type:modifier><name pos:line="12150" pos:column="38">GetCustomViewerCount</name> )<parameter_list pos:line="12150" pos:column="60">( 
            <param><decl><type><name pos:line="12151" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12151" pos:column="29">*</type:modifier></type> <name pos:line="12151" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12152" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12152" pos:column="25">__RPC__out</name> <name pos:line="12152" pos:column="36">ULONG</name> <type:modifier pos:line="12152" pos:column="42">*</type:modifier></type><name pos:line="12152" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12154" pos:column="9">HRESULT</name> <argument_list pos:line="12154" pos:column="17">( <argument pos:line="12154" pos:column="19">STDMETHODCALLTYPE *GetCustomViewerList</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12154" pos:column="59">(</op:operator> 
            <name pos:line="12155" pos:column="13">IDebugProperty3</name> <op:operator pos:line="12155" pos:column="29">*</op:operator> <name pos:line="12155" pos:column="31">This</name><op:operator pos:line="12155" pos:column="35">,</op:operator>
            <comment type="block" pos:line="12156" pos:column="13">/* [in] */</comment> <name pos:line="12156" pos:column="24">ULONG</name> <name pos:line="12156" pos:column="30">celtSkip</name><op:operator pos:line="12156" pos:column="38">,</op:operator>
            <comment type="block" pos:line="12157" pos:column="13">/* [in] */</comment> <name pos:line="12157" pos:column="24">ULONG</name> <name pos:line="12157" pos:column="30">celtRequested</name><op:operator pos:line="12157" pos:column="43">,</op:operator>
            <comment type="block" pos:line="12158" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="12158" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="12158" pos:column="67">(<argument pos:line="12158" pos:column="68">celtRequested</argument>, <argument pos:line="12158" pos:column="83">*pceltFetched</argument>)</argument_list></macro> <name pos:line="12158" pos:column="98">DEBUG_CUSTOM_VIEWER</name> <op:operator pos:line="12158" pos:column="118">*</op:operator><name pos:line="12158" pos:column="119">rgViewers</name><op:operator pos:line="12158" pos:column="128">,</op:operator>
            <comment type="block" pos:line="12159" pos:column="13">/* [out] */</comment> <name pos:line="12159" pos:column="25">__RPC__out</name> <name pos:line="12159" pos:column="36">ULONG</name> <op:operator pos:line="12159" pos:column="42">*</op:operator><name pos:line="12159" pos:column="43">pceltFetched</name><op:operator pos:line="12159" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12161" pos:column="9">HRESULT</name></type> ( <name pos:line="12161" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12161" pos:column="37">*</type:modifier><name pos:line="12161" pos:column="38">SetValueAsStringWithError</name> )<parameter_list pos:line="12161" pos:column="65">( 
            <param><decl><type><name pos:line="12162" pos:column="13">IDebugProperty3</name> <type:modifier pos:line="12162" pos:column="29">*</type:modifier></type> <name pos:line="12162" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="12163" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12163" pos:column="24">__RPC__in</name> <name pos:line="12163" pos:column="34">LPCOLESTR</name></type> <name pos:line="12163" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="12164" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12164" pos:column="24">DWORD</name></type> <name pos:line="12164" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12165" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12165" pos:column="24">DWORD</name></type> <name pos:line="12165" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="12166" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12166" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12166" pos:column="46">BSTR</name> <type:modifier pos:line="12166" pos:column="51">*</type:modifier></type><name pos:line="12166" pos:column="52">errorString</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12168" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12169" pos:column="7">IDebugProperty3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12171" pos:column="5">interface</name></type> <name pos:line="12171" pos:column="15">IDebugProperty3</name>
    <argument_list pos:line="12172" pos:column="5">{
        <argument><expr><name pos:line="12173" pos:column="9">CONST_VTBL</name> struct <name pos:line="12173" pos:column="27">IDebugProperty3Vtbl</name> <op:operator pos:line="12173" pos:column="47">*</op:operator><name pos:line="12173" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12178" pos:column="1">#<cpp:directive pos:line="12178" pos:column="2">ifdef</cpp:directive> <name pos:line="12178" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12181" pos:column="1">#<cpp:directive pos:line="12181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12181" pos:column="9">IDebugProperty3_QueryInterface</name><parameter_list pos:line="12181" pos:column="39">(<param><type><name pos:line="12181" pos:column="40">This</name></type></param>,<param><type><name pos:line="12181" pos:column="45">riid</name></type></param>,<param><type><name pos:line="12181" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12182" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12184" pos:column="1">#<cpp:directive pos:line="12184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12184" pos:column="9">IDebugProperty3_AddRef</name><parameter_list pos:line="12184" pos:column="31">(<param><type><name pos:line="12184" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12185" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12187" pos:column="1">#<cpp:directive pos:line="12187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12187" pos:column="9">IDebugProperty3_Release</name><parameter_list pos:line="12187" pos:column="32">(<param><type><name pos:line="12187" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12188" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12191" pos:column="1">#<cpp:directive pos:line="12191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12191" pos:column="9">IDebugProperty3_GetPropertyInfo</name><parameter_list pos:line="12191" pos:column="40">(<param><type><name pos:line="12191" pos:column="41">This</name></type></param>,<param><type><name pos:line="12191" pos:column="46">dwFields</name></type></param>,<param><type><name pos:line="12191" pos:column="55">dwRadix</name></type></param>,<param><type><name pos:line="12191" pos:column="63">dwTimeout</name></type></param>,<param><type><name pos:line="12191" pos:column="73">rgpArgs</name></type></param>,<param><type><name pos:line="12191" pos:column="81">dwArgCount</name></type></param>,<param><type><name pos:line="12191" pos:column="92">pPropertyInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12192" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPropertyInfo(This,dwFields,dwRadix,dwTimeout,rgpArgs,dwArgCount,pPropertyInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12194" pos:column="1">#<cpp:directive pos:line="12194" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12194" pos:column="9">IDebugProperty3_SetValueAsString</name><parameter_list pos:line="12194" pos:column="41">(<param><type><name pos:line="12194" pos:column="42">This</name></type></param>,<param><type><name pos:line="12194" pos:column="47">pszValue</name></type></param>,<param><type><name pos:line="12194" pos:column="56">dwRadix</name></type></param>,<param><type><name pos:line="12194" pos:column="64">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12195" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsString(This,pszValue,dwRadix,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="12197" pos:column="1">#<cpp:directive pos:line="12197" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12197" pos:column="9">IDebugProperty3_SetValueAsReference</name><parameter_list pos:line="12197" pos:column="44">(<param><type><name pos:line="12197" pos:column="45">This</name></type></param>,<param><type><name pos:line="12197" pos:column="50">rgpArgs</name></type></param>,<param><type><name pos:line="12197" pos:column="58">dwArgCount</name></type></param>,<param><type><name pos:line="12197" pos:column="69">pValue</name></type></param>,<param><type><name pos:line="12197" pos:column="76">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12198" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsReference(This,rgpArgs,dwArgCount,pValue,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="12200" pos:column="1">#<cpp:directive pos:line="12200" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12200" pos:column="9">IDebugProperty3_EnumChildren</name><parameter_list pos:line="12200" pos:column="37">(<param><type><name pos:line="12200" pos:column="38">This</name></type></param>,<param><type><name pos:line="12200" pos:column="43">dwFields</name></type></param>,<param><type><name pos:line="12200" pos:column="52">dwRadix</name></type></param>,<param><type><name pos:line="12200" pos:column="60">guidFilter</name></type></param>,<param><type><name pos:line="12200" pos:column="71">dwAttribFilter</name></type></param>,<param><type><name pos:line="12200" pos:column="86">pszNameFilter</name></type></param>,<param><type><name pos:line="12200" pos:column="100">dwTimeout</name></type></param>,<param><type><name pos:line="12200" pos:column="110">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12201" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumChildren(This,dwFields,dwRadix,guidFilter,dwAttribFilter,pszNameFilter,dwTimeout,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="12203" pos:column="1">#<cpp:directive pos:line="12203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12203" pos:column="9">IDebugProperty3_GetParent</name><parameter_list pos:line="12203" pos:column="34">(<param><type><name pos:line="12203" pos:column="35">This</name></type></param>,<param><type><name pos:line="12203" pos:column="40">ppParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12204" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetParent(This,ppParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="12206" pos:column="1">#<cpp:directive pos:line="12206" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12206" pos:column="9">IDebugProperty3_GetDerivedMostProperty</name><parameter_list pos:line="12206" pos:column="47">(<param><type><name pos:line="12206" pos:column="48">This</name></type></param>,<param><type><name pos:line="12206" pos:column="53">ppDerivedMost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12207" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDerivedMostProperty(This,ppDerivedMost) )</cpp:value></cpp:define> 

<cpp:define pos:line="12209" pos:column="1">#<cpp:directive pos:line="12209" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12209" pos:column="9">IDebugProperty3_GetMemoryBytes</name><parameter_list pos:line="12209" pos:column="39">(<param><type><name pos:line="12209" pos:column="40">This</name></type></param>,<param><type><name pos:line="12209" pos:column="45">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12210" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="12212" pos:column="1">#<cpp:directive pos:line="12212" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12212" pos:column="9">IDebugProperty3_GetMemoryContext</name><parameter_list pos:line="12212" pos:column="41">(<param><type><name pos:line="12212" pos:column="42">This</name></type></param>,<param><type><name pos:line="12212" pos:column="47">ppMemory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12213" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,ppMemory) )</cpp:value></cpp:define> 

<cpp:define pos:line="12215" pos:column="1">#<cpp:directive pos:line="12215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12215" pos:column="9">IDebugProperty3_GetSize</name><parameter_list pos:line="12215" pos:column="32">(<param><type><name pos:line="12215" pos:column="33">This</name></type></param>,<param><type><name pos:line="12215" pos:column="38">pdwSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12216" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pdwSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="12218" pos:column="1">#<cpp:directive pos:line="12218" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12218" pos:column="9">IDebugProperty3_GetReference</name><parameter_list pos:line="12218" pos:column="37">(<param><type><name pos:line="12218" pos:column="38">This</name></type></param>,<param><type><name pos:line="12218" pos:column="43">ppReference</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12219" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReference(This,ppReference) )</cpp:value></cpp:define> 

<cpp:define pos:line="12221" pos:column="1">#<cpp:directive pos:line="12221" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12221" pos:column="9">IDebugProperty3_GetExtendedInfo</name><parameter_list pos:line="12221" pos:column="40">(<param><type><name pos:line="12221" pos:column="41">This</name></type></param>,<param><type><name pos:line="12221" pos:column="46">guidExtendedInfo</name></type></param>,<param><type><name pos:line="12221" pos:column="63">pExtendedInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12222" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtendedInfo(This,guidExtendedInfo,pExtendedInfo) )</cpp:value></cpp:define> 


<cpp:define pos:line="12225" pos:column="1">#<cpp:directive pos:line="12225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12225" pos:column="9">IDebugProperty3_GetStringCharLength</name><parameter_list pos:line="12225" pos:column="44">(<param><type><name pos:line="12225" pos:column="45">This</name></type></param>,<param><type><name pos:line="12225" pos:column="50">pLen</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12226" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStringCharLength(This,pLen) )</cpp:value></cpp:define> 

<cpp:define pos:line="12228" pos:column="1">#<cpp:directive pos:line="12228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12228" pos:column="9">IDebugProperty3_GetStringChars</name><parameter_list pos:line="12228" pos:column="39">(<param><type><name pos:line="12228" pos:column="40">This</name></type></param>,<param><type><name pos:line="12228" pos:column="45">buflen</name></type></param>,<param><type><name pos:line="12228" pos:column="52">rgString</name></type></param>,<param><type><name pos:line="12228" pos:column="61">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12229" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStringChars(This,buflen,rgString,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="12231" pos:column="1">#<cpp:directive pos:line="12231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12231" pos:column="9">IDebugProperty3_CreateObjectID</name><parameter_list pos:line="12231" pos:column="39">(<param><type><name pos:line="12231" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12232" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateObjectID(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12234" pos:column="1">#<cpp:directive pos:line="12234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12234" pos:column="9">IDebugProperty3_DestroyObjectID</name><parameter_list pos:line="12234" pos:column="40">(<param><type><name pos:line="12234" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12235" pos:column="5">( (This)-&gt;lpVtbl -&gt; DestroyObjectID(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12237" pos:column="1">#<cpp:directive pos:line="12237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12237" pos:column="9">IDebugProperty3_GetCustomViewerCount</name><parameter_list pos:line="12237" pos:column="45">(<param><type><name pos:line="12237" pos:column="46">This</name></type></param>,<param><type><name pos:line="12237" pos:column="51">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12238" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCustomViewerCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:define pos:line="12240" pos:column="1">#<cpp:directive pos:line="12240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12240" pos:column="9">IDebugProperty3_GetCustomViewerList</name><parameter_list pos:line="12240" pos:column="44">(<param><type><name pos:line="12240" pos:column="45">This</name></type></param>,<param><type><name pos:line="12240" pos:column="50">celtSkip</name></type></param>,<param><type><name pos:line="12240" pos:column="59">celtRequested</name></type></param>,<param><type><name pos:line="12240" pos:column="73">rgViewers</name></type></param>,<param><type><name pos:line="12240" pos:column="83">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12241" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCustomViewerList(This,celtSkip,celtRequested,rgViewers,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="12243" pos:column="1">#<cpp:directive pos:line="12243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12243" pos:column="9">IDebugProperty3_SetValueAsStringWithError</name><parameter_list pos:line="12243" pos:column="50">(<param><type><name pos:line="12243" pos:column="51">This</name></type></param>,<param><type><name pos:line="12243" pos:column="56">pszValue</name></type></param>,<param><type><name pos:line="12243" pos:column="65">dwRadix</name></type></param>,<param><type><name pos:line="12243" pos:column="73">dwTimeout</name></type></param>,<param><type><name pos:line="12243" pos:column="83">errorString</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12244" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsStringWithError(This,pszValue,dwRadix,dwTimeout,errorString) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12246" pos:column="1">#<cpp:directive pos:line="12246" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12246" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12249" pos:column="1">#<cpp:directive pos:line="12249" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12249" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12254" pos:column="1">#<cpp:directive pos:line="12254" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12254" pos:column="9">/* __IDebugProperty3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12257" pos:column="1">#<cpp:directive pos:line="12257" pos:column="2">ifndef</cpp:directive> <name pos:line="12257" pos:column="9">__IDebugSessionProperty2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12258" pos:column="1">#<cpp:directive pos:line="12258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12258" pos:column="9">__IDebugSessionProperty2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12260" pos:column="1">/* interface IDebugSessionProperty2 */</comment>
<comment type="block" pos:line="12261" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="12264" pos:column="1">EXTERN_C</name> <specifier pos:line="12264" pos:column="10">const</specifier> <name pos:line="12264" pos:column="16">IID</name></type> <name pos:line="12264" pos:column="20">IID_IDebugSessionProperty2</name></decl>;</decl_stmt>

<cpp:if pos:line="12266" pos:column="1">#<cpp:directive pos:line="12266" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12266" pos:column="5">defined</name><argument_list pos:line="12266" pos:column="12">(<argument><expr><name pos:line="12266" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12266" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12266" pos:column="29">!</op:operator><call><name pos:line="12266" pos:column="30">defined</name><argument_list pos:line="12266" pos:column="37">(<argument><expr><name pos:line="12266" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12268" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12268" pos:column="19">(<argument pos:line="12268" pos:column="20">"72ff2712-0bc3-4308-a99d-26ac7ec68c5f"</argument>)</argument_list></macro>
    <label><name pos:line="12269" pos:column="5">IDebugSessionProperty2</name> :</label> <expr_stmt><expr pos:line="12269" pos:column="30">public <name pos:line="12269" pos:column="37">IDebugProperty3</name>
    <block pos:line="12270" pos:column="5">{
    <expr pos:line="12271" pos:column="5">public<op:operator pos:line="12271" pos:column="11">:</op:operator>
        virtual <name pos:line="12272" pos:column="17">HRESULT</name> <name pos:line="12272" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="12272" pos:column="43">Close</name><argument_list pos:line="12272" pos:column="48">( <argument><expr><name pos:line="12272" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="12272" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="12272" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="12274" pos:column="9">virtual <name pos:line="12274" pos:column="17">HRESULT</name> <name pos:line="12274" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12274" pos:column="43">GetThread</name><argument_list pos:line="12274" pos:column="52">( 
            <comment type="block" pos:line="12275" pos:column="13">/* [out] */</comment> <argument pos:line="12275" pos:column="25">__RPC__deref_out_opt IDebugThread3 **ppThread</argument>)</argument_list></macro> <op:operator pos:line="12275" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="12275" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12279" pos:column="1">#<cpp:directive pos:line="12279" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12279" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12281" pos:column="5">typedef <type><struct pos:line="12281" pos:column="13">struct <name pos:line="12281" pos:column="20">IDebugSessionProperty2Vtbl</name>
    <block pos:line="12282" pos:column="5">{<public type="default" pos:line="12282" pos:column="6">
        <function_decl><type><name pos:line="12283" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12285" pos:column="9">HRESULT</name></type> ( <name pos:line="12285" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12285" pos:column="37">*</type:modifier><name pos:line="12285" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12285" pos:column="54">( 
            <param><decl><type><name pos:line="12286" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12286" pos:column="36">*</type:modifier></type> <name pos:line="12286" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12287" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12287" pos:column="24">__RPC__in</name> <name pos:line="12287" pos:column="34">REFIID</name></type> <name pos:line="12287" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12288" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12289" pos:column="13">__RPC__deref_out</name>  <name pos:line="12289" pos:column="31">void</name> <type:modifier pos:line="12289" pos:column="36">*</type:modifier><type:modifier pos:line="12289" pos:column="37">*</type:modifier></type><name pos:line="12289" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12291" pos:column="9">ULONG</name></type> ( <name pos:line="12291" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12291" pos:column="35">*</type:modifier><name pos:line="12291" pos:column="36">AddRef</name> )<parameter_list pos:line="12291" pos:column="44">( 
            <param><decl><type><name pos:line="12292" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12292" pos:column="36">*</type:modifier></type> <name pos:line="12292" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12294" pos:column="9">ULONG</name></type> ( <name pos:line="12294" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12294" pos:column="35">*</type:modifier><name pos:line="12294" pos:column="36">Release</name> )<parameter_list pos:line="12294" pos:column="45">( 
            <param><decl><type><name pos:line="12295" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12295" pos:column="36">*</type:modifier></type> <name pos:line="12295" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12297" pos:column="9">HRESULT</name> <argument_list pos:line="12297" pos:column="17">( <argument pos:line="12297" pos:column="19">STDMETHODCALLTYPE *GetPropertyInfo</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12297" pos:column="55">(</op:operator> 
            <name pos:line="12298" pos:column="13">IDebugSessionProperty2</name> <op:operator pos:line="12298" pos:column="36">*</op:operator> <name pos:line="12298" pos:column="38">This</name><op:operator pos:line="12298" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12299" pos:column="13">/* [in] */</comment> <name pos:line="12299" pos:column="24">DEBUGPROP_INFO_FLAGS</name> <name pos:line="12299" pos:column="45">dwFields</name><op:operator pos:line="12299" pos:column="53">,</op:operator>
            <comment type="block" pos:line="12300" pos:column="13">/* [in] */</comment> <name pos:line="12300" pos:column="24">DWORD</name> <name pos:line="12300" pos:column="30">dwRadix</name><op:operator pos:line="12300" pos:column="37">,</op:operator>
            <comment type="block" pos:line="12301" pos:column="13">/* [in] */</comment> <name pos:line="12301" pos:column="24">DWORD</name> <name pos:line="12301" pos:column="30">dwTimeout</name><op:operator pos:line="12301" pos:column="39">,</op:operator>
            <comment type="block" pos:line="12302" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="12302" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="12302" pos:column="75">(<argument pos:line="12302" pos:column="76">dwArgCount</argument>, <argument pos:line="12302" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="12302" pos:column="100">IDebugReference2</name> <op:operator pos:line="12302" pos:column="117">*</op:operator><op:operator pos:line="12302" pos:column="118">*</op:operator><name pos:line="12302" pos:column="119">rgpArgs</name><op:operator pos:line="12302" pos:column="126">,</op:operator>
            <comment type="block" pos:line="12303" pos:column="13">/* [in] */</comment> <name pos:line="12303" pos:column="24">DWORD</name> <name pos:line="12303" pos:column="30">dwArgCount</name><op:operator pos:line="12303" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12304" pos:column="13">/* [out] */</comment> <name pos:line="12304" pos:column="25">__RPC__out</name> <name pos:line="12304" pos:column="36">DEBUG_PROPERTY_INFO</name> <op:operator pos:line="12304" pos:column="56">*</op:operator><name pos:line="12304" pos:column="57">pPropertyInfo</name><op:operator pos:line="12304" pos:column="70">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12306" pos:column="9">HRESULT</name></type> ( <name pos:line="12306" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12306" pos:column="37">*</type:modifier><name pos:line="12306" pos:column="38">SetValueAsString</name> )<parameter_list pos:line="12306" pos:column="56">( 
            <param><decl><type><name pos:line="12307" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12307" pos:column="36">*</type:modifier></type> <name pos:line="12307" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12308" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12308" pos:column="24">__RPC__in</name> <name pos:line="12308" pos:column="34">LPCOLESTR</name></type> <name pos:line="12308" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="12309" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12309" pos:column="24">DWORD</name></type> <name pos:line="12309" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12310" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12310" pos:column="24">DWORD</name></type> <name pos:line="12310" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12312" pos:column="9">HRESULT</name> <argument_list pos:line="12312" pos:column="17">( <argument pos:line="12312" pos:column="19">STDMETHODCALLTYPE *SetValueAsReference</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12312" pos:column="59">(</op:operator> 
            <name pos:line="12313" pos:column="13">IDebugSessionProperty2</name> <op:operator pos:line="12313" pos:column="36">*</op:operator> <name pos:line="12313" pos:column="38">This</name><op:operator pos:line="12313" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12314" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="12314" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="12314" pos:column="75">(<argument pos:line="12314" pos:column="76">dwArgCount</argument>, <argument pos:line="12314" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="12314" pos:column="100">IDebugReference2</name> <op:operator pos:line="12314" pos:column="117">*</op:operator><op:operator pos:line="12314" pos:column="118">*</op:operator><name pos:line="12314" pos:column="119">rgpArgs</name><op:operator pos:line="12314" pos:column="126">,</op:operator>
            <comment type="block" pos:line="12315" pos:column="13">/* [in] */</comment> <name pos:line="12315" pos:column="24">DWORD</name> <name pos:line="12315" pos:column="30">dwArgCount</name><op:operator pos:line="12315" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12316" pos:column="13">/* [in] */</comment> <name pos:line="12316" pos:column="24">__RPC__in_opt</name> <name pos:line="12316" pos:column="38">IDebugReference2</name> <op:operator pos:line="12316" pos:column="55">*</op:operator><name pos:line="12316" pos:column="56">pValue</name><op:operator pos:line="12316" pos:column="62">,</op:operator>
            <comment type="block" pos:line="12317" pos:column="13">/* [in] */</comment> <name pos:line="12317" pos:column="24">DWORD</name> <name pos:line="12317" pos:column="30">dwTimeout</name><op:operator pos:line="12317" pos:column="39">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12319" pos:column="9">HRESULT</name></type> ( <name pos:line="12319" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12319" pos:column="37">*</type:modifier><name pos:line="12319" pos:column="38">EnumChildren</name> )<parameter_list pos:line="12319" pos:column="52">( 
            <param><decl><type><name pos:line="12320" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12320" pos:column="36">*</type:modifier></type> <name pos:line="12320" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12321" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12321" pos:column="24">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="12321" pos:column="45">dwFields</name></decl></param>,
            <comment type="block" pos:line="12322" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12322" pos:column="24">DWORD</name></type> <name pos:line="12322" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12323" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12323" pos:column="24">__RPC__in</name> <name pos:line="12323" pos:column="34">REFGUID</name></type> <name pos:line="12323" pos:column="42">guidFilter</name></decl></param>,
            <comment type="block" pos:line="12324" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12324" pos:column="24">DBG_ATTRIB_FLAGS</name></type> <name pos:line="12324" pos:column="41">dwAttribFilter</name></decl></param>,
            <comment type="block" pos:line="12325" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="12325" pos:column="30">__RPC__in_opt</name> <name pos:line="12325" pos:column="44">LPCOLESTR</name></type> <name pos:line="12325" pos:column="54">pszNameFilter</name></decl></param>,
            <comment type="block" pos:line="12326" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12326" pos:column="24">DWORD</name></type> <name pos:line="12326" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="12327" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12327" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12327" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="12327" pos:column="70">*</type:modifier><type:modifier pos:line="12327" pos:column="71">*</type:modifier></type><name pos:line="12327" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12329" pos:column="9">HRESULT</name></type> ( <name pos:line="12329" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12329" pos:column="37">*</type:modifier><name pos:line="12329" pos:column="38">GetParent</name> )<parameter_list pos:line="12329" pos:column="49">( 
            <param><decl><type><name pos:line="12330" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12330" pos:column="36">*</type:modifier></type> <name pos:line="12330" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12331" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12331" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12331" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="12331" pos:column="62">*</type:modifier><type:modifier pos:line="12331" pos:column="63">*</type:modifier></type><name pos:line="12331" pos:column="64">ppParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12333" pos:column="9">HRESULT</name></type> ( <name pos:line="12333" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12333" pos:column="37">*</type:modifier><name pos:line="12333" pos:column="38">GetDerivedMostProperty</name> )<parameter_list pos:line="12333" pos:column="62">( 
            <param><decl><type><name pos:line="12334" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12334" pos:column="36">*</type:modifier></type> <name pos:line="12334" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12335" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12335" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12335" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="12335" pos:column="62">*</type:modifier><type:modifier pos:line="12335" pos:column="63">*</type:modifier></type><name pos:line="12335" pos:column="64">ppDerivedMost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12337" pos:column="9">HRESULT</name></type> ( <name pos:line="12337" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12337" pos:column="37">*</type:modifier><name pos:line="12337" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="12337" pos:column="54">( 
            <param><decl><type><name pos:line="12338" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12338" pos:column="36">*</type:modifier></type> <name pos:line="12338" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12339" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12339" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12339" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="12339" pos:column="65">*</type:modifier><type:modifier pos:line="12339" pos:column="66">*</type:modifier></type><name pos:line="12339" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12341" pos:column="9">HRESULT</name></type> ( <name pos:line="12341" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12341" pos:column="37">*</type:modifier><name pos:line="12341" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="12341" pos:column="56">( 
            <param><decl><type><name pos:line="12342" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12342" pos:column="36">*</type:modifier></type> <name pos:line="12342" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12343" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12343" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12343" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="12343" pos:column="67">*</type:modifier><type:modifier pos:line="12343" pos:column="68">*</type:modifier></type><name pos:line="12343" pos:column="69">ppMemory</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12345" pos:column="9">HRESULT</name></type> ( <name pos:line="12345" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12345" pos:column="37">*</type:modifier><name pos:line="12345" pos:column="38">GetSize</name> )<parameter_list pos:line="12345" pos:column="47">( 
            <param><decl><type><name pos:line="12346" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12346" pos:column="36">*</type:modifier></type> <name pos:line="12346" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12347" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12347" pos:column="25">__RPC__out</name> <name pos:line="12347" pos:column="36">DWORD</name> <type:modifier pos:line="12347" pos:column="42">*</type:modifier></type><name pos:line="12347" pos:column="43">pdwSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12349" pos:column="9">HRESULT</name></type> ( <name pos:line="12349" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12349" pos:column="37">*</type:modifier><name pos:line="12349" pos:column="38">GetReference</name> )<parameter_list pos:line="12349" pos:column="52">( 
            <param><decl><type><name pos:line="12350" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12350" pos:column="36">*</type:modifier></type> <name pos:line="12350" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12351" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12351" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12351" pos:column="46">IDebugReference2</name> <type:modifier pos:line="12351" pos:column="63">*</type:modifier><type:modifier pos:line="12351" pos:column="64">*</type:modifier></type><name pos:line="12351" pos:column="65">ppReference</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12353" pos:column="9">HRESULT</name></type> ( <name pos:line="12353" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12353" pos:column="37">*</type:modifier><name pos:line="12353" pos:column="38">GetExtendedInfo</name> )<parameter_list pos:line="12353" pos:column="55">( 
            <param><decl><type><name pos:line="12354" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12354" pos:column="36">*</type:modifier></type> <name pos:line="12354" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12355" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12355" pos:column="24">__RPC__in</name> <name pos:line="12355" pos:column="34">REFGUID</name></type> <name pos:line="12355" pos:column="42">guidExtendedInfo</name></decl></param>,
            <comment type="block" pos:line="12356" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12356" pos:column="25">__RPC__out</name> <name pos:line="12356" pos:column="36">VARIANT</name> <type:modifier pos:line="12356" pos:column="44">*</type:modifier></type><name pos:line="12356" pos:column="45">pExtendedInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12358" pos:column="9">HRESULT</name></type> ( <name pos:line="12358" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12358" pos:column="37">*</type:modifier><name pos:line="12358" pos:column="38">GetStringCharLength</name> )<parameter_list pos:line="12358" pos:column="59">( 
            <param><decl><type><name pos:line="12359" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12359" pos:column="36">*</type:modifier></type> <name pos:line="12359" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12360" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12360" pos:column="25">__RPC__out</name> <name pos:line="12360" pos:column="36">ULONG</name> <type:modifier pos:line="12360" pos:column="42">*</type:modifier></type><name pos:line="12360" pos:column="43">pLen</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12362" pos:column="9">HRESULT</name> <argument_list pos:line="12362" pos:column="17">( <argument pos:line="12362" pos:column="19">STDMETHODCALLTYPE *GetStringChars</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12362" pos:column="54">(</op:operator> 
            <name pos:line="12363" pos:column="13">IDebugSessionProperty2</name> <op:operator pos:line="12363" pos:column="36">*</op:operator> <name pos:line="12363" pos:column="38">This</name><op:operator pos:line="12363" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12364" pos:column="13">/* [in] */</comment> <name pos:line="12364" pos:column="24">ULONG</name> <name pos:line="12364" pos:column="30">buflen</name><op:operator pos:line="12364" pos:column="36">,</op:operator>
            <comment type="block" pos:line="12365" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="12365" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="12365" pos:column="67">(<argument pos:line="12365" pos:column="68">buflen</argument>, <argument pos:line="12365" pos:column="76">*pceltFetched</argument>)</argument_list></macro> <name pos:line="12365" pos:column="91">WCHAR</name> <op:operator pos:line="12365" pos:column="97">*</op:operator><name pos:line="12365" pos:column="98">rgString</name><op:operator pos:line="12365" pos:column="106">,</op:operator>
            <comment type="block" pos:line="12366" pos:column="13">/* [out] */</comment> <name pos:line="12366" pos:column="25">__RPC__out</name> <name pos:line="12366" pos:column="36">ULONG</name> <op:operator pos:line="12366" pos:column="42">*</op:operator><name pos:line="12366" pos:column="43">pceltFetched</name><op:operator pos:line="12366" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12368" pos:column="9">HRESULT</name></type> ( <name pos:line="12368" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12368" pos:column="37">*</type:modifier><name pos:line="12368" pos:column="38">CreateObjectID</name> )<parameter_list pos:line="12368" pos:column="54">( 
            <param><decl><type><name pos:line="12369" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12369" pos:column="36">*</type:modifier></type> <name pos:line="12369" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12371" pos:column="9">HRESULT</name></type> ( <name pos:line="12371" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12371" pos:column="37">*</type:modifier><name pos:line="12371" pos:column="38">DestroyObjectID</name> )<parameter_list pos:line="12371" pos:column="55">( 
            <param><decl><type><name pos:line="12372" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12372" pos:column="36">*</type:modifier></type> <name pos:line="12372" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12374" pos:column="9">HRESULT</name></type> ( <name pos:line="12374" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12374" pos:column="37">*</type:modifier><name pos:line="12374" pos:column="38">GetCustomViewerCount</name> )<parameter_list pos:line="12374" pos:column="60">( 
            <param><decl><type><name pos:line="12375" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12375" pos:column="36">*</type:modifier></type> <name pos:line="12375" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12376" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12376" pos:column="25">__RPC__out</name> <name pos:line="12376" pos:column="36">ULONG</name> <type:modifier pos:line="12376" pos:column="42">*</type:modifier></type><name pos:line="12376" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12378" pos:column="9">HRESULT</name> <argument_list pos:line="12378" pos:column="17">( <argument pos:line="12378" pos:column="19">STDMETHODCALLTYPE *GetCustomViewerList</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12378" pos:column="59">(</op:operator> 
            <name pos:line="12379" pos:column="13">IDebugSessionProperty2</name> <op:operator pos:line="12379" pos:column="36">*</op:operator> <name pos:line="12379" pos:column="38">This</name><op:operator pos:line="12379" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12380" pos:column="13">/* [in] */</comment> <name pos:line="12380" pos:column="24">ULONG</name> <name pos:line="12380" pos:column="30">celtSkip</name><op:operator pos:line="12380" pos:column="38">,</op:operator>
            <comment type="block" pos:line="12381" pos:column="13">/* [in] */</comment> <name pos:line="12381" pos:column="24">ULONG</name> <name pos:line="12381" pos:column="30">celtRequested</name><op:operator pos:line="12381" pos:column="43">,</op:operator>
            <comment type="block" pos:line="12382" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="12382" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="12382" pos:column="67">(<argument pos:line="12382" pos:column="68">celtRequested</argument>, <argument pos:line="12382" pos:column="83">*pceltFetched</argument>)</argument_list></macro> <name pos:line="12382" pos:column="98">DEBUG_CUSTOM_VIEWER</name> <op:operator pos:line="12382" pos:column="118">*</op:operator><name pos:line="12382" pos:column="119">rgViewers</name><op:operator pos:line="12382" pos:column="128">,</op:operator>
            <comment type="block" pos:line="12383" pos:column="13">/* [out] */</comment> <name pos:line="12383" pos:column="25">__RPC__out</name> <name pos:line="12383" pos:column="36">ULONG</name> <op:operator pos:line="12383" pos:column="42">*</op:operator><name pos:line="12383" pos:column="43">pceltFetched</name><op:operator pos:line="12383" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12385" pos:column="9">HRESULT</name></type> ( <name pos:line="12385" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12385" pos:column="37">*</type:modifier><name pos:line="12385" pos:column="38">SetValueAsStringWithError</name> )<parameter_list pos:line="12385" pos:column="65">( 
            <param><decl><type><name pos:line="12386" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12386" pos:column="36">*</type:modifier></type> <name pos:line="12386" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12387" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12387" pos:column="24">__RPC__in</name> <name pos:line="12387" pos:column="34">LPCOLESTR</name></type> <name pos:line="12387" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="12388" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12388" pos:column="24">DWORD</name></type> <name pos:line="12388" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12389" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12389" pos:column="24">DWORD</name></type> <name pos:line="12389" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="12390" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12390" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12390" pos:column="46">BSTR</name> <type:modifier pos:line="12390" pos:column="51">*</type:modifier></type><name pos:line="12390" pos:column="52">errorString</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12392" pos:column="9">HRESULT</name></type> ( <name pos:line="12392" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12392" pos:column="37">*</type:modifier><name pos:line="12392" pos:column="38">Close</name> )<parameter_list pos:line="12392" pos:column="45">( 
            <param><decl><type><name pos:line="12393" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12393" pos:column="36">*</type:modifier></type> <name pos:line="12393" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12395" pos:column="9">HRESULT</name></type> ( <name pos:line="12395" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12395" pos:column="37">*</type:modifier><name pos:line="12395" pos:column="38">GetThread</name> )<parameter_list pos:line="12395" pos:column="49">( 
            <param><decl><type><name pos:line="12396" pos:column="13">IDebugSessionProperty2</name> <type:modifier pos:line="12396" pos:column="36">*</type:modifier></type> <name pos:line="12396" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="12397" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12397" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12397" pos:column="46">IDebugThread3</name> <type:modifier pos:line="12397" pos:column="60">*</type:modifier><type:modifier pos:line="12397" pos:column="61">*</type:modifier></type><name pos:line="12397" pos:column="62">ppThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12399" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12400" pos:column="7">IDebugSessionProperty2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12402" pos:column="5">interface</name></type> <name pos:line="12402" pos:column="15">IDebugSessionProperty2</name>
    <argument_list pos:line="12403" pos:column="5">{
        <argument><expr><name pos:line="12404" pos:column="9">CONST_VTBL</name> struct <name pos:line="12404" pos:column="27">IDebugSessionProperty2Vtbl</name> <op:operator pos:line="12404" pos:column="54">*</op:operator><name pos:line="12404" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12409" pos:column="1">#<cpp:directive pos:line="12409" pos:column="2">ifdef</cpp:directive> <name pos:line="12409" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12412" pos:column="1">#<cpp:directive pos:line="12412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12412" pos:column="9">IDebugSessionProperty2_QueryInterface</name><parameter_list pos:line="12412" pos:column="46">(<param><type><name pos:line="12412" pos:column="47">This</name></type></param>,<param><type><name pos:line="12412" pos:column="52">riid</name></type></param>,<param><type><name pos:line="12412" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12413" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12415" pos:column="1">#<cpp:directive pos:line="12415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12415" pos:column="9">IDebugSessionProperty2_AddRef</name><parameter_list pos:line="12415" pos:column="38">(<param><type><name pos:line="12415" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12416" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12418" pos:column="1">#<cpp:directive pos:line="12418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12418" pos:column="9">IDebugSessionProperty2_Release</name><parameter_list pos:line="12418" pos:column="39">(<param><type><name pos:line="12418" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12419" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12422" pos:column="1">#<cpp:directive pos:line="12422" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12422" pos:column="9">IDebugSessionProperty2_GetPropertyInfo</name><parameter_list pos:line="12422" pos:column="47">(<param><type><name pos:line="12422" pos:column="48">This</name></type></param>,<param><type><name pos:line="12422" pos:column="53">dwFields</name></type></param>,<param><type><name pos:line="12422" pos:column="62">dwRadix</name></type></param>,<param><type><name pos:line="12422" pos:column="70">dwTimeout</name></type></param>,<param><type><name pos:line="12422" pos:column="80">rgpArgs</name></type></param>,<param><type><name pos:line="12422" pos:column="88">dwArgCount</name></type></param>,<param><type><name pos:line="12422" pos:column="99">pPropertyInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12423" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPropertyInfo(This,dwFields,dwRadix,dwTimeout,rgpArgs,dwArgCount,pPropertyInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12425" pos:column="1">#<cpp:directive pos:line="12425" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12425" pos:column="9">IDebugSessionProperty2_SetValueAsString</name><parameter_list pos:line="12425" pos:column="48">(<param><type><name pos:line="12425" pos:column="49">This</name></type></param>,<param><type><name pos:line="12425" pos:column="54">pszValue</name></type></param>,<param><type><name pos:line="12425" pos:column="63">dwRadix</name></type></param>,<param><type><name pos:line="12425" pos:column="71">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12426" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsString(This,pszValue,dwRadix,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="12428" pos:column="1">#<cpp:directive pos:line="12428" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12428" pos:column="9">IDebugSessionProperty2_SetValueAsReference</name><parameter_list pos:line="12428" pos:column="51">(<param><type><name pos:line="12428" pos:column="52">This</name></type></param>,<param><type><name pos:line="12428" pos:column="57">rgpArgs</name></type></param>,<param><type><name pos:line="12428" pos:column="65">dwArgCount</name></type></param>,<param><type><name pos:line="12428" pos:column="76">pValue</name></type></param>,<param><type><name pos:line="12428" pos:column="83">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12429" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsReference(This,rgpArgs,dwArgCount,pValue,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="12431" pos:column="1">#<cpp:directive pos:line="12431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12431" pos:column="9">IDebugSessionProperty2_EnumChildren</name><parameter_list pos:line="12431" pos:column="44">(<param><type><name pos:line="12431" pos:column="45">This</name></type></param>,<param><type><name pos:line="12431" pos:column="50">dwFields</name></type></param>,<param><type><name pos:line="12431" pos:column="59">dwRadix</name></type></param>,<param><type><name pos:line="12431" pos:column="67">guidFilter</name></type></param>,<param><type><name pos:line="12431" pos:column="78">dwAttribFilter</name></type></param>,<param><type><name pos:line="12431" pos:column="93">pszNameFilter</name></type></param>,<param><type><name pos:line="12431" pos:column="107">dwTimeout</name></type></param>,<param><type><name pos:line="12431" pos:column="117">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12432" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumChildren(This,dwFields,dwRadix,guidFilter,dwAttribFilter,pszNameFilter,dwTimeout,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="12434" pos:column="1">#<cpp:directive pos:line="12434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12434" pos:column="9">IDebugSessionProperty2_GetParent</name><parameter_list pos:line="12434" pos:column="41">(<param><type><name pos:line="12434" pos:column="42">This</name></type></param>,<param><type><name pos:line="12434" pos:column="47">ppParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12435" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetParent(This,ppParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="12437" pos:column="1">#<cpp:directive pos:line="12437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12437" pos:column="9">IDebugSessionProperty2_GetDerivedMostProperty</name><parameter_list pos:line="12437" pos:column="54">(<param><type><name pos:line="12437" pos:column="55">This</name></type></param>,<param><type><name pos:line="12437" pos:column="60">ppDerivedMost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12438" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDerivedMostProperty(This,ppDerivedMost) )</cpp:value></cpp:define> 

<cpp:define pos:line="12440" pos:column="1">#<cpp:directive pos:line="12440" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12440" pos:column="9">IDebugSessionProperty2_GetMemoryBytes</name><parameter_list pos:line="12440" pos:column="46">(<param><type><name pos:line="12440" pos:column="47">This</name></type></param>,<param><type><name pos:line="12440" pos:column="52">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12441" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="12443" pos:column="1">#<cpp:directive pos:line="12443" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12443" pos:column="9">IDebugSessionProperty2_GetMemoryContext</name><parameter_list pos:line="12443" pos:column="48">(<param><type><name pos:line="12443" pos:column="49">This</name></type></param>,<param><type><name pos:line="12443" pos:column="54">ppMemory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12444" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,ppMemory) )</cpp:value></cpp:define> 

<cpp:define pos:line="12446" pos:column="1">#<cpp:directive pos:line="12446" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12446" pos:column="9">IDebugSessionProperty2_GetSize</name><parameter_list pos:line="12446" pos:column="39">(<param><type><name pos:line="12446" pos:column="40">This</name></type></param>,<param><type><name pos:line="12446" pos:column="45">pdwSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12447" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pdwSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="12449" pos:column="1">#<cpp:directive pos:line="12449" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12449" pos:column="9">IDebugSessionProperty2_GetReference</name><parameter_list pos:line="12449" pos:column="44">(<param><type><name pos:line="12449" pos:column="45">This</name></type></param>,<param><type><name pos:line="12449" pos:column="50">ppReference</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12450" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReference(This,ppReference) )</cpp:value></cpp:define> 

<cpp:define pos:line="12452" pos:column="1">#<cpp:directive pos:line="12452" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12452" pos:column="9">IDebugSessionProperty2_GetExtendedInfo</name><parameter_list pos:line="12452" pos:column="47">(<param><type><name pos:line="12452" pos:column="48">This</name></type></param>,<param><type><name pos:line="12452" pos:column="53">guidExtendedInfo</name></type></param>,<param><type><name pos:line="12452" pos:column="70">pExtendedInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12453" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtendedInfo(This,guidExtendedInfo,pExtendedInfo) )</cpp:value></cpp:define> 


<cpp:define pos:line="12456" pos:column="1">#<cpp:directive pos:line="12456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12456" pos:column="9">IDebugSessionProperty2_GetStringCharLength</name><parameter_list pos:line="12456" pos:column="51">(<param><type><name pos:line="12456" pos:column="52">This</name></type></param>,<param><type><name pos:line="12456" pos:column="57">pLen</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12457" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStringCharLength(This,pLen) )</cpp:value></cpp:define> 

<cpp:define pos:line="12459" pos:column="1">#<cpp:directive pos:line="12459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12459" pos:column="9">IDebugSessionProperty2_GetStringChars</name><parameter_list pos:line="12459" pos:column="46">(<param><type><name pos:line="12459" pos:column="47">This</name></type></param>,<param><type><name pos:line="12459" pos:column="52">buflen</name></type></param>,<param><type><name pos:line="12459" pos:column="59">rgString</name></type></param>,<param><type><name pos:line="12459" pos:column="68">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12460" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStringChars(This,buflen,rgString,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="12462" pos:column="1">#<cpp:directive pos:line="12462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12462" pos:column="9">IDebugSessionProperty2_CreateObjectID</name><parameter_list pos:line="12462" pos:column="46">(<param><type><name pos:line="12462" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12463" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateObjectID(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12465" pos:column="1">#<cpp:directive pos:line="12465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12465" pos:column="9">IDebugSessionProperty2_DestroyObjectID</name><parameter_list pos:line="12465" pos:column="47">(<param><type><name pos:line="12465" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12466" pos:column="5">( (This)-&gt;lpVtbl -&gt; DestroyObjectID(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12468" pos:column="1">#<cpp:directive pos:line="12468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12468" pos:column="9">IDebugSessionProperty2_GetCustomViewerCount</name><parameter_list pos:line="12468" pos:column="52">(<param><type><name pos:line="12468" pos:column="53">This</name></type></param>,<param><type><name pos:line="12468" pos:column="58">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12469" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCustomViewerCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:define pos:line="12471" pos:column="1">#<cpp:directive pos:line="12471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12471" pos:column="9">IDebugSessionProperty2_GetCustomViewerList</name><parameter_list pos:line="12471" pos:column="51">(<param><type><name pos:line="12471" pos:column="52">This</name></type></param>,<param><type><name pos:line="12471" pos:column="57">celtSkip</name></type></param>,<param><type><name pos:line="12471" pos:column="66">celtRequested</name></type></param>,<param><type><name pos:line="12471" pos:column="80">rgViewers</name></type></param>,<param><type><name pos:line="12471" pos:column="90">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12472" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCustomViewerList(This,celtSkip,celtRequested,rgViewers,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="12474" pos:column="1">#<cpp:directive pos:line="12474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12474" pos:column="9">IDebugSessionProperty2_SetValueAsStringWithError</name><parameter_list pos:line="12474" pos:column="57">(<param><type><name pos:line="12474" pos:column="58">This</name></type></param>,<param><type><name pos:line="12474" pos:column="63">pszValue</name></type></param>,<param><type><name pos:line="12474" pos:column="72">dwRadix</name></type></param>,<param><type><name pos:line="12474" pos:column="80">dwTimeout</name></type></param>,<param><type><name pos:line="12474" pos:column="90">errorString</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12475" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsStringWithError(This,pszValue,dwRadix,dwTimeout,errorString) )</cpp:value></cpp:define> 


<cpp:define pos:line="12478" pos:column="1">#<cpp:directive pos:line="12478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12478" pos:column="9">IDebugSessionProperty2_Close</name><parameter_list pos:line="12478" pos:column="37">(<param><type><name pos:line="12478" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12479" pos:column="5">( (This)-&gt;lpVtbl -&gt; Close(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12481" pos:column="1">#<cpp:directive pos:line="12481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12481" pos:column="9">IDebugSessionProperty2_GetThread</name><parameter_list pos:line="12481" pos:column="41">(<param><type><name pos:line="12481" pos:column="42">This</name></type></param>,<param><type><name pos:line="12481" pos:column="47">ppThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12482" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThread(This,ppThread) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12484" pos:column="1">#<cpp:directive pos:line="12484" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12484" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12487" pos:column="1">#<cpp:directive pos:line="12487" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12487" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12492" pos:column="1">#<cpp:directive pos:line="12492" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12492" pos:column="9">/* __IDebugSessionProperty2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="12495" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0082 */</comment>
<comment type="block" pos:line="12496" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="12498" pos:column="1">#<cpp:directive pos:line="12498" pos:column="2">pragma</cpp:directive> warning(pop)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="12501" pos:column="1">extern</specifier> <name pos:line="12501" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12501" pos:column="22">__MIDL_itf_msdbg_0000_0082_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12502" pos:column="1">extern</specifier> <name pos:line="12502" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12502" pos:column="22">__MIDL_itf_msdbg_0000_0082_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="12504" pos:column="1">#<cpp:directive pos:line="12504" pos:column="2">ifndef</cpp:directive> <name pos:line="12504" pos:column="9">__IDebugPropertyClose2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12505" pos:column="1">#<cpp:directive pos:line="12505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12505" pos:column="9">__IDebugPropertyClose2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12507" pos:column="1">/* interface IDebugPropertyClose2 */</comment>
<comment type="block" pos:line="12508" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="12511" pos:column="1">EXTERN_C</name> <specifier pos:line="12511" pos:column="10">const</specifier> <name pos:line="12511" pos:column="16">IID</name></type> <name pos:line="12511" pos:column="20">IID_IDebugPropertyClose2</name></decl>;</decl_stmt>

<cpp:if pos:line="12513" pos:column="1">#<cpp:directive pos:line="12513" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12513" pos:column="5">defined</name><argument_list pos:line="12513" pos:column="12">(<argument><expr><name pos:line="12513" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12513" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12513" pos:column="29">!</op:operator><call><name pos:line="12513" pos:column="30">defined</name><argument_list pos:line="12513" pos:column="37">(<argument><expr><name pos:line="12513" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12515" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12515" pos:column="19">(<argument pos:line="12515" pos:column="20">"852c7d42-794f-43cd-a18f-cd40e83e67cd"</argument>)</argument_list></macro>
    <label><name pos:line="12516" pos:column="5">IDebugPropertyClose2</name> :</label> <expr_stmt><expr pos:line="12516" pos:column="28">public <name pos:line="12516" pos:column="35">IDebugProperty2</name>
    <block pos:line="12517" pos:column="5">{
    <expr pos:line="12518" pos:column="5">public<op:operator pos:line="12518" pos:column="11">:</op:operator>
        virtual <name pos:line="12519" pos:column="17">HRESULT</name> <name pos:line="12519" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="12519" pos:column="43">Close</name><argument_list pos:line="12519" pos:column="48">( <argument><expr><name pos:line="12519" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="12519" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="12519" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12523" pos:column="1">#<cpp:directive pos:line="12523" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12523" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12525" pos:column="5">typedef <type><struct pos:line="12525" pos:column="13">struct <name pos:line="12525" pos:column="20">IDebugPropertyClose2Vtbl</name>
    <block pos:line="12526" pos:column="5">{<public type="default" pos:line="12526" pos:column="6">
        <function_decl><type><name pos:line="12527" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12529" pos:column="9">HRESULT</name></type> ( <name pos:line="12529" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12529" pos:column="37">*</type:modifier><name pos:line="12529" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12529" pos:column="54">( 
            <param><decl><type><name pos:line="12530" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12530" pos:column="34">*</type:modifier></type> <name pos:line="12530" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12531" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12531" pos:column="24">__RPC__in</name> <name pos:line="12531" pos:column="34">REFIID</name></type> <name pos:line="12531" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12532" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12533" pos:column="13">__RPC__deref_out</name>  <name pos:line="12533" pos:column="31">void</name> <type:modifier pos:line="12533" pos:column="36">*</type:modifier><type:modifier pos:line="12533" pos:column="37">*</type:modifier></type><name pos:line="12533" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12535" pos:column="9">ULONG</name></type> ( <name pos:line="12535" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12535" pos:column="35">*</type:modifier><name pos:line="12535" pos:column="36">AddRef</name> )<parameter_list pos:line="12535" pos:column="44">( 
            <param><decl><type><name pos:line="12536" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12536" pos:column="34">*</type:modifier></type> <name pos:line="12536" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12538" pos:column="9">ULONG</name></type> ( <name pos:line="12538" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12538" pos:column="35">*</type:modifier><name pos:line="12538" pos:column="36">Release</name> )<parameter_list pos:line="12538" pos:column="45">( 
            <param><decl><type><name pos:line="12539" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12539" pos:column="34">*</type:modifier></type> <name pos:line="12539" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12541" pos:column="9">HRESULT</name> <argument_list pos:line="12541" pos:column="17">( <argument pos:line="12541" pos:column="19">STDMETHODCALLTYPE *GetPropertyInfo</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12541" pos:column="55">(</op:operator> 
            <name pos:line="12542" pos:column="13">IDebugPropertyClose2</name> <op:operator pos:line="12542" pos:column="34">*</op:operator> <name pos:line="12542" pos:column="36">This</name><op:operator pos:line="12542" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12543" pos:column="13">/* [in] */</comment> <name pos:line="12543" pos:column="24">DEBUGPROP_INFO_FLAGS</name> <name pos:line="12543" pos:column="45">dwFields</name><op:operator pos:line="12543" pos:column="53">,</op:operator>
            <comment type="block" pos:line="12544" pos:column="13">/* [in] */</comment> <name pos:line="12544" pos:column="24">DWORD</name> <name pos:line="12544" pos:column="30">dwRadix</name><op:operator pos:line="12544" pos:column="37">,</op:operator>
            <comment type="block" pos:line="12545" pos:column="13">/* [in] */</comment> <name pos:line="12545" pos:column="24">DWORD</name> <name pos:line="12545" pos:column="30">dwTimeout</name><op:operator pos:line="12545" pos:column="39">,</op:operator>
            <comment type="block" pos:line="12546" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="12546" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="12546" pos:column="75">(<argument pos:line="12546" pos:column="76">dwArgCount</argument>, <argument pos:line="12546" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="12546" pos:column="100">IDebugReference2</name> <op:operator pos:line="12546" pos:column="117">*</op:operator><op:operator pos:line="12546" pos:column="118">*</op:operator><name pos:line="12546" pos:column="119">rgpArgs</name><op:operator pos:line="12546" pos:column="126">,</op:operator>
            <comment type="block" pos:line="12547" pos:column="13">/* [in] */</comment> <name pos:line="12547" pos:column="24">DWORD</name> <name pos:line="12547" pos:column="30">dwArgCount</name><op:operator pos:line="12547" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12548" pos:column="13">/* [out] */</comment> <name pos:line="12548" pos:column="25">__RPC__out</name> <name pos:line="12548" pos:column="36">DEBUG_PROPERTY_INFO</name> <op:operator pos:line="12548" pos:column="56">*</op:operator><name pos:line="12548" pos:column="57">pPropertyInfo</name><op:operator pos:line="12548" pos:column="70">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12550" pos:column="9">HRESULT</name></type> ( <name pos:line="12550" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12550" pos:column="37">*</type:modifier><name pos:line="12550" pos:column="38">SetValueAsString</name> )<parameter_list pos:line="12550" pos:column="56">( 
            <param><decl><type><name pos:line="12551" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12551" pos:column="34">*</type:modifier></type> <name pos:line="12551" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12552" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12552" pos:column="24">__RPC__in</name> <name pos:line="12552" pos:column="34">LPCOLESTR</name></type> <name pos:line="12552" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="12553" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12553" pos:column="24">DWORD</name></type> <name pos:line="12553" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12554" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12554" pos:column="24">DWORD</name></type> <name pos:line="12554" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12556" pos:column="9">HRESULT</name> <argument_list pos:line="12556" pos:column="17">( <argument pos:line="12556" pos:column="19">STDMETHODCALLTYPE *SetValueAsReference</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12556" pos:column="59">(</op:operator> 
            <name pos:line="12557" pos:column="13">IDebugPropertyClose2</name> <op:operator pos:line="12557" pos:column="34">*</op:operator> <name pos:line="12557" pos:column="36">This</name><op:operator pos:line="12557" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12558" pos:column="13">/* [length_is][size_is][full][in] */</comment> <macro><name pos:line="12558" pos:column="50">__RPC__in_ecount_part_opt</name><argument_list pos:line="12558" pos:column="75">(<argument pos:line="12558" pos:column="76">dwArgCount</argument>, <argument pos:line="12558" pos:column="88">dwArgCount</argument>)</argument_list></macro> <name pos:line="12558" pos:column="100">IDebugReference2</name> <op:operator pos:line="12558" pos:column="117">*</op:operator><op:operator pos:line="12558" pos:column="118">*</op:operator><name pos:line="12558" pos:column="119">rgpArgs</name><op:operator pos:line="12558" pos:column="126">,</op:operator>
            <comment type="block" pos:line="12559" pos:column="13">/* [in] */</comment> <name pos:line="12559" pos:column="24">DWORD</name> <name pos:line="12559" pos:column="30">dwArgCount</name><op:operator pos:line="12559" pos:column="40">,</op:operator>
            <comment type="block" pos:line="12560" pos:column="13">/* [in] */</comment> <name pos:line="12560" pos:column="24">__RPC__in_opt</name> <name pos:line="12560" pos:column="38">IDebugReference2</name> <op:operator pos:line="12560" pos:column="55">*</op:operator><name pos:line="12560" pos:column="56">pValue</name><op:operator pos:line="12560" pos:column="62">,</op:operator>
            <comment type="block" pos:line="12561" pos:column="13">/* [in] */</comment> <name pos:line="12561" pos:column="24">DWORD</name> <name pos:line="12561" pos:column="30">dwTimeout</name><op:operator pos:line="12561" pos:column="39">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="12563" pos:column="9">HRESULT</name></type> ( <name pos:line="12563" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12563" pos:column="37">*</type:modifier><name pos:line="12563" pos:column="38">EnumChildren</name> )<parameter_list pos:line="12563" pos:column="52">( 
            <param><decl><type><name pos:line="12564" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12564" pos:column="34">*</type:modifier></type> <name pos:line="12564" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12565" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12565" pos:column="24">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="12565" pos:column="45">dwFields</name></decl></param>,
            <comment type="block" pos:line="12566" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12566" pos:column="24">DWORD</name></type> <name pos:line="12566" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="12567" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12567" pos:column="24">__RPC__in</name> <name pos:line="12567" pos:column="34">REFGUID</name></type> <name pos:line="12567" pos:column="42">guidFilter</name></decl></param>,
            <comment type="block" pos:line="12568" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12568" pos:column="24">DBG_ATTRIB_FLAGS</name></type> <name pos:line="12568" pos:column="41">dwAttribFilter</name></decl></param>,
            <comment type="block" pos:line="12569" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="12569" pos:column="30">__RPC__in_opt</name> <name pos:line="12569" pos:column="44">LPCOLESTR</name></type> <name pos:line="12569" pos:column="54">pszNameFilter</name></decl></param>,
            <comment type="block" pos:line="12570" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12570" pos:column="24">DWORD</name></type> <name pos:line="12570" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="12571" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12571" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12571" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="12571" pos:column="70">*</type:modifier><type:modifier pos:line="12571" pos:column="71">*</type:modifier></type><name pos:line="12571" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12573" pos:column="9">HRESULT</name></type> ( <name pos:line="12573" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12573" pos:column="37">*</type:modifier><name pos:line="12573" pos:column="38">GetParent</name> )<parameter_list pos:line="12573" pos:column="49">( 
            <param><decl><type><name pos:line="12574" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12574" pos:column="34">*</type:modifier></type> <name pos:line="12574" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12575" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12575" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12575" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="12575" pos:column="62">*</type:modifier><type:modifier pos:line="12575" pos:column="63">*</type:modifier></type><name pos:line="12575" pos:column="64">ppParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12577" pos:column="9">HRESULT</name></type> ( <name pos:line="12577" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12577" pos:column="37">*</type:modifier><name pos:line="12577" pos:column="38">GetDerivedMostProperty</name> )<parameter_list pos:line="12577" pos:column="62">( 
            <param><decl><type><name pos:line="12578" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12578" pos:column="34">*</type:modifier></type> <name pos:line="12578" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12579" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12579" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12579" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="12579" pos:column="62">*</type:modifier><type:modifier pos:line="12579" pos:column="63">*</type:modifier></type><name pos:line="12579" pos:column="64">ppDerivedMost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12581" pos:column="9">HRESULT</name></type> ( <name pos:line="12581" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12581" pos:column="37">*</type:modifier><name pos:line="12581" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="12581" pos:column="54">( 
            <param><decl><type><name pos:line="12582" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12582" pos:column="34">*</type:modifier></type> <name pos:line="12582" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12583" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12583" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12583" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="12583" pos:column="65">*</type:modifier><type:modifier pos:line="12583" pos:column="66">*</type:modifier></type><name pos:line="12583" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12585" pos:column="9">HRESULT</name></type> ( <name pos:line="12585" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12585" pos:column="37">*</type:modifier><name pos:line="12585" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="12585" pos:column="56">( 
            <param><decl><type><name pos:line="12586" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12586" pos:column="34">*</type:modifier></type> <name pos:line="12586" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12587" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12587" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12587" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="12587" pos:column="67">*</type:modifier><type:modifier pos:line="12587" pos:column="68">*</type:modifier></type><name pos:line="12587" pos:column="69">ppMemory</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12589" pos:column="9">HRESULT</name></type> ( <name pos:line="12589" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12589" pos:column="37">*</type:modifier><name pos:line="12589" pos:column="38">GetSize</name> )<parameter_list pos:line="12589" pos:column="47">( 
            <param><decl><type><name pos:line="12590" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12590" pos:column="34">*</type:modifier></type> <name pos:line="12590" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12591" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12591" pos:column="25">__RPC__out</name> <name pos:line="12591" pos:column="36">DWORD</name> <type:modifier pos:line="12591" pos:column="42">*</type:modifier></type><name pos:line="12591" pos:column="43">pdwSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12593" pos:column="9">HRESULT</name></type> ( <name pos:line="12593" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12593" pos:column="37">*</type:modifier><name pos:line="12593" pos:column="38">GetReference</name> )<parameter_list pos:line="12593" pos:column="52">( 
            <param><decl><type><name pos:line="12594" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12594" pos:column="34">*</type:modifier></type> <name pos:line="12594" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12595" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12595" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12595" pos:column="46">IDebugReference2</name> <type:modifier pos:line="12595" pos:column="63">*</type:modifier><type:modifier pos:line="12595" pos:column="64">*</type:modifier></type><name pos:line="12595" pos:column="65">ppReference</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12597" pos:column="9">HRESULT</name></type> ( <name pos:line="12597" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12597" pos:column="37">*</type:modifier><name pos:line="12597" pos:column="38">GetExtendedInfo</name> )<parameter_list pos:line="12597" pos:column="55">( 
            <param><decl><type><name pos:line="12598" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12598" pos:column="34">*</type:modifier></type> <name pos:line="12598" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="12599" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12599" pos:column="24">__RPC__in</name> <name pos:line="12599" pos:column="34">REFGUID</name></type> <name pos:line="12599" pos:column="42">guidExtendedInfo</name></decl></param>,
            <comment type="block" pos:line="12600" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12600" pos:column="25">__RPC__out</name> <name pos:line="12600" pos:column="36">VARIANT</name> <type:modifier pos:line="12600" pos:column="44">*</type:modifier></type><name pos:line="12600" pos:column="45">pExtendedInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12602" pos:column="9">HRESULT</name></type> ( <name pos:line="12602" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12602" pos:column="37">*</type:modifier><name pos:line="12602" pos:column="38">Close</name> )<parameter_list pos:line="12602" pos:column="45">( 
            <param><decl><type><name pos:line="12603" pos:column="13">IDebugPropertyClose2</name> <type:modifier pos:line="12603" pos:column="34">*</type:modifier></type> <name pos:line="12603" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12605" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12606" pos:column="7">IDebugPropertyClose2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12608" pos:column="5">interface</name></type> <name pos:line="12608" pos:column="15">IDebugPropertyClose2</name>
    <argument_list pos:line="12609" pos:column="5">{
        <argument><expr><name pos:line="12610" pos:column="9">CONST_VTBL</name> struct <name pos:line="12610" pos:column="27">IDebugPropertyClose2Vtbl</name> <op:operator pos:line="12610" pos:column="52">*</op:operator><name pos:line="12610" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12615" pos:column="1">#<cpp:directive pos:line="12615" pos:column="2">ifdef</cpp:directive> <name pos:line="12615" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12618" pos:column="1">#<cpp:directive pos:line="12618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12618" pos:column="9">IDebugPropertyClose2_QueryInterface</name><parameter_list pos:line="12618" pos:column="44">(<param><type><name pos:line="12618" pos:column="45">This</name></type></param>,<param><type><name pos:line="12618" pos:column="50">riid</name></type></param>,<param><type><name pos:line="12618" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12619" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12621" pos:column="1">#<cpp:directive pos:line="12621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12621" pos:column="9">IDebugPropertyClose2_AddRef</name><parameter_list pos:line="12621" pos:column="36">(<param><type><name pos:line="12621" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12622" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12624" pos:column="1">#<cpp:directive pos:line="12624" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12624" pos:column="9">IDebugPropertyClose2_Release</name><parameter_list pos:line="12624" pos:column="37">(<param><type><name pos:line="12624" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12625" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12628" pos:column="1">#<cpp:directive pos:line="12628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12628" pos:column="9">IDebugPropertyClose2_GetPropertyInfo</name><parameter_list pos:line="12628" pos:column="45">(<param><type><name pos:line="12628" pos:column="46">This</name></type></param>,<param><type><name pos:line="12628" pos:column="51">dwFields</name></type></param>,<param><type><name pos:line="12628" pos:column="60">dwRadix</name></type></param>,<param><type><name pos:line="12628" pos:column="68">dwTimeout</name></type></param>,<param><type><name pos:line="12628" pos:column="78">rgpArgs</name></type></param>,<param><type><name pos:line="12628" pos:column="86">dwArgCount</name></type></param>,<param><type><name pos:line="12628" pos:column="97">pPropertyInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12629" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPropertyInfo(This,dwFields,dwRadix,dwTimeout,rgpArgs,dwArgCount,pPropertyInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12631" pos:column="1">#<cpp:directive pos:line="12631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12631" pos:column="9">IDebugPropertyClose2_SetValueAsString</name><parameter_list pos:line="12631" pos:column="46">(<param><type><name pos:line="12631" pos:column="47">This</name></type></param>,<param><type><name pos:line="12631" pos:column="52">pszValue</name></type></param>,<param><type><name pos:line="12631" pos:column="61">dwRadix</name></type></param>,<param><type><name pos:line="12631" pos:column="69">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12632" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsString(This,pszValue,dwRadix,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="12634" pos:column="1">#<cpp:directive pos:line="12634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12634" pos:column="9">IDebugPropertyClose2_SetValueAsReference</name><parameter_list pos:line="12634" pos:column="49">(<param><type><name pos:line="12634" pos:column="50">This</name></type></param>,<param><type><name pos:line="12634" pos:column="55">rgpArgs</name></type></param>,<param><type><name pos:line="12634" pos:column="63">dwArgCount</name></type></param>,<param><type><name pos:line="12634" pos:column="74">pValue</name></type></param>,<param><type><name pos:line="12634" pos:column="81">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12635" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsReference(This,rgpArgs,dwArgCount,pValue,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="12637" pos:column="1">#<cpp:directive pos:line="12637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12637" pos:column="9">IDebugPropertyClose2_EnumChildren</name><parameter_list pos:line="12637" pos:column="42">(<param><type><name pos:line="12637" pos:column="43">This</name></type></param>,<param><type><name pos:line="12637" pos:column="48">dwFields</name></type></param>,<param><type><name pos:line="12637" pos:column="57">dwRadix</name></type></param>,<param><type><name pos:line="12637" pos:column="65">guidFilter</name></type></param>,<param><type><name pos:line="12637" pos:column="76">dwAttribFilter</name></type></param>,<param><type><name pos:line="12637" pos:column="91">pszNameFilter</name></type></param>,<param><type><name pos:line="12637" pos:column="105">dwTimeout</name></type></param>,<param><type><name pos:line="12637" pos:column="115">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12638" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumChildren(This,dwFields,dwRadix,guidFilter,dwAttribFilter,pszNameFilter,dwTimeout,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="12640" pos:column="1">#<cpp:directive pos:line="12640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12640" pos:column="9">IDebugPropertyClose2_GetParent</name><parameter_list pos:line="12640" pos:column="39">(<param><type><name pos:line="12640" pos:column="40">This</name></type></param>,<param><type><name pos:line="12640" pos:column="45">ppParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12641" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetParent(This,ppParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="12643" pos:column="1">#<cpp:directive pos:line="12643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12643" pos:column="9">IDebugPropertyClose2_GetDerivedMostProperty</name><parameter_list pos:line="12643" pos:column="52">(<param><type><name pos:line="12643" pos:column="53">This</name></type></param>,<param><type><name pos:line="12643" pos:column="58">ppDerivedMost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12644" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDerivedMostProperty(This,ppDerivedMost) )</cpp:value></cpp:define> 

<cpp:define pos:line="12646" pos:column="1">#<cpp:directive pos:line="12646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12646" pos:column="9">IDebugPropertyClose2_GetMemoryBytes</name><parameter_list pos:line="12646" pos:column="44">(<param><type><name pos:line="12646" pos:column="45">This</name></type></param>,<param><type><name pos:line="12646" pos:column="50">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12647" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="12649" pos:column="1">#<cpp:directive pos:line="12649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12649" pos:column="9">IDebugPropertyClose2_GetMemoryContext</name><parameter_list pos:line="12649" pos:column="46">(<param><type><name pos:line="12649" pos:column="47">This</name></type></param>,<param><type><name pos:line="12649" pos:column="52">ppMemory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12650" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,ppMemory) )</cpp:value></cpp:define> 

<cpp:define pos:line="12652" pos:column="1">#<cpp:directive pos:line="12652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12652" pos:column="9">IDebugPropertyClose2_GetSize</name><parameter_list pos:line="12652" pos:column="37">(<param><type><name pos:line="12652" pos:column="38">This</name></type></param>,<param><type><name pos:line="12652" pos:column="43">pdwSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12653" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pdwSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="12655" pos:column="1">#<cpp:directive pos:line="12655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12655" pos:column="9">IDebugPropertyClose2_GetReference</name><parameter_list pos:line="12655" pos:column="42">(<param><type><name pos:line="12655" pos:column="43">This</name></type></param>,<param><type><name pos:line="12655" pos:column="48">ppReference</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12656" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReference(This,ppReference) )</cpp:value></cpp:define> 

<cpp:define pos:line="12658" pos:column="1">#<cpp:directive pos:line="12658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12658" pos:column="9">IDebugPropertyClose2_GetExtendedInfo</name><parameter_list pos:line="12658" pos:column="45">(<param><type><name pos:line="12658" pos:column="46">This</name></type></param>,<param><type><name pos:line="12658" pos:column="51">guidExtendedInfo</name></type></param>,<param><type><name pos:line="12658" pos:column="68">pExtendedInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12659" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtendedInfo(This,guidExtendedInfo,pExtendedInfo) )</cpp:value></cpp:define> 


<cpp:define pos:line="12662" pos:column="1">#<cpp:directive pos:line="12662" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12662" pos:column="9">IDebugPropertyClose2_Close</name><parameter_list pos:line="12662" pos:column="35">(<param><type><name pos:line="12662" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12663" pos:column="5">( (This)-&gt;lpVtbl -&gt; Close(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12665" pos:column="1">#<cpp:directive pos:line="12665" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12665" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12668" pos:column="1">#<cpp:directive pos:line="12668" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12668" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12673" pos:column="1">#<cpp:directive pos:line="12673" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12673" pos:column="9">/* __IDebugPropertyClose2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="12676" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0083 */</comment>
<comment type="block" pos:line="12677" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="12679" pos:column="1">#<cpp:directive pos:line="12679" pos:column="2">pragma</cpp:directive> warning(push)</cpp:pragma>
<cpp:pragma pos:line="12680" pos:column="1">#<cpp:directive pos:line="12680" pos:column="2">pragma</cpp:directive> warning(disable:28718)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="12683" pos:column="1">extern</specifier> <name pos:line="12683" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12683" pos:column="22">__MIDL_itf_msdbg_0000_0083_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12684" pos:column="1">extern</specifier> <name pos:line="12684" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12684" pos:column="22">__MIDL_itf_msdbg_0000_0083_v0_0_s_ifspec</name></decl>;</decl_stmt>

<comment type="block" pos:line="12686" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0084 */</comment>
<comment type="block" pos:line="12687" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="12689" pos:column="1">#<cpp:directive pos:line="12689" pos:column="2">pragma</cpp:directive> warning(pop)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="12692" pos:column="1">extern</specifier> <name pos:line="12692" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12692" pos:column="22">__MIDL_itf_msdbg_0000_0084_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12693" pos:column="1">extern</specifier> <name pos:line="12693" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12693" pos:column="22">__MIDL_itf_msdbg_0000_0084_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="12695" pos:column="1">#<cpp:directive pos:line="12695" pos:column="2">ifndef</cpp:directive> <name pos:line="12695" pos:column="9">__IDebugDataGrid_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12696" pos:column="1">#<cpp:directive pos:line="12696" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12696" pos:column="9">__IDebugDataGrid_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12698" pos:column="1">/* interface IDebugDataGrid */</comment>
<comment type="block" pos:line="12699" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="12702" pos:column="1">EXTERN_C</name> <specifier pos:line="12702" pos:column="10">const</specifier> <name pos:line="12702" pos:column="16">IID</name></type> <name pos:line="12702" pos:column="20">IID_IDebugDataGrid</name></decl>;</decl_stmt>

<cpp:if pos:line="12704" pos:column="1">#<cpp:directive pos:line="12704" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12704" pos:column="5">defined</name><argument_list pos:line="12704" pos:column="12">(<argument><expr><name pos:line="12704" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12704" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12704" pos:column="29">!</op:operator><call><name pos:line="12704" pos:column="30">defined</name><argument_list pos:line="12704" pos:column="37">(<argument><expr><name pos:line="12704" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12706" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12706" pos:column="19">(<argument pos:line="12706" pos:column="20">"411F3E08-E6B1-4789-AB29-755C52E52AC4"</argument>)</argument_list></macro>
    <label><name pos:line="12707" pos:column="5">IDebugDataGrid</name> :</label> <expr_stmt><expr pos:line="12707" pos:column="22">public <name pos:line="12707" pos:column="29">IUnknown</name>
    <block pos:line="12708" pos:column="5">{
    <expr pos:line="12709" pos:column="5">public<op:operator pos:line="12709" pos:column="11">:</op:operator>
        virtual <name pos:line="12710" pos:column="17">HRESULT</name> <name pos:line="12710" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12710" pos:column="43">GetGridInfo</name><argument_list pos:line="12710" pos:column="54">( 
            <comment type="block" pos:line="12711" pos:column="13">/* [out] */</comment> <argument pos:line="12711" pos:column="25">__RPC__out ULONG *pX</argument>,
            <comment type="block" pos:line="12712" pos:column="13">/* [out] */</comment> <argument pos:line="12712" pos:column="25">__RPC__out ULONG *pY</argument>,
            <comment type="block" pos:line="12713" pos:column="13">/* [out] */</comment> <argument pos:line="12713" pos:column="25">__RPC__deref_out_opt BSTR *bpstrTitle</argument>)</argument_list></macro> <op:operator pos:line="12713" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="12713" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="12715" pos:column="9">virtual <name pos:line="12715" pos:column="17">HRESULT</name> <name pos:line="12715" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12715" pos:column="43">GetGridPropertyInfo</name><argument_list pos:line="12715" pos:column="62">( 
            <argument pos:line="12716" pos:column="13">ULONG x</argument>,
            <argument pos:line="12717" pos:column="13">ULONG y</argument>,
            <argument pos:line="12718" pos:column="13">ULONG celtX</argument>,
            <argument pos:line="12719" pos:column="13">ULONG celtY</argument>,
            <argument pos:line="12720" pos:column="13">ULONG celtXtimesY</argument>,
            <argument pos:line="12721" pos:column="13">DEBUGPROP_INFO_FLAGS dwFields</argument>,
            <argument pos:line="12722" pos:column="13">DWORD dwRadix</argument>,
            <comment type="block" pos:line="12723" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="12723" pos:column="45">__RPC__out_ecount_part(celtXtimesY, *pceltFetched) DEBUG_PROPERTY_INFO *rgelt</argument>,
            <comment type="block" pos:line="12724" pos:column="13">/* [out] */</comment> <argument pos:line="12724" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="12724" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="12724" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12728" pos:column="1">#<cpp:directive pos:line="12728" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12728" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12730" pos:column="5">typedef <type><struct pos:line="12730" pos:column="13">struct <name pos:line="12730" pos:column="20">IDebugDataGridVtbl</name>
    <block pos:line="12731" pos:column="5">{<public type="default" pos:line="12731" pos:column="6">
        <function_decl><type><name pos:line="12732" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12734" pos:column="9">HRESULT</name></type> ( <name pos:line="12734" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12734" pos:column="37">*</type:modifier><name pos:line="12734" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12734" pos:column="54">( 
            <param><decl><type><name pos:line="12735" pos:column="13">IDebugDataGrid</name> <type:modifier pos:line="12735" pos:column="28">*</type:modifier></type> <name pos:line="12735" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="12736" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12736" pos:column="24">__RPC__in</name> <name pos:line="12736" pos:column="34">REFIID</name></type> <name pos:line="12736" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12737" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12738" pos:column="13">__RPC__deref_out</name>  <name pos:line="12738" pos:column="31">void</name> <type:modifier pos:line="12738" pos:column="36">*</type:modifier><type:modifier pos:line="12738" pos:column="37">*</type:modifier></type><name pos:line="12738" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12740" pos:column="9">ULONG</name></type> ( <name pos:line="12740" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12740" pos:column="35">*</type:modifier><name pos:line="12740" pos:column="36">AddRef</name> )<parameter_list pos:line="12740" pos:column="44">( 
            <param><decl><type><name pos:line="12741" pos:column="13">IDebugDataGrid</name> <type:modifier pos:line="12741" pos:column="28">*</type:modifier></type> <name pos:line="12741" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12743" pos:column="9">ULONG</name></type> ( <name pos:line="12743" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12743" pos:column="35">*</type:modifier><name pos:line="12743" pos:column="36">Release</name> )<parameter_list pos:line="12743" pos:column="45">( 
            <param><decl><type><name pos:line="12744" pos:column="13">IDebugDataGrid</name> <type:modifier pos:line="12744" pos:column="28">*</type:modifier></type> <name pos:line="12744" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12746" pos:column="9">HRESULT</name></type> ( <name pos:line="12746" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12746" pos:column="37">*</type:modifier><name pos:line="12746" pos:column="38">GetGridInfo</name> )<parameter_list pos:line="12746" pos:column="51">( 
            <param><decl><type><name pos:line="12747" pos:column="13">IDebugDataGrid</name> <type:modifier pos:line="12747" pos:column="28">*</type:modifier></type> <name pos:line="12747" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="12748" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12748" pos:column="25">__RPC__out</name> <name pos:line="12748" pos:column="36">ULONG</name> <type:modifier pos:line="12748" pos:column="42">*</type:modifier></type><name pos:line="12748" pos:column="43">pX</name></decl></param>,
            <comment type="block" pos:line="12749" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12749" pos:column="25">__RPC__out</name> <name pos:line="12749" pos:column="36">ULONG</name> <type:modifier pos:line="12749" pos:column="42">*</type:modifier></type><name pos:line="12749" pos:column="43">pY</name></decl></param>,
            <comment type="block" pos:line="12750" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12750" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12750" pos:column="46">BSTR</name> <type:modifier pos:line="12750" pos:column="51">*</type:modifier></type><name pos:line="12750" pos:column="52">bpstrTitle</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12752" pos:column="9">HRESULT</name> <argument_list pos:line="12752" pos:column="17">( <argument pos:line="12752" pos:column="19">STDMETHODCALLTYPE *GetGridPropertyInfo</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12752" pos:column="59">(</op:operator> 
            <name pos:line="12753" pos:column="13">IDebugDataGrid</name> <op:operator pos:line="12753" pos:column="28">*</op:operator> <name pos:line="12753" pos:column="30">This</name><op:operator pos:line="12753" pos:column="34">,</op:operator>
            <name pos:line="12754" pos:column="13">ULONG</name> <name pos:line="12754" pos:column="19">x</name><op:operator pos:line="12754" pos:column="20">,</op:operator>
            <name pos:line="12755" pos:column="13">ULONG</name> <name pos:line="12755" pos:column="19">y</name><op:operator pos:line="12755" pos:column="20">,</op:operator>
            <name pos:line="12756" pos:column="13">ULONG</name> <name pos:line="12756" pos:column="19">celtX</name><op:operator pos:line="12756" pos:column="24">,</op:operator>
            <name pos:line="12757" pos:column="13">ULONG</name> <name pos:line="12757" pos:column="19">celtY</name><op:operator pos:line="12757" pos:column="24">,</op:operator>
            <name pos:line="12758" pos:column="13">ULONG</name> <name pos:line="12758" pos:column="19">celtXtimesY</name><op:operator pos:line="12758" pos:column="30">,</op:operator>
            <name pos:line="12759" pos:column="13">DEBUGPROP_INFO_FLAGS</name> <name pos:line="12759" pos:column="34">dwFields</name><op:operator pos:line="12759" pos:column="42">,</op:operator>
            <name pos:line="12760" pos:column="13">DWORD</name> <name pos:line="12760" pos:column="19">dwRadix</name><op:operator pos:line="12760" pos:column="26">,</op:operator>
            <comment type="block" pos:line="12761" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="12761" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="12761" pos:column="67">(<argument pos:line="12761" pos:column="68">celtXtimesY</argument>, <argument pos:line="12761" pos:column="81">*pceltFetched</argument>)</argument_list></macro> <name pos:line="12761" pos:column="96">DEBUG_PROPERTY_INFO</name> <op:operator pos:line="12761" pos:column="116">*</op:operator><name pos:line="12761" pos:column="117">rgelt</name><op:operator pos:line="12761" pos:column="122">,</op:operator>
            <comment type="block" pos:line="12762" pos:column="13">/* [out] */</comment> <name pos:line="12762" pos:column="25">__RPC__out</name> <name pos:line="12762" pos:column="36">ULONG</name> <op:operator pos:line="12762" pos:column="42">*</op:operator><name pos:line="12762" pos:column="43">pceltFetched</name><op:operator pos:line="12762" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="12764" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12765" pos:column="7">IDebugDataGridVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12767" pos:column="5">interface</name></type> <name pos:line="12767" pos:column="15">IDebugDataGrid</name>
    <argument_list pos:line="12768" pos:column="5">{
        <argument><expr><name pos:line="12769" pos:column="9">CONST_VTBL</name> struct <name pos:line="12769" pos:column="27">IDebugDataGridVtbl</name> <op:operator pos:line="12769" pos:column="46">*</op:operator><name pos:line="12769" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12774" pos:column="1">#<cpp:directive pos:line="12774" pos:column="2">ifdef</cpp:directive> <name pos:line="12774" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12777" pos:column="1">#<cpp:directive pos:line="12777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12777" pos:column="9">IDebugDataGrid_QueryInterface</name><parameter_list pos:line="12777" pos:column="38">(<param><type><name pos:line="12777" pos:column="39">This</name></type></param>,<param><type><name pos:line="12777" pos:column="44">riid</name></type></param>,<param><type><name pos:line="12777" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12778" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12780" pos:column="1">#<cpp:directive pos:line="12780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12780" pos:column="9">IDebugDataGrid_AddRef</name><parameter_list pos:line="12780" pos:column="30">(<param><type><name pos:line="12780" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12781" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12783" pos:column="1">#<cpp:directive pos:line="12783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12783" pos:column="9">IDebugDataGrid_Release</name><parameter_list pos:line="12783" pos:column="31">(<param><type><name pos:line="12783" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12784" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12787" pos:column="1">#<cpp:directive pos:line="12787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12787" pos:column="9">IDebugDataGrid_GetGridInfo</name><parameter_list pos:line="12787" pos:column="35">(<param><type><name pos:line="12787" pos:column="36">This</name></type></param>,<param><type><name pos:line="12787" pos:column="41">pX</name></type></param>,<param><type><name pos:line="12787" pos:column="44">pY</name></type></param>,<param><type><name pos:line="12787" pos:column="47">bpstrTitle</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12788" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetGridInfo(This,pX,pY,bpstrTitle) )</cpp:value></cpp:define> 

<cpp:define pos:line="12790" pos:column="1">#<cpp:directive pos:line="12790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12790" pos:column="9">IDebugDataGrid_GetGridPropertyInfo</name><parameter_list pos:line="12790" pos:column="43">(<param><type><name pos:line="12790" pos:column="44">This</name></type></param>,<param><type><name pos:line="12790" pos:column="49">x</name></type></param>,<param><type><name pos:line="12790" pos:column="51">y</name></type></param>,<param><type><name pos:line="12790" pos:column="53">celtX</name></type></param>,<param><type><name pos:line="12790" pos:column="59">celtY</name></type></param>,<param><type><name pos:line="12790" pos:column="65">celtXtimesY</name></type></param>,<param><type><name pos:line="12790" pos:column="77">dwFields</name></type></param>,<param><type><name pos:line="12790" pos:column="86">dwRadix</name></type></param>,<param><type><name pos:line="12790" pos:column="94">rgelt</name></type></param>,<param><type><name pos:line="12790" pos:column="100">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12791" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetGridPropertyInfo(This,x,y,celtX,celtY,celtXtimesY,dwFields,dwRadix,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12793" pos:column="1">#<cpp:directive pos:line="12793" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12793" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12796" pos:column="1">#<cpp:directive pos:line="12796" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12796" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12801" pos:column="1">#<cpp:directive pos:line="12801" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12801" pos:column="9">/* __IDebugDataGrid_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12804" pos:column="1">#<cpp:directive pos:line="12804" pos:column="2">ifndef</cpp:directive> <name pos:line="12804" pos:column="9">__IDebugPropertySafetyWrapper_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12805" pos:column="1">#<cpp:directive pos:line="12805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12805" pos:column="9">__IDebugPropertySafetyWrapper_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12807" pos:column="1">/* interface IDebugPropertySafetyWrapper */</comment>
<comment type="block" pos:line="12808" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="12811" pos:column="1">EXTERN_C</name> <specifier pos:line="12811" pos:column="10">const</specifier> <name pos:line="12811" pos:column="16">IID</name></type> <name pos:line="12811" pos:column="20">IID_IDebugPropertySafetyWrapper</name></decl>;</decl_stmt>

<cpp:if pos:line="12813" pos:column="1">#<cpp:directive pos:line="12813" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12813" pos:column="5">defined</name><argument_list pos:line="12813" pos:column="12">(<argument><expr><name pos:line="12813" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12813" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12813" pos:column="29">!</op:operator><call><name pos:line="12813" pos:column="30">defined</name><argument_list pos:line="12813" pos:column="37">(<argument><expr><name pos:line="12813" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12815" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12815" pos:column="19">(<argument pos:line="12815" pos:column="20">"7031886B-61D2-4cb5-B909-00386090733B"</argument>)</argument_list></macro>
    <label><name pos:line="12816" pos:column="5">IDebugPropertySafetyWrapper</name> :</label> <expr_stmt><expr pos:line="12816" pos:column="35">public <name pos:line="12816" pos:column="42">IUnknown</name>
    <block pos:line="12817" pos:column="5">{
    <expr pos:line="12818" pos:column="5">public<op:operator pos:line="12818" pos:column="11">:</op:operator>
        virtual <name pos:line="12819" pos:column="17">HRESULT</name> <name pos:line="12819" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="12819" pos:column="43">BeforePropertyCall</name><argument_list pos:line="12819" pos:column="61">( <argument><expr><name pos:line="12819" pos:column="63">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="12819" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="12819" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="12821" pos:column="9">virtual <name pos:line="12821" pos:column="17">HRESULT</name> <name pos:line="12821" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="12821" pos:column="43">AfterPropertyCall</name><argument_list pos:line="12821" pos:column="60">( <argument><expr><name pos:line="12821" pos:column="62">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="12821" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="12821" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="12823" pos:column="9">virtual <name pos:line="12823" pos:column="17">HRESULT</name> <name pos:line="12823" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12823" pos:column="43">GetRawProperty</name><argument_list pos:line="12823" pos:column="57">( 
            <comment type="block" pos:line="12824" pos:column="13">/* [out] */</comment> <argument pos:line="12824" pos:column="25">__RPC__deref_out_opt IDebugProperty3 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="12824" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="12824" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12828" pos:column="1">#<cpp:directive pos:line="12828" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12828" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12830" pos:column="5">typedef <type><struct pos:line="12830" pos:column="13">struct <name pos:line="12830" pos:column="20">IDebugPropertySafetyWrapperVtbl</name>
    <block pos:line="12831" pos:column="5">{<public type="default" pos:line="12831" pos:column="6">
        <function_decl><type><name pos:line="12832" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12834" pos:column="9">HRESULT</name></type> ( <name pos:line="12834" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12834" pos:column="37">*</type:modifier><name pos:line="12834" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12834" pos:column="54">( 
            <param><decl><type><name pos:line="12835" pos:column="13">IDebugPropertySafetyWrapper</name> <type:modifier pos:line="12835" pos:column="41">*</type:modifier></type> <name pos:line="12835" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="12836" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12836" pos:column="24">__RPC__in</name> <name pos:line="12836" pos:column="34">REFIID</name></type> <name pos:line="12836" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12837" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12838" pos:column="13">__RPC__deref_out</name>  <name pos:line="12838" pos:column="31">void</name> <type:modifier pos:line="12838" pos:column="36">*</type:modifier><type:modifier pos:line="12838" pos:column="37">*</type:modifier></type><name pos:line="12838" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12840" pos:column="9">ULONG</name></type> ( <name pos:line="12840" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12840" pos:column="35">*</type:modifier><name pos:line="12840" pos:column="36">AddRef</name> )<parameter_list pos:line="12840" pos:column="44">( 
            <param><decl><type><name pos:line="12841" pos:column="13">IDebugPropertySafetyWrapper</name> <type:modifier pos:line="12841" pos:column="41">*</type:modifier></type> <name pos:line="12841" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12843" pos:column="9">ULONG</name></type> ( <name pos:line="12843" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12843" pos:column="35">*</type:modifier><name pos:line="12843" pos:column="36">Release</name> )<parameter_list pos:line="12843" pos:column="45">( 
            <param><decl><type><name pos:line="12844" pos:column="13">IDebugPropertySafetyWrapper</name> <type:modifier pos:line="12844" pos:column="41">*</type:modifier></type> <name pos:line="12844" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12846" pos:column="9">HRESULT</name></type> ( <name pos:line="12846" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12846" pos:column="37">*</type:modifier><name pos:line="12846" pos:column="38">BeforePropertyCall</name> )<parameter_list pos:line="12846" pos:column="58">( 
            <param><decl><type><name pos:line="12847" pos:column="13">IDebugPropertySafetyWrapper</name> <type:modifier pos:line="12847" pos:column="41">*</type:modifier></type> <name pos:line="12847" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12849" pos:column="9">HRESULT</name></type> ( <name pos:line="12849" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12849" pos:column="37">*</type:modifier><name pos:line="12849" pos:column="38">AfterPropertyCall</name> )<parameter_list pos:line="12849" pos:column="57">( 
            <param><decl><type><name pos:line="12850" pos:column="13">IDebugPropertySafetyWrapper</name> <type:modifier pos:line="12850" pos:column="41">*</type:modifier></type> <name pos:line="12850" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12852" pos:column="9">HRESULT</name></type> ( <name pos:line="12852" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12852" pos:column="37">*</type:modifier><name pos:line="12852" pos:column="38">GetRawProperty</name> )<parameter_list pos:line="12852" pos:column="54">( 
            <param><decl><type><name pos:line="12853" pos:column="13">IDebugPropertySafetyWrapper</name> <type:modifier pos:line="12853" pos:column="41">*</type:modifier></type> <name pos:line="12853" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="12854" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12854" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12854" pos:column="46">IDebugProperty3</name> <type:modifier pos:line="12854" pos:column="62">*</type:modifier><type:modifier pos:line="12854" pos:column="63">*</type:modifier></type><name pos:line="12854" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12856" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12857" pos:column="7">IDebugPropertySafetyWrapperVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12859" pos:column="5">interface</name></type> <name pos:line="12859" pos:column="15">IDebugPropertySafetyWrapper</name>
    <argument_list pos:line="12860" pos:column="5">{
        <argument><expr><name pos:line="12861" pos:column="9">CONST_VTBL</name> struct <name pos:line="12861" pos:column="27">IDebugPropertySafetyWrapperVtbl</name> <op:operator pos:line="12861" pos:column="59">*</op:operator><name pos:line="12861" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12866" pos:column="1">#<cpp:directive pos:line="12866" pos:column="2">ifdef</cpp:directive> <name pos:line="12866" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12869" pos:column="1">#<cpp:directive pos:line="12869" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12869" pos:column="9">IDebugPropertySafetyWrapper_QueryInterface</name><parameter_list pos:line="12869" pos:column="51">(<param><type><name pos:line="12869" pos:column="52">This</name></type></param>,<param><type><name pos:line="12869" pos:column="57">riid</name></type></param>,<param><type><name pos:line="12869" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12870" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12872" pos:column="1">#<cpp:directive pos:line="12872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12872" pos:column="9">IDebugPropertySafetyWrapper_AddRef</name><parameter_list pos:line="12872" pos:column="43">(<param><type><name pos:line="12872" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12873" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12875" pos:column="1">#<cpp:directive pos:line="12875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12875" pos:column="9">IDebugPropertySafetyWrapper_Release</name><parameter_list pos:line="12875" pos:column="44">(<param><type><name pos:line="12875" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12876" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12879" pos:column="1">#<cpp:directive pos:line="12879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12879" pos:column="9">IDebugPropertySafetyWrapper_BeforePropertyCall</name><parameter_list pos:line="12879" pos:column="55">(<param><type><name pos:line="12879" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12880" pos:column="5">( (This)-&gt;lpVtbl -&gt; BeforePropertyCall(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12882" pos:column="1">#<cpp:directive pos:line="12882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12882" pos:column="9">IDebugPropertySafetyWrapper_AfterPropertyCall</name><parameter_list pos:line="12882" pos:column="54">(<param><type><name pos:line="12882" pos:column="55">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12883" pos:column="5">( (This)-&gt;lpVtbl -&gt; AfterPropertyCall(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12885" pos:column="1">#<cpp:directive pos:line="12885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12885" pos:column="9">IDebugPropertySafetyWrapper_GetRawProperty</name><parameter_list pos:line="12885" pos:column="51">(<param><type><name pos:line="12885" pos:column="52">This</name></type></param>,<param><type><name pos:line="12885" pos:column="57">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12886" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRawProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12888" pos:column="1">#<cpp:directive pos:line="12888" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12888" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12891" pos:column="1">#<cpp:directive pos:line="12891" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12891" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12896" pos:column="1">#<cpp:directive pos:line="12896" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12896" pos:column="9">/* __IDebugPropertySafetyWrapper_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="12899" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0086 */</comment>
<comment type="block" pos:line="12900" pos:column="1">/* [local] */</comment> 


<enum pos:line="12903" pos:column="1">enum <name pos:line="12903" pos:column="6">enum_REFERENCE_TYPE</name>
    <block pos:line="12904" pos:column="5">{	<decl><name pos:line="12904" pos:column="9">REF_TYPE_WEAK</name>	<init pos:line="12904" pos:column="25">= <expr><lit:literal type="number" pos:line="12904" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="12904" pos:column="30">,</op:operator>
	<decl><name pos:line="12905" pos:column="9">REF_TYPE_STRONG</name>	<init pos:line="12905" pos:column="25">= <expr><lit:literal type="number" pos:line="12905" pos:column="27">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="12907" pos:column="1">typedef <type><name pos:line="12907" pos:column="9">DWORD</name></type> <name pos:line="12907" pos:column="15">REFERENCE_TYPE</name>;</typedef>


<enum pos:line="12910" pos:column="1">enum <name pos:line="12910" pos:column="6">enum_DEBUGREF_INFO_FLAGS</name>
    <block pos:line="12911" pos:column="5">{	<decl><name pos:line="12911" pos:column="9">DEBUGREF_INFO_NAME</name>	<init pos:line="12911" pos:column="33">= <expr><lit:literal type="number" pos:line="12911" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="12911" pos:column="38">,</op:operator>
	<decl><name pos:line="12912" pos:column="9">DEBUGREF_INFO_TYPE</name>	<init pos:line="12912" pos:column="33">= <expr><lit:literal type="number" pos:line="12912" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="12912" pos:column="38">,</op:operator>
	<decl><name pos:line="12913" pos:column="9">DEBUGREF_INFO_VALUE</name>	<init pos:line="12913" pos:column="33">= <expr><lit:literal type="number" pos:line="12913" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="12913" pos:column="38">,</op:operator>
	<decl><name pos:line="12914" pos:column="9">DEBUGREF_INFO_ATTRIB</name>	<init pos:line="12914" pos:column="33">= <expr><lit:literal type="number" pos:line="12914" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="12914" pos:column="38">,</op:operator>
	<decl><name pos:line="12915" pos:column="9">DEBUGREF_INFO_REFTYPE</name>	<init pos:line="12915" pos:column="33">= <expr><lit:literal type="number" pos:line="12915" pos:column="35">0x10</lit:literal></expr></init></decl><op:operator pos:line="12915" pos:column="39">,</op:operator>
	<decl><name pos:line="12916" pos:column="9">DEBUGREF_INFO_REF</name>	<init pos:line="12916" pos:column="33">= <expr><lit:literal type="number" pos:line="12916" pos:column="35">0x20</lit:literal></expr></init></decl><op:operator pos:line="12916" pos:column="39">,</op:operator>
	<decl><name pos:line="12917" pos:column="9">DEBUGREF_INFO_VALUE_AUTOEXPAND</name>	<init pos:line="12917" pos:column="41">= <expr><lit:literal type="number" pos:line="12917" pos:column="43">0x10000</lit:literal></expr></init></decl><op:operator pos:line="12917" pos:column="50">,</op:operator>
	<decl><name pos:line="12918" pos:column="9">DEBUGREF_INFO_NONE</name>	<init pos:line="12918" pos:column="33">= <expr><lit:literal type="number" pos:line="12918" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="12918" pos:column="36">,</op:operator>
	<decl><name pos:line="12919" pos:column="9">DEBUGREF_INFO_ALL</name>	<init pos:line="12919" pos:column="33">= <expr><lit:literal type="number" pos:line="12919" pos:column="35">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="12921" pos:column="1">typedef <type><name pos:line="12921" pos:column="9">DWORD</name></type> <name pos:line="12921" pos:column="15">DEBUGREF_INFO_FLAGS</name>;</typedef>

<typedef pos:line="12923" pos:column="1">typedef <type><struct pos:line="12923" pos:column="9">struct <name pos:line="12923" pos:column="16">tagDEBUG_REFERENCE_INFO</name>
    <block pos:line="12924" pos:column="5">{<public type="default" pos:line="12924" pos:column="6">
    <decl_stmt><decl><type><name pos:line="12925" pos:column="5">DEBUGREF_INFO_FLAGS</name></type> <name pos:line="12925" pos:column="25">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="12926" pos:column="5">BSTR</name></type> <name pos:line="12926" pos:column="10">bstrName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="12927" pos:column="5">BSTR</name></type> <name pos:line="12927" pos:column="10">bstrType</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="12928" pos:column="5">BSTR</name></type> <name pos:line="12928" pos:column="10">bstrValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="12929" pos:column="5">DBG_ATTRIB_FLAGS</name></type> <name pos:line="12929" pos:column="22">dwAttrib</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="12930" pos:column="5">REFERENCE_TYPE</name></type> <name pos:line="12930" pos:column="20">dwRefType</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="12931" pos:column="5">IDebugReference2</name> <type:modifier pos:line="12931" pos:column="22">*</type:modifier></type><name pos:line="12931" pos:column="23">pReference</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="12932" pos:column="9">DEBUG_REFERENCE_INFO</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="12936" pos:column="1">extern</specifier> <name pos:line="12936" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12936" pos:column="22">__MIDL_itf_msdbg_0000_0086_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12937" pos:column="1">extern</specifier> <name pos:line="12937" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="12937" pos:column="22">__MIDL_itf_msdbg_0000_0086_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="12939" pos:column="1">#<cpp:directive pos:line="12939" pos:column="2">ifndef</cpp:directive> <name pos:line="12939" pos:column="9">__IDebugReference2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12940" pos:column="1">#<cpp:directive pos:line="12940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12940" pos:column="9">__IDebugReference2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12942" pos:column="1">/* interface IDebugReference2 */</comment>
<comment type="block" pos:line="12943" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="12946" pos:column="1">enum <name pos:line="12946" pos:column="6">enum_REFERENCE_COMPARE</name>
    <block pos:line="12947" pos:column="5">{	<decl><name pos:line="12947" pos:column="9">REF_COMPARE_EQUAL</name>	<init pos:line="12947" pos:column="33">= <expr><lit:literal type="number" pos:line="12947" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="12947" pos:column="38">,</op:operator>
	<decl><name pos:line="12948" pos:column="9">REF_COMPARE_LESS_THAN</name>	<init pos:line="12948" pos:column="33">= <expr><lit:literal type="number" pos:line="12948" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="12948" pos:column="38">,</op:operator>
	<decl><name pos:line="12949" pos:column="9">REF_COMPARE_GREATER_THAN</name>	<init pos:line="12949" pos:column="41">= <expr><lit:literal type="number" pos:line="12949" pos:column="43">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="12951" pos:column="1">typedef <type><name pos:line="12951" pos:column="9">DWORD</name></type> <name pos:line="12951" pos:column="15">REFERENCE_COMPARE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="12954" pos:column="1">EXTERN_C</name> <specifier pos:line="12954" pos:column="10">const</specifier> <name pos:line="12954" pos:column="16">IID</name></type> <name pos:line="12954" pos:column="20">IID_IDebugReference2</name></decl>;</decl_stmt>

<cpp:if pos:line="12956" pos:column="1">#<cpp:directive pos:line="12956" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12956" pos:column="5">defined</name><argument_list pos:line="12956" pos:column="12">(<argument><expr><name pos:line="12956" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12956" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12956" pos:column="29">!</op:operator><call><name pos:line="12956" pos:column="30">defined</name><argument_list pos:line="12956" pos:column="37">(<argument><expr><name pos:line="12956" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12958" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12958" pos:column="19">(<argument pos:line="12958" pos:column="20">"10b793ac-0c47-4679-8454-adb36f29f802"</argument>)</argument_list></macro>
    <label><name pos:line="12959" pos:column="5">IDebugReference2</name> :</label> <expr_stmt><expr pos:line="12959" pos:column="24">public <name pos:line="12959" pos:column="31">IUnknown</name>
    <block pos:line="12960" pos:column="5">{
    <expr pos:line="12961" pos:column="5">public<op:operator pos:line="12961" pos:column="11">:</op:operator>
        virtual <name pos:line="12962" pos:column="17">HRESULT</name> <name pos:line="12962" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12962" pos:column="43">GetReferenceInfo</name><argument_list pos:line="12962" pos:column="59">( 
            <comment type="block" pos:line="12963" pos:column="13">/* [in] */</comment> <argument pos:line="12963" pos:column="24">DEBUGREF_INFO_FLAGS dwFields</argument>,
            <comment type="block" pos:line="12964" pos:column="13">/* [in] */</comment> <argument pos:line="12964" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="12965" pos:column="13">/* [in] */</comment> <argument pos:line="12965" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="12966" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="12966" pos:column="44">__RPC__in_ecount_part(dwArgCount, dwArgCount) IDebugReference2 **rgpArgs</argument>,
            <comment type="block" pos:line="12967" pos:column="13">/* [in] */</comment> <argument pos:line="12967" pos:column="24">DWORD dwArgCount</argument>,
            <comment type="block" pos:line="12968" pos:column="13">/* [out] */</comment> <argument pos:line="12968" pos:column="25">__RPC__out DEBUG_REFERENCE_INFO *pReferenceInfo</argument>)</argument_list></macro> <op:operator pos:line="12968" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="12968" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="12970" pos:column="9">virtual <name pos:line="12970" pos:column="17">HRESULT</name> <name pos:line="12970" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12970" pos:column="43">SetValueAsString</name><argument_list pos:line="12970" pos:column="59">( 
            <comment type="block" pos:line="12971" pos:column="13">/* [in] */</comment> <argument pos:line="12971" pos:column="24">__RPC__in LPCOLESTR pszValue</argument>,
            <comment type="block" pos:line="12972" pos:column="13">/* [in] */</comment> <argument pos:line="12972" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="12973" pos:column="13">/* [in] */</comment> <argument pos:line="12973" pos:column="24">DWORD dwTimeout</argument>)</argument_list></macro> <op:operator pos:line="12973" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="12973" pos:column="43">0</lit:literal></expr>;
        
        <expr pos:line="12975" pos:column="9">virtual <name pos:line="12975" pos:column="17">HRESULT</name> <name pos:line="12975" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12975" pos:column="43">SetValueAsReference</name><argument_list pos:line="12975" pos:column="62">( 
            <comment type="block" pos:line="12976" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="12976" pos:column="44">__RPC__in_ecount_part(dwArgCount, dwArgCount) IDebugReference2 **rgpArgs</argument>,
            <comment type="block" pos:line="12977" pos:column="13">/* [in] */</comment> <argument pos:line="12977" pos:column="24">DWORD dwArgCount</argument>,
            <comment type="block" pos:line="12978" pos:column="13">/* [in] */</comment> <argument pos:line="12978" pos:column="24">__RPC__in_opt IDebugReference2 *pValue</argument>,
            <comment type="block" pos:line="12979" pos:column="13">/* [in] */</comment> <argument pos:line="12979" pos:column="24">DWORD dwTimeout</argument>)</argument_list></macro> <op:operator pos:line="12979" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="12979" pos:column="43">0</lit:literal></expr>;
        
        <expr pos:line="12981" pos:column="9">virtual <name pos:line="12981" pos:column="17">HRESULT</name> <name pos:line="12981" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12981" pos:column="43">EnumChildren</name><argument_list pos:line="12981" pos:column="55">( 
            <comment type="block" pos:line="12982" pos:column="13">/* [in] */</comment> <argument pos:line="12982" pos:column="24">DEBUGREF_INFO_FLAGS dwFields</argument>,
            <comment type="block" pos:line="12983" pos:column="13">/* [in] */</comment> <argument pos:line="12983" pos:column="24">DWORD dwRadix</argument>,
            <comment type="block" pos:line="12984" pos:column="13">/* [in] */</comment> <argument pos:line="12984" pos:column="24">DBG_ATTRIB_FLAGS dwAttribFilter</argument>,
            <comment type="block" pos:line="12985" pos:column="13">/* [full][in] */</comment> <argument pos:line="12985" pos:column="30">__RPC__in_opt LPCOLESTR pszNameFilter</argument>,
            <comment type="block" pos:line="12986" pos:column="13">/* [in] */</comment> <argument pos:line="12986" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="12987" pos:column="13">/* [out] */</comment> <argument pos:line="12987" pos:column="25">__RPC__deref_out_opt IEnumDebugReferenceInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="12987" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="12987" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="12989" pos:column="9">virtual <name pos:line="12989" pos:column="17">HRESULT</name> <name pos:line="12989" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12989" pos:column="43">GetParent</name><argument_list pos:line="12989" pos:column="52">( 
            <comment type="block" pos:line="12990" pos:column="13">/* [out] */</comment> <argument pos:line="12990" pos:column="25">__RPC__deref_out_opt IDebugReference2 **ppParent</argument>)</argument_list></macro> <op:operator pos:line="12990" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="12990" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="12992" pos:column="9">virtual <name pos:line="12992" pos:column="17">HRESULT</name> <name pos:line="12992" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12992" pos:column="43">GetDerivedMostReference</name><argument_list pos:line="12992" pos:column="66">( 
            <comment type="block" pos:line="12993" pos:column="13">/* [out] */</comment> <argument pos:line="12993" pos:column="25">__RPC__deref_out_opt IDebugReference2 **ppDerivedMost</argument>)</argument_list></macro> <op:operator pos:line="12993" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="12993" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="12995" pos:column="9">virtual <name pos:line="12995" pos:column="17">HRESULT</name> <name pos:line="12995" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12995" pos:column="43">GetMemoryBytes</name><argument_list pos:line="12995" pos:column="57">( 
            <comment type="block" pos:line="12996" pos:column="13">/* [out] */</comment> <argument pos:line="12996" pos:column="25">__RPC__deref_out_opt IDebugMemoryBytes2 **ppMemoryBytes</argument>)</argument_list></macro> <op:operator pos:line="12996" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="12996" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="12998" pos:column="9">virtual <name pos:line="12998" pos:column="17">HRESULT</name> <name pos:line="12998" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="12998" pos:column="43">GetMemoryContext</name><argument_list pos:line="12998" pos:column="59">( 
            <comment type="block" pos:line="12999" pos:column="13">/* [out] */</comment> <argument pos:line="12999" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemory</argument>)</argument_list></macro> <op:operator pos:line="12999" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="12999" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="13001" pos:column="9">virtual <name pos:line="13001" pos:column="17">HRESULT</name> <name pos:line="13001" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13001" pos:column="43">GetSize</name><argument_list pos:line="13001" pos:column="50">( 
            <comment type="block" pos:line="13002" pos:column="13">/* [out] */</comment> <argument pos:line="13002" pos:column="25">__RPC__out DWORD *pdwSize</argument>)</argument_list></macro> <op:operator pos:line="13002" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="13002" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="13004" pos:column="9">virtual <name pos:line="13004" pos:column="17">HRESULT</name> <name pos:line="13004" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13004" pos:column="43">SetReferenceType</name><argument_list pos:line="13004" pos:column="59">( 
            <comment type="block" pos:line="13005" pos:column="13">/* [in] */</comment> <argument pos:line="13005" pos:column="24">REFERENCE_TYPE dwRefType</argument>)</argument_list></macro> <op:operator pos:line="13005" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="13005" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="13007" pos:column="9">virtual <name pos:line="13007" pos:column="17">HRESULT</name> <name pos:line="13007" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13007" pos:column="43">Compare</name><argument_list pos:line="13007" pos:column="50">( 
            <comment type="block" pos:line="13008" pos:column="13">/* [in] */</comment> <argument pos:line="13008" pos:column="24">REFERENCE_COMPARE dwCompare</argument>,
            <comment type="block" pos:line="13009" pos:column="13">/* [in] */</comment> <argument pos:line="13009" pos:column="24">__RPC__in_opt IDebugReference2 *pReference</argument>)</argument_list></macro> <op:operator pos:line="13009" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="13009" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13013" pos:column="1">#<cpp:directive pos:line="13013" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13013" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13015" pos:column="5">typedef <type><struct pos:line="13015" pos:column="13">struct <name pos:line="13015" pos:column="20">IDebugReference2Vtbl</name>
    <block pos:line="13016" pos:column="5">{<public type="default" pos:line="13016" pos:column="6">
        <function_decl><type><name pos:line="13017" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13019" pos:column="9">HRESULT</name></type> ( <name pos:line="13019" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13019" pos:column="37">*</type:modifier><name pos:line="13019" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13019" pos:column="54">( 
            <param><decl><type><name pos:line="13020" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13020" pos:column="30">*</type:modifier></type> <name pos:line="13020" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13021" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13021" pos:column="24">__RPC__in</name> <name pos:line="13021" pos:column="34">REFIID</name></type> <name pos:line="13021" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13022" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13023" pos:column="13">__RPC__deref_out</name>  <name pos:line="13023" pos:column="31">void</name> <type:modifier pos:line="13023" pos:column="36">*</type:modifier><type:modifier pos:line="13023" pos:column="37">*</type:modifier></type><name pos:line="13023" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13025" pos:column="9">ULONG</name></type> ( <name pos:line="13025" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13025" pos:column="35">*</type:modifier><name pos:line="13025" pos:column="36">AddRef</name> )<parameter_list pos:line="13025" pos:column="44">( 
            <param><decl><type><name pos:line="13026" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13026" pos:column="30">*</type:modifier></type> <name pos:line="13026" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13028" pos:column="9">ULONG</name></type> ( <name pos:line="13028" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13028" pos:column="35">*</type:modifier><name pos:line="13028" pos:column="36">Release</name> )<parameter_list pos:line="13028" pos:column="45">( 
            <param><decl><type><name pos:line="13029" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13029" pos:column="30">*</type:modifier></type> <name pos:line="13029" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13031" pos:column="9">HRESULT</name> <argument_list pos:line="13031" pos:column="17">( <argument pos:line="13031" pos:column="19">STDMETHODCALLTYPE *GetReferenceInfo</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13031" pos:column="56">(</op:operator> 
            <name pos:line="13032" pos:column="13">IDebugReference2</name> <op:operator pos:line="13032" pos:column="30">*</op:operator> <name pos:line="13032" pos:column="32">This</name><op:operator pos:line="13032" pos:column="36">,</op:operator>
            <comment type="block" pos:line="13033" pos:column="13">/* [in] */</comment> <name pos:line="13033" pos:column="24">DEBUGREF_INFO_FLAGS</name> <name pos:line="13033" pos:column="44">dwFields</name><op:operator pos:line="13033" pos:column="52">,</op:operator>
            <comment type="block" pos:line="13034" pos:column="13">/* [in] */</comment> <name pos:line="13034" pos:column="24">DWORD</name> <name pos:line="13034" pos:column="30">dwRadix</name><op:operator pos:line="13034" pos:column="37">,</op:operator>
            <comment type="block" pos:line="13035" pos:column="13">/* [in] */</comment> <name pos:line="13035" pos:column="24">DWORD</name> <name pos:line="13035" pos:column="30">dwTimeout</name><op:operator pos:line="13035" pos:column="39">,</op:operator>
            <comment type="block" pos:line="13036" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="13036" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="13036" pos:column="65">(<argument pos:line="13036" pos:column="66">dwArgCount</argument>, <argument pos:line="13036" pos:column="78">dwArgCount</argument>)</argument_list></macro> <name pos:line="13036" pos:column="90">IDebugReference2</name> <op:operator pos:line="13036" pos:column="107">*</op:operator><op:operator pos:line="13036" pos:column="108">*</op:operator><name pos:line="13036" pos:column="109">rgpArgs</name><op:operator pos:line="13036" pos:column="116">,</op:operator>
            <comment type="block" pos:line="13037" pos:column="13">/* [in] */</comment> <name pos:line="13037" pos:column="24">DWORD</name> <name pos:line="13037" pos:column="30">dwArgCount</name><op:operator pos:line="13037" pos:column="40">,</op:operator>
            <comment type="block" pos:line="13038" pos:column="13">/* [out] */</comment> <name pos:line="13038" pos:column="25">__RPC__out</name> <name pos:line="13038" pos:column="36">DEBUG_REFERENCE_INFO</name> <op:operator pos:line="13038" pos:column="57">*</op:operator><name pos:line="13038" pos:column="58">pReferenceInfo</name><op:operator pos:line="13038" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="13040" pos:column="9">HRESULT</name></type> ( <name pos:line="13040" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13040" pos:column="37">*</type:modifier><name pos:line="13040" pos:column="38">SetValueAsString</name> )<parameter_list pos:line="13040" pos:column="56">( 
            <param><decl><type><name pos:line="13041" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13041" pos:column="30">*</type:modifier></type> <name pos:line="13041" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13042" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13042" pos:column="24">__RPC__in</name> <name pos:line="13042" pos:column="34">LPCOLESTR</name></type> <name pos:line="13042" pos:column="44">pszValue</name></decl></param>,
            <comment type="block" pos:line="13043" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13043" pos:column="24">DWORD</name></type> <name pos:line="13043" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="13044" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13044" pos:column="24">DWORD</name></type> <name pos:line="13044" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13046" pos:column="9">HRESULT</name> <argument_list pos:line="13046" pos:column="17">( <argument pos:line="13046" pos:column="19">STDMETHODCALLTYPE *SetValueAsReference</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13046" pos:column="59">(</op:operator> 
            <name pos:line="13047" pos:column="13">IDebugReference2</name> <op:operator pos:line="13047" pos:column="30">*</op:operator> <name pos:line="13047" pos:column="32">This</name><op:operator pos:line="13047" pos:column="36">,</op:operator>
            <comment type="block" pos:line="13048" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="13048" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="13048" pos:column="65">(<argument pos:line="13048" pos:column="66">dwArgCount</argument>, <argument pos:line="13048" pos:column="78">dwArgCount</argument>)</argument_list></macro> <name pos:line="13048" pos:column="90">IDebugReference2</name> <op:operator pos:line="13048" pos:column="107">*</op:operator><op:operator pos:line="13048" pos:column="108">*</op:operator><name pos:line="13048" pos:column="109">rgpArgs</name><op:operator pos:line="13048" pos:column="116">,</op:operator>
            <comment type="block" pos:line="13049" pos:column="13">/* [in] */</comment> <name pos:line="13049" pos:column="24">DWORD</name> <name pos:line="13049" pos:column="30">dwArgCount</name><op:operator pos:line="13049" pos:column="40">,</op:operator>
            <comment type="block" pos:line="13050" pos:column="13">/* [in] */</comment> <name pos:line="13050" pos:column="24">__RPC__in_opt</name> <name pos:line="13050" pos:column="38">IDebugReference2</name> <op:operator pos:line="13050" pos:column="55">*</op:operator><name pos:line="13050" pos:column="56">pValue</name><op:operator pos:line="13050" pos:column="62">,</op:operator>
            <comment type="block" pos:line="13051" pos:column="13">/* [in] */</comment> <name pos:line="13051" pos:column="24">DWORD</name> <name pos:line="13051" pos:column="30">dwTimeout</name><op:operator pos:line="13051" pos:column="39">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="13053" pos:column="9">HRESULT</name></type> ( <name pos:line="13053" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13053" pos:column="37">*</type:modifier><name pos:line="13053" pos:column="38">EnumChildren</name> )<parameter_list pos:line="13053" pos:column="52">( 
            <param><decl><type><name pos:line="13054" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13054" pos:column="30">*</type:modifier></type> <name pos:line="13054" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13055" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13055" pos:column="24">DEBUGREF_INFO_FLAGS</name></type> <name pos:line="13055" pos:column="44">dwFields</name></decl></param>,
            <comment type="block" pos:line="13056" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13056" pos:column="24">DWORD</name></type> <name pos:line="13056" pos:column="30">dwRadix</name></decl></param>,
            <comment type="block" pos:line="13057" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13057" pos:column="24">DBG_ATTRIB_FLAGS</name></type> <name pos:line="13057" pos:column="41">dwAttribFilter</name></decl></param>,
            <comment type="block" pos:line="13058" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="13058" pos:column="30">__RPC__in_opt</name> <name pos:line="13058" pos:column="44">LPCOLESTR</name></type> <name pos:line="13058" pos:column="54">pszNameFilter</name></decl></param>,
            <comment type="block" pos:line="13059" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13059" pos:column="24">DWORD</name></type> <name pos:line="13059" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="13060" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13060" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13060" pos:column="46">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="13060" pos:column="71">*</type:modifier><type:modifier pos:line="13060" pos:column="72">*</type:modifier></type><name pos:line="13060" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13062" pos:column="9">HRESULT</name></type> ( <name pos:line="13062" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13062" pos:column="37">*</type:modifier><name pos:line="13062" pos:column="38">GetParent</name> )<parameter_list pos:line="13062" pos:column="49">( 
            <param><decl><type><name pos:line="13063" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13063" pos:column="30">*</type:modifier></type> <name pos:line="13063" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13064" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13064" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13064" pos:column="46">IDebugReference2</name> <type:modifier pos:line="13064" pos:column="63">*</type:modifier><type:modifier pos:line="13064" pos:column="64">*</type:modifier></type><name pos:line="13064" pos:column="65">ppParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13066" pos:column="9">HRESULT</name></type> ( <name pos:line="13066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13066" pos:column="37">*</type:modifier><name pos:line="13066" pos:column="38">GetDerivedMostReference</name> )<parameter_list pos:line="13066" pos:column="63">( 
            <param><decl><type><name pos:line="13067" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13067" pos:column="30">*</type:modifier></type> <name pos:line="13067" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13068" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13068" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13068" pos:column="46">IDebugReference2</name> <type:modifier pos:line="13068" pos:column="63">*</type:modifier><type:modifier pos:line="13068" pos:column="64">*</type:modifier></type><name pos:line="13068" pos:column="65">ppDerivedMost</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13070" pos:column="9">HRESULT</name></type> ( <name pos:line="13070" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13070" pos:column="37">*</type:modifier><name pos:line="13070" pos:column="38">GetMemoryBytes</name> )<parameter_list pos:line="13070" pos:column="54">( 
            <param><decl><type><name pos:line="13071" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13071" pos:column="30">*</type:modifier></type> <name pos:line="13071" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13072" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13072" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13072" pos:column="46">IDebugMemoryBytes2</name> <type:modifier pos:line="13072" pos:column="65">*</type:modifier><type:modifier pos:line="13072" pos:column="66">*</type:modifier></type><name pos:line="13072" pos:column="67">ppMemoryBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13074" pos:column="9">HRESULT</name></type> ( <name pos:line="13074" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13074" pos:column="37">*</type:modifier><name pos:line="13074" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="13074" pos:column="56">( 
            <param><decl><type><name pos:line="13075" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13075" pos:column="30">*</type:modifier></type> <name pos:line="13075" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13076" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13076" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13076" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13076" pos:column="67">*</type:modifier><type:modifier pos:line="13076" pos:column="68">*</type:modifier></type><name pos:line="13076" pos:column="69">ppMemory</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13078" pos:column="9">HRESULT</name></type> ( <name pos:line="13078" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13078" pos:column="37">*</type:modifier><name pos:line="13078" pos:column="38">GetSize</name> )<parameter_list pos:line="13078" pos:column="47">( 
            <param><decl><type><name pos:line="13079" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13079" pos:column="30">*</type:modifier></type> <name pos:line="13079" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13080" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13080" pos:column="25">__RPC__out</name> <name pos:line="13080" pos:column="36">DWORD</name> <type:modifier pos:line="13080" pos:column="42">*</type:modifier></type><name pos:line="13080" pos:column="43">pdwSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13082" pos:column="9">HRESULT</name></type> ( <name pos:line="13082" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13082" pos:column="37">*</type:modifier><name pos:line="13082" pos:column="38">SetReferenceType</name> )<parameter_list pos:line="13082" pos:column="56">( 
            <param><decl><type><name pos:line="13083" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13083" pos:column="30">*</type:modifier></type> <name pos:line="13083" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13084" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13084" pos:column="24">REFERENCE_TYPE</name></type> <name pos:line="13084" pos:column="39">dwRefType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13086" pos:column="9">HRESULT</name></type> ( <name pos:line="13086" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13086" pos:column="37">*</type:modifier><name pos:line="13086" pos:column="38">Compare</name> )<parameter_list pos:line="13086" pos:column="47">( 
            <param><decl><type><name pos:line="13087" pos:column="13">IDebugReference2</name> <type:modifier pos:line="13087" pos:column="30">*</type:modifier></type> <name pos:line="13087" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="13088" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13088" pos:column="24">REFERENCE_COMPARE</name></type> <name pos:line="13088" pos:column="42">dwCompare</name></decl></param>,
            <comment type="block" pos:line="13089" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13089" pos:column="24">__RPC__in_opt</name> <name pos:line="13089" pos:column="38">IDebugReference2</name> <type:modifier pos:line="13089" pos:column="55">*</type:modifier></type><name pos:line="13089" pos:column="56">pReference</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13091" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13092" pos:column="7">IDebugReference2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13094" pos:column="5">interface</name></type> <name pos:line="13094" pos:column="15">IDebugReference2</name>
    <argument_list pos:line="13095" pos:column="5">{
        <argument><expr><name pos:line="13096" pos:column="9">CONST_VTBL</name> struct <name pos:line="13096" pos:column="27">IDebugReference2Vtbl</name> <op:operator pos:line="13096" pos:column="48">*</op:operator><name pos:line="13096" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13101" pos:column="1">#<cpp:directive pos:line="13101" pos:column="2">ifdef</cpp:directive> <name pos:line="13101" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13104" pos:column="1">#<cpp:directive pos:line="13104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13104" pos:column="9">IDebugReference2_QueryInterface</name><parameter_list pos:line="13104" pos:column="40">(<param><type><name pos:line="13104" pos:column="41">This</name></type></param>,<param><type><name pos:line="13104" pos:column="46">riid</name></type></param>,<param><type><name pos:line="13104" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13105" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13107" pos:column="1">#<cpp:directive pos:line="13107" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13107" pos:column="9">IDebugReference2_AddRef</name><parameter_list pos:line="13107" pos:column="32">(<param><type><name pos:line="13107" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13108" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13110" pos:column="1">#<cpp:directive pos:line="13110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13110" pos:column="9">IDebugReference2_Release</name><parameter_list pos:line="13110" pos:column="33">(<param><type><name pos:line="13110" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13111" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13114" pos:column="1">#<cpp:directive pos:line="13114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13114" pos:column="9">IDebugReference2_GetReferenceInfo</name><parameter_list pos:line="13114" pos:column="42">(<param><type><name pos:line="13114" pos:column="43">This</name></type></param>,<param><type><name pos:line="13114" pos:column="48">dwFields</name></type></param>,<param><type><name pos:line="13114" pos:column="57">dwRadix</name></type></param>,<param><type><name pos:line="13114" pos:column="65">dwTimeout</name></type></param>,<param><type><name pos:line="13114" pos:column="75">rgpArgs</name></type></param>,<param><type><name pos:line="13114" pos:column="83">dwArgCount</name></type></param>,<param><type><name pos:line="13114" pos:column="94">pReferenceInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13115" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReferenceInfo(This,dwFields,dwRadix,dwTimeout,rgpArgs,dwArgCount,pReferenceInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13117" pos:column="1">#<cpp:directive pos:line="13117" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13117" pos:column="9">IDebugReference2_SetValueAsString</name><parameter_list pos:line="13117" pos:column="42">(<param><type><name pos:line="13117" pos:column="43">This</name></type></param>,<param><type><name pos:line="13117" pos:column="48">pszValue</name></type></param>,<param><type><name pos:line="13117" pos:column="57">dwRadix</name></type></param>,<param><type><name pos:line="13117" pos:column="65">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13118" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsString(This,pszValue,dwRadix,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="13120" pos:column="1">#<cpp:directive pos:line="13120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13120" pos:column="9">IDebugReference2_SetValueAsReference</name><parameter_list pos:line="13120" pos:column="45">(<param><type><name pos:line="13120" pos:column="46">This</name></type></param>,<param><type><name pos:line="13120" pos:column="51">rgpArgs</name></type></param>,<param><type><name pos:line="13120" pos:column="59">dwArgCount</name></type></param>,<param><type><name pos:line="13120" pos:column="70">pValue</name></type></param>,<param><type><name pos:line="13120" pos:column="77">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13121" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValueAsReference(This,rgpArgs,dwArgCount,pValue,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="13123" pos:column="1">#<cpp:directive pos:line="13123" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13123" pos:column="9">IDebugReference2_EnumChildren</name><parameter_list pos:line="13123" pos:column="38">(<param><type><name pos:line="13123" pos:column="39">This</name></type></param>,<param><type><name pos:line="13123" pos:column="44">dwFields</name></type></param>,<param><type><name pos:line="13123" pos:column="53">dwRadix</name></type></param>,<param><type><name pos:line="13123" pos:column="61">dwAttribFilter</name></type></param>,<param><type><name pos:line="13123" pos:column="76">pszNameFilter</name></type></param>,<param><type><name pos:line="13123" pos:column="90">dwTimeout</name></type></param>,<param><type><name pos:line="13123" pos:column="100">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13124" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumChildren(This,dwFields,dwRadix,dwAttribFilter,pszNameFilter,dwTimeout,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="13126" pos:column="1">#<cpp:directive pos:line="13126" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13126" pos:column="9">IDebugReference2_GetParent</name><parameter_list pos:line="13126" pos:column="35">(<param><type><name pos:line="13126" pos:column="36">This</name></type></param>,<param><type><name pos:line="13126" pos:column="41">ppParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13127" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetParent(This,ppParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="13129" pos:column="1">#<cpp:directive pos:line="13129" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13129" pos:column="9">IDebugReference2_GetDerivedMostReference</name><parameter_list pos:line="13129" pos:column="49">(<param><type><name pos:line="13129" pos:column="50">This</name></type></param>,<param><type><name pos:line="13129" pos:column="55">ppDerivedMost</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13130" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDerivedMostReference(This,ppDerivedMost) )</cpp:value></cpp:define> 

<cpp:define pos:line="13132" pos:column="1">#<cpp:directive pos:line="13132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13132" pos:column="9">IDebugReference2_GetMemoryBytes</name><parameter_list pos:line="13132" pos:column="40">(<param><type><name pos:line="13132" pos:column="41">This</name></type></param>,<param><type><name pos:line="13132" pos:column="46">ppMemoryBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13133" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryBytes(This,ppMemoryBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="13135" pos:column="1">#<cpp:directive pos:line="13135" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13135" pos:column="9">IDebugReference2_GetMemoryContext</name><parameter_list pos:line="13135" pos:column="42">(<param><type><name pos:line="13135" pos:column="43">This</name></type></param>,<param><type><name pos:line="13135" pos:column="48">ppMemory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13136" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,ppMemory) )</cpp:value></cpp:define> 

<cpp:define pos:line="13138" pos:column="1">#<cpp:directive pos:line="13138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13138" pos:column="9">IDebugReference2_GetSize</name><parameter_list pos:line="13138" pos:column="33">(<param><type><name pos:line="13138" pos:column="34">This</name></type></param>,<param><type><name pos:line="13138" pos:column="39">pdwSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13139" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pdwSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="13141" pos:column="1">#<cpp:directive pos:line="13141" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13141" pos:column="9">IDebugReference2_SetReferenceType</name><parameter_list pos:line="13141" pos:column="42">(<param><type><name pos:line="13141" pos:column="43">This</name></type></param>,<param><type><name pos:line="13141" pos:column="48">dwRefType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13142" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceType(This,dwRefType) )</cpp:value></cpp:define> 

<cpp:define pos:line="13144" pos:column="1">#<cpp:directive pos:line="13144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13144" pos:column="9">IDebugReference2_Compare</name><parameter_list pos:line="13144" pos:column="33">(<param><type><name pos:line="13144" pos:column="34">This</name></type></param>,<param><type><name pos:line="13144" pos:column="39">dwCompare</name></type></param>,<param><type><name pos:line="13144" pos:column="49">pReference</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13145" pos:column="5">( (This)-&gt;lpVtbl -&gt; Compare(This,dwCompare,pReference) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13147" pos:column="1">#<cpp:directive pos:line="13147" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13147" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13150" pos:column="1">#<cpp:directive pos:line="13150" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13150" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13155" pos:column="1">#<cpp:directive pos:line="13155" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13155" pos:column="9">/* __IDebugReference2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13158" pos:column="1">#<cpp:directive pos:line="13158" pos:column="2">ifndef</cpp:directive> <name pos:line="13158" pos:column="9">__IDebugStackFrame2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13159" pos:column="1">#<cpp:directive pos:line="13159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13159" pos:column="9">__IDebugStackFrame2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13161" pos:column="1">/* interface IDebugStackFrame2 */</comment>
<comment type="block" pos:line="13162" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="13165" pos:column="1">EXTERN_C</name> <specifier pos:line="13165" pos:column="10">const</specifier> <name pos:line="13165" pos:column="16">IID</name></type> <name pos:line="13165" pos:column="20">IID_IDebugStackFrame2</name></decl>;</decl_stmt>

<cpp:if pos:line="13167" pos:column="1">#<cpp:directive pos:line="13167" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13167" pos:column="5">defined</name><argument_list pos:line="13167" pos:column="12">(<argument><expr><name pos:line="13167" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13167" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13167" pos:column="29">!</op:operator><call><name pos:line="13167" pos:column="30">defined</name><argument_list pos:line="13167" pos:column="37">(<argument><expr><name pos:line="13167" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13169" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13169" pos:column="19">(<argument pos:line="13169" pos:column="20">"1412926f-5dd6-4e58-b648-e1c63e013d51"</argument>)</argument_list></macro>
    <label><name pos:line="13170" pos:column="5">IDebugStackFrame2</name> :</label> <expr_stmt><expr pos:line="13170" pos:column="25">public <name pos:line="13170" pos:column="32">IUnknown</name>
    <block pos:line="13171" pos:column="5">{
    <expr pos:line="13172" pos:column="5">public<op:operator pos:line="13172" pos:column="11">:</op:operator>
        virtual <name pos:line="13173" pos:column="17">HRESULT</name> <name pos:line="13173" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13173" pos:column="43">GetCodeContext</name><argument_list pos:line="13173" pos:column="57">( 
            <comment type="block" pos:line="13174" pos:column="13">/* [out] */</comment> <argument pos:line="13174" pos:column="25">__RPC__deref_out_opt IDebugCodeContext2 **ppCodeCxt</argument>)</argument_list></macro> <op:operator pos:line="13174" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="13174" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="13176" pos:column="9">virtual <name pos:line="13176" pos:column="17">HRESULT</name> <name pos:line="13176" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13176" pos:column="43">GetDocumentContext</name><argument_list pos:line="13176" pos:column="61">( 
            <comment type="block" pos:line="13177" pos:column="13">/* [out] */</comment> <argument pos:line="13177" pos:column="25">__RPC__deref_out_opt IDebugDocumentContext2 **ppCxt</argument>)</argument_list></macro> <op:operator pos:line="13177" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="13177" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="13179" pos:column="9">virtual <name pos:line="13179" pos:column="17">HRESULT</name> <name pos:line="13179" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13179" pos:column="43">GetName</name><argument_list pos:line="13179" pos:column="50">( 
            <comment type="block" pos:line="13180" pos:column="13">/* [out] */</comment> <argument pos:line="13180" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="13180" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="13180" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="13182" pos:column="9">virtual <name pos:line="13182" pos:column="17">HRESULT</name> <name pos:line="13182" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13182" pos:column="43">GetInfo</name><argument_list pos:line="13182" pos:column="50">( 
            <comment type="block" pos:line="13183" pos:column="13">/* [in] */</comment> <argument pos:line="13183" pos:column="24">FRAMEINFO_FLAGS dwFieldSpec</argument>,
            <comment type="block" pos:line="13184" pos:column="13">/* [in] */</comment> <argument pos:line="13184" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="13185" pos:column="13">/* [out] */</comment> <argument pos:line="13185" pos:column="25">__RPC__out FRAMEINFO *pFrameInfo</argument>)</argument_list></macro> <op:operator pos:line="13185" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="13185" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="13187" pos:column="9">virtual <name pos:line="13187" pos:column="17">HRESULT</name> <name pos:line="13187" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13187" pos:column="43">GetPhysicalStackRange</name><argument_list pos:line="13187" pos:column="64">( 
            <comment type="block" pos:line="13188" pos:column="13">/* [out] */</comment> <argument pos:line="13188" pos:column="25">__RPC__out UINT64 *paddrMin</argument>,
            <comment type="block" pos:line="13189" pos:column="13">/* [out] */</comment> <argument pos:line="13189" pos:column="25">__RPC__out UINT64 *paddrMax</argument>)</argument_list></macro> <op:operator pos:line="13189" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="13189" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="13191" pos:column="9">virtual <name pos:line="13191" pos:column="17">HRESULT</name> <name pos:line="13191" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13191" pos:column="43">GetExpressionContext</name><argument_list pos:line="13191" pos:column="63">( 
            <comment type="block" pos:line="13192" pos:column="13">/* [out] */</comment> <argument pos:line="13192" pos:column="25">__RPC__deref_out_opt IDebugExpressionContext2 **ppExprCxt</argument>)</argument_list></macro> <op:operator pos:line="13192" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="13192" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="13194" pos:column="9">virtual <name pos:line="13194" pos:column="17">HRESULT</name> <name pos:line="13194" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13194" pos:column="43">GetLanguageInfo</name><argument_list pos:line="13194" pos:column="58">( 
            <comment type="block" pos:line="13195" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="13195" pos:column="35">__RPC__deref_opt_inout_opt BSTR *pbstrLanguage</argument>,
            <comment type="block" pos:line="13196" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="13196" pos:column="35">__RPC__inout_opt GUID *pguidLanguage</argument>)</argument_list></macro> <op:operator pos:line="13196" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="13196" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="13198" pos:column="9">virtual <name pos:line="13198" pos:column="17">HRESULT</name> <name pos:line="13198" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13198" pos:column="43">GetDebugProperty</name><argument_list pos:line="13198" pos:column="59">( 
            <comment type="block" pos:line="13199" pos:column="13">/* [out] */</comment> <argument pos:line="13199" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="13199" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="13199" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="13201" pos:column="9">virtual <name pos:line="13201" pos:column="17">HRESULT</name> <name pos:line="13201" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13201" pos:column="43">EnumProperties</name><argument_list pos:line="13201" pos:column="57">( 
            <comment type="block" pos:line="13202" pos:column="13">/* [in] */</comment> <argument pos:line="13202" pos:column="24">DEBUGPROP_INFO_FLAGS dwFields</argument>,
            <comment type="block" pos:line="13203" pos:column="13">/* [in] */</comment> <argument pos:line="13203" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="13204" pos:column="13">/* [in] */</comment> <argument pos:line="13204" pos:column="24">__RPC__in REFGUID guidFilter</argument>,
            <comment type="block" pos:line="13205" pos:column="13">/* [in] */</comment> <argument pos:line="13205" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="13206" pos:column="13">/* [out] */</comment> <argument pos:line="13206" pos:column="25">__RPC__out ULONG *pcelt</argument>,
            <comment type="block" pos:line="13207" pos:column="13">/* [out] */</comment> <argument pos:line="13207" pos:column="25">__RPC__deref_out_opt IEnumDebugPropertyInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="13207" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="13207" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="13209" pos:column="9">virtual <name pos:line="13209" pos:column="17">HRESULT</name> <name pos:line="13209" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13209" pos:column="43">GetThread</name><argument_list pos:line="13209" pos:column="52">( 
            <comment type="block" pos:line="13210" pos:column="13">/* [out] */</comment> <argument pos:line="13210" pos:column="25">__RPC__deref_out_opt IDebugThread2 **ppThread</argument>)</argument_list></macro> <op:operator pos:line="13210" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="13210" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13214" pos:column="1">#<cpp:directive pos:line="13214" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13214" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13216" pos:column="5">typedef <type><struct pos:line="13216" pos:column="13">struct <name pos:line="13216" pos:column="20">IDebugStackFrame2Vtbl</name>
    <block pos:line="13217" pos:column="5">{<public type="default" pos:line="13217" pos:column="6">
        <function_decl><type><name pos:line="13218" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13220" pos:column="9">HRESULT</name></type> ( <name pos:line="13220" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13220" pos:column="37">*</type:modifier><name pos:line="13220" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13220" pos:column="54">( 
            <param><decl><type><name pos:line="13221" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13221" pos:column="31">*</type:modifier></type> <name pos:line="13221" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13222" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13222" pos:column="24">__RPC__in</name> <name pos:line="13222" pos:column="34">REFIID</name></type> <name pos:line="13222" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13223" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13224" pos:column="13">__RPC__deref_out</name>  <name pos:line="13224" pos:column="31">void</name> <type:modifier pos:line="13224" pos:column="36">*</type:modifier><type:modifier pos:line="13224" pos:column="37">*</type:modifier></type><name pos:line="13224" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13226" pos:column="9">ULONG</name></type> ( <name pos:line="13226" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13226" pos:column="35">*</type:modifier><name pos:line="13226" pos:column="36">AddRef</name> )<parameter_list pos:line="13226" pos:column="44">( 
            <param><decl><type><name pos:line="13227" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13227" pos:column="31">*</type:modifier></type> <name pos:line="13227" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13229" pos:column="9">ULONG</name></type> ( <name pos:line="13229" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13229" pos:column="35">*</type:modifier><name pos:line="13229" pos:column="36">Release</name> )<parameter_list pos:line="13229" pos:column="45">( 
            <param><decl><type><name pos:line="13230" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13230" pos:column="31">*</type:modifier></type> <name pos:line="13230" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13232" pos:column="9">HRESULT</name></type> ( <name pos:line="13232" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13232" pos:column="37">*</type:modifier><name pos:line="13232" pos:column="38">GetCodeContext</name> )<parameter_list pos:line="13232" pos:column="54">( 
            <param><decl><type><name pos:line="13233" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13233" pos:column="31">*</type:modifier></type> <name pos:line="13233" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13234" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13234" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13234" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="13234" pos:column="65">*</type:modifier><type:modifier pos:line="13234" pos:column="66">*</type:modifier></type><name pos:line="13234" pos:column="67">ppCodeCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13236" pos:column="9">HRESULT</name></type> ( <name pos:line="13236" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13236" pos:column="37">*</type:modifier><name pos:line="13236" pos:column="38">GetDocumentContext</name> )<parameter_list pos:line="13236" pos:column="58">( 
            <param><decl><type><name pos:line="13237" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13237" pos:column="31">*</type:modifier></type> <name pos:line="13237" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13238" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13238" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13238" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="13238" pos:column="69">*</type:modifier><type:modifier pos:line="13238" pos:column="70">*</type:modifier></type><name pos:line="13238" pos:column="71">ppCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13240" pos:column="9">HRESULT</name></type> ( <name pos:line="13240" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13240" pos:column="37">*</type:modifier><name pos:line="13240" pos:column="38">GetName</name> )<parameter_list pos:line="13240" pos:column="47">( 
            <param><decl><type><name pos:line="13241" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13241" pos:column="31">*</type:modifier></type> <name pos:line="13241" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13242" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13242" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13242" pos:column="46">BSTR</name> <type:modifier pos:line="13242" pos:column="51">*</type:modifier></type><name pos:line="13242" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13244" pos:column="9">HRESULT</name></type> ( <name pos:line="13244" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13244" pos:column="37">*</type:modifier><name pos:line="13244" pos:column="38">GetInfo</name> )<parameter_list pos:line="13244" pos:column="47">( 
            <param><decl><type><name pos:line="13245" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13245" pos:column="31">*</type:modifier></type> <name pos:line="13245" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13246" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13246" pos:column="24">FRAMEINFO_FLAGS</name></type> <name pos:line="13246" pos:column="40">dwFieldSpec</name></decl></param>,
            <comment type="block" pos:line="13247" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13247" pos:column="24">UINT</name></type> <name pos:line="13247" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="13248" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13248" pos:column="25">__RPC__out</name> <name pos:line="13248" pos:column="36">FRAMEINFO</name> <type:modifier pos:line="13248" pos:column="46">*</type:modifier></type><name pos:line="13248" pos:column="47">pFrameInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13250" pos:column="9">HRESULT</name></type> ( <name pos:line="13250" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13250" pos:column="37">*</type:modifier><name pos:line="13250" pos:column="38">GetPhysicalStackRange</name> )<parameter_list pos:line="13250" pos:column="61">( 
            <param><decl><type><name pos:line="13251" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13251" pos:column="31">*</type:modifier></type> <name pos:line="13251" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13252" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13252" pos:column="25">__RPC__out</name> <name pos:line="13252" pos:column="36">UINT64</name> <type:modifier pos:line="13252" pos:column="43">*</type:modifier></type><name pos:line="13252" pos:column="44">paddrMin</name></decl></param>,
            <comment type="block" pos:line="13253" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13253" pos:column="25">__RPC__out</name> <name pos:line="13253" pos:column="36">UINT64</name> <type:modifier pos:line="13253" pos:column="43">*</type:modifier></type><name pos:line="13253" pos:column="44">paddrMax</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13255" pos:column="9">HRESULT</name></type> ( <name pos:line="13255" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13255" pos:column="37">*</type:modifier><name pos:line="13255" pos:column="38">GetExpressionContext</name> )<parameter_list pos:line="13255" pos:column="60">( 
            <param><decl><type><name pos:line="13256" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13256" pos:column="31">*</type:modifier></type> <name pos:line="13256" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13257" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13257" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13257" pos:column="46">IDebugExpressionContext2</name> <type:modifier pos:line="13257" pos:column="71">*</type:modifier><type:modifier pos:line="13257" pos:column="72">*</type:modifier></type><name pos:line="13257" pos:column="73">ppExprCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13259" pos:column="9">HRESULT</name></type> ( <name pos:line="13259" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13259" pos:column="37">*</type:modifier><name pos:line="13259" pos:column="38">GetLanguageInfo</name> )<parameter_list pos:line="13259" pos:column="55">( 
            <param><decl><type><name pos:line="13260" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13260" pos:column="31">*</type:modifier></type> <name pos:line="13260" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13261" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13261" pos:column="35">__RPC__deref_opt_inout_opt</name> <name pos:line="13261" pos:column="62">BSTR</name> <type:modifier pos:line="13261" pos:column="67">*</type:modifier></type><name pos:line="13261" pos:column="68">pbstrLanguage</name></decl></param>,
            <comment type="block" pos:line="13262" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13262" pos:column="35">__RPC__inout_opt</name> <name pos:line="13262" pos:column="52">GUID</name> <type:modifier pos:line="13262" pos:column="57">*</type:modifier></type><name pos:line="13262" pos:column="58">pguidLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13264" pos:column="9">HRESULT</name></type> ( <name pos:line="13264" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13264" pos:column="37">*</type:modifier><name pos:line="13264" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="13264" pos:column="56">( 
            <param><decl><type><name pos:line="13265" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13265" pos:column="31">*</type:modifier></type> <name pos:line="13265" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13266" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13266" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13266" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="13266" pos:column="62">*</type:modifier><type:modifier pos:line="13266" pos:column="63">*</type:modifier></type><name pos:line="13266" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13268" pos:column="9">HRESULT</name></type> ( <name pos:line="13268" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13268" pos:column="37">*</type:modifier><name pos:line="13268" pos:column="38">EnumProperties</name> )<parameter_list pos:line="13268" pos:column="54">( 
            <param><decl><type><name pos:line="13269" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13269" pos:column="31">*</type:modifier></type> <name pos:line="13269" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13270" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13270" pos:column="24">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="13270" pos:column="45">dwFields</name></decl></param>,
            <comment type="block" pos:line="13271" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13271" pos:column="24">UINT</name></type> <name pos:line="13271" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="13272" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13272" pos:column="24">__RPC__in</name> <name pos:line="13272" pos:column="34">REFGUID</name></type> <name pos:line="13272" pos:column="42">guidFilter</name></decl></param>,
            <comment type="block" pos:line="13273" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13273" pos:column="24">DWORD</name></type> <name pos:line="13273" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="13274" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13274" pos:column="25">__RPC__out</name> <name pos:line="13274" pos:column="36">ULONG</name> <type:modifier pos:line="13274" pos:column="42">*</type:modifier></type><name pos:line="13274" pos:column="43">pcelt</name></decl></param>,
            <comment type="block" pos:line="13275" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13275" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13275" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="13275" pos:column="70">*</type:modifier><type:modifier pos:line="13275" pos:column="71">*</type:modifier></type><name pos:line="13275" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13277" pos:column="9">HRESULT</name></type> ( <name pos:line="13277" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13277" pos:column="37">*</type:modifier><name pos:line="13277" pos:column="38">GetThread</name> )<parameter_list pos:line="13277" pos:column="49">( 
            <param><decl><type><name pos:line="13278" pos:column="13">IDebugStackFrame2</name> <type:modifier pos:line="13278" pos:column="31">*</type:modifier></type> <name pos:line="13278" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13279" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13279" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13279" pos:column="46">IDebugThread2</name> <type:modifier pos:line="13279" pos:column="60">*</type:modifier><type:modifier pos:line="13279" pos:column="61">*</type:modifier></type><name pos:line="13279" pos:column="62">ppThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13281" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13282" pos:column="7">IDebugStackFrame2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13284" pos:column="5">interface</name></type> <name pos:line="13284" pos:column="15">IDebugStackFrame2</name>
    <argument_list pos:line="13285" pos:column="5">{
        <argument><expr><name pos:line="13286" pos:column="9">CONST_VTBL</name> struct <name pos:line="13286" pos:column="27">IDebugStackFrame2Vtbl</name> <op:operator pos:line="13286" pos:column="49">*</op:operator><name pos:line="13286" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13291" pos:column="1">#<cpp:directive pos:line="13291" pos:column="2">ifdef</cpp:directive> <name pos:line="13291" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13294" pos:column="1">#<cpp:directive pos:line="13294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13294" pos:column="9">IDebugStackFrame2_QueryInterface</name><parameter_list pos:line="13294" pos:column="41">(<param><type><name pos:line="13294" pos:column="42">This</name></type></param>,<param><type><name pos:line="13294" pos:column="47">riid</name></type></param>,<param><type><name pos:line="13294" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13295" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13297" pos:column="1">#<cpp:directive pos:line="13297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13297" pos:column="9">IDebugStackFrame2_AddRef</name><parameter_list pos:line="13297" pos:column="33">(<param><type><name pos:line="13297" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13298" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13300" pos:column="1">#<cpp:directive pos:line="13300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13300" pos:column="9">IDebugStackFrame2_Release</name><parameter_list pos:line="13300" pos:column="34">(<param><type><name pos:line="13300" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13301" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13304" pos:column="1">#<cpp:directive pos:line="13304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13304" pos:column="9">IDebugStackFrame2_GetCodeContext</name><parameter_list pos:line="13304" pos:column="41">(<param><type><name pos:line="13304" pos:column="42">This</name></type></param>,<param><type><name pos:line="13304" pos:column="47">ppCodeCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13305" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCodeContext(This,ppCodeCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13307" pos:column="1">#<cpp:directive pos:line="13307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13307" pos:column="9">IDebugStackFrame2_GetDocumentContext</name><parameter_list pos:line="13307" pos:column="45">(<param><type><name pos:line="13307" pos:column="46">This</name></type></param>,<param><type><name pos:line="13307" pos:column="51">ppCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13308" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentContext(This,ppCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13310" pos:column="1">#<cpp:directive pos:line="13310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13310" pos:column="9">IDebugStackFrame2_GetName</name><parameter_list pos:line="13310" pos:column="34">(<param><type><name pos:line="13310" pos:column="35">This</name></type></param>,<param><type><name pos:line="13310" pos:column="40">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13311" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="13313" pos:column="1">#<cpp:directive pos:line="13313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13313" pos:column="9">IDebugStackFrame2_GetInfo</name><parameter_list pos:line="13313" pos:column="34">(<param><type><name pos:line="13313" pos:column="35">This</name></type></param>,<param><type><name pos:line="13313" pos:column="40">dwFieldSpec</name></type></param>,<param><type><name pos:line="13313" pos:column="52">nRadix</name></type></param>,<param><type><name pos:line="13313" pos:column="59">pFrameInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13314" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFieldSpec,nRadix,pFrameInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13316" pos:column="1">#<cpp:directive pos:line="13316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13316" pos:column="9">IDebugStackFrame2_GetPhysicalStackRange</name><parameter_list pos:line="13316" pos:column="48">(<param><type><name pos:line="13316" pos:column="49">This</name></type></param>,<param><type><name pos:line="13316" pos:column="54">paddrMin</name></type></param>,<param><type><name pos:line="13316" pos:column="63">paddrMax</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13317" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPhysicalStackRange(This,paddrMin,paddrMax) )</cpp:value></cpp:define> 

<cpp:define pos:line="13319" pos:column="1">#<cpp:directive pos:line="13319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13319" pos:column="9">IDebugStackFrame2_GetExpressionContext</name><parameter_list pos:line="13319" pos:column="47">(<param><type><name pos:line="13319" pos:column="48">This</name></type></param>,<param><type><name pos:line="13319" pos:column="53">ppExprCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13320" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpressionContext(This,ppExprCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13322" pos:column="1">#<cpp:directive pos:line="13322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13322" pos:column="9">IDebugStackFrame2_GetLanguageInfo</name><parameter_list pos:line="13322" pos:column="42">(<param><type><name pos:line="13322" pos:column="43">This</name></type></param>,<param><type><name pos:line="13322" pos:column="48">pbstrLanguage</name></type></param>,<param><type><name pos:line="13322" pos:column="62">pguidLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13323" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguageInfo(This,pbstrLanguage,pguidLanguage) )</cpp:value></cpp:define> 

<cpp:define pos:line="13325" pos:column="1">#<cpp:directive pos:line="13325" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13325" pos:column="9">IDebugStackFrame2_GetDebugProperty</name><parameter_list pos:line="13325" pos:column="43">(<param><type><name pos:line="13325" pos:column="44">This</name></type></param>,<param><type><name pos:line="13325" pos:column="49">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13326" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="13328" pos:column="1">#<cpp:directive pos:line="13328" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13328" pos:column="9">IDebugStackFrame2_EnumProperties</name><parameter_list pos:line="13328" pos:column="41">(<param><type><name pos:line="13328" pos:column="42">This</name></type></param>,<param><type><name pos:line="13328" pos:column="47">dwFields</name></type></param>,<param><type><name pos:line="13328" pos:column="56">nRadix</name></type></param>,<param><type><name pos:line="13328" pos:column="63">guidFilter</name></type></param>,<param><type><name pos:line="13328" pos:column="74">dwTimeout</name></type></param>,<param><type><name pos:line="13328" pos:column="84">pcelt</name></type></param>,<param><type><name pos:line="13328" pos:column="90">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13329" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumProperties(This,dwFields,nRadix,guidFilter,dwTimeout,pcelt,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="13331" pos:column="1">#<cpp:directive pos:line="13331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13331" pos:column="9">IDebugStackFrame2_GetThread</name><parameter_list pos:line="13331" pos:column="36">(<param><type><name pos:line="13331" pos:column="37">This</name></type></param>,<param><type><name pos:line="13331" pos:column="42">ppThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13332" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThread(This,ppThread) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13334" pos:column="1">#<cpp:directive pos:line="13334" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13334" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13337" pos:column="1">#<cpp:directive pos:line="13337" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13337" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13342" pos:column="1">#<cpp:directive pos:line="13342" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13342" pos:column="9">/* __IDebugStackFrame2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13345" pos:column="1">#<cpp:directive pos:line="13345" pos:column="2">ifndef</cpp:directive> <name pos:line="13345" pos:column="9">__IDebugStackFrame3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13346" pos:column="1">#<cpp:directive pos:line="13346" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13346" pos:column="9">__IDebugStackFrame3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13348" pos:column="1">/* interface IDebugStackFrame3 */</comment>
<comment type="block" pos:line="13349" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="13352" pos:column="1">enum <name pos:line="13352" pos:column="6">enum_INTERCEPT_EXCEPTION_ACTION</name>
    <block pos:line="13353" pos:column="5">{	<decl><name pos:line="13353" pos:column="9">IEA_INTERCEPT</name>	<init pos:line="13353" pos:column="25">= <expr><lit:literal type="number" pos:line="13353" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="13353" pos:column="30">,</op:operator>
	<decl><name pos:line="13354" pos:column="9">IEA_CANCEL_INTERCEPT</name>	<init pos:line="13354" pos:column="33">= <expr><lit:literal type="number" pos:line="13354" pos:column="35">0</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="13356" pos:column="1">typedef <type><name pos:line="13356" pos:column="9">DWORD</name></type> <name pos:line="13356" pos:column="15">INTERCEPT_EXCEPTION_ACTION</name>;</typedef>


<decl_stmt><decl><type><name pos:line="13359" pos:column="1">EXTERN_C</name> <specifier pos:line="13359" pos:column="10">const</specifier> <name pos:line="13359" pos:column="16">IID</name></type> <name pos:line="13359" pos:column="20">IID_IDebugStackFrame3</name></decl>;</decl_stmt>

<cpp:if pos:line="13361" pos:column="1">#<cpp:directive pos:line="13361" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13361" pos:column="5">defined</name><argument_list pos:line="13361" pos:column="12">(<argument><expr><name pos:line="13361" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13361" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13361" pos:column="29">!</op:operator><call><name pos:line="13361" pos:column="30">defined</name><argument_list pos:line="13361" pos:column="37">(<argument><expr><name pos:line="13361" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13363" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13363" pos:column="19">(<argument pos:line="13363" pos:column="20">"60DE844B-38B1-4d87-AFE1-8CF49677D3B0"</argument>)</argument_list></macro>
    <label><name pos:line="13364" pos:column="5">IDebugStackFrame3</name> :</label> <expr_stmt><expr pos:line="13364" pos:column="25">public <name pos:line="13364" pos:column="32">IDebugStackFrame2</name>
    <block pos:line="13365" pos:column="5">{
    <expr pos:line="13366" pos:column="5">public<op:operator pos:line="13366" pos:column="11">:</op:operator>
        virtual <name pos:line="13367" pos:column="17">HRESULT</name> <name pos:line="13367" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13367" pos:column="43">InterceptCurrentException</name><argument_list pos:line="13367" pos:column="68">( 
            <comment type="block" pos:line="13368" pos:column="13">/* [in] */</comment> <argument pos:line="13368" pos:column="24">INTERCEPT_EXCEPTION_ACTION dwFlags</argument>,
            <comment type="block" pos:line="13369" pos:column="13">/* [out] */</comment> <argument pos:line="13369" pos:column="25">__RPC__out UINT64 *pqwCookie</argument>)</argument_list></macro> <op:operator pos:line="13369" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="13369" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="13371" pos:column="9">virtual <name pos:line="13371" pos:column="17">HRESULT</name> <name pos:line="13371" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13371" pos:column="43">GetUnwindCodeContext</name><argument_list pos:line="13371" pos:column="63">( 
            <comment type="block" pos:line="13372" pos:column="13">/* [out] */</comment> <argument pos:line="13372" pos:column="25">__RPC__deref_out_opt IDebugCodeContext2 **ppCodeContext</argument>)</argument_list></macro> <op:operator pos:line="13372" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="13372" pos:column="84">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13376" pos:column="1">#<cpp:directive pos:line="13376" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13376" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13378" pos:column="5">typedef <type><struct pos:line="13378" pos:column="13">struct <name pos:line="13378" pos:column="20">IDebugStackFrame3Vtbl</name>
    <block pos:line="13379" pos:column="5">{<public type="default" pos:line="13379" pos:column="6">
        <function_decl><type><name pos:line="13380" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13382" pos:column="9">HRESULT</name></type> ( <name pos:line="13382" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13382" pos:column="37">*</type:modifier><name pos:line="13382" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13382" pos:column="54">( 
            <param><decl><type><name pos:line="13383" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13383" pos:column="31">*</type:modifier></type> <name pos:line="13383" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13384" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13384" pos:column="24">__RPC__in</name> <name pos:line="13384" pos:column="34">REFIID</name></type> <name pos:line="13384" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13385" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13386" pos:column="13">__RPC__deref_out</name>  <name pos:line="13386" pos:column="31">void</name> <type:modifier pos:line="13386" pos:column="36">*</type:modifier><type:modifier pos:line="13386" pos:column="37">*</type:modifier></type><name pos:line="13386" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13388" pos:column="9">ULONG</name></type> ( <name pos:line="13388" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13388" pos:column="35">*</type:modifier><name pos:line="13388" pos:column="36">AddRef</name> )<parameter_list pos:line="13388" pos:column="44">( 
            <param><decl><type><name pos:line="13389" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13389" pos:column="31">*</type:modifier></type> <name pos:line="13389" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13391" pos:column="9">ULONG</name></type> ( <name pos:line="13391" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13391" pos:column="35">*</type:modifier><name pos:line="13391" pos:column="36">Release</name> )<parameter_list pos:line="13391" pos:column="45">( 
            <param><decl><type><name pos:line="13392" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13392" pos:column="31">*</type:modifier></type> <name pos:line="13392" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13394" pos:column="9">HRESULT</name></type> ( <name pos:line="13394" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13394" pos:column="37">*</type:modifier><name pos:line="13394" pos:column="38">GetCodeContext</name> )<parameter_list pos:line="13394" pos:column="54">( 
            <param><decl><type><name pos:line="13395" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13395" pos:column="31">*</type:modifier></type> <name pos:line="13395" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13396" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13396" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13396" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="13396" pos:column="65">*</type:modifier><type:modifier pos:line="13396" pos:column="66">*</type:modifier></type><name pos:line="13396" pos:column="67">ppCodeCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13398" pos:column="9">HRESULT</name></type> ( <name pos:line="13398" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13398" pos:column="37">*</type:modifier><name pos:line="13398" pos:column="38">GetDocumentContext</name> )<parameter_list pos:line="13398" pos:column="58">( 
            <param><decl><type><name pos:line="13399" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13399" pos:column="31">*</type:modifier></type> <name pos:line="13399" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13400" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13400" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13400" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="13400" pos:column="69">*</type:modifier><type:modifier pos:line="13400" pos:column="70">*</type:modifier></type><name pos:line="13400" pos:column="71">ppCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13402" pos:column="9">HRESULT</name></type> ( <name pos:line="13402" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13402" pos:column="37">*</type:modifier><name pos:line="13402" pos:column="38">GetName</name> )<parameter_list pos:line="13402" pos:column="47">( 
            <param><decl><type><name pos:line="13403" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13403" pos:column="31">*</type:modifier></type> <name pos:line="13403" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13404" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13404" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13404" pos:column="46">BSTR</name> <type:modifier pos:line="13404" pos:column="51">*</type:modifier></type><name pos:line="13404" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13406" pos:column="9">HRESULT</name></type> ( <name pos:line="13406" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13406" pos:column="37">*</type:modifier><name pos:line="13406" pos:column="38">GetInfo</name> )<parameter_list pos:line="13406" pos:column="47">( 
            <param><decl><type><name pos:line="13407" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13407" pos:column="31">*</type:modifier></type> <name pos:line="13407" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13408" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13408" pos:column="24">FRAMEINFO_FLAGS</name></type> <name pos:line="13408" pos:column="40">dwFieldSpec</name></decl></param>,
            <comment type="block" pos:line="13409" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13409" pos:column="24">UINT</name></type> <name pos:line="13409" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="13410" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13410" pos:column="25">__RPC__out</name> <name pos:line="13410" pos:column="36">FRAMEINFO</name> <type:modifier pos:line="13410" pos:column="46">*</type:modifier></type><name pos:line="13410" pos:column="47">pFrameInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13412" pos:column="9">HRESULT</name></type> ( <name pos:line="13412" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13412" pos:column="37">*</type:modifier><name pos:line="13412" pos:column="38">GetPhysicalStackRange</name> )<parameter_list pos:line="13412" pos:column="61">( 
            <param><decl><type><name pos:line="13413" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13413" pos:column="31">*</type:modifier></type> <name pos:line="13413" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13414" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13414" pos:column="25">__RPC__out</name> <name pos:line="13414" pos:column="36">UINT64</name> <type:modifier pos:line="13414" pos:column="43">*</type:modifier></type><name pos:line="13414" pos:column="44">paddrMin</name></decl></param>,
            <comment type="block" pos:line="13415" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13415" pos:column="25">__RPC__out</name> <name pos:line="13415" pos:column="36">UINT64</name> <type:modifier pos:line="13415" pos:column="43">*</type:modifier></type><name pos:line="13415" pos:column="44">paddrMax</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13417" pos:column="9">HRESULT</name></type> ( <name pos:line="13417" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13417" pos:column="37">*</type:modifier><name pos:line="13417" pos:column="38">GetExpressionContext</name> )<parameter_list pos:line="13417" pos:column="60">( 
            <param><decl><type><name pos:line="13418" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13418" pos:column="31">*</type:modifier></type> <name pos:line="13418" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13419" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13419" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13419" pos:column="46">IDebugExpressionContext2</name> <type:modifier pos:line="13419" pos:column="71">*</type:modifier><type:modifier pos:line="13419" pos:column="72">*</type:modifier></type><name pos:line="13419" pos:column="73">ppExprCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13421" pos:column="9">HRESULT</name></type> ( <name pos:line="13421" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13421" pos:column="37">*</type:modifier><name pos:line="13421" pos:column="38">GetLanguageInfo</name> )<parameter_list pos:line="13421" pos:column="55">( 
            <param><decl><type><name pos:line="13422" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13422" pos:column="31">*</type:modifier></type> <name pos:line="13422" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13423" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13423" pos:column="35">__RPC__deref_opt_inout_opt</name> <name pos:line="13423" pos:column="62">BSTR</name> <type:modifier pos:line="13423" pos:column="67">*</type:modifier></type><name pos:line="13423" pos:column="68">pbstrLanguage</name></decl></param>,
            <comment type="block" pos:line="13424" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13424" pos:column="35">__RPC__inout_opt</name> <name pos:line="13424" pos:column="52">GUID</name> <type:modifier pos:line="13424" pos:column="57">*</type:modifier></type><name pos:line="13424" pos:column="58">pguidLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13426" pos:column="9">HRESULT</name></type> ( <name pos:line="13426" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13426" pos:column="37">*</type:modifier><name pos:line="13426" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="13426" pos:column="56">( 
            <param><decl><type><name pos:line="13427" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13427" pos:column="31">*</type:modifier></type> <name pos:line="13427" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13428" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13428" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13428" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="13428" pos:column="62">*</type:modifier><type:modifier pos:line="13428" pos:column="63">*</type:modifier></type><name pos:line="13428" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13430" pos:column="9">HRESULT</name></type> ( <name pos:line="13430" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13430" pos:column="37">*</type:modifier><name pos:line="13430" pos:column="38">EnumProperties</name> )<parameter_list pos:line="13430" pos:column="54">( 
            <param><decl><type><name pos:line="13431" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13431" pos:column="31">*</type:modifier></type> <name pos:line="13431" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13432" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13432" pos:column="24">DEBUGPROP_INFO_FLAGS</name></type> <name pos:line="13432" pos:column="45">dwFields</name></decl></param>,
            <comment type="block" pos:line="13433" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13433" pos:column="24">UINT</name></type> <name pos:line="13433" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="13434" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13434" pos:column="24">__RPC__in</name> <name pos:line="13434" pos:column="34">REFGUID</name></type> <name pos:line="13434" pos:column="42">guidFilter</name></decl></param>,
            <comment type="block" pos:line="13435" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13435" pos:column="24">DWORD</name></type> <name pos:line="13435" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="13436" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13436" pos:column="25">__RPC__out</name> <name pos:line="13436" pos:column="36">ULONG</name> <type:modifier pos:line="13436" pos:column="42">*</type:modifier></type><name pos:line="13436" pos:column="43">pcelt</name></decl></param>,
            <comment type="block" pos:line="13437" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13437" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13437" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="13437" pos:column="70">*</type:modifier><type:modifier pos:line="13437" pos:column="71">*</type:modifier></type><name pos:line="13437" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13439" pos:column="9">HRESULT</name></type> ( <name pos:line="13439" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13439" pos:column="37">*</type:modifier><name pos:line="13439" pos:column="38">GetThread</name> )<parameter_list pos:line="13439" pos:column="49">( 
            <param><decl><type><name pos:line="13440" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13440" pos:column="31">*</type:modifier></type> <name pos:line="13440" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13441" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13441" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13441" pos:column="46">IDebugThread2</name> <type:modifier pos:line="13441" pos:column="60">*</type:modifier><type:modifier pos:line="13441" pos:column="61">*</type:modifier></type><name pos:line="13441" pos:column="62">ppThread</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13443" pos:column="9">HRESULT</name></type> ( <name pos:line="13443" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13443" pos:column="37">*</type:modifier><name pos:line="13443" pos:column="38">InterceptCurrentException</name> )<parameter_list pos:line="13443" pos:column="65">( 
            <param><decl><type><name pos:line="13444" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13444" pos:column="31">*</type:modifier></type> <name pos:line="13444" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13445" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13445" pos:column="24">INTERCEPT_EXCEPTION_ACTION</name></type> <name pos:line="13445" pos:column="51">dwFlags</name></decl></param>,
            <comment type="block" pos:line="13446" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13446" pos:column="25">__RPC__out</name> <name pos:line="13446" pos:column="36">UINT64</name> <type:modifier pos:line="13446" pos:column="43">*</type:modifier></type><name pos:line="13446" pos:column="44">pqwCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13448" pos:column="9">HRESULT</name></type> ( <name pos:line="13448" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13448" pos:column="37">*</type:modifier><name pos:line="13448" pos:column="38">GetUnwindCodeContext</name> )<parameter_list pos:line="13448" pos:column="60">( 
            <param><decl><type><name pos:line="13449" pos:column="13">IDebugStackFrame3</name> <type:modifier pos:line="13449" pos:column="31">*</type:modifier></type> <name pos:line="13449" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="13450" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13450" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13450" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="13450" pos:column="65">*</type:modifier><type:modifier pos:line="13450" pos:column="66">*</type:modifier></type><name pos:line="13450" pos:column="67">ppCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13452" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13453" pos:column="7">IDebugStackFrame3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13455" pos:column="5">interface</name></type> <name pos:line="13455" pos:column="15">IDebugStackFrame3</name>
    <argument_list pos:line="13456" pos:column="5">{
        <argument><expr><name pos:line="13457" pos:column="9">CONST_VTBL</name> struct <name pos:line="13457" pos:column="27">IDebugStackFrame3Vtbl</name> <op:operator pos:line="13457" pos:column="49">*</op:operator><name pos:line="13457" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13462" pos:column="1">#<cpp:directive pos:line="13462" pos:column="2">ifdef</cpp:directive> <name pos:line="13462" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13465" pos:column="1">#<cpp:directive pos:line="13465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13465" pos:column="9">IDebugStackFrame3_QueryInterface</name><parameter_list pos:line="13465" pos:column="41">(<param><type><name pos:line="13465" pos:column="42">This</name></type></param>,<param><type><name pos:line="13465" pos:column="47">riid</name></type></param>,<param><type><name pos:line="13465" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13466" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13468" pos:column="1">#<cpp:directive pos:line="13468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13468" pos:column="9">IDebugStackFrame3_AddRef</name><parameter_list pos:line="13468" pos:column="33">(<param><type><name pos:line="13468" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13469" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13471" pos:column="1">#<cpp:directive pos:line="13471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13471" pos:column="9">IDebugStackFrame3_Release</name><parameter_list pos:line="13471" pos:column="34">(<param><type><name pos:line="13471" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13472" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13475" pos:column="1">#<cpp:directive pos:line="13475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13475" pos:column="9">IDebugStackFrame3_GetCodeContext</name><parameter_list pos:line="13475" pos:column="41">(<param><type><name pos:line="13475" pos:column="42">This</name></type></param>,<param><type><name pos:line="13475" pos:column="47">ppCodeCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13476" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCodeContext(This,ppCodeCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13478" pos:column="1">#<cpp:directive pos:line="13478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13478" pos:column="9">IDebugStackFrame3_GetDocumentContext</name><parameter_list pos:line="13478" pos:column="45">(<param><type><name pos:line="13478" pos:column="46">This</name></type></param>,<param><type><name pos:line="13478" pos:column="51">ppCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13479" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentContext(This,ppCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13481" pos:column="1">#<cpp:directive pos:line="13481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13481" pos:column="9">IDebugStackFrame3_GetName</name><parameter_list pos:line="13481" pos:column="34">(<param><type><name pos:line="13481" pos:column="35">This</name></type></param>,<param><type><name pos:line="13481" pos:column="40">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13482" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="13484" pos:column="1">#<cpp:directive pos:line="13484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13484" pos:column="9">IDebugStackFrame3_GetInfo</name><parameter_list pos:line="13484" pos:column="34">(<param><type><name pos:line="13484" pos:column="35">This</name></type></param>,<param><type><name pos:line="13484" pos:column="40">dwFieldSpec</name></type></param>,<param><type><name pos:line="13484" pos:column="52">nRadix</name></type></param>,<param><type><name pos:line="13484" pos:column="59">pFrameInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13485" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFieldSpec,nRadix,pFrameInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13487" pos:column="1">#<cpp:directive pos:line="13487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13487" pos:column="9">IDebugStackFrame3_GetPhysicalStackRange</name><parameter_list pos:line="13487" pos:column="48">(<param><type><name pos:line="13487" pos:column="49">This</name></type></param>,<param><type><name pos:line="13487" pos:column="54">paddrMin</name></type></param>,<param><type><name pos:line="13487" pos:column="63">paddrMax</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13488" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPhysicalStackRange(This,paddrMin,paddrMax) )</cpp:value></cpp:define> 

<cpp:define pos:line="13490" pos:column="1">#<cpp:directive pos:line="13490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13490" pos:column="9">IDebugStackFrame3_GetExpressionContext</name><parameter_list pos:line="13490" pos:column="47">(<param><type><name pos:line="13490" pos:column="48">This</name></type></param>,<param><type><name pos:line="13490" pos:column="53">ppExprCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13491" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpressionContext(This,ppExprCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13493" pos:column="1">#<cpp:directive pos:line="13493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13493" pos:column="9">IDebugStackFrame3_GetLanguageInfo</name><parameter_list pos:line="13493" pos:column="42">(<param><type><name pos:line="13493" pos:column="43">This</name></type></param>,<param><type><name pos:line="13493" pos:column="48">pbstrLanguage</name></type></param>,<param><type><name pos:line="13493" pos:column="62">pguidLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13494" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguageInfo(This,pbstrLanguage,pguidLanguage) )</cpp:value></cpp:define> 

<cpp:define pos:line="13496" pos:column="1">#<cpp:directive pos:line="13496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13496" pos:column="9">IDebugStackFrame3_GetDebugProperty</name><parameter_list pos:line="13496" pos:column="43">(<param><type><name pos:line="13496" pos:column="44">This</name></type></param>,<param><type><name pos:line="13496" pos:column="49">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13497" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="13499" pos:column="1">#<cpp:directive pos:line="13499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13499" pos:column="9">IDebugStackFrame3_EnumProperties</name><parameter_list pos:line="13499" pos:column="41">(<param><type><name pos:line="13499" pos:column="42">This</name></type></param>,<param><type><name pos:line="13499" pos:column="47">dwFields</name></type></param>,<param><type><name pos:line="13499" pos:column="56">nRadix</name></type></param>,<param><type><name pos:line="13499" pos:column="63">guidFilter</name></type></param>,<param><type><name pos:line="13499" pos:column="74">dwTimeout</name></type></param>,<param><type><name pos:line="13499" pos:column="84">pcelt</name></type></param>,<param><type><name pos:line="13499" pos:column="90">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13500" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumProperties(This,dwFields,nRadix,guidFilter,dwTimeout,pcelt,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="13502" pos:column="1">#<cpp:directive pos:line="13502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13502" pos:column="9">IDebugStackFrame3_GetThread</name><parameter_list pos:line="13502" pos:column="36">(<param><type><name pos:line="13502" pos:column="37">This</name></type></param>,<param><type><name pos:line="13502" pos:column="42">ppThread</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13503" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThread(This,ppThread) )</cpp:value></cpp:define> 


<cpp:define pos:line="13506" pos:column="1">#<cpp:directive pos:line="13506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13506" pos:column="9">IDebugStackFrame3_InterceptCurrentException</name><parameter_list pos:line="13506" pos:column="52">(<param><type><name pos:line="13506" pos:column="53">This</name></type></param>,<param><type><name pos:line="13506" pos:column="58">dwFlags</name></type></param>,<param><type><name pos:line="13506" pos:column="66">pqwCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13507" pos:column="5">( (This)-&gt;lpVtbl -&gt; InterceptCurrentException(This,dwFlags,pqwCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="13509" pos:column="1">#<cpp:directive pos:line="13509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13509" pos:column="9">IDebugStackFrame3_GetUnwindCodeContext</name><parameter_list pos:line="13509" pos:column="47">(<param><type><name pos:line="13509" pos:column="48">This</name></type></param>,<param><type><name pos:line="13509" pos:column="53">ppCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13510" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetUnwindCodeContext(This,ppCodeContext) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13512" pos:column="1">#<cpp:directive pos:line="13512" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13512" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13515" pos:column="1">#<cpp:directive pos:line="13515" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13515" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13520" pos:column="1">#<cpp:directive pos:line="13520" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13520" pos:column="9">/* __IDebugStackFrame3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13523" pos:column="1">#<cpp:directive pos:line="13523" pos:column="2">ifndef</cpp:directive> <name pos:line="13523" pos:column="9">__IDebugMemoryContext2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13524" pos:column="1">#<cpp:directive pos:line="13524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13524" pos:column="9">__IDebugMemoryContext2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13526" pos:column="1">/* interface IDebugMemoryContext2 */</comment>
<comment type="block" pos:line="13527" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="13530" pos:column="1">enum <name pos:line="13530" pos:column="6">enum_CONTEXT_COMPARE</name>
    <block pos:line="13531" pos:column="5">{	<decl><name pos:line="13531" pos:column="9">CONTEXT_EQUAL</name>	<init pos:line="13531" pos:column="25">= <expr><lit:literal type="number" pos:line="13531" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="13531" pos:column="30">,</op:operator>
	<decl><name pos:line="13532" pos:column="9">CONTEXT_LESS_THAN</name>	<init pos:line="13532" pos:column="33">= <expr><lit:literal type="number" pos:line="13532" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="13532" pos:column="38">,</op:operator>
	<decl><name pos:line="13533" pos:column="9">CONTEXT_GREATER_THAN</name>	<init pos:line="13533" pos:column="33">= <expr><lit:literal type="number" pos:line="13533" pos:column="35">0x3</lit:literal></expr></init></decl><op:operator pos:line="13533" pos:column="38">,</op:operator>
	<decl><name pos:line="13534" pos:column="9">CONTEXT_LESS_THAN_OR_EQUAL</name>	<init pos:line="13534" pos:column="41">= <expr><lit:literal type="number" pos:line="13534" pos:column="43">0x4</lit:literal></expr></init></decl><op:operator pos:line="13534" pos:column="46">,</op:operator>
	<decl><name pos:line="13535" pos:column="9">CONTEXT_GREATER_THAN_OR_EQUAL</name>	<init pos:line="13535" pos:column="41">= <expr><lit:literal type="number" pos:line="13535" pos:column="43">0x5</lit:literal></expr></init></decl><op:operator pos:line="13535" pos:column="46">,</op:operator>
	<decl><name pos:line="13536" pos:column="9">CONTEXT_SAME_SCOPE</name>	<init pos:line="13536" pos:column="33">= <expr><lit:literal type="number" pos:line="13536" pos:column="35">0x6</lit:literal></expr></init></decl><op:operator pos:line="13536" pos:column="38">,</op:operator>
	<decl><name pos:line="13537" pos:column="9">CONTEXT_SAME_FUNCTION</name>	<init pos:line="13537" pos:column="33">= <expr><lit:literal type="number" pos:line="13537" pos:column="35">0x7</lit:literal></expr></init></decl><op:operator pos:line="13537" pos:column="38">,</op:operator>
	<decl><name pos:line="13538" pos:column="9">CONTEXT_SAME_MODULE</name>	<init pos:line="13538" pos:column="33">= <expr><lit:literal type="number" pos:line="13538" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="13538" pos:column="38">,</op:operator>
	<decl><name pos:line="13539" pos:column="9">CONTEXT_SAME_PROCESS</name>	<init pos:line="13539" pos:column="33">= <expr><lit:literal type="number" pos:line="13539" pos:column="35">0x9</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="13541" pos:column="1">typedef <type><name pos:line="13541" pos:column="9">DWORD</name></type> <name pos:line="13541" pos:column="15">CONTEXT_COMPARE</name>;</typedef>


<enum pos:line="13544" pos:column="1">enum <name pos:line="13544" pos:column="6">enum_CONTEXT_INFO_FIELDS</name>
    <block pos:line="13545" pos:column="5">{	<decl><name pos:line="13545" pos:column="9">CIF_MODULEURL</name>	<init pos:line="13545" pos:column="25">= <expr><lit:literal type="number" pos:line="13545" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="13545" pos:column="30">,</op:operator>
	<decl><name pos:line="13546" pos:column="9">CIF_FUNCTION</name>	<init pos:line="13546" pos:column="25">= <expr><lit:literal type="number" pos:line="13546" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="13546" pos:column="30">,</op:operator>
	<decl><name pos:line="13547" pos:column="9">CIF_FUNCTIONOFFSET</name>	<init pos:line="13547" pos:column="33">= <expr><lit:literal type="number" pos:line="13547" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="13547" pos:column="38">,</op:operator>
	<decl><name pos:line="13548" pos:column="9">CIF_ADDRESS</name>	<init pos:line="13548" pos:column="25">= <expr><lit:literal type="number" pos:line="13548" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="13548" pos:column="30">,</op:operator>
	<decl><name pos:line="13549" pos:column="9">CIF_ADDRESSOFFSET</name>	<init pos:line="13549" pos:column="33">= <expr><lit:literal type="number" pos:line="13549" pos:column="35">0x10</lit:literal></expr></init></decl><op:operator pos:line="13549" pos:column="39">,</op:operator>
	<decl><name pos:line="13550" pos:column="9">CIF_ADDRESSABSOLUTE</name>	<init pos:line="13550" pos:column="33">= <expr><lit:literal type="number" pos:line="13550" pos:column="35">0x20</lit:literal></expr></init></decl><op:operator pos:line="13550" pos:column="39">,</op:operator>
	<decl><name pos:line="13551" pos:column="9">CIF_ALLFIELDS</name>	<init pos:line="13551" pos:column="25">= <expr><lit:literal type="number" pos:line="13551" pos:column="27">0x3f</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="13553" pos:column="1">typedef <type><name pos:line="13553" pos:column="9">DWORD</name></type> <name pos:line="13553" pos:column="15">CONTEXT_INFO_FIELDS</name>;</typedef>

<typedef pos:line="13555" pos:column="1">typedef <type><struct pos:line="13555" pos:column="9">struct <name pos:line="13555" pos:column="16">_tagCONTEXT_INFO</name>
    <block pos:line="13556" pos:column="5">{<public type="default" pos:line="13556" pos:column="6">
    <decl_stmt><decl><type><name pos:line="13557" pos:column="5">CONTEXT_INFO_FIELDS</name></type> <name pos:line="13557" pos:column="25">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="13558" pos:column="5">BSTR</name></type> <name pos:line="13558" pos:column="10">bstrModuleUrl</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="13559" pos:column="5">BSTR</name></type> <name pos:line="13559" pos:column="10">bstrFunction</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="13560" pos:column="5">TEXT_POSITION</name></type> <name pos:line="13560" pos:column="19">posFunctionOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="13561" pos:column="5">BSTR</name></type> <name pos:line="13561" pos:column="10">bstrAddress</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="13562" pos:column="5">BSTR</name></type> <name pos:line="13562" pos:column="10">bstrAddressOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="13563" pos:column="5">BSTR</name></type> <name pos:line="13563" pos:column="10">bstrAddressAbsolute</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="13564" pos:column="9">CONTEXT_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="13567" pos:column="1">EXTERN_C</name> <specifier pos:line="13567" pos:column="10">const</specifier> <name pos:line="13567" pos:column="16">IID</name></type> <name pos:line="13567" pos:column="20">IID_IDebugMemoryContext2</name></decl>;</decl_stmt>

<cpp:if pos:line="13569" pos:column="1">#<cpp:directive pos:line="13569" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13569" pos:column="5">defined</name><argument_list pos:line="13569" pos:column="12">(<argument><expr><name pos:line="13569" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13569" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13569" pos:column="29">!</op:operator><call><name pos:line="13569" pos:column="30">defined</name><argument_list pos:line="13569" pos:column="37">(<argument><expr><name pos:line="13569" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13571" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13571" pos:column="19">(<argument pos:line="13571" pos:column="20">"1ab276dd-f27b-4445-825d-5df0b4a04a3a"</argument>)</argument_list></macro>
    <label><name pos:line="13572" pos:column="5">IDebugMemoryContext2</name> :</label> <expr_stmt><expr pos:line="13572" pos:column="28">public <name pos:line="13572" pos:column="35">IUnknown</name>
    <block pos:line="13573" pos:column="5">{
    <expr pos:line="13574" pos:column="5">public<op:operator pos:line="13574" pos:column="11">:</op:operator>
        virtual <name pos:line="13575" pos:column="17">HRESULT</name> <name pos:line="13575" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13575" pos:column="43">GetName</name><argument_list pos:line="13575" pos:column="50">( 
            <comment type="block" pos:line="13576" pos:column="13">/* [out] */</comment> <argument pos:line="13576" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="13576" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="13576" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="13578" pos:column="9">virtual <name pos:line="13578" pos:column="17">HRESULT</name> <name pos:line="13578" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13578" pos:column="43">GetInfo</name><argument_list pos:line="13578" pos:column="50">( 
            <comment type="block" pos:line="13579" pos:column="13">/* [in] */</comment> <argument pos:line="13579" pos:column="24">CONTEXT_INFO_FIELDS dwFields</argument>,
            <comment type="block" pos:line="13580" pos:column="13">/* [out] */</comment> <argument pos:line="13580" pos:column="25">__RPC__out CONTEXT_INFO *pInfo</argument>)</argument_list></macro> <op:operator pos:line="13580" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="13580" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="13582" pos:column="9">virtual <name pos:line="13582" pos:column="17">HRESULT</name> <name pos:line="13582" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13582" pos:column="43">Add</name><argument_list pos:line="13582" pos:column="46">( 
            <comment type="block" pos:line="13583" pos:column="13">/* [in] */</comment> <argument pos:line="13583" pos:column="24">UINT64 dwCount</argument>,
            <comment type="block" pos:line="13584" pos:column="13">/* [out] */</comment> <argument pos:line="13584" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemCxt</argument>)</argument_list></macro> <op:operator pos:line="13584" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="13584" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="13586" pos:column="9">virtual <name pos:line="13586" pos:column="17">HRESULT</name> <name pos:line="13586" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13586" pos:column="43">Subtract</name><argument_list pos:line="13586" pos:column="51">( 
            <comment type="block" pos:line="13587" pos:column="13">/* [in] */</comment> <argument pos:line="13587" pos:column="24">UINT64 dwCount</argument>,
            <comment type="block" pos:line="13588" pos:column="13">/* [out] */</comment> <argument pos:line="13588" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemCxt</argument>)</argument_list></macro> <op:operator pos:line="13588" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="13588" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="13590" pos:column="9">virtual <name pos:line="13590" pos:column="17">HRESULT</name> <name pos:line="13590" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13590" pos:column="43">Compare</name><argument_list pos:line="13590" pos:column="50">( 
            <comment type="block" pos:line="13591" pos:column="13">/* [in] */</comment> <argument pos:line="13591" pos:column="24">CONTEXT_COMPARE compare</argument>,
            <comment type="block" pos:line="13592" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="13592" pos:column="44">__RPC__in_ecount_part(dwMemoryContextSetLen, dwMemoryContextSetLen) IDebugMemoryContext2 **rgpMemoryContextSet</argument>,
            <comment type="block" pos:line="13593" pos:column="13">/* [in] */</comment> <argument pos:line="13593" pos:column="24">DWORD dwMemoryContextSetLen</argument>,
            <comment type="block" pos:line="13594" pos:column="13">/* [out] */</comment> <argument pos:line="13594" pos:column="25">__RPC__out DWORD *pdwMemoryContext</argument>)</argument_list></macro> <op:operator pos:line="13594" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="13594" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13598" pos:column="1">#<cpp:directive pos:line="13598" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13598" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13600" pos:column="5">typedef <type><struct pos:line="13600" pos:column="13">struct <name pos:line="13600" pos:column="20">IDebugMemoryContext2Vtbl</name>
    <block pos:line="13601" pos:column="5">{<public type="default" pos:line="13601" pos:column="6">
        <function_decl><type><name pos:line="13602" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13604" pos:column="9">HRESULT</name></type> ( <name pos:line="13604" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13604" pos:column="37">*</type:modifier><name pos:line="13604" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13604" pos:column="54">( 
            <param><decl><type><name pos:line="13605" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13605" pos:column="34">*</type:modifier></type> <name pos:line="13605" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="13606" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13606" pos:column="24">__RPC__in</name> <name pos:line="13606" pos:column="34">REFIID</name></type> <name pos:line="13606" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13607" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13608" pos:column="13">__RPC__deref_out</name>  <name pos:line="13608" pos:column="31">void</name> <type:modifier pos:line="13608" pos:column="36">*</type:modifier><type:modifier pos:line="13608" pos:column="37">*</type:modifier></type><name pos:line="13608" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13610" pos:column="9">ULONG</name></type> ( <name pos:line="13610" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13610" pos:column="35">*</type:modifier><name pos:line="13610" pos:column="36">AddRef</name> )<parameter_list pos:line="13610" pos:column="44">( 
            <param><decl><type><name pos:line="13611" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13611" pos:column="34">*</type:modifier></type> <name pos:line="13611" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13613" pos:column="9">ULONG</name></type> ( <name pos:line="13613" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13613" pos:column="35">*</type:modifier><name pos:line="13613" pos:column="36">Release</name> )<parameter_list pos:line="13613" pos:column="45">( 
            <param><decl><type><name pos:line="13614" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13614" pos:column="34">*</type:modifier></type> <name pos:line="13614" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13616" pos:column="9">HRESULT</name></type> ( <name pos:line="13616" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13616" pos:column="37">*</type:modifier><name pos:line="13616" pos:column="38">GetName</name> )<parameter_list pos:line="13616" pos:column="47">( 
            <param><decl><type><name pos:line="13617" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13617" pos:column="34">*</type:modifier></type> <name pos:line="13617" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="13618" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13618" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13618" pos:column="46">BSTR</name> <type:modifier pos:line="13618" pos:column="51">*</type:modifier></type><name pos:line="13618" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13620" pos:column="9">HRESULT</name></type> ( <name pos:line="13620" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13620" pos:column="37">*</type:modifier><name pos:line="13620" pos:column="38">GetInfo</name> )<parameter_list pos:line="13620" pos:column="47">( 
            <param><decl><type><name pos:line="13621" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13621" pos:column="34">*</type:modifier></type> <name pos:line="13621" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="13622" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13622" pos:column="24">CONTEXT_INFO_FIELDS</name></type> <name pos:line="13622" pos:column="44">dwFields</name></decl></param>,
            <comment type="block" pos:line="13623" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13623" pos:column="25">__RPC__out</name> <name pos:line="13623" pos:column="36">CONTEXT_INFO</name> <type:modifier pos:line="13623" pos:column="49">*</type:modifier></type><name pos:line="13623" pos:column="50">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13625" pos:column="9">HRESULT</name></type> ( <name pos:line="13625" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13625" pos:column="37">*</type:modifier><name pos:line="13625" pos:column="38">Add</name> )<parameter_list pos:line="13625" pos:column="43">( 
            <param><decl><type><name pos:line="13626" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13626" pos:column="34">*</type:modifier></type> <name pos:line="13626" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="13627" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13627" pos:column="24">UINT64</name></type> <name pos:line="13627" pos:column="31">dwCount</name></decl></param>,
            <comment type="block" pos:line="13628" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13628" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13628" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13628" pos:column="67">*</type:modifier><type:modifier pos:line="13628" pos:column="68">*</type:modifier></type><name pos:line="13628" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13630" pos:column="9">HRESULT</name></type> ( <name pos:line="13630" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13630" pos:column="37">*</type:modifier><name pos:line="13630" pos:column="38">Subtract</name> )<parameter_list pos:line="13630" pos:column="48">( 
            <param><decl><type><name pos:line="13631" pos:column="13">IDebugMemoryContext2</name> <type:modifier pos:line="13631" pos:column="34">*</type:modifier></type> <name pos:line="13631" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="13632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13632" pos:column="24">UINT64</name></type> <name pos:line="13632" pos:column="31">dwCount</name></decl></param>,
            <comment type="block" pos:line="13633" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13633" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13633" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13633" pos:column="67">*</type:modifier><type:modifier pos:line="13633" pos:column="68">*</type:modifier></type><name pos:line="13633" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13635" pos:column="9">HRESULT</name> <argument_list pos:line="13635" pos:column="17">( <argument pos:line="13635" pos:column="19">STDMETHODCALLTYPE *Compare</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13635" pos:column="47">(</op:operator> 
            <name pos:line="13636" pos:column="13">IDebugMemoryContext2</name> <op:operator pos:line="13636" pos:column="34">*</op:operator> <name pos:line="13636" pos:column="36">This</name><op:operator pos:line="13636" pos:column="40">,</op:operator>
            <comment type="block" pos:line="13637" pos:column="13">/* [in] */</comment> <name pos:line="13637" pos:column="24">CONTEXT_COMPARE</name> <name pos:line="13637" pos:column="40">compare</name><op:operator pos:line="13637" pos:column="47">,</op:operator>
            <comment type="block" pos:line="13638" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="13638" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="13638" pos:column="65">(<argument pos:line="13638" pos:column="66">dwMemoryContextSetLen</argument>, <argument pos:line="13638" pos:column="89">dwMemoryContextSetLen</argument>)</argument_list></macro> <name pos:line="13638" pos:column="112">IDebugMemoryContext2</name> <op:operator pos:line="13638" pos:column="133">*</op:operator><op:operator pos:line="13638" pos:column="134">*</op:operator><name pos:line="13638" pos:column="135">rgpMemoryContextSet</name><op:operator pos:line="13638" pos:column="154">,</op:operator>
            <comment type="block" pos:line="13639" pos:column="13">/* [in] */</comment> <name pos:line="13639" pos:column="24">DWORD</name> <name pos:line="13639" pos:column="30">dwMemoryContextSetLen</name><op:operator pos:line="13639" pos:column="51">,</op:operator>
            <comment type="block" pos:line="13640" pos:column="13">/* [out] */</comment> <name pos:line="13640" pos:column="25">__RPC__out</name> <name pos:line="13640" pos:column="36">DWORD</name> <op:operator pos:line="13640" pos:column="42">*</op:operator><name pos:line="13640" pos:column="43">pdwMemoryContext</name><op:operator pos:line="13640" pos:column="59">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="13642" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13643" pos:column="7">IDebugMemoryContext2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13645" pos:column="5">interface</name></type> <name pos:line="13645" pos:column="15">IDebugMemoryContext2</name>
    <argument_list pos:line="13646" pos:column="5">{
        <argument><expr><name pos:line="13647" pos:column="9">CONST_VTBL</name> struct <name pos:line="13647" pos:column="27">IDebugMemoryContext2Vtbl</name> <op:operator pos:line="13647" pos:column="52">*</op:operator><name pos:line="13647" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13652" pos:column="1">#<cpp:directive pos:line="13652" pos:column="2">ifdef</cpp:directive> <name pos:line="13652" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13655" pos:column="1">#<cpp:directive pos:line="13655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13655" pos:column="9">IDebugMemoryContext2_QueryInterface</name><parameter_list pos:line="13655" pos:column="44">(<param><type><name pos:line="13655" pos:column="45">This</name></type></param>,<param><type><name pos:line="13655" pos:column="50">riid</name></type></param>,<param><type><name pos:line="13655" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13656" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13658" pos:column="1">#<cpp:directive pos:line="13658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13658" pos:column="9">IDebugMemoryContext2_AddRef</name><parameter_list pos:line="13658" pos:column="36">(<param><type><name pos:line="13658" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13659" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13661" pos:column="1">#<cpp:directive pos:line="13661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13661" pos:column="9">IDebugMemoryContext2_Release</name><parameter_list pos:line="13661" pos:column="37">(<param><type><name pos:line="13661" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13662" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13665" pos:column="1">#<cpp:directive pos:line="13665" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13665" pos:column="9">IDebugMemoryContext2_GetName</name><parameter_list pos:line="13665" pos:column="37">(<param><type><name pos:line="13665" pos:column="38">This</name></type></param>,<param><type><name pos:line="13665" pos:column="43">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13666" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="13668" pos:column="1">#<cpp:directive pos:line="13668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13668" pos:column="9">IDebugMemoryContext2_GetInfo</name><parameter_list pos:line="13668" pos:column="37">(<param><type><name pos:line="13668" pos:column="38">This</name></type></param>,<param><type><name pos:line="13668" pos:column="43">dwFields</name></type></param>,<param><type><name pos:line="13668" pos:column="52">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13669" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13671" pos:column="1">#<cpp:directive pos:line="13671" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13671" pos:column="9">IDebugMemoryContext2_Add</name><parameter_list pos:line="13671" pos:column="33">(<param><type><name pos:line="13671" pos:column="34">This</name></type></param>,<param><type><name pos:line="13671" pos:column="39">dwCount</name></type></param>,<param><type><name pos:line="13671" pos:column="47">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13672" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add(This,dwCount,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13674" pos:column="1">#<cpp:directive pos:line="13674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13674" pos:column="9">IDebugMemoryContext2_Subtract</name><parameter_list pos:line="13674" pos:column="38">(<param><type><name pos:line="13674" pos:column="39">This</name></type></param>,<param><type><name pos:line="13674" pos:column="44">dwCount</name></type></param>,<param><type><name pos:line="13674" pos:column="52">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13675" pos:column="5">( (This)-&gt;lpVtbl -&gt; Subtract(This,dwCount,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13677" pos:column="1">#<cpp:directive pos:line="13677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13677" pos:column="9">IDebugMemoryContext2_Compare</name><parameter_list pos:line="13677" pos:column="37">(<param><type><name pos:line="13677" pos:column="38">This</name></type></param>,<param><type><name pos:line="13677" pos:column="43">compare</name></type></param>,<param><type><name pos:line="13677" pos:column="51">rgpMemoryContextSet</name></type></param>,<param><type><name pos:line="13677" pos:column="71">dwMemoryContextSetLen</name></type></param>,<param><type><name pos:line="13677" pos:column="93">pdwMemoryContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13678" pos:column="5">( (This)-&gt;lpVtbl -&gt; Compare(This,compare,rgpMemoryContextSet,dwMemoryContextSetLen,pdwMemoryContext) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13680" pos:column="1">#<cpp:directive pos:line="13680" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13680" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13683" pos:column="1">#<cpp:directive pos:line="13683" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13683" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13688" pos:column="1">#<cpp:directive pos:line="13688" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13688" pos:column="9">/* __IDebugMemoryContext2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13691" pos:column="1">#<cpp:directive pos:line="13691" pos:column="2">ifndef</cpp:directive> <name pos:line="13691" pos:column="9">__IDebugCodeContext2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13692" pos:column="1">#<cpp:directive pos:line="13692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13692" pos:column="9">__IDebugCodeContext2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13694" pos:column="1">/* interface IDebugCodeContext2 */</comment>
<comment type="block" pos:line="13695" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="13698" pos:column="1">EXTERN_C</name> <specifier pos:line="13698" pos:column="10">const</specifier> <name pos:line="13698" pos:column="16">IID</name></type> <name pos:line="13698" pos:column="20">IID_IDebugCodeContext2</name></decl>;</decl_stmt>

<cpp:if pos:line="13700" pos:column="1">#<cpp:directive pos:line="13700" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13700" pos:column="5">defined</name><argument_list pos:line="13700" pos:column="12">(<argument><expr><name pos:line="13700" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13700" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13700" pos:column="29">!</op:operator><call><name pos:line="13700" pos:column="30">defined</name><argument_list pos:line="13700" pos:column="37">(<argument><expr><name pos:line="13700" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13702" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13702" pos:column="19">(<argument pos:line="13702" pos:column="20">"ac17b76b-2b09-419a-ad5f-7d7402da8875"</argument>)</argument_list></macro>
    <label><name pos:line="13703" pos:column="5">IDebugCodeContext2</name> :</label> <expr_stmt><expr pos:line="13703" pos:column="26">public <name pos:line="13703" pos:column="33">IDebugMemoryContext2</name>
    <block pos:line="13704" pos:column="5">{
    <expr pos:line="13705" pos:column="5">public<op:operator pos:line="13705" pos:column="11">:</op:operator>
        virtual <name pos:line="13706" pos:column="17">HRESULT</name> <name pos:line="13706" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13706" pos:column="43">GetDocumentContext</name><argument_list pos:line="13706" pos:column="61">( 
            <comment type="block" pos:line="13707" pos:column="13">/* [out] */</comment> <argument pos:line="13707" pos:column="25">__RPC__deref_out_opt IDebugDocumentContext2 **ppSrcCxt</argument>)</argument_list></macro> <op:operator pos:line="13707" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="13707" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="13709" pos:column="9">virtual <name pos:line="13709" pos:column="17">HRESULT</name> <name pos:line="13709" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13709" pos:column="43">GetLanguageInfo</name><argument_list pos:line="13709" pos:column="58">( 
            <comment type="block" pos:line="13710" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="13710" pos:column="35">__RPC__deref_opt_inout_opt BSTR *pbstrLanguage</argument>,
            <comment type="block" pos:line="13711" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="13711" pos:column="35">__RPC__inout_opt GUID *pguidLanguage</argument>)</argument_list></macro> <op:operator pos:line="13711" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="13711" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13715" pos:column="1">#<cpp:directive pos:line="13715" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13715" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13717" pos:column="5">typedef <type><struct pos:line="13717" pos:column="13">struct <name pos:line="13717" pos:column="20">IDebugCodeContext2Vtbl</name>
    <block pos:line="13718" pos:column="5">{<public type="default" pos:line="13718" pos:column="6">
        <function_decl><type><name pos:line="13719" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13721" pos:column="9">HRESULT</name></type> ( <name pos:line="13721" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13721" pos:column="37">*</type:modifier><name pos:line="13721" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13721" pos:column="54">( 
            <param><decl><type><name pos:line="13722" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13722" pos:column="32">*</type:modifier></type> <name pos:line="13722" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13723" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13723" pos:column="24">__RPC__in</name> <name pos:line="13723" pos:column="34">REFIID</name></type> <name pos:line="13723" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13724" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13725" pos:column="13">__RPC__deref_out</name>  <name pos:line="13725" pos:column="31">void</name> <type:modifier pos:line="13725" pos:column="36">*</type:modifier><type:modifier pos:line="13725" pos:column="37">*</type:modifier></type><name pos:line="13725" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13727" pos:column="9">ULONG</name></type> ( <name pos:line="13727" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13727" pos:column="35">*</type:modifier><name pos:line="13727" pos:column="36">AddRef</name> )<parameter_list pos:line="13727" pos:column="44">( 
            <param><decl><type><name pos:line="13728" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13728" pos:column="32">*</type:modifier></type> <name pos:line="13728" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13730" pos:column="9">ULONG</name></type> ( <name pos:line="13730" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13730" pos:column="35">*</type:modifier><name pos:line="13730" pos:column="36">Release</name> )<parameter_list pos:line="13730" pos:column="45">( 
            <param><decl><type><name pos:line="13731" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13731" pos:column="32">*</type:modifier></type> <name pos:line="13731" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13733" pos:column="9">HRESULT</name></type> ( <name pos:line="13733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13733" pos:column="37">*</type:modifier><name pos:line="13733" pos:column="38">GetName</name> )<parameter_list pos:line="13733" pos:column="47">( 
            <param><decl><type><name pos:line="13734" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13734" pos:column="32">*</type:modifier></type> <name pos:line="13734" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13735" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13735" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13735" pos:column="46">BSTR</name> <type:modifier pos:line="13735" pos:column="51">*</type:modifier></type><name pos:line="13735" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13737" pos:column="9">HRESULT</name></type> ( <name pos:line="13737" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13737" pos:column="37">*</type:modifier><name pos:line="13737" pos:column="38">GetInfo</name> )<parameter_list pos:line="13737" pos:column="47">( 
            <param><decl><type><name pos:line="13738" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13738" pos:column="32">*</type:modifier></type> <name pos:line="13738" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13739" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13739" pos:column="24">CONTEXT_INFO_FIELDS</name></type> <name pos:line="13739" pos:column="44">dwFields</name></decl></param>,
            <comment type="block" pos:line="13740" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13740" pos:column="25">__RPC__out</name> <name pos:line="13740" pos:column="36">CONTEXT_INFO</name> <type:modifier pos:line="13740" pos:column="49">*</type:modifier></type><name pos:line="13740" pos:column="50">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13742" pos:column="9">HRESULT</name></type> ( <name pos:line="13742" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13742" pos:column="37">*</type:modifier><name pos:line="13742" pos:column="38">Add</name> )<parameter_list pos:line="13742" pos:column="43">( 
            <param><decl><type><name pos:line="13743" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13743" pos:column="32">*</type:modifier></type> <name pos:line="13743" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13744" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13744" pos:column="24">UINT64</name></type> <name pos:line="13744" pos:column="31">dwCount</name></decl></param>,
            <comment type="block" pos:line="13745" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13745" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13745" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13745" pos:column="67">*</type:modifier><type:modifier pos:line="13745" pos:column="68">*</type:modifier></type><name pos:line="13745" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13747" pos:column="9">HRESULT</name></type> ( <name pos:line="13747" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13747" pos:column="37">*</type:modifier><name pos:line="13747" pos:column="38">Subtract</name> )<parameter_list pos:line="13747" pos:column="48">( 
            <param><decl><type><name pos:line="13748" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13748" pos:column="32">*</type:modifier></type> <name pos:line="13748" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13749" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13749" pos:column="24">UINT64</name></type> <name pos:line="13749" pos:column="31">dwCount</name></decl></param>,
            <comment type="block" pos:line="13750" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13750" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13750" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13750" pos:column="67">*</type:modifier><type:modifier pos:line="13750" pos:column="68">*</type:modifier></type><name pos:line="13750" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13752" pos:column="9">HRESULT</name> <argument_list pos:line="13752" pos:column="17">( <argument pos:line="13752" pos:column="19">STDMETHODCALLTYPE *Compare</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13752" pos:column="47">(</op:operator> 
            <name pos:line="13753" pos:column="13">IDebugCodeContext2</name> <op:operator pos:line="13753" pos:column="32">*</op:operator> <name pos:line="13753" pos:column="34">This</name><op:operator pos:line="13753" pos:column="38">,</op:operator>
            <comment type="block" pos:line="13754" pos:column="13">/* [in] */</comment> <name pos:line="13754" pos:column="24">CONTEXT_COMPARE</name> <name pos:line="13754" pos:column="40">compare</name><op:operator pos:line="13754" pos:column="47">,</op:operator>
            <comment type="block" pos:line="13755" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="13755" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="13755" pos:column="65">(<argument pos:line="13755" pos:column="66">dwMemoryContextSetLen</argument>, <argument pos:line="13755" pos:column="89">dwMemoryContextSetLen</argument>)</argument_list></macro> <name pos:line="13755" pos:column="112">IDebugMemoryContext2</name> <op:operator pos:line="13755" pos:column="133">*</op:operator><op:operator pos:line="13755" pos:column="134">*</op:operator><name pos:line="13755" pos:column="135">rgpMemoryContextSet</name><op:operator pos:line="13755" pos:column="154">,</op:operator>
            <comment type="block" pos:line="13756" pos:column="13">/* [in] */</comment> <name pos:line="13756" pos:column="24">DWORD</name> <name pos:line="13756" pos:column="30">dwMemoryContextSetLen</name><op:operator pos:line="13756" pos:column="51">,</op:operator>
            <comment type="block" pos:line="13757" pos:column="13">/* [out] */</comment> <name pos:line="13757" pos:column="25">__RPC__out</name> <name pos:line="13757" pos:column="36">DWORD</name> <op:operator pos:line="13757" pos:column="42">*</op:operator><name pos:line="13757" pos:column="43">pdwMemoryContext</name><op:operator pos:line="13757" pos:column="59">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="13759" pos:column="9">HRESULT</name></type> ( <name pos:line="13759" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13759" pos:column="37">*</type:modifier><name pos:line="13759" pos:column="38">GetDocumentContext</name> )<parameter_list pos:line="13759" pos:column="58">( 
            <param><decl><type><name pos:line="13760" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13760" pos:column="32">*</type:modifier></type> <name pos:line="13760" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13761" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13761" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13761" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="13761" pos:column="69">*</type:modifier><type:modifier pos:line="13761" pos:column="70">*</type:modifier></type><name pos:line="13761" pos:column="71">ppSrcCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13763" pos:column="9">HRESULT</name></type> ( <name pos:line="13763" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13763" pos:column="37">*</type:modifier><name pos:line="13763" pos:column="38">GetLanguageInfo</name> )<parameter_list pos:line="13763" pos:column="55">( 
            <param><decl><type><name pos:line="13764" pos:column="13">IDebugCodeContext2</name> <type:modifier pos:line="13764" pos:column="32">*</type:modifier></type> <name pos:line="13764" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13765" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13765" pos:column="35">__RPC__deref_opt_inout_opt</name> <name pos:line="13765" pos:column="62">BSTR</name> <type:modifier pos:line="13765" pos:column="67">*</type:modifier></type><name pos:line="13765" pos:column="68">pbstrLanguage</name></decl></param>,
            <comment type="block" pos:line="13766" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13766" pos:column="35">__RPC__inout_opt</name> <name pos:line="13766" pos:column="52">GUID</name> <type:modifier pos:line="13766" pos:column="57">*</type:modifier></type><name pos:line="13766" pos:column="58">pguidLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13768" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13769" pos:column="7">IDebugCodeContext2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13771" pos:column="5">interface</name></type> <name pos:line="13771" pos:column="15">IDebugCodeContext2</name>
    <argument_list pos:line="13772" pos:column="5">{
        <argument><expr><name pos:line="13773" pos:column="9">CONST_VTBL</name> struct <name pos:line="13773" pos:column="27">IDebugCodeContext2Vtbl</name> <op:operator pos:line="13773" pos:column="50">*</op:operator><name pos:line="13773" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13778" pos:column="1">#<cpp:directive pos:line="13778" pos:column="2">ifdef</cpp:directive> <name pos:line="13778" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13781" pos:column="1">#<cpp:directive pos:line="13781" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13781" pos:column="9">IDebugCodeContext2_QueryInterface</name><parameter_list pos:line="13781" pos:column="42">(<param><type><name pos:line="13781" pos:column="43">This</name></type></param>,<param><type><name pos:line="13781" pos:column="48">riid</name></type></param>,<param><type><name pos:line="13781" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13782" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13784" pos:column="1">#<cpp:directive pos:line="13784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13784" pos:column="9">IDebugCodeContext2_AddRef</name><parameter_list pos:line="13784" pos:column="34">(<param><type><name pos:line="13784" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13785" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13787" pos:column="1">#<cpp:directive pos:line="13787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13787" pos:column="9">IDebugCodeContext2_Release</name><parameter_list pos:line="13787" pos:column="35">(<param><type><name pos:line="13787" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13788" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13791" pos:column="1">#<cpp:directive pos:line="13791" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13791" pos:column="9">IDebugCodeContext2_GetName</name><parameter_list pos:line="13791" pos:column="35">(<param><type><name pos:line="13791" pos:column="36">This</name></type></param>,<param><type><name pos:line="13791" pos:column="41">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13792" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="13794" pos:column="1">#<cpp:directive pos:line="13794" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13794" pos:column="9">IDebugCodeContext2_GetInfo</name><parameter_list pos:line="13794" pos:column="35">(<param><type><name pos:line="13794" pos:column="36">This</name></type></param>,<param><type><name pos:line="13794" pos:column="41">dwFields</name></type></param>,<param><type><name pos:line="13794" pos:column="50">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13795" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13797" pos:column="1">#<cpp:directive pos:line="13797" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13797" pos:column="9">IDebugCodeContext2_Add</name><parameter_list pos:line="13797" pos:column="31">(<param><type><name pos:line="13797" pos:column="32">This</name></type></param>,<param><type><name pos:line="13797" pos:column="37">dwCount</name></type></param>,<param><type><name pos:line="13797" pos:column="45">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13798" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add(This,dwCount,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13800" pos:column="1">#<cpp:directive pos:line="13800" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13800" pos:column="9">IDebugCodeContext2_Subtract</name><parameter_list pos:line="13800" pos:column="36">(<param><type><name pos:line="13800" pos:column="37">This</name></type></param>,<param><type><name pos:line="13800" pos:column="42">dwCount</name></type></param>,<param><type><name pos:line="13800" pos:column="50">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13801" pos:column="5">( (This)-&gt;lpVtbl -&gt; Subtract(This,dwCount,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13803" pos:column="1">#<cpp:directive pos:line="13803" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13803" pos:column="9">IDebugCodeContext2_Compare</name><parameter_list pos:line="13803" pos:column="35">(<param><type><name pos:line="13803" pos:column="36">This</name></type></param>,<param><type><name pos:line="13803" pos:column="41">compare</name></type></param>,<param><type><name pos:line="13803" pos:column="49">rgpMemoryContextSet</name></type></param>,<param><type><name pos:line="13803" pos:column="69">dwMemoryContextSetLen</name></type></param>,<param><type><name pos:line="13803" pos:column="91">pdwMemoryContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13804" pos:column="5">( (This)-&gt;lpVtbl -&gt; Compare(This,compare,rgpMemoryContextSet,dwMemoryContextSetLen,pdwMemoryContext) )</cpp:value></cpp:define> 


<cpp:define pos:line="13807" pos:column="1">#<cpp:directive pos:line="13807" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13807" pos:column="9">IDebugCodeContext2_GetDocumentContext</name><parameter_list pos:line="13807" pos:column="46">(<param><type><name pos:line="13807" pos:column="47">This</name></type></param>,<param><type><name pos:line="13807" pos:column="52">ppSrcCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13808" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentContext(This,ppSrcCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13810" pos:column="1">#<cpp:directive pos:line="13810" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13810" pos:column="9">IDebugCodeContext2_GetLanguageInfo</name><parameter_list pos:line="13810" pos:column="43">(<param><type><name pos:line="13810" pos:column="44">This</name></type></param>,<param><type><name pos:line="13810" pos:column="49">pbstrLanguage</name></type></param>,<param><type><name pos:line="13810" pos:column="63">pguidLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13811" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguageInfo(This,pbstrLanguage,pguidLanguage) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13813" pos:column="1">#<cpp:directive pos:line="13813" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13813" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13816" pos:column="1">#<cpp:directive pos:line="13816" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13816" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13821" pos:column="1">#<cpp:directive pos:line="13821" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13821" pos:column="9">/* __IDebugCodeContext2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13824" pos:column="1">#<cpp:directive pos:line="13824" pos:column="2">ifndef</cpp:directive> <name pos:line="13824" pos:column="9">__IDebugCodeContext3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13825" pos:column="1">#<cpp:directive pos:line="13825" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13825" pos:column="9">__IDebugCodeContext3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13827" pos:column="1">/* interface IDebugCodeContext3 */</comment>
<comment type="block" pos:line="13828" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="13831" pos:column="1">EXTERN_C</name> <specifier pos:line="13831" pos:column="10">const</specifier> <name pos:line="13831" pos:column="16">IID</name></type> <name pos:line="13831" pos:column="20">IID_IDebugCodeContext3</name></decl>;</decl_stmt>

<cpp:if pos:line="13833" pos:column="1">#<cpp:directive pos:line="13833" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13833" pos:column="5">defined</name><argument_list pos:line="13833" pos:column="12">(<argument><expr><name pos:line="13833" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13833" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13833" pos:column="29">!</op:operator><call><name pos:line="13833" pos:column="30">defined</name><argument_list pos:line="13833" pos:column="37">(<argument><expr><name pos:line="13833" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13835" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13835" pos:column="19">(<argument pos:line="13835" pos:column="20">"17c106b9-0925-42f5-ae32-1fc019649c10"</argument>)</argument_list></macro>
    <label><name pos:line="13836" pos:column="5">IDebugCodeContext3</name> :</label> <expr_stmt><expr pos:line="13836" pos:column="26">public <name pos:line="13836" pos:column="33">IDebugCodeContext2</name>
    <block pos:line="13837" pos:column="5">{
    <expr pos:line="13838" pos:column="5">public<op:operator pos:line="13838" pos:column="11">:</op:operator>
        virtual <name pos:line="13839" pos:column="17">HRESULT</name> <name pos:line="13839" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13839" pos:column="43">GetModule</name><argument_list pos:line="13839" pos:column="52">( 
            <comment type="block" pos:line="13840" pos:column="13">/* [out] */</comment> <argument pos:line="13840" pos:column="25">__RPC__deref_out_opt IDebugModule2 **ppModule</argument>)</argument_list></macro> <op:operator pos:line="13840" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="13840" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="13842" pos:column="9">virtual <name pos:line="13842" pos:column="17">HRESULT</name> <name pos:line="13842" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13842" pos:column="43">GetProcess</name><argument_list pos:line="13842" pos:column="53">( 
            <comment type="block" pos:line="13843" pos:column="13">/* [out] */</comment> <argument pos:line="13843" pos:column="25">__RPC__deref_out_opt IDebugProcess2 **ppProcess</argument>)</argument_list></macro> <op:operator pos:line="13843" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="13843" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13847" pos:column="1">#<cpp:directive pos:line="13847" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13847" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13849" pos:column="5">typedef <type><struct pos:line="13849" pos:column="13">struct <name pos:line="13849" pos:column="20">IDebugCodeContext3Vtbl</name>
    <block pos:line="13850" pos:column="5">{<public type="default" pos:line="13850" pos:column="6">
        <function_decl><type><name pos:line="13851" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13853" pos:column="9">HRESULT</name></type> ( <name pos:line="13853" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13853" pos:column="37">*</type:modifier><name pos:line="13853" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13853" pos:column="54">( 
            <param><decl><type><name pos:line="13854" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13854" pos:column="32">*</type:modifier></type> <name pos:line="13854" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13855" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13855" pos:column="24">__RPC__in</name> <name pos:line="13855" pos:column="34">REFIID</name></type> <name pos:line="13855" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13856" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13857" pos:column="13">__RPC__deref_out</name>  <name pos:line="13857" pos:column="31">void</name> <type:modifier pos:line="13857" pos:column="36">*</type:modifier><type:modifier pos:line="13857" pos:column="37">*</type:modifier></type><name pos:line="13857" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13859" pos:column="9">ULONG</name></type> ( <name pos:line="13859" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13859" pos:column="35">*</type:modifier><name pos:line="13859" pos:column="36">AddRef</name> )<parameter_list pos:line="13859" pos:column="44">( 
            <param><decl><type><name pos:line="13860" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13860" pos:column="32">*</type:modifier></type> <name pos:line="13860" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13862" pos:column="9">ULONG</name></type> ( <name pos:line="13862" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13862" pos:column="35">*</type:modifier><name pos:line="13862" pos:column="36">Release</name> )<parameter_list pos:line="13862" pos:column="45">( 
            <param><decl><type><name pos:line="13863" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13863" pos:column="32">*</type:modifier></type> <name pos:line="13863" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13865" pos:column="9">HRESULT</name></type> ( <name pos:line="13865" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13865" pos:column="37">*</type:modifier><name pos:line="13865" pos:column="38">GetName</name> )<parameter_list pos:line="13865" pos:column="47">( 
            <param><decl><type><name pos:line="13866" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13866" pos:column="32">*</type:modifier></type> <name pos:line="13866" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13867" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13867" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13867" pos:column="46">BSTR</name> <type:modifier pos:line="13867" pos:column="51">*</type:modifier></type><name pos:line="13867" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13869" pos:column="9">HRESULT</name></type> ( <name pos:line="13869" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13869" pos:column="37">*</type:modifier><name pos:line="13869" pos:column="38">GetInfo</name> )<parameter_list pos:line="13869" pos:column="47">( 
            <param><decl><type><name pos:line="13870" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13870" pos:column="32">*</type:modifier></type> <name pos:line="13870" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13871" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13871" pos:column="24">CONTEXT_INFO_FIELDS</name></type> <name pos:line="13871" pos:column="44">dwFields</name></decl></param>,
            <comment type="block" pos:line="13872" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13872" pos:column="25">__RPC__out</name> <name pos:line="13872" pos:column="36">CONTEXT_INFO</name> <type:modifier pos:line="13872" pos:column="49">*</type:modifier></type><name pos:line="13872" pos:column="50">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13874" pos:column="9">HRESULT</name></type> ( <name pos:line="13874" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13874" pos:column="37">*</type:modifier><name pos:line="13874" pos:column="38">Add</name> )<parameter_list pos:line="13874" pos:column="43">( 
            <param><decl><type><name pos:line="13875" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13875" pos:column="32">*</type:modifier></type> <name pos:line="13875" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13876" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13876" pos:column="24">UINT64</name></type> <name pos:line="13876" pos:column="31">dwCount</name></decl></param>,
            <comment type="block" pos:line="13877" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13877" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13877" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13877" pos:column="67">*</type:modifier><type:modifier pos:line="13877" pos:column="68">*</type:modifier></type><name pos:line="13877" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13879" pos:column="9">HRESULT</name></type> ( <name pos:line="13879" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13879" pos:column="37">*</type:modifier><name pos:line="13879" pos:column="38">Subtract</name> )<parameter_list pos:line="13879" pos:column="48">( 
            <param><decl><type><name pos:line="13880" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13880" pos:column="32">*</type:modifier></type> <name pos:line="13880" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13881" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13881" pos:column="24">UINT64</name></type> <name pos:line="13881" pos:column="31">dwCount</name></decl></param>,
            <comment type="block" pos:line="13882" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13882" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13882" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="13882" pos:column="67">*</type:modifier><type:modifier pos:line="13882" pos:column="68">*</type:modifier></type><name pos:line="13882" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13884" pos:column="9">HRESULT</name> <argument_list pos:line="13884" pos:column="17">( <argument pos:line="13884" pos:column="19">STDMETHODCALLTYPE *Compare</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13884" pos:column="47">(</op:operator> 
            <name pos:line="13885" pos:column="13">IDebugCodeContext3</name> <op:operator pos:line="13885" pos:column="32">*</op:operator> <name pos:line="13885" pos:column="34">This</name><op:operator pos:line="13885" pos:column="38">,</op:operator>
            <comment type="block" pos:line="13886" pos:column="13">/* [in] */</comment> <name pos:line="13886" pos:column="24">CONTEXT_COMPARE</name> <name pos:line="13886" pos:column="40">compare</name><op:operator pos:line="13886" pos:column="47">,</op:operator>
            <comment type="block" pos:line="13887" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="13887" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="13887" pos:column="65">(<argument pos:line="13887" pos:column="66">dwMemoryContextSetLen</argument>, <argument pos:line="13887" pos:column="89">dwMemoryContextSetLen</argument>)</argument_list></macro> <name pos:line="13887" pos:column="112">IDebugMemoryContext2</name> <op:operator pos:line="13887" pos:column="133">*</op:operator><op:operator pos:line="13887" pos:column="134">*</op:operator><name pos:line="13887" pos:column="135">rgpMemoryContextSet</name><op:operator pos:line="13887" pos:column="154">,</op:operator>
            <comment type="block" pos:line="13888" pos:column="13">/* [in] */</comment> <name pos:line="13888" pos:column="24">DWORD</name> <name pos:line="13888" pos:column="30">dwMemoryContextSetLen</name><op:operator pos:line="13888" pos:column="51">,</op:operator>
            <comment type="block" pos:line="13889" pos:column="13">/* [out] */</comment> <name pos:line="13889" pos:column="25">__RPC__out</name> <name pos:line="13889" pos:column="36">DWORD</name> <op:operator pos:line="13889" pos:column="42">*</op:operator><name pos:line="13889" pos:column="43">pdwMemoryContext</name><op:operator pos:line="13889" pos:column="59">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="13891" pos:column="9">HRESULT</name></type> ( <name pos:line="13891" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13891" pos:column="37">*</type:modifier><name pos:line="13891" pos:column="38">GetDocumentContext</name> )<parameter_list pos:line="13891" pos:column="58">( 
            <param><decl><type><name pos:line="13892" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13892" pos:column="32">*</type:modifier></type> <name pos:line="13892" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13893" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13893" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13893" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="13893" pos:column="69">*</type:modifier><type:modifier pos:line="13893" pos:column="70">*</type:modifier></type><name pos:line="13893" pos:column="71">ppSrcCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13895" pos:column="9">HRESULT</name></type> ( <name pos:line="13895" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13895" pos:column="37">*</type:modifier><name pos:line="13895" pos:column="38">GetLanguageInfo</name> )<parameter_list pos:line="13895" pos:column="55">( 
            <param><decl><type><name pos:line="13896" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13896" pos:column="32">*</type:modifier></type> <name pos:line="13896" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13897" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13897" pos:column="35">__RPC__deref_opt_inout_opt</name> <name pos:line="13897" pos:column="62">BSTR</name> <type:modifier pos:line="13897" pos:column="67">*</type:modifier></type><name pos:line="13897" pos:column="68">pbstrLanguage</name></decl></param>,
            <comment type="block" pos:line="13898" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="13898" pos:column="35">__RPC__inout_opt</name> <name pos:line="13898" pos:column="52">GUID</name> <type:modifier pos:line="13898" pos:column="57">*</type:modifier></type><name pos:line="13898" pos:column="58">pguidLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13900" pos:column="9">HRESULT</name></type> ( <name pos:line="13900" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13900" pos:column="37">*</type:modifier><name pos:line="13900" pos:column="38">GetModule</name> )<parameter_list pos:line="13900" pos:column="49">( 
            <param><decl><type><name pos:line="13901" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13901" pos:column="32">*</type:modifier></type> <name pos:line="13901" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13902" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13902" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13902" pos:column="46">IDebugModule2</name> <type:modifier pos:line="13902" pos:column="60">*</type:modifier><type:modifier pos:line="13902" pos:column="61">*</type:modifier></type><name pos:line="13902" pos:column="62">ppModule</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13904" pos:column="9">HRESULT</name></type> ( <name pos:line="13904" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13904" pos:column="37">*</type:modifier><name pos:line="13904" pos:column="38">GetProcess</name> )<parameter_list pos:line="13904" pos:column="50">( 
            <param><decl><type><name pos:line="13905" pos:column="13">IDebugCodeContext3</name> <type:modifier pos:line="13905" pos:column="32">*</type:modifier></type> <name pos:line="13905" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13906" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13906" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13906" pos:column="46">IDebugProcess2</name> <type:modifier pos:line="13906" pos:column="61">*</type:modifier><type:modifier pos:line="13906" pos:column="62">*</type:modifier></type><name pos:line="13906" pos:column="63">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13908" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13909" pos:column="7">IDebugCodeContext3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13911" pos:column="5">interface</name></type> <name pos:line="13911" pos:column="15">IDebugCodeContext3</name>
    <argument_list pos:line="13912" pos:column="5">{
        <argument><expr><name pos:line="13913" pos:column="9">CONST_VTBL</name> struct <name pos:line="13913" pos:column="27">IDebugCodeContext3Vtbl</name> <op:operator pos:line="13913" pos:column="50">*</op:operator><name pos:line="13913" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13918" pos:column="1">#<cpp:directive pos:line="13918" pos:column="2">ifdef</cpp:directive> <name pos:line="13918" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13921" pos:column="1">#<cpp:directive pos:line="13921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13921" pos:column="9">IDebugCodeContext3_QueryInterface</name><parameter_list pos:line="13921" pos:column="42">(<param><type><name pos:line="13921" pos:column="43">This</name></type></param>,<param><type><name pos:line="13921" pos:column="48">riid</name></type></param>,<param><type><name pos:line="13921" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13922" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13924" pos:column="1">#<cpp:directive pos:line="13924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13924" pos:column="9">IDebugCodeContext3_AddRef</name><parameter_list pos:line="13924" pos:column="34">(<param><type><name pos:line="13924" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13925" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13927" pos:column="1">#<cpp:directive pos:line="13927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13927" pos:column="9">IDebugCodeContext3_Release</name><parameter_list pos:line="13927" pos:column="35">(<param><type><name pos:line="13927" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13928" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13931" pos:column="1">#<cpp:directive pos:line="13931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13931" pos:column="9">IDebugCodeContext3_GetName</name><parameter_list pos:line="13931" pos:column="35">(<param><type><name pos:line="13931" pos:column="36">This</name></type></param>,<param><type><name pos:line="13931" pos:column="41">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13932" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="13934" pos:column="1">#<cpp:directive pos:line="13934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13934" pos:column="9">IDebugCodeContext3_GetInfo</name><parameter_list pos:line="13934" pos:column="35">(<param><type><name pos:line="13934" pos:column="36">This</name></type></param>,<param><type><name pos:line="13934" pos:column="41">dwFields</name></type></param>,<param><type><name pos:line="13934" pos:column="50">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13935" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13937" pos:column="1">#<cpp:directive pos:line="13937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13937" pos:column="9">IDebugCodeContext3_Add</name><parameter_list pos:line="13937" pos:column="31">(<param><type><name pos:line="13937" pos:column="32">This</name></type></param>,<param><type><name pos:line="13937" pos:column="37">dwCount</name></type></param>,<param><type><name pos:line="13937" pos:column="45">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13938" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add(This,dwCount,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13940" pos:column="1">#<cpp:directive pos:line="13940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13940" pos:column="9">IDebugCodeContext3_Subtract</name><parameter_list pos:line="13940" pos:column="36">(<param><type><name pos:line="13940" pos:column="37">This</name></type></param>,<param><type><name pos:line="13940" pos:column="42">dwCount</name></type></param>,<param><type><name pos:line="13940" pos:column="50">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13941" pos:column="5">( (This)-&gt;lpVtbl -&gt; Subtract(This,dwCount,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13943" pos:column="1">#<cpp:directive pos:line="13943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13943" pos:column="9">IDebugCodeContext3_Compare</name><parameter_list pos:line="13943" pos:column="35">(<param><type><name pos:line="13943" pos:column="36">This</name></type></param>,<param><type><name pos:line="13943" pos:column="41">compare</name></type></param>,<param><type><name pos:line="13943" pos:column="49">rgpMemoryContextSet</name></type></param>,<param><type><name pos:line="13943" pos:column="69">dwMemoryContextSetLen</name></type></param>,<param><type><name pos:line="13943" pos:column="91">pdwMemoryContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13944" pos:column="5">( (This)-&gt;lpVtbl -&gt; Compare(This,compare,rgpMemoryContextSet,dwMemoryContextSetLen,pdwMemoryContext) )</cpp:value></cpp:define> 


<cpp:define pos:line="13947" pos:column="1">#<cpp:directive pos:line="13947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13947" pos:column="9">IDebugCodeContext3_GetDocumentContext</name><parameter_list pos:line="13947" pos:column="46">(<param><type><name pos:line="13947" pos:column="47">This</name></type></param>,<param><type><name pos:line="13947" pos:column="52">ppSrcCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13948" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentContext(This,ppSrcCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="13950" pos:column="1">#<cpp:directive pos:line="13950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13950" pos:column="9">IDebugCodeContext3_GetLanguageInfo</name><parameter_list pos:line="13950" pos:column="43">(<param><type><name pos:line="13950" pos:column="44">This</name></type></param>,<param><type><name pos:line="13950" pos:column="49">pbstrLanguage</name></type></param>,<param><type><name pos:line="13950" pos:column="63">pguidLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13951" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguageInfo(This,pbstrLanguage,pguidLanguage) )</cpp:value></cpp:define> 


<cpp:define pos:line="13954" pos:column="1">#<cpp:directive pos:line="13954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13954" pos:column="9">IDebugCodeContext3_GetModule</name><parameter_list pos:line="13954" pos:column="37">(<param><type><name pos:line="13954" pos:column="38">This</name></type></param>,<param><type><name pos:line="13954" pos:column="43">ppModule</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13955" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetModule(This,ppModule) )</cpp:value></cpp:define> 

<cpp:define pos:line="13957" pos:column="1">#<cpp:directive pos:line="13957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13957" pos:column="9">IDebugCodeContext3_GetProcess</name><parameter_list pos:line="13957" pos:column="38">(<param><type><name pos:line="13957" pos:column="39">This</name></type></param>,<param><type><name pos:line="13957" pos:column="44">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13958" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcess(This,ppProcess) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13960" pos:column="1">#<cpp:directive pos:line="13960" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13960" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13963" pos:column="1">#<cpp:directive pos:line="13963" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13963" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13968" pos:column="1">#<cpp:directive pos:line="13968" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13968" pos:column="9">/* __IDebugCodeContext3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13971" pos:column="1">#<cpp:directive pos:line="13971" pos:column="2">ifndef</cpp:directive> <name pos:line="13971" pos:column="9">__IDebugMemoryBytes2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13972" pos:column="1">#<cpp:directive pos:line="13972" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13972" pos:column="9">__IDebugMemoryBytes2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13974" pos:column="1">/* interface IDebugMemoryBytes2 */</comment>
<comment type="block" pos:line="13975" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="13978" pos:column="1">EXTERN_C</name> <specifier pos:line="13978" pos:column="10">const</specifier> <name pos:line="13978" pos:column="16">IID</name></type> <name pos:line="13978" pos:column="20">IID_IDebugMemoryBytes2</name></decl>;</decl_stmt>

<cpp:if pos:line="13980" pos:column="1">#<cpp:directive pos:line="13980" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13980" pos:column="5">defined</name><argument_list pos:line="13980" pos:column="12">(<argument><expr><name pos:line="13980" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13980" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13980" pos:column="29">!</op:operator><call><name pos:line="13980" pos:column="30">defined</name><argument_list pos:line="13980" pos:column="37">(<argument><expr><name pos:line="13980" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13982" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13982" pos:column="19">(<argument pos:line="13982" pos:column="20">"925837d1-3aa1-451a-b7fe-cc04bb42cfb8"</argument>)</argument_list></macro>
    <label><name pos:line="13983" pos:column="5">IDebugMemoryBytes2</name> :</label> <expr_stmt><expr pos:line="13983" pos:column="26">public <name pos:line="13983" pos:column="33">IUnknown</name>
    <block pos:line="13984" pos:column="5">{
    <expr pos:line="13985" pos:column="5">public<op:operator pos:line="13985" pos:column="11">:</op:operator>
        virtual <name pos:line="13986" pos:column="17">HRESULT</name> <name pos:line="13986" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13986" pos:column="43">ReadAt</name><argument_list pos:line="13986" pos:column="49">( 
            <comment type="block" pos:line="13987" pos:column="13">/* [in] */</comment> <argument pos:line="13987" pos:column="24">__RPC__in_opt IDebugMemoryContext2 *pStartContext</argument>,
            <comment type="block" pos:line="13988" pos:column="13">/* [in] */</comment> <argument pos:line="13988" pos:column="24">DWORD dwCount</argument>,
            <comment type="block" pos:line="13989" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="13989" pos:column="45">__RPC__out_ecount_part(dwCount, *pdwRead) BYTE *rgbMemory</argument>,
            <comment type="block" pos:line="13990" pos:column="13">/* [out] */</comment> <argument pos:line="13990" pos:column="25">__RPC__out DWORD *pdwRead</argument>,
            <comment type="block" pos:line="13991" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="13991" pos:column="35">__RPC__inout_opt DWORD *pdwUnreadable</argument>)</argument_list></macro> <op:operator pos:line="13991" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="13991" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="13993" pos:column="9">virtual <name pos:line="13993" pos:column="17">HRESULT</name> <name pos:line="13993" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13993" pos:column="43">WriteAt</name><argument_list pos:line="13993" pos:column="50">( 
            <comment type="block" pos:line="13994" pos:column="13">/* [in] */</comment> <argument pos:line="13994" pos:column="24">__RPC__in_opt IDebugMemoryContext2 *pStartContext</argument>,
            <comment type="block" pos:line="13995" pos:column="13">/* [in] */</comment> <argument pos:line="13995" pos:column="24">DWORD dwCount</argument>,
            <comment type="block" pos:line="13996" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="13996" pos:column="44">__RPC__in_ecount_part(dwCount, dwCount) BYTE *rgbMemory</argument>)</argument_list></macro> <op:operator pos:line="13996" pos:column="101">=</op:operator> <lit:literal type="number" pos:line="13996" pos:column="103">0</lit:literal></expr>;
        
        <expr pos:line="13998" pos:column="9">virtual <name pos:line="13998" pos:column="17">HRESULT</name> <name pos:line="13998" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="13998" pos:column="43">GetSize</name><argument_list pos:line="13998" pos:column="50">( 
            <comment type="block" pos:line="13999" pos:column="13">/* [out] */</comment> <argument pos:line="13999" pos:column="25">__RPC__out UINT64 *pqwSize</argument>)</argument_list></macro> <op:operator pos:line="13999" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="13999" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14003" pos:column="1">#<cpp:directive pos:line="14003" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14003" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14005" pos:column="5">typedef <type><struct pos:line="14005" pos:column="13">struct <name pos:line="14005" pos:column="20">IDebugMemoryBytes2Vtbl</name>
    <block pos:line="14006" pos:column="5">{<public type="default" pos:line="14006" pos:column="6">
        <function_decl><type><name pos:line="14007" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14009" pos:column="9">HRESULT</name></type> ( <name pos:line="14009" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14009" pos:column="37">*</type:modifier><name pos:line="14009" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14009" pos:column="54">( 
            <param><decl><type><name pos:line="14010" pos:column="13">IDebugMemoryBytes2</name> <type:modifier pos:line="14010" pos:column="32">*</type:modifier></type> <name pos:line="14010" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="14011" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14011" pos:column="24">__RPC__in</name> <name pos:line="14011" pos:column="34">REFIID</name></type> <name pos:line="14011" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14012" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14013" pos:column="13">__RPC__deref_out</name>  <name pos:line="14013" pos:column="31">void</name> <type:modifier pos:line="14013" pos:column="36">*</type:modifier><type:modifier pos:line="14013" pos:column="37">*</type:modifier></type><name pos:line="14013" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14015" pos:column="9">ULONG</name></type> ( <name pos:line="14015" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14015" pos:column="35">*</type:modifier><name pos:line="14015" pos:column="36">AddRef</name> )<parameter_list pos:line="14015" pos:column="44">( 
            <param><decl><type><name pos:line="14016" pos:column="13">IDebugMemoryBytes2</name> <type:modifier pos:line="14016" pos:column="32">*</type:modifier></type> <name pos:line="14016" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14018" pos:column="9">ULONG</name></type> ( <name pos:line="14018" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14018" pos:column="35">*</type:modifier><name pos:line="14018" pos:column="36">Release</name> )<parameter_list pos:line="14018" pos:column="45">( 
            <param><decl><type><name pos:line="14019" pos:column="13">IDebugMemoryBytes2</name> <type:modifier pos:line="14019" pos:column="32">*</type:modifier></type> <name pos:line="14019" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14021" pos:column="9">HRESULT</name> <argument_list pos:line="14021" pos:column="17">( <argument pos:line="14021" pos:column="19">STDMETHODCALLTYPE *ReadAt</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14021" pos:column="46">(</op:operator> 
            <name pos:line="14022" pos:column="13">IDebugMemoryBytes2</name> <op:operator pos:line="14022" pos:column="32">*</op:operator> <name pos:line="14022" pos:column="34">This</name><op:operator pos:line="14022" pos:column="38">,</op:operator>
            <comment type="block" pos:line="14023" pos:column="13">/* [in] */</comment> <name pos:line="14023" pos:column="24">__RPC__in_opt</name> <name pos:line="14023" pos:column="38">IDebugMemoryContext2</name> <op:operator pos:line="14023" pos:column="59">*</op:operator><name pos:line="14023" pos:column="60">pStartContext</name><op:operator pos:line="14023" pos:column="73">,</op:operator>
            <comment type="block" pos:line="14024" pos:column="13">/* [in] */</comment> <name pos:line="14024" pos:column="24">DWORD</name> <name pos:line="14024" pos:column="30">dwCount</name><op:operator pos:line="14024" pos:column="37">,</op:operator>
            <comment type="block" pos:line="14025" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="14025" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="14025" pos:column="67">(<argument pos:line="14025" pos:column="68">dwCount</argument>, <argument pos:line="14025" pos:column="77">*pdwRead</argument>)</argument_list></macro> <name pos:line="14025" pos:column="87">BYTE</name> <op:operator pos:line="14025" pos:column="92">*</op:operator><name pos:line="14025" pos:column="93">rgbMemory</name><op:operator pos:line="14025" pos:column="102">,</op:operator>
            <comment type="block" pos:line="14026" pos:column="13">/* [out] */</comment> <name pos:line="14026" pos:column="25">__RPC__out</name> <name pos:line="14026" pos:column="36">DWORD</name> <op:operator pos:line="14026" pos:column="42">*</op:operator><name pos:line="14026" pos:column="43">pdwRead</name><op:operator pos:line="14026" pos:column="50">,</op:operator>
            <comment type="block" pos:line="14027" pos:column="13">/* [full][out][in] */</comment> <name pos:line="14027" pos:column="35">__RPC__inout_opt</name> <name pos:line="14027" pos:column="52">DWORD</name> <op:operator pos:line="14027" pos:column="58">*</op:operator><name pos:line="14027" pos:column="59">pdwUnreadable</name><op:operator pos:line="14027" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="14029" pos:column="9">HRESULT</name> <argument_list pos:line="14029" pos:column="17">( <argument pos:line="14029" pos:column="19">STDMETHODCALLTYPE *WriteAt</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14029" pos:column="47">(</op:operator> 
            <name pos:line="14030" pos:column="13">IDebugMemoryBytes2</name> <op:operator pos:line="14030" pos:column="32">*</op:operator> <name pos:line="14030" pos:column="34">This</name><op:operator pos:line="14030" pos:column="38">,</op:operator>
            <comment type="block" pos:line="14031" pos:column="13">/* [in] */</comment> <name pos:line="14031" pos:column="24">__RPC__in_opt</name> <name pos:line="14031" pos:column="38">IDebugMemoryContext2</name> <op:operator pos:line="14031" pos:column="59">*</op:operator><name pos:line="14031" pos:column="60">pStartContext</name><op:operator pos:line="14031" pos:column="73">,</op:operator>
            <comment type="block" pos:line="14032" pos:column="13">/* [in] */</comment> <name pos:line="14032" pos:column="24">DWORD</name> <name pos:line="14032" pos:column="30">dwCount</name><op:operator pos:line="14032" pos:column="37">,</op:operator>
            <comment type="block" pos:line="14033" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="14033" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="14033" pos:column="65">(<argument pos:line="14033" pos:column="66">dwCount</argument>, <argument pos:line="14033" pos:column="75">dwCount</argument>)</argument_list></macro> <name pos:line="14033" pos:column="84">BYTE</name> <op:operator pos:line="14033" pos:column="89">*</op:operator><name pos:line="14033" pos:column="90">rgbMemory</name><op:operator pos:line="14033" pos:column="99">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="14035" pos:column="9">HRESULT</name></type> ( <name pos:line="14035" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14035" pos:column="37">*</type:modifier><name pos:line="14035" pos:column="38">GetSize</name> )<parameter_list pos:line="14035" pos:column="47">( 
            <param><decl><type><name pos:line="14036" pos:column="13">IDebugMemoryBytes2</name> <type:modifier pos:line="14036" pos:column="32">*</type:modifier></type> <name pos:line="14036" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="14037" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14037" pos:column="25">__RPC__out</name> <name pos:line="14037" pos:column="36">UINT64</name> <type:modifier pos:line="14037" pos:column="43">*</type:modifier></type><name pos:line="14037" pos:column="44">pqwSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14039" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14040" pos:column="7">IDebugMemoryBytes2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14042" pos:column="5">interface</name></type> <name pos:line="14042" pos:column="15">IDebugMemoryBytes2</name>
    <argument_list pos:line="14043" pos:column="5">{
        <argument><expr><name pos:line="14044" pos:column="9">CONST_VTBL</name> struct <name pos:line="14044" pos:column="27">IDebugMemoryBytes2Vtbl</name> <op:operator pos:line="14044" pos:column="50">*</op:operator><name pos:line="14044" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14049" pos:column="1">#<cpp:directive pos:line="14049" pos:column="2">ifdef</cpp:directive> <name pos:line="14049" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14052" pos:column="1">#<cpp:directive pos:line="14052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14052" pos:column="9">IDebugMemoryBytes2_QueryInterface</name><parameter_list pos:line="14052" pos:column="42">(<param><type><name pos:line="14052" pos:column="43">This</name></type></param>,<param><type><name pos:line="14052" pos:column="48">riid</name></type></param>,<param><type><name pos:line="14052" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14053" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14055" pos:column="1">#<cpp:directive pos:line="14055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14055" pos:column="9">IDebugMemoryBytes2_AddRef</name><parameter_list pos:line="14055" pos:column="34">(<param><type><name pos:line="14055" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14056" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14058" pos:column="1">#<cpp:directive pos:line="14058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14058" pos:column="9">IDebugMemoryBytes2_Release</name><parameter_list pos:line="14058" pos:column="35">(<param><type><name pos:line="14058" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14059" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14062" pos:column="1">#<cpp:directive pos:line="14062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14062" pos:column="9">IDebugMemoryBytes2_ReadAt</name><parameter_list pos:line="14062" pos:column="34">(<param><type><name pos:line="14062" pos:column="35">This</name></type></param>,<param><type><name pos:line="14062" pos:column="40">pStartContext</name></type></param>,<param><type><name pos:line="14062" pos:column="54">dwCount</name></type></param>,<param><type><name pos:line="14062" pos:column="62">rgbMemory</name></type></param>,<param><type><name pos:line="14062" pos:column="72">pdwRead</name></type></param>,<param><type><name pos:line="14062" pos:column="80">pdwUnreadable</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14063" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReadAt(This,pStartContext,dwCount,rgbMemory,pdwRead,pdwUnreadable) )</cpp:value></cpp:define> 

<cpp:define pos:line="14065" pos:column="1">#<cpp:directive pos:line="14065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14065" pos:column="9">IDebugMemoryBytes2_WriteAt</name><parameter_list pos:line="14065" pos:column="35">(<param><type><name pos:line="14065" pos:column="36">This</name></type></param>,<param><type><name pos:line="14065" pos:column="41">pStartContext</name></type></param>,<param><type><name pos:line="14065" pos:column="55">dwCount</name></type></param>,<param><type><name pos:line="14065" pos:column="63">rgbMemory</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14066" pos:column="5">( (This)-&gt;lpVtbl -&gt; WriteAt(This,pStartContext,dwCount,rgbMemory) )</cpp:value></cpp:define> 

<cpp:define pos:line="14068" pos:column="1">#<cpp:directive pos:line="14068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14068" pos:column="9">IDebugMemoryBytes2_GetSize</name><parameter_list pos:line="14068" pos:column="35">(<param><type><name pos:line="14068" pos:column="36">This</name></type></param>,<param><type><name pos:line="14068" pos:column="41">pqwSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14069" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pqwSize) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14071" pos:column="1">#<cpp:directive pos:line="14071" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14071" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14074" pos:column="1">#<cpp:directive pos:line="14074" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14074" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14079" pos:column="1">#<cpp:directive pos:line="14079" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14079" pos:column="9">/* __IDebugMemoryBytes2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14082" pos:column="1">#<cpp:directive pos:line="14082" pos:column="2">ifndef</cpp:directive> <name pos:line="14082" pos:column="9">__IDebugDisassemblyStream2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14083" pos:column="1">#<cpp:directive pos:line="14083" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14083" pos:column="9">__IDebugDisassemblyStream2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14085" pos:column="1">/* interface IDebugDisassemblyStream2 */</comment>
<comment type="block" pos:line="14086" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="14089" pos:column="1">enum <name pos:line="14089" pos:column="6">enum_DISASSEMBLY_STREAM_FIELDS</name>
    <block pos:line="14090" pos:column="5">{	<decl><name pos:line="14090" pos:column="9">DSF_ADDRESS</name>	<init pos:line="14090" pos:column="25">= <expr><lit:literal type="number" pos:line="14090" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="14090" pos:column="30">,</op:operator>
	<decl><name pos:line="14091" pos:column="9">DSF_ADDRESSOFFSET</name>	<init pos:line="14091" pos:column="33">= <expr><lit:literal type="number" pos:line="14091" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="14091" pos:column="38">,</op:operator>
	<decl><name pos:line="14092" pos:column="9">DSF_CODEBYTES</name>	<init pos:line="14092" pos:column="25">= <expr><lit:literal type="number" pos:line="14092" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="14092" pos:column="30">,</op:operator>
	<decl><name pos:line="14093" pos:column="9">DSF_OPCODE</name>	<init pos:line="14093" pos:column="25">= <expr><lit:literal type="number" pos:line="14093" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="14093" pos:column="30">,</op:operator>
	<decl><name pos:line="14094" pos:column="9">DSF_OPERANDS</name>	<init pos:line="14094" pos:column="25">= <expr><lit:literal type="number" pos:line="14094" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="14094" pos:column="31">,</op:operator>
	<decl><name pos:line="14095" pos:column="9">DSF_SYMBOL</name>	<init pos:line="14095" pos:column="25">= <expr><lit:literal type="number" pos:line="14095" pos:column="27">0x20</lit:literal></expr></init></decl><op:operator pos:line="14095" pos:column="31">,</op:operator>
	<decl><name pos:line="14096" pos:column="9">DSF_CODELOCATIONID</name>	<init pos:line="14096" pos:column="33">= <expr><lit:literal type="number" pos:line="14096" pos:column="35">0x40</lit:literal></expr></init></decl><op:operator pos:line="14096" pos:column="39">,</op:operator>
	<decl><name pos:line="14097" pos:column="9">DSF_POSITION</name>	<init pos:line="14097" pos:column="25">= <expr><lit:literal type="number" pos:line="14097" pos:column="27">0x80</lit:literal></expr></init></decl><op:operator pos:line="14097" pos:column="31">,</op:operator>
	<decl><name pos:line="14098" pos:column="9">DSF_DOCUMENTURL</name>	<init pos:line="14098" pos:column="25">= <expr><lit:literal type="number" pos:line="14098" pos:column="27">0x100</lit:literal></expr></init></decl><op:operator pos:line="14098" pos:column="32">,</op:operator>
	<decl><name pos:line="14099" pos:column="9">DSF_BYTEOFFSET</name>	<init pos:line="14099" pos:column="25">= <expr><lit:literal type="number" pos:line="14099" pos:column="27">0x200</lit:literal></expr></init></decl><op:operator pos:line="14099" pos:column="32">,</op:operator>
	<decl><name pos:line="14100" pos:column="9">DSF_FLAGS</name>	<init pos:line="14100" pos:column="25">= <expr><lit:literal type="number" pos:line="14100" pos:column="27">0x400</lit:literal></expr></init></decl><op:operator pos:line="14100" pos:column="32">,</op:operator>
	<decl><name pos:line="14101" pos:column="9">DSF_OPERANDS_SYMBOLS</name>	<init pos:line="14101" pos:column="33">= <expr><lit:literal type="number" pos:line="14101" pos:column="35">0x10000</lit:literal></expr></init></decl><op:operator pos:line="14101" pos:column="42">,</op:operator>
	<decl><name pos:line="14102" pos:column="9">DSF_ALL</name>	<init pos:line="14102" pos:column="17">= <expr><lit:literal type="number" pos:line="14102" pos:column="19">0x107ff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14104" pos:column="1">typedef <type><name pos:line="14104" pos:column="9">DWORD</name></type> <name pos:line="14104" pos:column="15">DISASSEMBLY_STREAM_FIELDS</name>;</typedef>


<enum pos:line="14107" pos:column="1">enum <name pos:line="14107" pos:column="6">enum_DISASSEMBLY_FLAGS</name>
    <block pos:line="14108" pos:column="5">{	<decl><name pos:line="14108" pos:column="9">DF_DOCUMENTCHANGE</name>	<init pos:line="14108" pos:column="33">= <expr><lit:literal type="number" pos:line="14108" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14108" pos:column="38">,</op:operator>
	<decl><name pos:line="14109" pos:column="9">DF_DISABLED</name>	<init pos:line="14109" pos:column="25">= <expr><lit:literal type="number" pos:line="14109" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="14109" pos:column="30">,</op:operator>
	<decl><name pos:line="14110" pos:column="9">DF_INSTRUCTION_ACTIVE</name>	<init pos:line="14110" pos:column="33">= <expr><lit:literal type="number" pos:line="14110" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="14110" pos:column="38">,</op:operator>
	<decl><name pos:line="14111" pos:column="9">DF_DATA</name>	<init pos:line="14111" pos:column="17">= <expr><lit:literal type="number" pos:line="14111" pos:column="19">0x8</lit:literal></expr></init></decl><op:operator pos:line="14111" pos:column="22">,</op:operator>
	<decl><name pos:line="14112" pos:column="9">DF_HASSOURCE</name>	<init pos:line="14112" pos:column="25">= <expr><lit:literal type="number" pos:line="14112" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="14112" pos:column="31">,</op:operator>
	<decl><name pos:line="14113" pos:column="9">DF_DOCUMENT_CHECKSUM</name>	<init pos:line="14113" pos:column="33">= <expr><lit:literal type="number" pos:line="14113" pos:column="35">0x20</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14115" pos:column="1">typedef <type><name pos:line="14115" pos:column="9">DWORD</name></type> <name pos:line="14115" pos:column="15">DISASSEMBLY_FLAGS</name>;</typedef>

<typedef pos:line="14117" pos:column="1">typedef <type><struct pos:line="14117" pos:column="9">struct <name pos:line="14117" pos:column="16">tagDisassemblyData</name>
    <block pos:line="14118" pos:column="5">{<public type="default" pos:line="14118" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14119" pos:column="5">DISASSEMBLY_STREAM_FIELDS</name></type> <name pos:line="14119" pos:column="31">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14120" pos:column="5">BSTR</name></type> <name pos:line="14120" pos:column="10">bstrAddress</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14121" pos:column="5">BSTR</name></type> <name pos:line="14121" pos:column="10">bstrAddressOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14122" pos:column="5">BSTR</name></type> <name pos:line="14122" pos:column="10">bstrCodeBytes</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14123" pos:column="5">BSTR</name></type> <name pos:line="14123" pos:column="10">bstrOpcode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14124" pos:column="5">BSTR</name></type> <name pos:line="14124" pos:column="10">bstrOperands</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14125" pos:column="5">BSTR</name></type> <name pos:line="14125" pos:column="10">bstrSymbol</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14126" pos:column="5">UINT64</name></type> <name pos:line="14126" pos:column="12">uCodeLocationId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14127" pos:column="5">TEXT_POSITION</name></type> <name pos:line="14127" pos:column="19">posBeg</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14128" pos:column="5">TEXT_POSITION</name></type> <name pos:line="14128" pos:column="19">posEnd</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14129" pos:column="5">BSTR</name></type> <name pos:line="14129" pos:column="10">bstrDocumentUrl</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14130" pos:column="5">DWORD</name></type> <name pos:line="14130" pos:column="11">dwByteOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14131" pos:column="5">DISASSEMBLY_FLAGS</name></type> <name pos:line="14131" pos:column="23">dwFlags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14132" pos:column="9">DisassemblyData</name>;</typedef>


<enum pos:line="14135" pos:column="1">enum <name pos:line="14135" pos:column="6">enum_SEEK_START</name>
    <block pos:line="14136" pos:column="5">{	<decl><name pos:line="14136" pos:column="9">SEEK_START_BEGIN</name>	<init pos:line="14136" pos:column="33">= <expr><lit:literal type="number" pos:line="14136" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14136" pos:column="38">,</op:operator>
	<decl><name pos:line="14137" pos:column="9">SEEK_START_END</name>	<init pos:line="14137" pos:column="25">= <expr><lit:literal type="number" pos:line="14137" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="14137" pos:column="30">,</op:operator>
	<decl><name pos:line="14138" pos:column="9">SEEK_START_CURRENT</name>	<init pos:line="14138" pos:column="33">= <expr><lit:literal type="number" pos:line="14138" pos:column="35">0x3</lit:literal></expr></init></decl><op:operator pos:line="14138" pos:column="38">,</op:operator>
	<decl><name pos:line="14139" pos:column="9">SEEK_START_CODECONTEXT</name>	<init pos:line="14139" pos:column="33">= <expr><lit:literal type="number" pos:line="14139" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="14139" pos:column="38">,</op:operator>
	<decl><name pos:line="14140" pos:column="9">SEEK_START_CODELOCID</name>	<init pos:line="14140" pos:column="33">= <expr><lit:literal type="number" pos:line="14140" pos:column="35">0x5</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14142" pos:column="1">typedef <type><name pos:line="14142" pos:column="9">DWORD</name></type> <name pos:line="14142" pos:column="15">SEEK_START</name>;</typedef>


<decl_stmt><decl><type><name pos:line="14145" pos:column="1">EXTERN_C</name> <specifier pos:line="14145" pos:column="10">const</specifier> <name pos:line="14145" pos:column="16">IID</name></type> <name pos:line="14145" pos:column="20">IID_IDebugDisassemblyStream2</name></decl>;</decl_stmt>

<cpp:if pos:line="14147" pos:column="1">#<cpp:directive pos:line="14147" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14147" pos:column="5">defined</name><argument_list pos:line="14147" pos:column="12">(<argument><expr><name pos:line="14147" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14147" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14147" pos:column="29">!</op:operator><call><name pos:line="14147" pos:column="30">defined</name><argument_list pos:line="14147" pos:column="37">(<argument><expr><name pos:line="14147" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14149" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14149" pos:column="19">(<argument pos:line="14149" pos:column="20">"e5b017fe-dfb0-411c-8266-7c64d6f519f8"</argument>)</argument_list></macro>
    <label><name pos:line="14150" pos:column="5">IDebugDisassemblyStream2</name> :</label> <expr_stmt><expr pos:line="14150" pos:column="32">public <name pos:line="14150" pos:column="39">IUnknown</name>
    <block pos:line="14151" pos:column="5">{
    <expr pos:line="14152" pos:column="5">public<op:operator pos:line="14152" pos:column="11">:</op:operator>
        virtual <name pos:line="14153" pos:column="17">HRESULT</name> <name pos:line="14153" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14153" pos:column="43">Read</name><argument_list pos:line="14153" pos:column="47">( 
            <comment type="block" pos:line="14154" pos:column="13">/* [in] */</comment> <argument pos:line="14154" pos:column="24">DWORD dwInstructions</argument>,
            <comment type="block" pos:line="14155" pos:column="13">/* [in] */</comment> <argument pos:line="14155" pos:column="24">DISASSEMBLY_STREAM_FIELDS dwFields</argument>,
            <comment type="block" pos:line="14156" pos:column="13">/* [out] */</comment> <argument pos:line="14156" pos:column="25">__RPC__out DWORD *pdwInstructionsRead</argument>,
            <comment type="block" pos:line="14157" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="14157" pos:column="45">__RPC__out_ecount_part(dwInstructions, *pdwInstructionsRead) DisassemblyData *prgDisassembly</argument>)</argument_list></macro> <op:operator pos:line="14157" pos:column="139">=</op:operator> <lit:literal type="number" pos:line="14157" pos:column="141">0</lit:literal></expr>;
        
        <expr pos:line="14159" pos:column="9">virtual <name pos:line="14159" pos:column="17">HRESULT</name> <name pos:line="14159" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14159" pos:column="43">Seek</name><argument_list pos:line="14159" pos:column="47">( 
            <comment type="block" pos:line="14160" pos:column="13">/* [in] */</comment> <argument pos:line="14160" pos:column="24">SEEK_START dwSeekStart</argument>,
            <comment type="block" pos:line="14161" pos:column="13">/* [in] */</comment> <argument pos:line="14161" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pCodeContext</argument>,
            <comment type="block" pos:line="14162" pos:column="13">/* [in] */</comment> <argument pos:line="14162" pos:column="24">UINT64 uCodeLocationId</argument>,
            <comment type="block" pos:line="14163" pos:column="13">/* [in] */</comment> <argument pos:line="14163" pos:column="24">INT64 iInstructions</argument>)</argument_list></macro> <op:operator pos:line="14163" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="14163" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="14165" pos:column="9">virtual <name pos:line="14165" pos:column="17">HRESULT</name> <name pos:line="14165" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14165" pos:column="43">GetCodeLocationId</name><argument_list pos:line="14165" pos:column="60">( 
            <comment type="block" pos:line="14166" pos:column="13">/* [in] */</comment> <argument pos:line="14166" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pCodeContext</argument>,
            <comment type="block" pos:line="14167" pos:column="13">/* [out] */</comment> <argument pos:line="14167" pos:column="25">__RPC__out UINT64 *puCodeLocationId</argument>)</argument_list></macro> <op:operator pos:line="14167" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="14167" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="14169" pos:column="9">virtual <name pos:line="14169" pos:column="17">HRESULT</name> <name pos:line="14169" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14169" pos:column="43">GetCodeContext</name><argument_list pos:line="14169" pos:column="57">( 
            <comment type="block" pos:line="14170" pos:column="13">/* [in] */</comment> <argument pos:line="14170" pos:column="24">UINT64 uCodeLocationId</argument>,
            <comment type="block" pos:line="14171" pos:column="13">/* [out] */</comment> <argument pos:line="14171" pos:column="25">__RPC__deref_out_opt IDebugCodeContext2 **ppCodeContext</argument>)</argument_list></macro> <op:operator pos:line="14171" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="14171" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="14173" pos:column="9">virtual <name pos:line="14173" pos:column="17">HRESULT</name> <name pos:line="14173" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14173" pos:column="43">GetCurrentLocation</name><argument_list pos:line="14173" pos:column="61">( 
            <comment type="block" pos:line="14174" pos:column="13">/* [out] */</comment> <argument pos:line="14174" pos:column="25">__RPC__out UINT64 *puCodeLocationId</argument>)</argument_list></macro> <op:operator pos:line="14174" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="14174" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="14176" pos:column="9">virtual <name pos:line="14176" pos:column="17">HRESULT</name> <name pos:line="14176" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14176" pos:column="43">GetDocument</name><argument_list pos:line="14176" pos:column="54">( 
            <comment type="block" pos:line="14177" pos:column="13">/* [in] */</comment> <argument pos:line="14177" pos:column="24">__RPC__in BSTR bstrDocumentUrl</argument>,
            <comment type="block" pos:line="14178" pos:column="13">/* [out] */</comment> <argument pos:line="14178" pos:column="25">__RPC__deref_out_opt IDebugDocument2 **ppDocument</argument>)</argument_list></macro> <op:operator pos:line="14178" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="14178" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="14180" pos:column="9">virtual <name pos:line="14180" pos:column="17">HRESULT</name> <name pos:line="14180" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14180" pos:column="43">GetScope</name><argument_list pos:line="14180" pos:column="51">( 
            <comment type="block" pos:line="14181" pos:column="13">/* [out] */</comment> <argument pos:line="14181" pos:column="25">__RPC__out DISASSEMBLY_STREAM_SCOPE *pdwScope</argument>)</argument_list></macro> <op:operator pos:line="14181" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="14181" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="14183" pos:column="9">virtual <name pos:line="14183" pos:column="17">HRESULT</name> <name pos:line="14183" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14183" pos:column="43">GetSize</name><argument_list pos:line="14183" pos:column="50">( 
            <comment type="block" pos:line="14184" pos:column="13">/* [out] */</comment> <argument pos:line="14184" pos:column="25">__RPC__out UINT64 *pnSize</argument>)</argument_list></macro> <op:operator pos:line="14184" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="14184" pos:column="54">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14188" pos:column="1">#<cpp:directive pos:line="14188" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14188" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14190" pos:column="5">typedef <type><struct pos:line="14190" pos:column="13">struct <name pos:line="14190" pos:column="20">IDebugDisassemblyStream2Vtbl</name>
    <block pos:line="14191" pos:column="5">{<public type="default" pos:line="14191" pos:column="6">
        <function_decl><type><name pos:line="14192" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14194" pos:column="9">HRESULT</name></type> ( <name pos:line="14194" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14194" pos:column="37">*</type:modifier><name pos:line="14194" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14194" pos:column="54">( 
            <param><decl><type><name pos:line="14195" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14195" pos:column="38">*</type:modifier></type> <name pos:line="14195" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14196" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14196" pos:column="24">__RPC__in</name> <name pos:line="14196" pos:column="34">REFIID</name></type> <name pos:line="14196" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14197" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14198" pos:column="13">__RPC__deref_out</name>  <name pos:line="14198" pos:column="31">void</name> <type:modifier pos:line="14198" pos:column="36">*</type:modifier><type:modifier pos:line="14198" pos:column="37">*</type:modifier></type><name pos:line="14198" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14200" pos:column="9">ULONG</name></type> ( <name pos:line="14200" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14200" pos:column="35">*</type:modifier><name pos:line="14200" pos:column="36">AddRef</name> )<parameter_list pos:line="14200" pos:column="44">( 
            <param><decl><type><name pos:line="14201" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14201" pos:column="38">*</type:modifier></type> <name pos:line="14201" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14203" pos:column="9">ULONG</name></type> ( <name pos:line="14203" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14203" pos:column="35">*</type:modifier><name pos:line="14203" pos:column="36">Release</name> )<parameter_list pos:line="14203" pos:column="45">( 
            <param><decl><type><name pos:line="14204" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14204" pos:column="38">*</type:modifier></type> <name pos:line="14204" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14206" pos:column="9">HRESULT</name> <argument_list pos:line="14206" pos:column="17">( <argument pos:line="14206" pos:column="19">STDMETHODCALLTYPE *Read</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14206" pos:column="44">(</op:operator> 
            <name pos:line="14207" pos:column="13">IDebugDisassemblyStream2</name> <op:operator pos:line="14207" pos:column="38">*</op:operator> <name pos:line="14207" pos:column="40">This</name><op:operator pos:line="14207" pos:column="44">,</op:operator>
            <comment type="block" pos:line="14208" pos:column="13">/* [in] */</comment> <name pos:line="14208" pos:column="24">DWORD</name> <name pos:line="14208" pos:column="30">dwInstructions</name><op:operator pos:line="14208" pos:column="44">,</op:operator>
            <comment type="block" pos:line="14209" pos:column="13">/* [in] */</comment> <name pos:line="14209" pos:column="24">DISASSEMBLY_STREAM_FIELDS</name> <name pos:line="14209" pos:column="50">dwFields</name><op:operator pos:line="14209" pos:column="58">,</op:operator>
            <comment type="block" pos:line="14210" pos:column="13">/* [out] */</comment> <name pos:line="14210" pos:column="25">__RPC__out</name> <name pos:line="14210" pos:column="36">DWORD</name> <op:operator pos:line="14210" pos:column="42">*</op:operator><name pos:line="14210" pos:column="43">pdwInstructionsRead</name><op:operator pos:line="14210" pos:column="62">,</op:operator>
            <comment type="block" pos:line="14211" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="14211" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="14211" pos:column="67">(<argument pos:line="14211" pos:column="68">dwInstructions</argument>, <argument pos:line="14211" pos:column="84">*pdwInstructionsRead</argument>)</argument_list></macro> <name pos:line="14211" pos:column="106">DisassemblyData</name> <op:operator pos:line="14211" pos:column="122">*</op:operator><name pos:line="14211" pos:column="123">prgDisassembly</name><op:operator pos:line="14211" pos:column="137">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="14213" pos:column="9">HRESULT</name></type> ( <name pos:line="14213" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14213" pos:column="37">*</type:modifier><name pos:line="14213" pos:column="38">Seek</name> )<parameter_list pos:line="14213" pos:column="44">( 
            <param><decl><type><name pos:line="14214" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14214" pos:column="38">*</type:modifier></type> <name pos:line="14214" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14215" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14215" pos:column="24">SEEK_START</name></type> <name pos:line="14215" pos:column="35">dwSeekStart</name></decl></param>,
            <comment type="block" pos:line="14216" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14216" pos:column="24">__RPC__in_opt</name> <name pos:line="14216" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="14216" pos:column="57">*</type:modifier></type><name pos:line="14216" pos:column="58">pCodeContext</name></decl></param>,
            <comment type="block" pos:line="14217" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14217" pos:column="24">UINT64</name></type> <name pos:line="14217" pos:column="31">uCodeLocationId</name></decl></param>,
            <comment type="block" pos:line="14218" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14218" pos:column="24">INT64</name></type> <name pos:line="14218" pos:column="30">iInstructions</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14220" pos:column="9">HRESULT</name></type> ( <name pos:line="14220" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14220" pos:column="37">*</type:modifier><name pos:line="14220" pos:column="38">GetCodeLocationId</name> )<parameter_list pos:line="14220" pos:column="57">( 
            <param><decl><type><name pos:line="14221" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14221" pos:column="38">*</type:modifier></type> <name pos:line="14221" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14222" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14222" pos:column="24">__RPC__in_opt</name> <name pos:line="14222" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="14222" pos:column="57">*</type:modifier></type><name pos:line="14222" pos:column="58">pCodeContext</name></decl></param>,
            <comment type="block" pos:line="14223" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14223" pos:column="25">__RPC__out</name> <name pos:line="14223" pos:column="36">UINT64</name> <type:modifier pos:line="14223" pos:column="43">*</type:modifier></type><name pos:line="14223" pos:column="44">puCodeLocationId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14225" pos:column="9">HRESULT</name></type> ( <name pos:line="14225" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14225" pos:column="37">*</type:modifier><name pos:line="14225" pos:column="38">GetCodeContext</name> )<parameter_list pos:line="14225" pos:column="54">( 
            <param><decl><type><name pos:line="14226" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14226" pos:column="38">*</type:modifier></type> <name pos:line="14226" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14227" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14227" pos:column="24">UINT64</name></type> <name pos:line="14227" pos:column="31">uCodeLocationId</name></decl></param>,
            <comment type="block" pos:line="14228" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14228" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14228" pos:column="46">IDebugCodeContext2</name> <type:modifier pos:line="14228" pos:column="65">*</type:modifier><type:modifier pos:line="14228" pos:column="66">*</type:modifier></type><name pos:line="14228" pos:column="67">ppCodeContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14230" pos:column="9">HRESULT</name></type> ( <name pos:line="14230" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14230" pos:column="37">*</type:modifier><name pos:line="14230" pos:column="38">GetCurrentLocation</name> )<parameter_list pos:line="14230" pos:column="58">( 
            <param><decl><type><name pos:line="14231" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14231" pos:column="38">*</type:modifier></type> <name pos:line="14231" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14232" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14232" pos:column="25">__RPC__out</name> <name pos:line="14232" pos:column="36">UINT64</name> <type:modifier pos:line="14232" pos:column="43">*</type:modifier></type><name pos:line="14232" pos:column="44">puCodeLocationId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14234" pos:column="9">HRESULT</name></type> ( <name pos:line="14234" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14234" pos:column="37">*</type:modifier><name pos:line="14234" pos:column="38">GetDocument</name> )<parameter_list pos:line="14234" pos:column="51">( 
            <param><decl><type><name pos:line="14235" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14235" pos:column="38">*</type:modifier></type> <name pos:line="14235" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14236" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14236" pos:column="24">__RPC__in</name> <name pos:line="14236" pos:column="34">BSTR</name></type> <name pos:line="14236" pos:column="39">bstrDocumentUrl</name></decl></param>,
            <comment type="block" pos:line="14237" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14237" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14237" pos:column="46">IDebugDocument2</name> <type:modifier pos:line="14237" pos:column="62">*</type:modifier><type:modifier pos:line="14237" pos:column="63">*</type:modifier></type><name pos:line="14237" pos:column="64">ppDocument</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14239" pos:column="9">HRESULT</name></type> ( <name pos:line="14239" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14239" pos:column="37">*</type:modifier><name pos:line="14239" pos:column="38">GetScope</name> )<parameter_list pos:line="14239" pos:column="48">( 
            <param><decl><type><name pos:line="14240" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14240" pos:column="38">*</type:modifier></type> <name pos:line="14240" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14241" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14241" pos:column="25">__RPC__out</name> <name pos:line="14241" pos:column="36">DISASSEMBLY_STREAM_SCOPE</name> <type:modifier pos:line="14241" pos:column="61">*</type:modifier></type><name pos:line="14241" pos:column="62">pdwScope</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14243" pos:column="9">HRESULT</name></type> ( <name pos:line="14243" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14243" pos:column="37">*</type:modifier><name pos:line="14243" pos:column="38">GetSize</name> )<parameter_list pos:line="14243" pos:column="47">( 
            <param><decl><type><name pos:line="14244" pos:column="13">IDebugDisassemblyStream2</name> <type:modifier pos:line="14244" pos:column="38">*</type:modifier></type> <name pos:line="14244" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14245" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14245" pos:column="25">__RPC__out</name> <name pos:line="14245" pos:column="36">UINT64</name> <type:modifier pos:line="14245" pos:column="43">*</type:modifier></type><name pos:line="14245" pos:column="44">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14247" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14248" pos:column="7">IDebugDisassemblyStream2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14250" pos:column="5">interface</name></type> <name pos:line="14250" pos:column="15">IDebugDisassemblyStream2</name>
    <argument_list pos:line="14251" pos:column="5">{
        <argument><expr><name pos:line="14252" pos:column="9">CONST_VTBL</name> struct <name pos:line="14252" pos:column="27">IDebugDisassemblyStream2Vtbl</name> <op:operator pos:line="14252" pos:column="56">*</op:operator><name pos:line="14252" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14257" pos:column="1">#<cpp:directive pos:line="14257" pos:column="2">ifdef</cpp:directive> <name pos:line="14257" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14260" pos:column="1">#<cpp:directive pos:line="14260" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14260" pos:column="9">IDebugDisassemblyStream2_QueryInterface</name><parameter_list pos:line="14260" pos:column="48">(<param><type><name pos:line="14260" pos:column="49">This</name></type></param>,<param><type><name pos:line="14260" pos:column="54">riid</name></type></param>,<param><type><name pos:line="14260" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14261" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14263" pos:column="1">#<cpp:directive pos:line="14263" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14263" pos:column="9">IDebugDisassemblyStream2_AddRef</name><parameter_list pos:line="14263" pos:column="40">(<param><type><name pos:line="14263" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14264" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14266" pos:column="1">#<cpp:directive pos:line="14266" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14266" pos:column="9">IDebugDisassemblyStream2_Release</name><parameter_list pos:line="14266" pos:column="41">(<param><type><name pos:line="14266" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14267" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14270" pos:column="1">#<cpp:directive pos:line="14270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14270" pos:column="9">IDebugDisassemblyStream2_Read</name><parameter_list pos:line="14270" pos:column="38">(<param><type><name pos:line="14270" pos:column="39">This</name></type></param>,<param><type><name pos:line="14270" pos:column="44">dwInstructions</name></type></param>,<param><type><name pos:line="14270" pos:column="59">dwFields</name></type></param>,<param><type><name pos:line="14270" pos:column="68">pdwInstructionsRead</name></type></param>,<param><type><name pos:line="14270" pos:column="88">prgDisassembly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14271" pos:column="5">( (This)-&gt;lpVtbl -&gt; Read(This,dwInstructions,dwFields,pdwInstructionsRead,prgDisassembly) )</cpp:value></cpp:define> 

<cpp:define pos:line="14273" pos:column="1">#<cpp:directive pos:line="14273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14273" pos:column="9">IDebugDisassemblyStream2_Seek</name><parameter_list pos:line="14273" pos:column="38">(<param><type><name pos:line="14273" pos:column="39">This</name></type></param>,<param><type><name pos:line="14273" pos:column="44">dwSeekStart</name></type></param>,<param><type><name pos:line="14273" pos:column="56">pCodeContext</name></type></param>,<param><type><name pos:line="14273" pos:column="69">uCodeLocationId</name></type></param>,<param><type><name pos:line="14273" pos:column="85">iInstructions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14274" pos:column="5">( (This)-&gt;lpVtbl -&gt; Seek(This,dwSeekStart,pCodeContext,uCodeLocationId,iInstructions) )</cpp:value></cpp:define> 

<cpp:define pos:line="14276" pos:column="1">#<cpp:directive pos:line="14276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14276" pos:column="9">IDebugDisassemblyStream2_GetCodeLocationId</name><parameter_list pos:line="14276" pos:column="51">(<param><type><name pos:line="14276" pos:column="52">This</name></type></param>,<param><type><name pos:line="14276" pos:column="57">pCodeContext</name></type></param>,<param><type><name pos:line="14276" pos:column="70">puCodeLocationId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14277" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCodeLocationId(This,pCodeContext,puCodeLocationId) )</cpp:value></cpp:define> 

<cpp:define pos:line="14279" pos:column="1">#<cpp:directive pos:line="14279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14279" pos:column="9">IDebugDisassemblyStream2_GetCodeContext</name><parameter_list pos:line="14279" pos:column="48">(<param><type><name pos:line="14279" pos:column="49">This</name></type></param>,<param><type><name pos:line="14279" pos:column="54">uCodeLocationId</name></type></param>,<param><type><name pos:line="14279" pos:column="70">ppCodeContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14280" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCodeContext(This,uCodeLocationId,ppCodeContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="14282" pos:column="1">#<cpp:directive pos:line="14282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14282" pos:column="9">IDebugDisassemblyStream2_GetCurrentLocation</name><parameter_list pos:line="14282" pos:column="52">(<param><type><name pos:line="14282" pos:column="53">This</name></type></param>,<param><type><name pos:line="14282" pos:column="58">puCodeLocationId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14283" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCurrentLocation(This,puCodeLocationId) )</cpp:value></cpp:define> 

<cpp:define pos:line="14285" pos:column="1">#<cpp:directive pos:line="14285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14285" pos:column="9">IDebugDisassemblyStream2_GetDocument</name><parameter_list pos:line="14285" pos:column="45">(<param><type><name pos:line="14285" pos:column="46">This</name></type></param>,<param><type><name pos:line="14285" pos:column="51">bstrDocumentUrl</name></type></param>,<param><type><name pos:line="14285" pos:column="67">ppDocument</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14286" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocument(This,bstrDocumentUrl,ppDocument) )</cpp:value></cpp:define> 

<cpp:define pos:line="14288" pos:column="1">#<cpp:directive pos:line="14288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14288" pos:column="9">IDebugDisassemblyStream2_GetScope</name><parameter_list pos:line="14288" pos:column="42">(<param><type><name pos:line="14288" pos:column="43">This</name></type></param>,<param><type><name pos:line="14288" pos:column="48">pdwScope</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14289" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetScope(This,pdwScope) )</cpp:value></cpp:define> 

<cpp:define pos:line="14291" pos:column="1">#<cpp:directive pos:line="14291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14291" pos:column="9">IDebugDisassemblyStream2_GetSize</name><parameter_list pos:line="14291" pos:column="41">(<param><type><name pos:line="14291" pos:column="42">This</name></type></param>,<param><type><name pos:line="14291" pos:column="47">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14292" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14294" pos:column="1">#<cpp:directive pos:line="14294" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14294" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14297" pos:column="1">#<cpp:directive pos:line="14297" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14297" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14302" pos:column="1">#<cpp:directive pos:line="14302" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14302" pos:column="9">/* __IDebugDisassemblyStream2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14305" pos:column="1">#<cpp:directive pos:line="14305" pos:column="2">ifndef</cpp:directive> <name pos:line="14305" pos:column="9">__IDebugDocumentContext2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14306" pos:column="1">#<cpp:directive pos:line="14306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14306" pos:column="9">__IDebugDocumentContext2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14308" pos:column="1">/* interface IDebugDocumentContext2 */</comment>
<comment type="block" pos:line="14309" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="14312" pos:column="1">enum <name pos:line="14312" pos:column="6">enum_DOCCONTEXT_COMPARE</name>
    <block pos:line="14313" pos:column="5">{	<decl><name pos:line="14313" pos:column="9">DOCCONTEXT_EQUAL</name>	<init pos:line="14313" pos:column="33">= <expr><lit:literal type="number" pos:line="14313" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14313" pos:column="38">,</op:operator>
	<decl><name pos:line="14314" pos:column="9">DOCCONTEXT_LESS_THAN</name>	<init pos:line="14314" pos:column="33">= <expr><lit:literal type="number" pos:line="14314" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="14314" pos:column="38">,</op:operator>
	<decl><name pos:line="14315" pos:column="9">DOCCONTEXT_GREATER_THAN</name>	<init pos:line="14315" pos:column="33">= <expr><lit:literal type="number" pos:line="14315" pos:column="35">0x3</lit:literal></expr></init></decl><op:operator pos:line="14315" pos:column="38">,</op:operator>
	<decl><name pos:line="14316" pos:column="9">DOCCONTEXT_SAME_DOCUMENT</name>	<init pos:line="14316" pos:column="41">= <expr><lit:literal type="number" pos:line="14316" pos:column="43">0x4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14318" pos:column="1">typedef <type><name pos:line="14318" pos:column="9">DWORD</name></type> <name pos:line="14318" pos:column="15">DOCCONTEXT_COMPARE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="14321" pos:column="1">EXTERN_C</name> <specifier pos:line="14321" pos:column="10">const</specifier> <name pos:line="14321" pos:column="16">IID</name></type> <name pos:line="14321" pos:column="20">IID_IDebugDocumentContext2</name></decl>;</decl_stmt>

<cpp:if pos:line="14323" pos:column="1">#<cpp:directive pos:line="14323" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14323" pos:column="5">defined</name><argument_list pos:line="14323" pos:column="12">(<argument><expr><name pos:line="14323" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14323" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14323" pos:column="29">!</op:operator><call><name pos:line="14323" pos:column="30">defined</name><argument_list pos:line="14323" pos:column="37">(<argument><expr><name pos:line="14323" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14325" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14325" pos:column="19">(<argument pos:line="14325" pos:column="20">"931516ad-b600-419c-88fc-dcf5183b5fa9"</argument>)</argument_list></macro>
    <label><name pos:line="14326" pos:column="5">IDebugDocumentContext2</name> :</label> <expr_stmt><expr pos:line="14326" pos:column="30">public <name pos:line="14326" pos:column="37">IUnknown</name>
    <block pos:line="14327" pos:column="5">{
    <expr pos:line="14328" pos:column="5">public<op:operator pos:line="14328" pos:column="11">:</op:operator>
        virtual <name pos:line="14329" pos:column="17">HRESULT</name> <name pos:line="14329" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14329" pos:column="43">GetDocument</name><argument_list pos:line="14329" pos:column="54">( 
            <comment type="block" pos:line="14330" pos:column="13">/* [out] */</comment> <argument pos:line="14330" pos:column="25">__RPC__deref_out_opt IDebugDocument2 **ppDocument</argument>)</argument_list></macro> <op:operator pos:line="14330" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="14330" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="14332" pos:column="9">virtual <name pos:line="14332" pos:column="17">HRESULT</name> <name pos:line="14332" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14332" pos:column="43">GetName</name><argument_list pos:line="14332" pos:column="50">( 
            <comment type="block" pos:line="14333" pos:column="13">/* [in] */</comment> <argument pos:line="14333" pos:column="24">GETNAME_TYPE gnType</argument>,
            <comment type="block" pos:line="14334" pos:column="13">/* [out] */</comment> <argument pos:line="14334" pos:column="25">__RPC__deref_out_opt BSTR *pbstrFileName</argument>)</argument_list></macro> <op:operator pos:line="14334" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="14334" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="14336" pos:column="9">virtual <name pos:line="14336" pos:column="17">HRESULT</name> <name pos:line="14336" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14336" pos:column="43">EnumCodeContexts</name><argument_list pos:line="14336" pos:column="59">( 
            <comment type="block" pos:line="14337" pos:column="13">/* [out] */</comment> <argument pos:line="14337" pos:column="25">__RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnumCodeCxts</argument>)</argument_list></macro> <op:operator pos:line="14337" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="14337" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="14339" pos:column="9">virtual <name pos:line="14339" pos:column="17">HRESULT</name> <name pos:line="14339" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14339" pos:column="43">GetLanguageInfo</name><argument_list pos:line="14339" pos:column="58">( 
            <comment type="block" pos:line="14340" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="14340" pos:column="35">__RPC__deref_opt_inout_opt BSTR *pbstrLanguage</argument>,
            <comment type="block" pos:line="14341" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="14341" pos:column="35">__RPC__inout_opt GUID *pguidLanguage</argument>)</argument_list></macro> <op:operator pos:line="14341" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="14341" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="14343" pos:column="9">virtual <name pos:line="14343" pos:column="17">HRESULT</name> <name pos:line="14343" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14343" pos:column="43">GetStatementRange</name><argument_list pos:line="14343" pos:column="60">( 
            <comment type="block" pos:line="14344" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="14344" pos:column="35">__RPC__inout_opt TEXT_POSITION *pBegPosition</argument>,
            <comment type="block" pos:line="14345" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="14345" pos:column="35">__RPC__inout_opt TEXT_POSITION *pEndPosition</argument>)</argument_list></macro> <op:operator pos:line="14345" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="14345" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="14347" pos:column="9">virtual <name pos:line="14347" pos:column="17">HRESULT</name> <name pos:line="14347" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14347" pos:column="43">GetSourceRange</name><argument_list pos:line="14347" pos:column="57">( 
            <comment type="block" pos:line="14348" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="14348" pos:column="35">__RPC__inout_opt TEXT_POSITION *pBegPosition</argument>,
            <comment type="block" pos:line="14349" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="14349" pos:column="35">__RPC__inout_opt TEXT_POSITION *pEndPosition</argument>)</argument_list></macro> <op:operator pos:line="14349" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="14349" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="14351" pos:column="9">virtual <name pos:line="14351" pos:column="17">HRESULT</name> <name pos:line="14351" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14351" pos:column="43">Compare</name><argument_list pos:line="14351" pos:column="50">( 
            <comment type="block" pos:line="14352" pos:column="13">/* [in] */</comment> <argument pos:line="14352" pos:column="24">DOCCONTEXT_COMPARE compare</argument>,
            <comment type="block" pos:line="14353" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="14353" pos:column="44">__RPC__in_ecount_part(dwDocContextSetLen, dwDocContextSetLen) IDebugDocumentContext2 **rgpDocContextSet</argument>,
            <comment type="block" pos:line="14354" pos:column="13">/* [in] */</comment> <argument pos:line="14354" pos:column="24">DWORD dwDocContextSetLen</argument>,
            <comment type="block" pos:line="14355" pos:column="13">/* [out] */</comment> <argument pos:line="14355" pos:column="25">__RPC__out DWORD *pdwDocContext</argument>)</argument_list></macro> <op:operator pos:line="14355" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="14355" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="14357" pos:column="9">virtual <name pos:line="14357" pos:column="17">HRESULT</name> <name pos:line="14357" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14357" pos:column="43">Seek</name><argument_list pos:line="14357" pos:column="47">( 
            <comment type="block" pos:line="14358" pos:column="13">/* [in] */</comment> <argument pos:line="14358" pos:column="24">int nCount</argument>,
            <comment type="block" pos:line="14359" pos:column="13">/* [out] */</comment> <argument pos:line="14359" pos:column="25">__RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext</argument>)</argument_list></macro> <op:operator pos:line="14359" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="14359" pos:column="87">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14363" pos:column="1">#<cpp:directive pos:line="14363" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14363" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14365" pos:column="5">typedef <type><struct pos:line="14365" pos:column="13">struct <name pos:line="14365" pos:column="20">IDebugDocumentContext2Vtbl</name>
    <block pos:line="14366" pos:column="5">{<public type="default" pos:line="14366" pos:column="6">
        <function_decl><type><name pos:line="14367" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14369" pos:column="9">HRESULT</name></type> ( <name pos:line="14369" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14369" pos:column="37">*</type:modifier><name pos:line="14369" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14369" pos:column="54">( 
            <param><decl><type><name pos:line="14370" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14370" pos:column="36">*</type:modifier></type> <name pos:line="14370" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14371" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14371" pos:column="24">__RPC__in</name> <name pos:line="14371" pos:column="34">REFIID</name></type> <name pos:line="14371" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14372" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14373" pos:column="13">__RPC__deref_out</name>  <name pos:line="14373" pos:column="31">void</name> <type:modifier pos:line="14373" pos:column="36">*</type:modifier><type:modifier pos:line="14373" pos:column="37">*</type:modifier></type><name pos:line="14373" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14375" pos:column="9">ULONG</name></type> ( <name pos:line="14375" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14375" pos:column="35">*</type:modifier><name pos:line="14375" pos:column="36">AddRef</name> )<parameter_list pos:line="14375" pos:column="44">( 
            <param><decl><type><name pos:line="14376" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14376" pos:column="36">*</type:modifier></type> <name pos:line="14376" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14378" pos:column="9">ULONG</name></type> ( <name pos:line="14378" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14378" pos:column="35">*</type:modifier><name pos:line="14378" pos:column="36">Release</name> )<parameter_list pos:line="14378" pos:column="45">( 
            <param><decl><type><name pos:line="14379" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14379" pos:column="36">*</type:modifier></type> <name pos:line="14379" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14381" pos:column="9">HRESULT</name></type> ( <name pos:line="14381" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14381" pos:column="37">*</type:modifier><name pos:line="14381" pos:column="38">GetDocument</name> )<parameter_list pos:line="14381" pos:column="51">( 
            <param><decl><type><name pos:line="14382" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14382" pos:column="36">*</type:modifier></type> <name pos:line="14382" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14383" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14383" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14383" pos:column="46">IDebugDocument2</name> <type:modifier pos:line="14383" pos:column="62">*</type:modifier><type:modifier pos:line="14383" pos:column="63">*</type:modifier></type><name pos:line="14383" pos:column="64">ppDocument</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14385" pos:column="9">HRESULT</name></type> ( <name pos:line="14385" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14385" pos:column="37">*</type:modifier><name pos:line="14385" pos:column="38">GetName</name> )<parameter_list pos:line="14385" pos:column="47">( 
            <param><decl><type><name pos:line="14386" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14386" pos:column="36">*</type:modifier></type> <name pos:line="14386" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14387" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14387" pos:column="24">GETNAME_TYPE</name></type> <name pos:line="14387" pos:column="37">gnType</name></decl></param>,
            <comment type="block" pos:line="14388" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14388" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14388" pos:column="46">BSTR</name> <type:modifier pos:line="14388" pos:column="51">*</type:modifier></type><name pos:line="14388" pos:column="52">pbstrFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14390" pos:column="9">HRESULT</name></type> ( <name pos:line="14390" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14390" pos:column="37">*</type:modifier><name pos:line="14390" pos:column="38">EnumCodeContexts</name> )<parameter_list pos:line="14390" pos:column="56">( 
            <param><decl><type><name pos:line="14391" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14391" pos:column="36">*</type:modifier></type> <name pos:line="14391" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14392" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14392" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14392" pos:column="46">IEnumDebugCodeContexts2</name> <type:modifier pos:line="14392" pos:column="70">*</type:modifier><type:modifier pos:line="14392" pos:column="71">*</type:modifier></type><name pos:line="14392" pos:column="72">ppEnumCodeCxts</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14394" pos:column="9">HRESULT</name></type> ( <name pos:line="14394" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14394" pos:column="37">*</type:modifier><name pos:line="14394" pos:column="38">GetLanguageInfo</name> )<parameter_list pos:line="14394" pos:column="55">( 
            <param><decl><type><name pos:line="14395" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14395" pos:column="36">*</type:modifier></type> <name pos:line="14395" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14396" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="14396" pos:column="35">__RPC__deref_opt_inout_opt</name> <name pos:line="14396" pos:column="62">BSTR</name> <type:modifier pos:line="14396" pos:column="67">*</type:modifier></type><name pos:line="14396" pos:column="68">pbstrLanguage</name></decl></param>,
            <comment type="block" pos:line="14397" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="14397" pos:column="35">__RPC__inout_opt</name> <name pos:line="14397" pos:column="52">GUID</name> <type:modifier pos:line="14397" pos:column="57">*</type:modifier></type><name pos:line="14397" pos:column="58">pguidLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14399" pos:column="9">HRESULT</name></type> ( <name pos:line="14399" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14399" pos:column="37">*</type:modifier><name pos:line="14399" pos:column="38">GetStatementRange</name> )<parameter_list pos:line="14399" pos:column="57">( 
            <param><decl><type><name pos:line="14400" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14400" pos:column="36">*</type:modifier></type> <name pos:line="14400" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14401" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="14401" pos:column="35">__RPC__inout_opt</name> <name pos:line="14401" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="14401" pos:column="66">*</type:modifier></type><name pos:line="14401" pos:column="67">pBegPosition</name></decl></param>,
            <comment type="block" pos:line="14402" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="14402" pos:column="35">__RPC__inout_opt</name> <name pos:line="14402" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="14402" pos:column="66">*</type:modifier></type><name pos:line="14402" pos:column="67">pEndPosition</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14404" pos:column="9">HRESULT</name></type> ( <name pos:line="14404" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14404" pos:column="37">*</type:modifier><name pos:line="14404" pos:column="38">GetSourceRange</name> )<parameter_list pos:line="14404" pos:column="54">( 
            <param><decl><type><name pos:line="14405" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14405" pos:column="36">*</type:modifier></type> <name pos:line="14405" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14406" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="14406" pos:column="35">__RPC__inout_opt</name> <name pos:line="14406" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="14406" pos:column="66">*</type:modifier></type><name pos:line="14406" pos:column="67">pBegPosition</name></decl></param>,
            <comment type="block" pos:line="14407" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="14407" pos:column="35">__RPC__inout_opt</name> <name pos:line="14407" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="14407" pos:column="66">*</type:modifier></type><name pos:line="14407" pos:column="67">pEndPosition</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14409" pos:column="9">HRESULT</name> <argument_list pos:line="14409" pos:column="17">( <argument pos:line="14409" pos:column="19">STDMETHODCALLTYPE *Compare</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14409" pos:column="47">(</op:operator> 
            <name pos:line="14410" pos:column="13">IDebugDocumentContext2</name> <op:operator pos:line="14410" pos:column="36">*</op:operator> <name pos:line="14410" pos:column="38">This</name><op:operator pos:line="14410" pos:column="42">,</op:operator>
            <comment type="block" pos:line="14411" pos:column="13">/* [in] */</comment> <name pos:line="14411" pos:column="24">DOCCONTEXT_COMPARE</name> <name pos:line="14411" pos:column="43">compare</name><op:operator pos:line="14411" pos:column="50">,</op:operator>
            <comment type="block" pos:line="14412" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="14412" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="14412" pos:column="65">(<argument pos:line="14412" pos:column="66">dwDocContextSetLen</argument>, <argument pos:line="14412" pos:column="86">dwDocContextSetLen</argument>)</argument_list></macro> <name pos:line="14412" pos:column="106">IDebugDocumentContext2</name> <op:operator pos:line="14412" pos:column="129">*</op:operator><op:operator pos:line="14412" pos:column="130">*</op:operator><name pos:line="14412" pos:column="131">rgpDocContextSet</name><op:operator pos:line="14412" pos:column="147">,</op:operator>
            <comment type="block" pos:line="14413" pos:column="13">/* [in] */</comment> <name pos:line="14413" pos:column="24">DWORD</name> <name pos:line="14413" pos:column="30">dwDocContextSetLen</name><op:operator pos:line="14413" pos:column="48">,</op:operator>
            <comment type="block" pos:line="14414" pos:column="13">/* [out] */</comment> <name pos:line="14414" pos:column="25">__RPC__out</name> <name pos:line="14414" pos:column="36">DWORD</name> <op:operator pos:line="14414" pos:column="42">*</op:operator><name pos:line="14414" pos:column="43">pdwDocContext</name><op:operator pos:line="14414" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="14416" pos:column="9">HRESULT</name></type> ( <name pos:line="14416" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14416" pos:column="37">*</type:modifier><name pos:line="14416" pos:column="38">Seek</name> )<parameter_list pos:line="14416" pos:column="44">( 
            <param><decl><type><name pos:line="14417" pos:column="13">IDebugDocumentContext2</name> <type:modifier pos:line="14417" pos:column="36">*</type:modifier></type> <name pos:line="14417" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="14418" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14418" pos:column="24">int</name></type> <name pos:line="14418" pos:column="28">nCount</name></decl></param>,
            <comment type="block" pos:line="14419" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14419" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14419" pos:column="46">IDebugDocumentContext2</name> <type:modifier pos:line="14419" pos:column="69">*</type:modifier><type:modifier pos:line="14419" pos:column="70">*</type:modifier></type><name pos:line="14419" pos:column="71">ppDocContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14421" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14422" pos:column="7">IDebugDocumentContext2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14424" pos:column="5">interface</name></type> <name pos:line="14424" pos:column="15">IDebugDocumentContext2</name>
    <argument_list pos:line="14425" pos:column="5">{
        <argument><expr><name pos:line="14426" pos:column="9">CONST_VTBL</name> struct <name pos:line="14426" pos:column="27">IDebugDocumentContext2Vtbl</name> <op:operator pos:line="14426" pos:column="54">*</op:operator><name pos:line="14426" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14431" pos:column="1">#<cpp:directive pos:line="14431" pos:column="2">ifdef</cpp:directive> <name pos:line="14431" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14434" pos:column="1">#<cpp:directive pos:line="14434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14434" pos:column="9">IDebugDocumentContext2_QueryInterface</name><parameter_list pos:line="14434" pos:column="46">(<param><type><name pos:line="14434" pos:column="47">This</name></type></param>,<param><type><name pos:line="14434" pos:column="52">riid</name></type></param>,<param><type><name pos:line="14434" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14435" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14437" pos:column="1">#<cpp:directive pos:line="14437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14437" pos:column="9">IDebugDocumentContext2_AddRef</name><parameter_list pos:line="14437" pos:column="38">(<param><type><name pos:line="14437" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14438" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14440" pos:column="1">#<cpp:directive pos:line="14440" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14440" pos:column="9">IDebugDocumentContext2_Release</name><parameter_list pos:line="14440" pos:column="39">(<param><type><name pos:line="14440" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14441" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14444" pos:column="1">#<cpp:directive pos:line="14444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14444" pos:column="9">IDebugDocumentContext2_GetDocument</name><parameter_list pos:line="14444" pos:column="43">(<param><type><name pos:line="14444" pos:column="44">This</name></type></param>,<param><type><name pos:line="14444" pos:column="49">ppDocument</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14445" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocument(This,ppDocument) )</cpp:value></cpp:define> 

<cpp:define pos:line="14447" pos:column="1">#<cpp:directive pos:line="14447" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14447" pos:column="9">IDebugDocumentContext2_GetName</name><parameter_list pos:line="14447" pos:column="39">(<param><type><name pos:line="14447" pos:column="40">This</name></type></param>,<param><type><name pos:line="14447" pos:column="45">gnType</name></type></param>,<param><type><name pos:line="14447" pos:column="52">pbstrFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14448" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,gnType,pbstrFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="14450" pos:column="1">#<cpp:directive pos:line="14450" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14450" pos:column="9">IDebugDocumentContext2_EnumCodeContexts</name><parameter_list pos:line="14450" pos:column="48">(<param><type><name pos:line="14450" pos:column="49">This</name></type></param>,<param><type><name pos:line="14450" pos:column="54">ppEnumCodeCxts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14451" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumCodeContexts(This,ppEnumCodeCxts) )</cpp:value></cpp:define> 

<cpp:define pos:line="14453" pos:column="1">#<cpp:directive pos:line="14453" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14453" pos:column="9">IDebugDocumentContext2_GetLanguageInfo</name><parameter_list pos:line="14453" pos:column="47">(<param><type><name pos:line="14453" pos:column="48">This</name></type></param>,<param><type><name pos:line="14453" pos:column="53">pbstrLanguage</name></type></param>,<param><type><name pos:line="14453" pos:column="67">pguidLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14454" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLanguageInfo(This,pbstrLanguage,pguidLanguage) )</cpp:value></cpp:define> 

<cpp:define pos:line="14456" pos:column="1">#<cpp:directive pos:line="14456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14456" pos:column="9">IDebugDocumentContext2_GetStatementRange</name><parameter_list pos:line="14456" pos:column="49">(<param><type><name pos:line="14456" pos:column="50">This</name></type></param>,<param><type><name pos:line="14456" pos:column="55">pBegPosition</name></type></param>,<param><type><name pos:line="14456" pos:column="68">pEndPosition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14457" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStatementRange(This,pBegPosition,pEndPosition) )</cpp:value></cpp:define> 

<cpp:define pos:line="14459" pos:column="1">#<cpp:directive pos:line="14459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14459" pos:column="9">IDebugDocumentContext2_GetSourceRange</name><parameter_list pos:line="14459" pos:column="46">(<param><type><name pos:line="14459" pos:column="47">This</name></type></param>,<param><type><name pos:line="14459" pos:column="52">pBegPosition</name></type></param>,<param><type><name pos:line="14459" pos:column="65">pEndPosition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14460" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceRange(This,pBegPosition,pEndPosition) )</cpp:value></cpp:define> 

<cpp:define pos:line="14462" pos:column="1">#<cpp:directive pos:line="14462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14462" pos:column="9">IDebugDocumentContext2_Compare</name><parameter_list pos:line="14462" pos:column="39">(<param><type><name pos:line="14462" pos:column="40">This</name></type></param>,<param><type><name pos:line="14462" pos:column="45">compare</name></type></param>,<param><type><name pos:line="14462" pos:column="53">rgpDocContextSet</name></type></param>,<param><type><name pos:line="14462" pos:column="70">dwDocContextSetLen</name></type></param>,<param><type><name pos:line="14462" pos:column="89">pdwDocContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14463" pos:column="5">( (This)-&gt;lpVtbl -&gt; Compare(This,compare,rgpDocContextSet,dwDocContextSetLen,pdwDocContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="14465" pos:column="1">#<cpp:directive pos:line="14465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14465" pos:column="9">IDebugDocumentContext2_Seek</name><parameter_list pos:line="14465" pos:column="36">(<param><type><name pos:line="14465" pos:column="37">This</name></type></param>,<param><type><name pos:line="14465" pos:column="42">nCount</name></type></param>,<param><type><name pos:line="14465" pos:column="49">ppDocContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14466" pos:column="5">( (This)-&gt;lpVtbl -&gt; Seek(This,nCount,ppDocContext) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14468" pos:column="1">#<cpp:directive pos:line="14468" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14468" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14471" pos:column="1">#<cpp:directive pos:line="14471" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14471" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14476" pos:column="1">#<cpp:directive pos:line="14476" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14476" pos:column="9">/* __IDebugDocumentContext2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14479" pos:column="1">#<cpp:directive pos:line="14479" pos:column="2">ifndef</cpp:directive> <name pos:line="14479" pos:column="9">__IDebugDocumentChecksum2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14480" pos:column="1">#<cpp:directive pos:line="14480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14480" pos:column="9">__IDebugDocumentChecksum2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14482" pos:column="1">/* interface IDebugDocumentChecksum2 */</comment>
<comment type="block" pos:line="14483" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="14486" pos:column="1">EXTERN_C</name> <specifier pos:line="14486" pos:column="10">const</specifier> <name pos:line="14486" pos:column="16">IID</name></type> <name pos:line="14486" pos:column="20">IID_IDebugDocumentChecksum2</name></decl>;</decl_stmt>

<cpp:if pos:line="14488" pos:column="1">#<cpp:directive pos:line="14488" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14488" pos:column="5">defined</name><argument_list pos:line="14488" pos:column="12">(<argument><expr><name pos:line="14488" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14488" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14488" pos:column="29">!</op:operator><call><name pos:line="14488" pos:column="30">defined</name><argument_list pos:line="14488" pos:column="37">(<argument><expr><name pos:line="14488" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14490" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14490" pos:column="19">(<argument pos:line="14490" pos:column="20">"c1c74db7-a3a7-40a2-a279-a63ba756b8b0"</argument>)</argument_list></macro>
    <label><name pos:line="14491" pos:column="5">IDebugDocumentChecksum2</name> :</label> <expr_stmt><expr pos:line="14491" pos:column="31">public <name pos:line="14491" pos:column="38">IUnknown</name>
    <block pos:line="14492" pos:column="5">{
    <expr pos:line="14493" pos:column="5">public<op:operator pos:line="14493" pos:column="11">:</op:operator>
        virtual <name pos:line="14494" pos:column="17">HRESULT</name> <name pos:line="14494" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14494" pos:column="43">GetChecksumAndAlgorithmId</name><argument_list pos:line="14494" pos:column="68">( 
            <comment type="block" pos:line="14495" pos:column="13">/* [out] */</comment> <argument pos:line="14495" pos:column="25">__RPC__out GUID *pRetVal</argument>,
            <comment type="block" pos:line="14496" pos:column="13">/* [in] */</comment> <argument pos:line="14496" pos:column="24">ULONG cMaxBytes</argument>,
            <comment type="block" pos:line="14497" pos:column="13">/* [size_is][length_is][out] */</comment> <argument pos:line="14497" pos:column="45">__RPC__out_ecount_part(cMaxBytes, *pcNumBytes) BYTE *pChecksum</argument>,
            <comment type="block" pos:line="14498" pos:column="13">/* [out] */</comment> <argument pos:line="14498" pos:column="25">__RPC__out ULONG *pcNumBytes</argument>)</argument_list></macro> <op:operator pos:line="14498" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="14498" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14502" pos:column="1">#<cpp:directive pos:line="14502" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14502" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14504" pos:column="5">typedef <type><struct pos:line="14504" pos:column="13">struct <name pos:line="14504" pos:column="20">IDebugDocumentChecksum2Vtbl</name>
    <block pos:line="14505" pos:column="5">{<public type="default" pos:line="14505" pos:column="6">
        <function_decl><type><name pos:line="14506" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14508" pos:column="9">HRESULT</name></type> ( <name pos:line="14508" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14508" pos:column="37">*</type:modifier><name pos:line="14508" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14508" pos:column="54">( 
            <param><decl><type><name pos:line="14509" pos:column="13">IDebugDocumentChecksum2</name> <type:modifier pos:line="14509" pos:column="37">*</type:modifier></type> <name pos:line="14509" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="14510" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14510" pos:column="24">__RPC__in</name> <name pos:line="14510" pos:column="34">REFIID</name></type> <name pos:line="14510" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14511" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14512" pos:column="13">__RPC__deref_out</name>  <name pos:line="14512" pos:column="31">void</name> <type:modifier pos:line="14512" pos:column="36">*</type:modifier><type:modifier pos:line="14512" pos:column="37">*</type:modifier></type><name pos:line="14512" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14514" pos:column="9">ULONG</name></type> ( <name pos:line="14514" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14514" pos:column="35">*</type:modifier><name pos:line="14514" pos:column="36">AddRef</name> )<parameter_list pos:line="14514" pos:column="44">( 
            <param><decl><type><name pos:line="14515" pos:column="13">IDebugDocumentChecksum2</name> <type:modifier pos:line="14515" pos:column="37">*</type:modifier></type> <name pos:line="14515" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14517" pos:column="9">ULONG</name></type> ( <name pos:line="14517" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14517" pos:column="35">*</type:modifier><name pos:line="14517" pos:column="36">Release</name> )<parameter_list pos:line="14517" pos:column="45">( 
            <param><decl><type><name pos:line="14518" pos:column="13">IDebugDocumentChecksum2</name> <type:modifier pos:line="14518" pos:column="37">*</type:modifier></type> <name pos:line="14518" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14520" pos:column="9">HRESULT</name> <argument_list pos:line="14520" pos:column="17">( <argument pos:line="14520" pos:column="19">STDMETHODCALLTYPE *GetChecksumAndAlgorithmId</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14520" pos:column="65">(</op:operator> 
            <name pos:line="14521" pos:column="13">IDebugDocumentChecksum2</name> <op:operator pos:line="14521" pos:column="37">*</op:operator> <name pos:line="14521" pos:column="39">This</name><op:operator pos:line="14521" pos:column="43">,</op:operator>
            <comment type="block" pos:line="14522" pos:column="13">/* [out] */</comment> <name pos:line="14522" pos:column="25">__RPC__out</name> <name pos:line="14522" pos:column="36">GUID</name> <op:operator pos:line="14522" pos:column="41">*</op:operator><name pos:line="14522" pos:column="42">pRetVal</name><op:operator pos:line="14522" pos:column="49">,</op:operator>
            <comment type="block" pos:line="14523" pos:column="13">/* [in] */</comment> <name pos:line="14523" pos:column="24">ULONG</name> <name pos:line="14523" pos:column="30">cMaxBytes</name><op:operator pos:line="14523" pos:column="39">,</op:operator>
            <comment type="block" pos:line="14524" pos:column="13">/* [size_is][length_is][out] */</comment> <macro><name pos:line="14524" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="14524" pos:column="67">(<argument pos:line="14524" pos:column="68">cMaxBytes</argument>, <argument pos:line="14524" pos:column="79">*pcNumBytes</argument>)</argument_list></macro> <name pos:line="14524" pos:column="92">BYTE</name> <op:operator pos:line="14524" pos:column="97">*</op:operator><name pos:line="14524" pos:column="98">pChecksum</name><op:operator pos:line="14524" pos:column="107">,</op:operator>
            <comment type="block" pos:line="14525" pos:column="13">/* [out] */</comment> <name pos:line="14525" pos:column="25">__RPC__out</name> <name pos:line="14525" pos:column="36">ULONG</name> <op:operator pos:line="14525" pos:column="42">*</op:operator><name pos:line="14525" pos:column="43">pcNumBytes</name><op:operator pos:line="14525" pos:column="53">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="14527" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14528" pos:column="7">IDebugDocumentChecksum2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14530" pos:column="5">interface</name></type> <name pos:line="14530" pos:column="15">IDebugDocumentChecksum2</name>
    <argument_list pos:line="14531" pos:column="5">{
        <argument><expr><name pos:line="14532" pos:column="9">CONST_VTBL</name> struct <name pos:line="14532" pos:column="27">IDebugDocumentChecksum2Vtbl</name> <op:operator pos:line="14532" pos:column="55">*</op:operator><name pos:line="14532" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14537" pos:column="1">#<cpp:directive pos:line="14537" pos:column="2">ifdef</cpp:directive> <name pos:line="14537" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14540" pos:column="1">#<cpp:directive pos:line="14540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14540" pos:column="9">IDebugDocumentChecksum2_QueryInterface</name><parameter_list pos:line="14540" pos:column="47">(<param><type><name pos:line="14540" pos:column="48">This</name></type></param>,<param><type><name pos:line="14540" pos:column="53">riid</name></type></param>,<param><type><name pos:line="14540" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14541" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14543" pos:column="1">#<cpp:directive pos:line="14543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14543" pos:column="9">IDebugDocumentChecksum2_AddRef</name><parameter_list pos:line="14543" pos:column="39">(<param><type><name pos:line="14543" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14544" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14546" pos:column="1">#<cpp:directive pos:line="14546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14546" pos:column="9">IDebugDocumentChecksum2_Release</name><parameter_list pos:line="14546" pos:column="40">(<param><type><name pos:line="14546" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14547" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14550" pos:column="1">#<cpp:directive pos:line="14550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14550" pos:column="9">IDebugDocumentChecksum2_GetChecksumAndAlgorithmId</name><parameter_list pos:line="14550" pos:column="58">(<param><type><name pos:line="14550" pos:column="59">This</name></type></param>,<param><type><name pos:line="14550" pos:column="64">pRetVal</name></type></param>,<param><type><name pos:line="14550" pos:column="72">cMaxBytes</name></type></param>,<param><type><name pos:line="14550" pos:column="82">pChecksum</name></type></param>,<param><type><name pos:line="14550" pos:column="92">pcNumBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14551" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetChecksumAndAlgorithmId(This,pRetVal,cMaxBytes,pChecksum,pcNumBytes) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14553" pos:column="1">#<cpp:directive pos:line="14553" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14553" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14556" pos:column="1">#<cpp:directive pos:line="14556" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14556" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14561" pos:column="1">#<cpp:directive pos:line="14561" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14561" pos:column="9">/* __IDebugDocumentChecksum2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14564" pos:column="1">#<cpp:directive pos:line="14564" pos:column="2">ifndef</cpp:directive> <name pos:line="14564" pos:column="9">__IDebugENCDocumentContextUpdate_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14565" pos:column="1">#<cpp:directive pos:line="14565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14565" pos:column="9">__IDebugENCDocumentContextUpdate_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14567" pos:column="1">/* interface IDebugENCDocumentContextUpdate */</comment>
<comment type="block" pos:line="14568" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="14571" pos:column="1">EXTERN_C</name> <specifier pos:line="14571" pos:column="10">const</specifier> <name pos:line="14571" pos:column="16">IID</name></type> <name pos:line="14571" pos:column="20">IID_IDebugENCDocumentContextUpdate</name></decl>;</decl_stmt>

<cpp:if pos:line="14573" pos:column="1">#<cpp:directive pos:line="14573" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14573" pos:column="5">defined</name><argument_list pos:line="14573" pos:column="12">(<argument><expr><name pos:line="14573" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14573" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14573" pos:column="29">!</op:operator><call><name pos:line="14573" pos:column="30">defined</name><argument_list pos:line="14573" pos:column="37">(<argument><expr><name pos:line="14573" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14575" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14575" pos:column="19">(<argument pos:line="14575" pos:column="20">"F5637291-D779-4580-A82C-0D523E7FDCF0"</argument>)</argument_list></macro>
    <label><name pos:line="14576" pos:column="5">IDebugENCDocumentContextUpdate</name> :</label> <expr_stmt><expr pos:line="14576" pos:column="38">public <name pos:line="14576" pos:column="45">IUnknown</name>
    <block pos:line="14577" pos:column="5">{
    <expr pos:line="14578" pos:column="5">public<op:operator pos:line="14578" pos:column="11">:</op:operator>
        virtual <name pos:line="14579" pos:column="17">HRESULT</name> <name pos:line="14579" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14579" pos:column="43">UpdateDocumentContext</name><argument_list pos:line="14579" pos:column="64">( 
            <comment type="block" pos:line="14580" pos:column="13">/* [in] */</comment> <argument pos:line="14580" pos:column="24">__RPC__in_opt IDebugCodeContext2 *pContext</argument>,
            <comment type="block" pos:line="14581" pos:column="13">/* [in] */</comment> <argument pos:line="14581" pos:column="24">__RPC__in_opt IDebugDocumentContext2 *pDocContext</argument>)</argument_list></macro> <op:operator pos:line="14581" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="14581" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="14583" pos:column="9">virtual <name pos:line="14583" pos:column="17">HRESULT</name> <name pos:line="14583" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14583" pos:column="43">UpdateStatementPosition</name><argument_list pos:line="14583" pos:column="66">( 
            <comment type="block" pos:line="14584" pos:column="13">/* [in] */</comment> <argument pos:line="14584" pos:column="24">TEXT_POSITION posBegStatement</argument>,
            <comment type="block" pos:line="14585" pos:column="13">/* [in] */</comment> <argument pos:line="14585" pos:column="24">TEXT_POSITION posEndStatement</argument>)</argument_list></macro> <op:operator pos:line="14585" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="14585" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14589" pos:column="1">#<cpp:directive pos:line="14589" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14589" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14591" pos:column="5">typedef <type><struct pos:line="14591" pos:column="13">struct <name pos:line="14591" pos:column="20">IDebugENCDocumentContextUpdateVtbl</name>
    <block pos:line="14592" pos:column="5">{<public type="default" pos:line="14592" pos:column="6">
        <function_decl><type><name pos:line="14593" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14595" pos:column="9">HRESULT</name></type> ( <name pos:line="14595" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14595" pos:column="37">*</type:modifier><name pos:line="14595" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14595" pos:column="54">( 
            <param><decl><type><name pos:line="14596" pos:column="13">IDebugENCDocumentContextUpdate</name> <type:modifier pos:line="14596" pos:column="44">*</type:modifier></type> <name pos:line="14596" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="14597" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14597" pos:column="24">__RPC__in</name> <name pos:line="14597" pos:column="34">REFIID</name></type> <name pos:line="14597" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14598" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14599" pos:column="13">__RPC__deref_out</name>  <name pos:line="14599" pos:column="31">void</name> <type:modifier pos:line="14599" pos:column="36">*</type:modifier><type:modifier pos:line="14599" pos:column="37">*</type:modifier></type><name pos:line="14599" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14601" pos:column="9">ULONG</name></type> ( <name pos:line="14601" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14601" pos:column="35">*</type:modifier><name pos:line="14601" pos:column="36">AddRef</name> )<parameter_list pos:line="14601" pos:column="44">( 
            <param><decl><type><name pos:line="14602" pos:column="13">IDebugENCDocumentContextUpdate</name> <type:modifier pos:line="14602" pos:column="44">*</type:modifier></type> <name pos:line="14602" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14604" pos:column="9">ULONG</name></type> ( <name pos:line="14604" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14604" pos:column="35">*</type:modifier><name pos:line="14604" pos:column="36">Release</name> )<parameter_list pos:line="14604" pos:column="45">( 
            <param><decl><type><name pos:line="14605" pos:column="13">IDebugENCDocumentContextUpdate</name> <type:modifier pos:line="14605" pos:column="44">*</type:modifier></type> <name pos:line="14605" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14607" pos:column="9">HRESULT</name></type> ( <name pos:line="14607" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14607" pos:column="37">*</type:modifier><name pos:line="14607" pos:column="38">UpdateDocumentContext</name> )<parameter_list pos:line="14607" pos:column="61">( 
            <param><decl><type><name pos:line="14608" pos:column="13">IDebugENCDocumentContextUpdate</name> <type:modifier pos:line="14608" pos:column="44">*</type:modifier></type> <name pos:line="14608" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="14609" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14609" pos:column="24">__RPC__in_opt</name> <name pos:line="14609" pos:column="38">IDebugCodeContext2</name> <type:modifier pos:line="14609" pos:column="57">*</type:modifier></type><name pos:line="14609" pos:column="58">pContext</name></decl></param>,
            <comment type="block" pos:line="14610" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14610" pos:column="24">__RPC__in_opt</name> <name pos:line="14610" pos:column="38">IDebugDocumentContext2</name> <type:modifier pos:line="14610" pos:column="61">*</type:modifier></type><name pos:line="14610" pos:column="62">pDocContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14612" pos:column="9">HRESULT</name></type> ( <name pos:line="14612" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14612" pos:column="37">*</type:modifier><name pos:line="14612" pos:column="38">UpdateStatementPosition</name> )<parameter_list pos:line="14612" pos:column="63">( 
            <param><decl><type><name pos:line="14613" pos:column="13">IDebugENCDocumentContextUpdate</name> <type:modifier pos:line="14613" pos:column="44">*</type:modifier></type> <name pos:line="14613" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="14614" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14614" pos:column="24">TEXT_POSITION</name></type> <name pos:line="14614" pos:column="38">posBegStatement</name></decl></param>,
            <comment type="block" pos:line="14615" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14615" pos:column="24">TEXT_POSITION</name></type> <name pos:line="14615" pos:column="38">posEndStatement</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14617" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14618" pos:column="7">IDebugENCDocumentContextUpdateVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14620" pos:column="5">interface</name></type> <name pos:line="14620" pos:column="15">IDebugENCDocumentContextUpdate</name>
    <argument_list pos:line="14621" pos:column="5">{
        <argument><expr><name pos:line="14622" pos:column="9">CONST_VTBL</name> struct <name pos:line="14622" pos:column="27">IDebugENCDocumentContextUpdateVtbl</name> <op:operator pos:line="14622" pos:column="62">*</op:operator><name pos:line="14622" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14627" pos:column="1">#<cpp:directive pos:line="14627" pos:column="2">ifdef</cpp:directive> <name pos:line="14627" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14630" pos:column="1">#<cpp:directive pos:line="14630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14630" pos:column="9">IDebugENCDocumentContextUpdate_QueryInterface</name><parameter_list pos:line="14630" pos:column="54">(<param><type><name pos:line="14630" pos:column="55">This</name></type></param>,<param><type><name pos:line="14630" pos:column="60">riid</name></type></param>,<param><type><name pos:line="14630" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14631" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14633" pos:column="1">#<cpp:directive pos:line="14633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14633" pos:column="9">IDebugENCDocumentContextUpdate_AddRef</name><parameter_list pos:line="14633" pos:column="46">(<param><type><name pos:line="14633" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14634" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14636" pos:column="1">#<cpp:directive pos:line="14636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14636" pos:column="9">IDebugENCDocumentContextUpdate_Release</name><parameter_list pos:line="14636" pos:column="47">(<param><type><name pos:line="14636" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14637" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14640" pos:column="1">#<cpp:directive pos:line="14640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14640" pos:column="9">IDebugENCDocumentContextUpdate_UpdateDocumentContext</name><parameter_list pos:line="14640" pos:column="61">(<param><type><name pos:line="14640" pos:column="62">This</name></type></param>,<param><type><name pos:line="14640" pos:column="67">pContext</name></type></param>,<param><type><name pos:line="14640" pos:column="76">pDocContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14641" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateDocumentContext(This,pContext,pDocContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="14643" pos:column="1">#<cpp:directive pos:line="14643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14643" pos:column="9">IDebugENCDocumentContextUpdate_UpdateStatementPosition</name><parameter_list pos:line="14643" pos:column="63">(<param><type><name pos:line="14643" pos:column="64">This</name></type></param>,<param><type><name pos:line="14643" pos:column="69">posBegStatement</name></type></param>,<param><type><name pos:line="14643" pos:column="85">posEndStatement</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14644" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateStatementPosition(This,posBegStatement,posEndStatement) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14646" pos:column="1">#<cpp:directive pos:line="14646" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14646" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14649" pos:column="1">#<cpp:directive pos:line="14649" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14649" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14654" pos:column="1">#<cpp:directive pos:line="14654" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14654" pos:column="9">/* __IDebugENCDocumentContextUpdate_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14657" pos:column="1">#<cpp:directive pos:line="14657" pos:column="2">ifndef</cpp:directive> <name pos:line="14657" pos:column="9">__IDebugExpressionContext2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14658" pos:column="1">#<cpp:directive pos:line="14658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14658" pos:column="9">__IDebugExpressionContext2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14660" pos:column="1">/* interface IDebugExpressionContext2 */</comment>
<comment type="block" pos:line="14661" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="14664" pos:column="1">enum <name pos:line="14664" pos:column="6">enum_PARSEFLAGS</name>
    <block pos:line="14665" pos:column="5">{	<decl><name pos:line="14665" pos:column="9">PARSE_EXPRESSION</name>	<init pos:line="14665" pos:column="33">= <expr><lit:literal type="number" pos:line="14665" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14665" pos:column="38">,</op:operator>
	<decl><name pos:line="14666" pos:column="9">PARSE_FUNCTION_AS_ADDRESS</name>	<init pos:line="14666" pos:column="41">= <expr><lit:literal type="number" pos:line="14666" pos:column="43">0x2</lit:literal></expr></init></decl><op:operator pos:line="14666" pos:column="46">,</op:operator>
	<decl><name pos:line="14667" pos:column="9">PARSE_DESIGN_TIME_EXPR_EVAL</name>	<init pos:line="14667" pos:column="41">= <expr><lit:literal type="number" pos:line="14667" pos:column="43">0x1000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14669" pos:column="1">typedef <type><name pos:line="14669" pos:column="9">DWORD</name></type> <name pos:line="14669" pos:column="15">PARSEFLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="14672" pos:column="1">EXTERN_C</name> <specifier pos:line="14672" pos:column="10">const</specifier> <name pos:line="14672" pos:column="16">IID</name></type> <name pos:line="14672" pos:column="20">IID_IDebugExpressionContext2</name></decl>;</decl_stmt>

<cpp:if pos:line="14674" pos:column="1">#<cpp:directive pos:line="14674" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14674" pos:column="5">defined</name><argument_list pos:line="14674" pos:column="12">(<argument><expr><name pos:line="14674" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14674" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14674" pos:column="29">!</op:operator><call><name pos:line="14674" pos:column="30">defined</name><argument_list pos:line="14674" pos:column="37">(<argument><expr><name pos:line="14674" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14676" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14676" pos:column="19">(<argument pos:line="14676" pos:column="20">"37a44580-d5fc-473e-a048-21702ebfc466"</argument>)</argument_list></macro>
    <label><name pos:line="14677" pos:column="5">IDebugExpressionContext2</name> :</label> <expr_stmt><expr pos:line="14677" pos:column="32">public <name pos:line="14677" pos:column="39">IUnknown</name>
    <block pos:line="14678" pos:column="5">{
    <expr pos:line="14679" pos:column="5">public<op:operator pos:line="14679" pos:column="11">:</op:operator>
        virtual <name pos:line="14680" pos:column="17">HRESULT</name> <name pos:line="14680" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14680" pos:column="43">GetName</name><argument_list pos:line="14680" pos:column="50">( 
            <comment type="block" pos:line="14681" pos:column="13">/* [out] */</comment> <argument pos:line="14681" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="14681" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="14681" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="14683" pos:column="9">virtual <name pos:line="14683" pos:column="17">HRESULT</name> <name pos:line="14683" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14683" pos:column="43">ParseText</name><argument_list pos:line="14683" pos:column="52">( 
            <comment type="block" pos:line="14684" pos:column="13">/* [in] */</comment> <argument pos:line="14684" pos:column="24">__RPC__in LPCOLESTR pszCode</argument>,
            <comment type="block" pos:line="14685" pos:column="13">/* [in] */</comment> <argument pos:line="14685" pos:column="24">PARSEFLAGS dwFlags</argument>,
            <comment type="block" pos:line="14686" pos:column="13">/* [in] */</comment> <argument pos:line="14686" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="14687" pos:column="13">/* [out] */</comment> <argument pos:line="14687" pos:column="25">__RPC__deref_out_opt IDebugExpression2 **ppExpr</argument>,
            <comment type="block" pos:line="14688" pos:column="13">/* [out] */</comment> <argument pos:line="14688" pos:column="25">__RPC__deref_out_opt BSTR *pbstrError</argument>,
            <comment type="block" pos:line="14689" pos:column="13">/* [out] */</comment> <argument pos:line="14689" pos:column="25">__RPC__out UINT *pichError</argument>)</argument_list></macro> <op:operator pos:line="14689" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="14689" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14693" pos:column="1">#<cpp:directive pos:line="14693" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14693" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14695" pos:column="5">typedef <type><struct pos:line="14695" pos:column="13">struct <name pos:line="14695" pos:column="20">IDebugExpressionContext2Vtbl</name>
    <block pos:line="14696" pos:column="5">{<public type="default" pos:line="14696" pos:column="6">
        <function_decl><type><name pos:line="14697" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14699" pos:column="9">HRESULT</name></type> ( <name pos:line="14699" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14699" pos:column="37">*</type:modifier><name pos:line="14699" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14699" pos:column="54">( 
            <param><decl><type><name pos:line="14700" pos:column="13">IDebugExpressionContext2</name> <type:modifier pos:line="14700" pos:column="38">*</type:modifier></type> <name pos:line="14700" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14701" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14701" pos:column="24">__RPC__in</name> <name pos:line="14701" pos:column="34">REFIID</name></type> <name pos:line="14701" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14702" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14703" pos:column="13">__RPC__deref_out</name>  <name pos:line="14703" pos:column="31">void</name> <type:modifier pos:line="14703" pos:column="36">*</type:modifier><type:modifier pos:line="14703" pos:column="37">*</type:modifier></type><name pos:line="14703" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14705" pos:column="9">ULONG</name></type> ( <name pos:line="14705" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14705" pos:column="35">*</type:modifier><name pos:line="14705" pos:column="36">AddRef</name> )<parameter_list pos:line="14705" pos:column="44">( 
            <param><decl><type><name pos:line="14706" pos:column="13">IDebugExpressionContext2</name> <type:modifier pos:line="14706" pos:column="38">*</type:modifier></type> <name pos:line="14706" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14708" pos:column="9">ULONG</name></type> ( <name pos:line="14708" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14708" pos:column="35">*</type:modifier><name pos:line="14708" pos:column="36">Release</name> )<parameter_list pos:line="14708" pos:column="45">( 
            <param><decl><type><name pos:line="14709" pos:column="13">IDebugExpressionContext2</name> <type:modifier pos:line="14709" pos:column="38">*</type:modifier></type> <name pos:line="14709" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14711" pos:column="9">HRESULT</name></type> ( <name pos:line="14711" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14711" pos:column="37">*</type:modifier><name pos:line="14711" pos:column="38">GetName</name> )<parameter_list pos:line="14711" pos:column="47">( 
            <param><decl><type><name pos:line="14712" pos:column="13">IDebugExpressionContext2</name> <type:modifier pos:line="14712" pos:column="38">*</type:modifier></type> <name pos:line="14712" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14713" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14713" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14713" pos:column="46">BSTR</name> <type:modifier pos:line="14713" pos:column="51">*</type:modifier></type><name pos:line="14713" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14715" pos:column="9">HRESULT</name></type> ( <name pos:line="14715" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14715" pos:column="37">*</type:modifier><name pos:line="14715" pos:column="38">ParseText</name> )<parameter_list pos:line="14715" pos:column="49">( 
            <param><decl><type><name pos:line="14716" pos:column="13">IDebugExpressionContext2</name> <type:modifier pos:line="14716" pos:column="38">*</type:modifier></type> <name pos:line="14716" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14717" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14717" pos:column="24">__RPC__in</name> <name pos:line="14717" pos:column="34">LPCOLESTR</name></type> <name pos:line="14717" pos:column="44">pszCode</name></decl></param>,
            <comment type="block" pos:line="14718" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14718" pos:column="24">PARSEFLAGS</name></type> <name pos:line="14718" pos:column="35">dwFlags</name></decl></param>,
            <comment type="block" pos:line="14719" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14719" pos:column="24">UINT</name></type> <name pos:line="14719" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="14720" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14720" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14720" pos:column="46">IDebugExpression2</name> <type:modifier pos:line="14720" pos:column="64">*</type:modifier><type:modifier pos:line="14720" pos:column="65">*</type:modifier></type><name pos:line="14720" pos:column="66">ppExpr</name></decl></param>,
            <comment type="block" pos:line="14721" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14721" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14721" pos:column="46">BSTR</name> <type:modifier pos:line="14721" pos:column="51">*</type:modifier></type><name pos:line="14721" pos:column="52">pbstrError</name></decl></param>,
            <comment type="block" pos:line="14722" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14722" pos:column="25">__RPC__out</name> <name pos:line="14722" pos:column="36">UINT</name> <type:modifier pos:line="14722" pos:column="41">*</type:modifier></type><name pos:line="14722" pos:column="42">pichError</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14724" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14725" pos:column="7">IDebugExpressionContext2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14727" pos:column="5">interface</name></type> <name pos:line="14727" pos:column="15">IDebugExpressionContext2</name>
    <argument_list pos:line="14728" pos:column="5">{
        <argument><expr><name pos:line="14729" pos:column="9">CONST_VTBL</name> struct <name pos:line="14729" pos:column="27">IDebugExpressionContext2Vtbl</name> <op:operator pos:line="14729" pos:column="56">*</op:operator><name pos:line="14729" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14734" pos:column="1">#<cpp:directive pos:line="14734" pos:column="2">ifdef</cpp:directive> <name pos:line="14734" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14737" pos:column="1">#<cpp:directive pos:line="14737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14737" pos:column="9">IDebugExpressionContext2_QueryInterface</name><parameter_list pos:line="14737" pos:column="48">(<param><type><name pos:line="14737" pos:column="49">This</name></type></param>,<param><type><name pos:line="14737" pos:column="54">riid</name></type></param>,<param><type><name pos:line="14737" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14738" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14740" pos:column="1">#<cpp:directive pos:line="14740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14740" pos:column="9">IDebugExpressionContext2_AddRef</name><parameter_list pos:line="14740" pos:column="40">(<param><type><name pos:line="14740" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14741" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14743" pos:column="1">#<cpp:directive pos:line="14743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14743" pos:column="9">IDebugExpressionContext2_Release</name><parameter_list pos:line="14743" pos:column="41">(<param><type><name pos:line="14743" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14744" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14747" pos:column="1">#<cpp:directive pos:line="14747" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14747" pos:column="9">IDebugExpressionContext2_GetName</name><parameter_list pos:line="14747" pos:column="41">(<param><type><name pos:line="14747" pos:column="42">This</name></type></param>,<param><type><name pos:line="14747" pos:column="47">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14748" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="14750" pos:column="1">#<cpp:directive pos:line="14750" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14750" pos:column="9">IDebugExpressionContext2_ParseText</name><parameter_list pos:line="14750" pos:column="43">(<param><type><name pos:line="14750" pos:column="44">This</name></type></param>,<param><type><name pos:line="14750" pos:column="49">pszCode</name></type></param>,<param><type><name pos:line="14750" pos:column="57">dwFlags</name></type></param>,<param><type><name pos:line="14750" pos:column="65">nRadix</name></type></param>,<param><type><name pos:line="14750" pos:column="72">ppExpr</name></type></param>,<param><type><name pos:line="14750" pos:column="79">pbstrError</name></type></param>,<param><type><name pos:line="14750" pos:column="90">pichError</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14751" pos:column="5">( (This)-&gt;lpVtbl -&gt; ParseText(This,pszCode,dwFlags,nRadix,ppExpr,pbstrError,pichError) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14753" pos:column="1">#<cpp:directive pos:line="14753" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14753" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14756" pos:column="1">#<cpp:directive pos:line="14756" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14756" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14761" pos:column="1">#<cpp:directive pos:line="14761" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14761" pos:column="9">/* __IDebugExpressionContext2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="14764" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0098 */</comment>
<comment type="block" pos:line="14765" pos:column="1">/* [local] */</comment> 


<enum pos:line="14768" pos:column="1">enum <name pos:line="14768" pos:column="6">enum_BP_TYPE</name>
    <block pos:line="14769" pos:column="5">{	<decl><name pos:line="14769" pos:column="9">BPT_NONE</name>	<init pos:line="14769" pos:column="25">= <expr><lit:literal type="number" pos:line="14769" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="14769" pos:column="28">,</op:operator>
	<decl><name pos:line="14770" pos:column="9">BPT_CODE</name>	<init pos:line="14770" pos:column="25">= <expr><lit:literal type="number" pos:line="14770" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="14770" pos:column="30">,</op:operator>
	<decl><name pos:line="14771" pos:column="9">BPT_DATA</name>	<init pos:line="14771" pos:column="25">= <expr><lit:literal type="number" pos:line="14771" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="14771" pos:column="30">,</op:operator>
	<decl><name pos:line="14772" pos:column="9">BPT_SPECIAL</name>	<init pos:line="14772" pos:column="25">= <expr><lit:literal type="number" pos:line="14772" pos:column="27">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14774" pos:column="1">typedef <type><name pos:line="14774" pos:column="9">DWORD</name></type> <name pos:line="14774" pos:column="15">BP_TYPE</name>;</typedef>


<enum pos:line="14777" pos:column="1">enum <name pos:line="14777" pos:column="6">enum_BP_LOCATION_TYPE</name>
    <block pos:line="14778" pos:column="5">{	<decl><name pos:line="14778" pos:column="9">BPLT_NONE</name>	<init pos:line="14778" pos:column="25">= <expr><lit:literal type="number" pos:line="14778" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="14778" pos:column="28">,</op:operator>
	<decl><name pos:line="14779" pos:column="9">BPLT_FILE_LINE</name>	<init pos:line="14779" pos:column="25">= <expr><lit:literal type="number" pos:line="14779" pos:column="27">0x10000</lit:literal></expr></init></decl><op:operator pos:line="14779" pos:column="34">,</op:operator>
	<decl><name pos:line="14780" pos:column="9">BPLT_FUNC_OFFSET</name>	<init pos:line="14780" pos:column="33">= <expr><lit:literal type="number" pos:line="14780" pos:column="35">0x20000</lit:literal></expr></init></decl><op:operator pos:line="14780" pos:column="42">,</op:operator>
	<decl><name pos:line="14781" pos:column="9">BPLT_CONTEXT</name>	<init pos:line="14781" pos:column="25">= <expr><lit:literal type="number" pos:line="14781" pos:column="27">0x30000</lit:literal></expr></init></decl><op:operator pos:line="14781" pos:column="34">,</op:operator>
	<decl><name pos:line="14782" pos:column="9">BPLT_STRING</name>	<init pos:line="14782" pos:column="25">= <expr><lit:literal type="number" pos:line="14782" pos:column="27">0x40000</lit:literal></expr></init></decl><op:operator pos:line="14782" pos:column="34">,</op:operator>
	<decl><name pos:line="14783" pos:column="9">BPLT_ADDRESS</name>	<init pos:line="14783" pos:column="25">= <expr><lit:literal type="number" pos:line="14783" pos:column="27">0x50000</lit:literal></expr></init></decl><op:operator pos:line="14783" pos:column="34">,</op:operator>
	<decl><name pos:line="14784" pos:column="9">BPLT_RESOLUTION</name>	<init pos:line="14784" pos:column="25">= <expr><lit:literal type="number" pos:line="14784" pos:column="27">0x60000</lit:literal></expr></init></decl><op:operator pos:line="14784" pos:column="34">,</op:operator>
	<decl><name pos:line="14785" pos:column="9">BPLT_CODE_FILE_LINE</name>	<init pos:line="14785" pos:column="33">= <expr><op:operator pos:line="14785" pos:column="35">(</op:operator> <name pos:line="14785" pos:column="37">BPT_CODE</name> <op:operator pos:line="14785" pos:column="46">|</op:operator> <name pos:line="14785" pos:column="48">BPLT_FILE_LINE</name> <op:operator pos:line="14785" pos:column="63">)</op:operator></expr></init></decl> <op:operator pos:line="14785" pos:column="65">,</op:operator>
	<decl><name pos:line="14786" pos:column="9">BPLT_CODE_FUNC_OFFSET</name>	<init pos:line="14786" pos:column="33">= <expr><op:operator pos:line="14786" pos:column="35">(</op:operator> <name pos:line="14786" pos:column="37">BPT_CODE</name> <op:operator pos:line="14786" pos:column="46">|</op:operator> <name pos:line="14786" pos:column="48">BPLT_FUNC_OFFSET</name> <op:operator pos:line="14786" pos:column="65">)</op:operator></expr></init></decl> <op:operator pos:line="14786" pos:column="67">,</op:operator>
	<decl><name pos:line="14787" pos:column="9">BPLT_CODE_CONTEXT</name>	<init pos:line="14787" pos:column="33">= <expr><op:operator pos:line="14787" pos:column="35">(</op:operator> <name pos:line="14787" pos:column="37">BPT_CODE</name> <op:operator pos:line="14787" pos:column="46">|</op:operator> <name pos:line="14787" pos:column="48">BPLT_CONTEXT</name> <op:operator pos:line="14787" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="14787" pos:column="63">,</op:operator>
	<decl><name pos:line="14788" pos:column="9">BPLT_CODE_STRING</name>	<init pos:line="14788" pos:column="33">= <expr><op:operator pos:line="14788" pos:column="35">(</op:operator> <name pos:line="14788" pos:column="37">BPT_CODE</name> <op:operator pos:line="14788" pos:column="46">|</op:operator> <name pos:line="14788" pos:column="48">BPLT_STRING</name> <op:operator pos:line="14788" pos:column="60">)</op:operator></expr></init></decl> <op:operator pos:line="14788" pos:column="62">,</op:operator>
	<decl><name pos:line="14789" pos:column="9">BPLT_CODE_ADDRESS</name>	<init pos:line="14789" pos:column="33">= <expr><op:operator pos:line="14789" pos:column="35">(</op:operator> <name pos:line="14789" pos:column="37">BPT_CODE</name> <op:operator pos:line="14789" pos:column="46">|</op:operator> <name pos:line="14789" pos:column="48">BPLT_ADDRESS</name> <op:operator pos:line="14789" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="14789" pos:column="63">,</op:operator>
	<decl><name pos:line="14790" pos:column="9">BPLT_DATA_STRING</name>	<init pos:line="14790" pos:column="33">= <expr><op:operator pos:line="14790" pos:column="35">(</op:operator> <name pos:line="14790" pos:column="37">BPT_DATA</name> <op:operator pos:line="14790" pos:column="46">|</op:operator> <name pos:line="14790" pos:column="48">BPLT_STRING</name> <op:operator pos:line="14790" pos:column="60">)</op:operator></expr></init></decl> <op:operator pos:line="14790" pos:column="62">,</op:operator>
	<decl><name pos:line="14791" pos:column="9">BPLT_TYPE_MASK</name>	<init pos:line="14791" pos:column="25">= <expr><lit:literal type="number" pos:line="14791" pos:column="27">0xffff</lit:literal></expr></init></decl><op:operator pos:line="14791" pos:column="33">,</op:operator>
	<decl><name pos:line="14792" pos:column="9">BPLT_LOCATION_TYPE_MASK</name>	<init pos:line="14792" pos:column="33">= <expr><lit:literal type="number" pos:line="14792" pos:column="35">0xffff0000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14794" pos:column="1">typedef <type><name pos:line="14794" pos:column="9">DWORD</name></type> <name pos:line="14794" pos:column="15">BP_LOCATION_TYPE</name>;</typedef>

<typedef pos:line="14796" pos:column="1">typedef <type><struct pos:line="14796" pos:column="9">struct <name pos:line="14796" pos:column="16">_BP_LOCATION_CODE_FILE_LINE</name>
    <block pos:line="14797" pos:column="5">{<public type="default" pos:line="14797" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14798" pos:column="5">BSTR</name></type> <name pos:line="14798" pos:column="10">bstrContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14799" pos:column="5">IDebugDocumentPosition2</name> <type:modifier pos:line="14799" pos:column="29">*</type:modifier></type><name pos:line="14799" pos:column="30">pDocPos</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14800" pos:column="9">BP_LOCATION_CODE_FILE_LINE</name>;</typedef>

<typedef pos:line="14802" pos:column="1">typedef <type><struct pos:line="14802" pos:column="9">struct <name pos:line="14802" pos:column="16">_BP_LOCATION_CODE_FUNC_OFFSET</name>
    <block pos:line="14803" pos:column="5">{<public type="default" pos:line="14803" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14804" pos:column="5">BSTR</name></type> <name pos:line="14804" pos:column="10">bstrContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14805" pos:column="5">IDebugFunctionPosition2</name> <type:modifier pos:line="14805" pos:column="29">*</type:modifier></type><name pos:line="14805" pos:column="30">pFuncPos</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14806" pos:column="9">BP_LOCATION_CODE_FUNC_OFFSET</name>;</typedef>

<typedef pos:line="14808" pos:column="1">typedef <type><struct pos:line="14808" pos:column="9">struct <name pos:line="14808" pos:column="16">_BP_LOCATION_CODE_CONTEXT</name>
    <block pos:line="14809" pos:column="5">{<public type="default" pos:line="14809" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14810" pos:column="5">IDebugCodeContext2</name> <type:modifier pos:line="14810" pos:column="24">*</type:modifier></type><name pos:line="14810" pos:column="25">pCodeContext</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14811" pos:column="9">BP_LOCATION_CODE_CONTEXT</name>;</typedef>

<typedef pos:line="14813" pos:column="1">typedef <type><struct pos:line="14813" pos:column="9">struct <name pos:line="14813" pos:column="16">_BP_LOCATION_CODE_STRING</name>
    <block pos:line="14814" pos:column="5">{<public type="default" pos:line="14814" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14815" pos:column="5">BSTR</name></type> <name pos:line="14815" pos:column="10">bstrContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14816" pos:column="5">BSTR</name></type> <name pos:line="14816" pos:column="10">bstrCodeExpr</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14817" pos:column="9">BP_LOCATION_CODE_STRING</name>;</typedef>

<typedef pos:line="14819" pos:column="1">typedef <type><struct pos:line="14819" pos:column="9">struct <name pos:line="14819" pos:column="16">_BP_LOCATION_CODE_ADDRESS</name>
    <block pos:line="14820" pos:column="5">{<public type="default" pos:line="14820" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14821" pos:column="5">BSTR</name></type> <name pos:line="14821" pos:column="10">bstrContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14822" pos:column="5">BSTR</name></type> <name pos:line="14822" pos:column="10">bstrModuleUrl</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14823" pos:column="5">BSTR</name></type> <name pos:line="14823" pos:column="10">bstrFunction</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14824" pos:column="5">BSTR</name></type> <name pos:line="14824" pos:column="10">bstrAddress</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14825" pos:column="9">BP_LOCATION_CODE_ADDRESS</name>;</typedef>

<typedef pos:line="14827" pos:column="1">typedef <type><struct pos:line="14827" pos:column="9">struct <name pos:line="14827" pos:column="16">_BP_LOCATION_DATA_STRING</name>
    <block pos:line="14828" pos:column="5">{<public type="default" pos:line="14828" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14829" pos:column="5">IDebugThread2</name> <type:modifier pos:line="14829" pos:column="19">*</type:modifier></type><name pos:line="14829" pos:column="20">pThread</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14830" pos:column="5">BSTR</name></type> <name pos:line="14830" pos:column="10">bstrContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14831" pos:column="5">BSTR</name></type> <name pos:line="14831" pos:column="10">bstrDataExpr</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14832" pos:column="5">DWORD</name></type> <name pos:line="14832" pos:column="11">dwNumElements</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14833" pos:column="9">BP_LOCATION_DATA_STRING</name>;</typedef>

<typedef pos:line="14835" pos:column="1">typedef <type><struct pos:line="14835" pos:column="9">struct <name pos:line="14835" pos:column="16">_BP_LOCATION_RESOLUTION</name>
    <block pos:line="14836" pos:column="5">{<public type="default" pos:line="14836" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14837" pos:column="5">IDebugBreakpointResolution2</name> <type:modifier pos:line="14837" pos:column="33">*</type:modifier></type><name pos:line="14837" pos:column="34">pResolution</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14838" pos:column="9">BP_LOCATION_RESOLUTION</name>;</typedef>

<typedef pos:line="14840" pos:column="1">typedef <type><struct pos:line="14840" pos:column="9">struct <name pos:line="14840" pos:column="16">_BP_LOCATION</name>
    <block pos:line="14841" pos:column="5">{<public type="default" pos:line="14841" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14842" pos:column="5">BP_LOCATION_TYPE</name></type> <name pos:line="14842" pos:column="22">bpLocationType</name></decl>;</decl_stmt>
    <comment type="block" pos:line="14843" pos:column="5">/* [switch_type] */</comment> <union pos:line="14843" pos:column="25">union <name pos:line="14843" pos:column="31">__MIDL___MIDL_itf_msdbg_0000_0098_0001</name>
        <block pos:line="14844" pos:column="9">{<public type="default" pos:line="14844" pos:column="10">
        <decl_stmt><decl><type><name pos:line="14845" pos:column="9">BP_LOCATION_CODE_FILE_LINE</name></type> <name pos:line="14845" pos:column="36">bplocCodeFileLine</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14846" pos:column="9">BP_LOCATION_CODE_FUNC_OFFSET</name></type> <name pos:line="14846" pos:column="38">bplocCodeFuncOffset</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14847" pos:column="9">BP_LOCATION_CODE_CONTEXT</name></type> <name pos:line="14847" pos:column="34">bplocCodeContext</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14848" pos:column="9">BP_LOCATION_CODE_STRING</name></type> <name pos:line="14848" pos:column="33">bplocCodeString</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14849" pos:column="9">BP_LOCATION_CODE_ADDRESS</name></type> <name pos:line="14849" pos:column="34">bplocCodeAddress</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14850" pos:column="9">BP_LOCATION_DATA_STRING</name></type> <name pos:line="14850" pos:column="33">bplocDataString</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14851" pos:column="9">BP_LOCATION_RESOLUTION</name></type> <name pos:line="14851" pos:column="32">bplocResolution</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="14852" pos:column="9">DWORD</name></type> <name pos:line="14852" pos:column="15">unused</name></decl>;</decl_stmt>
        </public>}</block> 	<decl><name pos:line="14853" pos:column="17">bpLocation</name></decl>;</union>
    </public>}</block></struct></type> 	<name pos:line="14854" pos:column="9">BP_LOCATION</name>;</typedef>


<enum pos:line="14857" pos:column="1">enum <name pos:line="14857" pos:column="6">enum_BP_PASSCOUNT_STYLE</name>
    <block pos:line="14858" pos:column="5">{	<decl><name pos:line="14858" pos:column="9">BP_PASSCOUNT_NONE</name>	<init pos:line="14858" pos:column="33">= <expr><lit:literal type="number" pos:line="14858" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="14858" pos:column="36">,</op:operator>
	<decl><name pos:line="14859" pos:column="9">BP_PASSCOUNT_EQUAL</name>	<init pos:line="14859" pos:column="33">= <expr><lit:literal type="number" pos:line="14859" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14859" pos:column="38">,</op:operator>
	<decl><name pos:line="14860" pos:column="9">BP_PASSCOUNT_EQUAL_OR_GREATER</name>	<init pos:line="14860" pos:column="41">= <expr><lit:literal type="number" pos:line="14860" pos:column="43">0x2</lit:literal></expr></init></decl><op:operator pos:line="14860" pos:column="46">,</op:operator>
	<decl><name pos:line="14861" pos:column="9">BP_PASSCOUNT_MOD</name>	<init pos:line="14861" pos:column="33">= <expr><lit:literal type="number" pos:line="14861" pos:column="35">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14863" pos:column="1">typedef <type><name pos:line="14863" pos:column="9">DWORD</name></type> <name pos:line="14863" pos:column="15">BP_PASSCOUNT_STYLE</name>;</typedef>

<typedef pos:line="14865" pos:column="1">typedef <type><struct pos:line="14865" pos:column="9">struct <name pos:line="14865" pos:column="16">_BP_PASSCOUNT</name>
    <block pos:line="14866" pos:column="5">{<public type="default" pos:line="14866" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14867" pos:column="5">DWORD</name></type> <name pos:line="14867" pos:column="11">dwPassCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14868" pos:column="5">BP_PASSCOUNT_STYLE</name></type> <name pos:line="14868" pos:column="24">stylePassCount</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14869" pos:column="9">BP_PASSCOUNT</name>;</typedef>


<enum pos:line="14872" pos:column="1">enum <name pos:line="14872" pos:column="6">enum_BP_COND_STYLE</name>
    <block pos:line="14873" pos:column="5">{	<decl><name pos:line="14873" pos:column="9">BP_COND_NONE</name>	<init pos:line="14873" pos:column="25">= <expr><lit:literal type="number" pos:line="14873" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="14873" pos:column="28">,</op:operator>
	<decl><name pos:line="14874" pos:column="9">BP_COND_WHEN_TRUE</name>	<init pos:line="14874" pos:column="33">= <expr><lit:literal type="number" pos:line="14874" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14874" pos:column="38">,</op:operator>
	<decl><name pos:line="14875" pos:column="9">BP_COND_WHEN_CHANGED</name>	<init pos:line="14875" pos:column="33">= <expr><lit:literal type="number" pos:line="14875" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14877" pos:column="1">typedef <type><name pos:line="14877" pos:column="9">DWORD</name></type> <name pos:line="14877" pos:column="15">BP_COND_STYLE</name>;</typedef>

<typedef pos:line="14879" pos:column="1">typedef <type><struct pos:line="14879" pos:column="9">struct <name pos:line="14879" pos:column="16">_BP_CONDITION</name>
    <block pos:line="14880" pos:column="5">{<public type="default" pos:line="14880" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14881" pos:column="5">IDebugThread2</name> <type:modifier pos:line="14881" pos:column="19">*</type:modifier></type><name pos:line="14881" pos:column="20">pThread</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14882" pos:column="5">BP_COND_STYLE</name></type> <name pos:line="14882" pos:column="19">styleCondition</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14883" pos:column="5">BSTR</name></type> <name pos:line="14883" pos:column="10">bstrContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14884" pos:column="5">BSTR</name></type> <name pos:line="14884" pos:column="10">bstrCondition</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14885" pos:column="5">UINT</name></type> <name pos:line="14885" pos:column="10">nRadix</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14886" pos:column="9">BP_CONDITION</name>;</typedef>


<enum pos:line="14889" pos:column="1">enum <name pos:line="14889" pos:column="6">enum_BP_FLAGS</name>
    <block pos:line="14890" pos:column="5">{	<decl><name pos:line="14890" pos:column="9">BP_FLAG_NONE</name>	<init pos:line="14890" pos:column="25">= <expr><lit:literal type="number" pos:line="14890" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="14890" pos:column="28">,</op:operator>
	<decl><name pos:line="14891" pos:column="9">BP_FLAG_MAP_DOCPOSITION</name>	<init pos:line="14891" pos:column="33">= <expr><lit:literal type="number" pos:line="14891" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14891" pos:column="38">,</op:operator>
	<decl><name pos:line="14892" pos:column="9">BP_FLAG_DONT_STOP</name>	<init pos:line="14892" pos:column="33">= <expr><lit:literal type="number" pos:line="14892" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14894" pos:column="1">typedef <type><name pos:line="14894" pos:column="9">DWORD</name></type> <name pos:line="14894" pos:column="15">BP_FLAGS</name>;</typedef>


<enum pos:line="14897" pos:column="1">enum <name pos:line="14897" pos:column="6">enum_BPREQI_FIELDS</name>
    <block pos:line="14898" pos:column="5">{	<decl><name pos:line="14898" pos:column="9">BPREQI_BPLOCATION</name>	<init pos:line="14898" pos:column="33">= <expr><lit:literal type="number" pos:line="14898" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="14898" pos:column="38">,</op:operator>
	<decl><name pos:line="14899" pos:column="9">BPREQI_LANGUAGE</name>	<init pos:line="14899" pos:column="25">= <expr><lit:literal type="number" pos:line="14899" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="14899" pos:column="30">,</op:operator>
	<decl><name pos:line="14900" pos:column="9">BPREQI_PROGRAM</name>	<init pos:line="14900" pos:column="25">= <expr><lit:literal type="number" pos:line="14900" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="14900" pos:column="30">,</op:operator>
	<decl><name pos:line="14901" pos:column="9">BPREQI_PROGRAMNAME</name>	<init pos:line="14901" pos:column="33">= <expr><lit:literal type="number" pos:line="14901" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="14901" pos:column="38">,</op:operator>
	<decl><name pos:line="14902" pos:column="9">BPREQI_THREAD</name>	<init pos:line="14902" pos:column="25">= <expr><lit:literal type="number" pos:line="14902" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="14902" pos:column="31">,</op:operator>
	<decl><name pos:line="14903" pos:column="9">BPREQI_THREADNAME</name>	<init pos:line="14903" pos:column="33">= <expr><lit:literal type="number" pos:line="14903" pos:column="35">0x20</lit:literal></expr></init></decl><op:operator pos:line="14903" pos:column="39">,</op:operator>
	<decl><name pos:line="14904" pos:column="9">BPREQI_PASSCOUNT</name>	<init pos:line="14904" pos:column="33">= <expr><lit:literal type="number" pos:line="14904" pos:column="35">0x40</lit:literal></expr></init></decl><op:operator pos:line="14904" pos:column="39">,</op:operator>
	<decl><name pos:line="14905" pos:column="9">BPREQI_CONDITION</name>	<init pos:line="14905" pos:column="33">= <expr><lit:literal type="number" pos:line="14905" pos:column="35">0x80</lit:literal></expr></init></decl><op:operator pos:line="14905" pos:column="39">,</op:operator>
	<decl><name pos:line="14906" pos:column="9">BPREQI_FLAGS</name>	<init pos:line="14906" pos:column="25">= <expr><lit:literal type="number" pos:line="14906" pos:column="27">0x100</lit:literal></expr></init></decl><op:operator pos:line="14906" pos:column="32">,</op:operator>
	<decl><name pos:line="14907" pos:column="9">BPREQI_ALLOLDFIELDS</name>	<init pos:line="14907" pos:column="33">= <expr><lit:literal type="number" pos:line="14907" pos:column="35">0x1ff</lit:literal></expr></init></decl><op:operator pos:line="14907" pos:column="40">,</op:operator>
	<decl><name pos:line="14908" pos:column="9">BPREQI_VENDOR</name>	<init pos:line="14908" pos:column="25">= <expr><lit:literal type="number" pos:line="14908" pos:column="27">0x200</lit:literal></expr></init></decl><op:operator pos:line="14908" pos:column="32">,</op:operator>
	<decl><name pos:line="14909" pos:column="9">BPREQI_CONSTRAINT</name>	<init pos:line="14909" pos:column="33">= <expr><lit:literal type="number" pos:line="14909" pos:column="35">0x400</lit:literal></expr></init></decl><op:operator pos:line="14909" pos:column="40">,</op:operator>
	<decl><name pos:line="14910" pos:column="9">BPREQI_TRACEPOINT</name>	<init pos:line="14910" pos:column="33">= <expr><lit:literal type="number" pos:line="14910" pos:column="35">0x800</lit:literal></expr></init></decl><op:operator pos:line="14910" pos:column="40">,</op:operator>
	<decl><name pos:line="14911" pos:column="9">BPREQI_ALLFIELDS</name>	<init pos:line="14911" pos:column="33">= <expr><lit:literal type="number" pos:line="14911" pos:column="35">0xfff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="14913" pos:column="1">typedef <type><name pos:line="14913" pos:column="9">DWORD</name></type> <name pos:line="14913" pos:column="15">BPREQI_FIELDS</name>;</typedef>

<typedef pos:line="14915" pos:column="1">typedef <type><struct pos:line="14915" pos:column="9">struct <name pos:line="14915" pos:column="16">_BP_REQUEST_INFO</name>
    <block pos:line="14916" pos:column="5">{<public type="default" pos:line="14916" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14917" pos:column="5">BPREQI_FIELDS</name></type> <name pos:line="14917" pos:column="19">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14918" pos:column="5">GUID</name></type> <name pos:line="14918" pos:column="10">guidLanguage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14919" pos:column="5">BP_LOCATION</name></type> <name pos:line="14919" pos:column="17">bpLocation</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14920" pos:column="5">IDebugProgram2</name> <type:modifier pos:line="14920" pos:column="20">*</type:modifier></type><name pos:line="14920" pos:column="21">pProgram</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14921" pos:column="5">BSTR</name></type> <name pos:line="14921" pos:column="10">bstrProgramName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14922" pos:column="5">IDebugThread2</name> <type:modifier pos:line="14922" pos:column="19">*</type:modifier></type><name pos:line="14922" pos:column="20">pThread</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14923" pos:column="5">BSTR</name></type> <name pos:line="14923" pos:column="10">bstrThreadName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14924" pos:column="5">BP_CONDITION</name></type> <name pos:line="14924" pos:column="18">bpCondition</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14925" pos:column="5">BP_PASSCOUNT</name></type> <name pos:line="14925" pos:column="18">bpPassCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14926" pos:column="5">BP_FLAGS</name></type> <name pos:line="14926" pos:column="14">dwFlags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14927" pos:column="9">BP_REQUEST_INFO</name>;</typedef>

<typedef pos:line="14929" pos:column="1">typedef <type><struct pos:line="14929" pos:column="9">struct <name pos:line="14929" pos:column="16">_BP_REQUEST_INFO2</name>
    <block pos:line="14930" pos:column="5">{<public type="default" pos:line="14930" pos:column="6">
    <decl_stmt><decl><type><name pos:line="14931" pos:column="5">BPREQI_FIELDS</name></type> <name pos:line="14931" pos:column="19">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14932" pos:column="5">GUID</name></type> <name pos:line="14932" pos:column="10">guidLanguage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14933" pos:column="5">BP_LOCATION</name></type> <name pos:line="14933" pos:column="17">bpLocation</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14934" pos:column="5">IDebugProgram2</name> <type:modifier pos:line="14934" pos:column="20">*</type:modifier></type><name pos:line="14934" pos:column="21">pProgram</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14935" pos:column="5">BSTR</name></type> <name pos:line="14935" pos:column="10">bstrProgramName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14936" pos:column="5">IDebugThread2</name> <type:modifier pos:line="14936" pos:column="19">*</type:modifier></type><name pos:line="14936" pos:column="20">pThread</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14937" pos:column="5">BSTR</name></type> <name pos:line="14937" pos:column="10">bstrThreadName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14938" pos:column="5">BP_CONDITION</name></type> <name pos:line="14938" pos:column="18">bpCondition</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14939" pos:column="5">BP_PASSCOUNT</name></type> <name pos:line="14939" pos:column="18">bpPassCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14940" pos:column="5">BP_FLAGS</name></type> <name pos:line="14940" pos:column="14">dwFlags</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14941" pos:column="5">GUID</name></type> <name pos:line="14941" pos:column="10">guidVendor</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14942" pos:column="5">BSTR</name></type> <name pos:line="14942" pos:column="10">bstrConstraint</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="14943" pos:column="5">BSTR</name></type> <name pos:line="14943" pos:column="10">bstrTracepoint</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="14944" pos:column="9">BP_REQUEST_INFO2</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="14948" pos:column="1">extern</specifier> <name pos:line="14948" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="14948" pos:column="22">__MIDL_itf_msdbg_0000_0098_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="14949" pos:column="1">extern</specifier> <name pos:line="14949" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="14949" pos:column="22">__MIDL_itf_msdbg_0000_0098_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="14951" pos:column="1">#<cpp:directive pos:line="14951" pos:column="2">ifndef</cpp:directive> <name pos:line="14951" pos:column="9">__IDebugBreakpointRequest2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14952" pos:column="1">#<cpp:directive pos:line="14952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14952" pos:column="9">__IDebugBreakpointRequest2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14954" pos:column="1">/* interface IDebugBreakpointRequest2 */</comment>
<comment type="block" pos:line="14955" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="14958" pos:column="1">EXTERN_C</name> <specifier pos:line="14958" pos:column="10">const</specifier> <name pos:line="14958" pos:column="16">IID</name></type> <name pos:line="14958" pos:column="20">IID_IDebugBreakpointRequest2</name></decl>;</decl_stmt>

<cpp:if pos:line="14960" pos:column="1">#<cpp:directive pos:line="14960" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14960" pos:column="5">defined</name><argument_list pos:line="14960" pos:column="12">(<argument><expr><name pos:line="14960" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14960" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14960" pos:column="29">!</op:operator><call><name pos:line="14960" pos:column="30">defined</name><argument_list pos:line="14960" pos:column="37">(<argument><expr><name pos:line="14960" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14962" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14962" pos:column="19">(<argument pos:line="14962" pos:column="20">"6015fd18-8257-4df3-ac42-f074dedd4cbd"</argument>)</argument_list></macro>
    <label><name pos:line="14963" pos:column="5">IDebugBreakpointRequest2</name> :</label> <expr_stmt><expr pos:line="14963" pos:column="32">public <name pos:line="14963" pos:column="39">IUnknown</name>
    <block pos:line="14964" pos:column="5">{
    <expr pos:line="14965" pos:column="5">public<op:operator pos:line="14965" pos:column="11">:</op:operator>
        virtual <name pos:line="14966" pos:column="17">HRESULT</name> <name pos:line="14966" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14966" pos:column="43">GetLocationType</name><argument_list pos:line="14966" pos:column="58">( 
            <comment type="block" pos:line="14967" pos:column="13">/* [out] */</comment> <argument pos:line="14967" pos:column="25">__RPC__out BP_LOCATION_TYPE *pBPLocationType</argument>)</argument_list></macro> <op:operator pos:line="14967" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="14967" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="14969" pos:column="9">virtual <name pos:line="14969" pos:column="17">HRESULT</name> <name pos:line="14969" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="14969" pos:column="43">GetRequestInfo</name><argument_list pos:line="14969" pos:column="57">( 
            <comment type="block" pos:line="14970" pos:column="13">/* [in] */</comment> <argument pos:line="14970" pos:column="24">BPREQI_FIELDS dwFields</argument>,
            <comment type="block" pos:line="14971" pos:column="13">/* [out] */</comment> <argument pos:line="14971" pos:column="25">__RPC__out BP_REQUEST_INFO *pBPRequestInfo</argument>)</argument_list></macro> <op:operator pos:line="14971" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="14971" pos:column="71">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14975" pos:column="1">#<cpp:directive pos:line="14975" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14975" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14977" pos:column="5">typedef <type><struct pos:line="14977" pos:column="13">struct <name pos:line="14977" pos:column="20">IDebugBreakpointRequest2Vtbl</name>
    <block pos:line="14978" pos:column="5">{<public type="default" pos:line="14978" pos:column="6">
        <function_decl><type><name pos:line="14979" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14981" pos:column="9">HRESULT</name></type> ( <name pos:line="14981" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14981" pos:column="37">*</type:modifier><name pos:line="14981" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14981" pos:column="54">( 
            <param><decl><type><name pos:line="14982" pos:column="13">IDebugBreakpointRequest2</name> <type:modifier pos:line="14982" pos:column="38">*</type:modifier></type> <name pos:line="14982" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14983" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14983" pos:column="24">__RPC__in</name> <name pos:line="14983" pos:column="34">REFIID</name></type> <name pos:line="14983" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14984" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14985" pos:column="13">__RPC__deref_out</name>  <name pos:line="14985" pos:column="31">void</name> <type:modifier pos:line="14985" pos:column="36">*</type:modifier><type:modifier pos:line="14985" pos:column="37">*</type:modifier></type><name pos:line="14985" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14987" pos:column="9">ULONG</name></type> ( <name pos:line="14987" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14987" pos:column="35">*</type:modifier><name pos:line="14987" pos:column="36">AddRef</name> )<parameter_list pos:line="14987" pos:column="44">( 
            <param><decl><type><name pos:line="14988" pos:column="13">IDebugBreakpointRequest2</name> <type:modifier pos:line="14988" pos:column="38">*</type:modifier></type> <name pos:line="14988" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14990" pos:column="9">ULONG</name></type> ( <name pos:line="14990" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14990" pos:column="35">*</type:modifier><name pos:line="14990" pos:column="36">Release</name> )<parameter_list pos:line="14990" pos:column="45">( 
            <param><decl><type><name pos:line="14991" pos:column="13">IDebugBreakpointRequest2</name> <type:modifier pos:line="14991" pos:column="38">*</type:modifier></type> <name pos:line="14991" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14993" pos:column="9">HRESULT</name></type> ( <name pos:line="14993" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14993" pos:column="37">*</type:modifier><name pos:line="14993" pos:column="38">GetLocationType</name> )<parameter_list pos:line="14993" pos:column="55">( 
            <param><decl><type><name pos:line="14994" pos:column="13">IDebugBreakpointRequest2</name> <type:modifier pos:line="14994" pos:column="38">*</type:modifier></type> <name pos:line="14994" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14995" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14995" pos:column="25">__RPC__out</name> <name pos:line="14995" pos:column="36">BP_LOCATION_TYPE</name> <type:modifier pos:line="14995" pos:column="53">*</type:modifier></type><name pos:line="14995" pos:column="54">pBPLocationType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14997" pos:column="9">HRESULT</name></type> ( <name pos:line="14997" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14997" pos:column="37">*</type:modifier><name pos:line="14997" pos:column="38">GetRequestInfo</name> )<parameter_list pos:line="14997" pos:column="54">( 
            <param><decl><type><name pos:line="14998" pos:column="13">IDebugBreakpointRequest2</name> <type:modifier pos:line="14998" pos:column="38">*</type:modifier></type> <name pos:line="14998" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="14999" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14999" pos:column="24">BPREQI_FIELDS</name></type> <name pos:line="14999" pos:column="38">dwFields</name></decl></param>,
            <comment type="block" pos:line="15000" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15000" pos:column="25">__RPC__out</name> <name pos:line="15000" pos:column="36">BP_REQUEST_INFO</name> <type:modifier pos:line="15000" pos:column="52">*</type:modifier></type><name pos:line="15000" pos:column="53">pBPRequestInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15002" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15003" pos:column="7">IDebugBreakpointRequest2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15005" pos:column="5">interface</name></type> <name pos:line="15005" pos:column="15">IDebugBreakpointRequest2</name>
    <argument_list pos:line="15006" pos:column="5">{
        <argument><expr><name pos:line="15007" pos:column="9">CONST_VTBL</name> struct <name pos:line="15007" pos:column="27">IDebugBreakpointRequest2Vtbl</name> <op:operator pos:line="15007" pos:column="56">*</op:operator><name pos:line="15007" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15012" pos:column="1">#<cpp:directive pos:line="15012" pos:column="2">ifdef</cpp:directive> <name pos:line="15012" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15015" pos:column="1">#<cpp:directive pos:line="15015" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15015" pos:column="9">IDebugBreakpointRequest2_QueryInterface</name><parameter_list pos:line="15015" pos:column="48">(<param><type><name pos:line="15015" pos:column="49">This</name></type></param>,<param><type><name pos:line="15015" pos:column="54">riid</name></type></param>,<param><type><name pos:line="15015" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15016" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15018" pos:column="1">#<cpp:directive pos:line="15018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15018" pos:column="9">IDebugBreakpointRequest2_AddRef</name><parameter_list pos:line="15018" pos:column="40">(<param><type><name pos:line="15018" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15019" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15021" pos:column="1">#<cpp:directive pos:line="15021" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15021" pos:column="9">IDebugBreakpointRequest2_Release</name><parameter_list pos:line="15021" pos:column="41">(<param><type><name pos:line="15021" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15022" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15025" pos:column="1">#<cpp:directive pos:line="15025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15025" pos:column="9">IDebugBreakpointRequest2_GetLocationType</name><parameter_list pos:line="15025" pos:column="49">(<param><type><name pos:line="15025" pos:column="50">This</name></type></param>,<param><type><name pos:line="15025" pos:column="55">pBPLocationType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15026" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLocationType(This,pBPLocationType) )</cpp:value></cpp:define> 

<cpp:define pos:line="15028" pos:column="1">#<cpp:directive pos:line="15028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15028" pos:column="9">IDebugBreakpointRequest2_GetRequestInfo</name><parameter_list pos:line="15028" pos:column="48">(<param><type><name pos:line="15028" pos:column="49">This</name></type></param>,<param><type><name pos:line="15028" pos:column="54">dwFields</name></type></param>,<param><type><name pos:line="15028" pos:column="63">pBPRequestInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15029" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRequestInfo(This,dwFields,pBPRequestInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15031" pos:column="1">#<cpp:directive pos:line="15031" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15031" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15034" pos:column="1">#<cpp:directive pos:line="15034" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15034" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15039" pos:column="1">#<cpp:directive pos:line="15039" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15039" pos:column="9">/* __IDebugBreakpointRequest2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="15042" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0099 */</comment>
<comment type="block" pos:line="15043" pos:column="1">/* [local] */</comment> 

<typedef pos:line="15045" pos:column="1">typedef <type><struct pos:line="15045" pos:column="9">struct <name pos:line="15045" pos:column="16">tagCHECKSUM_DATA</name>
    <block pos:line="15046" pos:column="5">{<public type="default" pos:line="15046" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15047" pos:column="5">DWORD</name></type> <name pos:line="15047" pos:column="11">ByteCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15048" pos:column="5">BYTE</name> <type:modifier pos:line="15048" pos:column="10">*</type:modifier></type><name pos:line="15048" pos:column="11">pBytes</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="15049" pos:column="9">CHECKSUM_DATA</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="15053" pos:column="1">extern</specifier> <name pos:line="15053" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="15053" pos:column="22">__MIDL_itf_msdbg_0000_0099_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="15054" pos:column="1">extern</specifier> <name pos:line="15054" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="15054" pos:column="22">__MIDL_itf_msdbg_0000_0099_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="15056" pos:column="1">#<cpp:directive pos:line="15056" pos:column="2">ifndef</cpp:directive> <name pos:line="15056" pos:column="9">__IDebugBreakpointChecksumRequest2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15057" pos:column="1">#<cpp:directive pos:line="15057" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15057" pos:column="9">__IDebugBreakpointChecksumRequest2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15059" pos:column="1">/* interface IDebugBreakpointChecksumRequest2 */</comment>
<comment type="block" pos:line="15060" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="15063" pos:column="1">EXTERN_C</name> <specifier pos:line="15063" pos:column="10">const</specifier> <name pos:line="15063" pos:column="16">IID</name></type> <name pos:line="15063" pos:column="20">IID_IDebugBreakpointChecksumRequest2</name></decl>;</decl_stmt>

<cpp:if pos:line="15065" pos:column="1">#<cpp:directive pos:line="15065" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15065" pos:column="5">defined</name><argument_list pos:line="15065" pos:column="12">(<argument><expr><name pos:line="15065" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15065" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15065" pos:column="29">!</op:operator><call><name pos:line="15065" pos:column="30">defined</name><argument_list pos:line="15065" pos:column="37">(<argument><expr><name pos:line="15065" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15067" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15067" pos:column="19">(<argument pos:line="15067" pos:column="20">"0EA91CF7-8542-4780-8D6B-7BD686CD2471"</argument>)</argument_list></macro>
    <label><name pos:line="15068" pos:column="5">IDebugBreakpointChecksumRequest2</name> :</label> <expr_stmt><expr pos:line="15068" pos:column="40">public <name pos:line="15068" pos:column="47">IUnknown</name>
    <block pos:line="15069" pos:column="5">{
    <expr pos:line="15070" pos:column="5">public<op:operator pos:line="15070" pos:column="11">:</op:operator>
        virtual <name pos:line="15071" pos:column="17">HRESULT</name> <name pos:line="15071" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15071" pos:column="43">GetChecksum</name><argument_list pos:line="15071" pos:column="54">( 
            <comment type="block" pos:line="15072" pos:column="13">/* [in] */</comment> <argument pos:line="15072" pos:column="24">__RPC__in REFGUID guidAlgorithm</argument>,
            <comment type="block" pos:line="15073" pos:column="13">/* [out] */</comment> <argument pos:line="15073" pos:column="25">__RPC__out CHECKSUM_DATA *pChecksumData</argument>)</argument_list></macro> <op:operator pos:line="15073" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="15073" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="15075" pos:column="9">virtual <name pos:line="15075" pos:column="17">HRESULT</name> <name pos:line="15075" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15075" pos:column="43">IsChecksumEnabled</name><argument_list pos:line="15075" pos:column="60">( 
            <comment type="block" pos:line="15076" pos:column="13">/* [out] */</comment> <argument pos:line="15076" pos:column="25">__RPC__out BOOL *pfChecksumEnabled</argument>)</argument_list></macro> <op:operator pos:line="15076" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="15076" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15080" pos:column="1">#<cpp:directive pos:line="15080" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15080" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15082" pos:column="5">typedef <type><struct pos:line="15082" pos:column="13">struct <name pos:line="15082" pos:column="20">IDebugBreakpointChecksumRequest2Vtbl</name>
    <block pos:line="15083" pos:column="5">{<public type="default" pos:line="15083" pos:column="6">
        <function_decl><type><name pos:line="15084" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15086" pos:column="9">HRESULT</name></type> ( <name pos:line="15086" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15086" pos:column="37">*</type:modifier><name pos:line="15086" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15086" pos:column="54">( 
            <param><decl><type><name pos:line="15087" pos:column="13">IDebugBreakpointChecksumRequest2</name> <type:modifier pos:line="15087" pos:column="46">*</type:modifier></type> <name pos:line="15087" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="15088" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15088" pos:column="24">__RPC__in</name> <name pos:line="15088" pos:column="34">REFIID</name></type> <name pos:line="15088" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15089" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15090" pos:column="13">__RPC__deref_out</name>  <name pos:line="15090" pos:column="31">void</name> <type:modifier pos:line="15090" pos:column="36">*</type:modifier><type:modifier pos:line="15090" pos:column="37">*</type:modifier></type><name pos:line="15090" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15092" pos:column="9">ULONG</name></type> ( <name pos:line="15092" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15092" pos:column="35">*</type:modifier><name pos:line="15092" pos:column="36">AddRef</name> )<parameter_list pos:line="15092" pos:column="44">( 
            <param><decl><type><name pos:line="15093" pos:column="13">IDebugBreakpointChecksumRequest2</name> <type:modifier pos:line="15093" pos:column="46">*</type:modifier></type> <name pos:line="15093" pos:column="48">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15095" pos:column="9">ULONG</name></type> ( <name pos:line="15095" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15095" pos:column="35">*</type:modifier><name pos:line="15095" pos:column="36">Release</name> )<parameter_list pos:line="15095" pos:column="45">( 
            <param><decl><type><name pos:line="15096" pos:column="13">IDebugBreakpointChecksumRequest2</name> <type:modifier pos:line="15096" pos:column="46">*</type:modifier></type> <name pos:line="15096" pos:column="48">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15098" pos:column="9">HRESULT</name></type> ( <name pos:line="15098" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15098" pos:column="37">*</type:modifier><name pos:line="15098" pos:column="38">GetChecksum</name> )<parameter_list pos:line="15098" pos:column="51">( 
            <param><decl><type><name pos:line="15099" pos:column="13">IDebugBreakpointChecksumRequest2</name> <type:modifier pos:line="15099" pos:column="46">*</type:modifier></type> <name pos:line="15099" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="15100" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15100" pos:column="24">__RPC__in</name> <name pos:line="15100" pos:column="34">REFGUID</name></type> <name pos:line="15100" pos:column="42">guidAlgorithm</name></decl></param>,
            <comment type="block" pos:line="15101" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15101" pos:column="25">__RPC__out</name> <name pos:line="15101" pos:column="36">CHECKSUM_DATA</name> <type:modifier pos:line="15101" pos:column="50">*</type:modifier></type><name pos:line="15101" pos:column="51">pChecksumData</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15103" pos:column="9">HRESULT</name></type> ( <name pos:line="15103" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15103" pos:column="37">*</type:modifier><name pos:line="15103" pos:column="38">IsChecksumEnabled</name> )<parameter_list pos:line="15103" pos:column="57">( 
            <param><decl><type><name pos:line="15104" pos:column="13">IDebugBreakpointChecksumRequest2</name> <type:modifier pos:line="15104" pos:column="46">*</type:modifier></type> <name pos:line="15104" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="15105" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15105" pos:column="25">__RPC__out</name> <name pos:line="15105" pos:column="36">BOOL</name> <type:modifier pos:line="15105" pos:column="41">*</type:modifier></type><name pos:line="15105" pos:column="42">pfChecksumEnabled</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15107" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15108" pos:column="7">IDebugBreakpointChecksumRequest2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15110" pos:column="5">interface</name></type> <name pos:line="15110" pos:column="15">IDebugBreakpointChecksumRequest2</name>
    <argument_list pos:line="15111" pos:column="5">{
        <argument><expr><name pos:line="15112" pos:column="9">CONST_VTBL</name> struct <name pos:line="15112" pos:column="27">IDebugBreakpointChecksumRequest2Vtbl</name> <op:operator pos:line="15112" pos:column="64">*</op:operator><name pos:line="15112" pos:column="65">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15117" pos:column="1">#<cpp:directive pos:line="15117" pos:column="2">ifdef</cpp:directive> <name pos:line="15117" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15120" pos:column="1">#<cpp:directive pos:line="15120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15120" pos:column="9">IDebugBreakpointChecksumRequest2_QueryInterface</name><parameter_list pos:line="15120" pos:column="56">(<param><type><name pos:line="15120" pos:column="57">This</name></type></param>,<param><type><name pos:line="15120" pos:column="62">riid</name></type></param>,<param><type><name pos:line="15120" pos:column="67">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15121" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15123" pos:column="1">#<cpp:directive pos:line="15123" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15123" pos:column="9">IDebugBreakpointChecksumRequest2_AddRef</name><parameter_list pos:line="15123" pos:column="48">(<param><type><name pos:line="15123" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15124" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15126" pos:column="1">#<cpp:directive pos:line="15126" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15126" pos:column="9">IDebugBreakpointChecksumRequest2_Release</name><parameter_list pos:line="15126" pos:column="49">(<param><type><name pos:line="15126" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15127" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15130" pos:column="1">#<cpp:directive pos:line="15130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15130" pos:column="9">IDebugBreakpointChecksumRequest2_GetChecksum</name><parameter_list pos:line="15130" pos:column="53">(<param><type><name pos:line="15130" pos:column="54">This</name></type></param>,<param><type><name pos:line="15130" pos:column="59">guidAlgorithm</name></type></param>,<param><type><name pos:line="15130" pos:column="73">pChecksumData</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15131" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetChecksum(This,guidAlgorithm,pChecksumData) )</cpp:value></cpp:define> 

<cpp:define pos:line="15133" pos:column="1">#<cpp:directive pos:line="15133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15133" pos:column="9">IDebugBreakpointChecksumRequest2_IsChecksumEnabled</name><parameter_list pos:line="15133" pos:column="59">(<param><type><name pos:line="15133" pos:column="60">This</name></type></param>,<param><type><name pos:line="15133" pos:column="65">pfChecksumEnabled</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15134" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsChecksumEnabled(This,pfChecksumEnabled) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15136" pos:column="1">#<cpp:directive pos:line="15136" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15136" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15139" pos:column="1">#<cpp:directive pos:line="15139" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15139" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15144" pos:column="1">#<cpp:directive pos:line="15144" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15144" pos:column="9">/* __IDebugBreakpointChecksumRequest2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15147" pos:column="1">#<cpp:directive pos:line="15147" pos:column="2">ifndef</cpp:directive> <name pos:line="15147" pos:column="9">__IDebugBreakpointRequest3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15148" pos:column="1">#<cpp:directive pos:line="15148" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15148" pos:column="9">__IDebugBreakpointRequest3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15150" pos:column="1">/* interface IDebugBreakpointRequest3 */</comment>
<comment type="block" pos:line="15151" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="15154" pos:column="1">EXTERN_C</name> <specifier pos:line="15154" pos:column="10">const</specifier> <name pos:line="15154" pos:column="16">IID</name></type> <name pos:line="15154" pos:column="20">IID_IDebugBreakpointRequest3</name></decl>;</decl_stmt>

<cpp:if pos:line="15156" pos:column="1">#<cpp:directive pos:line="15156" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15156" pos:column="5">defined</name><argument_list pos:line="15156" pos:column="12">(<argument><expr><name pos:line="15156" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15156" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15156" pos:column="29">!</op:operator><call><name pos:line="15156" pos:column="30">defined</name><argument_list pos:line="15156" pos:column="37">(<argument><expr><name pos:line="15156" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15158" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15158" pos:column="19">(<argument pos:line="15158" pos:column="20">"5C18A5FE-7150-4e66-8246-27BFB0E7BFD9"</argument>)</argument_list></macro>
    <label><name pos:line="15159" pos:column="5">IDebugBreakpointRequest3</name> :</label> <expr_stmt><expr pos:line="15159" pos:column="32">public <name pos:line="15159" pos:column="39">IDebugBreakpointRequest2</name>
    <block pos:line="15160" pos:column="5">{
    <expr pos:line="15161" pos:column="5">public<op:operator pos:line="15161" pos:column="11">:</op:operator>
        virtual <name pos:line="15162" pos:column="17">HRESULT</name> <name pos:line="15162" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15162" pos:column="43">GetRequestInfo2</name><argument_list pos:line="15162" pos:column="58">( 
            <comment type="block" pos:line="15163" pos:column="13">/* [in] */</comment> <argument pos:line="15163" pos:column="24">BPREQI_FIELDS dwFields</argument>,
            <comment type="block" pos:line="15164" pos:column="13">/* [out] */</comment> <argument pos:line="15164" pos:column="25">__RPC__out BP_REQUEST_INFO2 *bBPRequestInfo</argument>)</argument_list></macro> <op:operator pos:line="15164" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="15164" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15168" pos:column="1">#<cpp:directive pos:line="15168" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15168" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15170" pos:column="5">typedef <type><struct pos:line="15170" pos:column="13">struct <name pos:line="15170" pos:column="20">IDebugBreakpointRequest3Vtbl</name>
    <block pos:line="15171" pos:column="5">{<public type="default" pos:line="15171" pos:column="6">
        <function_decl><type><name pos:line="15172" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15174" pos:column="9">HRESULT</name></type> ( <name pos:line="15174" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15174" pos:column="37">*</type:modifier><name pos:line="15174" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15174" pos:column="54">( 
            <param><decl><type><name pos:line="15175" pos:column="13">IDebugBreakpointRequest3</name> <type:modifier pos:line="15175" pos:column="38">*</type:modifier></type> <name pos:line="15175" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15176" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15176" pos:column="24">__RPC__in</name> <name pos:line="15176" pos:column="34">REFIID</name></type> <name pos:line="15176" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15177" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15178" pos:column="13">__RPC__deref_out</name>  <name pos:line="15178" pos:column="31">void</name> <type:modifier pos:line="15178" pos:column="36">*</type:modifier><type:modifier pos:line="15178" pos:column="37">*</type:modifier></type><name pos:line="15178" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15180" pos:column="9">ULONG</name></type> ( <name pos:line="15180" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15180" pos:column="35">*</type:modifier><name pos:line="15180" pos:column="36">AddRef</name> )<parameter_list pos:line="15180" pos:column="44">( 
            <param><decl><type><name pos:line="15181" pos:column="13">IDebugBreakpointRequest3</name> <type:modifier pos:line="15181" pos:column="38">*</type:modifier></type> <name pos:line="15181" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15183" pos:column="9">ULONG</name></type> ( <name pos:line="15183" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15183" pos:column="35">*</type:modifier><name pos:line="15183" pos:column="36">Release</name> )<parameter_list pos:line="15183" pos:column="45">( 
            <param><decl><type><name pos:line="15184" pos:column="13">IDebugBreakpointRequest3</name> <type:modifier pos:line="15184" pos:column="38">*</type:modifier></type> <name pos:line="15184" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15186" pos:column="9">HRESULT</name></type> ( <name pos:line="15186" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15186" pos:column="37">*</type:modifier><name pos:line="15186" pos:column="38">GetLocationType</name> )<parameter_list pos:line="15186" pos:column="55">( 
            <param><decl><type><name pos:line="15187" pos:column="13">IDebugBreakpointRequest3</name> <type:modifier pos:line="15187" pos:column="38">*</type:modifier></type> <name pos:line="15187" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15188" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15188" pos:column="25">__RPC__out</name> <name pos:line="15188" pos:column="36">BP_LOCATION_TYPE</name> <type:modifier pos:line="15188" pos:column="53">*</type:modifier></type><name pos:line="15188" pos:column="54">pBPLocationType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15190" pos:column="9">HRESULT</name></type> ( <name pos:line="15190" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15190" pos:column="37">*</type:modifier><name pos:line="15190" pos:column="38">GetRequestInfo</name> )<parameter_list pos:line="15190" pos:column="54">( 
            <param><decl><type><name pos:line="15191" pos:column="13">IDebugBreakpointRequest3</name> <type:modifier pos:line="15191" pos:column="38">*</type:modifier></type> <name pos:line="15191" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15192" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15192" pos:column="24">BPREQI_FIELDS</name></type> <name pos:line="15192" pos:column="38">dwFields</name></decl></param>,
            <comment type="block" pos:line="15193" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15193" pos:column="25">__RPC__out</name> <name pos:line="15193" pos:column="36">BP_REQUEST_INFO</name> <type:modifier pos:line="15193" pos:column="52">*</type:modifier></type><name pos:line="15193" pos:column="53">pBPRequestInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15195" pos:column="9">HRESULT</name></type> ( <name pos:line="15195" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15195" pos:column="37">*</type:modifier><name pos:line="15195" pos:column="38">GetRequestInfo2</name> )<parameter_list pos:line="15195" pos:column="55">( 
            <param><decl><type><name pos:line="15196" pos:column="13">IDebugBreakpointRequest3</name> <type:modifier pos:line="15196" pos:column="38">*</type:modifier></type> <name pos:line="15196" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15197" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15197" pos:column="24">BPREQI_FIELDS</name></type> <name pos:line="15197" pos:column="38">dwFields</name></decl></param>,
            <comment type="block" pos:line="15198" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15198" pos:column="25">__RPC__out</name> <name pos:line="15198" pos:column="36">BP_REQUEST_INFO2</name> <type:modifier pos:line="15198" pos:column="53">*</type:modifier></type><name pos:line="15198" pos:column="54">bBPRequestInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15200" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15201" pos:column="7">IDebugBreakpointRequest3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15203" pos:column="5">interface</name></type> <name pos:line="15203" pos:column="15">IDebugBreakpointRequest3</name>
    <argument_list pos:line="15204" pos:column="5">{
        <argument><expr><name pos:line="15205" pos:column="9">CONST_VTBL</name> struct <name pos:line="15205" pos:column="27">IDebugBreakpointRequest3Vtbl</name> <op:operator pos:line="15205" pos:column="56">*</op:operator><name pos:line="15205" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15210" pos:column="1">#<cpp:directive pos:line="15210" pos:column="2">ifdef</cpp:directive> <name pos:line="15210" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15213" pos:column="1">#<cpp:directive pos:line="15213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15213" pos:column="9">IDebugBreakpointRequest3_QueryInterface</name><parameter_list pos:line="15213" pos:column="48">(<param><type><name pos:line="15213" pos:column="49">This</name></type></param>,<param><type><name pos:line="15213" pos:column="54">riid</name></type></param>,<param><type><name pos:line="15213" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15214" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15216" pos:column="1">#<cpp:directive pos:line="15216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15216" pos:column="9">IDebugBreakpointRequest3_AddRef</name><parameter_list pos:line="15216" pos:column="40">(<param><type><name pos:line="15216" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15217" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15219" pos:column="1">#<cpp:directive pos:line="15219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15219" pos:column="9">IDebugBreakpointRequest3_Release</name><parameter_list pos:line="15219" pos:column="41">(<param><type><name pos:line="15219" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15220" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15223" pos:column="1">#<cpp:directive pos:line="15223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15223" pos:column="9">IDebugBreakpointRequest3_GetLocationType</name><parameter_list pos:line="15223" pos:column="49">(<param><type><name pos:line="15223" pos:column="50">This</name></type></param>,<param><type><name pos:line="15223" pos:column="55">pBPLocationType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15224" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLocationType(This,pBPLocationType) )</cpp:value></cpp:define> 

<cpp:define pos:line="15226" pos:column="1">#<cpp:directive pos:line="15226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15226" pos:column="9">IDebugBreakpointRequest3_GetRequestInfo</name><parameter_list pos:line="15226" pos:column="48">(<param><type><name pos:line="15226" pos:column="49">This</name></type></param>,<param><type><name pos:line="15226" pos:column="54">dwFields</name></type></param>,<param><type><name pos:line="15226" pos:column="63">pBPRequestInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15227" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRequestInfo(This,dwFields,pBPRequestInfo) )</cpp:value></cpp:define> 


<cpp:define pos:line="15230" pos:column="1">#<cpp:directive pos:line="15230" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15230" pos:column="9">IDebugBreakpointRequest3_GetRequestInfo2</name><parameter_list pos:line="15230" pos:column="49">(<param><type><name pos:line="15230" pos:column="50">This</name></type></param>,<param><type><name pos:line="15230" pos:column="55">dwFields</name></type></param>,<param><type><name pos:line="15230" pos:column="64">bBPRequestInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15231" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRequestInfo2(This,dwFields,bBPRequestInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15233" pos:column="1">#<cpp:directive pos:line="15233" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15233" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15236" pos:column="1">#<cpp:directive pos:line="15236" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15236" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15241" pos:column="1">#<cpp:directive pos:line="15241" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15241" pos:column="9">/* __IDebugBreakpointRequest3_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="15244" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0101 */</comment>
<comment type="block" pos:line="15245" pos:column="1">/* [local] */</comment> 

<typedef pos:line="15247" pos:column="1">typedef <type><struct pos:line="15247" pos:column="9">struct <name pos:line="15247" pos:column="16">_BP_RESOLUTION_CODE</name>
    <block pos:line="15248" pos:column="5">{<public type="default" pos:line="15248" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15249" pos:column="5">IDebugCodeContext2</name> <type:modifier pos:line="15249" pos:column="24">*</type:modifier></type><name pos:line="15249" pos:column="25">pCodeContext</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="15250" pos:column="9">BP_RESOLUTION_CODE</name>;</typedef>


<enum pos:line="15253" pos:column="1">enum <name pos:line="15253" pos:column="6">enum_BP_RES_DATA_FLAGS</name>
    <block pos:line="15254" pos:column="5">{	<decl><name pos:line="15254" pos:column="9">BP_RES_DATA_EMULATED</name>	<init pos:line="15254" pos:column="33">= <expr><lit:literal type="number" pos:line="15254" pos:column="35">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15256" pos:column="1">typedef <type><name pos:line="15256" pos:column="9">DWORD</name></type> <name pos:line="15256" pos:column="15">BP_RES_DATA_FLAGS</name>;</typedef>

<typedef pos:line="15258" pos:column="1">typedef <type><struct pos:line="15258" pos:column="9">struct <name pos:line="15258" pos:column="16">_BP_RESOLUTION_DATA</name>
    <block pos:line="15259" pos:column="5">{<public type="default" pos:line="15259" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15260" pos:column="5">BSTR</name></type> <name pos:line="15260" pos:column="10">bstrDataExpr</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15261" pos:column="5">BSTR</name></type> <name pos:line="15261" pos:column="10">bstrFunc</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15262" pos:column="5">BSTR</name></type> <name pos:line="15262" pos:column="10">bstrImage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15263" pos:column="5">BP_RES_DATA_FLAGS</name></type> <name pos:line="15263" pos:column="23">dwFlags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="15264" pos:column="9">BP_RESOLUTION_DATA</name>;</typedef>

<typedef pos:line="15266" pos:column="1">typedef <type><struct pos:line="15266" pos:column="9">struct <name pos:line="15266" pos:column="16">_BP_RESOLUTION_LOCATION</name>
    <block pos:line="15267" pos:column="5">{<public type="default" pos:line="15267" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15268" pos:column="5">BP_TYPE</name></type> <name pos:line="15268" pos:column="13">bpType</name></decl>;</decl_stmt>
    <comment type="block" pos:line="15269" pos:column="5">/* [switch_type] */</comment> <union pos:line="15269" pos:column="25">union <name pos:line="15269" pos:column="31">__MIDL___MIDL_itf_msdbg_0000_0101_0001</name>
        <block pos:line="15270" pos:column="9">{<public type="default" pos:line="15270" pos:column="10">
        <decl_stmt><decl><type><name pos:line="15271" pos:column="9">BP_RESOLUTION_CODE</name></type> <name pos:line="15271" pos:column="28">bpresCode</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="15272" pos:column="9">BP_RESOLUTION_DATA</name></type> <name pos:line="15272" pos:column="28">bpresData</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="15273" pos:column="9">int</name></type> <name pos:line="15273" pos:column="13">unused</name></decl>;</decl_stmt>
        </public>}</block> 	<decl><name pos:line="15274" pos:column="17">bpResLocation</name></decl>;</union>
    </public>}</block></struct></type> 	<name pos:line="15275" pos:column="9">BP_RESOLUTION_LOCATION</name>;</typedef>


<enum pos:line="15278" pos:column="1">enum <name pos:line="15278" pos:column="6">enum_BPRESI_FIELDS</name>
    <block pos:line="15279" pos:column="5">{	<decl><name pos:line="15279" pos:column="9">BPRESI_BPRESLOCATION</name>	<init pos:line="15279" pos:column="33">= <expr><lit:literal type="number" pos:line="15279" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="15279" pos:column="38">,</op:operator>
	<decl><name pos:line="15280" pos:column="9">BPRESI_PROGRAM</name>	<init pos:line="15280" pos:column="25">= <expr><lit:literal type="number" pos:line="15280" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="15280" pos:column="30">,</op:operator>
	<decl><name pos:line="15281" pos:column="9">BPRESI_THREAD</name>	<init pos:line="15281" pos:column="25">= <expr><lit:literal type="number" pos:line="15281" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="15281" pos:column="30">,</op:operator>
	<decl><name pos:line="15282" pos:column="9">BPRESI_ALLFIELDS</name>	<init pos:line="15282" pos:column="33">= <expr><lit:literal type="number" pos:line="15282" pos:column="35">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15284" pos:column="1">typedef <type><name pos:line="15284" pos:column="9">DWORD</name></type> <name pos:line="15284" pos:column="15">BPRESI_FIELDS</name>;</typedef>

<typedef pos:line="15286" pos:column="1">typedef <type><struct pos:line="15286" pos:column="9">struct <name pos:line="15286" pos:column="16">_BP_RESOLUTION_INFO</name>
    <block pos:line="15287" pos:column="5">{<public type="default" pos:line="15287" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15288" pos:column="5">BPRESI_FIELDS</name></type> <name pos:line="15288" pos:column="19">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15289" pos:column="5">BP_RESOLUTION_LOCATION</name></type> <name pos:line="15289" pos:column="28">bpResLocation</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15290" pos:column="5">IDebugProgram2</name> <type:modifier pos:line="15290" pos:column="20">*</type:modifier></type><name pos:line="15290" pos:column="21">pProgram</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15291" pos:column="5">IDebugThread2</name> <type:modifier pos:line="15291" pos:column="19">*</type:modifier></type><name pos:line="15291" pos:column="20">pThread</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="15292" pos:column="9">BP_RESOLUTION_INFO</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="15296" pos:column="1">extern</specifier> <name pos:line="15296" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="15296" pos:column="22">__MIDL_itf_msdbg_0000_0101_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="15297" pos:column="1">extern</specifier> <name pos:line="15297" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="15297" pos:column="22">__MIDL_itf_msdbg_0000_0101_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="15299" pos:column="1">#<cpp:directive pos:line="15299" pos:column="2">ifndef</cpp:directive> <name pos:line="15299" pos:column="9">__IDebugBreakpointResolution2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15300" pos:column="1">#<cpp:directive pos:line="15300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15300" pos:column="9">__IDebugBreakpointResolution2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15302" pos:column="1">/* interface IDebugBreakpointResolution2 */</comment>
<comment type="block" pos:line="15303" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="15306" pos:column="1">EXTERN_C</name> <specifier pos:line="15306" pos:column="10">const</specifier> <name pos:line="15306" pos:column="16">IID</name></type> <name pos:line="15306" pos:column="20">IID_IDebugBreakpointResolution2</name></decl>;</decl_stmt>

<cpp:if pos:line="15308" pos:column="1">#<cpp:directive pos:line="15308" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15308" pos:column="5">defined</name><argument_list pos:line="15308" pos:column="12">(<argument><expr><name pos:line="15308" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15308" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15308" pos:column="29">!</op:operator><call><name pos:line="15308" pos:column="30">defined</name><argument_list pos:line="15308" pos:column="37">(<argument><expr><name pos:line="15308" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15310" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15310" pos:column="19">(<argument pos:line="15310" pos:column="20">"b7e66f28-035a-401a-afc7-2e300bd29711"</argument>)</argument_list></macro>
    <label><name pos:line="15311" pos:column="5">IDebugBreakpointResolution2</name> :</label> <expr_stmt><expr pos:line="15311" pos:column="35">public <name pos:line="15311" pos:column="42">IUnknown</name>
    <block pos:line="15312" pos:column="5">{
    <expr pos:line="15313" pos:column="5">public<op:operator pos:line="15313" pos:column="11">:</op:operator>
        virtual <name pos:line="15314" pos:column="17">HRESULT</name> <name pos:line="15314" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15314" pos:column="43">GetBreakpointType</name><argument_list pos:line="15314" pos:column="60">( 
            <comment type="block" pos:line="15315" pos:column="13">/* [out] */</comment> <argument pos:line="15315" pos:column="25">__RPC__out BP_TYPE *pBPType</argument>)</argument_list></macro> <op:operator pos:line="15315" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="15315" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="15317" pos:column="9">virtual <name pos:line="15317" pos:column="17">HRESULT</name> <name pos:line="15317" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15317" pos:column="43">GetResolutionInfo</name><argument_list pos:line="15317" pos:column="60">( 
            <comment type="block" pos:line="15318" pos:column="13">/* [in] */</comment> <argument pos:line="15318" pos:column="24">BPRESI_FIELDS dwFields</argument>,
            <comment type="block" pos:line="15319" pos:column="13">/* [out] */</comment> <argument pos:line="15319" pos:column="25">__RPC__out BP_RESOLUTION_INFO *pBPResolutionInfo</argument>)</argument_list></macro> <op:operator pos:line="15319" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="15319" pos:column="77">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15323" pos:column="1">#<cpp:directive pos:line="15323" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15323" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15325" pos:column="5">typedef <type><struct pos:line="15325" pos:column="13">struct <name pos:line="15325" pos:column="20">IDebugBreakpointResolution2Vtbl</name>
    <block pos:line="15326" pos:column="5">{<public type="default" pos:line="15326" pos:column="6">
        <function_decl><type><name pos:line="15327" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15329" pos:column="9">HRESULT</name></type> ( <name pos:line="15329" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15329" pos:column="37">*</type:modifier><name pos:line="15329" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15329" pos:column="54">( 
            <param><decl><type><name pos:line="15330" pos:column="13">IDebugBreakpointResolution2</name> <type:modifier pos:line="15330" pos:column="41">*</type:modifier></type> <name pos:line="15330" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="15331" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15331" pos:column="24">__RPC__in</name> <name pos:line="15331" pos:column="34">REFIID</name></type> <name pos:line="15331" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15332" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15333" pos:column="13">__RPC__deref_out</name>  <name pos:line="15333" pos:column="31">void</name> <type:modifier pos:line="15333" pos:column="36">*</type:modifier><type:modifier pos:line="15333" pos:column="37">*</type:modifier></type><name pos:line="15333" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15335" pos:column="9">ULONG</name></type> ( <name pos:line="15335" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15335" pos:column="35">*</type:modifier><name pos:line="15335" pos:column="36">AddRef</name> )<parameter_list pos:line="15335" pos:column="44">( 
            <param><decl><type><name pos:line="15336" pos:column="13">IDebugBreakpointResolution2</name> <type:modifier pos:line="15336" pos:column="41">*</type:modifier></type> <name pos:line="15336" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15338" pos:column="9">ULONG</name></type> ( <name pos:line="15338" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15338" pos:column="35">*</type:modifier><name pos:line="15338" pos:column="36">Release</name> )<parameter_list pos:line="15338" pos:column="45">( 
            <param><decl><type><name pos:line="15339" pos:column="13">IDebugBreakpointResolution2</name> <type:modifier pos:line="15339" pos:column="41">*</type:modifier></type> <name pos:line="15339" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15341" pos:column="9">HRESULT</name></type> ( <name pos:line="15341" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15341" pos:column="37">*</type:modifier><name pos:line="15341" pos:column="38">GetBreakpointType</name> )<parameter_list pos:line="15341" pos:column="57">( 
            <param><decl><type><name pos:line="15342" pos:column="13">IDebugBreakpointResolution2</name> <type:modifier pos:line="15342" pos:column="41">*</type:modifier></type> <name pos:line="15342" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="15343" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15343" pos:column="25">__RPC__out</name> <name pos:line="15343" pos:column="36">BP_TYPE</name> <type:modifier pos:line="15343" pos:column="44">*</type:modifier></type><name pos:line="15343" pos:column="45">pBPType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15345" pos:column="9">HRESULT</name></type> ( <name pos:line="15345" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15345" pos:column="37">*</type:modifier><name pos:line="15345" pos:column="38">GetResolutionInfo</name> )<parameter_list pos:line="15345" pos:column="57">( 
            <param><decl><type><name pos:line="15346" pos:column="13">IDebugBreakpointResolution2</name> <type:modifier pos:line="15346" pos:column="41">*</type:modifier></type> <name pos:line="15346" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="15347" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15347" pos:column="24">BPRESI_FIELDS</name></type> <name pos:line="15347" pos:column="38">dwFields</name></decl></param>,
            <comment type="block" pos:line="15348" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15348" pos:column="25">__RPC__out</name> <name pos:line="15348" pos:column="36">BP_RESOLUTION_INFO</name> <type:modifier pos:line="15348" pos:column="55">*</type:modifier></type><name pos:line="15348" pos:column="56">pBPResolutionInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15350" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15351" pos:column="7">IDebugBreakpointResolution2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15353" pos:column="5">interface</name></type> <name pos:line="15353" pos:column="15">IDebugBreakpointResolution2</name>
    <argument_list pos:line="15354" pos:column="5">{
        <argument><expr><name pos:line="15355" pos:column="9">CONST_VTBL</name> struct <name pos:line="15355" pos:column="27">IDebugBreakpointResolution2Vtbl</name> <op:operator pos:line="15355" pos:column="59">*</op:operator><name pos:line="15355" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15360" pos:column="1">#<cpp:directive pos:line="15360" pos:column="2">ifdef</cpp:directive> <name pos:line="15360" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15363" pos:column="1">#<cpp:directive pos:line="15363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15363" pos:column="9">IDebugBreakpointResolution2_QueryInterface</name><parameter_list pos:line="15363" pos:column="51">(<param><type><name pos:line="15363" pos:column="52">This</name></type></param>,<param><type><name pos:line="15363" pos:column="57">riid</name></type></param>,<param><type><name pos:line="15363" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15364" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15366" pos:column="1">#<cpp:directive pos:line="15366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15366" pos:column="9">IDebugBreakpointResolution2_AddRef</name><parameter_list pos:line="15366" pos:column="43">(<param><type><name pos:line="15366" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15367" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15369" pos:column="1">#<cpp:directive pos:line="15369" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15369" pos:column="9">IDebugBreakpointResolution2_Release</name><parameter_list pos:line="15369" pos:column="44">(<param><type><name pos:line="15369" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15370" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15373" pos:column="1">#<cpp:directive pos:line="15373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15373" pos:column="9">IDebugBreakpointResolution2_GetBreakpointType</name><parameter_list pos:line="15373" pos:column="54">(<param><type><name pos:line="15373" pos:column="55">This</name></type></param>,<param><type><name pos:line="15373" pos:column="60">pBPType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15374" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpointType(This,pBPType) )</cpp:value></cpp:define> 

<cpp:define pos:line="15376" pos:column="1">#<cpp:directive pos:line="15376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15376" pos:column="9">IDebugBreakpointResolution2_GetResolutionInfo</name><parameter_list pos:line="15376" pos:column="54">(<param><type><name pos:line="15376" pos:column="55">This</name></type></param>,<param><type><name pos:line="15376" pos:column="60">dwFields</name></type></param>,<param><type><name pos:line="15376" pos:column="69">pBPResolutionInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15377" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetResolutionInfo(This,dwFields,pBPResolutionInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15379" pos:column="1">#<cpp:directive pos:line="15379" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15379" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15382" pos:column="1">#<cpp:directive pos:line="15382" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15382" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15387" pos:column="1">#<cpp:directive pos:line="15387" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15387" pos:column="9">/* __IDebugBreakpointResolution2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="15390" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0102 */</comment>
<comment type="block" pos:line="15391" pos:column="1">/* [local] */</comment> 


<enum pos:line="15394" pos:column="1">enum <name pos:line="15394" pos:column="6">enum_BP_ERROR_TYPE</name>
    <block pos:line="15395" pos:column="5">{	<decl><name pos:line="15395" pos:column="9">BPET_NONE</name>	<init pos:line="15395" pos:column="25">= <expr><lit:literal type="number" pos:line="15395" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="15395" pos:column="28">,</op:operator>
	<decl><name pos:line="15396" pos:column="9">BPET_TYPE_WARNING</name>	<init pos:line="15396" pos:column="33">= <expr><lit:literal type="number" pos:line="15396" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="15396" pos:column="38">,</op:operator>
	<decl><name pos:line="15397" pos:column="9">BPET_TYPE_ERROR</name>	<init pos:line="15397" pos:column="25">= <expr><lit:literal type="number" pos:line="15397" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="15397" pos:column="30">,</op:operator>
	<decl><name pos:line="15398" pos:column="9">BPET_SEV_HIGH</name>	<init pos:line="15398" pos:column="25">= <expr><lit:literal type="number" pos:line="15398" pos:column="27">0xf000000</lit:literal></expr></init></decl><op:operator pos:line="15398" pos:column="36">,</op:operator>
	<decl><name pos:line="15399" pos:column="9">BPET_SEV_GENERAL</name>	<init pos:line="15399" pos:column="33">= <expr><lit:literal type="number" pos:line="15399" pos:column="35">0x7000000</lit:literal></expr></init></decl><op:operator pos:line="15399" pos:column="44">,</op:operator>
	<decl><name pos:line="15400" pos:column="9">BPET_SEV_LOW</name>	<init pos:line="15400" pos:column="25">= <expr><lit:literal type="number" pos:line="15400" pos:column="27">0x1000000</lit:literal></expr></init></decl><op:operator pos:line="15400" pos:column="36">,</op:operator>
	<decl><name pos:line="15401" pos:column="9">BPET_TYPE_MASK</name>	<init pos:line="15401" pos:column="25">= <expr><lit:literal type="number" pos:line="15401" pos:column="27">0xffff</lit:literal></expr></init></decl><op:operator pos:line="15401" pos:column="33">,</op:operator>
	<decl><name pos:line="15402" pos:column="9">BPET_SEV_MASK</name>	<init pos:line="15402" pos:column="25">= <expr><lit:literal type="number" pos:line="15402" pos:column="27">0xffff0000</lit:literal></expr></init></decl><op:operator pos:line="15402" pos:column="37">,</op:operator>
	<decl><name pos:line="15403" pos:column="9">BPET_GENERAL_WARNING</name>	<init pos:line="15403" pos:column="33">= <expr><op:operator pos:line="15403" pos:column="35">(</op:operator> <name pos:line="15403" pos:column="37">BPET_SEV_GENERAL</name> <op:operator pos:line="15403" pos:column="54">|</op:operator> <name pos:line="15403" pos:column="56">BPET_TYPE_WARNING</name> <op:operator pos:line="15403" pos:column="74">)</op:operator></expr></init></decl> <op:operator pos:line="15403" pos:column="76">,</op:operator>
	<decl><name pos:line="15404" pos:column="9">BPET_GENERAL_ERROR</name>	<init pos:line="15404" pos:column="33">= <expr><op:operator pos:line="15404" pos:column="35">(</op:operator> <name pos:line="15404" pos:column="37">BPET_SEV_GENERAL</name> <op:operator pos:line="15404" pos:column="54">|</op:operator> <name pos:line="15404" pos:column="56">BPET_TYPE_ERROR</name> <op:operator pos:line="15404" pos:column="72">)</op:operator></expr></init></decl> <op:operator pos:line="15404" pos:column="74">,</op:operator>
	<decl><name pos:line="15405" pos:column="9">BPET_ALL</name>	<init pos:line="15405" pos:column="25">= <expr><lit:literal type="number" pos:line="15405" pos:column="27">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15407" pos:column="1">typedef <type><name pos:line="15407" pos:column="9">DWORD</name></type> <name pos:line="15407" pos:column="15">BP_ERROR_TYPE</name>;</typedef>


<enum pos:line="15410" pos:column="1">enum <name pos:line="15410" pos:column="6">enum_BPERESI_FIELDS</name>
    <block pos:line="15411" pos:column="5">{	<decl><name pos:line="15411" pos:column="9">BPERESI_BPRESLOCATION</name>	<init pos:line="15411" pos:column="33">= <expr><lit:literal type="number" pos:line="15411" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="15411" pos:column="38">,</op:operator>
	<decl><name pos:line="15412" pos:column="9">BPERESI_PROGRAM</name>	<init pos:line="15412" pos:column="25">= <expr><lit:literal type="number" pos:line="15412" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="15412" pos:column="30">,</op:operator>
	<decl><name pos:line="15413" pos:column="9">BPERESI_THREAD</name>	<init pos:line="15413" pos:column="25">= <expr><lit:literal type="number" pos:line="15413" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="15413" pos:column="30">,</op:operator>
	<decl><name pos:line="15414" pos:column="9">BPERESI_MESSAGE</name>	<init pos:line="15414" pos:column="25">= <expr><lit:literal type="number" pos:line="15414" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="15414" pos:column="30">,</op:operator>
	<decl><name pos:line="15415" pos:column="9">BPERESI_TYPE</name>	<init pos:line="15415" pos:column="25">= <expr><lit:literal type="number" pos:line="15415" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="15415" pos:column="31">,</op:operator>
	<decl><name pos:line="15416" pos:column="9">BPERESI_ALLFIELDS</name>	<init pos:line="15416" pos:column="33">= <expr><lit:literal type="number" pos:line="15416" pos:column="35">0xffffffff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15418" pos:column="1">typedef <type><name pos:line="15418" pos:column="9">DWORD</name></type> <name pos:line="15418" pos:column="15">BPERESI_FIELDS</name>;</typedef>

<typedef pos:line="15420" pos:column="1">typedef <type><struct pos:line="15420" pos:column="9">struct <name pos:line="15420" pos:column="16">_BP_ERROR_RESOLUTION_INFO</name>
    <block pos:line="15421" pos:column="5">{<public type="default" pos:line="15421" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15422" pos:column="5">BPERESI_FIELDS</name></type> <name pos:line="15422" pos:column="20">dwFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15423" pos:column="5">BP_RESOLUTION_LOCATION</name></type> <name pos:line="15423" pos:column="28">bpResLocation</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15424" pos:column="5">IDebugProgram2</name> <type:modifier pos:line="15424" pos:column="20">*</type:modifier></type><name pos:line="15424" pos:column="21">pProgram</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15425" pos:column="5">IDebugThread2</name> <type:modifier pos:line="15425" pos:column="19">*</type:modifier></type><name pos:line="15425" pos:column="20">pThread</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15426" pos:column="5">BSTR</name></type> <name pos:line="15426" pos:column="10">bstrMessage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15427" pos:column="5">BP_ERROR_TYPE</name></type> <name pos:line="15427" pos:column="19">dwType</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="15428" pos:column="9">BP_ERROR_RESOLUTION_INFO</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="15432" pos:column="1">extern</specifier> <name pos:line="15432" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="15432" pos:column="22">__MIDL_itf_msdbg_0000_0102_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="15433" pos:column="1">extern</specifier> <name pos:line="15433" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="15433" pos:column="22">__MIDL_itf_msdbg_0000_0102_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="15435" pos:column="1">#<cpp:directive pos:line="15435" pos:column="2">ifndef</cpp:directive> <name pos:line="15435" pos:column="9">__IDebugErrorBreakpointResolution2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15436" pos:column="1">#<cpp:directive pos:line="15436" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15436" pos:column="9">__IDebugErrorBreakpointResolution2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15438" pos:column="1">/* interface IDebugErrorBreakpointResolution2 */</comment>
<comment type="block" pos:line="15439" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="15442" pos:column="1">EXTERN_C</name> <specifier pos:line="15442" pos:column="10">const</specifier> <name pos:line="15442" pos:column="16">IID</name></type> <name pos:line="15442" pos:column="20">IID_IDebugErrorBreakpointResolution2</name></decl>;</decl_stmt>

<cpp:if pos:line="15444" pos:column="1">#<cpp:directive pos:line="15444" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15444" pos:column="5">defined</name><argument_list pos:line="15444" pos:column="12">(<argument><expr><name pos:line="15444" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15444" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15444" pos:column="29">!</op:operator><call><name pos:line="15444" pos:column="30">defined</name><argument_list pos:line="15444" pos:column="37">(<argument><expr><name pos:line="15444" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15446" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15446" pos:column="19">(<argument pos:line="15446" pos:column="20">"603aedf8-9575-4d30-b8ca-124d1c98ebd8"</argument>)</argument_list></macro>
    <label><name pos:line="15447" pos:column="5">IDebugErrorBreakpointResolution2</name> :</label> <expr_stmt><expr pos:line="15447" pos:column="40">public <name pos:line="15447" pos:column="47">IUnknown</name>
    <block pos:line="15448" pos:column="5">{
    <expr pos:line="15449" pos:column="5">public<op:operator pos:line="15449" pos:column="11">:</op:operator>
        virtual <name pos:line="15450" pos:column="17">HRESULT</name> <name pos:line="15450" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15450" pos:column="43">GetBreakpointType</name><argument_list pos:line="15450" pos:column="60">( 
            <comment type="block" pos:line="15451" pos:column="13">/* [out] */</comment> <argument pos:line="15451" pos:column="25">__RPC__out BP_TYPE *pBPType</argument>)</argument_list></macro> <op:operator pos:line="15451" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="15451" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="15453" pos:column="9">virtual <name pos:line="15453" pos:column="17">HRESULT</name> <name pos:line="15453" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15453" pos:column="43">GetResolutionInfo</name><argument_list pos:line="15453" pos:column="60">( 
            <comment type="block" pos:line="15454" pos:column="13">/* [in] */</comment> <argument pos:line="15454" pos:column="24">BPERESI_FIELDS dwFields</argument>,
            <comment type="block" pos:line="15455" pos:column="13">/* [out] */</comment> <argument pos:line="15455" pos:column="25">__RPC__out BP_ERROR_RESOLUTION_INFO *pErrorResolutionInfo</argument>)</argument_list></macro> <op:operator pos:line="15455" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="15455" pos:column="86">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15459" pos:column="1">#<cpp:directive pos:line="15459" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15459" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15461" pos:column="5">typedef <type><struct pos:line="15461" pos:column="13">struct <name pos:line="15461" pos:column="20">IDebugErrorBreakpointResolution2Vtbl</name>
    <block pos:line="15462" pos:column="5">{<public type="default" pos:line="15462" pos:column="6">
        <function_decl><type><name pos:line="15463" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15465" pos:column="9">HRESULT</name></type> ( <name pos:line="15465" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15465" pos:column="37">*</type:modifier><name pos:line="15465" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15465" pos:column="54">( 
            <param><decl><type><name pos:line="15466" pos:column="13">IDebugErrorBreakpointResolution2</name> <type:modifier pos:line="15466" pos:column="46">*</type:modifier></type> <name pos:line="15466" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="15467" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15467" pos:column="24">__RPC__in</name> <name pos:line="15467" pos:column="34">REFIID</name></type> <name pos:line="15467" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15468" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15469" pos:column="13">__RPC__deref_out</name>  <name pos:line="15469" pos:column="31">void</name> <type:modifier pos:line="15469" pos:column="36">*</type:modifier><type:modifier pos:line="15469" pos:column="37">*</type:modifier></type><name pos:line="15469" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15471" pos:column="9">ULONG</name></type> ( <name pos:line="15471" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15471" pos:column="35">*</type:modifier><name pos:line="15471" pos:column="36">AddRef</name> )<parameter_list pos:line="15471" pos:column="44">( 
            <param><decl><type><name pos:line="15472" pos:column="13">IDebugErrorBreakpointResolution2</name> <type:modifier pos:line="15472" pos:column="46">*</type:modifier></type> <name pos:line="15472" pos:column="48">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15474" pos:column="9">ULONG</name></type> ( <name pos:line="15474" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15474" pos:column="35">*</type:modifier><name pos:line="15474" pos:column="36">Release</name> )<parameter_list pos:line="15474" pos:column="45">( 
            <param><decl><type><name pos:line="15475" pos:column="13">IDebugErrorBreakpointResolution2</name> <type:modifier pos:line="15475" pos:column="46">*</type:modifier></type> <name pos:line="15475" pos:column="48">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15477" pos:column="9">HRESULT</name></type> ( <name pos:line="15477" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15477" pos:column="37">*</type:modifier><name pos:line="15477" pos:column="38">GetBreakpointType</name> )<parameter_list pos:line="15477" pos:column="57">( 
            <param><decl><type><name pos:line="15478" pos:column="13">IDebugErrorBreakpointResolution2</name> <type:modifier pos:line="15478" pos:column="46">*</type:modifier></type> <name pos:line="15478" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="15479" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15479" pos:column="25">__RPC__out</name> <name pos:line="15479" pos:column="36">BP_TYPE</name> <type:modifier pos:line="15479" pos:column="44">*</type:modifier></type><name pos:line="15479" pos:column="45">pBPType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15481" pos:column="9">HRESULT</name></type> ( <name pos:line="15481" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15481" pos:column="37">*</type:modifier><name pos:line="15481" pos:column="38">GetResolutionInfo</name> )<parameter_list pos:line="15481" pos:column="57">( 
            <param><decl><type><name pos:line="15482" pos:column="13">IDebugErrorBreakpointResolution2</name> <type:modifier pos:line="15482" pos:column="46">*</type:modifier></type> <name pos:line="15482" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="15483" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15483" pos:column="24">BPERESI_FIELDS</name></type> <name pos:line="15483" pos:column="39">dwFields</name></decl></param>,
            <comment type="block" pos:line="15484" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15484" pos:column="25">__RPC__out</name> <name pos:line="15484" pos:column="36">BP_ERROR_RESOLUTION_INFO</name> <type:modifier pos:line="15484" pos:column="61">*</type:modifier></type><name pos:line="15484" pos:column="62">pErrorResolutionInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15486" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15487" pos:column="7">IDebugErrorBreakpointResolution2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15489" pos:column="5">interface</name></type> <name pos:line="15489" pos:column="15">IDebugErrorBreakpointResolution2</name>
    <argument_list pos:line="15490" pos:column="5">{
        <argument><expr><name pos:line="15491" pos:column="9">CONST_VTBL</name> struct <name pos:line="15491" pos:column="27">IDebugErrorBreakpointResolution2Vtbl</name> <op:operator pos:line="15491" pos:column="64">*</op:operator><name pos:line="15491" pos:column="65">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15496" pos:column="1">#<cpp:directive pos:line="15496" pos:column="2">ifdef</cpp:directive> <name pos:line="15496" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15499" pos:column="1">#<cpp:directive pos:line="15499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15499" pos:column="9">IDebugErrorBreakpointResolution2_QueryInterface</name><parameter_list pos:line="15499" pos:column="56">(<param><type><name pos:line="15499" pos:column="57">This</name></type></param>,<param><type><name pos:line="15499" pos:column="62">riid</name></type></param>,<param><type><name pos:line="15499" pos:column="67">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15500" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15502" pos:column="1">#<cpp:directive pos:line="15502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15502" pos:column="9">IDebugErrorBreakpointResolution2_AddRef</name><parameter_list pos:line="15502" pos:column="48">(<param><type><name pos:line="15502" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15503" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15505" pos:column="1">#<cpp:directive pos:line="15505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15505" pos:column="9">IDebugErrorBreakpointResolution2_Release</name><parameter_list pos:line="15505" pos:column="49">(<param><type><name pos:line="15505" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15506" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15509" pos:column="1">#<cpp:directive pos:line="15509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15509" pos:column="9">IDebugErrorBreakpointResolution2_GetBreakpointType</name><parameter_list pos:line="15509" pos:column="59">(<param><type><name pos:line="15509" pos:column="60">This</name></type></param>,<param><type><name pos:line="15509" pos:column="65">pBPType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15510" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpointType(This,pBPType) )</cpp:value></cpp:define> 

<cpp:define pos:line="15512" pos:column="1">#<cpp:directive pos:line="15512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15512" pos:column="9">IDebugErrorBreakpointResolution2_GetResolutionInfo</name><parameter_list pos:line="15512" pos:column="59">(<param><type><name pos:line="15512" pos:column="60">This</name></type></param>,<param><type><name pos:line="15512" pos:column="65">dwFields</name></type></param>,<param><type><name pos:line="15512" pos:column="74">pErrorResolutionInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15513" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetResolutionInfo(This,dwFields,pErrorResolutionInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15515" pos:column="1">#<cpp:directive pos:line="15515" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15515" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15518" pos:column="1">#<cpp:directive pos:line="15518" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15518" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15523" pos:column="1">#<cpp:directive pos:line="15523" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15523" pos:column="9">/* __IDebugErrorBreakpointResolution2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15526" pos:column="1">#<cpp:directive pos:line="15526" pos:column="2">ifndef</cpp:directive> <name pos:line="15526" pos:column="9">__IDebugBoundBreakpoint2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15527" pos:column="1">#<cpp:directive pos:line="15527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15527" pos:column="9">__IDebugBoundBreakpoint2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15529" pos:column="1">/* interface IDebugBoundBreakpoint2 */</comment>
<comment type="block" pos:line="15530" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="15533" pos:column="1">enum <name pos:line="15533" pos:column="6">enum_BP_STATE</name>
    <block pos:line="15534" pos:column="5">{	<decl><name pos:line="15534" pos:column="9">BPS_NONE</name>	<init pos:line="15534" pos:column="25">= <expr><lit:literal type="number" pos:line="15534" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="15534" pos:column="28">,</op:operator>
	<decl><name pos:line="15535" pos:column="9">BPS_DELETED</name>	<init pos:line="15535" pos:column="25">= <expr><lit:literal type="number" pos:line="15535" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="15535" pos:column="30">,</op:operator>
	<decl><name pos:line="15536" pos:column="9">BPS_DISABLED</name>	<init pos:line="15536" pos:column="25">= <expr><lit:literal type="number" pos:line="15536" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="15536" pos:column="30">,</op:operator>
	<decl><name pos:line="15537" pos:column="9">BPS_ENABLED</name>	<init pos:line="15537" pos:column="25">= <expr><lit:literal type="number" pos:line="15537" pos:column="27">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15539" pos:column="1">typedef <type><name pos:line="15539" pos:column="9">DWORD</name></type> <name pos:line="15539" pos:column="15">BP_STATE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="15542" pos:column="1">EXTERN_C</name> <specifier pos:line="15542" pos:column="10">const</specifier> <name pos:line="15542" pos:column="16">IID</name></type> <name pos:line="15542" pos:column="20">IID_IDebugBoundBreakpoint2</name></decl>;</decl_stmt>

<cpp:if pos:line="15544" pos:column="1">#<cpp:directive pos:line="15544" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15544" pos:column="5">defined</name><argument_list pos:line="15544" pos:column="12">(<argument><expr><name pos:line="15544" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15544" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15544" pos:column="29">!</op:operator><call><name pos:line="15544" pos:column="30">defined</name><argument_list pos:line="15544" pos:column="37">(<argument><expr><name pos:line="15544" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15546" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15546" pos:column="19">(<argument pos:line="15546" pos:column="20">"d533d975-3f32-4876-abd0-6d37fda563e7"</argument>)</argument_list></macro>
    <label><name pos:line="15547" pos:column="5">IDebugBoundBreakpoint2</name> :</label> <expr_stmt><expr pos:line="15547" pos:column="30">public <name pos:line="15547" pos:column="37">IUnknown</name>
    <block pos:line="15548" pos:column="5">{
    <expr pos:line="15549" pos:column="5">public<op:operator pos:line="15549" pos:column="11">:</op:operator>
        virtual <name pos:line="15550" pos:column="17">HRESULT</name> <name pos:line="15550" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15550" pos:column="43">GetPendingBreakpoint</name><argument_list pos:line="15550" pos:column="63">( 
            <comment type="block" pos:line="15551" pos:column="13">/* [out] */</comment> <argument pos:line="15551" pos:column="25">__RPC__deref_out_opt IDebugPendingBreakpoint2 **ppPendingBreakpoint</argument>)</argument_list></macro> <op:operator pos:line="15551" pos:column="94">=</op:operator> <lit:literal type="number" pos:line="15551" pos:column="96">0</lit:literal></expr>;
        
        <expr pos:line="15553" pos:column="9">virtual <name pos:line="15553" pos:column="17">HRESULT</name> <name pos:line="15553" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15553" pos:column="43">GetState</name><argument_list pos:line="15553" pos:column="51">( 
            <comment type="block" pos:line="15554" pos:column="13">/* [out] */</comment> <argument pos:line="15554" pos:column="25">__RPC__out BP_STATE *pState</argument>)</argument_list></macro> <op:operator pos:line="15554" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="15554" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="15556" pos:column="9">virtual <name pos:line="15556" pos:column="17">HRESULT</name> <name pos:line="15556" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15556" pos:column="43">GetHitCount</name><argument_list pos:line="15556" pos:column="54">( 
            <comment type="block" pos:line="15557" pos:column="13">/* [out] */</comment> <argument pos:line="15557" pos:column="25">__RPC__out DWORD *pdwHitCount</argument>)</argument_list></macro> <op:operator pos:line="15557" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="15557" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="15559" pos:column="9">virtual <name pos:line="15559" pos:column="17">HRESULT</name> <name pos:line="15559" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15559" pos:column="43">GetBreakpointResolution</name><argument_list pos:line="15559" pos:column="66">( 
            <comment type="block" pos:line="15560" pos:column="13">/* [out] */</comment> <argument pos:line="15560" pos:column="25">__RPC__deref_out_opt IDebugBreakpointResolution2 **ppBPResolution</argument>)</argument_list></macro> <op:operator pos:line="15560" pos:column="92">=</op:operator> <lit:literal type="number" pos:line="15560" pos:column="94">0</lit:literal></expr>;
        
        <expr pos:line="15562" pos:column="9">virtual <name pos:line="15562" pos:column="17">HRESULT</name> <name pos:line="15562" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15562" pos:column="43">Enable</name><argument_list pos:line="15562" pos:column="49">( 
            <comment type="block" pos:line="15563" pos:column="13">/* [in] */</comment> <argument pos:line="15563" pos:column="24">BOOL fEnable</argument>)</argument_list></macro> <op:operator pos:line="15563" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="15563" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="15565" pos:column="9">virtual <name pos:line="15565" pos:column="17">HRESULT</name> <name pos:line="15565" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15565" pos:column="43">SetHitCount</name><argument_list pos:line="15565" pos:column="54">( 
            <comment type="block" pos:line="15566" pos:column="13">/* [in] */</comment> <argument pos:line="15566" pos:column="24">DWORD dwHitCount</argument>)</argument_list></macro> <op:operator pos:line="15566" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="15566" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="15568" pos:column="9">virtual <name pos:line="15568" pos:column="17">HRESULT</name> <name pos:line="15568" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15568" pos:column="43">SetCondition</name><argument_list pos:line="15568" pos:column="55">( 
            <comment type="block" pos:line="15569" pos:column="13">/* [in] */</comment> <argument pos:line="15569" pos:column="24">BP_CONDITION bpCondition</argument>)</argument_list></macro> <op:operator pos:line="15569" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="15569" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="15571" pos:column="9">virtual <name pos:line="15571" pos:column="17">HRESULT</name> <name pos:line="15571" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15571" pos:column="43">SetPassCount</name><argument_list pos:line="15571" pos:column="55">( 
            <comment type="block" pos:line="15572" pos:column="13">/* [in] */</comment> <argument pos:line="15572" pos:column="24">BP_PASSCOUNT bpPassCount</argument>)</argument_list></macro> <op:operator pos:line="15572" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="15572" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="15574" pos:column="9">virtual <name pos:line="15574" pos:column="17">HRESULT</name> <name pos:line="15574" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="15574" pos:column="43">Delete</name><argument_list pos:line="15574" pos:column="49">( <argument><expr><name pos:line="15574" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="15574" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="15574" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15578" pos:column="1">#<cpp:directive pos:line="15578" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15578" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15580" pos:column="5">typedef <type><struct pos:line="15580" pos:column="13">struct <name pos:line="15580" pos:column="20">IDebugBoundBreakpoint2Vtbl</name>
    <block pos:line="15581" pos:column="5">{<public type="default" pos:line="15581" pos:column="6">
        <function_decl><type><name pos:line="15582" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15584" pos:column="9">HRESULT</name></type> ( <name pos:line="15584" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15584" pos:column="37">*</type:modifier><name pos:line="15584" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15584" pos:column="54">( 
            <param><decl><type><name pos:line="15585" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15585" pos:column="36">*</type:modifier></type> <name pos:line="15585" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15586" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15586" pos:column="24">__RPC__in</name> <name pos:line="15586" pos:column="34">REFIID</name></type> <name pos:line="15586" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15587" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15588" pos:column="13">__RPC__deref_out</name>  <name pos:line="15588" pos:column="31">void</name> <type:modifier pos:line="15588" pos:column="36">*</type:modifier><type:modifier pos:line="15588" pos:column="37">*</type:modifier></type><name pos:line="15588" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15590" pos:column="9">ULONG</name></type> ( <name pos:line="15590" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15590" pos:column="35">*</type:modifier><name pos:line="15590" pos:column="36">AddRef</name> )<parameter_list pos:line="15590" pos:column="44">( 
            <param><decl><type><name pos:line="15591" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15591" pos:column="36">*</type:modifier></type> <name pos:line="15591" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15593" pos:column="9">ULONG</name></type> ( <name pos:line="15593" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15593" pos:column="35">*</type:modifier><name pos:line="15593" pos:column="36">Release</name> )<parameter_list pos:line="15593" pos:column="45">( 
            <param><decl><type><name pos:line="15594" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15594" pos:column="36">*</type:modifier></type> <name pos:line="15594" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15596" pos:column="9">HRESULT</name></type> ( <name pos:line="15596" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15596" pos:column="37">*</type:modifier><name pos:line="15596" pos:column="38">GetPendingBreakpoint</name> )<parameter_list pos:line="15596" pos:column="60">( 
            <param><decl><type><name pos:line="15597" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15597" pos:column="36">*</type:modifier></type> <name pos:line="15597" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15598" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15598" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15598" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15598" pos:column="71">*</type:modifier><type:modifier pos:line="15598" pos:column="72">*</type:modifier></type><name pos:line="15598" pos:column="73">ppPendingBreakpoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15600" pos:column="9">HRESULT</name></type> ( <name pos:line="15600" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15600" pos:column="37">*</type:modifier><name pos:line="15600" pos:column="38">GetState</name> )<parameter_list pos:line="15600" pos:column="48">( 
            <param><decl><type><name pos:line="15601" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15601" pos:column="36">*</type:modifier></type> <name pos:line="15601" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15602" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15602" pos:column="25">__RPC__out</name> <name pos:line="15602" pos:column="36">BP_STATE</name> <type:modifier pos:line="15602" pos:column="45">*</type:modifier></type><name pos:line="15602" pos:column="46">pState</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15604" pos:column="9">HRESULT</name></type> ( <name pos:line="15604" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15604" pos:column="37">*</type:modifier><name pos:line="15604" pos:column="38">GetHitCount</name> )<parameter_list pos:line="15604" pos:column="51">( 
            <param><decl><type><name pos:line="15605" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15605" pos:column="36">*</type:modifier></type> <name pos:line="15605" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15606" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15606" pos:column="25">__RPC__out</name> <name pos:line="15606" pos:column="36">DWORD</name> <type:modifier pos:line="15606" pos:column="42">*</type:modifier></type><name pos:line="15606" pos:column="43">pdwHitCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15608" pos:column="9">HRESULT</name></type> ( <name pos:line="15608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15608" pos:column="37">*</type:modifier><name pos:line="15608" pos:column="38">GetBreakpointResolution</name> )<parameter_list pos:line="15608" pos:column="63">( 
            <param><decl><type><name pos:line="15609" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15609" pos:column="36">*</type:modifier></type> <name pos:line="15609" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15610" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15610" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15610" pos:column="46">IDebugBreakpointResolution2</name> <type:modifier pos:line="15610" pos:column="74">*</type:modifier><type:modifier pos:line="15610" pos:column="75">*</type:modifier></type><name pos:line="15610" pos:column="76">ppBPResolution</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15612" pos:column="9">HRESULT</name></type> ( <name pos:line="15612" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15612" pos:column="37">*</type:modifier><name pos:line="15612" pos:column="38">Enable</name> )<parameter_list pos:line="15612" pos:column="46">( 
            <param><decl><type><name pos:line="15613" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15613" pos:column="36">*</type:modifier></type> <name pos:line="15613" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15614" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15614" pos:column="24">BOOL</name></type> <name pos:line="15614" pos:column="29">fEnable</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15616" pos:column="9">HRESULT</name></type> ( <name pos:line="15616" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15616" pos:column="37">*</type:modifier><name pos:line="15616" pos:column="38">SetHitCount</name> )<parameter_list pos:line="15616" pos:column="51">( 
            <param><decl><type><name pos:line="15617" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15617" pos:column="36">*</type:modifier></type> <name pos:line="15617" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15618" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15618" pos:column="24">DWORD</name></type> <name pos:line="15618" pos:column="30">dwHitCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15620" pos:column="9">HRESULT</name></type> ( <name pos:line="15620" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15620" pos:column="37">*</type:modifier><name pos:line="15620" pos:column="38">SetCondition</name> )<parameter_list pos:line="15620" pos:column="52">( 
            <param><decl><type><name pos:line="15621" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15621" pos:column="36">*</type:modifier></type> <name pos:line="15621" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15622" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15622" pos:column="24">BP_CONDITION</name></type> <name pos:line="15622" pos:column="37">bpCondition</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15624" pos:column="9">HRESULT</name></type> ( <name pos:line="15624" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15624" pos:column="37">*</type:modifier><name pos:line="15624" pos:column="38">SetPassCount</name> )<parameter_list pos:line="15624" pos:column="52">( 
            <param><decl><type><name pos:line="15625" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15625" pos:column="36">*</type:modifier></type> <name pos:line="15625" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15626" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15626" pos:column="24">BP_PASSCOUNT</name></type> <name pos:line="15626" pos:column="37">bpPassCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15628" pos:column="9">HRESULT</name></type> ( <name pos:line="15628" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15628" pos:column="37">*</type:modifier><name pos:line="15628" pos:column="38">Delete</name> )<parameter_list pos:line="15628" pos:column="46">( 
            <param><decl><type><name pos:line="15629" pos:column="13">IDebugBoundBreakpoint2</name> <type:modifier pos:line="15629" pos:column="36">*</type:modifier></type> <name pos:line="15629" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15631" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15632" pos:column="7">IDebugBoundBreakpoint2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15634" pos:column="5">interface</name></type> <name pos:line="15634" pos:column="15">IDebugBoundBreakpoint2</name>
    <argument_list pos:line="15635" pos:column="5">{
        <argument><expr><name pos:line="15636" pos:column="9">CONST_VTBL</name> struct <name pos:line="15636" pos:column="27">IDebugBoundBreakpoint2Vtbl</name> <op:operator pos:line="15636" pos:column="54">*</op:operator><name pos:line="15636" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15641" pos:column="1">#<cpp:directive pos:line="15641" pos:column="2">ifdef</cpp:directive> <name pos:line="15641" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15644" pos:column="1">#<cpp:directive pos:line="15644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15644" pos:column="9">IDebugBoundBreakpoint2_QueryInterface</name><parameter_list pos:line="15644" pos:column="46">(<param><type><name pos:line="15644" pos:column="47">This</name></type></param>,<param><type><name pos:line="15644" pos:column="52">riid</name></type></param>,<param><type><name pos:line="15644" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15645" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15647" pos:column="1">#<cpp:directive pos:line="15647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15647" pos:column="9">IDebugBoundBreakpoint2_AddRef</name><parameter_list pos:line="15647" pos:column="38">(<param><type><name pos:line="15647" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15648" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15650" pos:column="1">#<cpp:directive pos:line="15650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15650" pos:column="9">IDebugBoundBreakpoint2_Release</name><parameter_list pos:line="15650" pos:column="39">(<param><type><name pos:line="15650" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15651" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15654" pos:column="1">#<cpp:directive pos:line="15654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15654" pos:column="9">IDebugBoundBreakpoint2_GetPendingBreakpoint</name><parameter_list pos:line="15654" pos:column="52">(<param><type><name pos:line="15654" pos:column="53">This</name></type></param>,<param><type><name pos:line="15654" pos:column="58">ppPendingBreakpoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15655" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPendingBreakpoint(This,ppPendingBreakpoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="15657" pos:column="1">#<cpp:directive pos:line="15657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15657" pos:column="9">IDebugBoundBreakpoint2_GetState</name><parameter_list pos:line="15657" pos:column="40">(<param><type><name pos:line="15657" pos:column="41">This</name></type></param>,<param><type><name pos:line="15657" pos:column="46">pState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15658" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetState(This,pState) )</cpp:value></cpp:define> 

<cpp:define pos:line="15660" pos:column="1">#<cpp:directive pos:line="15660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15660" pos:column="9">IDebugBoundBreakpoint2_GetHitCount</name><parameter_list pos:line="15660" pos:column="43">(<param><type><name pos:line="15660" pos:column="44">This</name></type></param>,<param><type><name pos:line="15660" pos:column="49">pdwHitCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15661" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHitCount(This,pdwHitCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="15663" pos:column="1">#<cpp:directive pos:line="15663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15663" pos:column="9">IDebugBoundBreakpoint2_GetBreakpointResolution</name><parameter_list pos:line="15663" pos:column="55">(<param><type><name pos:line="15663" pos:column="56">This</name></type></param>,<param><type><name pos:line="15663" pos:column="61">ppBPResolution</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15664" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpointResolution(This,ppBPResolution) )</cpp:value></cpp:define> 

<cpp:define pos:line="15666" pos:column="1">#<cpp:directive pos:line="15666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15666" pos:column="9">IDebugBoundBreakpoint2_Enable</name><parameter_list pos:line="15666" pos:column="38">(<param><type><name pos:line="15666" pos:column="39">This</name></type></param>,<param><type><name pos:line="15666" pos:column="44">fEnable</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15667" pos:column="5">( (This)-&gt;lpVtbl -&gt; Enable(This,fEnable) )</cpp:value></cpp:define> 

<cpp:define pos:line="15669" pos:column="1">#<cpp:directive pos:line="15669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15669" pos:column="9">IDebugBoundBreakpoint2_SetHitCount</name><parameter_list pos:line="15669" pos:column="43">(<param><type><name pos:line="15669" pos:column="44">This</name></type></param>,<param><type><name pos:line="15669" pos:column="49">dwHitCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15670" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetHitCount(This,dwHitCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="15672" pos:column="1">#<cpp:directive pos:line="15672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15672" pos:column="9">IDebugBoundBreakpoint2_SetCondition</name><parameter_list pos:line="15672" pos:column="44">(<param><type><name pos:line="15672" pos:column="45">This</name></type></param>,<param><type><name pos:line="15672" pos:column="50">bpCondition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15673" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCondition(This,bpCondition) )</cpp:value></cpp:define> 

<cpp:define pos:line="15675" pos:column="1">#<cpp:directive pos:line="15675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15675" pos:column="9">IDebugBoundBreakpoint2_SetPassCount</name><parameter_list pos:line="15675" pos:column="44">(<param><type><name pos:line="15675" pos:column="45">This</name></type></param>,<param><type><name pos:line="15675" pos:column="50">bpPassCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15676" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetPassCount(This,bpPassCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="15678" pos:column="1">#<cpp:directive pos:line="15678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15678" pos:column="9">IDebugBoundBreakpoint2_Delete</name><parameter_list pos:line="15678" pos:column="38">(<param><type><name pos:line="15678" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15679" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15681" pos:column="1">#<cpp:directive pos:line="15681" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15681" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15684" pos:column="1">#<cpp:directive pos:line="15684" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15684" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15689" pos:column="1">#<cpp:directive pos:line="15689" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15689" pos:column="9">/* __IDebugBoundBreakpoint2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15692" pos:column="1">#<cpp:directive pos:line="15692" pos:column="2">ifndef</cpp:directive> <name pos:line="15692" pos:column="9">__IDebugBoundBreakpoint3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15693" pos:column="1">#<cpp:directive pos:line="15693" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15693" pos:column="9">__IDebugBoundBreakpoint3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15695" pos:column="1">/* interface IDebugBoundBreakpoint3 */</comment>
<comment type="block" pos:line="15696" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="15699" pos:column="1">EXTERN_C</name> <specifier pos:line="15699" pos:column="10">const</specifier> <name pos:line="15699" pos:column="16">IID</name></type> <name pos:line="15699" pos:column="20">IID_IDebugBoundBreakpoint3</name></decl>;</decl_stmt>

<cpp:if pos:line="15701" pos:column="1">#<cpp:directive pos:line="15701" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15701" pos:column="5">defined</name><argument_list pos:line="15701" pos:column="12">(<argument><expr><name pos:line="15701" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15701" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15701" pos:column="29">!</op:operator><call><name pos:line="15701" pos:column="30">defined</name><argument_list pos:line="15701" pos:column="37">(<argument><expr><name pos:line="15701" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15703" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15703" pos:column="19">(<argument pos:line="15703" pos:column="20">"60f49115-ce92-4f96-8d0a-81cccae4ab77"</argument>)</argument_list></macro>
    <label><name pos:line="15704" pos:column="5">IDebugBoundBreakpoint3</name> :</label> <expr_stmt><expr pos:line="15704" pos:column="30">public <name pos:line="15704" pos:column="37">IUnknown</name>
    <block pos:line="15705" pos:column="5">{
    <expr pos:line="15706" pos:column="5">public<op:operator pos:line="15706" pos:column="11">:</op:operator>
        virtual <name pos:line="15707" pos:column="17">HRESULT</name> <name pos:line="15707" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15707" pos:column="43">SetTracepoint</name><argument_list pos:line="15707" pos:column="56">( 
            <comment type="block" pos:line="15708" pos:column="13">/* [in] */</comment> <argument pos:line="15708" pos:column="24">__RPC__in LPCOLESTR bpBstrTracepoint</argument>,
            <comment type="block" pos:line="15709" pos:column="13">/* [in] */</comment> <argument pos:line="15709" pos:column="24">BP_FLAGS bpFlags</argument>)</argument_list></macro> <op:operator pos:line="15709" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="15709" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15713" pos:column="1">#<cpp:directive pos:line="15713" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15713" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15715" pos:column="5">typedef <type><struct pos:line="15715" pos:column="13">struct <name pos:line="15715" pos:column="20">IDebugBoundBreakpoint3Vtbl</name>
    <block pos:line="15716" pos:column="5">{<public type="default" pos:line="15716" pos:column="6">
        <function_decl><type><name pos:line="15717" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15719" pos:column="9">HRESULT</name></type> ( <name pos:line="15719" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15719" pos:column="37">*</type:modifier><name pos:line="15719" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15719" pos:column="54">( 
            <param><decl><type><name pos:line="15720" pos:column="13">IDebugBoundBreakpoint3</name> <type:modifier pos:line="15720" pos:column="36">*</type:modifier></type> <name pos:line="15720" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15721" pos:column="24">__RPC__in</name> <name pos:line="15721" pos:column="34">REFIID</name></type> <name pos:line="15721" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15722" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15723" pos:column="13">__RPC__deref_out</name>  <name pos:line="15723" pos:column="31">void</name> <type:modifier pos:line="15723" pos:column="36">*</type:modifier><type:modifier pos:line="15723" pos:column="37">*</type:modifier></type><name pos:line="15723" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15725" pos:column="9">ULONG</name></type> ( <name pos:line="15725" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15725" pos:column="35">*</type:modifier><name pos:line="15725" pos:column="36">AddRef</name> )<parameter_list pos:line="15725" pos:column="44">( 
            <param><decl><type><name pos:line="15726" pos:column="13">IDebugBoundBreakpoint3</name> <type:modifier pos:line="15726" pos:column="36">*</type:modifier></type> <name pos:line="15726" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15728" pos:column="9">ULONG</name></type> ( <name pos:line="15728" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15728" pos:column="35">*</type:modifier><name pos:line="15728" pos:column="36">Release</name> )<parameter_list pos:line="15728" pos:column="45">( 
            <param><decl><type><name pos:line="15729" pos:column="13">IDebugBoundBreakpoint3</name> <type:modifier pos:line="15729" pos:column="36">*</type:modifier></type> <name pos:line="15729" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15731" pos:column="9">HRESULT</name></type> ( <name pos:line="15731" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15731" pos:column="37">*</type:modifier><name pos:line="15731" pos:column="38">SetTracepoint</name> )<parameter_list pos:line="15731" pos:column="53">( 
            <param><decl><type><name pos:line="15732" pos:column="13">IDebugBoundBreakpoint3</name> <type:modifier pos:line="15732" pos:column="36">*</type:modifier></type> <name pos:line="15732" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="15733" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15733" pos:column="24">__RPC__in</name> <name pos:line="15733" pos:column="34">LPCOLESTR</name></type> <name pos:line="15733" pos:column="44">bpBstrTracepoint</name></decl></param>,
            <comment type="block" pos:line="15734" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15734" pos:column="24">BP_FLAGS</name></type> <name pos:line="15734" pos:column="33">bpFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15736" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15737" pos:column="7">IDebugBoundBreakpoint3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15739" pos:column="5">interface</name></type> <name pos:line="15739" pos:column="15">IDebugBoundBreakpoint3</name>
    <argument_list pos:line="15740" pos:column="5">{
        <argument><expr><name pos:line="15741" pos:column="9">CONST_VTBL</name> struct <name pos:line="15741" pos:column="27">IDebugBoundBreakpoint3Vtbl</name> <op:operator pos:line="15741" pos:column="54">*</op:operator><name pos:line="15741" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15746" pos:column="1">#<cpp:directive pos:line="15746" pos:column="2">ifdef</cpp:directive> <name pos:line="15746" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15749" pos:column="1">#<cpp:directive pos:line="15749" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15749" pos:column="9">IDebugBoundBreakpoint3_QueryInterface</name><parameter_list pos:line="15749" pos:column="46">(<param><type><name pos:line="15749" pos:column="47">This</name></type></param>,<param><type><name pos:line="15749" pos:column="52">riid</name></type></param>,<param><type><name pos:line="15749" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15750" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15752" pos:column="1">#<cpp:directive pos:line="15752" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15752" pos:column="9">IDebugBoundBreakpoint3_AddRef</name><parameter_list pos:line="15752" pos:column="38">(<param><type><name pos:line="15752" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15753" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15755" pos:column="1">#<cpp:directive pos:line="15755" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15755" pos:column="9">IDebugBoundBreakpoint3_Release</name><parameter_list pos:line="15755" pos:column="39">(<param><type><name pos:line="15755" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15756" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15759" pos:column="1">#<cpp:directive pos:line="15759" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15759" pos:column="9">IDebugBoundBreakpoint3_SetTracepoint</name><parameter_list pos:line="15759" pos:column="45">(<param><type><name pos:line="15759" pos:column="46">This</name></type></param>,<param><type><name pos:line="15759" pos:column="51">bpBstrTracepoint</name></type></param>,<param><type><name pos:line="15759" pos:column="68">bpFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15760" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetTracepoint(This,bpBstrTracepoint,bpFlags) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15762" pos:column="1">#<cpp:directive pos:line="15762" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15762" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15765" pos:column="1">#<cpp:directive pos:line="15765" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15765" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15770" pos:column="1">#<cpp:directive pos:line="15770" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15770" pos:column="9">/* __IDebugBoundBreakpoint3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15773" pos:column="1">#<cpp:directive pos:line="15773" pos:column="2">ifndef</cpp:directive> <name pos:line="15773" pos:column="9">__IDebugPendingBreakpoint2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15774" pos:column="1">#<cpp:directive pos:line="15774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15774" pos:column="9">__IDebugPendingBreakpoint2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15776" pos:column="1">/* interface IDebugPendingBreakpoint2 */</comment>
<comment type="block" pos:line="15777" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="15780" pos:column="1">enum <name pos:line="15780" pos:column="6">enum_PENDING_BP_STATE</name>
    <block pos:line="15781" pos:column="5">{	<decl><name pos:line="15781" pos:column="9">PBPS_NONE</name>	<init pos:line="15781" pos:column="25">= <expr><lit:literal type="number" pos:line="15781" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="15781" pos:column="28">,</op:operator>
	<decl><name pos:line="15782" pos:column="9">PBPS_DELETED</name>	<init pos:line="15782" pos:column="25">= <expr><lit:literal type="number" pos:line="15782" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="15782" pos:column="30">,</op:operator>
	<decl><name pos:line="15783" pos:column="9">PBPS_DISABLED</name>	<init pos:line="15783" pos:column="25">= <expr><lit:literal type="number" pos:line="15783" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="15783" pos:column="30">,</op:operator>
	<decl><name pos:line="15784" pos:column="9">PBPS_ENABLED</name>	<init pos:line="15784" pos:column="25">= <expr><lit:literal type="number" pos:line="15784" pos:column="27">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15786" pos:column="1">typedef <type><name pos:line="15786" pos:column="9">DWORD</name></type> <name pos:line="15786" pos:column="15">PENDING_BP_STATE</name>;</typedef>


<enum pos:line="15789" pos:column="1">enum <name pos:line="15789" pos:column="6">enum_PENDING_BP_STATE_FLAGS</name>
    <block pos:line="15790" pos:column="5">{	<decl><name pos:line="15790" pos:column="9">PBPSF_NONE</name>	<init pos:line="15790" pos:column="25">= <expr><lit:literal type="number" pos:line="15790" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="15790" pos:column="28">,</op:operator>
	<decl><name pos:line="15791" pos:column="9">PBPSF_VIRTUALIZED</name>	<init pos:line="15791" pos:column="33">= <expr><lit:literal type="number" pos:line="15791" pos:column="35">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="15793" pos:column="1">typedef <type><name pos:line="15793" pos:column="9">DWORD</name></type> <name pos:line="15793" pos:column="15">PENDING_BP_STATE_FLAGS</name>;</typedef>

<typedef pos:line="15795" pos:column="1">typedef <type><struct pos:line="15795" pos:column="9">struct <name pos:line="15795" pos:column="16">_tagPENDING_BP_STATE_INFO</name>
    <block pos:line="15796" pos:column="5">{<public type="default" pos:line="15796" pos:column="6">
    <decl_stmt><decl><type><name pos:line="15797" pos:column="5">PENDING_BP_STATE</name></type> <name pos:line="15797" pos:column="22">state</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="15798" pos:column="5">PENDING_BP_STATE_FLAGS</name></type> <name pos:line="15798" pos:column="28">flags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="15799" pos:column="9">PENDING_BP_STATE_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="15802" pos:column="1">EXTERN_C</name> <specifier pos:line="15802" pos:column="10">const</specifier> <name pos:line="15802" pos:column="16">IID</name></type> <name pos:line="15802" pos:column="20">IID_IDebugPendingBreakpoint2</name></decl>;</decl_stmt>

<cpp:if pos:line="15804" pos:column="1">#<cpp:directive pos:line="15804" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15804" pos:column="5">defined</name><argument_list pos:line="15804" pos:column="12">(<argument><expr><name pos:line="15804" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15804" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15804" pos:column="29">!</op:operator><call><name pos:line="15804" pos:column="30">defined</name><argument_list pos:line="15804" pos:column="37">(<argument><expr><name pos:line="15804" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15806" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15806" pos:column="19">(<argument pos:line="15806" pos:column="20">"6e215ef3-e44c-44d1-b7ba-b2401f7dc23d"</argument>)</argument_list></macro>
    <label><name pos:line="15807" pos:column="5">IDebugPendingBreakpoint2</name> :</label> <expr_stmt><expr pos:line="15807" pos:column="32">public <name pos:line="15807" pos:column="39">IUnknown</name>
    <block pos:line="15808" pos:column="5">{
    <expr pos:line="15809" pos:column="5">public<op:operator pos:line="15809" pos:column="11">:</op:operator>
        virtual <name pos:line="15810" pos:column="17">HRESULT</name> <name pos:line="15810" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15810" pos:column="43">CanBind</name><argument_list pos:line="15810" pos:column="50">( 
            <comment type="block" pos:line="15811" pos:column="13">/* [out] */</comment> <argument pos:line="15811" pos:column="25">__RPC__deref_out_opt IEnumDebugErrorBreakpoints2 **ppErrorEnum</argument>)</argument_list></macro> <op:operator pos:line="15811" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="15811" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="15813" pos:column="9">virtual <name pos:line="15813" pos:column="17">HRESULT</name> <name pos:line="15813" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="15813" pos:column="43">Bind</name><argument_list pos:line="15813" pos:column="47">( <argument><expr><name pos:line="15813" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="15813" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="15813" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="15815" pos:column="9">virtual <name pos:line="15815" pos:column="17">HRESULT</name> <name pos:line="15815" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15815" pos:column="43">GetState</name><argument_list pos:line="15815" pos:column="51">( 
            <comment type="block" pos:line="15816" pos:column="13">/* [out] */</comment> <argument pos:line="15816" pos:column="25">__RPC__out PENDING_BP_STATE_INFO *pState</argument>)</argument_list></macro> <op:operator pos:line="15816" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="15816" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="15818" pos:column="9">virtual <name pos:line="15818" pos:column="17">HRESULT</name> <name pos:line="15818" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15818" pos:column="43">GetBreakpointRequest</name><argument_list pos:line="15818" pos:column="63">( 
            <comment type="block" pos:line="15819" pos:column="13">/* [out] */</comment> <argument pos:line="15819" pos:column="25">__RPC__deref_out_opt IDebugBreakpointRequest2 **ppBPRequest</argument>)</argument_list></macro> <op:operator pos:line="15819" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="15819" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="15821" pos:column="9">virtual <name pos:line="15821" pos:column="17">HRESULT</name> <name pos:line="15821" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15821" pos:column="43">Virtualize</name><argument_list pos:line="15821" pos:column="53">( 
            <comment type="block" pos:line="15822" pos:column="13">/* [in] */</comment> <argument pos:line="15822" pos:column="24">BOOL fVirtualize</argument>)</argument_list></macro> <op:operator pos:line="15822" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="15822" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="15824" pos:column="9">virtual <name pos:line="15824" pos:column="17">HRESULT</name> <name pos:line="15824" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15824" pos:column="43">Enable</name><argument_list pos:line="15824" pos:column="49">( 
            <comment type="block" pos:line="15825" pos:column="13">/* [in] */</comment> <argument pos:line="15825" pos:column="24">BOOL fEnable</argument>)</argument_list></macro> <op:operator pos:line="15825" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="15825" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="15827" pos:column="9">virtual <name pos:line="15827" pos:column="17">HRESULT</name> <name pos:line="15827" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15827" pos:column="43">SetCondition</name><argument_list pos:line="15827" pos:column="55">( 
            <comment type="block" pos:line="15828" pos:column="13">/* [in] */</comment> <argument pos:line="15828" pos:column="24">BP_CONDITION bpCondition</argument>)</argument_list></macro> <op:operator pos:line="15828" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="15828" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="15830" pos:column="9">virtual <name pos:line="15830" pos:column="17">HRESULT</name> <name pos:line="15830" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15830" pos:column="43">SetPassCount</name><argument_list pos:line="15830" pos:column="55">( 
            <comment type="block" pos:line="15831" pos:column="13">/* [in] */</comment> <argument pos:line="15831" pos:column="24">BP_PASSCOUNT bpPassCount</argument>)</argument_list></macro> <op:operator pos:line="15831" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="15831" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="15833" pos:column="9">virtual <name pos:line="15833" pos:column="17">HRESULT</name> <name pos:line="15833" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15833" pos:column="43">EnumBoundBreakpoints</name><argument_list pos:line="15833" pos:column="63">( 
            <comment type="block" pos:line="15834" pos:column="13">/* [out] */</comment> <argument pos:line="15834" pos:column="25">__RPC__deref_out_opt IEnumDebugBoundBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="15834" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="15834" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="15836" pos:column="9">virtual <name pos:line="15836" pos:column="17">HRESULT</name> <name pos:line="15836" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15836" pos:column="43">EnumErrorBreakpoints</name><argument_list pos:line="15836" pos:column="63">( 
            <comment type="block" pos:line="15837" pos:column="13">/* [in] */</comment> <argument pos:line="15837" pos:column="24">BP_ERROR_TYPE bpErrorType</argument>,
            <comment type="block" pos:line="15838" pos:column="13">/* [out] */</comment> <argument pos:line="15838" pos:column="25">__RPC__deref_out_opt IEnumDebugErrorBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="15838" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="15838" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="15840" pos:column="9">virtual <name pos:line="15840" pos:column="17">HRESULT</name> <name pos:line="15840" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="15840" pos:column="43">Delete</name><argument_list pos:line="15840" pos:column="49">( <argument><expr><name pos:line="15840" pos:column="51">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="15840" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="15840" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15844" pos:column="1">#<cpp:directive pos:line="15844" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15844" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15846" pos:column="5">typedef <type><struct pos:line="15846" pos:column="13">struct <name pos:line="15846" pos:column="20">IDebugPendingBreakpoint2Vtbl</name>
    <block pos:line="15847" pos:column="5">{<public type="default" pos:line="15847" pos:column="6">
        <function_decl><type><name pos:line="15848" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15850" pos:column="9">HRESULT</name></type> ( <name pos:line="15850" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15850" pos:column="37">*</type:modifier><name pos:line="15850" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15850" pos:column="54">( 
            <param><decl><type><name pos:line="15851" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15851" pos:column="38">*</type:modifier></type> <name pos:line="15851" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15852" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15852" pos:column="24">__RPC__in</name> <name pos:line="15852" pos:column="34">REFIID</name></type> <name pos:line="15852" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15853" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15854" pos:column="13">__RPC__deref_out</name>  <name pos:line="15854" pos:column="31">void</name> <type:modifier pos:line="15854" pos:column="36">*</type:modifier><type:modifier pos:line="15854" pos:column="37">*</type:modifier></type><name pos:line="15854" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15856" pos:column="9">ULONG</name></type> ( <name pos:line="15856" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15856" pos:column="35">*</type:modifier><name pos:line="15856" pos:column="36">AddRef</name> )<parameter_list pos:line="15856" pos:column="44">( 
            <param><decl><type><name pos:line="15857" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15857" pos:column="38">*</type:modifier></type> <name pos:line="15857" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15859" pos:column="9">ULONG</name></type> ( <name pos:line="15859" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15859" pos:column="35">*</type:modifier><name pos:line="15859" pos:column="36">Release</name> )<parameter_list pos:line="15859" pos:column="45">( 
            <param><decl><type><name pos:line="15860" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15860" pos:column="38">*</type:modifier></type> <name pos:line="15860" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15862" pos:column="9">HRESULT</name></type> ( <name pos:line="15862" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15862" pos:column="37">*</type:modifier><name pos:line="15862" pos:column="38">CanBind</name> )<parameter_list pos:line="15862" pos:column="47">( 
            <param><decl><type><name pos:line="15863" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15863" pos:column="38">*</type:modifier></type> <name pos:line="15863" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15864" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15864" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15864" pos:column="46">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="15864" pos:column="74">*</type:modifier><type:modifier pos:line="15864" pos:column="75">*</type:modifier></type><name pos:line="15864" pos:column="76">ppErrorEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15866" pos:column="9">HRESULT</name></type> ( <name pos:line="15866" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15866" pos:column="37">*</type:modifier><name pos:line="15866" pos:column="38">Bind</name> )<parameter_list pos:line="15866" pos:column="44">( 
            <param><decl><type><name pos:line="15867" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15867" pos:column="38">*</type:modifier></type> <name pos:line="15867" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15869" pos:column="9">HRESULT</name></type> ( <name pos:line="15869" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15869" pos:column="37">*</type:modifier><name pos:line="15869" pos:column="38">GetState</name> )<parameter_list pos:line="15869" pos:column="48">( 
            <param><decl><type><name pos:line="15870" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15870" pos:column="38">*</type:modifier></type> <name pos:line="15870" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15871" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15871" pos:column="25">__RPC__out</name> <name pos:line="15871" pos:column="36">PENDING_BP_STATE_INFO</name> <type:modifier pos:line="15871" pos:column="58">*</type:modifier></type><name pos:line="15871" pos:column="59">pState</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15873" pos:column="9">HRESULT</name></type> ( <name pos:line="15873" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15873" pos:column="37">*</type:modifier><name pos:line="15873" pos:column="38">GetBreakpointRequest</name> )<parameter_list pos:line="15873" pos:column="60">( 
            <param><decl><type><name pos:line="15874" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15874" pos:column="38">*</type:modifier></type> <name pos:line="15874" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15875" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15875" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15875" pos:column="46">IDebugBreakpointRequest2</name> <type:modifier pos:line="15875" pos:column="71">*</type:modifier><type:modifier pos:line="15875" pos:column="72">*</type:modifier></type><name pos:line="15875" pos:column="73">ppBPRequest</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15877" pos:column="9">HRESULT</name></type> ( <name pos:line="15877" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15877" pos:column="37">*</type:modifier><name pos:line="15877" pos:column="38">Virtualize</name> )<parameter_list pos:line="15877" pos:column="50">( 
            <param><decl><type><name pos:line="15878" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15878" pos:column="38">*</type:modifier></type> <name pos:line="15878" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15879" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15879" pos:column="24">BOOL</name></type> <name pos:line="15879" pos:column="29">fVirtualize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15881" pos:column="9">HRESULT</name></type> ( <name pos:line="15881" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15881" pos:column="37">*</type:modifier><name pos:line="15881" pos:column="38">Enable</name> )<parameter_list pos:line="15881" pos:column="46">( 
            <param><decl><type><name pos:line="15882" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15882" pos:column="38">*</type:modifier></type> <name pos:line="15882" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15883" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15883" pos:column="24">BOOL</name></type> <name pos:line="15883" pos:column="29">fEnable</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15885" pos:column="9">HRESULT</name></type> ( <name pos:line="15885" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15885" pos:column="37">*</type:modifier><name pos:line="15885" pos:column="38">SetCondition</name> )<parameter_list pos:line="15885" pos:column="52">( 
            <param><decl><type><name pos:line="15886" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15886" pos:column="38">*</type:modifier></type> <name pos:line="15886" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15887" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15887" pos:column="24">BP_CONDITION</name></type> <name pos:line="15887" pos:column="37">bpCondition</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15889" pos:column="9">HRESULT</name></type> ( <name pos:line="15889" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15889" pos:column="37">*</type:modifier><name pos:line="15889" pos:column="38">SetPassCount</name> )<parameter_list pos:line="15889" pos:column="52">( 
            <param><decl><type><name pos:line="15890" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15890" pos:column="38">*</type:modifier></type> <name pos:line="15890" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15891" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15891" pos:column="24">BP_PASSCOUNT</name></type> <name pos:line="15891" pos:column="37">bpPassCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15893" pos:column="9">HRESULT</name></type> ( <name pos:line="15893" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15893" pos:column="37">*</type:modifier><name pos:line="15893" pos:column="38">EnumBoundBreakpoints</name> )<parameter_list pos:line="15893" pos:column="60">( 
            <param><decl><type><name pos:line="15894" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15894" pos:column="38">*</type:modifier></type> <name pos:line="15894" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15895" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15895" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15895" pos:column="46">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="15895" pos:column="74">*</type:modifier><type:modifier pos:line="15895" pos:column="75">*</type:modifier></type><name pos:line="15895" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15897" pos:column="9">HRESULT</name></type> ( <name pos:line="15897" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15897" pos:column="37">*</type:modifier><name pos:line="15897" pos:column="38">EnumErrorBreakpoints</name> )<parameter_list pos:line="15897" pos:column="60">( 
            <param><decl><type><name pos:line="15898" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15898" pos:column="38">*</type:modifier></type> <name pos:line="15898" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="15899" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15899" pos:column="24">BP_ERROR_TYPE</name></type> <name pos:line="15899" pos:column="38">bpErrorType</name></decl></param>,
            <comment type="block" pos:line="15900" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15900" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15900" pos:column="46">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="15900" pos:column="74">*</type:modifier><type:modifier pos:line="15900" pos:column="75">*</type:modifier></type><name pos:line="15900" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15902" pos:column="9">HRESULT</name></type> ( <name pos:line="15902" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15902" pos:column="37">*</type:modifier><name pos:line="15902" pos:column="38">Delete</name> )<parameter_list pos:line="15902" pos:column="46">( 
            <param><decl><type><name pos:line="15903" pos:column="13">IDebugPendingBreakpoint2</name> <type:modifier pos:line="15903" pos:column="38">*</type:modifier></type> <name pos:line="15903" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15905" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15906" pos:column="7">IDebugPendingBreakpoint2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15908" pos:column="5">interface</name></type> <name pos:line="15908" pos:column="15">IDebugPendingBreakpoint2</name>
    <argument_list pos:line="15909" pos:column="5">{
        <argument><expr><name pos:line="15910" pos:column="9">CONST_VTBL</name> struct <name pos:line="15910" pos:column="27">IDebugPendingBreakpoint2Vtbl</name> <op:operator pos:line="15910" pos:column="56">*</op:operator><name pos:line="15910" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15915" pos:column="1">#<cpp:directive pos:line="15915" pos:column="2">ifdef</cpp:directive> <name pos:line="15915" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15918" pos:column="1">#<cpp:directive pos:line="15918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15918" pos:column="9">IDebugPendingBreakpoint2_QueryInterface</name><parameter_list pos:line="15918" pos:column="48">(<param><type><name pos:line="15918" pos:column="49">This</name></type></param>,<param><type><name pos:line="15918" pos:column="54">riid</name></type></param>,<param><type><name pos:line="15918" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15919" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15921" pos:column="1">#<cpp:directive pos:line="15921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15921" pos:column="9">IDebugPendingBreakpoint2_AddRef</name><parameter_list pos:line="15921" pos:column="40">(<param><type><name pos:line="15921" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15922" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15924" pos:column="1">#<cpp:directive pos:line="15924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15924" pos:column="9">IDebugPendingBreakpoint2_Release</name><parameter_list pos:line="15924" pos:column="41">(<param><type><name pos:line="15924" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15925" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15928" pos:column="1">#<cpp:directive pos:line="15928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15928" pos:column="9">IDebugPendingBreakpoint2_CanBind</name><parameter_list pos:line="15928" pos:column="41">(<param><type><name pos:line="15928" pos:column="42">This</name></type></param>,<param><type><name pos:line="15928" pos:column="47">ppErrorEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15929" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanBind(This,ppErrorEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="15931" pos:column="1">#<cpp:directive pos:line="15931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15931" pos:column="9">IDebugPendingBreakpoint2_Bind</name><parameter_list pos:line="15931" pos:column="38">(<param><type><name pos:line="15931" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15932" pos:column="5">( (This)-&gt;lpVtbl -&gt; Bind(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15934" pos:column="1">#<cpp:directive pos:line="15934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15934" pos:column="9">IDebugPendingBreakpoint2_GetState</name><parameter_list pos:line="15934" pos:column="42">(<param><type><name pos:line="15934" pos:column="43">This</name></type></param>,<param><type><name pos:line="15934" pos:column="48">pState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15935" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetState(This,pState) )</cpp:value></cpp:define> 

<cpp:define pos:line="15937" pos:column="1">#<cpp:directive pos:line="15937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15937" pos:column="9">IDebugPendingBreakpoint2_GetBreakpointRequest</name><parameter_list pos:line="15937" pos:column="54">(<param><type><name pos:line="15937" pos:column="55">This</name></type></param>,<param><type><name pos:line="15937" pos:column="60">ppBPRequest</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15938" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpointRequest(This,ppBPRequest) )</cpp:value></cpp:define> 

<cpp:define pos:line="15940" pos:column="1">#<cpp:directive pos:line="15940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15940" pos:column="9">IDebugPendingBreakpoint2_Virtualize</name><parameter_list pos:line="15940" pos:column="44">(<param><type><name pos:line="15940" pos:column="45">This</name></type></param>,<param><type><name pos:line="15940" pos:column="50">fVirtualize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15941" pos:column="5">( (This)-&gt;lpVtbl -&gt; Virtualize(This,fVirtualize) )</cpp:value></cpp:define> 

<cpp:define pos:line="15943" pos:column="1">#<cpp:directive pos:line="15943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15943" pos:column="9">IDebugPendingBreakpoint2_Enable</name><parameter_list pos:line="15943" pos:column="40">(<param><type><name pos:line="15943" pos:column="41">This</name></type></param>,<param><type><name pos:line="15943" pos:column="46">fEnable</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15944" pos:column="5">( (This)-&gt;lpVtbl -&gt; Enable(This,fEnable) )</cpp:value></cpp:define> 

<cpp:define pos:line="15946" pos:column="1">#<cpp:directive pos:line="15946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15946" pos:column="9">IDebugPendingBreakpoint2_SetCondition</name><parameter_list pos:line="15946" pos:column="46">(<param><type><name pos:line="15946" pos:column="47">This</name></type></param>,<param><type><name pos:line="15946" pos:column="52">bpCondition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15947" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCondition(This,bpCondition) )</cpp:value></cpp:define> 

<cpp:define pos:line="15949" pos:column="1">#<cpp:directive pos:line="15949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15949" pos:column="9">IDebugPendingBreakpoint2_SetPassCount</name><parameter_list pos:line="15949" pos:column="46">(<param><type><name pos:line="15949" pos:column="47">This</name></type></param>,<param><type><name pos:line="15949" pos:column="52">bpPassCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15950" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetPassCount(This,bpPassCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="15952" pos:column="1">#<cpp:directive pos:line="15952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15952" pos:column="9">IDebugPendingBreakpoint2_EnumBoundBreakpoints</name><parameter_list pos:line="15952" pos:column="54">(<param><type><name pos:line="15952" pos:column="55">This</name></type></param>,<param><type><name pos:line="15952" pos:column="60">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15953" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumBoundBreakpoints(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="15955" pos:column="1">#<cpp:directive pos:line="15955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15955" pos:column="9">IDebugPendingBreakpoint2_EnumErrorBreakpoints</name><parameter_list pos:line="15955" pos:column="54">(<param><type><name pos:line="15955" pos:column="55">This</name></type></param>,<param><type><name pos:line="15955" pos:column="60">bpErrorType</name></type></param>,<param><type><name pos:line="15955" pos:column="72">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15956" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumErrorBreakpoints(This,bpErrorType,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="15958" pos:column="1">#<cpp:directive pos:line="15958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15958" pos:column="9">IDebugPendingBreakpoint2_Delete</name><parameter_list pos:line="15958" pos:column="40">(<param><type><name pos:line="15958" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15959" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15961" pos:column="1">#<cpp:directive pos:line="15961" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15961" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15964" pos:column="1">#<cpp:directive pos:line="15964" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15964" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15969" pos:column="1">#<cpp:directive pos:line="15969" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15969" pos:column="9">/* __IDebugPendingBreakpoint2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15972" pos:column="1">#<cpp:directive pos:line="15972" pos:column="2">ifndef</cpp:directive> <name pos:line="15972" pos:column="9">__IDebugPendingBreakpoint3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15973" pos:column="1">#<cpp:directive pos:line="15973" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15973" pos:column="9">__IDebugPendingBreakpoint3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15975" pos:column="1">/* interface IDebugPendingBreakpoint3 */</comment>
<comment type="block" pos:line="15976" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="15979" pos:column="1">EXTERN_C</name> <specifier pos:line="15979" pos:column="10">const</specifier> <name pos:line="15979" pos:column="16">IID</name></type> <name pos:line="15979" pos:column="20">IID_IDebugPendingBreakpoint3</name></decl>;</decl_stmt>

<cpp:if pos:line="15981" pos:column="1">#<cpp:directive pos:line="15981" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15981" pos:column="5">defined</name><argument_list pos:line="15981" pos:column="12">(<argument><expr><name pos:line="15981" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15981" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15981" pos:column="29">!</op:operator><call><name pos:line="15981" pos:column="30">defined</name><argument_list pos:line="15981" pos:column="37">(<argument><expr><name pos:line="15981" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15983" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15983" pos:column="19">(<argument pos:line="15983" pos:column="20">"96643d32-2624-479a-9f1a-25d02030dd3b"</argument>)</argument_list></macro>
    <label><name pos:line="15984" pos:column="5">IDebugPendingBreakpoint3</name> :</label> <expr_stmt><expr pos:line="15984" pos:column="32">public <name pos:line="15984" pos:column="39">IDebugPendingBreakpoint2</name>
    <block pos:line="15985" pos:column="5">{
    <expr pos:line="15986" pos:column="5">public<op:operator pos:line="15986" pos:column="11">:</op:operator>
        virtual <name pos:line="15987" pos:column="17">HRESULT</name> <name pos:line="15987" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="15987" pos:column="43">GetErrorResolutionInfo</name><argument_list pos:line="15987" pos:column="65">( 
            <comment type="block" pos:line="15988" pos:column="13">/* [in] */</comment> <argument pos:line="15988" pos:column="24">BPERESI_FIELDS dwFields</argument>,
            <comment type="block" pos:line="15989" pos:column="13">/* [out] */</comment> <argument pos:line="15989" pos:column="25">__RPC__out BP_ERROR_RESOLUTION_INFO *pErrorResolutionInfo</argument>)</argument_list></macro> <op:operator pos:line="15989" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="15989" pos:column="86">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15993" pos:column="1">#<cpp:directive pos:line="15993" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15993" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15995" pos:column="5">typedef <type><struct pos:line="15995" pos:column="13">struct <name pos:line="15995" pos:column="20">IDebugPendingBreakpoint3Vtbl</name>
    <block pos:line="15996" pos:column="5">{<public type="default" pos:line="15996" pos:column="6">
        <function_decl><type><name pos:line="15997" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15999" pos:column="9">HRESULT</name></type> ( <name pos:line="15999" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15999" pos:column="37">*</type:modifier><name pos:line="15999" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15999" pos:column="54">( 
            <param><decl><type><name pos:line="16000" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16000" pos:column="38">*</type:modifier></type> <name pos:line="16000" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16001" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16001" pos:column="24">__RPC__in</name> <name pos:line="16001" pos:column="34">REFIID</name></type> <name pos:line="16001" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16002" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16003" pos:column="13">__RPC__deref_out</name>  <name pos:line="16003" pos:column="31">void</name> <type:modifier pos:line="16003" pos:column="36">*</type:modifier><type:modifier pos:line="16003" pos:column="37">*</type:modifier></type><name pos:line="16003" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16005" pos:column="9">ULONG</name></type> ( <name pos:line="16005" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16005" pos:column="35">*</type:modifier><name pos:line="16005" pos:column="36">AddRef</name> )<parameter_list pos:line="16005" pos:column="44">( 
            <param><decl><type><name pos:line="16006" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16006" pos:column="38">*</type:modifier></type> <name pos:line="16006" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16008" pos:column="9">ULONG</name></type> ( <name pos:line="16008" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16008" pos:column="35">*</type:modifier><name pos:line="16008" pos:column="36">Release</name> )<parameter_list pos:line="16008" pos:column="45">( 
            <param><decl><type><name pos:line="16009" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16009" pos:column="38">*</type:modifier></type> <name pos:line="16009" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16011" pos:column="9">HRESULT</name></type> ( <name pos:line="16011" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16011" pos:column="37">*</type:modifier><name pos:line="16011" pos:column="38">CanBind</name> )<parameter_list pos:line="16011" pos:column="47">( 
            <param><decl><type><name pos:line="16012" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16012" pos:column="38">*</type:modifier></type> <name pos:line="16012" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16013" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16013" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16013" pos:column="46">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="16013" pos:column="74">*</type:modifier><type:modifier pos:line="16013" pos:column="75">*</type:modifier></type><name pos:line="16013" pos:column="76">ppErrorEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16015" pos:column="9">HRESULT</name></type> ( <name pos:line="16015" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16015" pos:column="37">*</type:modifier><name pos:line="16015" pos:column="38">Bind</name> )<parameter_list pos:line="16015" pos:column="44">( 
            <param><decl><type><name pos:line="16016" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16016" pos:column="38">*</type:modifier></type> <name pos:line="16016" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16018" pos:column="9">HRESULT</name></type> ( <name pos:line="16018" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16018" pos:column="37">*</type:modifier><name pos:line="16018" pos:column="38">GetState</name> )<parameter_list pos:line="16018" pos:column="48">( 
            <param><decl><type><name pos:line="16019" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16019" pos:column="38">*</type:modifier></type> <name pos:line="16019" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16020" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16020" pos:column="25">__RPC__out</name> <name pos:line="16020" pos:column="36">PENDING_BP_STATE_INFO</name> <type:modifier pos:line="16020" pos:column="58">*</type:modifier></type><name pos:line="16020" pos:column="59">pState</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16022" pos:column="9">HRESULT</name></type> ( <name pos:line="16022" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16022" pos:column="37">*</type:modifier><name pos:line="16022" pos:column="38">GetBreakpointRequest</name> )<parameter_list pos:line="16022" pos:column="60">( 
            <param><decl><type><name pos:line="16023" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16023" pos:column="38">*</type:modifier></type> <name pos:line="16023" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16024" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16024" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16024" pos:column="46">IDebugBreakpointRequest2</name> <type:modifier pos:line="16024" pos:column="71">*</type:modifier><type:modifier pos:line="16024" pos:column="72">*</type:modifier></type><name pos:line="16024" pos:column="73">ppBPRequest</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16026" pos:column="9">HRESULT</name></type> ( <name pos:line="16026" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16026" pos:column="37">*</type:modifier><name pos:line="16026" pos:column="38">Virtualize</name> )<parameter_list pos:line="16026" pos:column="50">( 
            <param><decl><type><name pos:line="16027" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16027" pos:column="38">*</type:modifier></type> <name pos:line="16027" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16028" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16028" pos:column="24">BOOL</name></type> <name pos:line="16028" pos:column="29">fVirtualize</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16030" pos:column="9">HRESULT</name></type> ( <name pos:line="16030" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16030" pos:column="37">*</type:modifier><name pos:line="16030" pos:column="38">Enable</name> )<parameter_list pos:line="16030" pos:column="46">( 
            <param><decl><type><name pos:line="16031" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16031" pos:column="38">*</type:modifier></type> <name pos:line="16031" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16032" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16032" pos:column="24">BOOL</name></type> <name pos:line="16032" pos:column="29">fEnable</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16034" pos:column="9">HRESULT</name></type> ( <name pos:line="16034" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16034" pos:column="37">*</type:modifier><name pos:line="16034" pos:column="38">SetCondition</name> )<parameter_list pos:line="16034" pos:column="52">( 
            <param><decl><type><name pos:line="16035" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16035" pos:column="38">*</type:modifier></type> <name pos:line="16035" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16036" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16036" pos:column="24">BP_CONDITION</name></type> <name pos:line="16036" pos:column="37">bpCondition</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16038" pos:column="9">HRESULT</name></type> ( <name pos:line="16038" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16038" pos:column="37">*</type:modifier><name pos:line="16038" pos:column="38">SetPassCount</name> )<parameter_list pos:line="16038" pos:column="52">( 
            <param><decl><type><name pos:line="16039" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16039" pos:column="38">*</type:modifier></type> <name pos:line="16039" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16040" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16040" pos:column="24">BP_PASSCOUNT</name></type> <name pos:line="16040" pos:column="37">bpPassCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16042" pos:column="9">HRESULT</name></type> ( <name pos:line="16042" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16042" pos:column="37">*</type:modifier><name pos:line="16042" pos:column="38">EnumBoundBreakpoints</name> )<parameter_list pos:line="16042" pos:column="60">( 
            <param><decl><type><name pos:line="16043" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16043" pos:column="38">*</type:modifier></type> <name pos:line="16043" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16044" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16044" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16044" pos:column="46">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="16044" pos:column="74">*</type:modifier><type:modifier pos:line="16044" pos:column="75">*</type:modifier></type><name pos:line="16044" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16046" pos:column="9">HRESULT</name></type> ( <name pos:line="16046" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16046" pos:column="37">*</type:modifier><name pos:line="16046" pos:column="38">EnumErrorBreakpoints</name> )<parameter_list pos:line="16046" pos:column="60">( 
            <param><decl><type><name pos:line="16047" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16047" pos:column="38">*</type:modifier></type> <name pos:line="16047" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16048" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16048" pos:column="24">BP_ERROR_TYPE</name></type> <name pos:line="16048" pos:column="38">bpErrorType</name></decl></param>,
            <comment type="block" pos:line="16049" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16049" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16049" pos:column="46">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="16049" pos:column="74">*</type:modifier><type:modifier pos:line="16049" pos:column="75">*</type:modifier></type><name pos:line="16049" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16051" pos:column="9">HRESULT</name></type> ( <name pos:line="16051" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16051" pos:column="37">*</type:modifier><name pos:line="16051" pos:column="38">Delete</name> )<parameter_list pos:line="16051" pos:column="46">( 
            <param><decl><type><name pos:line="16052" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16052" pos:column="38">*</type:modifier></type> <name pos:line="16052" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16054" pos:column="9">HRESULT</name></type> ( <name pos:line="16054" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16054" pos:column="37">*</type:modifier><name pos:line="16054" pos:column="38">GetErrorResolutionInfo</name> )<parameter_list pos:line="16054" pos:column="62">( 
            <param><decl><type><name pos:line="16055" pos:column="13">IDebugPendingBreakpoint3</name> <type:modifier pos:line="16055" pos:column="38">*</type:modifier></type> <name pos:line="16055" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16056" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16056" pos:column="24">BPERESI_FIELDS</name></type> <name pos:line="16056" pos:column="39">dwFields</name></decl></param>,
            <comment type="block" pos:line="16057" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16057" pos:column="25">__RPC__out</name> <name pos:line="16057" pos:column="36">BP_ERROR_RESOLUTION_INFO</name> <type:modifier pos:line="16057" pos:column="61">*</type:modifier></type><name pos:line="16057" pos:column="62">pErrorResolutionInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16059" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16060" pos:column="7">IDebugPendingBreakpoint3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16062" pos:column="5">interface</name></type> <name pos:line="16062" pos:column="15">IDebugPendingBreakpoint3</name>
    <argument_list pos:line="16063" pos:column="5">{
        <argument><expr><name pos:line="16064" pos:column="9">CONST_VTBL</name> struct <name pos:line="16064" pos:column="27">IDebugPendingBreakpoint3Vtbl</name> <op:operator pos:line="16064" pos:column="56">*</op:operator><name pos:line="16064" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16069" pos:column="1">#<cpp:directive pos:line="16069" pos:column="2">ifdef</cpp:directive> <name pos:line="16069" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16072" pos:column="1">#<cpp:directive pos:line="16072" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16072" pos:column="9">IDebugPendingBreakpoint3_QueryInterface</name><parameter_list pos:line="16072" pos:column="48">(<param><type><name pos:line="16072" pos:column="49">This</name></type></param>,<param><type><name pos:line="16072" pos:column="54">riid</name></type></param>,<param><type><name pos:line="16072" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16073" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16075" pos:column="1">#<cpp:directive pos:line="16075" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16075" pos:column="9">IDebugPendingBreakpoint3_AddRef</name><parameter_list pos:line="16075" pos:column="40">(<param><type><name pos:line="16075" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16076" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16078" pos:column="1">#<cpp:directive pos:line="16078" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16078" pos:column="9">IDebugPendingBreakpoint3_Release</name><parameter_list pos:line="16078" pos:column="41">(<param><type><name pos:line="16078" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16079" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16082" pos:column="1">#<cpp:directive pos:line="16082" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16082" pos:column="9">IDebugPendingBreakpoint3_CanBind</name><parameter_list pos:line="16082" pos:column="41">(<param><type><name pos:line="16082" pos:column="42">This</name></type></param>,<param><type><name pos:line="16082" pos:column="47">ppErrorEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16083" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanBind(This,ppErrorEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="16085" pos:column="1">#<cpp:directive pos:line="16085" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16085" pos:column="9">IDebugPendingBreakpoint3_Bind</name><parameter_list pos:line="16085" pos:column="38">(<param><type><name pos:line="16085" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16086" pos:column="5">( (This)-&gt;lpVtbl -&gt; Bind(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16088" pos:column="1">#<cpp:directive pos:line="16088" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16088" pos:column="9">IDebugPendingBreakpoint3_GetState</name><parameter_list pos:line="16088" pos:column="42">(<param><type><name pos:line="16088" pos:column="43">This</name></type></param>,<param><type><name pos:line="16088" pos:column="48">pState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16089" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetState(This,pState) )</cpp:value></cpp:define> 

<cpp:define pos:line="16091" pos:column="1">#<cpp:directive pos:line="16091" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16091" pos:column="9">IDebugPendingBreakpoint3_GetBreakpointRequest</name><parameter_list pos:line="16091" pos:column="54">(<param><type><name pos:line="16091" pos:column="55">This</name></type></param>,<param><type><name pos:line="16091" pos:column="60">ppBPRequest</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16092" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpointRequest(This,ppBPRequest) )</cpp:value></cpp:define> 

<cpp:define pos:line="16094" pos:column="1">#<cpp:directive pos:line="16094" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16094" pos:column="9">IDebugPendingBreakpoint3_Virtualize</name><parameter_list pos:line="16094" pos:column="44">(<param><type><name pos:line="16094" pos:column="45">This</name></type></param>,<param><type><name pos:line="16094" pos:column="50">fVirtualize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16095" pos:column="5">( (This)-&gt;lpVtbl -&gt; Virtualize(This,fVirtualize) )</cpp:value></cpp:define> 

<cpp:define pos:line="16097" pos:column="1">#<cpp:directive pos:line="16097" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16097" pos:column="9">IDebugPendingBreakpoint3_Enable</name><parameter_list pos:line="16097" pos:column="40">(<param><type><name pos:line="16097" pos:column="41">This</name></type></param>,<param><type><name pos:line="16097" pos:column="46">fEnable</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16098" pos:column="5">( (This)-&gt;lpVtbl -&gt; Enable(This,fEnable) )</cpp:value></cpp:define> 

<cpp:define pos:line="16100" pos:column="1">#<cpp:directive pos:line="16100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16100" pos:column="9">IDebugPendingBreakpoint3_SetCondition</name><parameter_list pos:line="16100" pos:column="46">(<param><type><name pos:line="16100" pos:column="47">This</name></type></param>,<param><type><name pos:line="16100" pos:column="52">bpCondition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16101" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCondition(This,bpCondition) )</cpp:value></cpp:define> 

<cpp:define pos:line="16103" pos:column="1">#<cpp:directive pos:line="16103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16103" pos:column="9">IDebugPendingBreakpoint3_SetPassCount</name><parameter_list pos:line="16103" pos:column="46">(<param><type><name pos:line="16103" pos:column="47">This</name></type></param>,<param><type><name pos:line="16103" pos:column="52">bpPassCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16104" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetPassCount(This,bpPassCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="16106" pos:column="1">#<cpp:directive pos:line="16106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16106" pos:column="9">IDebugPendingBreakpoint3_EnumBoundBreakpoints</name><parameter_list pos:line="16106" pos:column="54">(<param><type><name pos:line="16106" pos:column="55">This</name></type></param>,<param><type><name pos:line="16106" pos:column="60">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16107" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumBoundBreakpoints(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="16109" pos:column="1">#<cpp:directive pos:line="16109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16109" pos:column="9">IDebugPendingBreakpoint3_EnumErrorBreakpoints</name><parameter_list pos:line="16109" pos:column="54">(<param><type><name pos:line="16109" pos:column="55">This</name></type></param>,<param><type><name pos:line="16109" pos:column="60">bpErrorType</name></type></param>,<param><type><name pos:line="16109" pos:column="72">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16110" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumErrorBreakpoints(This,bpErrorType,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="16112" pos:column="1">#<cpp:directive pos:line="16112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16112" pos:column="9">IDebugPendingBreakpoint3_Delete</name><parameter_list pos:line="16112" pos:column="40">(<param><type><name pos:line="16112" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16113" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16116" pos:column="1">#<cpp:directive pos:line="16116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16116" pos:column="9">IDebugPendingBreakpoint3_GetErrorResolutionInfo</name><parameter_list pos:line="16116" pos:column="56">(<param><type><name pos:line="16116" pos:column="57">This</name></type></param>,<param><type><name pos:line="16116" pos:column="62">dwFields</name></type></param>,<param><type><name pos:line="16116" pos:column="71">pErrorResolutionInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16117" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetErrorResolutionInfo(This,dwFields,pErrorResolutionInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16119" pos:column="1">#<cpp:directive pos:line="16119" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16119" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16122" pos:column="1">#<cpp:directive pos:line="16122" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16122" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16127" pos:column="1">#<cpp:directive pos:line="16127" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16127" pos:column="9">/* __IDebugPendingBreakpoint3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16130" pos:column="1">#<cpp:directive pos:line="16130" pos:column="2">ifndef</cpp:directive> <name pos:line="16130" pos:column="9">__IDebugErrorBreakpoint2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16131" pos:column="1">#<cpp:directive pos:line="16131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16131" pos:column="9">__IDebugErrorBreakpoint2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16133" pos:column="1">/* interface IDebugErrorBreakpoint2 */</comment>
<comment type="block" pos:line="16134" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="16137" pos:column="1">EXTERN_C</name> <specifier pos:line="16137" pos:column="10">const</specifier> <name pos:line="16137" pos:column="16">IID</name></type> <name pos:line="16137" pos:column="20">IID_IDebugErrorBreakpoint2</name></decl>;</decl_stmt>

<cpp:if pos:line="16139" pos:column="1">#<cpp:directive pos:line="16139" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16139" pos:column="5">defined</name><argument_list pos:line="16139" pos:column="12">(<argument><expr><name pos:line="16139" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16139" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16139" pos:column="29">!</op:operator><call><name pos:line="16139" pos:column="30">defined</name><argument_list pos:line="16139" pos:column="37">(<argument><expr><name pos:line="16139" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16141" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16141" pos:column="19">(<argument pos:line="16141" pos:column="20">"74570ef7-2486-4089-800c-56e3829b5ca4"</argument>)</argument_list></macro>
    <label><name pos:line="16142" pos:column="5">IDebugErrorBreakpoint2</name> :</label> <expr_stmt><expr pos:line="16142" pos:column="30">public <name pos:line="16142" pos:column="37">IUnknown</name>
    <block pos:line="16143" pos:column="5">{
    <expr pos:line="16144" pos:column="5">public<op:operator pos:line="16144" pos:column="11">:</op:operator>
        virtual <name pos:line="16145" pos:column="17">HRESULT</name> <name pos:line="16145" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16145" pos:column="43">GetPendingBreakpoint</name><argument_list pos:line="16145" pos:column="63">( 
            <comment type="block" pos:line="16146" pos:column="13">/* [out] */</comment> <argument pos:line="16146" pos:column="25">__RPC__deref_out_opt IDebugPendingBreakpoint2 **ppPendingBreakpoint</argument>)</argument_list></macro> <op:operator pos:line="16146" pos:column="94">=</op:operator> <lit:literal type="number" pos:line="16146" pos:column="96">0</lit:literal></expr>;
        
        <expr pos:line="16148" pos:column="9">virtual <name pos:line="16148" pos:column="17">HRESULT</name> <name pos:line="16148" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16148" pos:column="43">GetBreakpointResolution</name><argument_list pos:line="16148" pos:column="66">( 
            <comment type="block" pos:line="16149" pos:column="13">/* [out] */</comment> <argument pos:line="16149" pos:column="25">__RPC__deref_out_opt IDebugErrorBreakpointResolution2 **ppErrorResolution</argument>)</argument_list></macro> <op:operator pos:line="16149" pos:column="100">=</op:operator> <lit:literal type="number" pos:line="16149" pos:column="102">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16153" pos:column="1">#<cpp:directive pos:line="16153" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16153" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16155" pos:column="5">typedef <type><struct pos:line="16155" pos:column="13">struct <name pos:line="16155" pos:column="20">IDebugErrorBreakpoint2Vtbl</name>
    <block pos:line="16156" pos:column="5">{<public type="default" pos:line="16156" pos:column="6">
        <function_decl><type><name pos:line="16157" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16159" pos:column="9">HRESULT</name></type> ( <name pos:line="16159" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16159" pos:column="37">*</type:modifier><name pos:line="16159" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16159" pos:column="54">( 
            <param><decl><type><name pos:line="16160" pos:column="13">IDebugErrorBreakpoint2</name> <type:modifier pos:line="16160" pos:column="36">*</type:modifier></type> <name pos:line="16160" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="16161" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16161" pos:column="24">__RPC__in</name> <name pos:line="16161" pos:column="34">REFIID</name></type> <name pos:line="16161" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16162" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16163" pos:column="13">__RPC__deref_out</name>  <name pos:line="16163" pos:column="31">void</name> <type:modifier pos:line="16163" pos:column="36">*</type:modifier><type:modifier pos:line="16163" pos:column="37">*</type:modifier></type><name pos:line="16163" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16165" pos:column="9">ULONG</name></type> ( <name pos:line="16165" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16165" pos:column="35">*</type:modifier><name pos:line="16165" pos:column="36">AddRef</name> )<parameter_list pos:line="16165" pos:column="44">( 
            <param><decl><type><name pos:line="16166" pos:column="13">IDebugErrorBreakpoint2</name> <type:modifier pos:line="16166" pos:column="36">*</type:modifier></type> <name pos:line="16166" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16168" pos:column="9">ULONG</name></type> ( <name pos:line="16168" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16168" pos:column="35">*</type:modifier><name pos:line="16168" pos:column="36">Release</name> )<parameter_list pos:line="16168" pos:column="45">( 
            <param><decl><type><name pos:line="16169" pos:column="13">IDebugErrorBreakpoint2</name> <type:modifier pos:line="16169" pos:column="36">*</type:modifier></type> <name pos:line="16169" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16171" pos:column="9">HRESULT</name></type> ( <name pos:line="16171" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16171" pos:column="37">*</type:modifier><name pos:line="16171" pos:column="38">GetPendingBreakpoint</name> )<parameter_list pos:line="16171" pos:column="60">( 
            <param><decl><type><name pos:line="16172" pos:column="13">IDebugErrorBreakpoint2</name> <type:modifier pos:line="16172" pos:column="36">*</type:modifier></type> <name pos:line="16172" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="16173" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16173" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16173" pos:column="46">IDebugPendingBreakpoint2</name> <type:modifier pos:line="16173" pos:column="71">*</type:modifier><type:modifier pos:line="16173" pos:column="72">*</type:modifier></type><name pos:line="16173" pos:column="73">ppPendingBreakpoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16175" pos:column="9">HRESULT</name></type> ( <name pos:line="16175" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16175" pos:column="37">*</type:modifier><name pos:line="16175" pos:column="38">GetBreakpointResolution</name> )<parameter_list pos:line="16175" pos:column="63">( 
            <param><decl><type><name pos:line="16176" pos:column="13">IDebugErrorBreakpoint2</name> <type:modifier pos:line="16176" pos:column="36">*</type:modifier></type> <name pos:line="16176" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="16177" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16177" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16177" pos:column="46">IDebugErrorBreakpointResolution2</name> <type:modifier pos:line="16177" pos:column="79">*</type:modifier><type:modifier pos:line="16177" pos:column="80">*</type:modifier></type><name pos:line="16177" pos:column="81">ppErrorResolution</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16179" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16180" pos:column="7">IDebugErrorBreakpoint2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16182" pos:column="5">interface</name></type> <name pos:line="16182" pos:column="15">IDebugErrorBreakpoint2</name>
    <argument_list pos:line="16183" pos:column="5">{
        <argument><expr><name pos:line="16184" pos:column="9">CONST_VTBL</name> struct <name pos:line="16184" pos:column="27">IDebugErrorBreakpoint2Vtbl</name> <op:operator pos:line="16184" pos:column="54">*</op:operator><name pos:line="16184" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16189" pos:column="1">#<cpp:directive pos:line="16189" pos:column="2">ifdef</cpp:directive> <name pos:line="16189" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16192" pos:column="1">#<cpp:directive pos:line="16192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16192" pos:column="9">IDebugErrorBreakpoint2_QueryInterface</name><parameter_list pos:line="16192" pos:column="46">(<param><type><name pos:line="16192" pos:column="47">This</name></type></param>,<param><type><name pos:line="16192" pos:column="52">riid</name></type></param>,<param><type><name pos:line="16192" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16193" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16195" pos:column="1">#<cpp:directive pos:line="16195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16195" pos:column="9">IDebugErrorBreakpoint2_AddRef</name><parameter_list pos:line="16195" pos:column="38">(<param><type><name pos:line="16195" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16196" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16198" pos:column="1">#<cpp:directive pos:line="16198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16198" pos:column="9">IDebugErrorBreakpoint2_Release</name><parameter_list pos:line="16198" pos:column="39">(<param><type><name pos:line="16198" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16199" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16202" pos:column="1">#<cpp:directive pos:line="16202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16202" pos:column="9">IDebugErrorBreakpoint2_GetPendingBreakpoint</name><parameter_list pos:line="16202" pos:column="52">(<param><type><name pos:line="16202" pos:column="53">This</name></type></param>,<param><type><name pos:line="16202" pos:column="58">ppPendingBreakpoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16203" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPendingBreakpoint(This,ppPendingBreakpoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="16205" pos:column="1">#<cpp:directive pos:line="16205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16205" pos:column="9">IDebugErrorBreakpoint2_GetBreakpointResolution</name><parameter_list pos:line="16205" pos:column="55">(<param><type><name pos:line="16205" pos:column="56">This</name></type></param>,<param><type><name pos:line="16205" pos:column="61">ppErrorResolution</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16206" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBreakpointResolution(This,ppErrorResolution) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16208" pos:column="1">#<cpp:directive pos:line="16208" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16208" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16211" pos:column="1">#<cpp:directive pos:line="16211" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16211" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16216" pos:column="1">#<cpp:directive pos:line="16216" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16216" pos:column="9">/* __IDebugErrorBreakpoint2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16219" pos:column="1">#<cpp:directive pos:line="16219" pos:column="2">ifndef</cpp:directive> <name pos:line="16219" pos:column="9">__IDebugExpression2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16220" pos:column="1">#<cpp:directive pos:line="16220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16220" pos:column="9">__IDebugExpression2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16222" pos:column="1">/* interface IDebugExpression2 */</comment>
<comment type="block" pos:line="16223" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="16226" pos:column="1">enum <name pos:line="16226" pos:column="6">enum_EVALFLAGS</name>
    <block pos:line="16227" pos:column="5">{	<decl><name pos:line="16227" pos:column="9">EVAL_RETURNVALUE</name>	<init pos:line="16227" pos:column="33">= <expr><lit:literal type="number" pos:line="16227" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="16227" pos:column="38">,</op:operator>
	<decl><name pos:line="16228" pos:column="9">EVAL_NOSIDEEFFECTS</name>	<init pos:line="16228" pos:column="33">= <expr><lit:literal type="number" pos:line="16228" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="16228" pos:column="38">,</op:operator>
	<decl><name pos:line="16229" pos:column="9">EVAL_ALLOWBPS</name>	<init pos:line="16229" pos:column="25">= <expr><lit:literal type="number" pos:line="16229" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="16229" pos:column="30">,</op:operator>
	<decl><name pos:line="16230" pos:column="9">EVAL_ALLOWERRORREPORT</name>	<init pos:line="16230" pos:column="33">= <expr><lit:literal type="number" pos:line="16230" pos:column="35">0x10</lit:literal></expr></init></decl><op:operator pos:line="16230" pos:column="39">,</op:operator>
	<decl><name pos:line="16231" pos:column="9">EVAL_FUNCTION_AS_ADDRESS</name>	<init pos:line="16231" pos:column="41">= <expr><lit:literal type="number" pos:line="16231" pos:column="43">0x40</lit:literal></expr></init></decl><op:operator pos:line="16231" pos:column="47">,</op:operator>
	<decl><name pos:line="16232" pos:column="9">EVAL_NOFUNCEVAL</name>	<init pos:line="16232" pos:column="25">= <expr><lit:literal type="number" pos:line="16232" pos:column="27">0x80</lit:literal></expr></init></decl><op:operator pos:line="16232" pos:column="31">,</op:operator>
	<decl><name pos:line="16233" pos:column="9">EVAL_NOEVENTS</name>	<init pos:line="16233" pos:column="25">= <expr><lit:literal type="number" pos:line="16233" pos:column="27">0x1000</lit:literal></expr></init></decl><op:operator pos:line="16233" pos:column="33">,</op:operator>
	<decl><name pos:line="16234" pos:column="9">EVAL_DESIGN_TIME_EXPR_EVAL</name>	<init pos:line="16234" pos:column="41">= <expr><lit:literal type="number" pos:line="16234" pos:column="43">0x2000</lit:literal></expr></init></decl><op:operator pos:line="16234" pos:column="49">,</op:operator>
	<decl><name pos:line="16235" pos:column="9">EVAL_ALLOW_IMPLICIT_VARS</name>	<init pos:line="16235" pos:column="41">= <expr><lit:literal type="number" pos:line="16235" pos:column="43">0x4000</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="16237" pos:column="1">typedef <type><name pos:line="16237" pos:column="9">DWORD</name></type> <name pos:line="16237" pos:column="15">EVALFLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="16240" pos:column="1">EXTERN_C</name> <specifier pos:line="16240" pos:column="10">const</specifier> <name pos:line="16240" pos:column="16">IID</name></type> <name pos:line="16240" pos:column="20">IID_IDebugExpression2</name></decl>;</decl_stmt>

<cpp:if pos:line="16242" pos:column="1">#<cpp:directive pos:line="16242" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16242" pos:column="5">defined</name><argument_list pos:line="16242" pos:column="12">(<argument><expr><name pos:line="16242" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16242" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16242" pos:column="29">!</op:operator><call><name pos:line="16242" pos:column="30">defined</name><argument_list pos:line="16242" pos:column="37">(<argument><expr><name pos:line="16242" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16244" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16244" pos:column="19">(<argument pos:line="16244" pos:column="20">"f7473fd0-7f75-478d-8d85-a485204e7a2d"</argument>)</argument_list></macro>
    <label><name pos:line="16245" pos:column="5">IDebugExpression2</name> :</label> <expr_stmt><expr pos:line="16245" pos:column="25">public <name pos:line="16245" pos:column="32">IUnknown</name>
    <block pos:line="16246" pos:column="5">{
    <expr pos:line="16247" pos:column="5">public<op:operator pos:line="16247" pos:column="11">:</op:operator>
        virtual <name pos:line="16248" pos:column="17">HRESULT</name> <name pos:line="16248" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16248" pos:column="43">EvaluateAsync</name><argument_list pos:line="16248" pos:column="56">( 
            <comment type="block" pos:line="16249" pos:column="13">/* [in] */</comment> <argument pos:line="16249" pos:column="24">EVALFLAGS dwFlags</argument>,
            <comment type="block" pos:line="16250" pos:column="13">/* [in] */</comment> <argument pos:line="16250" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pExprCallback</argument>)</argument_list></macro> <op:operator pos:line="16250" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="16250" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="16252" pos:column="9">virtual <name pos:line="16252" pos:column="17">HRESULT</name> <name pos:line="16252" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="16252" pos:column="43">Abort</name><argument_list pos:line="16252" pos:column="48">( <argument><expr><name pos:line="16252" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="16252" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="16252" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="16254" pos:column="9">virtual <name pos:line="16254" pos:column="17">HRESULT</name> <name pos:line="16254" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16254" pos:column="43">EvaluateSync</name><argument_list pos:line="16254" pos:column="55">( 
            <comment type="block" pos:line="16255" pos:column="13">/* [in] */</comment> <argument pos:line="16255" pos:column="24">EVALFLAGS dwFlags</argument>,
            <comment type="block" pos:line="16256" pos:column="13">/* [in] */</comment> <argument pos:line="16256" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="16257" pos:column="13">/* [in] */</comment> <argument pos:line="16257" pos:column="24">__RPC__in_opt IDebugEventCallback2 *pExprCallback</argument>,
            <comment type="block" pos:line="16258" pos:column="13">/* [out] */</comment> <argument pos:line="16258" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppResult</argument>)</argument_list></macro> <op:operator pos:line="16258" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="16258" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16262" pos:column="1">#<cpp:directive pos:line="16262" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16262" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16264" pos:column="5">typedef <type><struct pos:line="16264" pos:column="13">struct <name pos:line="16264" pos:column="20">IDebugExpression2Vtbl</name>
    <block pos:line="16265" pos:column="5">{<public type="default" pos:line="16265" pos:column="6">
        <function_decl><type><name pos:line="16266" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16268" pos:column="9">HRESULT</name></type> ( <name pos:line="16268" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16268" pos:column="37">*</type:modifier><name pos:line="16268" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16268" pos:column="54">( 
            <param><decl><type><name pos:line="16269" pos:column="13">IDebugExpression2</name> <type:modifier pos:line="16269" pos:column="31">*</type:modifier></type> <name pos:line="16269" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16270" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16270" pos:column="24">__RPC__in</name> <name pos:line="16270" pos:column="34">REFIID</name></type> <name pos:line="16270" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16271" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16272" pos:column="13">__RPC__deref_out</name>  <name pos:line="16272" pos:column="31">void</name> <type:modifier pos:line="16272" pos:column="36">*</type:modifier><type:modifier pos:line="16272" pos:column="37">*</type:modifier></type><name pos:line="16272" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16274" pos:column="9">ULONG</name></type> ( <name pos:line="16274" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16274" pos:column="35">*</type:modifier><name pos:line="16274" pos:column="36">AddRef</name> )<parameter_list pos:line="16274" pos:column="44">( 
            <param><decl><type><name pos:line="16275" pos:column="13">IDebugExpression2</name> <type:modifier pos:line="16275" pos:column="31">*</type:modifier></type> <name pos:line="16275" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16277" pos:column="9">ULONG</name></type> ( <name pos:line="16277" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16277" pos:column="35">*</type:modifier><name pos:line="16277" pos:column="36">Release</name> )<parameter_list pos:line="16277" pos:column="45">( 
            <param><decl><type><name pos:line="16278" pos:column="13">IDebugExpression2</name> <type:modifier pos:line="16278" pos:column="31">*</type:modifier></type> <name pos:line="16278" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16280" pos:column="9">HRESULT</name></type> ( <name pos:line="16280" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16280" pos:column="37">*</type:modifier><name pos:line="16280" pos:column="38">EvaluateAsync</name> )<parameter_list pos:line="16280" pos:column="53">( 
            <param><decl><type><name pos:line="16281" pos:column="13">IDebugExpression2</name> <type:modifier pos:line="16281" pos:column="31">*</type:modifier></type> <name pos:line="16281" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16282" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16282" pos:column="24">EVALFLAGS</name></type> <name pos:line="16282" pos:column="34">dwFlags</name></decl></param>,
            <comment type="block" pos:line="16283" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16283" pos:column="24">__RPC__in_opt</name> <name pos:line="16283" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="16283" pos:column="59">*</type:modifier></type><name pos:line="16283" pos:column="60">pExprCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16285" pos:column="9">HRESULT</name></type> ( <name pos:line="16285" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16285" pos:column="37">*</type:modifier><name pos:line="16285" pos:column="38">Abort</name> )<parameter_list pos:line="16285" pos:column="45">( 
            <param><decl><type><name pos:line="16286" pos:column="13">IDebugExpression2</name> <type:modifier pos:line="16286" pos:column="31">*</type:modifier></type> <name pos:line="16286" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16288" pos:column="9">HRESULT</name></type> ( <name pos:line="16288" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16288" pos:column="37">*</type:modifier><name pos:line="16288" pos:column="38">EvaluateSync</name> )<parameter_list pos:line="16288" pos:column="52">( 
            <param><decl><type><name pos:line="16289" pos:column="13">IDebugExpression2</name> <type:modifier pos:line="16289" pos:column="31">*</type:modifier></type> <name pos:line="16289" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16290" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16290" pos:column="24">EVALFLAGS</name></type> <name pos:line="16290" pos:column="34">dwFlags</name></decl></param>,
            <comment type="block" pos:line="16291" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16291" pos:column="24">DWORD</name></type> <name pos:line="16291" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="16292" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16292" pos:column="24">__RPC__in_opt</name> <name pos:line="16292" pos:column="38">IDebugEventCallback2</name> <type:modifier pos:line="16292" pos:column="59">*</type:modifier></type><name pos:line="16292" pos:column="60">pExprCallback</name></decl></param>,
            <comment type="block" pos:line="16293" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16293" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16293" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="16293" pos:column="62">*</type:modifier><type:modifier pos:line="16293" pos:column="63">*</type:modifier></type><name pos:line="16293" pos:column="64">ppResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16295" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16296" pos:column="7">IDebugExpression2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16298" pos:column="5">interface</name></type> <name pos:line="16298" pos:column="15">IDebugExpression2</name>
    <argument_list pos:line="16299" pos:column="5">{
        <argument><expr><name pos:line="16300" pos:column="9">CONST_VTBL</name> struct <name pos:line="16300" pos:column="27">IDebugExpression2Vtbl</name> <op:operator pos:line="16300" pos:column="49">*</op:operator><name pos:line="16300" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16305" pos:column="1">#<cpp:directive pos:line="16305" pos:column="2">ifdef</cpp:directive> <name pos:line="16305" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16308" pos:column="1">#<cpp:directive pos:line="16308" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16308" pos:column="9">IDebugExpression2_QueryInterface</name><parameter_list pos:line="16308" pos:column="41">(<param><type><name pos:line="16308" pos:column="42">This</name></type></param>,<param><type><name pos:line="16308" pos:column="47">riid</name></type></param>,<param><type><name pos:line="16308" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16309" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16311" pos:column="1">#<cpp:directive pos:line="16311" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16311" pos:column="9">IDebugExpression2_AddRef</name><parameter_list pos:line="16311" pos:column="33">(<param><type><name pos:line="16311" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16312" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16314" pos:column="1">#<cpp:directive pos:line="16314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16314" pos:column="9">IDebugExpression2_Release</name><parameter_list pos:line="16314" pos:column="34">(<param><type><name pos:line="16314" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16315" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16318" pos:column="1">#<cpp:directive pos:line="16318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16318" pos:column="9">IDebugExpression2_EvaluateAsync</name><parameter_list pos:line="16318" pos:column="40">(<param><type><name pos:line="16318" pos:column="41">This</name></type></param>,<param><type><name pos:line="16318" pos:column="46">dwFlags</name></type></param>,<param><type><name pos:line="16318" pos:column="54">pExprCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16319" pos:column="5">( (This)-&gt;lpVtbl -&gt; EvaluateAsync(This,dwFlags,pExprCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="16321" pos:column="1">#<cpp:directive pos:line="16321" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16321" pos:column="9">IDebugExpression2_Abort</name><parameter_list pos:line="16321" pos:column="32">(<param><type><name pos:line="16321" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16322" pos:column="5">( (This)-&gt;lpVtbl -&gt; Abort(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16324" pos:column="1">#<cpp:directive pos:line="16324" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16324" pos:column="9">IDebugExpression2_EvaluateSync</name><parameter_list pos:line="16324" pos:column="39">(<param><type><name pos:line="16324" pos:column="40">This</name></type></param>,<param><type><name pos:line="16324" pos:column="45">dwFlags</name></type></param>,<param><type><name pos:line="16324" pos:column="53">dwTimeout</name></type></param>,<param><type><name pos:line="16324" pos:column="63">pExprCallback</name></type></param>,<param><type><name pos:line="16324" pos:column="77">ppResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16325" pos:column="5">( (This)-&gt;lpVtbl -&gt; EvaluateSync(This,dwFlags,dwTimeout,pExprCallback,ppResult) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16327" pos:column="1">#<cpp:directive pos:line="16327" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16327" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16330" pos:column="1">#<cpp:directive pos:line="16330" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16330" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16335" pos:column="1">#<cpp:directive pos:line="16335" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16335" pos:column="9">/* __IDebugExpression2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16338" pos:column="1">#<cpp:directive pos:line="16338" pos:column="2">ifndef</cpp:directive> <name pos:line="16338" pos:column="9">__IDebugModule2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16339" pos:column="1">#<cpp:directive pos:line="16339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16339" pos:column="9">__IDebugModule2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16341" pos:column="1">/* interface IDebugModule2 */</comment>
<comment type="block" pos:line="16342" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="16345" pos:column="1">enum <name pos:line="16345" pos:column="6">enum_MODULE_FLAGS</name>
    <block pos:line="16346" pos:column="5">{	<decl><name pos:line="16346" pos:column="9">MODULE_FLAG_NONE</name>	<init pos:line="16346" pos:column="33">= <expr><lit:literal type="number" pos:line="16346" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="16346" pos:column="36">,</op:operator>
	<decl><name pos:line="16347" pos:column="9">MODULE_FLAG_SYSTEM</name>	<init pos:line="16347" pos:column="33">= <expr><lit:literal type="number" pos:line="16347" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="16347" pos:column="38">,</op:operator>
	<decl><name pos:line="16348" pos:column="9">MODULE_FLAG_SYMBOLS</name>	<init pos:line="16348" pos:column="33">= <expr><lit:literal type="number" pos:line="16348" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="16348" pos:column="38">,</op:operator>
	<decl><name pos:line="16349" pos:column="9">MODULE_FLAG_64BIT</name>	<init pos:line="16349" pos:column="33">= <expr><lit:literal type="number" pos:line="16349" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="16349" pos:column="38">,</op:operator>
	<decl><name pos:line="16350" pos:column="9">MODULE_FLAG_OPTIMIZED</name>	<init pos:line="16350" pos:column="33">= <expr><lit:literal type="number" pos:line="16350" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="16350" pos:column="38">,</op:operator>
	<decl><name pos:line="16351" pos:column="9">MODULE_FLAG_UNOPTIMIZED</name>	<init pos:line="16351" pos:column="33">= <expr><lit:literal type="number" pos:line="16351" pos:column="35">0x10</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="16353" pos:column="1">typedef <type><name pos:line="16353" pos:column="9">DWORD</name></type> <name pos:line="16353" pos:column="15">MODULE_FLAGS</name>;</typedef>


<enum pos:line="16356" pos:column="1">enum <name pos:line="16356" pos:column="6">enum_MODULE_INFO_FIELDS</name>
    <block pos:line="16357" pos:column="5">{	<decl><name pos:line="16357" pos:column="9">MIF_NONE</name>	<init pos:line="16357" pos:column="25">= <expr><lit:literal type="number" pos:line="16357" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="16357" pos:column="28">,</op:operator>
	<decl><name pos:line="16358" pos:column="9">MIF_NAME</name>	<init pos:line="16358" pos:column="25">= <expr><lit:literal type="number" pos:line="16358" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="16358" pos:column="30">,</op:operator>
	<decl><name pos:line="16359" pos:column="9">MIF_URL</name>	<init pos:line="16359" pos:column="17">= <expr><lit:literal type="number" pos:line="16359" pos:column="19">0x2</lit:literal></expr></init></decl><op:operator pos:line="16359" pos:column="22">,</op:operator>
	<decl><name pos:line="16360" pos:column="9">MIF_VERSION</name>	<init pos:line="16360" pos:column="25">= <expr><lit:literal type="number" pos:line="16360" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="16360" pos:column="30">,</op:operator>
	<decl><name pos:line="16361" pos:column="9">MIF_DEBUGMESSAGE</name>	<init pos:line="16361" pos:column="33">= <expr><lit:literal type="number" pos:line="16361" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="16361" pos:column="38">,</op:operator>
	<decl><name pos:line="16362" pos:column="9">MIF_LOADADDRESS</name>	<init pos:line="16362" pos:column="25">= <expr><lit:literal type="number" pos:line="16362" pos:column="27">0x10</lit:literal></expr></init></decl><op:operator pos:line="16362" pos:column="31">,</op:operator>
	<decl><name pos:line="16363" pos:column="9">MIF_PREFFEREDADDRESS</name>	<init pos:line="16363" pos:column="33">= <expr><lit:literal type="number" pos:line="16363" pos:column="35">0x20</lit:literal></expr></init></decl><op:operator pos:line="16363" pos:column="39">,</op:operator>
	<decl><name pos:line="16364" pos:column="9">MIF_SIZE</name>	<init pos:line="16364" pos:column="25">= <expr><lit:literal type="number" pos:line="16364" pos:column="27">0x40</lit:literal></expr></init></decl><op:operator pos:line="16364" pos:column="31">,</op:operator>
	<decl><name pos:line="16365" pos:column="9">MIF_LOADORDER</name>	<init pos:line="16365" pos:column="25">= <expr><lit:literal type="number" pos:line="16365" pos:column="27">0x80</lit:literal></expr></init></decl><op:operator pos:line="16365" pos:column="31">,</op:operator>
	<decl><name pos:line="16366" pos:column="9">MIF_TIMESTAMP</name>	<init pos:line="16366" pos:column="25">= <expr><lit:literal type="number" pos:line="16366" pos:column="27">0x100</lit:literal></expr></init></decl><op:operator pos:line="16366" pos:column="32">,</op:operator>
	<decl><name pos:line="16367" pos:column="9">MIF_URLSYMBOLLOCATION</name>	<init pos:line="16367" pos:column="33">= <expr><lit:literal type="number" pos:line="16367" pos:column="35">0x200</lit:literal></expr></init></decl><op:operator pos:line="16367" pos:column="40">,</op:operator>
	<decl><name pos:line="16368" pos:column="9">MIF_FLAGS</name>	<init pos:line="16368" pos:column="25">= <expr><lit:literal type="number" pos:line="16368" pos:column="27">0x400</lit:literal></expr></init></decl><op:operator pos:line="16368" pos:column="32">,</op:operator>
	<decl><name pos:line="16369" pos:column="9">MIF_ALLFIELDS</name>	<init pos:line="16369" pos:column="25">= <expr><lit:literal type="number" pos:line="16369" pos:column="27">0x7ff</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="16371" pos:column="1">typedef <type><name pos:line="16371" pos:column="9">DWORD</name></type> <name pos:line="16371" pos:column="15">MODULE_INFO_FIELDS</name>;</typedef>

<typedef pos:line="16373" pos:column="1">typedef <type><struct pos:line="16373" pos:column="9">struct <name pos:line="16373" pos:column="16">_tagMODULE_INFO</name>
    <block pos:line="16374" pos:column="5">{<public type="default" pos:line="16374" pos:column="6">
    <decl_stmt><decl><type><name pos:line="16375" pos:column="5">MODULE_INFO_FIELDS</name></type> <name pos:line="16375" pos:column="24">dwValidFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16376" pos:column="5">BSTR</name></type> <name pos:line="16376" pos:column="10">m_bstrName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16377" pos:column="5">BSTR</name></type> <name pos:line="16377" pos:column="10">m_bstrUrl</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16378" pos:column="5">BSTR</name></type> <name pos:line="16378" pos:column="10">m_bstrVersion</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16379" pos:column="5">BSTR</name></type> <name pos:line="16379" pos:column="10">m_bstrDebugMessage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16380" pos:column="5">UINT64</name></type> <name pos:line="16380" pos:column="12">m_addrLoadAddress</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16381" pos:column="5">UINT64</name></type> <name pos:line="16381" pos:column="12">m_addrPreferredLoadAddress</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16382" pos:column="5">DWORD</name></type> <name pos:line="16382" pos:column="11">m_dwSize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16383" pos:column="5">DWORD</name></type> <name pos:line="16383" pos:column="11">m_dwLoadOrder</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16384" pos:column="5">FILETIME</name></type> <name pos:line="16384" pos:column="14">m_TimeStamp</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16385" pos:column="5">BSTR</name></type> <name pos:line="16385" pos:column="10">m_bstrUrlSymbolLocation</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16386" pos:column="5">MODULE_FLAGS</name></type> <name pos:line="16386" pos:column="18">m_dwModuleFlags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="16387" pos:column="9">MODULE_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="16390" pos:column="1">EXTERN_C</name> <specifier pos:line="16390" pos:column="10">const</specifier> <name pos:line="16390" pos:column="16">IID</name></type> <name pos:line="16390" pos:column="20">IID_IDebugModule2</name></decl>;</decl_stmt>

<cpp:if pos:line="16392" pos:column="1">#<cpp:directive pos:line="16392" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16392" pos:column="5">defined</name><argument_list pos:line="16392" pos:column="12">(<argument><expr><name pos:line="16392" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16392" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16392" pos:column="29">!</op:operator><call><name pos:line="16392" pos:column="30">defined</name><argument_list pos:line="16392" pos:column="37">(<argument><expr><name pos:line="16392" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16394" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16394" pos:column="19">(<argument pos:line="16394" pos:column="20">"0fc1cd9a-b912-405c-a04c-43ce02cd7df2"</argument>)</argument_list></macro>
    <label><name pos:line="16395" pos:column="5">IDebugModule2</name> :</label> <expr_stmt><expr pos:line="16395" pos:column="21">public <name pos:line="16395" pos:column="28">IUnknown</name>
    <block pos:line="16396" pos:column="5">{
    <expr pos:line="16397" pos:column="5">public<op:operator pos:line="16397" pos:column="11">:</op:operator>
        virtual <name pos:line="16398" pos:column="17">HRESULT</name> <name pos:line="16398" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16398" pos:column="43">GetInfo</name><argument_list pos:line="16398" pos:column="50">( 
            <comment type="block" pos:line="16399" pos:column="13">/* [in] */</comment> <argument pos:line="16399" pos:column="24">MODULE_INFO_FIELDS dwFields</argument>,
            <comment type="block" pos:line="16400" pos:column="13">/* [out] */</comment> <argument pos:line="16400" pos:column="25">__RPC__out MODULE_INFO *pInfo</argument>)</argument_list></macro> <op:operator pos:line="16400" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="16400" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="16402" pos:column="9">virtual <name pos:line="16402" pos:column="17">HRESULT</name> <name pos:line="16402" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16402" pos:column="43">ReloadSymbols_Deprecated</name><argument_list pos:line="16402" pos:column="67">( 
            <comment type="block" pos:line="16403" pos:column="13">/* [full][in] */</comment> <argument pos:line="16403" pos:column="30">__RPC__in_opt LPCOLESTR pszUrlToSymbols</argument>,
            <comment type="block" pos:line="16404" pos:column="13">/* [out] */</comment> <argument pos:line="16404" pos:column="25">__RPC__deref_out_opt BSTR *pbstrDebugMessage</argument>)</argument_list></macro> <op:operator pos:line="16404" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="16404" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16408" pos:column="1">#<cpp:directive pos:line="16408" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16408" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16410" pos:column="5">typedef <type><struct pos:line="16410" pos:column="13">struct <name pos:line="16410" pos:column="20">IDebugModule2Vtbl</name>
    <block pos:line="16411" pos:column="5">{<public type="default" pos:line="16411" pos:column="6">
        <function_decl><type><name pos:line="16412" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16414" pos:column="9">HRESULT</name></type> ( <name pos:line="16414" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16414" pos:column="37">*</type:modifier><name pos:line="16414" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16414" pos:column="54">( 
            <param><decl><type><name pos:line="16415" pos:column="13">IDebugModule2</name> <type:modifier pos:line="16415" pos:column="27">*</type:modifier></type> <name pos:line="16415" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16416" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16416" pos:column="24">__RPC__in</name> <name pos:line="16416" pos:column="34">REFIID</name></type> <name pos:line="16416" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16417" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16418" pos:column="13">__RPC__deref_out</name>  <name pos:line="16418" pos:column="31">void</name> <type:modifier pos:line="16418" pos:column="36">*</type:modifier><type:modifier pos:line="16418" pos:column="37">*</type:modifier></type><name pos:line="16418" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16420" pos:column="9">ULONG</name></type> ( <name pos:line="16420" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16420" pos:column="35">*</type:modifier><name pos:line="16420" pos:column="36">AddRef</name> )<parameter_list pos:line="16420" pos:column="44">( 
            <param><decl><type><name pos:line="16421" pos:column="13">IDebugModule2</name> <type:modifier pos:line="16421" pos:column="27">*</type:modifier></type> <name pos:line="16421" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16423" pos:column="9">ULONG</name></type> ( <name pos:line="16423" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16423" pos:column="35">*</type:modifier><name pos:line="16423" pos:column="36">Release</name> )<parameter_list pos:line="16423" pos:column="45">( 
            <param><decl><type><name pos:line="16424" pos:column="13">IDebugModule2</name> <type:modifier pos:line="16424" pos:column="27">*</type:modifier></type> <name pos:line="16424" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16426" pos:column="9">HRESULT</name></type> ( <name pos:line="16426" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16426" pos:column="37">*</type:modifier><name pos:line="16426" pos:column="38">GetInfo</name> )<parameter_list pos:line="16426" pos:column="47">( 
            <param><decl><type><name pos:line="16427" pos:column="13">IDebugModule2</name> <type:modifier pos:line="16427" pos:column="27">*</type:modifier></type> <name pos:line="16427" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16428" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16428" pos:column="24">MODULE_INFO_FIELDS</name></type> <name pos:line="16428" pos:column="43">dwFields</name></decl></param>,
            <comment type="block" pos:line="16429" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16429" pos:column="25">__RPC__out</name> <name pos:line="16429" pos:column="36">MODULE_INFO</name> <type:modifier pos:line="16429" pos:column="48">*</type:modifier></type><name pos:line="16429" pos:column="49">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16431" pos:column="9">HRESULT</name></type> ( <name pos:line="16431" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16431" pos:column="37">*</type:modifier><name pos:line="16431" pos:column="38">ReloadSymbols_Deprecated</name> )<parameter_list pos:line="16431" pos:column="64">( 
            <param><decl><type><name pos:line="16432" pos:column="13">IDebugModule2</name> <type:modifier pos:line="16432" pos:column="27">*</type:modifier></type> <name pos:line="16432" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16433" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="16433" pos:column="30">__RPC__in_opt</name> <name pos:line="16433" pos:column="44">LPCOLESTR</name></type> <name pos:line="16433" pos:column="54">pszUrlToSymbols</name></decl></param>,
            <comment type="block" pos:line="16434" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16434" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16434" pos:column="46">BSTR</name> <type:modifier pos:line="16434" pos:column="51">*</type:modifier></type><name pos:line="16434" pos:column="52">pbstrDebugMessage</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16436" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16437" pos:column="7">IDebugModule2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16439" pos:column="5">interface</name></type> <name pos:line="16439" pos:column="15">IDebugModule2</name>
    <argument_list pos:line="16440" pos:column="5">{
        <argument><expr><name pos:line="16441" pos:column="9">CONST_VTBL</name> struct <name pos:line="16441" pos:column="27">IDebugModule2Vtbl</name> <op:operator pos:line="16441" pos:column="45">*</op:operator><name pos:line="16441" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16446" pos:column="1">#<cpp:directive pos:line="16446" pos:column="2">ifdef</cpp:directive> <name pos:line="16446" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16449" pos:column="1">#<cpp:directive pos:line="16449" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16449" pos:column="9">IDebugModule2_QueryInterface</name><parameter_list pos:line="16449" pos:column="37">(<param><type><name pos:line="16449" pos:column="38">This</name></type></param>,<param><type><name pos:line="16449" pos:column="43">riid</name></type></param>,<param><type><name pos:line="16449" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16450" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16452" pos:column="1">#<cpp:directive pos:line="16452" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16452" pos:column="9">IDebugModule2_AddRef</name><parameter_list pos:line="16452" pos:column="29">(<param><type><name pos:line="16452" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16453" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16455" pos:column="1">#<cpp:directive pos:line="16455" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16455" pos:column="9">IDebugModule2_Release</name><parameter_list pos:line="16455" pos:column="30">(<param><type><name pos:line="16455" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16456" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16459" pos:column="1">#<cpp:directive pos:line="16459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16459" pos:column="9">IDebugModule2_GetInfo</name><parameter_list pos:line="16459" pos:column="30">(<param><type><name pos:line="16459" pos:column="31">This</name></type></param>,<param><type><name pos:line="16459" pos:column="36">dwFields</name></type></param>,<param><type><name pos:line="16459" pos:column="45">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16460" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16462" pos:column="1">#<cpp:directive pos:line="16462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16462" pos:column="9">IDebugModule2_ReloadSymbols_Deprecated</name><parameter_list pos:line="16462" pos:column="47">(<param><type><name pos:line="16462" pos:column="48">This</name></type></param>,<param><type><name pos:line="16462" pos:column="53">pszUrlToSymbols</name></type></param>,<param><type><name pos:line="16462" pos:column="69">pbstrDebugMessage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16463" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReloadSymbols_Deprecated(This,pszUrlToSymbols,pbstrDebugMessage) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16465" pos:column="1">#<cpp:directive pos:line="16465" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16465" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16468" pos:column="1">#<cpp:directive pos:line="16468" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16468" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16473" pos:column="1">#<cpp:directive pos:line="16473" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16473" pos:column="9">/* __IDebugModule2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16476" pos:column="1">#<cpp:directive pos:line="16476" pos:column="2">ifndef</cpp:directive> <name pos:line="16476" pos:column="9">__IDebugModule3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16477" pos:column="1">#<cpp:directive pos:line="16477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16477" pos:column="9">__IDebugModule3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16479" pos:column="1">/* interface IDebugModule3 */</comment>
<comment type="block" pos:line="16480" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="16483" pos:column="1">enum <name pos:line="16483" pos:column="6">enum_SYMBOL_SEARCH_INFO_FIELDS</name>
    <block pos:line="16484" pos:column="5">{	<decl><name pos:line="16484" pos:column="9">SSIF_NONE</name>	<init pos:line="16484" pos:column="25">= <expr><lit:literal type="number" pos:line="16484" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="16484" pos:column="28">,</op:operator>
	<decl><name pos:line="16485" pos:column="9">SSIF_VERBOSE_SEARCH_INFO</name>	<init pos:line="16485" pos:column="41">= <expr><lit:literal type="number" pos:line="16485" pos:column="43">0x1</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="16487" pos:column="1">typedef <type><name pos:line="16487" pos:column="9">DWORD</name></type> <name pos:line="16487" pos:column="15">SYMBOL_SEARCH_INFO_FIELDS</name>;</typedef>

<typedef pos:line="16489" pos:column="1">typedef <type><struct pos:line="16489" pos:column="9">struct <name pos:line="16489" pos:column="16">_tagSYMBOL_SEARCH_INFO</name>
    <block pos:line="16490" pos:column="5">{<public type="default" pos:line="16490" pos:column="6">
    <decl_stmt><decl><type><name pos:line="16491" pos:column="5">SYMBOL_SEARCH_INFO_FIELDS</name></type> <name pos:line="16491" pos:column="31">dwValidFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="16492" pos:column="5">BSTR</name></type> <name pos:line="16492" pos:column="10">bstrVerboseSearchInfo</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="16493" pos:column="9">MODULE_SYMBOL_SEARCH_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="16496" pos:column="1">EXTERN_C</name> <specifier pos:line="16496" pos:column="10">const</specifier> <name pos:line="16496" pos:column="16">IID</name></type> <name pos:line="16496" pos:column="20">IID_IDebugModule3</name></decl>;</decl_stmt>

<cpp:if pos:line="16498" pos:column="1">#<cpp:directive pos:line="16498" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16498" pos:column="5">defined</name><argument_list pos:line="16498" pos:column="12">(<argument><expr><name pos:line="16498" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16498" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16498" pos:column="29">!</op:operator><call><name pos:line="16498" pos:column="30">defined</name><argument_list pos:line="16498" pos:column="37">(<argument><expr><name pos:line="16498" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16500" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16500" pos:column="19">(<argument pos:line="16500" pos:column="20">"245F9D6A-E550-404d-82F1-FDB68281607A"</argument>)</argument_list></macro>
    <label><name pos:line="16501" pos:column="5">IDebugModule3</name> :</label> <expr_stmt><expr pos:line="16501" pos:column="21">public <name pos:line="16501" pos:column="28">IDebugModule2</name>
    <block pos:line="16502" pos:column="5">{
    <expr pos:line="16503" pos:column="5">public<op:operator pos:line="16503" pos:column="11">:</op:operator>
        virtual <name pos:line="16504" pos:column="17">HRESULT</name> <name pos:line="16504" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16504" pos:column="43">GetSymbolInfo</name><argument_list pos:line="16504" pos:column="56">( 
            <comment type="block" pos:line="16505" pos:column="13">/* [in] */</comment> <argument pos:line="16505" pos:column="24">SYMBOL_SEARCH_INFO_FIELDS dwFields</argument>,
            <comment type="block" pos:line="16506" pos:column="13">/* [out] */</comment> <argument pos:line="16506" pos:column="25">__RPC__out MODULE_SYMBOL_SEARCH_INFO *pInfo</argument>)</argument_list></macro> <op:operator pos:line="16506" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="16506" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="16508" pos:column="9">virtual <name pos:line="16508" pos:column="17">HRESULT</name> <name pos:line="16508" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="16508" pos:column="43">LoadSymbols</name><argument_list pos:line="16508" pos:column="54">( <argument><expr><name pos:line="16508" pos:column="56">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="16508" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="16508" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="16510" pos:column="9">virtual <name pos:line="16510" pos:column="17">HRESULT</name> <name pos:line="16510" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16510" pos:column="43">IsUserCode</name><argument_list pos:line="16510" pos:column="53">( 
            <comment type="block" pos:line="16511" pos:column="13">/* [out] */</comment> <argument pos:line="16511" pos:column="25">__RPC__out BOOL *pfUser</argument>)</argument_list></macro> <op:operator pos:line="16511" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="16511" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="16513" pos:column="9">virtual <name pos:line="16513" pos:column="17">HRESULT</name> <name pos:line="16513" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16513" pos:column="43">SetJustMyCodeState</name><argument_list pos:line="16513" pos:column="61">( 
            <comment type="block" pos:line="16514" pos:column="13">/* [in] */</comment> <argument pos:line="16514" pos:column="24">BOOL fIsUserCode</argument>)</argument_list></macro> <op:operator pos:line="16514" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="16514" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16518" pos:column="1">#<cpp:directive pos:line="16518" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16518" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16520" pos:column="5">typedef <type><struct pos:line="16520" pos:column="13">struct <name pos:line="16520" pos:column="20">IDebugModule3Vtbl</name>
    <block pos:line="16521" pos:column="5">{<public type="default" pos:line="16521" pos:column="6">
        <function_decl><type><name pos:line="16522" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16524" pos:column="9">HRESULT</name></type> ( <name pos:line="16524" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16524" pos:column="37">*</type:modifier><name pos:line="16524" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16524" pos:column="54">( 
            <param><decl><type><name pos:line="16525" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16525" pos:column="27">*</type:modifier></type> <name pos:line="16525" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16526" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16526" pos:column="24">__RPC__in</name> <name pos:line="16526" pos:column="34">REFIID</name></type> <name pos:line="16526" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16527" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16528" pos:column="13">__RPC__deref_out</name>  <name pos:line="16528" pos:column="31">void</name> <type:modifier pos:line="16528" pos:column="36">*</type:modifier><type:modifier pos:line="16528" pos:column="37">*</type:modifier></type><name pos:line="16528" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16530" pos:column="9">ULONG</name></type> ( <name pos:line="16530" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16530" pos:column="35">*</type:modifier><name pos:line="16530" pos:column="36">AddRef</name> )<parameter_list pos:line="16530" pos:column="44">( 
            <param><decl><type><name pos:line="16531" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16531" pos:column="27">*</type:modifier></type> <name pos:line="16531" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16533" pos:column="9">ULONG</name></type> ( <name pos:line="16533" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16533" pos:column="35">*</type:modifier><name pos:line="16533" pos:column="36">Release</name> )<parameter_list pos:line="16533" pos:column="45">( 
            <param><decl><type><name pos:line="16534" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16534" pos:column="27">*</type:modifier></type> <name pos:line="16534" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16536" pos:column="9">HRESULT</name></type> ( <name pos:line="16536" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16536" pos:column="37">*</type:modifier><name pos:line="16536" pos:column="38">GetInfo</name> )<parameter_list pos:line="16536" pos:column="47">( 
            <param><decl><type><name pos:line="16537" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16537" pos:column="27">*</type:modifier></type> <name pos:line="16537" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16538" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16538" pos:column="24">MODULE_INFO_FIELDS</name></type> <name pos:line="16538" pos:column="43">dwFields</name></decl></param>,
            <comment type="block" pos:line="16539" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16539" pos:column="25">__RPC__out</name> <name pos:line="16539" pos:column="36">MODULE_INFO</name> <type:modifier pos:line="16539" pos:column="48">*</type:modifier></type><name pos:line="16539" pos:column="49">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16541" pos:column="9">HRESULT</name></type> ( <name pos:line="16541" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16541" pos:column="37">*</type:modifier><name pos:line="16541" pos:column="38">ReloadSymbols_Deprecated</name> )<parameter_list pos:line="16541" pos:column="64">( 
            <param><decl><type><name pos:line="16542" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16542" pos:column="27">*</type:modifier></type> <name pos:line="16542" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16543" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="16543" pos:column="30">__RPC__in_opt</name> <name pos:line="16543" pos:column="44">LPCOLESTR</name></type> <name pos:line="16543" pos:column="54">pszUrlToSymbols</name></decl></param>,
            <comment type="block" pos:line="16544" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16544" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16544" pos:column="46">BSTR</name> <type:modifier pos:line="16544" pos:column="51">*</type:modifier></type><name pos:line="16544" pos:column="52">pbstrDebugMessage</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16546" pos:column="9">HRESULT</name></type> ( <name pos:line="16546" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16546" pos:column="37">*</type:modifier><name pos:line="16546" pos:column="38">GetSymbolInfo</name> )<parameter_list pos:line="16546" pos:column="53">( 
            <param><decl><type><name pos:line="16547" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16547" pos:column="27">*</type:modifier></type> <name pos:line="16547" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16548" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16548" pos:column="24">SYMBOL_SEARCH_INFO_FIELDS</name></type> <name pos:line="16548" pos:column="50">dwFields</name></decl></param>,
            <comment type="block" pos:line="16549" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16549" pos:column="25">__RPC__out</name> <name pos:line="16549" pos:column="36">MODULE_SYMBOL_SEARCH_INFO</name> <type:modifier pos:line="16549" pos:column="62">*</type:modifier></type><name pos:line="16549" pos:column="63">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16551" pos:column="9">HRESULT</name></type> ( <name pos:line="16551" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16551" pos:column="37">*</type:modifier><name pos:line="16551" pos:column="38">LoadSymbols</name> )<parameter_list pos:line="16551" pos:column="51">( 
            <param><decl><type><name pos:line="16552" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16552" pos:column="27">*</type:modifier></type> <name pos:line="16552" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16554" pos:column="9">HRESULT</name></type> ( <name pos:line="16554" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16554" pos:column="37">*</type:modifier><name pos:line="16554" pos:column="38">IsUserCode</name> )<parameter_list pos:line="16554" pos:column="50">( 
            <param><decl><type><name pos:line="16555" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16555" pos:column="27">*</type:modifier></type> <name pos:line="16555" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16556" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16556" pos:column="25">__RPC__out</name> <name pos:line="16556" pos:column="36">BOOL</name> <type:modifier pos:line="16556" pos:column="41">*</type:modifier></type><name pos:line="16556" pos:column="42">pfUser</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16558" pos:column="9">HRESULT</name></type> ( <name pos:line="16558" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16558" pos:column="37">*</type:modifier><name pos:line="16558" pos:column="38">SetJustMyCodeState</name> )<parameter_list pos:line="16558" pos:column="58">( 
            <param><decl><type><name pos:line="16559" pos:column="13">IDebugModule3</name> <type:modifier pos:line="16559" pos:column="27">*</type:modifier></type> <name pos:line="16559" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="16560" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16560" pos:column="24">BOOL</name></type> <name pos:line="16560" pos:column="29">fIsUserCode</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16562" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16563" pos:column="7">IDebugModule3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16565" pos:column="5">interface</name></type> <name pos:line="16565" pos:column="15">IDebugModule3</name>
    <argument_list pos:line="16566" pos:column="5">{
        <argument><expr><name pos:line="16567" pos:column="9">CONST_VTBL</name> struct <name pos:line="16567" pos:column="27">IDebugModule3Vtbl</name> <op:operator pos:line="16567" pos:column="45">*</op:operator><name pos:line="16567" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16572" pos:column="1">#<cpp:directive pos:line="16572" pos:column="2">ifdef</cpp:directive> <name pos:line="16572" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16575" pos:column="1">#<cpp:directive pos:line="16575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16575" pos:column="9">IDebugModule3_QueryInterface</name><parameter_list pos:line="16575" pos:column="37">(<param><type><name pos:line="16575" pos:column="38">This</name></type></param>,<param><type><name pos:line="16575" pos:column="43">riid</name></type></param>,<param><type><name pos:line="16575" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16576" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16578" pos:column="1">#<cpp:directive pos:line="16578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16578" pos:column="9">IDebugModule3_AddRef</name><parameter_list pos:line="16578" pos:column="29">(<param><type><name pos:line="16578" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16579" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16581" pos:column="1">#<cpp:directive pos:line="16581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16581" pos:column="9">IDebugModule3_Release</name><parameter_list pos:line="16581" pos:column="30">(<param><type><name pos:line="16581" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16582" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16585" pos:column="1">#<cpp:directive pos:line="16585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16585" pos:column="9">IDebugModule3_GetInfo</name><parameter_list pos:line="16585" pos:column="30">(<param><type><name pos:line="16585" pos:column="31">This</name></type></param>,<param><type><name pos:line="16585" pos:column="36">dwFields</name></type></param>,<param><type><name pos:line="16585" pos:column="45">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16586" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,dwFields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16588" pos:column="1">#<cpp:directive pos:line="16588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16588" pos:column="9">IDebugModule3_ReloadSymbols_Deprecated</name><parameter_list pos:line="16588" pos:column="47">(<param><type><name pos:line="16588" pos:column="48">This</name></type></param>,<param><type><name pos:line="16588" pos:column="53">pszUrlToSymbols</name></type></param>,<param><type><name pos:line="16588" pos:column="69">pbstrDebugMessage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16589" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReloadSymbols_Deprecated(This,pszUrlToSymbols,pbstrDebugMessage) )</cpp:value></cpp:define> 


<cpp:define pos:line="16592" pos:column="1">#<cpp:directive pos:line="16592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16592" pos:column="9">IDebugModule3_GetSymbolInfo</name><parameter_list pos:line="16592" pos:column="36">(<param><type><name pos:line="16592" pos:column="37">This</name></type></param>,<param><type><name pos:line="16592" pos:column="42">dwFields</name></type></param>,<param><type><name pos:line="16592" pos:column="51">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16593" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSymbolInfo(This,dwFields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16595" pos:column="1">#<cpp:directive pos:line="16595" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16595" pos:column="9">IDebugModule3_LoadSymbols</name><parameter_list pos:line="16595" pos:column="34">(<param><type><name pos:line="16595" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16596" pos:column="5">( (This)-&gt;lpVtbl -&gt; LoadSymbols(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16598" pos:column="1">#<cpp:directive pos:line="16598" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16598" pos:column="9">IDebugModule3_IsUserCode</name><parameter_list pos:line="16598" pos:column="33">(<param><type><name pos:line="16598" pos:column="34">This</name></type></param>,<param><type><name pos:line="16598" pos:column="39">pfUser</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16599" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsUserCode(This,pfUser) )</cpp:value></cpp:define> 

<cpp:define pos:line="16601" pos:column="1">#<cpp:directive pos:line="16601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16601" pos:column="9">IDebugModule3_SetJustMyCodeState</name><parameter_list pos:line="16601" pos:column="41">(<param><type><name pos:line="16601" pos:column="42">This</name></type></param>,<param><type><name pos:line="16601" pos:column="47">fIsUserCode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16602" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetJustMyCodeState(This,fIsUserCode) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16604" pos:column="1">#<cpp:directive pos:line="16604" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16604" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16607" pos:column="1">#<cpp:directive pos:line="16607" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16607" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16612" pos:column="1">#<cpp:directive pos:line="16612" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16612" pos:column="9">/* __IDebugModule3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16615" pos:column="1">#<cpp:directive pos:line="16615" pos:column="2">ifndef</cpp:directive> <name pos:line="16615" pos:column="9">__IDebugSourceServerModule_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16616" pos:column="1">#<cpp:directive pos:line="16616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16616" pos:column="9">__IDebugSourceServerModule_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16618" pos:column="1">/* interface IDebugSourceServerModule */</comment>
<comment type="block" pos:line="16619" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="16622" pos:column="1">EXTERN_C</name> <specifier pos:line="16622" pos:column="10">const</specifier> <name pos:line="16622" pos:column="16">IID</name></type> <name pos:line="16622" pos:column="20">IID_IDebugSourceServerModule</name></decl>;</decl_stmt>

<cpp:if pos:line="16624" pos:column="1">#<cpp:directive pos:line="16624" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16624" pos:column="5">defined</name><argument_list pos:line="16624" pos:column="12">(<argument><expr><name pos:line="16624" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16624" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16624" pos:column="29">!</op:operator><call><name pos:line="16624" pos:column="30">defined</name><argument_list pos:line="16624" pos:column="37">(<argument><expr><name pos:line="16624" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16626" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16626" pos:column="19">(<argument pos:line="16626" pos:column="20">"492e5541-215b-4f67-ad73-20f48614912e"</argument>)</argument_list></macro>
    <label><name pos:line="16627" pos:column="5">IDebugSourceServerModule</name> :</label> <expr_stmt><expr pos:line="16627" pos:column="32">public <name pos:line="16627" pos:column="39">IUnknown</name>
    <block pos:line="16628" pos:column="5">{
    <expr pos:line="16629" pos:column="5">public<op:operator pos:line="16629" pos:column="11">:</op:operator>
        virtual <name pos:line="16630" pos:column="17">HRESULT</name> <name pos:line="16630" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16630" pos:column="43">GetSourceServerData</name><argument_list pos:line="16630" pos:column="62">( 
            <comment type="block" pos:line="16631" pos:column="13">/* [out] */</comment> <argument pos:line="16631" pos:column="25">__RPC__out ULONG *pDataByteCount</argument>,
            <comment type="block" pos:line="16632" pos:column="13">/* [size_is][size_is][out] */</comment> <argument pos:line="16632" pos:column="43">__RPC__deref_out_ecount_full_opt(*pDataByteCount) BYTE **ppData</argument>)</argument_list></macro> <op:operator pos:line="16632" pos:column="108">=</op:operator> <lit:literal type="number" pos:line="16632" pos:column="110">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16636" pos:column="1">#<cpp:directive pos:line="16636" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16636" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16638" pos:column="5">typedef <type><struct pos:line="16638" pos:column="13">struct <name pos:line="16638" pos:column="20">IDebugSourceServerModuleVtbl</name>
    <block pos:line="16639" pos:column="5">{<public type="default" pos:line="16639" pos:column="6">
        <function_decl><type><name pos:line="16640" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16642" pos:column="9">HRESULT</name></type> ( <name pos:line="16642" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16642" pos:column="37">*</type:modifier><name pos:line="16642" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16642" pos:column="54">( 
            <param><decl><type><name pos:line="16643" pos:column="13">IDebugSourceServerModule</name> <type:modifier pos:line="16643" pos:column="38">*</type:modifier></type> <name pos:line="16643" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="16644" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16644" pos:column="24">__RPC__in</name> <name pos:line="16644" pos:column="34">REFIID</name></type> <name pos:line="16644" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16645" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16646" pos:column="13">__RPC__deref_out</name>  <name pos:line="16646" pos:column="31">void</name> <type:modifier pos:line="16646" pos:column="36">*</type:modifier><type:modifier pos:line="16646" pos:column="37">*</type:modifier></type><name pos:line="16646" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16648" pos:column="9">ULONG</name></type> ( <name pos:line="16648" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16648" pos:column="35">*</type:modifier><name pos:line="16648" pos:column="36">AddRef</name> )<parameter_list pos:line="16648" pos:column="44">( 
            <param><decl><type><name pos:line="16649" pos:column="13">IDebugSourceServerModule</name> <type:modifier pos:line="16649" pos:column="38">*</type:modifier></type> <name pos:line="16649" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16651" pos:column="9">ULONG</name></type> ( <name pos:line="16651" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16651" pos:column="35">*</type:modifier><name pos:line="16651" pos:column="36">Release</name> )<parameter_list pos:line="16651" pos:column="45">( 
            <param><decl><type><name pos:line="16652" pos:column="13">IDebugSourceServerModule</name> <type:modifier pos:line="16652" pos:column="38">*</type:modifier></type> <name pos:line="16652" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16654" pos:column="9">HRESULT</name> <argument_list pos:line="16654" pos:column="17">( <argument pos:line="16654" pos:column="19">STDMETHODCALLTYPE *GetSourceServerData</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16654" pos:column="59">(</op:operator> 
            <name pos:line="16655" pos:column="13">IDebugSourceServerModule</name> <op:operator pos:line="16655" pos:column="38">*</op:operator> <name pos:line="16655" pos:column="40">This</name><op:operator pos:line="16655" pos:column="44">,</op:operator>
            <comment type="block" pos:line="16656" pos:column="13">/* [out] */</comment> <name pos:line="16656" pos:column="25">__RPC__out</name> <name pos:line="16656" pos:column="36">ULONG</name> <op:operator pos:line="16656" pos:column="42">*</op:operator><name pos:line="16656" pos:column="43">pDataByteCount</name><op:operator pos:line="16656" pos:column="57">,</op:operator>
            <comment type="block" pos:line="16657" pos:column="13">/* [size_is][size_is][out] */</comment> <macro><name pos:line="16657" pos:column="43">__RPC__deref_out_ecount_full_opt</name><argument_list pos:line="16657" pos:column="75">(<argument pos:line="16657" pos:column="76">*pDataByteCount</argument>)</argument_list></macro> <name pos:line="16657" pos:column="93">BYTE</name> <op:operator pos:line="16657" pos:column="98">*</op:operator><op:operator pos:line="16657" pos:column="99">*</op:operator><name pos:line="16657" pos:column="100">ppData</name><op:operator pos:line="16657" pos:column="106">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="16659" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16660" pos:column="7">IDebugSourceServerModuleVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16662" pos:column="5">interface</name></type> <name pos:line="16662" pos:column="15">IDebugSourceServerModule</name>
    <argument_list pos:line="16663" pos:column="5">{
        <argument><expr><name pos:line="16664" pos:column="9">CONST_VTBL</name> struct <name pos:line="16664" pos:column="27">IDebugSourceServerModuleVtbl</name> <op:operator pos:line="16664" pos:column="56">*</op:operator><name pos:line="16664" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16669" pos:column="1">#<cpp:directive pos:line="16669" pos:column="2">ifdef</cpp:directive> <name pos:line="16669" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16672" pos:column="1">#<cpp:directive pos:line="16672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16672" pos:column="9">IDebugSourceServerModule_QueryInterface</name><parameter_list pos:line="16672" pos:column="48">(<param><type><name pos:line="16672" pos:column="49">This</name></type></param>,<param><type><name pos:line="16672" pos:column="54">riid</name></type></param>,<param><type><name pos:line="16672" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16673" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16675" pos:column="1">#<cpp:directive pos:line="16675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16675" pos:column="9">IDebugSourceServerModule_AddRef</name><parameter_list pos:line="16675" pos:column="40">(<param><type><name pos:line="16675" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16676" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16678" pos:column="1">#<cpp:directive pos:line="16678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16678" pos:column="9">IDebugSourceServerModule_Release</name><parameter_list pos:line="16678" pos:column="41">(<param><type><name pos:line="16678" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16679" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16682" pos:column="1">#<cpp:directive pos:line="16682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16682" pos:column="9">IDebugSourceServerModule_GetSourceServerData</name><parameter_list pos:line="16682" pos:column="53">(<param><type><name pos:line="16682" pos:column="54">This</name></type></param>,<param><type><name pos:line="16682" pos:column="59">pDataByteCount</name></type></param>,<param><type><name pos:line="16682" pos:column="74">ppData</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16683" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSourceServerData(This,pDataByteCount,ppData) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16685" pos:column="1">#<cpp:directive pos:line="16685" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16685" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16688" pos:column="1">#<cpp:directive pos:line="16688" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16688" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16693" pos:column="1">#<cpp:directive pos:line="16693" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16693" pos:column="9">/* __IDebugSourceServerModule_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16696" pos:column="1">#<cpp:directive pos:line="16696" pos:column="2">ifndef</cpp:directive> <name pos:line="16696" pos:column="9">__IDebugModuleManaged_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16697" pos:column="1">#<cpp:directive pos:line="16697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16697" pos:column="9">__IDebugModuleManaged_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16699" pos:column="1">/* interface IDebugModuleManaged */</comment>
<comment type="block" pos:line="16700" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="16703" pos:column="1">EXTERN_C</name> <specifier pos:line="16703" pos:column="10">const</specifier> <name pos:line="16703" pos:column="16">IID</name></type> <name pos:line="16703" pos:column="20">IID_IDebugModuleManaged</name></decl>;</decl_stmt>

<cpp:if pos:line="16705" pos:column="1">#<cpp:directive pos:line="16705" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16705" pos:column="5">defined</name><argument_list pos:line="16705" pos:column="12">(<argument><expr><name pos:line="16705" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16705" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16705" pos:column="29">!</op:operator><call><name pos:line="16705" pos:column="30">defined</name><argument_list pos:line="16705" pos:column="37">(<argument><expr><name pos:line="16705" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16707" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16707" pos:column="19">(<argument pos:line="16707" pos:column="20">"232397F8-B232-479d-B1BB-2F044C70A0F9"</argument>)</argument_list></macro>
    <label><name pos:line="16708" pos:column="5">IDebugModuleManaged</name> :</label> <expr_stmt><expr pos:line="16708" pos:column="27">public <name pos:line="16708" pos:column="34">IUnknown</name>
    <block pos:line="16709" pos:column="5">{
    <expr pos:line="16710" pos:column="5">public<op:operator pos:line="16710" pos:column="11">:</op:operator>
        virtual <name pos:line="16711" pos:column="17">HRESULT</name> <name pos:line="16711" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16711" pos:column="43">GetMvid</name><argument_list pos:line="16711" pos:column="50">( 
            <comment type="block" pos:line="16712" pos:column="13">/* [out] */</comment> <argument pos:line="16712" pos:column="25">__RPC__out GUID *mvid</argument>)</argument_list></macro> <op:operator pos:line="16712" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="16712" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16716" pos:column="1">#<cpp:directive pos:line="16716" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16716" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16718" pos:column="5">typedef <type><struct pos:line="16718" pos:column="13">struct <name pos:line="16718" pos:column="20">IDebugModuleManagedVtbl</name>
    <block pos:line="16719" pos:column="5">{<public type="default" pos:line="16719" pos:column="6">
        <function_decl><type><name pos:line="16720" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16722" pos:column="9">HRESULT</name></type> ( <name pos:line="16722" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16722" pos:column="37">*</type:modifier><name pos:line="16722" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16722" pos:column="54">( 
            <param><decl><type><name pos:line="16723" pos:column="13">IDebugModuleManaged</name> <type:modifier pos:line="16723" pos:column="33">*</type:modifier></type> <name pos:line="16723" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16724" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16724" pos:column="24">__RPC__in</name> <name pos:line="16724" pos:column="34">REFIID</name></type> <name pos:line="16724" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16725" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16726" pos:column="13">__RPC__deref_out</name>  <name pos:line="16726" pos:column="31">void</name> <type:modifier pos:line="16726" pos:column="36">*</type:modifier><type:modifier pos:line="16726" pos:column="37">*</type:modifier></type><name pos:line="16726" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16728" pos:column="9">ULONG</name></type> ( <name pos:line="16728" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16728" pos:column="35">*</type:modifier><name pos:line="16728" pos:column="36">AddRef</name> )<parameter_list pos:line="16728" pos:column="44">( 
            <param><decl><type><name pos:line="16729" pos:column="13">IDebugModuleManaged</name> <type:modifier pos:line="16729" pos:column="33">*</type:modifier></type> <name pos:line="16729" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16731" pos:column="9">ULONG</name></type> ( <name pos:line="16731" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16731" pos:column="35">*</type:modifier><name pos:line="16731" pos:column="36">Release</name> )<parameter_list pos:line="16731" pos:column="45">( 
            <param><decl><type><name pos:line="16732" pos:column="13">IDebugModuleManaged</name> <type:modifier pos:line="16732" pos:column="33">*</type:modifier></type> <name pos:line="16732" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16734" pos:column="9">HRESULT</name></type> ( <name pos:line="16734" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16734" pos:column="37">*</type:modifier><name pos:line="16734" pos:column="38">GetMvid</name> )<parameter_list pos:line="16734" pos:column="47">( 
            <param><decl><type><name pos:line="16735" pos:column="13">IDebugModuleManaged</name> <type:modifier pos:line="16735" pos:column="33">*</type:modifier></type> <name pos:line="16735" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16736" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16736" pos:column="25">__RPC__out</name> <name pos:line="16736" pos:column="36">GUID</name> <type:modifier pos:line="16736" pos:column="41">*</type:modifier></type><name pos:line="16736" pos:column="42">mvid</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16738" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16739" pos:column="7">IDebugModuleManagedVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16741" pos:column="5">interface</name></type> <name pos:line="16741" pos:column="15">IDebugModuleManaged</name>
    <argument_list pos:line="16742" pos:column="5">{
        <argument><expr><name pos:line="16743" pos:column="9">CONST_VTBL</name> struct <name pos:line="16743" pos:column="27">IDebugModuleManagedVtbl</name> <op:operator pos:line="16743" pos:column="51">*</op:operator><name pos:line="16743" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16748" pos:column="1">#<cpp:directive pos:line="16748" pos:column="2">ifdef</cpp:directive> <name pos:line="16748" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16751" pos:column="1">#<cpp:directive pos:line="16751" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16751" pos:column="9">IDebugModuleManaged_QueryInterface</name><parameter_list pos:line="16751" pos:column="43">(<param><type><name pos:line="16751" pos:column="44">This</name></type></param>,<param><type><name pos:line="16751" pos:column="49">riid</name></type></param>,<param><type><name pos:line="16751" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16752" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16754" pos:column="1">#<cpp:directive pos:line="16754" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16754" pos:column="9">IDebugModuleManaged_AddRef</name><parameter_list pos:line="16754" pos:column="35">(<param><type><name pos:line="16754" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16755" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16757" pos:column="1">#<cpp:directive pos:line="16757" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16757" pos:column="9">IDebugModuleManaged_Release</name><parameter_list pos:line="16757" pos:column="36">(<param><type><name pos:line="16757" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16758" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16761" pos:column="1">#<cpp:directive pos:line="16761" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16761" pos:column="9">IDebugModuleManaged_GetMvid</name><parameter_list pos:line="16761" pos:column="36">(<param><type><name pos:line="16761" pos:column="37">This</name></type></param>,<param><type><name pos:line="16761" pos:column="42">mvid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16762" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMvid(This,mvid) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16764" pos:column="1">#<cpp:directive pos:line="16764" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16764" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16767" pos:column="1">#<cpp:directive pos:line="16767" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16767" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16772" pos:column="1">#<cpp:directive pos:line="16772" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16772" pos:column="9">/* __IDebugModuleManaged_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16775" pos:column="1">#<cpp:directive pos:line="16775" pos:column="2">ifndef</cpp:directive> <name pos:line="16775" pos:column="9">__IDebugDocument2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16776" pos:column="1">#<cpp:directive pos:line="16776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16776" pos:column="9">__IDebugDocument2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16778" pos:column="1">/* interface IDebugDocument2 */</comment>
<comment type="block" pos:line="16779" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="16782" pos:column="1">EXTERN_C</name> <specifier pos:line="16782" pos:column="10">const</specifier> <name pos:line="16782" pos:column="16">IID</name></type> <name pos:line="16782" pos:column="20">IID_IDebugDocument2</name></decl>;</decl_stmt>

<cpp:if pos:line="16784" pos:column="1">#<cpp:directive pos:line="16784" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16784" pos:column="5">defined</name><argument_list pos:line="16784" pos:column="12">(<argument><expr><name pos:line="16784" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16784" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16784" pos:column="29">!</op:operator><call><name pos:line="16784" pos:column="30">defined</name><argument_list pos:line="16784" pos:column="37">(<argument><expr><name pos:line="16784" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16786" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16786" pos:column="19">(<argument pos:line="16786" pos:column="20">"1606dd73-5d5f-405c-b4f4-ce32baba2501"</argument>)</argument_list></macro>
    <label><name pos:line="16787" pos:column="5">IDebugDocument2</name> :</label> <expr_stmt><expr pos:line="16787" pos:column="23">public <name pos:line="16787" pos:column="30">IUnknown</name>
    <block pos:line="16788" pos:column="5">{
    <expr pos:line="16789" pos:column="5">public<op:operator pos:line="16789" pos:column="11">:</op:operator>
        virtual <name pos:line="16790" pos:column="17">HRESULT</name> <name pos:line="16790" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16790" pos:column="43">GetName</name><argument_list pos:line="16790" pos:column="50">( 
            <comment type="block" pos:line="16791" pos:column="13">/* [in] */</comment> <argument pos:line="16791" pos:column="24">GETNAME_TYPE gnType</argument>,
            <comment type="block" pos:line="16792" pos:column="13">/* [out] */</comment> <argument pos:line="16792" pos:column="25">__RPC__deref_out_opt BSTR *pbstrFileName</argument>)</argument_list></macro> <op:operator pos:line="16792" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="16792" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="16794" pos:column="9">virtual <name pos:line="16794" pos:column="17">HRESULT</name> <name pos:line="16794" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16794" pos:column="43">GetDocumentClassId</name><argument_list pos:line="16794" pos:column="61">( 
            <comment type="block" pos:line="16795" pos:column="13">/* [out] */</comment> <argument pos:line="16795" pos:column="25">__RPC__out CLSID *pclsid</argument>)</argument_list></macro> <op:operator pos:line="16795" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="16795" pos:column="53">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16799" pos:column="1">#<cpp:directive pos:line="16799" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16799" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16801" pos:column="5">typedef <type><struct pos:line="16801" pos:column="13">struct <name pos:line="16801" pos:column="20">IDebugDocument2Vtbl</name>
    <block pos:line="16802" pos:column="5">{<public type="default" pos:line="16802" pos:column="6">
        <function_decl><type><name pos:line="16803" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16805" pos:column="9">HRESULT</name></type> ( <name pos:line="16805" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16805" pos:column="37">*</type:modifier><name pos:line="16805" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16805" pos:column="54">( 
            <param><decl><type><name pos:line="16806" pos:column="13">IDebugDocument2</name> <type:modifier pos:line="16806" pos:column="29">*</type:modifier></type> <name pos:line="16806" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="16807" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16807" pos:column="24">__RPC__in</name> <name pos:line="16807" pos:column="34">REFIID</name></type> <name pos:line="16807" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16808" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16809" pos:column="13">__RPC__deref_out</name>  <name pos:line="16809" pos:column="31">void</name> <type:modifier pos:line="16809" pos:column="36">*</type:modifier><type:modifier pos:line="16809" pos:column="37">*</type:modifier></type><name pos:line="16809" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16811" pos:column="9">ULONG</name></type> ( <name pos:line="16811" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16811" pos:column="35">*</type:modifier><name pos:line="16811" pos:column="36">AddRef</name> )<parameter_list pos:line="16811" pos:column="44">( 
            <param><decl><type><name pos:line="16812" pos:column="13">IDebugDocument2</name> <type:modifier pos:line="16812" pos:column="29">*</type:modifier></type> <name pos:line="16812" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16814" pos:column="9">ULONG</name></type> ( <name pos:line="16814" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16814" pos:column="35">*</type:modifier><name pos:line="16814" pos:column="36">Release</name> )<parameter_list pos:line="16814" pos:column="45">( 
            <param><decl><type><name pos:line="16815" pos:column="13">IDebugDocument2</name> <type:modifier pos:line="16815" pos:column="29">*</type:modifier></type> <name pos:line="16815" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16817" pos:column="9">HRESULT</name></type> ( <name pos:line="16817" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16817" pos:column="37">*</type:modifier><name pos:line="16817" pos:column="38">GetName</name> )<parameter_list pos:line="16817" pos:column="47">( 
            <param><decl><type><name pos:line="16818" pos:column="13">IDebugDocument2</name> <type:modifier pos:line="16818" pos:column="29">*</type:modifier></type> <name pos:line="16818" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="16819" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16819" pos:column="24">GETNAME_TYPE</name></type> <name pos:line="16819" pos:column="37">gnType</name></decl></param>,
            <comment type="block" pos:line="16820" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16820" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16820" pos:column="46">BSTR</name> <type:modifier pos:line="16820" pos:column="51">*</type:modifier></type><name pos:line="16820" pos:column="52">pbstrFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16822" pos:column="9">HRESULT</name></type> ( <name pos:line="16822" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16822" pos:column="37">*</type:modifier><name pos:line="16822" pos:column="38">GetDocumentClassId</name> )<parameter_list pos:line="16822" pos:column="58">( 
            <param><decl><type><name pos:line="16823" pos:column="13">IDebugDocument2</name> <type:modifier pos:line="16823" pos:column="29">*</type:modifier></type> <name pos:line="16823" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="16824" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16824" pos:column="25">__RPC__out</name> <name pos:line="16824" pos:column="36">CLSID</name> <type:modifier pos:line="16824" pos:column="42">*</type:modifier></type><name pos:line="16824" pos:column="43">pclsid</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16826" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16827" pos:column="7">IDebugDocument2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16829" pos:column="5">interface</name></type> <name pos:line="16829" pos:column="15">IDebugDocument2</name>
    <argument_list pos:line="16830" pos:column="5">{
        <argument><expr><name pos:line="16831" pos:column="9">CONST_VTBL</name> struct <name pos:line="16831" pos:column="27">IDebugDocument2Vtbl</name> <op:operator pos:line="16831" pos:column="47">*</op:operator><name pos:line="16831" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16836" pos:column="1">#<cpp:directive pos:line="16836" pos:column="2">ifdef</cpp:directive> <name pos:line="16836" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16839" pos:column="1">#<cpp:directive pos:line="16839" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16839" pos:column="9">IDebugDocument2_QueryInterface</name><parameter_list pos:line="16839" pos:column="39">(<param><type><name pos:line="16839" pos:column="40">This</name></type></param>,<param><type><name pos:line="16839" pos:column="45">riid</name></type></param>,<param><type><name pos:line="16839" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16840" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16842" pos:column="1">#<cpp:directive pos:line="16842" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16842" pos:column="9">IDebugDocument2_AddRef</name><parameter_list pos:line="16842" pos:column="31">(<param><type><name pos:line="16842" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16843" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16845" pos:column="1">#<cpp:directive pos:line="16845" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16845" pos:column="9">IDebugDocument2_Release</name><parameter_list pos:line="16845" pos:column="32">(<param><type><name pos:line="16845" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16846" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16849" pos:column="1">#<cpp:directive pos:line="16849" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16849" pos:column="9">IDebugDocument2_GetName</name><parameter_list pos:line="16849" pos:column="32">(<param><type><name pos:line="16849" pos:column="33">This</name></type></param>,<param><type><name pos:line="16849" pos:column="38">gnType</name></type></param>,<param><type><name pos:line="16849" pos:column="45">pbstrFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16850" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,gnType,pbstrFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="16852" pos:column="1">#<cpp:directive pos:line="16852" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16852" pos:column="9">IDebugDocument2_GetDocumentClassId</name><parameter_list pos:line="16852" pos:column="43">(<param><type><name pos:line="16852" pos:column="44">This</name></type></param>,<param><type><name pos:line="16852" pos:column="49">pclsid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16853" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentClassId(This,pclsid) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16855" pos:column="1">#<cpp:directive pos:line="16855" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16855" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16858" pos:column="1">#<cpp:directive pos:line="16858" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16858" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16863" pos:column="1">#<cpp:directive pos:line="16863" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16863" pos:column="9">/* __IDebugDocument2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="16866" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0114 */</comment>
<comment type="block" pos:line="16867" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="16869" pos:column="1">#<cpp:directive pos:line="16869" pos:column="2">pragma</cpp:directive> warning(push)</cpp:pragma>
<cpp:pragma pos:line="16870" pos:column="1">#<cpp:directive pos:line="16870" pos:column="2">pragma</cpp:directive> warning(disable:28718)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="16873" pos:column="1">extern</specifier> <name pos:line="16873" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="16873" pos:column="22">__MIDL_itf_msdbg_0000_0114_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="16874" pos:column="1">extern</specifier> <name pos:line="16874" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="16874" pos:column="22">__MIDL_itf_msdbg_0000_0114_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="16876" pos:column="1">#<cpp:directive pos:line="16876" pos:column="2">ifndef</cpp:directive> <name pos:line="16876" pos:column="9">__IDebugDocumentText2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16877" pos:column="1">#<cpp:directive pos:line="16877" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16877" pos:column="9">__IDebugDocumentText2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16879" pos:column="1">/* interface IDebugDocumentText2 */</comment>
<comment type="block" pos:line="16880" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="16883" pos:column="1">EXTERN_C</name> <specifier pos:line="16883" pos:column="10">const</specifier> <name pos:line="16883" pos:column="16">IID</name></type> <name pos:line="16883" pos:column="20">IID_IDebugDocumentText2</name></decl>;</decl_stmt>

<cpp:if pos:line="16885" pos:column="1">#<cpp:directive pos:line="16885" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16885" pos:column="5">defined</name><argument_list pos:line="16885" pos:column="12">(<argument><expr><name pos:line="16885" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16885" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16885" pos:column="29">!</op:operator><call><name pos:line="16885" pos:column="30">defined</name><argument_list pos:line="16885" pos:column="37">(<argument><expr><name pos:line="16885" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16887" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16887" pos:column="19">(<argument pos:line="16887" pos:column="20">"4b0645aa-08ef-4cb9-adb9-0395d6edad35"</argument>)</argument_list></macro>
    <label><name pos:line="16888" pos:column="5">IDebugDocumentText2</name> :</label> <expr_stmt><expr pos:line="16888" pos:column="27">public <name pos:line="16888" pos:column="34">IDebugDocument2</name>
    <block pos:line="16889" pos:column="5">{
    <expr pos:line="16890" pos:column="5">public<op:operator pos:line="16890" pos:column="11">:</op:operator>
        virtual <name pos:line="16891" pos:column="17">HRESULT</name> <name pos:line="16891" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16891" pos:column="43">GetSize</name><argument_list pos:line="16891" pos:column="50">( 
            <comment type="block" pos:line="16892" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="16892" pos:column="35">__RPC__inout_opt ULONG *pcNumLines</argument>,
            <comment type="block" pos:line="16893" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="16893" pos:column="35">__RPC__inout_opt ULONG *pcNumChars</argument>)</argument_list></macro> <op:operator pos:line="16893" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="16893" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="16895" pos:column="9">virtual <name pos:line="16895" pos:column="17">HRESULT</name> <name pos:line="16895" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="16895" pos:column="43">GetText</name><argument_list pos:line="16895" pos:column="50">( 
            <comment type="block" pos:line="16896" pos:column="13">/* [in] */</comment> <argument pos:line="16896" pos:column="24">TEXT_POSITION pos</argument>,
            <comment type="block" pos:line="16897" pos:column="13">/* [in] */</comment> <argument pos:line="16897" pos:column="24">ULONG cMaxChars</argument>,
            <comment type="block" pos:line="16898" pos:column="13">/* [size_is][length_is][out] */</comment> <argument pos:line="16898" pos:column="45">__RPC__out_ecount_part(cMaxChars, *pcNumChars) WCHAR *pText</argument>,
            <comment type="block" pos:line="16899" pos:column="13">/* [out] */</comment> <argument pos:line="16899" pos:column="25">__RPC__out ULONG *pcNumChars</argument>)</argument_list></macro> <op:operator pos:line="16899" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="16899" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16903" pos:column="1">#<cpp:directive pos:line="16903" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16903" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16905" pos:column="5">typedef <type><struct pos:line="16905" pos:column="13">struct <name pos:line="16905" pos:column="20">IDebugDocumentText2Vtbl</name>
    <block pos:line="16906" pos:column="5">{<public type="default" pos:line="16906" pos:column="6">
        <function_decl><type><name pos:line="16907" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16909" pos:column="9">HRESULT</name></type> ( <name pos:line="16909" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16909" pos:column="37">*</type:modifier><name pos:line="16909" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16909" pos:column="54">( 
            <param><decl><type><name pos:line="16910" pos:column="13">IDebugDocumentText2</name> <type:modifier pos:line="16910" pos:column="33">*</type:modifier></type> <name pos:line="16910" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16911" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16911" pos:column="24">__RPC__in</name> <name pos:line="16911" pos:column="34">REFIID</name></type> <name pos:line="16911" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16912" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16913" pos:column="13">__RPC__deref_out</name>  <name pos:line="16913" pos:column="31">void</name> <type:modifier pos:line="16913" pos:column="36">*</type:modifier><type:modifier pos:line="16913" pos:column="37">*</type:modifier></type><name pos:line="16913" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16915" pos:column="9">ULONG</name></type> ( <name pos:line="16915" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16915" pos:column="35">*</type:modifier><name pos:line="16915" pos:column="36">AddRef</name> )<parameter_list pos:line="16915" pos:column="44">( 
            <param><decl><type><name pos:line="16916" pos:column="13">IDebugDocumentText2</name> <type:modifier pos:line="16916" pos:column="33">*</type:modifier></type> <name pos:line="16916" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16918" pos:column="9">ULONG</name></type> ( <name pos:line="16918" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16918" pos:column="35">*</type:modifier><name pos:line="16918" pos:column="36">Release</name> )<parameter_list pos:line="16918" pos:column="45">( 
            <param><decl><type><name pos:line="16919" pos:column="13">IDebugDocumentText2</name> <type:modifier pos:line="16919" pos:column="33">*</type:modifier></type> <name pos:line="16919" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16921" pos:column="9">HRESULT</name></type> ( <name pos:line="16921" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16921" pos:column="37">*</type:modifier><name pos:line="16921" pos:column="38">GetName</name> )<parameter_list pos:line="16921" pos:column="47">( 
            <param><decl><type><name pos:line="16922" pos:column="13">IDebugDocumentText2</name> <type:modifier pos:line="16922" pos:column="33">*</type:modifier></type> <name pos:line="16922" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16923" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16923" pos:column="24">GETNAME_TYPE</name></type> <name pos:line="16923" pos:column="37">gnType</name></decl></param>,
            <comment type="block" pos:line="16924" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16924" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16924" pos:column="46">BSTR</name> <type:modifier pos:line="16924" pos:column="51">*</type:modifier></type><name pos:line="16924" pos:column="52">pbstrFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16926" pos:column="9">HRESULT</name></type> ( <name pos:line="16926" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16926" pos:column="37">*</type:modifier><name pos:line="16926" pos:column="38">GetDocumentClassId</name> )<parameter_list pos:line="16926" pos:column="58">( 
            <param><decl><type><name pos:line="16927" pos:column="13">IDebugDocumentText2</name> <type:modifier pos:line="16927" pos:column="33">*</type:modifier></type> <name pos:line="16927" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16928" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16928" pos:column="25">__RPC__out</name> <name pos:line="16928" pos:column="36">CLSID</name> <type:modifier pos:line="16928" pos:column="42">*</type:modifier></type><name pos:line="16928" pos:column="43">pclsid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16930" pos:column="9">HRESULT</name></type> ( <name pos:line="16930" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16930" pos:column="37">*</type:modifier><name pos:line="16930" pos:column="38">GetSize</name> )<parameter_list pos:line="16930" pos:column="47">( 
            <param><decl><type><name pos:line="16931" pos:column="13">IDebugDocumentText2</name> <type:modifier pos:line="16931" pos:column="33">*</type:modifier></type> <name pos:line="16931" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16932" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="16932" pos:column="35">__RPC__inout_opt</name> <name pos:line="16932" pos:column="52">ULONG</name> <type:modifier pos:line="16932" pos:column="58">*</type:modifier></type><name pos:line="16932" pos:column="59">pcNumLines</name></decl></param>,
            <comment type="block" pos:line="16933" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="16933" pos:column="35">__RPC__inout_opt</name> <name pos:line="16933" pos:column="52">ULONG</name> <type:modifier pos:line="16933" pos:column="58">*</type:modifier></type><name pos:line="16933" pos:column="59">pcNumChars</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16935" pos:column="9">HRESULT</name> <argument_list pos:line="16935" pos:column="17">( <argument pos:line="16935" pos:column="19">STDMETHODCALLTYPE *GetText</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16935" pos:column="47">(</op:operator> 
            <name pos:line="16936" pos:column="13">IDebugDocumentText2</name> <op:operator pos:line="16936" pos:column="33">*</op:operator> <name pos:line="16936" pos:column="35">This</name><op:operator pos:line="16936" pos:column="39">,</op:operator>
            <comment type="block" pos:line="16937" pos:column="13">/* [in] */</comment> <name pos:line="16937" pos:column="24">TEXT_POSITION</name> <name pos:line="16937" pos:column="38">pos</name><op:operator pos:line="16937" pos:column="41">,</op:operator>
            <comment type="block" pos:line="16938" pos:column="13">/* [in] */</comment> <name pos:line="16938" pos:column="24">ULONG</name> <name pos:line="16938" pos:column="30">cMaxChars</name><op:operator pos:line="16938" pos:column="39">,</op:operator>
            <comment type="block" pos:line="16939" pos:column="13">/* [size_is][length_is][out] */</comment> <macro><name pos:line="16939" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="16939" pos:column="67">(<argument pos:line="16939" pos:column="68">cMaxChars</argument>, <argument pos:line="16939" pos:column="79">*pcNumChars</argument>)</argument_list></macro> <name pos:line="16939" pos:column="92">WCHAR</name> <op:operator pos:line="16939" pos:column="98">*</op:operator><name pos:line="16939" pos:column="99">pText</name><op:operator pos:line="16939" pos:column="104">,</op:operator>
            <comment type="block" pos:line="16940" pos:column="13">/* [out] */</comment> <name pos:line="16940" pos:column="25">__RPC__out</name> <name pos:line="16940" pos:column="36">ULONG</name> <op:operator pos:line="16940" pos:column="42">*</op:operator><name pos:line="16940" pos:column="43">pcNumChars</name><op:operator pos:line="16940" pos:column="53">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="16942" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16943" pos:column="7">IDebugDocumentText2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16945" pos:column="5">interface</name></type> <name pos:line="16945" pos:column="15">IDebugDocumentText2</name>
    <argument_list pos:line="16946" pos:column="5">{
        <argument><expr><name pos:line="16947" pos:column="9">CONST_VTBL</name> struct <name pos:line="16947" pos:column="27">IDebugDocumentText2Vtbl</name> <op:operator pos:line="16947" pos:column="51">*</op:operator><name pos:line="16947" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16952" pos:column="1">#<cpp:directive pos:line="16952" pos:column="2">ifdef</cpp:directive> <name pos:line="16952" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16955" pos:column="1">#<cpp:directive pos:line="16955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16955" pos:column="9">IDebugDocumentText2_QueryInterface</name><parameter_list pos:line="16955" pos:column="43">(<param><type><name pos:line="16955" pos:column="44">This</name></type></param>,<param><type><name pos:line="16955" pos:column="49">riid</name></type></param>,<param><type><name pos:line="16955" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16956" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16958" pos:column="1">#<cpp:directive pos:line="16958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16958" pos:column="9">IDebugDocumentText2_AddRef</name><parameter_list pos:line="16958" pos:column="35">(<param><type><name pos:line="16958" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16959" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16961" pos:column="1">#<cpp:directive pos:line="16961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16961" pos:column="9">IDebugDocumentText2_Release</name><parameter_list pos:line="16961" pos:column="36">(<param><type><name pos:line="16961" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16962" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16965" pos:column="1">#<cpp:directive pos:line="16965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16965" pos:column="9">IDebugDocumentText2_GetName</name><parameter_list pos:line="16965" pos:column="36">(<param><type><name pos:line="16965" pos:column="37">This</name></type></param>,<param><type><name pos:line="16965" pos:column="42">gnType</name></type></param>,<param><type><name pos:line="16965" pos:column="49">pbstrFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16966" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,gnType,pbstrFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="16968" pos:column="1">#<cpp:directive pos:line="16968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16968" pos:column="9">IDebugDocumentText2_GetDocumentClassId</name><parameter_list pos:line="16968" pos:column="47">(<param><type><name pos:line="16968" pos:column="48">This</name></type></param>,<param><type><name pos:line="16968" pos:column="53">pclsid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16969" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentClassId(This,pclsid) )</cpp:value></cpp:define> 


<cpp:define pos:line="16972" pos:column="1">#<cpp:directive pos:line="16972" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16972" pos:column="9">IDebugDocumentText2_GetSize</name><parameter_list pos:line="16972" pos:column="36">(<param><type><name pos:line="16972" pos:column="37">This</name></type></param>,<param><type><name pos:line="16972" pos:column="42">pcNumLines</name></type></param>,<param><type><name pos:line="16972" pos:column="53">pcNumChars</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16973" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pcNumLines,pcNumChars) )</cpp:value></cpp:define> 

<cpp:define pos:line="16975" pos:column="1">#<cpp:directive pos:line="16975" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16975" pos:column="9">IDebugDocumentText2_GetText</name><parameter_list pos:line="16975" pos:column="36">(<param><type><name pos:line="16975" pos:column="37">This</name></type></param>,<param><type><name pos:line="16975" pos:column="42">pos</name></type></param>,<param><type><name pos:line="16975" pos:column="46">cMaxChars</name></type></param>,<param><type><name pos:line="16975" pos:column="56">pText</name></type></param>,<param><type><name pos:line="16975" pos:column="62">pcNumChars</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16976" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,pos,cMaxChars,pText,pcNumChars) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16978" pos:column="1">#<cpp:directive pos:line="16978" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16978" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16981" pos:column="1">#<cpp:directive pos:line="16981" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16981" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16986" pos:column="1">#<cpp:directive pos:line="16986" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16986" pos:column="9">/* __IDebugDocumentText2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="16989" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0115 */</comment>
<comment type="block" pos:line="16990" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="16992" pos:column="1">#<cpp:directive pos:line="16992" pos:column="2">pragma</cpp:directive> warning(pop)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="16995" pos:column="1">extern</specifier> <name pos:line="16995" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="16995" pos:column="22">__MIDL_itf_msdbg_0000_0115_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="16996" pos:column="1">extern</specifier> <name pos:line="16996" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="16996" pos:column="22">__MIDL_itf_msdbg_0000_0115_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="16998" pos:column="1">#<cpp:directive pos:line="16998" pos:column="2">ifndef</cpp:directive> <name pos:line="16998" pos:column="9">__IDebugDocumentPosition2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16999" pos:column="1">#<cpp:directive pos:line="16999" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16999" pos:column="9">__IDebugDocumentPosition2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17001" pos:column="1">/* interface IDebugDocumentPosition2 */</comment>
<comment type="block" pos:line="17002" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17005" pos:column="1">EXTERN_C</name> <specifier pos:line="17005" pos:column="10">const</specifier> <name pos:line="17005" pos:column="16">IID</name></type> <name pos:line="17005" pos:column="20">IID_IDebugDocumentPosition2</name></decl>;</decl_stmt>

<cpp:if pos:line="17007" pos:column="1">#<cpp:directive pos:line="17007" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17007" pos:column="5">defined</name><argument_list pos:line="17007" pos:column="12">(<argument><expr><name pos:line="17007" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17007" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17007" pos:column="29">!</op:operator><call><name pos:line="17007" pos:column="30">defined</name><argument_list pos:line="17007" pos:column="37">(<argument><expr><name pos:line="17007" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17009" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17009" pos:column="19">(<argument pos:line="17009" pos:column="20">"bdde0eee-3b8d-4c82-b529-33f16b42832e"</argument>)</argument_list></macro>
    <label><name pos:line="17010" pos:column="5">IDebugDocumentPosition2</name> :</label> <expr_stmt><expr pos:line="17010" pos:column="31">public <name pos:line="17010" pos:column="38">IUnknown</name>
    <block pos:line="17011" pos:column="5">{
    <expr pos:line="17012" pos:column="5">public<op:operator pos:line="17012" pos:column="11">:</op:operator>
        virtual <name pos:line="17013" pos:column="17">HRESULT</name> <name pos:line="17013" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17013" pos:column="43">GetFileName</name><argument_list pos:line="17013" pos:column="54">( 
            <comment type="block" pos:line="17014" pos:column="13">/* [out] */</comment> <argument pos:line="17014" pos:column="25">__RPC__deref_out_opt BSTR *pbstrFileName</argument>)</argument_list></macro> <op:operator pos:line="17014" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="17014" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="17016" pos:column="9">virtual <name pos:line="17016" pos:column="17">HRESULT</name> <name pos:line="17016" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17016" pos:column="43">GetDocument</name><argument_list pos:line="17016" pos:column="54">( 
            <comment type="block" pos:line="17017" pos:column="13">/* [out] */</comment> <argument pos:line="17017" pos:column="25">__RPC__deref_out_opt IDebugDocument2 **ppDoc</argument>)</argument_list></macro> <op:operator pos:line="17017" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="17017" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="17019" pos:column="9">virtual <name pos:line="17019" pos:column="17">HRESULT</name> <name pos:line="17019" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17019" pos:column="43">IsPositionInDocument</name><argument_list pos:line="17019" pos:column="63">( 
            <comment type="block" pos:line="17020" pos:column="13">/* [in] */</comment> <argument pos:line="17020" pos:column="24">__RPC__in_opt IDebugDocument2 *pDoc</argument>)</argument_list></macro> <op:operator pos:line="17020" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="17020" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="17022" pos:column="9">virtual <name pos:line="17022" pos:column="17">HRESULT</name> <name pos:line="17022" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17022" pos:column="43">GetRange</name><argument_list pos:line="17022" pos:column="51">( 
            <comment type="block" pos:line="17023" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="17023" pos:column="35">__RPC__inout_opt TEXT_POSITION *pBegPosition</argument>,
            <comment type="block" pos:line="17024" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="17024" pos:column="35">__RPC__inout_opt TEXT_POSITION *pEndPosition</argument>)</argument_list></macro> <op:operator pos:line="17024" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="17024" pos:column="83">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17028" pos:column="1">#<cpp:directive pos:line="17028" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17028" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17030" pos:column="5">typedef <type><struct pos:line="17030" pos:column="13">struct <name pos:line="17030" pos:column="20">IDebugDocumentPosition2Vtbl</name>
    <block pos:line="17031" pos:column="5">{<public type="default" pos:line="17031" pos:column="6">
        <function_decl><type><name pos:line="17032" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17034" pos:column="9">HRESULT</name></type> ( <name pos:line="17034" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17034" pos:column="37">*</type:modifier><name pos:line="17034" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17034" pos:column="54">( 
            <param><decl><type><name pos:line="17035" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17035" pos:column="37">*</type:modifier></type> <name pos:line="17035" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17036" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17036" pos:column="24">__RPC__in</name> <name pos:line="17036" pos:column="34">REFIID</name></type> <name pos:line="17036" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17037" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17038" pos:column="13">__RPC__deref_out</name>  <name pos:line="17038" pos:column="31">void</name> <type:modifier pos:line="17038" pos:column="36">*</type:modifier><type:modifier pos:line="17038" pos:column="37">*</type:modifier></type><name pos:line="17038" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17040" pos:column="9">ULONG</name></type> ( <name pos:line="17040" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17040" pos:column="35">*</type:modifier><name pos:line="17040" pos:column="36">AddRef</name> )<parameter_list pos:line="17040" pos:column="44">( 
            <param><decl><type><name pos:line="17041" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17041" pos:column="37">*</type:modifier></type> <name pos:line="17041" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17043" pos:column="9">ULONG</name></type> ( <name pos:line="17043" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17043" pos:column="35">*</type:modifier><name pos:line="17043" pos:column="36">Release</name> )<parameter_list pos:line="17043" pos:column="45">( 
            <param><decl><type><name pos:line="17044" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17044" pos:column="37">*</type:modifier></type> <name pos:line="17044" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17046" pos:column="9">HRESULT</name></type> ( <name pos:line="17046" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17046" pos:column="37">*</type:modifier><name pos:line="17046" pos:column="38">GetFileName</name> )<parameter_list pos:line="17046" pos:column="51">( 
            <param><decl><type><name pos:line="17047" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17047" pos:column="37">*</type:modifier></type> <name pos:line="17047" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17048" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17048" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17048" pos:column="46">BSTR</name> <type:modifier pos:line="17048" pos:column="51">*</type:modifier></type><name pos:line="17048" pos:column="52">pbstrFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17050" pos:column="9">HRESULT</name></type> ( <name pos:line="17050" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17050" pos:column="37">*</type:modifier><name pos:line="17050" pos:column="38">GetDocument</name> )<parameter_list pos:line="17050" pos:column="51">( 
            <param><decl><type><name pos:line="17051" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17051" pos:column="37">*</type:modifier></type> <name pos:line="17051" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17052" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17052" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17052" pos:column="46">IDebugDocument2</name> <type:modifier pos:line="17052" pos:column="62">*</type:modifier><type:modifier pos:line="17052" pos:column="63">*</type:modifier></type><name pos:line="17052" pos:column="64">ppDoc</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17054" pos:column="9">HRESULT</name></type> ( <name pos:line="17054" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17054" pos:column="37">*</type:modifier><name pos:line="17054" pos:column="38">IsPositionInDocument</name> )<parameter_list pos:line="17054" pos:column="60">( 
            <param><decl><type><name pos:line="17055" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17055" pos:column="37">*</type:modifier></type> <name pos:line="17055" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17056" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17056" pos:column="24">__RPC__in_opt</name> <name pos:line="17056" pos:column="38">IDebugDocument2</name> <type:modifier pos:line="17056" pos:column="54">*</type:modifier></type><name pos:line="17056" pos:column="55">pDoc</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17058" pos:column="9">HRESULT</name></type> ( <name pos:line="17058" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17058" pos:column="37">*</type:modifier><name pos:line="17058" pos:column="38">GetRange</name> )<parameter_list pos:line="17058" pos:column="48">( 
            <param><decl><type><name pos:line="17059" pos:column="13">IDebugDocumentPosition2</name> <type:modifier pos:line="17059" pos:column="37">*</type:modifier></type> <name pos:line="17059" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17060" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="17060" pos:column="35">__RPC__inout_opt</name> <name pos:line="17060" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="17060" pos:column="66">*</type:modifier></type><name pos:line="17060" pos:column="67">pBegPosition</name></decl></param>,
            <comment type="block" pos:line="17061" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="17061" pos:column="35">__RPC__inout_opt</name> <name pos:line="17061" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="17061" pos:column="66">*</type:modifier></type><name pos:line="17061" pos:column="67">pEndPosition</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17063" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17064" pos:column="7">IDebugDocumentPosition2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17066" pos:column="5">interface</name></type> <name pos:line="17066" pos:column="15">IDebugDocumentPosition2</name>
    <argument_list pos:line="17067" pos:column="5">{
        <argument><expr><name pos:line="17068" pos:column="9">CONST_VTBL</name> struct <name pos:line="17068" pos:column="27">IDebugDocumentPosition2Vtbl</name> <op:operator pos:line="17068" pos:column="55">*</op:operator><name pos:line="17068" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17073" pos:column="1">#<cpp:directive pos:line="17073" pos:column="2">ifdef</cpp:directive> <name pos:line="17073" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17076" pos:column="1">#<cpp:directive pos:line="17076" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17076" pos:column="9">IDebugDocumentPosition2_QueryInterface</name><parameter_list pos:line="17076" pos:column="47">(<param><type><name pos:line="17076" pos:column="48">This</name></type></param>,<param><type><name pos:line="17076" pos:column="53">riid</name></type></param>,<param><type><name pos:line="17076" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17077" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17079" pos:column="1">#<cpp:directive pos:line="17079" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17079" pos:column="9">IDebugDocumentPosition2_AddRef</name><parameter_list pos:line="17079" pos:column="39">(<param><type><name pos:line="17079" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17080" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17082" pos:column="1">#<cpp:directive pos:line="17082" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17082" pos:column="9">IDebugDocumentPosition2_Release</name><parameter_list pos:line="17082" pos:column="40">(<param><type><name pos:line="17082" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17083" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17086" pos:column="1">#<cpp:directive pos:line="17086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17086" pos:column="9">IDebugDocumentPosition2_GetFileName</name><parameter_list pos:line="17086" pos:column="44">(<param><type><name pos:line="17086" pos:column="45">This</name></type></param>,<param><type><name pos:line="17086" pos:column="50">pbstrFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17087" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileName(This,pbstrFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="17089" pos:column="1">#<cpp:directive pos:line="17089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17089" pos:column="9">IDebugDocumentPosition2_GetDocument</name><parameter_list pos:line="17089" pos:column="44">(<param><type><name pos:line="17089" pos:column="45">This</name></type></param>,<param><type><name pos:line="17089" pos:column="50">ppDoc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17090" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocument(This,ppDoc) )</cpp:value></cpp:define> 

<cpp:define pos:line="17092" pos:column="1">#<cpp:directive pos:line="17092" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17092" pos:column="9">IDebugDocumentPosition2_IsPositionInDocument</name><parameter_list pos:line="17092" pos:column="53">(<param><type><name pos:line="17092" pos:column="54">This</name></type></param>,<param><type><name pos:line="17092" pos:column="59">pDoc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17093" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsPositionInDocument(This,pDoc) )</cpp:value></cpp:define> 

<cpp:define pos:line="17095" pos:column="1">#<cpp:directive pos:line="17095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17095" pos:column="9">IDebugDocumentPosition2_GetRange</name><parameter_list pos:line="17095" pos:column="41">(<param><type><name pos:line="17095" pos:column="42">This</name></type></param>,<param><type><name pos:line="17095" pos:column="47">pBegPosition</name></type></param>,<param><type><name pos:line="17095" pos:column="60">pEndPosition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17096" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRange(This,pBegPosition,pEndPosition) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17098" pos:column="1">#<cpp:directive pos:line="17098" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17098" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17101" pos:column="1">#<cpp:directive pos:line="17101" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17101" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17106" pos:column="1">#<cpp:directive pos:line="17106" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17106" pos:column="9">/* __IDebugDocumentPosition2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17109" pos:column="1">#<cpp:directive pos:line="17109" pos:column="2">ifndef</cpp:directive> <name pos:line="17109" pos:column="9">__IDebugDocumentPositionOffset2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17110" pos:column="1">#<cpp:directive pos:line="17110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17110" pos:column="9">__IDebugDocumentPositionOffset2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17112" pos:column="1">/* interface IDebugDocumentPositionOffset2 */</comment>
<comment type="block" pos:line="17113" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17116" pos:column="1">EXTERN_C</name> <specifier pos:line="17116" pos:column="10">const</specifier> <name pos:line="17116" pos:column="16">IID</name></type> <name pos:line="17116" pos:column="20">IID_IDebugDocumentPositionOffset2</name></decl>;</decl_stmt>

<cpp:if pos:line="17118" pos:column="1">#<cpp:directive pos:line="17118" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17118" pos:column="5">defined</name><argument_list pos:line="17118" pos:column="12">(<argument><expr><name pos:line="17118" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17118" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17118" pos:column="29">!</op:operator><call><name pos:line="17118" pos:column="30">defined</name><argument_list pos:line="17118" pos:column="37">(<argument><expr><name pos:line="17118" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17120" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17120" pos:column="19">(<argument pos:line="17120" pos:column="20">"037edd0f-8551-4f7f-8ca0-04d9e29f532d"</argument>)</argument_list></macro>
    <label><name pos:line="17121" pos:column="5">IDebugDocumentPositionOffset2</name> :</label> <expr_stmt><expr pos:line="17121" pos:column="37">public <name pos:line="17121" pos:column="44">IUnknown</name>
    <block pos:line="17122" pos:column="5">{
    <expr pos:line="17123" pos:column="5">public<op:operator pos:line="17123" pos:column="11">:</op:operator>
        virtual <name pos:line="17124" pos:column="17">HRESULT</name> <name pos:line="17124" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17124" pos:column="43">GetRange</name><argument_list pos:line="17124" pos:column="51">( 
            <comment type="block" pos:line="17125" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="17125" pos:column="35">__RPC__inout_opt DWORD *pdwBegOffset</argument>,
            <comment type="block" pos:line="17126" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="17126" pos:column="35">__RPC__inout_opt DWORD *pdwEndOffset</argument>)</argument_list></macro> <op:operator pos:line="17126" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="17126" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17130" pos:column="1">#<cpp:directive pos:line="17130" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17130" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17132" pos:column="5">typedef <type><struct pos:line="17132" pos:column="13">struct <name pos:line="17132" pos:column="20">IDebugDocumentPositionOffset2Vtbl</name>
    <block pos:line="17133" pos:column="5">{<public type="default" pos:line="17133" pos:column="6">
        <function_decl><type><name pos:line="17134" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17136" pos:column="9">HRESULT</name></type> ( <name pos:line="17136" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17136" pos:column="37">*</type:modifier><name pos:line="17136" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17136" pos:column="54">( 
            <param><decl><type><name pos:line="17137" pos:column="13">IDebugDocumentPositionOffset2</name> <type:modifier pos:line="17137" pos:column="43">*</type:modifier></type> <name pos:line="17137" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="17138" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17138" pos:column="24">__RPC__in</name> <name pos:line="17138" pos:column="34">REFIID</name></type> <name pos:line="17138" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17139" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17140" pos:column="13">__RPC__deref_out</name>  <name pos:line="17140" pos:column="31">void</name> <type:modifier pos:line="17140" pos:column="36">*</type:modifier><type:modifier pos:line="17140" pos:column="37">*</type:modifier></type><name pos:line="17140" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17142" pos:column="9">ULONG</name></type> ( <name pos:line="17142" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17142" pos:column="35">*</type:modifier><name pos:line="17142" pos:column="36">AddRef</name> )<parameter_list pos:line="17142" pos:column="44">( 
            <param><decl><type><name pos:line="17143" pos:column="13">IDebugDocumentPositionOffset2</name> <type:modifier pos:line="17143" pos:column="43">*</type:modifier></type> <name pos:line="17143" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17145" pos:column="9">ULONG</name></type> ( <name pos:line="17145" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17145" pos:column="35">*</type:modifier><name pos:line="17145" pos:column="36">Release</name> )<parameter_list pos:line="17145" pos:column="45">( 
            <param><decl><type><name pos:line="17146" pos:column="13">IDebugDocumentPositionOffset2</name> <type:modifier pos:line="17146" pos:column="43">*</type:modifier></type> <name pos:line="17146" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17148" pos:column="9">HRESULT</name></type> ( <name pos:line="17148" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17148" pos:column="37">*</type:modifier><name pos:line="17148" pos:column="38">GetRange</name> )<parameter_list pos:line="17148" pos:column="48">( 
            <param><decl><type><name pos:line="17149" pos:column="13">IDebugDocumentPositionOffset2</name> <type:modifier pos:line="17149" pos:column="43">*</type:modifier></type> <name pos:line="17149" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="17150" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="17150" pos:column="35">__RPC__inout_opt</name> <name pos:line="17150" pos:column="52">DWORD</name> <type:modifier pos:line="17150" pos:column="58">*</type:modifier></type><name pos:line="17150" pos:column="59">pdwBegOffset</name></decl></param>,
            <comment type="block" pos:line="17151" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="17151" pos:column="35">__RPC__inout_opt</name> <name pos:line="17151" pos:column="52">DWORD</name> <type:modifier pos:line="17151" pos:column="58">*</type:modifier></type><name pos:line="17151" pos:column="59">pdwEndOffset</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17153" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17154" pos:column="7">IDebugDocumentPositionOffset2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17156" pos:column="5">interface</name></type> <name pos:line="17156" pos:column="15">IDebugDocumentPositionOffset2</name>
    <argument_list pos:line="17157" pos:column="5">{
        <argument><expr><name pos:line="17158" pos:column="9">CONST_VTBL</name> struct <name pos:line="17158" pos:column="27">IDebugDocumentPositionOffset2Vtbl</name> <op:operator pos:line="17158" pos:column="61">*</op:operator><name pos:line="17158" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17163" pos:column="1">#<cpp:directive pos:line="17163" pos:column="2">ifdef</cpp:directive> <name pos:line="17163" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17166" pos:column="1">#<cpp:directive pos:line="17166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17166" pos:column="9">IDebugDocumentPositionOffset2_QueryInterface</name><parameter_list pos:line="17166" pos:column="53">(<param><type><name pos:line="17166" pos:column="54">This</name></type></param>,<param><type><name pos:line="17166" pos:column="59">riid</name></type></param>,<param><type><name pos:line="17166" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17167" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17169" pos:column="1">#<cpp:directive pos:line="17169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17169" pos:column="9">IDebugDocumentPositionOffset2_AddRef</name><parameter_list pos:line="17169" pos:column="45">(<param><type><name pos:line="17169" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17170" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17172" pos:column="1">#<cpp:directive pos:line="17172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17172" pos:column="9">IDebugDocumentPositionOffset2_Release</name><parameter_list pos:line="17172" pos:column="46">(<param><type><name pos:line="17172" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17173" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17176" pos:column="1">#<cpp:directive pos:line="17176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17176" pos:column="9">IDebugDocumentPositionOffset2_GetRange</name><parameter_list pos:line="17176" pos:column="47">(<param><type><name pos:line="17176" pos:column="48">This</name></type></param>,<param><type><name pos:line="17176" pos:column="53">pdwBegOffset</name></type></param>,<param><type><name pos:line="17176" pos:column="66">pdwEndOffset</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17177" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRange(This,pdwBegOffset,pdwEndOffset) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17179" pos:column="1">#<cpp:directive pos:line="17179" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17179" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17182" pos:column="1">#<cpp:directive pos:line="17182" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17182" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17187" pos:column="1">#<cpp:directive pos:line="17187" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17187" pos:column="9">/* __IDebugDocumentPositionOffset2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17190" pos:column="1">#<cpp:directive pos:line="17190" pos:column="2">ifndef</cpp:directive> <name pos:line="17190" pos:column="9">__IDebugFunctionPosition2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17191" pos:column="1">#<cpp:directive pos:line="17191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17191" pos:column="9">__IDebugFunctionPosition2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17193" pos:column="1">/* interface IDebugFunctionPosition2 */</comment>
<comment type="block" pos:line="17194" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17197" pos:column="1">EXTERN_C</name> <specifier pos:line="17197" pos:column="10">const</specifier> <name pos:line="17197" pos:column="16">IID</name></type> <name pos:line="17197" pos:column="20">IID_IDebugFunctionPosition2</name></decl>;</decl_stmt>

<cpp:if pos:line="17199" pos:column="1">#<cpp:directive pos:line="17199" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17199" pos:column="5">defined</name><argument_list pos:line="17199" pos:column="12">(<argument><expr><name pos:line="17199" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17199" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17199" pos:column="29">!</op:operator><call><name pos:line="17199" pos:column="30">defined</name><argument_list pos:line="17199" pos:column="37">(<argument><expr><name pos:line="17199" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17201" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17201" pos:column="19">(<argument pos:line="17201" pos:column="20">"1ede3b4b-35e7-4b97-8133-02845d600174"</argument>)</argument_list></macro>
    <label><name pos:line="17202" pos:column="5">IDebugFunctionPosition2</name> :</label> <expr_stmt><expr pos:line="17202" pos:column="31">public <name pos:line="17202" pos:column="38">IUnknown</name>
    <block pos:line="17203" pos:column="5">{
    <expr pos:line="17204" pos:column="5">public<op:operator pos:line="17204" pos:column="11">:</op:operator>
        virtual <name pos:line="17205" pos:column="17">HRESULT</name> <name pos:line="17205" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17205" pos:column="43">GetFunctionName</name><argument_list pos:line="17205" pos:column="58">( 
            <comment type="block" pos:line="17206" pos:column="13">/* [out] */</comment> <argument pos:line="17206" pos:column="25">__RPC__deref_out_opt BSTR *pbstrFunctionName</argument>)</argument_list></macro> <op:operator pos:line="17206" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="17206" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="17208" pos:column="9">virtual <name pos:line="17208" pos:column="17">HRESULT</name> <name pos:line="17208" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17208" pos:column="43">GetOffset</name><argument_list pos:line="17208" pos:column="52">( 
            <comment type="block" pos:line="17209" pos:column="13">/* [full][out][in] */</comment> <argument pos:line="17209" pos:column="35">__RPC__inout_opt TEXT_POSITION *pPosition</argument>)</argument_list></macro> <op:operator pos:line="17209" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="17209" pos:column="80">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17213" pos:column="1">#<cpp:directive pos:line="17213" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17213" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17215" pos:column="5">typedef <type><struct pos:line="17215" pos:column="13">struct <name pos:line="17215" pos:column="20">IDebugFunctionPosition2Vtbl</name>
    <block pos:line="17216" pos:column="5">{<public type="default" pos:line="17216" pos:column="6">
        <function_decl><type><name pos:line="17217" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17219" pos:column="9">HRESULT</name></type> ( <name pos:line="17219" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17219" pos:column="37">*</type:modifier><name pos:line="17219" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17219" pos:column="54">( 
            <param><decl><type><name pos:line="17220" pos:column="13">IDebugFunctionPosition2</name> <type:modifier pos:line="17220" pos:column="37">*</type:modifier></type> <name pos:line="17220" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17221" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17221" pos:column="24">__RPC__in</name> <name pos:line="17221" pos:column="34">REFIID</name></type> <name pos:line="17221" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17222" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17223" pos:column="13">__RPC__deref_out</name>  <name pos:line="17223" pos:column="31">void</name> <type:modifier pos:line="17223" pos:column="36">*</type:modifier><type:modifier pos:line="17223" pos:column="37">*</type:modifier></type><name pos:line="17223" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17225" pos:column="9">ULONG</name></type> ( <name pos:line="17225" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17225" pos:column="35">*</type:modifier><name pos:line="17225" pos:column="36">AddRef</name> )<parameter_list pos:line="17225" pos:column="44">( 
            <param><decl><type><name pos:line="17226" pos:column="13">IDebugFunctionPosition2</name> <type:modifier pos:line="17226" pos:column="37">*</type:modifier></type> <name pos:line="17226" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17228" pos:column="9">ULONG</name></type> ( <name pos:line="17228" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17228" pos:column="35">*</type:modifier><name pos:line="17228" pos:column="36">Release</name> )<parameter_list pos:line="17228" pos:column="45">( 
            <param><decl><type><name pos:line="17229" pos:column="13">IDebugFunctionPosition2</name> <type:modifier pos:line="17229" pos:column="37">*</type:modifier></type> <name pos:line="17229" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17231" pos:column="9">HRESULT</name></type> ( <name pos:line="17231" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17231" pos:column="37">*</type:modifier><name pos:line="17231" pos:column="38">GetFunctionName</name> )<parameter_list pos:line="17231" pos:column="55">( 
            <param><decl><type><name pos:line="17232" pos:column="13">IDebugFunctionPosition2</name> <type:modifier pos:line="17232" pos:column="37">*</type:modifier></type> <name pos:line="17232" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17233" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17233" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17233" pos:column="46">BSTR</name> <type:modifier pos:line="17233" pos:column="51">*</type:modifier></type><name pos:line="17233" pos:column="52">pbstrFunctionName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17235" pos:column="9">HRESULT</name></type> ( <name pos:line="17235" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17235" pos:column="37">*</type:modifier><name pos:line="17235" pos:column="38">GetOffset</name> )<parameter_list pos:line="17235" pos:column="49">( 
            <param><decl><type><name pos:line="17236" pos:column="13">IDebugFunctionPosition2</name> <type:modifier pos:line="17236" pos:column="37">*</type:modifier></type> <name pos:line="17236" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="17237" pos:column="13">/* [full][out][in] */</comment> <param><decl><type><name pos:line="17237" pos:column="35">__RPC__inout_opt</name> <name pos:line="17237" pos:column="52">TEXT_POSITION</name> <type:modifier pos:line="17237" pos:column="66">*</type:modifier></type><name pos:line="17237" pos:column="67">pPosition</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17239" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17240" pos:column="7">IDebugFunctionPosition2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17242" pos:column="5">interface</name></type> <name pos:line="17242" pos:column="15">IDebugFunctionPosition2</name>
    <argument_list pos:line="17243" pos:column="5">{
        <argument><expr><name pos:line="17244" pos:column="9">CONST_VTBL</name> struct <name pos:line="17244" pos:column="27">IDebugFunctionPosition2Vtbl</name> <op:operator pos:line="17244" pos:column="55">*</op:operator><name pos:line="17244" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17249" pos:column="1">#<cpp:directive pos:line="17249" pos:column="2">ifdef</cpp:directive> <name pos:line="17249" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17252" pos:column="1">#<cpp:directive pos:line="17252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17252" pos:column="9">IDebugFunctionPosition2_QueryInterface</name><parameter_list pos:line="17252" pos:column="47">(<param><type><name pos:line="17252" pos:column="48">This</name></type></param>,<param><type><name pos:line="17252" pos:column="53">riid</name></type></param>,<param><type><name pos:line="17252" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17253" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17255" pos:column="1">#<cpp:directive pos:line="17255" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17255" pos:column="9">IDebugFunctionPosition2_AddRef</name><parameter_list pos:line="17255" pos:column="39">(<param><type><name pos:line="17255" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17256" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17258" pos:column="1">#<cpp:directive pos:line="17258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17258" pos:column="9">IDebugFunctionPosition2_Release</name><parameter_list pos:line="17258" pos:column="40">(<param><type><name pos:line="17258" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17259" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17262" pos:column="1">#<cpp:directive pos:line="17262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17262" pos:column="9">IDebugFunctionPosition2_GetFunctionName</name><parameter_list pos:line="17262" pos:column="48">(<param><type><name pos:line="17262" pos:column="49">This</name></type></param>,<param><type><name pos:line="17262" pos:column="54">pbstrFunctionName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17263" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFunctionName(This,pbstrFunctionName) )</cpp:value></cpp:define> 

<cpp:define pos:line="17265" pos:column="1">#<cpp:directive pos:line="17265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17265" pos:column="9">IDebugFunctionPosition2_GetOffset</name><parameter_list pos:line="17265" pos:column="42">(<param><type><name pos:line="17265" pos:column="43">This</name></type></param>,<param><type><name pos:line="17265" pos:column="48">pPosition</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17266" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetOffset(This,pPosition) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17268" pos:column="1">#<cpp:directive pos:line="17268" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17268" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17271" pos:column="1">#<cpp:directive pos:line="17271" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17271" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17276" pos:column="1">#<cpp:directive pos:line="17276" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17276" pos:column="9">/* __IDebugFunctionPosition2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17279" pos:column="1">#<cpp:directive pos:line="17279" pos:column="2">ifndef</cpp:directive> <name pos:line="17279" pos:column="9">__IDebugDocumentTextEvents2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17280" pos:column="1">#<cpp:directive pos:line="17280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17280" pos:column="9">__IDebugDocumentTextEvents2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17282" pos:column="1">/* interface IDebugDocumentTextEvents2 */</comment>
<comment type="block" pos:line="17283" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="17285" pos:column="1">typedef <type><name pos:line="17285" pos:column="9">DWORD</name></type> <name pos:line="17285" pos:column="15">TEXT_DOC_ATTR_2</name>;</typedef>

<cpp:define pos:line="17287" pos:column="1">#<cpp:directive pos:line="17287" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="17287" pos:column="9">TEXT_DOC_ATTR_READONLY_2</name></cpp:macro>	<cpp:value pos:line="17287" pos:column="41">( 0x1 )</cpp:value></cpp:define>


<decl_stmt><decl><type><name pos:line="17290" pos:column="1">EXTERN_C</name> <specifier pos:line="17290" pos:column="10">const</specifier> <name pos:line="17290" pos:column="16">IID</name></type> <name pos:line="17290" pos:column="20">IID_IDebugDocumentTextEvents2</name></decl>;</decl_stmt>

<cpp:if pos:line="17292" pos:column="1">#<cpp:directive pos:line="17292" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17292" pos:column="5">defined</name><argument_list pos:line="17292" pos:column="12">(<argument><expr><name pos:line="17292" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17292" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17292" pos:column="29">!</op:operator><call><name pos:line="17292" pos:column="30">defined</name><argument_list pos:line="17292" pos:column="37">(<argument><expr><name pos:line="17292" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17294" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17294" pos:column="19">(<argument pos:line="17294" pos:column="20">"33ec72e3-002f-4966-b91c-5ce2f7ba5124"</argument>)</argument_list></macro>
    <label><name pos:line="17295" pos:column="5">IDebugDocumentTextEvents2</name> :</label> <expr_stmt><expr pos:line="17295" pos:column="33">public <name pos:line="17295" pos:column="40">IUnknown</name>
    <block pos:line="17296" pos:column="5">{
    <expr pos:line="17297" pos:column="5">public<op:operator pos:line="17297" pos:column="11">:</op:operator>
        virtual <name pos:line="17298" pos:column="17">HRESULT</name> <name pos:line="17298" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="17298" pos:column="43">onDestroy</name><argument_list pos:line="17298" pos:column="52">( <argument><expr><name pos:line="17298" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="17298" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="17298" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="17300" pos:column="9">virtual <name pos:line="17300" pos:column="17">HRESULT</name> <name pos:line="17300" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17300" pos:column="43">onInsertText</name><argument_list pos:line="17300" pos:column="55">( 
            <comment type="block" pos:line="17301" pos:column="13">/* [in] */</comment> <argument pos:line="17301" pos:column="24">TEXT_POSITION pos</argument>,
            <comment type="block" pos:line="17302" pos:column="13">/* [in] */</comment> <argument pos:line="17302" pos:column="24">DWORD dwNumToInsert</argument>)</argument_list></macro> <op:operator pos:line="17302" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="17302" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="17304" pos:column="9">virtual <name pos:line="17304" pos:column="17">HRESULT</name> <name pos:line="17304" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17304" pos:column="43">onRemoveText</name><argument_list pos:line="17304" pos:column="55">( 
            <comment type="block" pos:line="17305" pos:column="13">/* [in] */</comment> <argument pos:line="17305" pos:column="24">TEXT_POSITION pos</argument>,
            <comment type="block" pos:line="17306" pos:column="13">/* [in] */</comment> <argument pos:line="17306" pos:column="24">DWORD dwNumToRemove</argument>)</argument_list></macro> <op:operator pos:line="17306" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="17306" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="17308" pos:column="9">virtual <name pos:line="17308" pos:column="17">HRESULT</name> <name pos:line="17308" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17308" pos:column="43">onReplaceText</name><argument_list pos:line="17308" pos:column="56">( 
            <comment type="block" pos:line="17309" pos:column="13">/* [in] */</comment> <argument pos:line="17309" pos:column="24">TEXT_POSITION pos</argument>,
            <comment type="block" pos:line="17310" pos:column="13">/* [in] */</comment> <argument pos:line="17310" pos:column="24">DWORD dwNumToReplace</argument>)</argument_list></macro> <op:operator pos:line="17310" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="17310" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="17312" pos:column="9">virtual <name pos:line="17312" pos:column="17">HRESULT</name> <name pos:line="17312" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17312" pos:column="43">onUpdateTextAttributes</name><argument_list pos:line="17312" pos:column="65">( 
            <comment type="block" pos:line="17313" pos:column="13">/* [in] */</comment> <argument pos:line="17313" pos:column="24">TEXT_POSITION pos</argument>,
            <comment type="block" pos:line="17314" pos:column="13">/* [in] */</comment> <argument pos:line="17314" pos:column="24">DWORD dwNumToUpdate</argument>)</argument_list></macro> <op:operator pos:line="17314" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="17314" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="17316" pos:column="9">virtual <name pos:line="17316" pos:column="17">HRESULT</name> <name pos:line="17316" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17316" pos:column="43">onUpdateDocumentAttributes</name><argument_list pos:line="17316" pos:column="69">( 
            <comment type="block" pos:line="17317" pos:column="13">/* [in] */</comment> <argument pos:line="17317" pos:column="24">TEXT_DOC_ATTR_2 textdocattr</argument>)</argument_list></macro> <op:operator pos:line="17317" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="17317" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17321" pos:column="1">#<cpp:directive pos:line="17321" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17321" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17323" pos:column="5">typedef <type><struct pos:line="17323" pos:column="13">struct <name pos:line="17323" pos:column="20">IDebugDocumentTextEvents2Vtbl</name>
    <block pos:line="17324" pos:column="5">{<public type="default" pos:line="17324" pos:column="6">
        <function_decl><type><name pos:line="17325" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17327" pos:column="9">HRESULT</name></type> ( <name pos:line="17327" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17327" pos:column="37">*</type:modifier><name pos:line="17327" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17327" pos:column="54">( 
            <param><decl><type><name pos:line="17328" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17328" pos:column="39">*</type:modifier></type> <name pos:line="17328" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="17329" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17329" pos:column="24">__RPC__in</name> <name pos:line="17329" pos:column="34">REFIID</name></type> <name pos:line="17329" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17330" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17331" pos:column="13">__RPC__deref_out</name>  <name pos:line="17331" pos:column="31">void</name> <type:modifier pos:line="17331" pos:column="36">*</type:modifier><type:modifier pos:line="17331" pos:column="37">*</type:modifier></type><name pos:line="17331" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17333" pos:column="9">ULONG</name></type> ( <name pos:line="17333" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17333" pos:column="35">*</type:modifier><name pos:line="17333" pos:column="36">AddRef</name> )<parameter_list pos:line="17333" pos:column="44">( 
            <param><decl><type><name pos:line="17334" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17334" pos:column="39">*</type:modifier></type> <name pos:line="17334" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17336" pos:column="9">ULONG</name></type> ( <name pos:line="17336" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17336" pos:column="35">*</type:modifier><name pos:line="17336" pos:column="36">Release</name> )<parameter_list pos:line="17336" pos:column="45">( 
            <param><decl><type><name pos:line="17337" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17337" pos:column="39">*</type:modifier></type> <name pos:line="17337" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17339" pos:column="9">HRESULT</name></type> ( <name pos:line="17339" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17339" pos:column="37">*</type:modifier><name pos:line="17339" pos:column="38">onDestroy</name> )<parameter_list pos:line="17339" pos:column="49">( 
            <param><decl><type><name pos:line="17340" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17340" pos:column="39">*</type:modifier></type> <name pos:line="17340" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17342" pos:column="9">HRESULT</name></type> ( <name pos:line="17342" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17342" pos:column="37">*</type:modifier><name pos:line="17342" pos:column="38">onInsertText</name> )<parameter_list pos:line="17342" pos:column="52">( 
            <param><decl><type><name pos:line="17343" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17343" pos:column="39">*</type:modifier></type> <name pos:line="17343" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="17344" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17344" pos:column="24">TEXT_POSITION</name></type> <name pos:line="17344" pos:column="38">pos</name></decl></param>,
            <comment type="block" pos:line="17345" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17345" pos:column="24">DWORD</name></type> <name pos:line="17345" pos:column="30">dwNumToInsert</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17347" pos:column="9">HRESULT</name></type> ( <name pos:line="17347" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17347" pos:column="37">*</type:modifier><name pos:line="17347" pos:column="38">onRemoveText</name> )<parameter_list pos:line="17347" pos:column="52">( 
            <param><decl><type><name pos:line="17348" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17348" pos:column="39">*</type:modifier></type> <name pos:line="17348" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="17349" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17349" pos:column="24">TEXT_POSITION</name></type> <name pos:line="17349" pos:column="38">pos</name></decl></param>,
            <comment type="block" pos:line="17350" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17350" pos:column="24">DWORD</name></type> <name pos:line="17350" pos:column="30">dwNumToRemove</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17352" pos:column="9">HRESULT</name></type> ( <name pos:line="17352" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17352" pos:column="37">*</type:modifier><name pos:line="17352" pos:column="38">onReplaceText</name> )<parameter_list pos:line="17352" pos:column="53">( 
            <param><decl><type><name pos:line="17353" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17353" pos:column="39">*</type:modifier></type> <name pos:line="17353" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="17354" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17354" pos:column="24">TEXT_POSITION</name></type> <name pos:line="17354" pos:column="38">pos</name></decl></param>,
            <comment type="block" pos:line="17355" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17355" pos:column="24">DWORD</name></type> <name pos:line="17355" pos:column="30">dwNumToReplace</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17357" pos:column="9">HRESULT</name></type> ( <name pos:line="17357" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17357" pos:column="37">*</type:modifier><name pos:line="17357" pos:column="38">onUpdateTextAttributes</name> )<parameter_list pos:line="17357" pos:column="62">( 
            <param><decl><type><name pos:line="17358" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17358" pos:column="39">*</type:modifier></type> <name pos:line="17358" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="17359" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17359" pos:column="24">TEXT_POSITION</name></type> <name pos:line="17359" pos:column="38">pos</name></decl></param>,
            <comment type="block" pos:line="17360" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17360" pos:column="24">DWORD</name></type> <name pos:line="17360" pos:column="30">dwNumToUpdate</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17362" pos:column="9">HRESULT</name></type> ( <name pos:line="17362" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17362" pos:column="37">*</type:modifier><name pos:line="17362" pos:column="38">onUpdateDocumentAttributes</name> )<parameter_list pos:line="17362" pos:column="66">( 
            <param><decl><type><name pos:line="17363" pos:column="13">IDebugDocumentTextEvents2</name> <type:modifier pos:line="17363" pos:column="39">*</type:modifier></type> <name pos:line="17363" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="17364" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17364" pos:column="24">TEXT_DOC_ATTR_2</name></type> <name pos:line="17364" pos:column="40">textdocattr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17366" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17367" pos:column="7">IDebugDocumentTextEvents2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17369" pos:column="5">interface</name></type> <name pos:line="17369" pos:column="15">IDebugDocumentTextEvents2</name>
    <argument_list pos:line="17370" pos:column="5">{
        <argument><expr><name pos:line="17371" pos:column="9">CONST_VTBL</name> struct <name pos:line="17371" pos:column="27">IDebugDocumentTextEvents2Vtbl</name> <op:operator pos:line="17371" pos:column="57">*</op:operator><name pos:line="17371" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17376" pos:column="1">#<cpp:directive pos:line="17376" pos:column="2">ifdef</cpp:directive> <name pos:line="17376" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17379" pos:column="1">#<cpp:directive pos:line="17379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17379" pos:column="9">IDebugDocumentTextEvents2_QueryInterface</name><parameter_list pos:line="17379" pos:column="49">(<param><type><name pos:line="17379" pos:column="50">This</name></type></param>,<param><type><name pos:line="17379" pos:column="55">riid</name></type></param>,<param><type><name pos:line="17379" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17380" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17382" pos:column="1">#<cpp:directive pos:line="17382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17382" pos:column="9">IDebugDocumentTextEvents2_AddRef</name><parameter_list pos:line="17382" pos:column="41">(<param><type><name pos:line="17382" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17383" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17385" pos:column="1">#<cpp:directive pos:line="17385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17385" pos:column="9">IDebugDocumentTextEvents2_Release</name><parameter_list pos:line="17385" pos:column="42">(<param><type><name pos:line="17385" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17386" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17389" pos:column="1">#<cpp:directive pos:line="17389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17389" pos:column="9">IDebugDocumentTextEvents2_onDestroy</name><parameter_list pos:line="17389" pos:column="44">(<param><type><name pos:line="17389" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17390" pos:column="5">( (This)-&gt;lpVtbl -&gt; onDestroy(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17392" pos:column="1">#<cpp:directive pos:line="17392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17392" pos:column="9">IDebugDocumentTextEvents2_onInsertText</name><parameter_list pos:line="17392" pos:column="47">(<param><type><name pos:line="17392" pos:column="48">This</name></type></param>,<param><type><name pos:line="17392" pos:column="53">pos</name></type></param>,<param><type><name pos:line="17392" pos:column="57">dwNumToInsert</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17393" pos:column="5">( (This)-&gt;lpVtbl -&gt; onInsertText(This,pos,dwNumToInsert) )</cpp:value></cpp:define> 

<cpp:define pos:line="17395" pos:column="1">#<cpp:directive pos:line="17395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17395" pos:column="9">IDebugDocumentTextEvents2_onRemoveText</name><parameter_list pos:line="17395" pos:column="47">(<param><type><name pos:line="17395" pos:column="48">This</name></type></param>,<param><type><name pos:line="17395" pos:column="53">pos</name></type></param>,<param><type><name pos:line="17395" pos:column="57">dwNumToRemove</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17396" pos:column="5">( (This)-&gt;lpVtbl -&gt; onRemoveText(This,pos,dwNumToRemove) )</cpp:value></cpp:define> 

<cpp:define pos:line="17398" pos:column="1">#<cpp:directive pos:line="17398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17398" pos:column="9">IDebugDocumentTextEvents2_onReplaceText</name><parameter_list pos:line="17398" pos:column="48">(<param><type><name pos:line="17398" pos:column="49">This</name></type></param>,<param><type><name pos:line="17398" pos:column="54">pos</name></type></param>,<param><type><name pos:line="17398" pos:column="58">dwNumToReplace</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17399" pos:column="5">( (This)-&gt;lpVtbl -&gt; onReplaceText(This,pos,dwNumToReplace) )</cpp:value></cpp:define> 

<cpp:define pos:line="17401" pos:column="1">#<cpp:directive pos:line="17401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17401" pos:column="9">IDebugDocumentTextEvents2_onUpdateTextAttributes</name><parameter_list pos:line="17401" pos:column="57">(<param><type><name pos:line="17401" pos:column="58">This</name></type></param>,<param><type><name pos:line="17401" pos:column="63">pos</name></type></param>,<param><type><name pos:line="17401" pos:column="67">dwNumToUpdate</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17402" pos:column="5">( (This)-&gt;lpVtbl -&gt; onUpdateTextAttributes(This,pos,dwNumToUpdate) )</cpp:value></cpp:define> 

<cpp:define pos:line="17404" pos:column="1">#<cpp:directive pos:line="17404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17404" pos:column="9">IDebugDocumentTextEvents2_onUpdateDocumentAttributes</name><parameter_list pos:line="17404" pos:column="61">(<param><type><name pos:line="17404" pos:column="62">This</name></type></param>,<param><type><name pos:line="17404" pos:column="67">textdocattr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17405" pos:column="5">( (This)-&gt;lpVtbl -&gt; onUpdateDocumentAttributes(This,textdocattr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17407" pos:column="1">#<cpp:directive pos:line="17407" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17407" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17410" pos:column="1">#<cpp:directive pos:line="17410" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17410" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17415" pos:column="1">#<cpp:directive pos:line="17415" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17415" pos:column="9">/* __IDebugDocumentTextEvents2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17418" pos:column="1">#<cpp:directive pos:line="17418" pos:column="2">ifndef</cpp:directive> <name pos:line="17418" pos:column="9">__IDebugQueryEngine2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17419" pos:column="1">#<cpp:directive pos:line="17419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17419" pos:column="9">__IDebugQueryEngine2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17421" pos:column="1">/* interface IDebugQueryEngine2 */</comment>
<comment type="block" pos:line="17422" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17425" pos:column="1">EXTERN_C</name> <specifier pos:line="17425" pos:column="10">const</specifier> <name pos:line="17425" pos:column="16">IID</name></type> <name pos:line="17425" pos:column="20">IID_IDebugQueryEngine2</name></decl>;</decl_stmt>

<cpp:if pos:line="17427" pos:column="1">#<cpp:directive pos:line="17427" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17427" pos:column="5">defined</name><argument_list pos:line="17427" pos:column="12">(<argument><expr><name pos:line="17427" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17427" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17427" pos:column="29">!</op:operator><call><name pos:line="17427" pos:column="30">defined</name><argument_list pos:line="17427" pos:column="37">(<argument><expr><name pos:line="17427" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17429" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17429" pos:column="19">(<argument pos:line="17429" pos:column="20">"c989adc9-f305-4ef5-8ca2-20898e8d0e28"</argument>)</argument_list></macro>
    <label><name pos:line="17430" pos:column="5">IDebugQueryEngine2</name> :</label> <expr_stmt><expr pos:line="17430" pos:column="26">public <name pos:line="17430" pos:column="33">IUnknown</name>
    <block pos:line="17431" pos:column="5">{
    <expr pos:line="17432" pos:column="5">public<op:operator pos:line="17432" pos:column="11">:</op:operator>
        virtual <name pos:line="17433" pos:column="17">HRESULT</name> <name pos:line="17433" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17433" pos:column="43">GetEngineInterface</name><argument_list pos:line="17433" pos:column="61">( 
            <comment type="block" pos:line="17434" pos:column="13">/* [out] */</comment> <argument pos:line="17434" pos:column="25">__RPC__deref_out_opt IUnknown **ppUnk</argument>)</argument_list></macro> <op:operator pos:line="17434" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="17434" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17438" pos:column="1">#<cpp:directive pos:line="17438" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17438" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17440" pos:column="5">typedef <type><struct pos:line="17440" pos:column="13">struct <name pos:line="17440" pos:column="20">IDebugQueryEngine2Vtbl</name>
    <block pos:line="17441" pos:column="5">{<public type="default" pos:line="17441" pos:column="6">
        <function_decl><type><name pos:line="17442" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17444" pos:column="9">HRESULT</name></type> ( <name pos:line="17444" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17444" pos:column="37">*</type:modifier><name pos:line="17444" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17444" pos:column="54">( 
            <param><decl><type><name pos:line="17445" pos:column="13">IDebugQueryEngine2</name> <type:modifier pos:line="17445" pos:column="32">*</type:modifier></type> <name pos:line="17445" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="17446" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17446" pos:column="24">__RPC__in</name> <name pos:line="17446" pos:column="34">REFIID</name></type> <name pos:line="17446" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17447" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17448" pos:column="13">__RPC__deref_out</name>  <name pos:line="17448" pos:column="31">void</name> <type:modifier pos:line="17448" pos:column="36">*</type:modifier><type:modifier pos:line="17448" pos:column="37">*</type:modifier></type><name pos:line="17448" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17450" pos:column="9">ULONG</name></type> ( <name pos:line="17450" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17450" pos:column="35">*</type:modifier><name pos:line="17450" pos:column="36">AddRef</name> )<parameter_list pos:line="17450" pos:column="44">( 
            <param><decl><type><name pos:line="17451" pos:column="13">IDebugQueryEngine2</name> <type:modifier pos:line="17451" pos:column="32">*</type:modifier></type> <name pos:line="17451" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17453" pos:column="9">ULONG</name></type> ( <name pos:line="17453" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17453" pos:column="35">*</type:modifier><name pos:line="17453" pos:column="36">Release</name> )<parameter_list pos:line="17453" pos:column="45">( 
            <param><decl><type><name pos:line="17454" pos:column="13">IDebugQueryEngine2</name> <type:modifier pos:line="17454" pos:column="32">*</type:modifier></type> <name pos:line="17454" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17456" pos:column="9">HRESULT</name></type> ( <name pos:line="17456" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17456" pos:column="37">*</type:modifier><name pos:line="17456" pos:column="38">GetEngineInterface</name> )<parameter_list pos:line="17456" pos:column="58">( 
            <param><decl><type><name pos:line="17457" pos:column="13">IDebugQueryEngine2</name> <type:modifier pos:line="17457" pos:column="32">*</type:modifier></type> <name pos:line="17457" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="17458" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17458" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17458" pos:column="46">IUnknown</name> <type:modifier pos:line="17458" pos:column="55">*</type:modifier><type:modifier pos:line="17458" pos:column="56">*</type:modifier></type><name pos:line="17458" pos:column="57">ppUnk</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17460" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17461" pos:column="7">IDebugQueryEngine2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17463" pos:column="5">interface</name></type> <name pos:line="17463" pos:column="15">IDebugQueryEngine2</name>
    <argument_list pos:line="17464" pos:column="5">{
        <argument><expr><name pos:line="17465" pos:column="9">CONST_VTBL</name> struct <name pos:line="17465" pos:column="27">IDebugQueryEngine2Vtbl</name> <op:operator pos:line="17465" pos:column="50">*</op:operator><name pos:line="17465" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17470" pos:column="1">#<cpp:directive pos:line="17470" pos:column="2">ifdef</cpp:directive> <name pos:line="17470" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17473" pos:column="1">#<cpp:directive pos:line="17473" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17473" pos:column="9">IDebugQueryEngine2_QueryInterface</name><parameter_list pos:line="17473" pos:column="42">(<param><type><name pos:line="17473" pos:column="43">This</name></type></param>,<param><type><name pos:line="17473" pos:column="48">riid</name></type></param>,<param><type><name pos:line="17473" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17474" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17476" pos:column="1">#<cpp:directive pos:line="17476" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17476" pos:column="9">IDebugQueryEngine2_AddRef</name><parameter_list pos:line="17476" pos:column="34">(<param><type><name pos:line="17476" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17477" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17479" pos:column="1">#<cpp:directive pos:line="17479" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17479" pos:column="9">IDebugQueryEngine2_Release</name><parameter_list pos:line="17479" pos:column="35">(<param><type><name pos:line="17479" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17480" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17483" pos:column="1">#<cpp:directive pos:line="17483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17483" pos:column="9">IDebugQueryEngine2_GetEngineInterface</name><parameter_list pos:line="17483" pos:column="46">(<param><type><name pos:line="17483" pos:column="47">This</name></type></param>,<param><type><name pos:line="17483" pos:column="52">ppUnk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17484" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEngineInterface(This,ppUnk) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17486" pos:column="1">#<cpp:directive pos:line="17486" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17486" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17489" pos:column="1">#<cpp:directive pos:line="17489" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17489" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17494" pos:column="1">#<cpp:directive pos:line="17494" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17494" pos:column="9">/* __IDebugQueryEngine2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17497" pos:column="1">#<cpp:directive pos:line="17497" pos:column="2">ifndef</cpp:directive> <name pos:line="17497" pos:column="9">__IEEHostServices_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17498" pos:column="1">#<cpp:directive pos:line="17498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17498" pos:column="9">__IEEHostServices_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17500" pos:column="1">/* interface IEEHostServices */</comment>
<comment type="block" pos:line="17501" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17504" pos:column="1">EXTERN_C</name> <specifier pos:line="17504" pos:column="10">const</specifier> <name pos:line="17504" pos:column="16">IID</name></type> <name pos:line="17504" pos:column="20">IID_IEEHostServices</name></decl>;</decl_stmt>

<cpp:if pos:line="17506" pos:column="1">#<cpp:directive pos:line="17506" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17506" pos:column="5">defined</name><argument_list pos:line="17506" pos:column="12">(<argument><expr><name pos:line="17506" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17506" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17506" pos:column="29">!</op:operator><call><name pos:line="17506" pos:column="30">defined</name><argument_list pos:line="17506" pos:column="37">(<argument><expr><name pos:line="17506" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17508" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17508" pos:column="19">(<argument pos:line="17508" pos:column="20">"BB7BE481-DA8F-4b9e-89CB-0A8DDE6BC5D7"</argument>)</argument_list></macro>
    <label><name pos:line="17509" pos:column="5">IEEHostServices</name> :</label> <expr_stmt><expr pos:line="17509" pos:column="23">public <name pos:line="17509" pos:column="30">IUnknown</name>
    <block pos:line="17510" pos:column="5">{
    <expr pos:line="17511" pos:column="5">public<op:operator pos:line="17511" pos:column="11">:</op:operator>
        virtual <name pos:line="17512" pos:column="17">HRESULT</name> <name pos:line="17512" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17512" pos:column="43">GetHostValue</name><argument_list pos:line="17512" pos:column="55">( 
            <comment type="block" pos:line="17513" pos:column="13">/* [in] */</comment> <argument pos:line="17513" pos:column="24">__RPC__in LPCOLESTR valueCatagory</argument>,
            <comment type="block" pos:line="17514" pos:column="13">/* [in] */</comment> <argument pos:line="17514" pos:column="24">__RPC__in LPCOLESTR valueKind</argument>,
            <comment type="block" pos:line="17515" pos:column="13">/* [out] */</comment> <argument pos:line="17515" pos:column="25">__RPC__out VARIANT *result</argument>)</argument_list></macro> <op:operator pos:line="17515" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="17515" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="17517" pos:column="9">virtual <name pos:line="17517" pos:column="17">HRESULT</name> <name pos:line="17517" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17517" pos:column="43">SetHostValue</name><argument_list pos:line="17517" pos:column="55">( 
            <comment type="block" pos:line="17518" pos:column="13">/* [in] */</comment> <argument pos:line="17518" pos:column="24">__RPC__in LPCOLESTR valueCatagory</argument>,
            <comment type="block" pos:line="17519" pos:column="13">/* [in] */</comment> <argument pos:line="17519" pos:column="24">__RPC__in LPCOLESTR valueKind</argument>,
            <comment type="block" pos:line="17520" pos:column="13">/* [in] */</comment> <argument pos:line="17520" pos:column="24">VARIANT newValue</argument>)</argument_list></macro> <op:operator pos:line="17520" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="17520" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17524" pos:column="1">#<cpp:directive pos:line="17524" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17524" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17526" pos:column="5">typedef <type><struct pos:line="17526" pos:column="13">struct <name pos:line="17526" pos:column="20">IEEHostServicesVtbl</name>
    <block pos:line="17527" pos:column="5">{<public type="default" pos:line="17527" pos:column="6">
        <function_decl><type><name pos:line="17528" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17530" pos:column="9">HRESULT</name></type> ( <name pos:line="17530" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17530" pos:column="37">*</type:modifier><name pos:line="17530" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17530" pos:column="54">( 
            <param><decl><type><name pos:line="17531" pos:column="13">IEEHostServices</name> <type:modifier pos:line="17531" pos:column="29">*</type:modifier></type> <name pos:line="17531" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="17532" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17532" pos:column="24">__RPC__in</name> <name pos:line="17532" pos:column="34">REFIID</name></type> <name pos:line="17532" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17533" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17534" pos:column="13">__RPC__deref_out</name>  <name pos:line="17534" pos:column="31">void</name> <type:modifier pos:line="17534" pos:column="36">*</type:modifier><type:modifier pos:line="17534" pos:column="37">*</type:modifier></type><name pos:line="17534" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17536" pos:column="9">ULONG</name></type> ( <name pos:line="17536" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17536" pos:column="35">*</type:modifier><name pos:line="17536" pos:column="36">AddRef</name> )<parameter_list pos:line="17536" pos:column="44">( 
            <param><decl><type><name pos:line="17537" pos:column="13">IEEHostServices</name> <type:modifier pos:line="17537" pos:column="29">*</type:modifier></type> <name pos:line="17537" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17539" pos:column="9">ULONG</name></type> ( <name pos:line="17539" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17539" pos:column="35">*</type:modifier><name pos:line="17539" pos:column="36">Release</name> )<parameter_list pos:line="17539" pos:column="45">( 
            <param><decl><type><name pos:line="17540" pos:column="13">IEEHostServices</name> <type:modifier pos:line="17540" pos:column="29">*</type:modifier></type> <name pos:line="17540" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17542" pos:column="9">HRESULT</name></type> ( <name pos:line="17542" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17542" pos:column="37">*</type:modifier><name pos:line="17542" pos:column="38">GetHostValue</name> )<parameter_list pos:line="17542" pos:column="52">( 
            <param><decl><type><name pos:line="17543" pos:column="13">IEEHostServices</name> <type:modifier pos:line="17543" pos:column="29">*</type:modifier></type> <name pos:line="17543" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="17544" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17544" pos:column="24">__RPC__in</name> <name pos:line="17544" pos:column="34">LPCOLESTR</name></type> <name pos:line="17544" pos:column="44">valueCatagory</name></decl></param>,
            <comment type="block" pos:line="17545" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17545" pos:column="24">__RPC__in</name> <name pos:line="17545" pos:column="34">LPCOLESTR</name></type> <name pos:line="17545" pos:column="44">valueKind</name></decl></param>,
            <comment type="block" pos:line="17546" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17546" pos:column="25">__RPC__out</name> <name pos:line="17546" pos:column="36">VARIANT</name> <type:modifier pos:line="17546" pos:column="44">*</type:modifier></type><name pos:line="17546" pos:column="45">result</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17548" pos:column="9">HRESULT</name></type> ( <name pos:line="17548" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17548" pos:column="37">*</type:modifier><name pos:line="17548" pos:column="38">SetHostValue</name> )<parameter_list pos:line="17548" pos:column="52">( 
            <param><decl><type><name pos:line="17549" pos:column="13">IEEHostServices</name> <type:modifier pos:line="17549" pos:column="29">*</type:modifier></type> <name pos:line="17549" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="17550" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17550" pos:column="24">__RPC__in</name> <name pos:line="17550" pos:column="34">LPCOLESTR</name></type> <name pos:line="17550" pos:column="44">valueCatagory</name></decl></param>,
            <comment type="block" pos:line="17551" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17551" pos:column="24">__RPC__in</name> <name pos:line="17551" pos:column="34">LPCOLESTR</name></type> <name pos:line="17551" pos:column="44">valueKind</name></decl></param>,
            <comment type="block" pos:line="17552" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17552" pos:column="24">VARIANT</name></type> <name pos:line="17552" pos:column="32">newValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17554" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17555" pos:column="7">IEEHostServicesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17557" pos:column="5">interface</name></type> <name pos:line="17557" pos:column="15">IEEHostServices</name>
    <argument_list pos:line="17558" pos:column="5">{
        <argument><expr><name pos:line="17559" pos:column="9">CONST_VTBL</name> struct <name pos:line="17559" pos:column="27">IEEHostServicesVtbl</name> <op:operator pos:line="17559" pos:column="47">*</op:operator><name pos:line="17559" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17564" pos:column="1">#<cpp:directive pos:line="17564" pos:column="2">ifdef</cpp:directive> <name pos:line="17564" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17567" pos:column="1">#<cpp:directive pos:line="17567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17567" pos:column="9">IEEHostServices_QueryInterface</name><parameter_list pos:line="17567" pos:column="39">(<param><type><name pos:line="17567" pos:column="40">This</name></type></param>,<param><type><name pos:line="17567" pos:column="45">riid</name></type></param>,<param><type><name pos:line="17567" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17568" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17570" pos:column="1">#<cpp:directive pos:line="17570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17570" pos:column="9">IEEHostServices_AddRef</name><parameter_list pos:line="17570" pos:column="31">(<param><type><name pos:line="17570" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17571" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17573" pos:column="1">#<cpp:directive pos:line="17573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17573" pos:column="9">IEEHostServices_Release</name><parameter_list pos:line="17573" pos:column="32">(<param><type><name pos:line="17573" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17574" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17577" pos:column="1">#<cpp:directive pos:line="17577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17577" pos:column="9">IEEHostServices_GetHostValue</name><parameter_list pos:line="17577" pos:column="37">(<param><type><name pos:line="17577" pos:column="38">This</name></type></param>,<param><type><name pos:line="17577" pos:column="43">valueCatagory</name></type></param>,<param><type><name pos:line="17577" pos:column="57">valueKind</name></type></param>,<param><type><name pos:line="17577" pos:column="67">result</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17578" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostValue(This,valueCatagory,valueKind,result) )</cpp:value></cpp:define> 

<cpp:define pos:line="17580" pos:column="1">#<cpp:directive pos:line="17580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17580" pos:column="9">IEEHostServices_SetHostValue</name><parameter_list pos:line="17580" pos:column="37">(<param><type><name pos:line="17580" pos:column="38">This</name></type></param>,<param><type><name pos:line="17580" pos:column="43">valueCatagory</name></type></param>,<param><type><name pos:line="17580" pos:column="57">valueKind</name></type></param>,<param><type><name pos:line="17580" pos:column="67">newValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17581" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetHostValue(This,valueCatagory,valueKind,newValue) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17583" pos:column="1">#<cpp:directive pos:line="17583" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17583" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17586" pos:column="1">#<cpp:directive pos:line="17586" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17586" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17591" pos:column="1">#<cpp:directive pos:line="17591" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17591" pos:column="9">/* __IEEHostServices_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17594" pos:column="1">#<cpp:directive pos:line="17594" pos:column="2">ifndef</cpp:directive> <name pos:line="17594" pos:column="9">__IDebugCustomViewer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17595" pos:column="1">#<cpp:directive pos:line="17595" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17595" pos:column="9">__IDebugCustomViewer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17597" pos:column="1">/* interface IDebugCustomViewer */</comment>
<comment type="block" pos:line="17598" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17601" pos:column="1">EXTERN_C</name> <specifier pos:line="17601" pos:column="10">const</specifier> <name pos:line="17601" pos:column="16">IID</name></type> <name pos:line="17601" pos:column="20">IID_IDebugCustomViewer</name></decl>;</decl_stmt>

<cpp:if pos:line="17603" pos:column="1">#<cpp:directive pos:line="17603" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17603" pos:column="5">defined</name><argument_list pos:line="17603" pos:column="12">(<argument><expr><name pos:line="17603" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17603" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17603" pos:column="29">!</op:operator><call><name pos:line="17603" pos:column="30">defined</name><argument_list pos:line="17603" pos:column="37">(<argument><expr><name pos:line="17603" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17605" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17605" pos:column="19">(<argument pos:line="17605" pos:column="20">"6306E526-9E02-4696-BFF9-48338A27F8AF"</argument>)</argument_list></macro>
    <label><name pos:line="17606" pos:column="5">IDebugCustomViewer</name> :</label> <expr_stmt><expr pos:line="17606" pos:column="26">public <name pos:line="17606" pos:column="33">IUnknown</name>
    <block pos:line="17607" pos:column="5">{
    <expr pos:line="17608" pos:column="5">public<op:operator pos:line="17608" pos:column="11">:</op:operator>
        virtual <name pos:line="17609" pos:column="17">HRESULT</name> <name pos:line="17609" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17609" pos:column="43">DisplayValue</name><argument_list pos:line="17609" pos:column="55">( 
            <comment type="block" pos:line="17610" pos:column="13">/* [in] */</comment> <argument pos:line="17610" pos:column="24">__RPC__in HWND hwnd</argument>,
            <comment type="block" pos:line="17611" pos:column="13">/* [in] */</comment> <argument pos:line="17611" pos:column="24">DWORD dwID</argument>,
            <comment type="block" pos:line="17612" pos:column="13">/* [in] */</comment> <argument pos:line="17612" pos:column="24">__RPC__in_opt IUnknown *pHostServices</argument>,
            <comment type="block" pos:line="17613" pos:column="13">/* [in] */</comment> <argument pos:line="17613" pos:column="24">__RPC__in_opt IDebugProperty3 *pDebugProperty</argument>)</argument_list></macro> <op:operator pos:line="17613" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="17613" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17617" pos:column="1">#<cpp:directive pos:line="17617" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17617" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17619" pos:column="5">typedef <type><struct pos:line="17619" pos:column="13">struct <name pos:line="17619" pos:column="20">IDebugCustomViewerVtbl</name>
    <block pos:line="17620" pos:column="5">{<public type="default" pos:line="17620" pos:column="6">
        <function_decl><type><name pos:line="17621" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17623" pos:column="9">HRESULT</name></type> ( <name pos:line="17623" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17623" pos:column="37">*</type:modifier><name pos:line="17623" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17623" pos:column="54">( 
            <param><decl><type><name pos:line="17624" pos:column="13">IDebugCustomViewer</name> <type:modifier pos:line="17624" pos:column="32">*</type:modifier></type> <name pos:line="17624" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="17625" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17625" pos:column="24">__RPC__in</name> <name pos:line="17625" pos:column="34">REFIID</name></type> <name pos:line="17625" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17626" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17627" pos:column="13">__RPC__deref_out</name>  <name pos:line="17627" pos:column="31">void</name> <type:modifier pos:line="17627" pos:column="36">*</type:modifier><type:modifier pos:line="17627" pos:column="37">*</type:modifier></type><name pos:line="17627" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17629" pos:column="9">ULONG</name></type> ( <name pos:line="17629" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17629" pos:column="35">*</type:modifier><name pos:line="17629" pos:column="36">AddRef</name> )<parameter_list pos:line="17629" pos:column="44">( 
            <param><decl><type><name pos:line="17630" pos:column="13">IDebugCustomViewer</name> <type:modifier pos:line="17630" pos:column="32">*</type:modifier></type> <name pos:line="17630" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17632" pos:column="9">ULONG</name></type> ( <name pos:line="17632" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17632" pos:column="35">*</type:modifier><name pos:line="17632" pos:column="36">Release</name> )<parameter_list pos:line="17632" pos:column="45">( 
            <param><decl><type><name pos:line="17633" pos:column="13">IDebugCustomViewer</name> <type:modifier pos:line="17633" pos:column="32">*</type:modifier></type> <name pos:line="17633" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17635" pos:column="9">HRESULT</name></type> ( <name pos:line="17635" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17635" pos:column="37">*</type:modifier><name pos:line="17635" pos:column="38">DisplayValue</name> )<parameter_list pos:line="17635" pos:column="52">( 
            <param><decl><type><name pos:line="17636" pos:column="13">IDebugCustomViewer</name> <type:modifier pos:line="17636" pos:column="32">*</type:modifier></type> <name pos:line="17636" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="17637" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17637" pos:column="24">__RPC__in</name> <name pos:line="17637" pos:column="34">HWND</name></type> <name pos:line="17637" pos:column="39">hwnd</name></decl></param>,
            <comment type="block" pos:line="17638" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17638" pos:column="24">DWORD</name></type> <name pos:line="17638" pos:column="30">dwID</name></decl></param>,
            <comment type="block" pos:line="17639" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17639" pos:column="24">__RPC__in_opt</name> <name pos:line="17639" pos:column="38">IUnknown</name> <type:modifier pos:line="17639" pos:column="47">*</type:modifier></type><name pos:line="17639" pos:column="48">pHostServices</name></decl></param>,
            <comment type="block" pos:line="17640" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17640" pos:column="24">__RPC__in_opt</name> <name pos:line="17640" pos:column="38">IDebugProperty3</name> <type:modifier pos:line="17640" pos:column="54">*</type:modifier></type><name pos:line="17640" pos:column="55">pDebugProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17642" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17643" pos:column="7">IDebugCustomViewerVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17645" pos:column="5">interface</name></type> <name pos:line="17645" pos:column="15">IDebugCustomViewer</name>
    <argument_list pos:line="17646" pos:column="5">{
        <argument><expr><name pos:line="17647" pos:column="9">CONST_VTBL</name> struct <name pos:line="17647" pos:column="27">IDebugCustomViewerVtbl</name> <op:operator pos:line="17647" pos:column="50">*</op:operator><name pos:line="17647" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17652" pos:column="1">#<cpp:directive pos:line="17652" pos:column="2">ifdef</cpp:directive> <name pos:line="17652" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17655" pos:column="1">#<cpp:directive pos:line="17655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17655" pos:column="9">IDebugCustomViewer_QueryInterface</name><parameter_list pos:line="17655" pos:column="42">(<param><type><name pos:line="17655" pos:column="43">This</name></type></param>,<param><type><name pos:line="17655" pos:column="48">riid</name></type></param>,<param><type><name pos:line="17655" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17656" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17658" pos:column="1">#<cpp:directive pos:line="17658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17658" pos:column="9">IDebugCustomViewer_AddRef</name><parameter_list pos:line="17658" pos:column="34">(<param><type><name pos:line="17658" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17659" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17661" pos:column="1">#<cpp:directive pos:line="17661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17661" pos:column="9">IDebugCustomViewer_Release</name><parameter_list pos:line="17661" pos:column="35">(<param><type><name pos:line="17661" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17662" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17665" pos:column="1">#<cpp:directive pos:line="17665" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17665" pos:column="9">IDebugCustomViewer_DisplayValue</name><parameter_list pos:line="17665" pos:column="40">(<param><type><name pos:line="17665" pos:column="41">This</name></type></param>,<param><type><name pos:line="17665" pos:column="46">hwnd</name></type></param>,<param><type><name pos:line="17665" pos:column="51">dwID</name></type></param>,<param><type><name pos:line="17665" pos:column="56">pHostServices</name></type></param>,<param><type><name pos:line="17665" pos:column="70">pDebugProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17666" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisplayValue(This,hwnd,dwID,pHostServices,pDebugProperty) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17668" pos:column="1">#<cpp:directive pos:line="17668" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17668" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17671" pos:column="1">#<cpp:directive pos:line="17671" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17671" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17676" pos:column="1">#<cpp:directive pos:line="17676" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17676" pos:column="9">/* __IDebugCustomViewer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17679" pos:column="1">#<cpp:directive pos:line="17679" pos:column="2">ifndef</cpp:directive> <name pos:line="17679" pos:column="9">__IEEDataStorage_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17680" pos:column="1">#<cpp:directive pos:line="17680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17680" pos:column="9">__IEEDataStorage_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17682" pos:column="1">/* interface IEEDataStorage */</comment>
<comment type="block" pos:line="17683" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17686" pos:column="1">EXTERN_C</name> <specifier pos:line="17686" pos:column="10">const</specifier> <name pos:line="17686" pos:column="16">IID</name></type> <name pos:line="17686" pos:column="20">IID_IEEDataStorage</name></decl>;</decl_stmt>

<cpp:if pos:line="17688" pos:column="1">#<cpp:directive pos:line="17688" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17688" pos:column="5">defined</name><argument_list pos:line="17688" pos:column="12">(<argument><expr><name pos:line="17688" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17688" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17688" pos:column="29">!</op:operator><call><name pos:line="17688" pos:column="30">defined</name><argument_list pos:line="17688" pos:column="37">(<argument><expr><name pos:line="17688" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17690" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17690" pos:column="19">(<argument pos:line="17690" pos:column="20">"DCF1F227-EC51-4680-8722-C8796A5F3483"</argument>)</argument_list></macro>
    <label><name pos:line="17691" pos:column="5">IEEDataStorage</name> :</label> <expr_stmt><expr pos:line="17691" pos:column="22">public <name pos:line="17691" pos:column="29">IUnknown</name>
    <block pos:line="17692" pos:column="5">{
    <expr pos:line="17693" pos:column="5">public<op:operator pos:line="17693" pos:column="11">:</op:operator>
        virtual <name pos:line="17694" pos:column="17">HRESULT</name> <name pos:line="17694" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17694" pos:column="43">GetSize</name><argument_list pos:line="17694" pos:column="50">( 
            <comment type="block" pos:line="17695" pos:column="13">/* [out] */</comment> <argument pos:line="17695" pos:column="25">__RPC__out ULONG *size</argument>)</argument_list></macro> <op:operator pos:line="17695" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="17695" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="17697" pos:column="9">virtual <name pos:line="17697" pos:column="17">HRESULT</name> <name pos:line="17697" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17697" pos:column="43">GetData</name><argument_list pos:line="17697" pos:column="50">( 
            <comment type="block" pos:line="17698" pos:column="13">/* [in] */</comment> <argument pos:line="17698" pos:column="24">ULONG dataSize</argument>,
            <comment type="block" pos:line="17699" pos:column="13">/* [out] */</comment> <argument pos:line="17699" pos:column="25">__RPC__out ULONG *sizeGotten</argument>,
            <comment type="block" pos:line="17700" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="17700" pos:column="45">__RPC__out_ecount_part(dataSize, *sizeGotten) BYTE *data</argument>)</argument_list></macro> <op:operator pos:line="17700" pos:column="103">=</op:operator> <lit:literal type="number" pos:line="17700" pos:column="105">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17704" pos:column="1">#<cpp:directive pos:line="17704" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17704" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17706" pos:column="5">typedef <type><struct pos:line="17706" pos:column="13">struct <name pos:line="17706" pos:column="20">IEEDataStorageVtbl</name>
    <block pos:line="17707" pos:column="5">{<public type="default" pos:line="17707" pos:column="6">
        <function_decl><type><name pos:line="17708" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17710" pos:column="9">HRESULT</name></type> ( <name pos:line="17710" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17710" pos:column="37">*</type:modifier><name pos:line="17710" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17710" pos:column="54">( 
            <param><decl><type><name pos:line="17711" pos:column="13">IEEDataStorage</name> <type:modifier pos:line="17711" pos:column="28">*</type:modifier></type> <name pos:line="17711" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17712" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17712" pos:column="24">__RPC__in</name> <name pos:line="17712" pos:column="34">REFIID</name></type> <name pos:line="17712" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17713" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17714" pos:column="13">__RPC__deref_out</name>  <name pos:line="17714" pos:column="31">void</name> <type:modifier pos:line="17714" pos:column="36">*</type:modifier><type:modifier pos:line="17714" pos:column="37">*</type:modifier></type><name pos:line="17714" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17716" pos:column="9">ULONG</name></type> ( <name pos:line="17716" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17716" pos:column="35">*</type:modifier><name pos:line="17716" pos:column="36">AddRef</name> )<parameter_list pos:line="17716" pos:column="44">( 
            <param><decl><type><name pos:line="17717" pos:column="13">IEEDataStorage</name> <type:modifier pos:line="17717" pos:column="28">*</type:modifier></type> <name pos:line="17717" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17719" pos:column="9">ULONG</name></type> ( <name pos:line="17719" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17719" pos:column="35">*</type:modifier><name pos:line="17719" pos:column="36">Release</name> )<parameter_list pos:line="17719" pos:column="45">( 
            <param><decl><type><name pos:line="17720" pos:column="13">IEEDataStorage</name> <type:modifier pos:line="17720" pos:column="28">*</type:modifier></type> <name pos:line="17720" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17722" pos:column="9">HRESULT</name></type> ( <name pos:line="17722" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17722" pos:column="37">*</type:modifier><name pos:line="17722" pos:column="38">GetSize</name> )<parameter_list pos:line="17722" pos:column="47">( 
            <param><decl><type><name pos:line="17723" pos:column="13">IEEDataStorage</name> <type:modifier pos:line="17723" pos:column="28">*</type:modifier></type> <name pos:line="17723" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17724" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17724" pos:column="25">__RPC__out</name> <name pos:line="17724" pos:column="36">ULONG</name> <type:modifier pos:line="17724" pos:column="42">*</type:modifier></type><name pos:line="17724" pos:column="43">size</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17726" pos:column="9">HRESULT</name> <argument_list pos:line="17726" pos:column="17">( <argument pos:line="17726" pos:column="19">STDMETHODCALLTYPE *GetData</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17726" pos:column="47">(</op:operator> 
            <name pos:line="17727" pos:column="13">IEEDataStorage</name> <op:operator pos:line="17727" pos:column="28">*</op:operator> <name pos:line="17727" pos:column="30">This</name><op:operator pos:line="17727" pos:column="34">,</op:operator>
            <comment type="block" pos:line="17728" pos:column="13">/* [in] */</comment> <name pos:line="17728" pos:column="24">ULONG</name> <name pos:line="17728" pos:column="30">dataSize</name><op:operator pos:line="17728" pos:column="38">,</op:operator>
            <comment type="block" pos:line="17729" pos:column="13">/* [out] */</comment> <name pos:line="17729" pos:column="25">__RPC__out</name> <name pos:line="17729" pos:column="36">ULONG</name> <op:operator pos:line="17729" pos:column="42">*</op:operator><name pos:line="17729" pos:column="43">sizeGotten</name><op:operator pos:line="17729" pos:column="53">,</op:operator>
            <comment type="block" pos:line="17730" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="17730" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="17730" pos:column="67">(<argument pos:line="17730" pos:column="68">dataSize</argument>, <argument pos:line="17730" pos:column="78">*sizeGotten</argument>)</argument_list></macro> <name pos:line="17730" pos:column="91">BYTE</name> <op:operator pos:line="17730" pos:column="96">*</op:operator><name pos:line="17730" pos:column="97">data</name><op:operator pos:line="17730" pos:column="101">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="17732" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17733" pos:column="7">IEEDataStorageVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17735" pos:column="5">interface</name></type> <name pos:line="17735" pos:column="15">IEEDataStorage</name>
    <argument_list pos:line="17736" pos:column="5">{
        <argument><expr><name pos:line="17737" pos:column="9">CONST_VTBL</name> struct <name pos:line="17737" pos:column="27">IEEDataStorageVtbl</name> <op:operator pos:line="17737" pos:column="46">*</op:operator><name pos:line="17737" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17742" pos:column="1">#<cpp:directive pos:line="17742" pos:column="2">ifdef</cpp:directive> <name pos:line="17742" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17745" pos:column="1">#<cpp:directive pos:line="17745" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17745" pos:column="9">IEEDataStorage_QueryInterface</name><parameter_list pos:line="17745" pos:column="38">(<param><type><name pos:line="17745" pos:column="39">This</name></type></param>,<param><type><name pos:line="17745" pos:column="44">riid</name></type></param>,<param><type><name pos:line="17745" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17746" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17748" pos:column="1">#<cpp:directive pos:line="17748" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17748" pos:column="9">IEEDataStorage_AddRef</name><parameter_list pos:line="17748" pos:column="30">(<param><type><name pos:line="17748" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17749" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17751" pos:column="1">#<cpp:directive pos:line="17751" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17751" pos:column="9">IEEDataStorage_Release</name><parameter_list pos:line="17751" pos:column="31">(<param><type><name pos:line="17751" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17752" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17755" pos:column="1">#<cpp:directive pos:line="17755" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17755" pos:column="9">IEEDataStorage_GetSize</name><parameter_list pos:line="17755" pos:column="31">(<param><type><name pos:line="17755" pos:column="32">This</name></type></param>,<param><type><name pos:line="17755" pos:column="37">size</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17756" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,size) )</cpp:value></cpp:define> 

<cpp:define pos:line="17758" pos:column="1">#<cpp:directive pos:line="17758" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17758" pos:column="9">IEEDataStorage_GetData</name><parameter_list pos:line="17758" pos:column="31">(<param><type><name pos:line="17758" pos:column="32">This</name></type></param>,<param><type><name pos:line="17758" pos:column="37">dataSize</name></type></param>,<param><type><name pos:line="17758" pos:column="46">sizeGotten</name></type></param>,<param><type><name pos:line="17758" pos:column="57">data</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17759" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetData(This,dataSize,sizeGotten,data) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17761" pos:column="1">#<cpp:directive pos:line="17761" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17761" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17764" pos:column="1">#<cpp:directive pos:line="17764" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17764" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17769" pos:column="1">#<cpp:directive pos:line="17769" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17769" pos:column="9">/* __IEEDataStorage_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17772" pos:column="1">#<cpp:directive pos:line="17772" pos:column="2">ifndef</cpp:directive> <name pos:line="17772" pos:column="9">__IPropertyProxyEESide_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17773" pos:column="1">#<cpp:directive pos:line="17773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17773" pos:column="9">__IPropertyProxyEESide_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17775" pos:column="1">/* interface IPropertyProxyEESide */</comment>
<comment type="block" pos:line="17776" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="17779" pos:column="1">enum <name pos:line="17779" pos:column="6">enum_ASSEMBLYLOCRESOLUTION</name>
    <block pos:line="17780" pos:column="5">{	<decl><name pos:line="17780" pos:column="9">ALR_NAME</name>	<init pos:line="17780" pos:column="25">= <expr><lit:literal type="number" pos:line="17780" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="17780" pos:column="28">,</op:operator>
	<decl><name pos:line="17781" pos:column="9">ALR_USERDIR</name>	<init pos:line="17781" pos:column="25">= <expr><lit:literal type="number" pos:line="17781" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="17781" pos:column="30">,</op:operator>
	<decl><name pos:line="17782" pos:column="9">ALR_SHAREDDIR</name>	<init pos:line="17782" pos:column="25">= <expr><lit:literal type="number" pos:line="17782" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="17782" pos:column="30">,</op:operator>
	<decl><name pos:line="17783" pos:column="9">ALR_REMOTEDIR</name>	<init pos:line="17783" pos:column="25">= <expr><lit:literal type="number" pos:line="17783" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="17783" pos:column="30">,</op:operator>
	<decl><name pos:line="17784" pos:column="9">ALR_ERROR</name>	<init pos:line="17784" pos:column="25">= <expr><lit:literal type="number" pos:line="17784" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="17784" pos:column="30">,</op:operator>
	<decl><name pos:line="17785" pos:column="9">ALR_BYTES</name>	<init pos:line="17785" pos:column="25">= <expr><lit:literal type="number" pos:line="17785" pos:column="27">0x10</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="17787" pos:column="1">typedef <type><name pos:line="17787" pos:column="9">DWORD</name></type> <name pos:line="17787" pos:column="15">ASSEMBLYLOCRESOLUTION</name>;</typedef>


<enum pos:line="17790" pos:column="1">enum <name pos:line="17790" pos:column="6">enum_GETASSEMBLY</name>
    <block pos:line="17791" pos:column="5">{	<decl><name pos:line="17791" pos:column="9">GA_BYTES</name>	<init pos:line="17791" pos:column="25">= <expr><lit:literal type="number" pos:line="17791" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="17791" pos:column="30">,</op:operator>
	<decl><name pos:line="17792" pos:column="9">GA_PDBBYTES</name>	<init pos:line="17792" pos:column="25">= <expr><lit:literal type="number" pos:line="17792" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="17792" pos:column="30">,</op:operator>
	<decl><name pos:line="17793" pos:column="9">GA_NAME</name>	<init pos:line="17793" pos:column="17">= <expr><lit:literal type="number" pos:line="17793" pos:column="19">0x4</lit:literal></expr></init></decl><op:operator pos:line="17793" pos:column="22">,</op:operator>
	<decl><name pos:line="17794" pos:column="9">GA_FLAGS</name>	<init pos:line="17794" pos:column="25">= <expr><lit:literal type="number" pos:line="17794" pos:column="27">0x8</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="17796" pos:column="1">typedef <type><name pos:line="17796" pos:column="9">DWORD</name></type> <name pos:line="17796" pos:column="15">GETASSEMBLY</name>;</typedef>


<decl_stmt><decl><type><name pos:line="17799" pos:column="1">EXTERN_C</name> <specifier pos:line="17799" pos:column="10">const</specifier> <name pos:line="17799" pos:column="16">IID</name></type> <name pos:line="17799" pos:column="20">IID_IPropertyProxyEESide</name></decl>;</decl_stmt>

<cpp:if pos:line="17801" pos:column="1">#<cpp:directive pos:line="17801" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17801" pos:column="5">defined</name><argument_list pos:line="17801" pos:column="12">(<argument><expr><name pos:line="17801" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17801" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17801" pos:column="29">!</op:operator><call><name pos:line="17801" pos:column="30">defined</name><argument_list pos:line="17801" pos:column="37">(<argument><expr><name pos:line="17801" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17803" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17803" pos:column="19">(<argument pos:line="17803" pos:column="20">"579919D2-1B10-4584-969C-3E065BD3E22D"</argument>)</argument_list></macro>
    <label><name pos:line="17804" pos:column="5">IPropertyProxyEESide</name> :</label> <expr_stmt><expr pos:line="17804" pos:column="28">public <name pos:line="17804" pos:column="35">IUnknown</name>
    <block pos:line="17805" pos:column="5">{
    <expr pos:line="17806" pos:column="5">public<op:operator pos:line="17806" pos:column="11">:</op:operator>
        virtual <name pos:line="17807" pos:column="17">HRESULT</name> <name pos:line="17807" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17807" pos:column="43">InitSourceDataProvider</name><argument_list pos:line="17807" pos:column="65">( 
            <comment type="block" pos:line="17808" pos:column="13">/* [out] */</comment> <argument pos:line="17808" pos:column="25">__RPC__deref_out_opt IEEDataStorage **dataOut</argument>)</argument_list></macro> <op:operator pos:line="17808" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="17808" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="17810" pos:column="9">virtual <name pos:line="17810" pos:column="17">HRESULT</name> <name pos:line="17810" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17810" pos:column="43">GetManagedViewerCreationData</name><argument_list pos:line="17810" pos:column="71">( 
            <comment type="block" pos:line="17811" pos:column="13">/* [out] */</comment> <argument pos:line="17811" pos:column="25">__RPC__deref_out_opt BSTR *assemName</argument>,
            <comment type="block" pos:line="17812" pos:column="13">/* [out] */</comment> <argument pos:line="17812" pos:column="25">__RPC__deref_out_opt IEEDataStorage **assemBytes</argument>,
            <comment type="block" pos:line="17813" pos:column="13">/* [out] */</comment> <argument pos:line="17813" pos:column="25">__RPC__deref_out_opt IEEDataStorage **assemPdb</argument>,
            <comment type="block" pos:line="17814" pos:column="13">/* [out] */</comment> <argument pos:line="17814" pos:column="25">__RPC__deref_out_opt BSTR *className</argument>,
            <comment type="block" pos:line="17815" pos:column="13">/* [out] */</comment> <argument pos:line="17815" pos:column="25">__RPC__out ASSEMBLYLOCRESOLUTION *alr</argument>,
            <comment type="block" pos:line="17816" pos:column="13">/* [out] */</comment> <argument pos:line="17816" pos:column="25">__RPC__out BOOL *replacementOk</argument>)</argument_list></macro> <op:operator pos:line="17816" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="17816" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="17818" pos:column="9">virtual <name pos:line="17818" pos:column="17">HRESULT</name> <name pos:line="17818" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17818" pos:column="43">GetInitialData</name><argument_list pos:line="17818" pos:column="57">( 
            <comment type="block" pos:line="17819" pos:column="13">/* [out] */</comment> <argument pos:line="17819" pos:column="25">__RPC__deref_out_opt IEEDataStorage **dataOut</argument>)</argument_list></macro> <op:operator pos:line="17819" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="17819" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="17821" pos:column="9">virtual <name pos:line="17821" pos:column="17">HRESULT</name> <name pos:line="17821" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17821" pos:column="43">CreateReplacementObject</name><argument_list pos:line="17821" pos:column="66">( 
            <comment type="block" pos:line="17822" pos:column="13">/* [in] */</comment> <argument pos:line="17822" pos:column="24">__RPC__in_opt IEEDataStorage *dataIn</argument>,
            <comment type="block" pos:line="17823" pos:column="13">/* [out] */</comment> <argument pos:line="17823" pos:column="25">__RPC__deref_out_opt IEEDataStorage **dataOut</argument>)</argument_list></macro> <op:operator pos:line="17823" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="17823" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="17825" pos:column="9">virtual <name pos:line="17825" pos:column="17">HRESULT</name> <name pos:line="17825" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17825" pos:column="43">InPlaceUpdateObject</name><argument_list pos:line="17825" pos:column="62">( 
            <comment type="block" pos:line="17826" pos:column="13">/* [in] */</comment> <argument pos:line="17826" pos:column="24">__RPC__in_opt IEEDataStorage *dataIn</argument>,
            <comment type="block" pos:line="17827" pos:column="13">/* [out] */</comment> <argument pos:line="17827" pos:column="25">__RPC__deref_out_opt IEEDataStorage **dataOut</argument>)</argument_list></macro> <op:operator pos:line="17827" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="17827" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="17829" pos:column="9">virtual <name pos:line="17829" pos:column="17">HRESULT</name> <name pos:line="17829" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17829" pos:column="43">ResolveAssemblyReference</name><argument_list pos:line="17829" pos:column="67">( 
            <comment type="block" pos:line="17830" pos:column="13">/* [in] */</comment> <argument pos:line="17830" pos:column="24">__RPC__in LPCOLESTR assemName</argument>,
            <comment type="block" pos:line="17831" pos:column="13">/* [in] */</comment> <argument pos:line="17831" pos:column="24">GETASSEMBLY flags</argument>,
            <comment type="block" pos:line="17832" pos:column="13">/* [out] */</comment> <argument pos:line="17832" pos:column="25">__RPC__deref_out_opt IEEDataStorage **assemBytes</argument>,
            <comment type="block" pos:line="17833" pos:column="13">/* [out] */</comment> <argument pos:line="17833" pos:column="25">__RPC__deref_out_opt IEEDataStorage **assemPdb</argument>,
            <comment type="block" pos:line="17834" pos:column="13">/* [out] */</comment> <argument pos:line="17834" pos:column="25">__RPC__deref_out_opt BSTR *assemLocation</argument>,
            <comment type="block" pos:line="17835" pos:column="13">/* [out] */</comment> <argument pos:line="17835" pos:column="25">__RPC__out ASSEMBLYLOCRESOLUTION *alr</argument>)</argument_list></macro> <op:operator pos:line="17835" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="17835" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17839" pos:column="1">#<cpp:directive pos:line="17839" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17839" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17841" pos:column="5">typedef <type><struct pos:line="17841" pos:column="13">struct <name pos:line="17841" pos:column="20">IPropertyProxyEESideVtbl</name>
    <block pos:line="17842" pos:column="5">{<public type="default" pos:line="17842" pos:column="6">
        <function_decl><type><name pos:line="17843" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17845" pos:column="9">HRESULT</name></type> ( <name pos:line="17845" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17845" pos:column="37">*</type:modifier><name pos:line="17845" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17845" pos:column="54">( 
            <param><decl><type><name pos:line="17846" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17846" pos:column="34">*</type:modifier></type> <name pos:line="17846" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17847" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17847" pos:column="24">__RPC__in</name> <name pos:line="17847" pos:column="34">REFIID</name></type> <name pos:line="17847" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17848" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17849" pos:column="13">__RPC__deref_out</name>  <name pos:line="17849" pos:column="31">void</name> <type:modifier pos:line="17849" pos:column="36">*</type:modifier><type:modifier pos:line="17849" pos:column="37">*</type:modifier></type><name pos:line="17849" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17851" pos:column="9">ULONG</name></type> ( <name pos:line="17851" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17851" pos:column="35">*</type:modifier><name pos:line="17851" pos:column="36">AddRef</name> )<parameter_list pos:line="17851" pos:column="44">( 
            <param><decl><type><name pos:line="17852" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17852" pos:column="34">*</type:modifier></type> <name pos:line="17852" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17854" pos:column="9">ULONG</name></type> ( <name pos:line="17854" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17854" pos:column="35">*</type:modifier><name pos:line="17854" pos:column="36">Release</name> )<parameter_list pos:line="17854" pos:column="45">( 
            <param><decl><type><name pos:line="17855" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17855" pos:column="34">*</type:modifier></type> <name pos:line="17855" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17857" pos:column="9">HRESULT</name></type> ( <name pos:line="17857" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17857" pos:column="37">*</type:modifier><name pos:line="17857" pos:column="38">InitSourceDataProvider</name> )<parameter_list pos:line="17857" pos:column="62">( 
            <param><decl><type><name pos:line="17858" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17858" pos:column="34">*</type:modifier></type> <name pos:line="17858" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17859" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17859" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17859" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17859" pos:column="61">*</type:modifier><type:modifier pos:line="17859" pos:column="62">*</type:modifier></type><name pos:line="17859" pos:column="63">dataOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17861" pos:column="9">HRESULT</name></type> ( <name pos:line="17861" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17861" pos:column="37">*</type:modifier><name pos:line="17861" pos:column="38">GetManagedViewerCreationData</name> )<parameter_list pos:line="17861" pos:column="68">( 
            <param><decl><type><name pos:line="17862" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17862" pos:column="34">*</type:modifier></type> <name pos:line="17862" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17863" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17863" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17863" pos:column="46">BSTR</name> <type:modifier pos:line="17863" pos:column="51">*</type:modifier></type><name pos:line="17863" pos:column="52">assemName</name></decl></param>,
            <comment type="block" pos:line="17864" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17864" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17864" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17864" pos:column="61">*</type:modifier><type:modifier pos:line="17864" pos:column="62">*</type:modifier></type><name pos:line="17864" pos:column="63">assemBytes</name></decl></param>,
            <comment type="block" pos:line="17865" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17865" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17865" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17865" pos:column="61">*</type:modifier><type:modifier pos:line="17865" pos:column="62">*</type:modifier></type><name pos:line="17865" pos:column="63">assemPdb</name></decl></param>,
            <comment type="block" pos:line="17866" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17866" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17866" pos:column="46">BSTR</name> <type:modifier pos:line="17866" pos:column="51">*</type:modifier></type><name pos:line="17866" pos:column="52">className</name></decl></param>,
            <comment type="block" pos:line="17867" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17867" pos:column="25">__RPC__out</name> <name pos:line="17867" pos:column="36">ASSEMBLYLOCRESOLUTION</name> <type:modifier pos:line="17867" pos:column="58">*</type:modifier></type><name pos:line="17867" pos:column="59">alr</name></decl></param>,
            <comment type="block" pos:line="17868" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17868" pos:column="25">__RPC__out</name> <name pos:line="17868" pos:column="36">BOOL</name> <type:modifier pos:line="17868" pos:column="41">*</type:modifier></type><name pos:line="17868" pos:column="42">replacementOk</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17870" pos:column="9">HRESULT</name></type> ( <name pos:line="17870" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17870" pos:column="37">*</type:modifier><name pos:line="17870" pos:column="38">GetInitialData</name> )<parameter_list pos:line="17870" pos:column="54">( 
            <param><decl><type><name pos:line="17871" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17871" pos:column="34">*</type:modifier></type> <name pos:line="17871" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17872" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17872" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17872" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17872" pos:column="61">*</type:modifier><type:modifier pos:line="17872" pos:column="62">*</type:modifier></type><name pos:line="17872" pos:column="63">dataOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17874" pos:column="9">HRESULT</name></type> ( <name pos:line="17874" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17874" pos:column="37">*</type:modifier><name pos:line="17874" pos:column="38">CreateReplacementObject</name> )<parameter_list pos:line="17874" pos:column="63">( 
            <param><decl><type><name pos:line="17875" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17875" pos:column="34">*</type:modifier></type> <name pos:line="17875" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17876" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17876" pos:column="24">__RPC__in_opt</name> <name pos:line="17876" pos:column="38">IEEDataStorage</name> <type:modifier pos:line="17876" pos:column="53">*</type:modifier></type><name pos:line="17876" pos:column="54">dataIn</name></decl></param>,
            <comment type="block" pos:line="17877" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17877" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17877" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17877" pos:column="61">*</type:modifier><type:modifier pos:line="17877" pos:column="62">*</type:modifier></type><name pos:line="17877" pos:column="63">dataOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17879" pos:column="9">HRESULT</name></type> ( <name pos:line="17879" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17879" pos:column="37">*</type:modifier><name pos:line="17879" pos:column="38">InPlaceUpdateObject</name> )<parameter_list pos:line="17879" pos:column="59">( 
            <param><decl><type><name pos:line="17880" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17880" pos:column="34">*</type:modifier></type> <name pos:line="17880" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17881" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17881" pos:column="24">__RPC__in_opt</name> <name pos:line="17881" pos:column="38">IEEDataStorage</name> <type:modifier pos:line="17881" pos:column="53">*</type:modifier></type><name pos:line="17881" pos:column="54">dataIn</name></decl></param>,
            <comment type="block" pos:line="17882" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17882" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17882" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17882" pos:column="61">*</type:modifier><type:modifier pos:line="17882" pos:column="62">*</type:modifier></type><name pos:line="17882" pos:column="63">dataOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17884" pos:column="9">HRESULT</name></type> ( <name pos:line="17884" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17884" pos:column="37">*</type:modifier><name pos:line="17884" pos:column="38">ResolveAssemblyReference</name> )<parameter_list pos:line="17884" pos:column="64">( 
            <param><decl><type><name pos:line="17885" pos:column="13">IPropertyProxyEESide</name> <type:modifier pos:line="17885" pos:column="34">*</type:modifier></type> <name pos:line="17885" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="17886" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17886" pos:column="24">__RPC__in</name> <name pos:line="17886" pos:column="34">LPCOLESTR</name></type> <name pos:line="17886" pos:column="44">assemName</name></decl></param>,
            <comment type="block" pos:line="17887" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17887" pos:column="24">GETASSEMBLY</name></type> <name pos:line="17887" pos:column="36">flags</name></decl></param>,
            <comment type="block" pos:line="17888" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17888" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17888" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17888" pos:column="61">*</type:modifier><type:modifier pos:line="17888" pos:column="62">*</type:modifier></type><name pos:line="17888" pos:column="63">assemBytes</name></decl></param>,
            <comment type="block" pos:line="17889" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17889" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17889" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="17889" pos:column="61">*</type:modifier><type:modifier pos:line="17889" pos:column="62">*</type:modifier></type><name pos:line="17889" pos:column="63">assemPdb</name></decl></param>,
            <comment type="block" pos:line="17890" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17890" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17890" pos:column="46">BSTR</name> <type:modifier pos:line="17890" pos:column="51">*</type:modifier></type><name pos:line="17890" pos:column="52">assemLocation</name></decl></param>,
            <comment type="block" pos:line="17891" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17891" pos:column="25">__RPC__out</name> <name pos:line="17891" pos:column="36">ASSEMBLYLOCRESOLUTION</name> <type:modifier pos:line="17891" pos:column="58">*</type:modifier></type><name pos:line="17891" pos:column="59">alr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17893" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17894" pos:column="7">IPropertyProxyEESideVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17896" pos:column="5">interface</name></type> <name pos:line="17896" pos:column="15">IPropertyProxyEESide</name>
    <argument_list pos:line="17897" pos:column="5">{
        <argument><expr><name pos:line="17898" pos:column="9">CONST_VTBL</name> struct <name pos:line="17898" pos:column="27">IPropertyProxyEESideVtbl</name> <op:operator pos:line="17898" pos:column="52">*</op:operator><name pos:line="17898" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17903" pos:column="1">#<cpp:directive pos:line="17903" pos:column="2">ifdef</cpp:directive> <name pos:line="17903" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17906" pos:column="1">#<cpp:directive pos:line="17906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17906" pos:column="9">IPropertyProxyEESide_QueryInterface</name><parameter_list pos:line="17906" pos:column="44">(<param><type><name pos:line="17906" pos:column="45">This</name></type></param>,<param><type><name pos:line="17906" pos:column="50">riid</name></type></param>,<param><type><name pos:line="17906" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17907" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17909" pos:column="1">#<cpp:directive pos:line="17909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17909" pos:column="9">IPropertyProxyEESide_AddRef</name><parameter_list pos:line="17909" pos:column="36">(<param><type><name pos:line="17909" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17910" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17912" pos:column="1">#<cpp:directive pos:line="17912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17912" pos:column="9">IPropertyProxyEESide_Release</name><parameter_list pos:line="17912" pos:column="37">(<param><type><name pos:line="17912" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17913" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17916" pos:column="1">#<cpp:directive pos:line="17916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17916" pos:column="9">IPropertyProxyEESide_InitSourceDataProvider</name><parameter_list pos:line="17916" pos:column="52">(<param><type><name pos:line="17916" pos:column="53">This</name></type></param>,<param><type><name pos:line="17916" pos:column="58">dataOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17917" pos:column="5">( (This)-&gt;lpVtbl -&gt; InitSourceDataProvider(This,dataOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="17919" pos:column="1">#<cpp:directive pos:line="17919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17919" pos:column="9">IPropertyProxyEESide_GetManagedViewerCreationData</name><parameter_list pos:line="17919" pos:column="58">(<param><type><name pos:line="17919" pos:column="59">This</name></type></param>,<param><type><name pos:line="17919" pos:column="64">assemName</name></type></param>,<param><type><name pos:line="17919" pos:column="74">assemBytes</name></type></param>,<param><type><name pos:line="17919" pos:column="85">assemPdb</name></type></param>,<param><type><name pos:line="17919" pos:column="94">className</name></type></param>,<param><type><name pos:line="17919" pos:column="104">alr</name></type></param>,<param><type><name pos:line="17919" pos:column="108">replacementOk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17920" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedViewerCreationData(This,assemName,assemBytes,assemPdb,className,alr,replacementOk) )</cpp:value></cpp:define> 

<cpp:define pos:line="17922" pos:column="1">#<cpp:directive pos:line="17922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17922" pos:column="9">IPropertyProxyEESide_GetInitialData</name><parameter_list pos:line="17922" pos:column="44">(<param><type><name pos:line="17922" pos:column="45">This</name></type></param>,<param><type><name pos:line="17922" pos:column="50">dataOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17923" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInitialData(This,dataOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="17925" pos:column="1">#<cpp:directive pos:line="17925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17925" pos:column="9">IPropertyProxyEESide_CreateReplacementObject</name><parameter_list pos:line="17925" pos:column="53">(<param><type><name pos:line="17925" pos:column="54">This</name></type></param>,<param><type><name pos:line="17925" pos:column="59">dataIn</name></type></param>,<param><type><name pos:line="17925" pos:column="66">dataOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17926" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateReplacementObject(This,dataIn,dataOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="17928" pos:column="1">#<cpp:directive pos:line="17928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17928" pos:column="9">IPropertyProxyEESide_InPlaceUpdateObject</name><parameter_list pos:line="17928" pos:column="49">(<param><type><name pos:line="17928" pos:column="50">This</name></type></param>,<param><type><name pos:line="17928" pos:column="55">dataIn</name></type></param>,<param><type><name pos:line="17928" pos:column="62">dataOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17929" pos:column="5">( (This)-&gt;lpVtbl -&gt; InPlaceUpdateObject(This,dataIn,dataOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="17931" pos:column="1">#<cpp:directive pos:line="17931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17931" pos:column="9">IPropertyProxyEESide_ResolveAssemblyReference</name><parameter_list pos:line="17931" pos:column="54">(<param><type><name pos:line="17931" pos:column="55">This</name></type></param>,<param><type><name pos:line="17931" pos:column="60">assemName</name></type></param>,<param><type><name pos:line="17931" pos:column="70">flags</name></type></param>,<param><type><name pos:line="17931" pos:column="76">assemBytes</name></type></param>,<param><type><name pos:line="17931" pos:column="87">assemPdb</name></type></param>,<param><type><name pos:line="17931" pos:column="96">assemLocation</name></type></param>,<param><type><name pos:line="17931" pos:column="110">alr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17932" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveAssemblyReference(This,assemName,flags,assemBytes,assemPdb,assemLocation,alr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17934" pos:column="1">#<cpp:directive pos:line="17934" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17934" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17937" pos:column="1">#<cpp:directive pos:line="17937" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17937" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17942" pos:column="1">#<cpp:directive pos:line="17942" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17942" pos:column="9">/* __IPropertyProxyEESide_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17945" pos:column="1">#<cpp:directive pos:line="17945" pos:column="2">ifndef</cpp:directive> <name pos:line="17945" pos:column="9">__IPropertyProxyProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17946" pos:column="1">#<cpp:directive pos:line="17946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17946" pos:column="9">__IPropertyProxyProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17948" pos:column="1">/* interface IPropertyProxyProvider */</comment>
<comment type="block" pos:line="17949" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="17952" pos:column="1">EXTERN_C</name> <specifier pos:line="17952" pos:column="10">const</specifier> <name pos:line="17952" pos:column="16">IID</name></type> <name pos:line="17952" pos:column="20">IID_IPropertyProxyProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="17954" pos:column="1">#<cpp:directive pos:line="17954" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17954" pos:column="5">defined</name><argument_list pos:line="17954" pos:column="12">(<argument><expr><name pos:line="17954" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17954" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17954" pos:column="29">!</op:operator><call><name pos:line="17954" pos:column="30">defined</name><argument_list pos:line="17954" pos:column="37">(<argument><expr><name pos:line="17954" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17956" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17956" pos:column="19">(<argument pos:line="17956" pos:column="20">"30E6C90E-757E-48cf-8DB8-20B061AFBBAE"</argument>)</argument_list></macro>
    <label><name pos:line="17957" pos:column="5">IPropertyProxyProvider</name> :</label> <expr_stmt><expr pos:line="17957" pos:column="30">public <name pos:line="17957" pos:column="37">IUnknown</name>
    <block pos:line="17958" pos:column="5">{
    <expr pos:line="17959" pos:column="5">public<op:operator pos:line="17959" pos:column="11">:</op:operator>
        virtual <name pos:line="17960" pos:column="17">HRESULT</name> <name pos:line="17960" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17960" pos:column="43">GetPropertyProxy</name><argument_list pos:line="17960" pos:column="59">( 
            <comment type="block" pos:line="17961" pos:column="13">/* [in] */</comment> <argument pos:line="17961" pos:column="24">DWORD dwID</argument>,
            <comment type="block" pos:line="17962" pos:column="13">/* [out] */</comment> <argument pos:line="17962" pos:column="25">__RPC__deref_out_opt IPropertyProxyEESide **proxy</argument>)</argument_list></macro> <op:operator pos:line="17962" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="17962" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17966" pos:column="1">#<cpp:directive pos:line="17966" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17966" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17968" pos:column="5">typedef <type><struct pos:line="17968" pos:column="13">struct <name pos:line="17968" pos:column="20">IPropertyProxyProviderVtbl</name>
    <block pos:line="17969" pos:column="5">{<public type="default" pos:line="17969" pos:column="6">
        <function_decl><type><name pos:line="17970" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17972" pos:column="9">HRESULT</name></type> ( <name pos:line="17972" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17972" pos:column="37">*</type:modifier><name pos:line="17972" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17972" pos:column="54">( 
            <param><decl><type><name pos:line="17973" pos:column="13">IPropertyProxyProvider</name> <type:modifier pos:line="17973" pos:column="36">*</type:modifier></type> <name pos:line="17973" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17974" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17974" pos:column="24">__RPC__in</name> <name pos:line="17974" pos:column="34">REFIID</name></type> <name pos:line="17974" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17975" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17976" pos:column="13">__RPC__deref_out</name>  <name pos:line="17976" pos:column="31">void</name> <type:modifier pos:line="17976" pos:column="36">*</type:modifier><type:modifier pos:line="17976" pos:column="37">*</type:modifier></type><name pos:line="17976" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17978" pos:column="9">ULONG</name></type> ( <name pos:line="17978" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17978" pos:column="35">*</type:modifier><name pos:line="17978" pos:column="36">AddRef</name> )<parameter_list pos:line="17978" pos:column="44">( 
            <param><decl><type><name pos:line="17979" pos:column="13">IPropertyProxyProvider</name> <type:modifier pos:line="17979" pos:column="36">*</type:modifier></type> <name pos:line="17979" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17981" pos:column="9">ULONG</name></type> ( <name pos:line="17981" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17981" pos:column="35">*</type:modifier><name pos:line="17981" pos:column="36">Release</name> )<parameter_list pos:line="17981" pos:column="45">( 
            <param><decl><type><name pos:line="17982" pos:column="13">IPropertyProxyProvider</name> <type:modifier pos:line="17982" pos:column="36">*</type:modifier></type> <name pos:line="17982" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17984" pos:column="9">HRESULT</name></type> ( <name pos:line="17984" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17984" pos:column="37">*</type:modifier><name pos:line="17984" pos:column="38">GetPropertyProxy</name> )<parameter_list pos:line="17984" pos:column="56">( 
            <param><decl><type><name pos:line="17985" pos:column="13">IPropertyProxyProvider</name> <type:modifier pos:line="17985" pos:column="36">*</type:modifier></type> <name pos:line="17985" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17986" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17986" pos:column="24">DWORD</name></type> <name pos:line="17986" pos:column="30">dwID</name></decl></param>,
            <comment type="block" pos:line="17987" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17987" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17987" pos:column="46">IPropertyProxyEESide</name> <type:modifier pos:line="17987" pos:column="67">*</type:modifier><type:modifier pos:line="17987" pos:column="68">*</type:modifier></type><name pos:line="17987" pos:column="69">proxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17989" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17990" pos:column="7">IPropertyProxyProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17992" pos:column="5">interface</name></type> <name pos:line="17992" pos:column="15">IPropertyProxyProvider</name>
    <argument_list pos:line="17993" pos:column="5">{
        <argument><expr><name pos:line="17994" pos:column="9">CONST_VTBL</name> struct <name pos:line="17994" pos:column="27">IPropertyProxyProviderVtbl</name> <op:operator pos:line="17994" pos:column="54">*</op:operator><name pos:line="17994" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17999" pos:column="1">#<cpp:directive pos:line="17999" pos:column="2">ifdef</cpp:directive> <name pos:line="17999" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18002" pos:column="1">#<cpp:directive pos:line="18002" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18002" pos:column="9">IPropertyProxyProvider_QueryInterface</name><parameter_list pos:line="18002" pos:column="46">(<param><type><name pos:line="18002" pos:column="47">This</name></type></param>,<param><type><name pos:line="18002" pos:column="52">riid</name></type></param>,<param><type><name pos:line="18002" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18003" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18005" pos:column="1">#<cpp:directive pos:line="18005" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18005" pos:column="9">IPropertyProxyProvider_AddRef</name><parameter_list pos:line="18005" pos:column="38">(<param><type><name pos:line="18005" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18006" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18008" pos:column="1">#<cpp:directive pos:line="18008" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18008" pos:column="9">IPropertyProxyProvider_Release</name><parameter_list pos:line="18008" pos:column="39">(<param><type><name pos:line="18008" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18009" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18012" pos:column="1">#<cpp:directive pos:line="18012" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18012" pos:column="9">IPropertyProxyProvider_GetPropertyProxy</name><parameter_list pos:line="18012" pos:column="48">(<param><type><name pos:line="18012" pos:column="49">This</name></type></param>,<param><type><name pos:line="18012" pos:column="54">dwID</name></type></param>,<param><type><name pos:line="18012" pos:column="59">proxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18013" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPropertyProxy(This,dwID,proxy) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18015" pos:column="1">#<cpp:directive pos:line="18015" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18015" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18018" pos:column="1">#<cpp:directive pos:line="18018" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18018" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18023" pos:column="1">#<cpp:directive pos:line="18023" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18023" pos:column="9">/* __IPropertyProxyProvider_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18026" pos:column="1">#<cpp:directive pos:line="18026" pos:column="2">ifndef</cpp:directive> <name pos:line="18026" pos:column="9">__IManagedViewerHost_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18027" pos:column="1">#<cpp:directive pos:line="18027" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18027" pos:column="9">__IManagedViewerHost_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18029" pos:column="1">/* interface IManagedViewerHost */</comment>
<comment type="block" pos:line="18030" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18033" pos:column="1">EXTERN_C</name> <specifier pos:line="18033" pos:column="10">const</specifier> <name pos:line="18033" pos:column="16">IID</name></type> <name pos:line="18033" pos:column="20">IID_IManagedViewerHost</name></decl>;</decl_stmt>

<cpp:if pos:line="18035" pos:column="1">#<cpp:directive pos:line="18035" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18035" pos:column="5">defined</name><argument_list pos:line="18035" pos:column="12">(<argument><expr><name pos:line="18035" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18035" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18035" pos:column="29">!</op:operator><call><name pos:line="18035" pos:column="30">defined</name><argument_list pos:line="18035" pos:column="37">(<argument><expr><name pos:line="18035" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18037" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18037" pos:column="19">(<argument pos:line="18037" pos:column="20">"5968D43D-D21E-437c-9C71-77C52C3E287A"</argument>)</argument_list></macro>
    <label><name pos:line="18038" pos:column="5">IManagedViewerHost</name> :</label> <expr_stmt><expr pos:line="18038" pos:column="26">public <name pos:line="18038" pos:column="33">IUnknown</name>
    <block pos:line="18039" pos:column="5">{
    <expr pos:line="18040" pos:column="5">public<op:operator pos:line="18040" pos:column="11">:</op:operator>
        virtual <name pos:line="18041" pos:column="17">HRESULT</name> <name pos:line="18041" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18041" pos:column="43">CreateViewer</name><argument_list pos:line="18041" pos:column="55">( 
            <comment type="block" pos:line="18042" pos:column="13">/* [in] */</comment> <argument pos:line="18042" pos:column="24">ULONG hwnd</argument>,
            <comment type="block" pos:line="18043" pos:column="13">/* [in] */</comment> <argument pos:line="18043" pos:column="24">__RPC__in_opt IUnknown *hostServices</argument>,
            <comment type="block" pos:line="18044" pos:column="13">/* [in] */</comment> <argument pos:line="18044" pos:column="24">__RPC__in_opt IPropertyProxyEESide *property</argument>)</argument_list></macro> <op:operator pos:line="18044" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="18044" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18048" pos:column="1">#<cpp:directive pos:line="18048" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18048" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18050" pos:column="5">typedef <type><struct pos:line="18050" pos:column="13">struct <name pos:line="18050" pos:column="20">IManagedViewerHostVtbl</name>
    <block pos:line="18051" pos:column="5">{<public type="default" pos:line="18051" pos:column="6">
        <function_decl><type><name pos:line="18052" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18054" pos:column="9">HRESULT</name></type> ( <name pos:line="18054" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18054" pos:column="37">*</type:modifier><name pos:line="18054" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18054" pos:column="54">( 
            <param><decl><type><name pos:line="18055" pos:column="13">IManagedViewerHost</name> <type:modifier pos:line="18055" pos:column="32">*</type:modifier></type> <name pos:line="18055" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="18056" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18056" pos:column="24">__RPC__in</name> <name pos:line="18056" pos:column="34">REFIID</name></type> <name pos:line="18056" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18057" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18058" pos:column="13">__RPC__deref_out</name>  <name pos:line="18058" pos:column="31">void</name> <type:modifier pos:line="18058" pos:column="36">*</type:modifier><type:modifier pos:line="18058" pos:column="37">*</type:modifier></type><name pos:line="18058" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18060" pos:column="9">ULONG</name></type> ( <name pos:line="18060" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18060" pos:column="35">*</type:modifier><name pos:line="18060" pos:column="36">AddRef</name> )<parameter_list pos:line="18060" pos:column="44">( 
            <param><decl><type><name pos:line="18061" pos:column="13">IManagedViewerHost</name> <type:modifier pos:line="18061" pos:column="32">*</type:modifier></type> <name pos:line="18061" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18063" pos:column="9">ULONG</name></type> ( <name pos:line="18063" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18063" pos:column="35">*</type:modifier><name pos:line="18063" pos:column="36">Release</name> )<parameter_list pos:line="18063" pos:column="45">( 
            <param><decl><type><name pos:line="18064" pos:column="13">IManagedViewerHost</name> <type:modifier pos:line="18064" pos:column="32">*</type:modifier></type> <name pos:line="18064" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18066" pos:column="9">HRESULT</name></type> ( <name pos:line="18066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18066" pos:column="37">*</type:modifier><name pos:line="18066" pos:column="38">CreateViewer</name> )<parameter_list pos:line="18066" pos:column="52">( 
            <param><decl><type><name pos:line="18067" pos:column="13">IManagedViewerHost</name> <type:modifier pos:line="18067" pos:column="32">*</type:modifier></type> <name pos:line="18067" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="18068" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18068" pos:column="24">ULONG</name></type> <name pos:line="18068" pos:column="30">hwnd</name></decl></param>,
            <comment type="block" pos:line="18069" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18069" pos:column="24">__RPC__in_opt</name> <name pos:line="18069" pos:column="38">IUnknown</name> <type:modifier pos:line="18069" pos:column="47">*</type:modifier></type><name pos:line="18069" pos:column="48">hostServices</name></decl></param>,
            <comment type="block" pos:line="18070" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18070" pos:column="24">__RPC__in_opt</name> <name pos:line="18070" pos:column="38">IPropertyProxyEESide</name> <type:modifier pos:line="18070" pos:column="59">*</type:modifier></type><name pos:line="18070" pos:column="60">property</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18072" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18073" pos:column="7">IManagedViewerHostVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18075" pos:column="5">interface</name></type> <name pos:line="18075" pos:column="15">IManagedViewerHost</name>
    <argument_list pos:line="18076" pos:column="5">{
        <argument><expr><name pos:line="18077" pos:column="9">CONST_VTBL</name> struct <name pos:line="18077" pos:column="27">IManagedViewerHostVtbl</name> <op:operator pos:line="18077" pos:column="50">*</op:operator><name pos:line="18077" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18082" pos:column="1">#<cpp:directive pos:line="18082" pos:column="2">ifdef</cpp:directive> <name pos:line="18082" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18085" pos:column="1">#<cpp:directive pos:line="18085" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18085" pos:column="9">IManagedViewerHost_QueryInterface</name><parameter_list pos:line="18085" pos:column="42">(<param><type><name pos:line="18085" pos:column="43">This</name></type></param>,<param><type><name pos:line="18085" pos:column="48">riid</name></type></param>,<param><type><name pos:line="18085" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18086" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18088" pos:column="1">#<cpp:directive pos:line="18088" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18088" pos:column="9">IManagedViewerHost_AddRef</name><parameter_list pos:line="18088" pos:column="34">(<param><type><name pos:line="18088" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18089" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18091" pos:column="1">#<cpp:directive pos:line="18091" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18091" pos:column="9">IManagedViewerHost_Release</name><parameter_list pos:line="18091" pos:column="35">(<param><type><name pos:line="18091" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18092" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18095" pos:column="1">#<cpp:directive pos:line="18095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18095" pos:column="9">IManagedViewerHost_CreateViewer</name><parameter_list pos:line="18095" pos:column="40">(<param><type><name pos:line="18095" pos:column="41">This</name></type></param>,<param><type><name pos:line="18095" pos:column="46">hwnd</name></type></param>,<param><type><name pos:line="18095" pos:column="51">hostServices</name></type></param>,<param><type><name pos:line="18095" pos:column="64">property</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18096" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateViewer(This,hwnd,hostServices,property) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18098" pos:column="1">#<cpp:directive pos:line="18098" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18098" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18101" pos:column="1">#<cpp:directive pos:line="18101" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18101" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18106" pos:column="1">#<cpp:directive pos:line="18106" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18106" pos:column="9">/* __IManagedViewerHost_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18109" pos:column="1">#<cpp:directive pos:line="18109" pos:column="2">ifndef</cpp:directive> <name pos:line="18109" pos:column="9">__IEELocalObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18110" pos:column="1">#<cpp:directive pos:line="18110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18110" pos:column="9">__IEELocalObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18112" pos:column="1">/* interface IEELocalObject */</comment>
<comment type="block" pos:line="18113" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18116" pos:column="1">EXTERN_C</name> <specifier pos:line="18116" pos:column="10">const</specifier> <name pos:line="18116" pos:column="16">IID</name></type> <name pos:line="18116" pos:column="20">IID_IEELocalObject</name></decl>;</decl_stmt>

<cpp:if pos:line="18118" pos:column="1">#<cpp:directive pos:line="18118" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18118" pos:column="5">defined</name><argument_list pos:line="18118" pos:column="12">(<argument><expr><name pos:line="18118" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18118" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18118" pos:column="29">!</op:operator><call><name pos:line="18118" pos:column="30">defined</name><argument_list pos:line="18118" pos:column="37">(<argument><expr><name pos:line="18118" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18120" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18120" pos:column="19">(<argument pos:line="18120" pos:column="20">"44F8F85F-5514-49a3-8173-6F9C9F1C4832"</argument>)</argument_list></macro>
    <label><name pos:line="18121" pos:column="5">IEELocalObject</name> :</label> <expr_stmt><expr pos:line="18121" pos:column="22">public <name pos:line="18121" pos:column="29">IUnknown</name>
    <block pos:line="18122" pos:column="5">{
    <expr pos:line="18123" pos:column="5">public<op:operator pos:line="18123" pos:column="11">:</op:operator>
        virtual <name pos:line="18124" pos:column="17">HRESULT</name> <name pos:line="18124" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18124" pos:column="43">SetCallback</name><argument_list pos:line="18124" pos:column="54">( 
            <argument pos:line="18125" pos:column="13">__RPC__in_opt IDebugSettingsCallback2 *pCallback</argument>)</argument_list></macro> <op:operator pos:line="18125" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="18125" pos:column="65">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18129" pos:column="1">#<cpp:directive pos:line="18129" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18129" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18131" pos:column="5">typedef <type><struct pos:line="18131" pos:column="13">struct <name pos:line="18131" pos:column="20">IEELocalObjectVtbl</name>
    <block pos:line="18132" pos:column="5">{<public type="default" pos:line="18132" pos:column="6">
        <function_decl><type><name pos:line="18133" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18135" pos:column="9">HRESULT</name></type> ( <name pos:line="18135" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18135" pos:column="37">*</type:modifier><name pos:line="18135" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18135" pos:column="54">( 
            <param><decl><type><name pos:line="18136" pos:column="13">IEELocalObject</name> <type:modifier pos:line="18136" pos:column="28">*</type:modifier></type> <name pos:line="18136" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="18137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18137" pos:column="24">__RPC__in</name> <name pos:line="18137" pos:column="34">REFIID</name></type> <name pos:line="18137" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18138" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18139" pos:column="13">__RPC__deref_out</name>  <name pos:line="18139" pos:column="31">void</name> <type:modifier pos:line="18139" pos:column="36">*</type:modifier><type:modifier pos:line="18139" pos:column="37">*</type:modifier></type><name pos:line="18139" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18141" pos:column="9">ULONG</name></type> ( <name pos:line="18141" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18141" pos:column="35">*</type:modifier><name pos:line="18141" pos:column="36">AddRef</name> )<parameter_list pos:line="18141" pos:column="44">( 
            <param><decl><type><name pos:line="18142" pos:column="13">IEELocalObject</name> <type:modifier pos:line="18142" pos:column="28">*</type:modifier></type> <name pos:line="18142" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18144" pos:column="9">ULONG</name></type> ( <name pos:line="18144" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18144" pos:column="35">*</type:modifier><name pos:line="18144" pos:column="36">Release</name> )<parameter_list pos:line="18144" pos:column="45">( 
            <param><decl><type><name pos:line="18145" pos:column="13">IEELocalObject</name> <type:modifier pos:line="18145" pos:column="28">*</type:modifier></type> <name pos:line="18145" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18147" pos:column="9">HRESULT</name></type> ( <name pos:line="18147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18147" pos:column="37">*</type:modifier><name pos:line="18147" pos:column="38">SetCallback</name> )<parameter_list pos:line="18147" pos:column="51">( 
            <param><decl><type><name pos:line="18148" pos:column="13">IEELocalObject</name> <type:modifier pos:line="18148" pos:column="28">*</type:modifier></type> <name pos:line="18148" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="18149" pos:column="13">__RPC__in_opt</name> <name pos:line="18149" pos:column="27">IDebugSettingsCallback2</name> <type:modifier pos:line="18149" pos:column="51">*</type:modifier></type><name pos:line="18149" pos:column="52">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18151" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18152" pos:column="7">IEELocalObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18154" pos:column="5">interface</name></type> <name pos:line="18154" pos:column="15">IEELocalObject</name>
    <argument_list pos:line="18155" pos:column="5">{
        <argument><expr><name pos:line="18156" pos:column="9">CONST_VTBL</name> struct <name pos:line="18156" pos:column="27">IEELocalObjectVtbl</name> <op:operator pos:line="18156" pos:column="46">*</op:operator><name pos:line="18156" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18161" pos:column="1">#<cpp:directive pos:line="18161" pos:column="2">ifdef</cpp:directive> <name pos:line="18161" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18164" pos:column="1">#<cpp:directive pos:line="18164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18164" pos:column="9">IEELocalObject_QueryInterface</name><parameter_list pos:line="18164" pos:column="38">(<param><type><name pos:line="18164" pos:column="39">This</name></type></param>,<param><type><name pos:line="18164" pos:column="44">riid</name></type></param>,<param><type><name pos:line="18164" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18165" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18167" pos:column="1">#<cpp:directive pos:line="18167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18167" pos:column="9">IEELocalObject_AddRef</name><parameter_list pos:line="18167" pos:column="30">(<param><type><name pos:line="18167" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18168" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18170" pos:column="1">#<cpp:directive pos:line="18170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18170" pos:column="9">IEELocalObject_Release</name><parameter_list pos:line="18170" pos:column="31">(<param><type><name pos:line="18170" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18171" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18174" pos:column="1">#<cpp:directive pos:line="18174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18174" pos:column="9">IEELocalObject_SetCallback</name><parameter_list pos:line="18174" pos:column="35">(<param><type><name pos:line="18174" pos:column="36">This</name></type></param>,<param><type><name pos:line="18174" pos:column="41">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18175" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCallback(This,pCallback) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18177" pos:column="1">#<cpp:directive pos:line="18177" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18177" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18180" pos:column="1">#<cpp:directive pos:line="18180" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18180" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18185" pos:column="1">#<cpp:directive pos:line="18185" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18185" pos:column="9">/* __IEELocalObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18188" pos:column="1">#<cpp:directive pos:line="18188" pos:column="2">ifndef</cpp:directive> <name pos:line="18188" pos:column="9">__IEEAssemblyRefResolveComparer_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18189" pos:column="1">#<cpp:directive pos:line="18189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18189" pos:column="9">__IEEAssemblyRefResolveComparer_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18191" pos:column="1">/* interface IEEAssemblyRefResolveComparer */</comment>
<comment type="block" pos:line="18192" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18195" pos:column="1">EXTERN_C</name> <specifier pos:line="18195" pos:column="10">const</specifier> <name pos:line="18195" pos:column="16">IID</name></type> <name pos:line="18195" pos:column="20">IID_IEEAssemblyRefResolveComparer</name></decl>;</decl_stmt>

<cpp:if pos:line="18197" pos:column="1">#<cpp:directive pos:line="18197" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18197" pos:column="5">defined</name><argument_list pos:line="18197" pos:column="12">(<argument><expr><name pos:line="18197" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18197" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18197" pos:column="29">!</op:operator><call><name pos:line="18197" pos:column="30">defined</name><argument_list pos:line="18197" pos:column="37">(<argument><expr><name pos:line="18197" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18199" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18199" pos:column="19">(<argument pos:line="18199" pos:column="20">"6F1A544C-E69E-4a52-9EA1-25C897B05BEF"</argument>)</argument_list></macro>
    <label><name pos:line="18200" pos:column="5">IEEAssemblyRefResolveComparer</name> :</label> <expr_stmt><expr pos:line="18200" pos:column="37">public <name pos:line="18200" pos:column="44">IUnknown</name>
    <block pos:line="18201" pos:column="5">{
    <expr pos:line="18202" pos:column="5">public<op:operator pos:line="18202" pos:column="11">:</op:operator>
        virtual <name pos:line="18203" pos:column="17">HRESULT</name> <name pos:line="18203" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18203" pos:column="43">CompareRef</name><argument_list pos:line="18203" pos:column="53">( 
            <comment type="block" pos:line="18204" pos:column="13">/* [in] */</comment> <argument pos:line="18204" pos:column="24">DWORD cookieFirst</argument>,
            <comment type="block" pos:line="18205" pos:column="13">/* [in] */</comment> <argument pos:line="18205" pos:column="24">DWORD cookieSecond</argument>,
            <comment type="block" pos:line="18206" pos:column="13">/* [in] */</comment> <argument pos:line="18206" pos:column="24">DWORD cookieTarget</argument>,
            <comment type="block" pos:line="18207" pos:column="13">/* [out] */</comment> <argument pos:line="18207" pos:column="25">__RPC__out BOOL *firstIsBetter</argument>)</argument_list></macro> <op:operator pos:line="18207" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="18207" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18211" pos:column="1">#<cpp:directive pos:line="18211" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18211" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18213" pos:column="5">typedef <type><struct pos:line="18213" pos:column="13">struct <name pos:line="18213" pos:column="20">IEEAssemblyRefResolveComparerVtbl</name>
    <block pos:line="18214" pos:column="5">{<public type="default" pos:line="18214" pos:column="6">
        <function_decl><type><name pos:line="18215" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18217" pos:column="9">HRESULT</name></type> ( <name pos:line="18217" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18217" pos:column="37">*</type:modifier><name pos:line="18217" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18217" pos:column="54">( 
            <param><decl><type><name pos:line="18218" pos:column="13">IEEAssemblyRefResolveComparer</name> <type:modifier pos:line="18218" pos:column="43">*</type:modifier></type> <name pos:line="18218" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="18219" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18219" pos:column="24">__RPC__in</name> <name pos:line="18219" pos:column="34">REFIID</name></type> <name pos:line="18219" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18220" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18221" pos:column="13">__RPC__deref_out</name>  <name pos:line="18221" pos:column="31">void</name> <type:modifier pos:line="18221" pos:column="36">*</type:modifier><type:modifier pos:line="18221" pos:column="37">*</type:modifier></type><name pos:line="18221" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18223" pos:column="9">ULONG</name></type> ( <name pos:line="18223" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18223" pos:column="35">*</type:modifier><name pos:line="18223" pos:column="36">AddRef</name> )<parameter_list pos:line="18223" pos:column="44">( 
            <param><decl><type><name pos:line="18224" pos:column="13">IEEAssemblyRefResolveComparer</name> <type:modifier pos:line="18224" pos:column="43">*</type:modifier></type> <name pos:line="18224" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18226" pos:column="9">ULONG</name></type> ( <name pos:line="18226" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18226" pos:column="35">*</type:modifier><name pos:line="18226" pos:column="36">Release</name> )<parameter_list pos:line="18226" pos:column="45">( 
            <param><decl><type><name pos:line="18227" pos:column="13">IEEAssemblyRefResolveComparer</name> <type:modifier pos:line="18227" pos:column="43">*</type:modifier></type> <name pos:line="18227" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18229" pos:column="9">HRESULT</name></type> ( <name pos:line="18229" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18229" pos:column="37">*</type:modifier><name pos:line="18229" pos:column="38">CompareRef</name> )<parameter_list pos:line="18229" pos:column="50">( 
            <param><decl><type><name pos:line="18230" pos:column="13">IEEAssemblyRefResolveComparer</name> <type:modifier pos:line="18230" pos:column="43">*</type:modifier></type> <name pos:line="18230" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="18231" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18231" pos:column="24">DWORD</name></type> <name pos:line="18231" pos:column="30">cookieFirst</name></decl></param>,
            <comment type="block" pos:line="18232" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18232" pos:column="24">DWORD</name></type> <name pos:line="18232" pos:column="30">cookieSecond</name></decl></param>,
            <comment type="block" pos:line="18233" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18233" pos:column="24">DWORD</name></type> <name pos:line="18233" pos:column="30">cookieTarget</name></decl></param>,
            <comment type="block" pos:line="18234" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18234" pos:column="25">__RPC__out</name> <name pos:line="18234" pos:column="36">BOOL</name> <type:modifier pos:line="18234" pos:column="41">*</type:modifier></type><name pos:line="18234" pos:column="42">firstIsBetter</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18236" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18237" pos:column="7">IEEAssemblyRefResolveComparerVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18239" pos:column="5">interface</name></type> <name pos:line="18239" pos:column="15">IEEAssemblyRefResolveComparer</name>
    <argument_list pos:line="18240" pos:column="5">{
        <argument><expr><name pos:line="18241" pos:column="9">CONST_VTBL</name> struct <name pos:line="18241" pos:column="27">IEEAssemblyRefResolveComparerVtbl</name> <op:operator pos:line="18241" pos:column="61">*</op:operator><name pos:line="18241" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18246" pos:column="1">#<cpp:directive pos:line="18246" pos:column="2">ifdef</cpp:directive> <name pos:line="18246" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18249" pos:column="1">#<cpp:directive pos:line="18249" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18249" pos:column="9">IEEAssemblyRefResolveComparer_QueryInterface</name><parameter_list pos:line="18249" pos:column="53">(<param><type><name pos:line="18249" pos:column="54">This</name></type></param>,<param><type><name pos:line="18249" pos:column="59">riid</name></type></param>,<param><type><name pos:line="18249" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18250" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18252" pos:column="1">#<cpp:directive pos:line="18252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18252" pos:column="9">IEEAssemblyRefResolveComparer_AddRef</name><parameter_list pos:line="18252" pos:column="45">(<param><type><name pos:line="18252" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18253" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18255" pos:column="1">#<cpp:directive pos:line="18255" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18255" pos:column="9">IEEAssemblyRefResolveComparer_Release</name><parameter_list pos:line="18255" pos:column="46">(<param><type><name pos:line="18255" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18256" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18259" pos:column="1">#<cpp:directive pos:line="18259" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18259" pos:column="9">IEEAssemblyRefResolveComparer_CompareRef</name><parameter_list pos:line="18259" pos:column="49">(<param><type><name pos:line="18259" pos:column="50">This</name></type></param>,<param><type><name pos:line="18259" pos:column="55">cookieFirst</name></type></param>,<param><type><name pos:line="18259" pos:column="67">cookieSecond</name></type></param>,<param><type><name pos:line="18259" pos:column="80">cookieTarget</name></type></param>,<param><type><name pos:line="18259" pos:column="93">firstIsBetter</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18260" pos:column="5">( (This)-&gt;lpVtbl -&gt; CompareRef(This,cookieFirst,cookieSecond,cookieTarget,firstIsBetter) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18262" pos:column="1">#<cpp:directive pos:line="18262" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18262" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18265" pos:column="1">#<cpp:directive pos:line="18265" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18265" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18270" pos:column="1">#<cpp:directive pos:line="18270" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18270" pos:column="9">/* __IEEAssemblyRefResolveComparer_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18273" pos:column="1">#<cpp:directive pos:line="18273" pos:column="2">ifndef</cpp:directive> <name pos:line="18273" pos:column="9">__IEEAssemblyRef_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18274" pos:column="1">#<cpp:directive pos:line="18274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18274" pos:column="9">__IEEAssemblyRef_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18276" pos:column="1">/* interface IEEAssemblyRef */</comment>
<comment type="block" pos:line="18277" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18280" pos:column="1">EXTERN_C</name> <specifier pos:line="18280" pos:column="10">const</specifier> <name pos:line="18280" pos:column="16">IID</name></type> <name pos:line="18280" pos:column="20">IID_IEEAssemblyRef</name></decl>;</decl_stmt>

<cpp:if pos:line="18282" pos:column="1">#<cpp:directive pos:line="18282" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18282" pos:column="5">defined</name><argument_list pos:line="18282" pos:column="12">(<argument><expr><name pos:line="18282" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18282" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18282" pos:column="29">!</op:operator><call><name pos:line="18282" pos:column="30">defined</name><argument_list pos:line="18282" pos:column="37">(<argument><expr><name pos:line="18282" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18284" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18284" pos:column="19">(<argument pos:line="18284" pos:column="20">"AAD20A0E-9CD9-40ab-91B9-3C1943562C84"</argument>)</argument_list></macro>
    <label><name pos:line="18285" pos:column="5">IEEAssemblyRef</name> :</label> <expr_stmt><expr pos:line="18285" pos:column="22">public <name pos:line="18285" pos:column="29">IUnknown</name>
    <block pos:line="18286" pos:column="5">{
    <expr pos:line="18287" pos:column="5">public<op:operator pos:line="18287" pos:column="11">:</op:operator>
        virtual <name pos:line="18288" pos:column="17">HRESULT</name> <name pos:line="18288" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18288" pos:column="43">GetName</name><argument_list pos:line="18288" pos:column="50">( 
            <comment type="block" pos:line="18289" pos:column="13">/* [out] */</comment> <argument pos:line="18289" pos:column="25">__RPC__deref_out_opt BSTR *bstr</argument>)</argument_list></macro> <op:operator pos:line="18289" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="18289" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="18291" pos:column="9">virtual <name pos:line="18291" pos:column="17">HRESULT</name> <name pos:line="18291" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18291" pos:column="43">GetVersion</name><argument_list pos:line="18291" pos:column="53">( 
            <comment type="block" pos:line="18292" pos:column="13">/* [out] */</comment> <argument pos:line="18292" pos:column="25">__RPC__out USHORT *major</argument>,
            <comment type="block" pos:line="18293" pos:column="13">/* [out] */</comment> <argument pos:line="18293" pos:column="25">__RPC__out USHORT *minor</argument>,
            <comment type="block" pos:line="18294" pos:column="13">/* [out] */</comment> <argument pos:line="18294" pos:column="25">__RPC__out USHORT *build</argument>,
            <comment type="block" pos:line="18295" pos:column="13">/* [out] */</comment> <argument pos:line="18295" pos:column="25">__RPC__out USHORT *revision</argument>)</argument_list></macro> <op:operator pos:line="18295" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="18295" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="18297" pos:column="9">virtual <name pos:line="18297" pos:column="17">HRESULT</name> <name pos:line="18297" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18297" pos:column="43">GetCulture</name><argument_list pos:line="18297" pos:column="53">( 
            <comment type="block" pos:line="18298" pos:column="13">/* [out] */</comment> <argument pos:line="18298" pos:column="25">__RPC__deref_out_opt BSTR *bstr</argument>)</argument_list></macro> <op:operator pos:line="18298" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="18298" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="18300" pos:column="9">virtual <name pos:line="18300" pos:column="17">HRESULT</name> <name pos:line="18300" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18300" pos:column="43">GetPublicKey</name><argument_list pos:line="18300" pos:column="55">( 
            <comment type="block" pos:line="18301" pos:column="13">/* [out] */</comment> <argument pos:line="18301" pos:column="25">__RPC__deref_out_opt BSTR *key</argument>)</argument_list></macro> <op:operator pos:line="18301" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="18301" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18305" pos:column="1">#<cpp:directive pos:line="18305" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18305" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18307" pos:column="5">typedef <type><struct pos:line="18307" pos:column="13">struct <name pos:line="18307" pos:column="20">IEEAssemblyRefVtbl</name>
    <block pos:line="18308" pos:column="5">{<public type="default" pos:line="18308" pos:column="6">
        <function_decl><type><name pos:line="18309" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18311" pos:column="9">HRESULT</name></type> ( <name pos:line="18311" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18311" pos:column="37">*</type:modifier><name pos:line="18311" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18311" pos:column="54">( 
            <param><decl><type><name pos:line="18312" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18312" pos:column="28">*</type:modifier></type> <name pos:line="18312" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="18313" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18313" pos:column="24">__RPC__in</name> <name pos:line="18313" pos:column="34">REFIID</name></type> <name pos:line="18313" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18314" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18315" pos:column="13">__RPC__deref_out</name>  <name pos:line="18315" pos:column="31">void</name> <type:modifier pos:line="18315" pos:column="36">*</type:modifier><type:modifier pos:line="18315" pos:column="37">*</type:modifier></type><name pos:line="18315" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18317" pos:column="9">ULONG</name></type> ( <name pos:line="18317" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18317" pos:column="35">*</type:modifier><name pos:line="18317" pos:column="36">AddRef</name> )<parameter_list pos:line="18317" pos:column="44">( 
            <param><decl><type><name pos:line="18318" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18318" pos:column="28">*</type:modifier></type> <name pos:line="18318" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18320" pos:column="9">ULONG</name></type> ( <name pos:line="18320" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18320" pos:column="35">*</type:modifier><name pos:line="18320" pos:column="36">Release</name> )<parameter_list pos:line="18320" pos:column="45">( 
            <param><decl><type><name pos:line="18321" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18321" pos:column="28">*</type:modifier></type> <name pos:line="18321" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18323" pos:column="9">HRESULT</name></type> ( <name pos:line="18323" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18323" pos:column="37">*</type:modifier><name pos:line="18323" pos:column="38">GetName</name> )<parameter_list pos:line="18323" pos:column="47">( 
            <param><decl><type><name pos:line="18324" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18324" pos:column="28">*</type:modifier></type> <name pos:line="18324" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="18325" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18325" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18325" pos:column="46">BSTR</name> <type:modifier pos:line="18325" pos:column="51">*</type:modifier></type><name pos:line="18325" pos:column="52">bstr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18327" pos:column="9">HRESULT</name></type> ( <name pos:line="18327" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18327" pos:column="37">*</type:modifier><name pos:line="18327" pos:column="38">GetVersion</name> )<parameter_list pos:line="18327" pos:column="50">( 
            <param><decl><type><name pos:line="18328" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18328" pos:column="28">*</type:modifier></type> <name pos:line="18328" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="18329" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18329" pos:column="25">__RPC__out</name> <name pos:line="18329" pos:column="36">USHORT</name> <type:modifier pos:line="18329" pos:column="43">*</type:modifier></type><name pos:line="18329" pos:column="44">major</name></decl></param>,
            <comment type="block" pos:line="18330" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18330" pos:column="25">__RPC__out</name> <name pos:line="18330" pos:column="36">USHORT</name> <type:modifier pos:line="18330" pos:column="43">*</type:modifier></type><name pos:line="18330" pos:column="44">minor</name></decl></param>,
            <comment type="block" pos:line="18331" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18331" pos:column="25">__RPC__out</name> <name pos:line="18331" pos:column="36">USHORT</name> <type:modifier pos:line="18331" pos:column="43">*</type:modifier></type><name pos:line="18331" pos:column="44">build</name></decl></param>,
            <comment type="block" pos:line="18332" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18332" pos:column="25">__RPC__out</name> <name pos:line="18332" pos:column="36">USHORT</name> <type:modifier pos:line="18332" pos:column="43">*</type:modifier></type><name pos:line="18332" pos:column="44">revision</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18334" pos:column="9">HRESULT</name></type> ( <name pos:line="18334" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18334" pos:column="37">*</type:modifier><name pos:line="18334" pos:column="38">GetCulture</name> )<parameter_list pos:line="18334" pos:column="50">( 
            <param><decl><type><name pos:line="18335" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18335" pos:column="28">*</type:modifier></type> <name pos:line="18335" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="18336" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18336" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18336" pos:column="46">BSTR</name> <type:modifier pos:line="18336" pos:column="51">*</type:modifier></type><name pos:line="18336" pos:column="52">bstr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18338" pos:column="9">HRESULT</name></type> ( <name pos:line="18338" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18338" pos:column="37">*</type:modifier><name pos:line="18338" pos:column="38">GetPublicKey</name> )<parameter_list pos:line="18338" pos:column="52">( 
            <param><decl><type><name pos:line="18339" pos:column="13">IEEAssemblyRef</name> <type:modifier pos:line="18339" pos:column="28">*</type:modifier></type> <name pos:line="18339" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="18340" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18340" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18340" pos:column="46">BSTR</name> <type:modifier pos:line="18340" pos:column="51">*</type:modifier></type><name pos:line="18340" pos:column="52">key</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18342" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18343" pos:column="7">IEEAssemblyRefVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18345" pos:column="5">interface</name></type> <name pos:line="18345" pos:column="15">IEEAssemblyRef</name>
    <argument_list pos:line="18346" pos:column="5">{
        <argument><expr><name pos:line="18347" pos:column="9">CONST_VTBL</name> struct <name pos:line="18347" pos:column="27">IEEAssemblyRefVtbl</name> <op:operator pos:line="18347" pos:column="46">*</op:operator><name pos:line="18347" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18352" pos:column="1">#<cpp:directive pos:line="18352" pos:column="2">ifdef</cpp:directive> <name pos:line="18352" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18355" pos:column="1">#<cpp:directive pos:line="18355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18355" pos:column="9">IEEAssemblyRef_QueryInterface</name><parameter_list pos:line="18355" pos:column="38">(<param><type><name pos:line="18355" pos:column="39">This</name></type></param>,<param><type><name pos:line="18355" pos:column="44">riid</name></type></param>,<param><type><name pos:line="18355" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18356" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18358" pos:column="1">#<cpp:directive pos:line="18358" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18358" pos:column="9">IEEAssemblyRef_AddRef</name><parameter_list pos:line="18358" pos:column="30">(<param><type><name pos:line="18358" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18359" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18361" pos:column="1">#<cpp:directive pos:line="18361" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18361" pos:column="9">IEEAssemblyRef_Release</name><parameter_list pos:line="18361" pos:column="31">(<param><type><name pos:line="18361" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18362" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18365" pos:column="1">#<cpp:directive pos:line="18365" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18365" pos:column="9">IEEAssemblyRef_GetName</name><parameter_list pos:line="18365" pos:column="31">(<param><type><name pos:line="18365" pos:column="32">This</name></type></param>,<param><type><name pos:line="18365" pos:column="37">bstr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18366" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,bstr) )</cpp:value></cpp:define> 

<cpp:define pos:line="18368" pos:column="1">#<cpp:directive pos:line="18368" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18368" pos:column="9">IEEAssemblyRef_GetVersion</name><parameter_list pos:line="18368" pos:column="34">(<param><type><name pos:line="18368" pos:column="35">This</name></type></param>,<param><type><name pos:line="18368" pos:column="40">major</name></type></param>,<param><type><name pos:line="18368" pos:column="46">minor</name></type></param>,<param><type><name pos:line="18368" pos:column="52">build</name></type></param>,<param><type><name pos:line="18368" pos:column="58">revision</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18369" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetVersion(This,major,minor,build,revision) )</cpp:value></cpp:define> 

<cpp:define pos:line="18371" pos:column="1">#<cpp:directive pos:line="18371" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18371" pos:column="9">IEEAssemblyRef_GetCulture</name><parameter_list pos:line="18371" pos:column="34">(<param><type><name pos:line="18371" pos:column="35">This</name></type></param>,<param><type><name pos:line="18371" pos:column="40">bstr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18372" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCulture(This,bstr) )</cpp:value></cpp:define> 

<cpp:define pos:line="18374" pos:column="1">#<cpp:directive pos:line="18374" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18374" pos:column="9">IEEAssemblyRef_GetPublicKey</name><parameter_list pos:line="18374" pos:column="36">(<param><type><name pos:line="18374" pos:column="37">This</name></type></param>,<param><type><name pos:line="18374" pos:column="42">key</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18375" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPublicKey(This,key) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18377" pos:column="1">#<cpp:directive pos:line="18377" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18377" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18380" pos:column="1">#<cpp:directive pos:line="18380" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18380" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18385" pos:column="1">#<cpp:directive pos:line="18385" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18385" pos:column="9">/* __IEEAssemblyRef_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18388" pos:column="1">#<cpp:directive pos:line="18388" pos:column="2">ifndef</cpp:directive> <name pos:line="18388" pos:column="9">__IEEHelperObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18389" pos:column="1">#<cpp:directive pos:line="18389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18389" pos:column="9">__IEEHelperObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18391" pos:column="1">/* interface IEEHelperObject */</comment>
<comment type="block" pos:line="18392" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="18395" pos:column="1">enum <name pos:line="18395" pos:column="6">enum_ASSEMBLYFLAGS</name>
    <block pos:line="18396" pos:column="5">{	<decl><name pos:line="18396" pos:column="9">ASMF_USERDIR</name>	<init pos:line="18396" pos:column="25">= <expr><lit:literal type="number" pos:line="18396" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="18396" pos:column="30">,</op:operator>
	<decl><name pos:line="18397" pos:column="9">ASMF_SHAREDDIR</name>	<init pos:line="18397" pos:column="25">= <expr><lit:literal type="number" pos:line="18397" pos:column="27">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="18399" pos:column="1">typedef <type><name pos:line="18399" pos:column="9">DWORD</name></type> <name pos:line="18399" pos:column="15">ASSEMBLYFLAGS</name>;</typedef>


<decl_stmt><decl><type><name pos:line="18402" pos:column="1">EXTERN_C</name> <specifier pos:line="18402" pos:column="10">const</specifier> <name pos:line="18402" pos:column="16">IID</name></type> <name pos:line="18402" pos:column="20">IID_IEEHelperObject</name></decl>;</decl_stmt>

<cpp:if pos:line="18404" pos:column="1">#<cpp:directive pos:line="18404" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18404" pos:column="5">defined</name><argument_list pos:line="18404" pos:column="12">(<argument><expr><name pos:line="18404" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18404" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18404" pos:column="29">!</op:operator><call><name pos:line="18404" pos:column="30">defined</name><argument_list pos:line="18404" pos:column="37">(<argument><expr><name pos:line="18404" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18406" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18406" pos:column="19">(<argument pos:line="18406" pos:column="20">"4A3BCDE5-5F66-4cc8-9FA0-14275CCEE688"</argument>)</argument_list></macro>
    <label><name pos:line="18407" pos:column="5">IEEHelperObject</name> :</label> <expr_stmt><expr pos:line="18407" pos:column="23">public <name pos:line="18407" pos:column="30">IUnknown</name>
    <block pos:line="18408" pos:column="5">{
    <expr pos:line="18409" pos:column="5">public<op:operator pos:line="18409" pos:column="11">:</op:operator>
        virtual <name pos:line="18410" pos:column="17">HRESULT</name> <name pos:line="18410" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18410" pos:column="43">InitCache</name><argument_list pos:line="18410" pos:column="52">( 
            <argument pos:line="18411" pos:column="13">__RPC__in_opt IEEAssemblyRefResolveComparer *pResolver</argument>)</argument_list></macro> <op:operator pos:line="18411" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="18411" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="18413" pos:column="9">virtual <name pos:line="18413" pos:column="17">HRESULT</name> <name pos:line="18413" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18413" pos:column="43">GetTargetClass</name><argument_list pos:line="18413" pos:column="57">( 
            <comment type="block" pos:line="18414" pos:column="13">/* [in] */</comment> <argument pos:line="18414" pos:column="24">__RPC__in LPCOLESTR name</argument>,
            <comment type="block" pos:line="18415" pos:column="13">/* [in] */</comment> <argument pos:line="18415" pos:column="24">DWORD assemblyCookie</argument>,
            <comment type="block" pos:line="18416" pos:column="13">/* [out] */</comment> <argument pos:line="18416" pos:column="25">__RPC__out DWORD *cookie</argument>,
            <comment type="block" pos:line="18417" pos:column="13">/* [out] */</comment> <argument pos:line="18417" pos:column="25">__RPC__out ULONG *valueAttrCount</argument>,
            <comment type="block" pos:line="18418" pos:column="13">/* [out] */</comment> <argument pos:line="18418" pos:column="25">__RPC__out ULONG *viewerAttrCount</argument>,
            <comment type="block" pos:line="18419" pos:column="13">/* [out] */</comment> <argument pos:line="18419" pos:column="25">__RPC__out ULONG *visualizerAttrCount</argument>)</argument_list></macro> <op:operator pos:line="18419" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="18419" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="18421" pos:column="9">virtual <name pos:line="18421" pos:column="17">HRESULT</name> <name pos:line="18421" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18421" pos:column="43">GetTargetAssembly</name><argument_list pos:line="18421" pos:column="60">( 
            <comment type="block" pos:line="18422" pos:column="13">/* [in] */</comment> <argument pos:line="18422" pos:column="24">__RPC__in LPCOLESTR name</argument>,
            <comment type="block" pos:line="18423" pos:column="13">/* [out] */</comment> <argument pos:line="18423" pos:column="25">__RPC__out DWORD *cookie</argument>)</argument_list></macro> <op:operator pos:line="18423" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="18423" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="18425" pos:column="9">virtual <name pos:line="18425" pos:column="17">HRESULT</name> <name pos:line="18425" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18425" pos:column="43">GetAssembly</name><argument_list pos:line="18425" pos:column="54">( 
            <comment type="block" pos:line="18426" pos:column="13">/* [in] */</comment> <argument pos:line="18426" pos:column="24">DWORD assemblyCookie</argument>,
            <argument pos:line="18427" pos:column="13">GETASSEMBLY flags</argument>,
            <comment type="block" pos:line="18428" pos:column="13">/* [out] */</comment> <argument pos:line="18428" pos:column="25">__RPC__out ASSEMBLYFLAGS *flagsOut</argument>,
            <comment type="block" pos:line="18429" pos:column="13">/* [out] */</comment> <argument pos:line="18429" pos:column="25">__RPC__deref_out_opt BSTR *name</argument>,
            <comment type="block" pos:line="18430" pos:column="13">/* [out] */</comment> <argument pos:line="18430" pos:column="25">__RPC__deref_out_opt IEEDataStorage **assemBytes</argument>,
            <comment type="block" pos:line="18431" pos:column="13">/* [out] */</comment> <argument pos:line="18431" pos:column="25">__RPC__deref_out_opt IEEDataStorage **pdbBytes</argument>)</argument_list></macro> <op:operator pos:line="18431" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="18431" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="18433" pos:column="9">virtual <name pos:line="18433" pos:column="17">HRESULT</name> <name pos:line="18433" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18433" pos:column="43">GetHostAssembly</name><argument_list pos:line="18433" pos:column="58">( 
            <argument pos:line="18434" pos:column="13">GETASSEMBLY flags</argument>,
            <comment type="block" pos:line="18435" pos:column="13">/* [out] */</comment> <argument pos:line="18435" pos:column="25">__RPC__deref_out_opt IEEDataStorage **assemBytes</argument>,
            <comment type="block" pos:line="18436" pos:column="13">/* [out] */</comment> <argument pos:line="18436" pos:column="25">__RPC__deref_out_opt IEEDataStorage **pdbBytes</argument>)</argument_list></macro> <op:operator pos:line="18436" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="18436" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="18438" pos:column="9">virtual <name pos:line="18438" pos:column="17">HRESULT</name> <name pos:line="18438" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18438" pos:column="43">GetValueAttributeProps</name><argument_list pos:line="18438" pos:column="65">( 
            <comment type="block" pos:line="18439" pos:column="13">/* [in] */</comment> <argument pos:line="18439" pos:column="24">DWORD classCookie</argument>,
            <comment type="block" pos:line="18440" pos:column="13">/* [in] */</comment> <argument pos:line="18440" pos:column="24">ULONG ordinal</argument>,
            <comment type="block" pos:line="18441" pos:column="13">/* [out] */</comment> <argument pos:line="18441" pos:column="25">__RPC__deref_out_opt BSTR *targetedAssembly</argument>,
            <comment type="block" pos:line="18442" pos:column="13">/* [out] */</comment> <argument pos:line="18442" pos:column="25">__RPC__out DWORD *assemLocation</argument>,
            <comment type="block" pos:line="18443" pos:column="13">/* [out] */</comment> <argument pos:line="18443" pos:column="25">__RPC__deref_out_opt BSTR *name</argument>,
            <comment type="block" pos:line="18444" pos:column="13">/* [out] */</comment> <argument pos:line="18444" pos:column="25">__RPC__deref_out_opt BSTR *value</argument>,
            <comment type="block" pos:line="18445" pos:column="13">/* [out] */</comment> <argument pos:line="18445" pos:column="25">__RPC__deref_out_opt BSTR *type</argument>)</argument_list></macro> <op:operator pos:line="18445" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="18445" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="18447" pos:column="9">virtual <name pos:line="18447" pos:column="17">HRESULT</name> <name pos:line="18447" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18447" pos:column="43">GetViewerAttributeProps</name><argument_list pos:line="18447" pos:column="66">( 
            <comment type="block" pos:line="18448" pos:column="13">/* [in] */</comment> <argument pos:line="18448" pos:column="24">DWORD classCookie</argument>,
            <comment type="block" pos:line="18449" pos:column="13">/* [in] */</comment> <argument pos:line="18449" pos:column="24">ULONG ordinal</argument>,
            <comment type="block" pos:line="18450" pos:column="13">/* [out] */</comment> <argument pos:line="18450" pos:column="25">__RPC__deref_out_opt BSTR *targetedAssembly</argument>,
            <comment type="block" pos:line="18451" pos:column="13">/* [out] */</comment> <argument pos:line="18451" pos:column="25">__RPC__out DWORD *assemLocation</argument>,
            <comment type="block" pos:line="18452" pos:column="13">/* [out] */</comment> <argument pos:line="18452" pos:column="25">__RPC__deref_out_opt BSTR *className</argument>,
            <comment type="block" pos:line="18453" pos:column="13">/* [out] */</comment> <argument pos:line="18453" pos:column="25">__RPC__out DWORD *classAssemLocation</argument>)</argument_list></macro> <op:operator pos:line="18453" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="18453" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="18455" pos:column="9">virtual <name pos:line="18455" pos:column="17">HRESULT</name> <name pos:line="18455" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18455" pos:column="43">GetVisualizerAttributeProps</name><argument_list pos:line="18455" pos:column="70">( 
            <comment type="block" pos:line="18456" pos:column="13">/* [in] */</comment> <argument pos:line="18456" pos:column="24">DWORD classCookie</argument>,
            <comment type="block" pos:line="18457" pos:column="13">/* [in] */</comment> <argument pos:line="18457" pos:column="24">ULONG ordinal</argument>,
            <comment type="block" pos:line="18458" pos:column="13">/* [out] */</comment> <argument pos:line="18458" pos:column="25">__RPC__deref_out_opt BSTR *targetedAssembly</argument>,
            <comment type="block" pos:line="18459" pos:column="13">/* [out] */</comment> <argument pos:line="18459" pos:column="25">__RPC__out DWORD *assemLocation</argument>,
            <comment type="block" pos:line="18460" pos:column="13">/* [out] */</comment> <argument pos:line="18460" pos:column="25">__RPC__deref_out_opt BSTR *displayClassName</argument>,
            <comment type="block" pos:line="18461" pos:column="13">/* [out] */</comment> <argument pos:line="18461" pos:column="25">__RPC__out DWORD *displayClassAssemLocation</argument>,
            <comment type="block" pos:line="18462" pos:column="13">/* [out] */</comment> <argument pos:line="18462" pos:column="25">__RPC__deref_out_opt BSTR *proxyClassName</argument>,
            <comment type="block" pos:line="18463" pos:column="13">/* [out] */</comment> <argument pos:line="18463" pos:column="25">__RPC__out DWORD *proxyClassAssemLocation</argument>,
            <comment type="block" pos:line="18464" pos:column="13">/* [out] */</comment> <argument pos:line="18464" pos:column="25">__RPC__deref_out_opt BSTR *description</argument>,
            <comment type="block" pos:line="18465" pos:column="13">/* [out] */</comment> <argument pos:line="18465" pos:column="25">__RPC__out ULONG *uiType</argument>)</argument_list></macro> <op:operator pos:line="18465" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="18465" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="18467" pos:column="9">virtual <name pos:line="18467" pos:column="17">HRESULT</name> <name pos:line="18467" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18467" pos:column="43">GetAssemblyRefForCookie</name><argument_list pos:line="18467" pos:column="66">( 
            <comment type="block" pos:line="18468" pos:column="13">/* [in] */</comment> <argument pos:line="18468" pos:column="24">DWORD cookie</argument>,
            <comment type="block" pos:line="18469" pos:column="13">/* [out] */</comment> <argument pos:line="18469" pos:column="25">__RPC__deref_out_opt IEEAssemblyRef **ppAssemRef</argument>)</argument_list></macro> <op:operator pos:line="18469" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="18469" pos:column="77">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18473" pos:column="1">#<cpp:directive pos:line="18473" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18473" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18475" pos:column="5">typedef <type><struct pos:line="18475" pos:column="13">struct <name pos:line="18475" pos:column="20">IEEHelperObjectVtbl</name>
    <block pos:line="18476" pos:column="5">{<public type="default" pos:line="18476" pos:column="6">
        <function_decl><type><name pos:line="18477" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18479" pos:column="9">HRESULT</name></type> ( <name pos:line="18479" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18479" pos:column="37">*</type:modifier><name pos:line="18479" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18479" pos:column="54">( 
            <param><decl><type><name pos:line="18480" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18480" pos:column="29">*</type:modifier></type> <name pos:line="18480" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18481" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18481" pos:column="24">__RPC__in</name> <name pos:line="18481" pos:column="34">REFIID</name></type> <name pos:line="18481" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18482" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18483" pos:column="13">__RPC__deref_out</name>  <name pos:line="18483" pos:column="31">void</name> <type:modifier pos:line="18483" pos:column="36">*</type:modifier><type:modifier pos:line="18483" pos:column="37">*</type:modifier></type><name pos:line="18483" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18485" pos:column="9">ULONG</name></type> ( <name pos:line="18485" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18485" pos:column="35">*</type:modifier><name pos:line="18485" pos:column="36">AddRef</name> )<parameter_list pos:line="18485" pos:column="44">( 
            <param><decl><type><name pos:line="18486" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18486" pos:column="29">*</type:modifier></type> <name pos:line="18486" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18488" pos:column="9">ULONG</name></type> ( <name pos:line="18488" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18488" pos:column="35">*</type:modifier><name pos:line="18488" pos:column="36">Release</name> )<parameter_list pos:line="18488" pos:column="45">( 
            <param><decl><type><name pos:line="18489" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18489" pos:column="29">*</type:modifier></type> <name pos:line="18489" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18491" pos:column="9">HRESULT</name></type> ( <name pos:line="18491" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18491" pos:column="37">*</type:modifier><name pos:line="18491" pos:column="38">InitCache</name> )<parameter_list pos:line="18491" pos:column="49">( 
            <param><decl><type><name pos:line="18492" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18492" pos:column="29">*</type:modifier></type> <name pos:line="18492" pos:column="31">This</name></decl></param>,
            <param><decl><type><name pos:line="18493" pos:column="13">__RPC__in_opt</name> <name pos:line="18493" pos:column="27">IEEAssemblyRefResolveComparer</name> <type:modifier pos:line="18493" pos:column="57">*</type:modifier></type><name pos:line="18493" pos:column="58">pResolver</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18495" pos:column="9">HRESULT</name></type> ( <name pos:line="18495" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18495" pos:column="37">*</type:modifier><name pos:line="18495" pos:column="38">GetTargetClass</name> )<parameter_list pos:line="18495" pos:column="54">( 
            <param><decl><type><name pos:line="18496" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18496" pos:column="29">*</type:modifier></type> <name pos:line="18496" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18497" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18497" pos:column="24">__RPC__in</name> <name pos:line="18497" pos:column="34">LPCOLESTR</name></type> <name pos:line="18497" pos:column="44">name</name></decl></param>,
            <comment type="block" pos:line="18498" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18498" pos:column="24">DWORD</name></type> <name pos:line="18498" pos:column="30">assemblyCookie</name></decl></param>,
            <comment type="block" pos:line="18499" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18499" pos:column="25">__RPC__out</name> <name pos:line="18499" pos:column="36">DWORD</name> <type:modifier pos:line="18499" pos:column="42">*</type:modifier></type><name pos:line="18499" pos:column="43">cookie</name></decl></param>,
            <comment type="block" pos:line="18500" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18500" pos:column="25">__RPC__out</name> <name pos:line="18500" pos:column="36">ULONG</name> <type:modifier pos:line="18500" pos:column="42">*</type:modifier></type><name pos:line="18500" pos:column="43">valueAttrCount</name></decl></param>,
            <comment type="block" pos:line="18501" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18501" pos:column="25">__RPC__out</name> <name pos:line="18501" pos:column="36">ULONG</name> <type:modifier pos:line="18501" pos:column="42">*</type:modifier></type><name pos:line="18501" pos:column="43">viewerAttrCount</name></decl></param>,
            <comment type="block" pos:line="18502" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18502" pos:column="25">__RPC__out</name> <name pos:line="18502" pos:column="36">ULONG</name> <type:modifier pos:line="18502" pos:column="42">*</type:modifier></type><name pos:line="18502" pos:column="43">visualizerAttrCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18504" pos:column="9">HRESULT</name></type> ( <name pos:line="18504" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18504" pos:column="37">*</type:modifier><name pos:line="18504" pos:column="38">GetTargetAssembly</name> )<parameter_list pos:line="18504" pos:column="57">( 
            <param><decl><type><name pos:line="18505" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18505" pos:column="29">*</type:modifier></type> <name pos:line="18505" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18506" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18506" pos:column="24">__RPC__in</name> <name pos:line="18506" pos:column="34">LPCOLESTR</name></type> <name pos:line="18506" pos:column="44">name</name></decl></param>,
            <comment type="block" pos:line="18507" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18507" pos:column="25">__RPC__out</name> <name pos:line="18507" pos:column="36">DWORD</name> <type:modifier pos:line="18507" pos:column="42">*</type:modifier></type><name pos:line="18507" pos:column="43">cookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18509" pos:column="9">HRESULT</name></type> ( <name pos:line="18509" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18509" pos:column="37">*</type:modifier><name pos:line="18509" pos:column="38">GetAssembly</name> )<parameter_list pos:line="18509" pos:column="51">( 
            <param><decl><type><name pos:line="18510" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18510" pos:column="29">*</type:modifier></type> <name pos:line="18510" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18511" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18511" pos:column="24">DWORD</name></type> <name pos:line="18511" pos:column="30">assemblyCookie</name></decl></param>,
            <param><decl><type><name pos:line="18512" pos:column="13">GETASSEMBLY</name></type> <name pos:line="18512" pos:column="25">flags</name></decl></param>,
            <comment type="block" pos:line="18513" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18513" pos:column="25">__RPC__out</name> <name pos:line="18513" pos:column="36">ASSEMBLYFLAGS</name> <type:modifier pos:line="18513" pos:column="50">*</type:modifier></type><name pos:line="18513" pos:column="51">flagsOut</name></decl></param>,
            <comment type="block" pos:line="18514" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18514" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18514" pos:column="46">BSTR</name> <type:modifier pos:line="18514" pos:column="51">*</type:modifier></type><name pos:line="18514" pos:column="52">name</name></decl></param>,
            <comment type="block" pos:line="18515" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18515" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18515" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="18515" pos:column="61">*</type:modifier><type:modifier pos:line="18515" pos:column="62">*</type:modifier></type><name pos:line="18515" pos:column="63">assemBytes</name></decl></param>,
            <comment type="block" pos:line="18516" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18516" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18516" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="18516" pos:column="61">*</type:modifier><type:modifier pos:line="18516" pos:column="62">*</type:modifier></type><name pos:line="18516" pos:column="63">pdbBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18518" pos:column="9">HRESULT</name></type> ( <name pos:line="18518" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18518" pos:column="37">*</type:modifier><name pos:line="18518" pos:column="38">GetHostAssembly</name> )<parameter_list pos:line="18518" pos:column="55">( 
            <param><decl><type><name pos:line="18519" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18519" pos:column="29">*</type:modifier></type> <name pos:line="18519" pos:column="31">This</name></decl></param>,
            <param><decl><type><name pos:line="18520" pos:column="13">GETASSEMBLY</name></type> <name pos:line="18520" pos:column="25">flags</name></decl></param>,
            <comment type="block" pos:line="18521" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18521" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18521" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="18521" pos:column="61">*</type:modifier><type:modifier pos:line="18521" pos:column="62">*</type:modifier></type><name pos:line="18521" pos:column="63">assemBytes</name></decl></param>,
            <comment type="block" pos:line="18522" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18522" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18522" pos:column="46">IEEDataStorage</name> <type:modifier pos:line="18522" pos:column="61">*</type:modifier><type:modifier pos:line="18522" pos:column="62">*</type:modifier></type><name pos:line="18522" pos:column="63">pdbBytes</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18524" pos:column="9">HRESULT</name></type> ( <name pos:line="18524" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18524" pos:column="37">*</type:modifier><name pos:line="18524" pos:column="38">GetValueAttributeProps</name> )<parameter_list pos:line="18524" pos:column="62">( 
            <param><decl><type><name pos:line="18525" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18525" pos:column="29">*</type:modifier></type> <name pos:line="18525" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18526" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18526" pos:column="24">DWORD</name></type> <name pos:line="18526" pos:column="30">classCookie</name></decl></param>,
            <comment type="block" pos:line="18527" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18527" pos:column="24">ULONG</name></type> <name pos:line="18527" pos:column="30">ordinal</name></decl></param>,
            <comment type="block" pos:line="18528" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18528" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18528" pos:column="46">BSTR</name> <type:modifier pos:line="18528" pos:column="51">*</type:modifier></type><name pos:line="18528" pos:column="52">targetedAssembly</name></decl></param>,
            <comment type="block" pos:line="18529" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18529" pos:column="25">__RPC__out</name> <name pos:line="18529" pos:column="36">DWORD</name> <type:modifier pos:line="18529" pos:column="42">*</type:modifier></type><name pos:line="18529" pos:column="43">assemLocation</name></decl></param>,
            <comment type="block" pos:line="18530" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18530" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18530" pos:column="46">BSTR</name> <type:modifier pos:line="18530" pos:column="51">*</type:modifier></type><name pos:line="18530" pos:column="52">name</name></decl></param>,
            <comment type="block" pos:line="18531" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18531" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18531" pos:column="46">BSTR</name> <type:modifier pos:line="18531" pos:column="51">*</type:modifier></type><name pos:line="18531" pos:column="52">value</name></decl></param>,
            <comment type="block" pos:line="18532" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18532" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18532" pos:column="46">BSTR</name> <type:modifier pos:line="18532" pos:column="51">*</type:modifier></type><name pos:line="18532" pos:column="52">type</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18534" pos:column="9">HRESULT</name></type> ( <name pos:line="18534" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18534" pos:column="37">*</type:modifier><name pos:line="18534" pos:column="38">GetViewerAttributeProps</name> )<parameter_list pos:line="18534" pos:column="63">( 
            <param><decl><type><name pos:line="18535" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18535" pos:column="29">*</type:modifier></type> <name pos:line="18535" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18536" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18536" pos:column="24">DWORD</name></type> <name pos:line="18536" pos:column="30">classCookie</name></decl></param>,
            <comment type="block" pos:line="18537" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18537" pos:column="24">ULONG</name></type> <name pos:line="18537" pos:column="30">ordinal</name></decl></param>,
            <comment type="block" pos:line="18538" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18538" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18538" pos:column="46">BSTR</name> <type:modifier pos:line="18538" pos:column="51">*</type:modifier></type><name pos:line="18538" pos:column="52">targetedAssembly</name></decl></param>,
            <comment type="block" pos:line="18539" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18539" pos:column="25">__RPC__out</name> <name pos:line="18539" pos:column="36">DWORD</name> <type:modifier pos:line="18539" pos:column="42">*</type:modifier></type><name pos:line="18539" pos:column="43">assemLocation</name></decl></param>,
            <comment type="block" pos:line="18540" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18540" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18540" pos:column="46">BSTR</name> <type:modifier pos:line="18540" pos:column="51">*</type:modifier></type><name pos:line="18540" pos:column="52">className</name></decl></param>,
            <comment type="block" pos:line="18541" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18541" pos:column="25">__RPC__out</name> <name pos:line="18541" pos:column="36">DWORD</name> <type:modifier pos:line="18541" pos:column="42">*</type:modifier></type><name pos:line="18541" pos:column="43">classAssemLocation</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18543" pos:column="9">HRESULT</name></type> ( <name pos:line="18543" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18543" pos:column="37">*</type:modifier><name pos:line="18543" pos:column="38">GetVisualizerAttributeProps</name> )<parameter_list pos:line="18543" pos:column="67">( 
            <param><decl><type><name pos:line="18544" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18544" pos:column="29">*</type:modifier></type> <name pos:line="18544" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18545" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18545" pos:column="24">DWORD</name></type> <name pos:line="18545" pos:column="30">classCookie</name></decl></param>,
            <comment type="block" pos:line="18546" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18546" pos:column="24">ULONG</name></type> <name pos:line="18546" pos:column="30">ordinal</name></decl></param>,
            <comment type="block" pos:line="18547" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18547" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18547" pos:column="46">BSTR</name> <type:modifier pos:line="18547" pos:column="51">*</type:modifier></type><name pos:line="18547" pos:column="52">targetedAssembly</name></decl></param>,
            <comment type="block" pos:line="18548" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18548" pos:column="25">__RPC__out</name> <name pos:line="18548" pos:column="36">DWORD</name> <type:modifier pos:line="18548" pos:column="42">*</type:modifier></type><name pos:line="18548" pos:column="43">assemLocation</name></decl></param>,
            <comment type="block" pos:line="18549" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18549" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18549" pos:column="46">BSTR</name> <type:modifier pos:line="18549" pos:column="51">*</type:modifier></type><name pos:line="18549" pos:column="52">displayClassName</name></decl></param>,
            <comment type="block" pos:line="18550" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18550" pos:column="25">__RPC__out</name> <name pos:line="18550" pos:column="36">DWORD</name> <type:modifier pos:line="18550" pos:column="42">*</type:modifier></type><name pos:line="18550" pos:column="43">displayClassAssemLocation</name></decl></param>,
            <comment type="block" pos:line="18551" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18551" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18551" pos:column="46">BSTR</name> <type:modifier pos:line="18551" pos:column="51">*</type:modifier></type><name pos:line="18551" pos:column="52">proxyClassName</name></decl></param>,
            <comment type="block" pos:line="18552" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18552" pos:column="25">__RPC__out</name> <name pos:line="18552" pos:column="36">DWORD</name> <type:modifier pos:line="18552" pos:column="42">*</type:modifier></type><name pos:line="18552" pos:column="43">proxyClassAssemLocation</name></decl></param>,
            <comment type="block" pos:line="18553" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18553" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18553" pos:column="46">BSTR</name> <type:modifier pos:line="18553" pos:column="51">*</type:modifier></type><name pos:line="18553" pos:column="52">description</name></decl></param>,
            <comment type="block" pos:line="18554" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18554" pos:column="25">__RPC__out</name> <name pos:line="18554" pos:column="36">ULONG</name> <type:modifier pos:line="18554" pos:column="42">*</type:modifier></type><name pos:line="18554" pos:column="43">uiType</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18556" pos:column="9">HRESULT</name></type> ( <name pos:line="18556" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18556" pos:column="37">*</type:modifier><name pos:line="18556" pos:column="38">GetAssemblyRefForCookie</name> )<parameter_list pos:line="18556" pos:column="63">( 
            <param><decl><type><name pos:line="18557" pos:column="13">IEEHelperObject</name> <type:modifier pos:line="18557" pos:column="29">*</type:modifier></type> <name pos:line="18557" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="18558" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18558" pos:column="24">DWORD</name></type> <name pos:line="18558" pos:column="30">cookie</name></decl></param>,
            <comment type="block" pos:line="18559" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18559" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18559" pos:column="46">IEEAssemblyRef</name> <type:modifier pos:line="18559" pos:column="61">*</type:modifier><type:modifier pos:line="18559" pos:column="62">*</type:modifier></type><name pos:line="18559" pos:column="63">ppAssemRef</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18561" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18562" pos:column="7">IEEHelperObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18564" pos:column="5">interface</name></type> <name pos:line="18564" pos:column="15">IEEHelperObject</name>
    <argument_list pos:line="18565" pos:column="5">{
        <argument><expr><name pos:line="18566" pos:column="9">CONST_VTBL</name> struct <name pos:line="18566" pos:column="27">IEEHelperObjectVtbl</name> <op:operator pos:line="18566" pos:column="47">*</op:operator><name pos:line="18566" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18571" pos:column="1">#<cpp:directive pos:line="18571" pos:column="2">ifdef</cpp:directive> <name pos:line="18571" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18574" pos:column="1">#<cpp:directive pos:line="18574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18574" pos:column="9">IEEHelperObject_QueryInterface</name><parameter_list pos:line="18574" pos:column="39">(<param><type><name pos:line="18574" pos:column="40">This</name></type></param>,<param><type><name pos:line="18574" pos:column="45">riid</name></type></param>,<param><type><name pos:line="18574" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18575" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18577" pos:column="1">#<cpp:directive pos:line="18577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18577" pos:column="9">IEEHelperObject_AddRef</name><parameter_list pos:line="18577" pos:column="31">(<param><type><name pos:line="18577" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18578" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18580" pos:column="1">#<cpp:directive pos:line="18580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18580" pos:column="9">IEEHelperObject_Release</name><parameter_list pos:line="18580" pos:column="32">(<param><type><name pos:line="18580" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18581" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18584" pos:column="1">#<cpp:directive pos:line="18584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18584" pos:column="9">IEEHelperObject_InitCache</name><parameter_list pos:line="18584" pos:column="34">(<param><type><name pos:line="18584" pos:column="35">This</name></type></param>,<param><type><name pos:line="18584" pos:column="40">pResolver</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18585" pos:column="5">( (This)-&gt;lpVtbl -&gt; InitCache(This,pResolver) )</cpp:value></cpp:define> 

<cpp:define pos:line="18587" pos:column="1">#<cpp:directive pos:line="18587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18587" pos:column="9">IEEHelperObject_GetTargetClass</name><parameter_list pos:line="18587" pos:column="39">(<param><type><name pos:line="18587" pos:column="40">This</name></type></param>,<param><type><name pos:line="18587" pos:column="45">name</name></type></param>,<param><type><name pos:line="18587" pos:column="50">assemblyCookie</name></type></param>,<param><type><name pos:line="18587" pos:column="65">cookie</name></type></param>,<param><type><name pos:line="18587" pos:column="72">valueAttrCount</name></type></param>,<param><type><name pos:line="18587" pos:column="87">viewerAttrCount</name></type></param>,<param><type><name pos:line="18587" pos:column="103">visualizerAttrCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18588" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTargetClass(This,name,assemblyCookie,cookie,valueAttrCount,viewerAttrCount,visualizerAttrCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="18590" pos:column="1">#<cpp:directive pos:line="18590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18590" pos:column="9">IEEHelperObject_GetTargetAssembly</name><parameter_list pos:line="18590" pos:column="42">(<param><type><name pos:line="18590" pos:column="43">This</name></type></param>,<param><type><name pos:line="18590" pos:column="48">name</name></type></param>,<param><type><name pos:line="18590" pos:column="53">cookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18591" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTargetAssembly(This,name,cookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="18593" pos:column="1">#<cpp:directive pos:line="18593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18593" pos:column="9">IEEHelperObject_GetAssembly</name><parameter_list pos:line="18593" pos:column="36">(<param><type><name pos:line="18593" pos:column="37">This</name></type></param>,<param><type><name pos:line="18593" pos:column="42">assemblyCookie</name></type></param>,<param><type><name pos:line="18593" pos:column="57">flags</name></type></param>,<param><type><name pos:line="18593" pos:column="63">flagsOut</name></type></param>,<param><type><name pos:line="18593" pos:column="72">name</name></type></param>,<param><type><name pos:line="18593" pos:column="77">assemBytes</name></type></param>,<param><type><name pos:line="18593" pos:column="88">pdbBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18594" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAssembly(This,assemblyCookie,flags,flagsOut,name,assemBytes,pdbBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="18596" pos:column="1">#<cpp:directive pos:line="18596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18596" pos:column="9">IEEHelperObject_GetHostAssembly</name><parameter_list pos:line="18596" pos:column="40">(<param><type><name pos:line="18596" pos:column="41">This</name></type></param>,<param><type><name pos:line="18596" pos:column="46">flags</name></type></param>,<param><type><name pos:line="18596" pos:column="52">assemBytes</name></type></param>,<param><type><name pos:line="18596" pos:column="63">pdbBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18597" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHostAssembly(This,flags,assemBytes,pdbBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="18599" pos:column="1">#<cpp:directive pos:line="18599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18599" pos:column="9">IEEHelperObject_GetValueAttributeProps</name><parameter_list pos:line="18599" pos:column="47">(<param><type><name pos:line="18599" pos:column="48">This</name></type></param>,<param><type><name pos:line="18599" pos:column="53">classCookie</name></type></param>,<param><type><name pos:line="18599" pos:column="65">ordinal</name></type></param>,<param><type><name pos:line="18599" pos:column="73">targetedAssembly</name></type></param>,<param><type><name pos:line="18599" pos:column="90">assemLocation</name></type></param>,<param><type><name pos:line="18599" pos:column="104">name</name></type></param>,<param><type><name pos:line="18599" pos:column="109">value</name></type></param>,<param><type><name pos:line="18599" pos:column="115">type</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18600" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValueAttributeProps(This,classCookie,ordinal,targetedAssembly,assemLocation,name,value,type) )</cpp:value></cpp:define> 

<cpp:define pos:line="18602" pos:column="1">#<cpp:directive pos:line="18602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18602" pos:column="9">IEEHelperObject_GetViewerAttributeProps</name><parameter_list pos:line="18602" pos:column="48">(<param><type><name pos:line="18602" pos:column="49">This</name></type></param>,<param><type><name pos:line="18602" pos:column="54">classCookie</name></type></param>,<param><type><name pos:line="18602" pos:column="66">ordinal</name></type></param>,<param><type><name pos:line="18602" pos:column="74">targetedAssembly</name></type></param>,<param><type><name pos:line="18602" pos:column="91">assemLocation</name></type></param>,<param><type><name pos:line="18602" pos:column="105">className</name></type></param>,<param><type><name pos:line="18602" pos:column="115">classAssemLocation</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18603" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetViewerAttributeProps(This,classCookie,ordinal,targetedAssembly,assemLocation,className,classAssemLocation) )</cpp:value></cpp:define> 

<cpp:define pos:line="18605" pos:column="1">#<cpp:directive pos:line="18605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18605" pos:column="9">IEEHelperObject_GetVisualizerAttributeProps</name><parameter_list pos:line="18605" pos:column="52">(<param><type><name pos:line="18605" pos:column="53">This</name></type></param>,<param><type><name pos:line="18605" pos:column="58">classCookie</name></type></param>,<param><type><name pos:line="18605" pos:column="70">ordinal</name></type></param>,<param><type><name pos:line="18605" pos:column="78">targetedAssembly</name></type></param>,<param><type><name pos:line="18605" pos:column="95">assemLocation</name></type></param>,<param><type><name pos:line="18605" pos:column="109">displayClassName</name></type></param>,<param><type><name pos:line="18605" pos:column="126">displayClassAssemLocation</name></type></param>,<param><type><name pos:line="18605" pos:column="152">proxyClassName</name></type></param>,<param><type><name pos:line="18605" pos:column="167">proxyClassAssemLocation</name></type></param>,<param><type><name pos:line="18605" pos:column="191">description</name></type></param>,<param><type><name pos:line="18605" pos:column="203">uiType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18606" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetVisualizerAttributeProps(This,classCookie,ordinal,targetedAssembly,assemLocation,displayClassName,displayClassAssemLocation,proxyClassName,proxyClassAssemLocation,description,uiType) )</cpp:value></cpp:define> 

<cpp:define pos:line="18608" pos:column="1">#<cpp:directive pos:line="18608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18608" pos:column="9">IEEHelperObject_GetAssemblyRefForCookie</name><parameter_list pos:line="18608" pos:column="48">(<param><type><name pos:line="18608" pos:column="49">This</name></type></param>,<param><type><name pos:line="18608" pos:column="54">cookie</name></type></param>,<param><type><name pos:line="18608" pos:column="61">ppAssemRef</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18609" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAssemblyRefForCookie(This,cookie,ppAssemRef) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18611" pos:column="1">#<cpp:directive pos:line="18611" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18611" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18614" pos:column="1">#<cpp:directive pos:line="18614" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18614" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18619" pos:column="1">#<cpp:directive pos:line="18619" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18619" pos:column="9">/* __IEEHelperObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18622" pos:column="1">#<cpp:directive pos:line="18622" pos:column="2">ifndef</cpp:directive> <name pos:line="18622" pos:column="9">__IDebugExceptionCallback2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18623" pos:column="1">#<cpp:directive pos:line="18623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18623" pos:column="9">__IDebugExceptionCallback2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18625" pos:column="1">/* interface IDebugExceptionCallback2 */</comment>
<comment type="block" pos:line="18626" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18629" pos:column="1">EXTERN_C</name> <specifier pos:line="18629" pos:column="10">const</specifier> <name pos:line="18629" pos:column="16">IID</name></type> <name pos:line="18629" pos:column="20">IID_IDebugExceptionCallback2</name></decl>;</decl_stmt>

<cpp:if pos:line="18631" pos:column="1">#<cpp:directive pos:line="18631" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18631" pos:column="5">defined</name><argument_list pos:line="18631" pos:column="12">(<argument><expr><name pos:line="18631" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18631" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18631" pos:column="29">!</op:operator><call><name pos:line="18631" pos:column="30">defined</name><argument_list pos:line="18631" pos:column="37">(<argument><expr><name pos:line="18631" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18633" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18633" pos:column="19">(<argument pos:line="18633" pos:column="20">"6f5cfda4-47d3-4a90-a882-14427237bcee"</argument>)</argument_list></macro>
    <label><name pos:line="18634" pos:column="5">IDebugExceptionCallback2</name> :</label> <expr_stmt><expr pos:line="18634" pos:column="32">public <name pos:line="18634" pos:column="39">IUnknown</name>
    <block pos:line="18635" pos:column="5">{
    <expr pos:line="18636" pos:column="5">public<op:operator pos:line="18636" pos:column="11">:</op:operator>
        virtual <name pos:line="18637" pos:column="17">HRESULT</name> <name pos:line="18637" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18637" pos:column="43">QueryStopOnException</name><argument_list pos:line="18637" pos:column="63">( 
            <comment type="block" pos:line="18638" pos:column="13">/* [in] */</comment> <argument pos:line="18638" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>,
            <comment type="block" pos:line="18639" pos:column="13">/* [in] */</comment> <argument pos:line="18639" pos:column="24">__RPC__in_opt IDebugProgram2 *pProgram</argument>,
            <comment type="block" pos:line="18640" pos:column="13">/* [in] */</comment> <argument pos:line="18640" pos:column="24">__RPC__in_opt IDebugThread2 *pThread</argument>,
            <comment type="block" pos:line="18641" pos:column="13">/* [in] */</comment> <argument pos:line="18641" pos:column="24">__RPC__in_opt IDebugExceptionEvent2 *pEvent</argument>)</argument_list></macro> <op:operator pos:line="18641" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="18641" pos:column="71">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18645" pos:column="1">#<cpp:directive pos:line="18645" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18645" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18647" pos:column="5">typedef <type><struct pos:line="18647" pos:column="13">struct <name pos:line="18647" pos:column="20">IDebugExceptionCallback2Vtbl</name>
    <block pos:line="18648" pos:column="5">{<public type="default" pos:line="18648" pos:column="6">
        <function_decl><type><name pos:line="18649" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18651" pos:column="9">HRESULT</name></type> ( <name pos:line="18651" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18651" pos:column="37">*</type:modifier><name pos:line="18651" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18651" pos:column="54">( 
            <param><decl><type><name pos:line="18652" pos:column="13">IDebugExceptionCallback2</name> <type:modifier pos:line="18652" pos:column="38">*</type:modifier></type> <name pos:line="18652" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="18653" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18653" pos:column="24">__RPC__in</name> <name pos:line="18653" pos:column="34">REFIID</name></type> <name pos:line="18653" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18654" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18655" pos:column="13">__RPC__deref_out</name>  <name pos:line="18655" pos:column="31">void</name> <type:modifier pos:line="18655" pos:column="36">*</type:modifier><type:modifier pos:line="18655" pos:column="37">*</type:modifier></type><name pos:line="18655" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18657" pos:column="9">ULONG</name></type> ( <name pos:line="18657" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18657" pos:column="35">*</type:modifier><name pos:line="18657" pos:column="36">AddRef</name> )<parameter_list pos:line="18657" pos:column="44">( 
            <param><decl><type><name pos:line="18658" pos:column="13">IDebugExceptionCallback2</name> <type:modifier pos:line="18658" pos:column="38">*</type:modifier></type> <name pos:line="18658" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18660" pos:column="9">ULONG</name></type> ( <name pos:line="18660" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18660" pos:column="35">*</type:modifier><name pos:line="18660" pos:column="36">Release</name> )<parameter_list pos:line="18660" pos:column="45">( 
            <param><decl><type><name pos:line="18661" pos:column="13">IDebugExceptionCallback2</name> <type:modifier pos:line="18661" pos:column="38">*</type:modifier></type> <name pos:line="18661" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18663" pos:column="9">HRESULT</name></type> ( <name pos:line="18663" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18663" pos:column="37">*</type:modifier><name pos:line="18663" pos:column="38">QueryStopOnException</name> )<parameter_list pos:line="18663" pos:column="60">( 
            <param><decl><type><name pos:line="18664" pos:column="13">IDebugExceptionCallback2</name> <type:modifier pos:line="18664" pos:column="38">*</type:modifier></type> <name pos:line="18664" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="18665" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18665" pos:column="24">__RPC__in_opt</name> <name pos:line="18665" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="18665" pos:column="53">*</type:modifier></type><name pos:line="18665" pos:column="54">pProcess</name></decl></param>,
            <comment type="block" pos:line="18666" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18666" pos:column="24">__RPC__in_opt</name> <name pos:line="18666" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="18666" pos:column="53">*</type:modifier></type><name pos:line="18666" pos:column="54">pProgram</name></decl></param>,
            <comment type="block" pos:line="18667" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18667" pos:column="24">__RPC__in_opt</name> <name pos:line="18667" pos:column="38">IDebugThread2</name> <type:modifier pos:line="18667" pos:column="52">*</type:modifier></type><name pos:line="18667" pos:column="53">pThread</name></decl></param>,
            <comment type="block" pos:line="18668" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18668" pos:column="24">__RPC__in_opt</name> <name pos:line="18668" pos:column="38">IDebugExceptionEvent2</name> <type:modifier pos:line="18668" pos:column="60">*</type:modifier></type><name pos:line="18668" pos:column="61">pEvent</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18670" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18671" pos:column="7">IDebugExceptionCallback2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18673" pos:column="5">interface</name></type> <name pos:line="18673" pos:column="15">IDebugExceptionCallback2</name>
    <argument_list pos:line="18674" pos:column="5">{
        <argument><expr><name pos:line="18675" pos:column="9">CONST_VTBL</name> struct <name pos:line="18675" pos:column="27">IDebugExceptionCallback2Vtbl</name> <op:operator pos:line="18675" pos:column="56">*</op:operator><name pos:line="18675" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18680" pos:column="1">#<cpp:directive pos:line="18680" pos:column="2">ifdef</cpp:directive> <name pos:line="18680" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18683" pos:column="1">#<cpp:directive pos:line="18683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18683" pos:column="9">IDebugExceptionCallback2_QueryInterface</name><parameter_list pos:line="18683" pos:column="48">(<param><type><name pos:line="18683" pos:column="49">This</name></type></param>,<param><type><name pos:line="18683" pos:column="54">riid</name></type></param>,<param><type><name pos:line="18683" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18684" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18686" pos:column="1">#<cpp:directive pos:line="18686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18686" pos:column="9">IDebugExceptionCallback2_AddRef</name><parameter_list pos:line="18686" pos:column="40">(<param><type><name pos:line="18686" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18687" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18689" pos:column="1">#<cpp:directive pos:line="18689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18689" pos:column="9">IDebugExceptionCallback2_Release</name><parameter_list pos:line="18689" pos:column="41">(<param><type><name pos:line="18689" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18690" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18693" pos:column="1">#<cpp:directive pos:line="18693" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18693" pos:column="9">IDebugExceptionCallback2_QueryStopOnException</name><parameter_list pos:line="18693" pos:column="54">(<param><type><name pos:line="18693" pos:column="55">This</name></type></param>,<param><type><name pos:line="18693" pos:column="60">pProcess</name></type></param>,<param><type><name pos:line="18693" pos:column="69">pProgram</name></type></param>,<param><type><name pos:line="18693" pos:column="78">pThread</name></type></param>,<param><type><name pos:line="18693" pos:column="86">pEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18694" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryStopOnException(This,pProcess,pProgram,pThread,pEvent) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18696" pos:column="1">#<cpp:directive pos:line="18696" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18696" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18699" pos:column="1">#<cpp:directive pos:line="18699" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18699" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18704" pos:column="1">#<cpp:directive pos:line="18704" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18704" pos:column="9">/* __IDebugExceptionCallback2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18707" pos:column="1">#<cpp:directive pos:line="18707" pos:column="2">ifndef</cpp:directive> <name pos:line="18707" pos:column="9">__IEnumDebugProcesses2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18708" pos:column="1">#<cpp:directive pos:line="18708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18708" pos:column="9">__IEnumDebugProcesses2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18710" pos:column="1">/* interface IEnumDebugProcesses2 */</comment>
<comment type="block" pos:line="18711" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18714" pos:column="1">EXTERN_C</name> <specifier pos:line="18714" pos:column="10">const</specifier> <name pos:line="18714" pos:column="16">IID</name></type> <name pos:line="18714" pos:column="20">IID_IEnumDebugProcesses2</name></decl>;</decl_stmt>

<cpp:if pos:line="18716" pos:column="1">#<cpp:directive pos:line="18716" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18716" pos:column="5">defined</name><argument_list pos:line="18716" pos:column="12">(<argument><expr><name pos:line="18716" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18716" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18716" pos:column="29">!</op:operator><call><name pos:line="18716" pos:column="30">defined</name><argument_list pos:line="18716" pos:column="37">(<argument><expr><name pos:line="18716" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18718" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18718" pos:column="19">(<argument pos:line="18718" pos:column="20">"96c74ef4-185d-4f9a-8a43-4d2723758e0a"</argument>)</argument_list></macro>
    <label><name pos:line="18719" pos:column="5">IEnumDebugProcesses2</name> :</label> <expr_stmt><expr pos:line="18719" pos:column="28">public <name pos:line="18719" pos:column="35">IUnknown</name>
    <block pos:line="18720" pos:column="5">{
    <expr pos:line="18721" pos:column="5">public<op:operator pos:line="18721" pos:column="11">:</op:operator>
        virtual <name pos:line="18722" pos:column="17">HRESULT</name> <name pos:line="18722" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18722" pos:column="43">Next</name><argument_list pos:line="18722" pos:column="47">( 
            <comment type="block" pos:line="18723" pos:column="13">/* [in] */</comment> <argument pos:line="18723" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="18724" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="18724" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugProcess2 **rgelt</argument>,
            <comment type="block" pos:line="18725" pos:column="13">/* [out][in] */</comment> <argument pos:line="18725" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="18725" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="18725" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="18727" pos:column="9">virtual <name pos:line="18727" pos:column="17">HRESULT</name> <name pos:line="18727" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18727" pos:column="43">Skip</name><argument_list pos:line="18727" pos:column="47">( 
            <comment type="block" pos:line="18728" pos:column="13">/* [in] */</comment> <argument pos:line="18728" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="18728" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="18728" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="18730" pos:column="9">virtual <name pos:line="18730" pos:column="17">HRESULT</name> <name pos:line="18730" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="18730" pos:column="43">Reset</name><argument_list pos:line="18730" pos:column="48">( <argument><expr><name pos:line="18730" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="18730" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="18730" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="18732" pos:column="9">virtual <name pos:line="18732" pos:column="17">HRESULT</name> <name pos:line="18732" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18732" pos:column="43">Clone</name><argument_list pos:line="18732" pos:column="48">( 
            <comment type="block" pos:line="18733" pos:column="13">/* [out] */</comment> <argument pos:line="18733" pos:column="25">__RPC__deref_out_opt IEnumDebugProcesses2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="18733" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="18733" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="18735" pos:column="9">virtual <name pos:line="18735" pos:column="17">HRESULT</name> <name pos:line="18735" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18735" pos:column="43">GetCount</name><argument_list pos:line="18735" pos:column="51">( 
            <comment type="block" pos:line="18736" pos:column="13">/* [out] */</comment> <argument pos:line="18736" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="18736" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="18736" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18740" pos:column="1">#<cpp:directive pos:line="18740" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18740" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18742" pos:column="5">typedef <type><struct pos:line="18742" pos:column="13">struct <name pos:line="18742" pos:column="20">IEnumDebugProcesses2Vtbl</name>
    <block pos:line="18743" pos:column="5">{<public type="default" pos:line="18743" pos:column="6">
        <function_decl><type><name pos:line="18744" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18746" pos:column="9">HRESULT</name></type> ( <name pos:line="18746" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18746" pos:column="37">*</type:modifier><name pos:line="18746" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18746" pos:column="54">( 
            <param><decl><type><name pos:line="18747" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18747" pos:column="34">*</type:modifier></type> <name pos:line="18747" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="18748" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18748" pos:column="24">__RPC__in</name> <name pos:line="18748" pos:column="34">REFIID</name></type> <name pos:line="18748" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18749" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18750" pos:column="13">__RPC__deref_out</name>  <name pos:line="18750" pos:column="31">void</name> <type:modifier pos:line="18750" pos:column="36">*</type:modifier><type:modifier pos:line="18750" pos:column="37">*</type:modifier></type><name pos:line="18750" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18752" pos:column="9">ULONG</name></type> ( <name pos:line="18752" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18752" pos:column="35">*</type:modifier><name pos:line="18752" pos:column="36">AddRef</name> )<parameter_list pos:line="18752" pos:column="44">( 
            <param><decl><type><name pos:line="18753" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18753" pos:column="34">*</type:modifier></type> <name pos:line="18753" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18755" pos:column="9">ULONG</name></type> ( <name pos:line="18755" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18755" pos:column="35">*</type:modifier><name pos:line="18755" pos:column="36">Release</name> )<parameter_list pos:line="18755" pos:column="45">( 
            <param><decl><type><name pos:line="18756" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18756" pos:column="34">*</type:modifier></type> <name pos:line="18756" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18758" pos:column="9">HRESULT</name> <argument_list pos:line="18758" pos:column="17">( <argument pos:line="18758" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="18758" pos:column="44">(</op:operator> 
            <name pos:line="18759" pos:column="13">IEnumDebugProcesses2</name> <op:operator pos:line="18759" pos:column="34">*</op:operator> <name pos:line="18759" pos:column="36">This</name><op:operator pos:line="18759" pos:column="40">,</op:operator>
            <comment type="block" pos:line="18760" pos:column="13">/* [in] */</comment> <name pos:line="18760" pos:column="24">ULONG</name> <name pos:line="18760" pos:column="30">celt</name><op:operator pos:line="18760" pos:column="34">,</op:operator>
            <comment type="block" pos:line="18761" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="18761" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="18761" pos:column="67">(<argument pos:line="18761" pos:column="68">celt</argument>, <argument pos:line="18761" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="18761" pos:column="89">IDebugProcess2</name> <op:operator pos:line="18761" pos:column="104">*</op:operator><op:operator pos:line="18761" pos:column="105">*</op:operator><name pos:line="18761" pos:column="106">rgelt</name><op:operator pos:line="18761" pos:column="111">,</op:operator>
            <comment type="block" pos:line="18762" pos:column="13">/* [out][in] */</comment> <name pos:line="18762" pos:column="29">__RPC__inout</name> <name pos:line="18762" pos:column="42">ULONG</name> <op:operator pos:line="18762" pos:column="48">*</op:operator><name pos:line="18762" pos:column="49">pceltFetched</name><op:operator pos:line="18762" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="18764" pos:column="9">HRESULT</name></type> ( <name pos:line="18764" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18764" pos:column="37">*</type:modifier><name pos:line="18764" pos:column="38">Skip</name> )<parameter_list pos:line="18764" pos:column="44">( 
            <param><decl><type><name pos:line="18765" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18765" pos:column="34">*</type:modifier></type> <name pos:line="18765" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="18766" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18766" pos:column="24">ULONG</name></type> <name pos:line="18766" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18768" pos:column="9">HRESULT</name></type> ( <name pos:line="18768" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18768" pos:column="37">*</type:modifier><name pos:line="18768" pos:column="38">Reset</name> )<parameter_list pos:line="18768" pos:column="45">( 
            <param><decl><type><name pos:line="18769" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18769" pos:column="34">*</type:modifier></type> <name pos:line="18769" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18771" pos:column="9">HRESULT</name></type> ( <name pos:line="18771" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18771" pos:column="37">*</type:modifier><name pos:line="18771" pos:column="38">Clone</name> )<parameter_list pos:line="18771" pos:column="45">( 
            <param><decl><type><name pos:line="18772" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18772" pos:column="34">*</type:modifier></type> <name pos:line="18772" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="18773" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18773" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18773" pos:column="46">IEnumDebugProcesses2</name> <type:modifier pos:line="18773" pos:column="67">*</type:modifier><type:modifier pos:line="18773" pos:column="68">*</type:modifier></type><name pos:line="18773" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18775" pos:column="9">HRESULT</name></type> ( <name pos:line="18775" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18775" pos:column="37">*</type:modifier><name pos:line="18775" pos:column="38">GetCount</name> )<parameter_list pos:line="18775" pos:column="48">( 
            <param><decl><type><name pos:line="18776" pos:column="13">IEnumDebugProcesses2</name> <type:modifier pos:line="18776" pos:column="34">*</type:modifier></type> <name pos:line="18776" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="18777" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18777" pos:column="25">__RPC__out</name> <name pos:line="18777" pos:column="36">ULONG</name> <type:modifier pos:line="18777" pos:column="42">*</type:modifier></type><name pos:line="18777" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18779" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18780" pos:column="7">IEnumDebugProcesses2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18782" pos:column="5">interface</name></type> <name pos:line="18782" pos:column="15">IEnumDebugProcesses2</name>
    <argument_list pos:line="18783" pos:column="5">{
        <argument><expr><name pos:line="18784" pos:column="9">CONST_VTBL</name> struct <name pos:line="18784" pos:column="27">IEnumDebugProcesses2Vtbl</name> <op:operator pos:line="18784" pos:column="52">*</op:operator><name pos:line="18784" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18789" pos:column="1">#<cpp:directive pos:line="18789" pos:column="2">ifdef</cpp:directive> <name pos:line="18789" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18792" pos:column="1">#<cpp:directive pos:line="18792" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18792" pos:column="9">IEnumDebugProcesses2_QueryInterface</name><parameter_list pos:line="18792" pos:column="44">(<param><type><name pos:line="18792" pos:column="45">This</name></type></param>,<param><type><name pos:line="18792" pos:column="50">riid</name></type></param>,<param><type><name pos:line="18792" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18793" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18795" pos:column="1">#<cpp:directive pos:line="18795" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18795" pos:column="9">IEnumDebugProcesses2_AddRef</name><parameter_list pos:line="18795" pos:column="36">(<param><type><name pos:line="18795" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18796" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18798" pos:column="1">#<cpp:directive pos:line="18798" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18798" pos:column="9">IEnumDebugProcesses2_Release</name><parameter_list pos:line="18798" pos:column="37">(<param><type><name pos:line="18798" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18799" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18802" pos:column="1">#<cpp:directive pos:line="18802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18802" pos:column="9">IEnumDebugProcesses2_Next</name><parameter_list pos:line="18802" pos:column="34">(<param><type><name pos:line="18802" pos:column="35">This</name></type></param>,<param><type><name pos:line="18802" pos:column="40">celt</name></type></param>,<param><type><name pos:line="18802" pos:column="45">rgelt</name></type></param>,<param><type><name pos:line="18802" pos:column="51">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18803" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="18805" pos:column="1">#<cpp:directive pos:line="18805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18805" pos:column="9">IEnumDebugProcesses2_Skip</name><parameter_list pos:line="18805" pos:column="34">(<param><type><name pos:line="18805" pos:column="35">This</name></type></param>,<param><type><name pos:line="18805" pos:column="40">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18806" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="18808" pos:column="1">#<cpp:directive pos:line="18808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18808" pos:column="9">IEnumDebugProcesses2_Reset</name><parameter_list pos:line="18808" pos:column="35">(<param><type><name pos:line="18808" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18809" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18811" pos:column="1">#<cpp:directive pos:line="18811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18811" pos:column="9">IEnumDebugProcesses2_Clone</name><parameter_list pos:line="18811" pos:column="35">(<param><type><name pos:line="18811" pos:column="36">This</name></type></param>,<param><type><name pos:line="18811" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18812" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="18814" pos:column="1">#<cpp:directive pos:line="18814" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18814" pos:column="9">IEnumDebugProcesses2_GetCount</name><parameter_list pos:line="18814" pos:column="38">(<param><type><name pos:line="18814" pos:column="39">This</name></type></param>,<param><type><name pos:line="18814" pos:column="44">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18815" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18817" pos:column="1">#<cpp:directive pos:line="18817" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18817" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18820" pos:column="1">#<cpp:directive pos:line="18820" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18820" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18825" pos:column="1">#<cpp:directive pos:line="18825" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18825" pos:column="9">/* __IEnumDebugProcesses2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18828" pos:column="1">#<cpp:directive pos:line="18828" pos:column="2">ifndef</cpp:directive> <name pos:line="18828" pos:column="9">__IEnumDebugPrograms2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18829" pos:column="1">#<cpp:directive pos:line="18829" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18829" pos:column="9">__IEnumDebugPrograms2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18831" pos:column="1">/* interface IEnumDebugPrograms2 */</comment>
<comment type="block" pos:line="18832" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18835" pos:column="1">EXTERN_C</name> <specifier pos:line="18835" pos:column="10">const</specifier> <name pos:line="18835" pos:column="16">IID</name></type> <name pos:line="18835" pos:column="20">IID_IEnumDebugPrograms2</name></decl>;</decl_stmt>

<cpp:if pos:line="18837" pos:column="1">#<cpp:directive pos:line="18837" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18837" pos:column="5">defined</name><argument_list pos:line="18837" pos:column="12">(<argument><expr><name pos:line="18837" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18837" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18837" pos:column="29">!</op:operator><call><name pos:line="18837" pos:column="30">defined</name><argument_list pos:line="18837" pos:column="37">(<argument><expr><name pos:line="18837" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18839" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18839" pos:column="19">(<argument pos:line="18839" pos:column="20">"8d14bca6-34ce-4efe-ac7e-0abc61dadb20"</argument>)</argument_list></macro>
    <label><name pos:line="18840" pos:column="5">IEnumDebugPrograms2</name> :</label> <expr_stmt><expr pos:line="18840" pos:column="27">public <name pos:line="18840" pos:column="34">IUnknown</name>
    <block pos:line="18841" pos:column="5">{
    <expr pos:line="18842" pos:column="5">public<op:operator pos:line="18842" pos:column="11">:</op:operator>
        virtual <name pos:line="18843" pos:column="17">HRESULT</name> <name pos:line="18843" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18843" pos:column="43">Next</name><argument_list pos:line="18843" pos:column="47">( 
            <comment type="block" pos:line="18844" pos:column="13">/* [in] */</comment> <argument pos:line="18844" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="18845" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="18845" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugProgram2 **rgelt</argument>,
            <comment type="block" pos:line="18846" pos:column="13">/* [out][in] */</comment> <argument pos:line="18846" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="18846" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="18846" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="18848" pos:column="9">virtual <name pos:line="18848" pos:column="17">HRESULT</name> <name pos:line="18848" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18848" pos:column="43">Skip</name><argument_list pos:line="18848" pos:column="47">( 
            <comment type="block" pos:line="18849" pos:column="13">/* [in] */</comment> <argument pos:line="18849" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="18849" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="18849" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="18851" pos:column="9">virtual <name pos:line="18851" pos:column="17">HRESULT</name> <name pos:line="18851" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="18851" pos:column="43">Reset</name><argument_list pos:line="18851" pos:column="48">( <argument><expr><name pos:line="18851" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="18851" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="18851" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="18853" pos:column="9">virtual <name pos:line="18853" pos:column="17">HRESULT</name> <name pos:line="18853" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18853" pos:column="43">Clone</name><argument_list pos:line="18853" pos:column="48">( 
            <comment type="block" pos:line="18854" pos:column="13">/* [out] */</comment> <argument pos:line="18854" pos:column="25">__RPC__deref_out_opt IEnumDebugPrograms2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="18854" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="18854" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="18856" pos:column="9">virtual <name pos:line="18856" pos:column="17">HRESULT</name> <name pos:line="18856" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18856" pos:column="43">GetCount</name><argument_list pos:line="18856" pos:column="51">( 
            <comment type="block" pos:line="18857" pos:column="13">/* [out] */</comment> <argument pos:line="18857" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="18857" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="18857" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18861" pos:column="1">#<cpp:directive pos:line="18861" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18861" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18863" pos:column="5">typedef <type><struct pos:line="18863" pos:column="13">struct <name pos:line="18863" pos:column="20">IEnumDebugPrograms2Vtbl</name>
    <block pos:line="18864" pos:column="5">{<public type="default" pos:line="18864" pos:column="6">
        <function_decl><type><name pos:line="18865" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18867" pos:column="9">HRESULT</name></type> ( <name pos:line="18867" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18867" pos:column="37">*</type:modifier><name pos:line="18867" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18867" pos:column="54">( 
            <param><decl><type><name pos:line="18868" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18868" pos:column="33">*</type:modifier></type> <name pos:line="18868" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="18869" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18869" pos:column="24">__RPC__in</name> <name pos:line="18869" pos:column="34">REFIID</name></type> <name pos:line="18869" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18870" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18871" pos:column="13">__RPC__deref_out</name>  <name pos:line="18871" pos:column="31">void</name> <type:modifier pos:line="18871" pos:column="36">*</type:modifier><type:modifier pos:line="18871" pos:column="37">*</type:modifier></type><name pos:line="18871" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18873" pos:column="9">ULONG</name></type> ( <name pos:line="18873" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18873" pos:column="35">*</type:modifier><name pos:line="18873" pos:column="36">AddRef</name> )<parameter_list pos:line="18873" pos:column="44">( 
            <param><decl><type><name pos:line="18874" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18874" pos:column="33">*</type:modifier></type> <name pos:line="18874" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18876" pos:column="9">ULONG</name></type> ( <name pos:line="18876" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18876" pos:column="35">*</type:modifier><name pos:line="18876" pos:column="36">Release</name> )<parameter_list pos:line="18876" pos:column="45">( 
            <param><decl><type><name pos:line="18877" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18877" pos:column="33">*</type:modifier></type> <name pos:line="18877" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18879" pos:column="9">HRESULT</name> <argument_list pos:line="18879" pos:column="17">( <argument pos:line="18879" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="18879" pos:column="44">(</op:operator> 
            <name pos:line="18880" pos:column="13">IEnumDebugPrograms2</name> <op:operator pos:line="18880" pos:column="33">*</op:operator> <name pos:line="18880" pos:column="35">This</name><op:operator pos:line="18880" pos:column="39">,</op:operator>
            <comment type="block" pos:line="18881" pos:column="13">/* [in] */</comment> <name pos:line="18881" pos:column="24">ULONG</name> <name pos:line="18881" pos:column="30">celt</name><op:operator pos:line="18881" pos:column="34">,</op:operator>
            <comment type="block" pos:line="18882" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="18882" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="18882" pos:column="67">(<argument pos:line="18882" pos:column="68">celt</argument>, <argument pos:line="18882" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="18882" pos:column="89">IDebugProgram2</name> <op:operator pos:line="18882" pos:column="104">*</op:operator><op:operator pos:line="18882" pos:column="105">*</op:operator><name pos:line="18882" pos:column="106">rgelt</name><op:operator pos:line="18882" pos:column="111">,</op:operator>
            <comment type="block" pos:line="18883" pos:column="13">/* [out][in] */</comment> <name pos:line="18883" pos:column="29">__RPC__inout</name> <name pos:line="18883" pos:column="42">ULONG</name> <op:operator pos:line="18883" pos:column="48">*</op:operator><name pos:line="18883" pos:column="49">pceltFetched</name><op:operator pos:line="18883" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="18885" pos:column="9">HRESULT</name></type> ( <name pos:line="18885" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18885" pos:column="37">*</type:modifier><name pos:line="18885" pos:column="38">Skip</name> )<parameter_list pos:line="18885" pos:column="44">( 
            <param><decl><type><name pos:line="18886" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18886" pos:column="33">*</type:modifier></type> <name pos:line="18886" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="18887" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18887" pos:column="24">ULONG</name></type> <name pos:line="18887" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18889" pos:column="9">HRESULT</name></type> ( <name pos:line="18889" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18889" pos:column="37">*</type:modifier><name pos:line="18889" pos:column="38">Reset</name> )<parameter_list pos:line="18889" pos:column="45">( 
            <param><decl><type><name pos:line="18890" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18890" pos:column="33">*</type:modifier></type> <name pos:line="18890" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18892" pos:column="9">HRESULT</name></type> ( <name pos:line="18892" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18892" pos:column="37">*</type:modifier><name pos:line="18892" pos:column="38">Clone</name> )<parameter_list pos:line="18892" pos:column="45">( 
            <param><decl><type><name pos:line="18893" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18893" pos:column="33">*</type:modifier></type> <name pos:line="18893" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="18894" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18894" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="18894" pos:column="46">IEnumDebugPrograms2</name> <type:modifier pos:line="18894" pos:column="66">*</type:modifier><type:modifier pos:line="18894" pos:column="67">*</type:modifier></type><name pos:line="18894" pos:column="68">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18896" pos:column="9">HRESULT</name></type> ( <name pos:line="18896" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18896" pos:column="37">*</type:modifier><name pos:line="18896" pos:column="38">GetCount</name> )<parameter_list pos:line="18896" pos:column="48">( 
            <param><decl><type><name pos:line="18897" pos:column="13">IEnumDebugPrograms2</name> <type:modifier pos:line="18897" pos:column="33">*</type:modifier></type> <name pos:line="18897" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="18898" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="18898" pos:column="25">__RPC__out</name> <name pos:line="18898" pos:column="36">ULONG</name> <type:modifier pos:line="18898" pos:column="42">*</type:modifier></type><name pos:line="18898" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="18900" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="18901" pos:column="7">IEnumDebugPrograms2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="18903" pos:column="5">interface</name></type> <name pos:line="18903" pos:column="15">IEnumDebugPrograms2</name>
    <argument_list pos:line="18904" pos:column="5">{
        <argument><expr><name pos:line="18905" pos:column="9">CONST_VTBL</name> struct <name pos:line="18905" pos:column="27">IEnumDebugPrograms2Vtbl</name> <op:operator pos:line="18905" pos:column="51">*</op:operator><name pos:line="18905" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="18910" pos:column="1">#<cpp:directive pos:line="18910" pos:column="2">ifdef</cpp:directive> <name pos:line="18910" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="18913" pos:column="1">#<cpp:directive pos:line="18913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18913" pos:column="9">IEnumDebugPrograms2_QueryInterface</name><parameter_list pos:line="18913" pos:column="43">(<param><type><name pos:line="18913" pos:column="44">This</name></type></param>,<param><type><name pos:line="18913" pos:column="49">riid</name></type></param>,<param><type><name pos:line="18913" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18914" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="18916" pos:column="1">#<cpp:directive pos:line="18916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18916" pos:column="9">IEnumDebugPrograms2_AddRef</name><parameter_list pos:line="18916" pos:column="35">(<param><type><name pos:line="18916" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18917" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18919" pos:column="1">#<cpp:directive pos:line="18919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18919" pos:column="9">IEnumDebugPrograms2_Release</name><parameter_list pos:line="18919" pos:column="36">(<param><type><name pos:line="18919" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18920" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="18923" pos:column="1">#<cpp:directive pos:line="18923" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18923" pos:column="9">IEnumDebugPrograms2_Next</name><parameter_list pos:line="18923" pos:column="33">(<param><type><name pos:line="18923" pos:column="34">This</name></type></param>,<param><type><name pos:line="18923" pos:column="39">celt</name></type></param>,<param><type><name pos:line="18923" pos:column="44">rgelt</name></type></param>,<param><type><name pos:line="18923" pos:column="50">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18924" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="18926" pos:column="1">#<cpp:directive pos:line="18926" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18926" pos:column="9">IEnumDebugPrograms2_Skip</name><parameter_list pos:line="18926" pos:column="33">(<param><type><name pos:line="18926" pos:column="34">This</name></type></param>,<param><type><name pos:line="18926" pos:column="39">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18927" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="18929" pos:column="1">#<cpp:directive pos:line="18929" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18929" pos:column="9">IEnumDebugPrograms2_Reset</name><parameter_list pos:line="18929" pos:column="34">(<param><type><name pos:line="18929" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18930" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="18932" pos:column="1">#<cpp:directive pos:line="18932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18932" pos:column="9">IEnumDebugPrograms2_Clone</name><parameter_list pos:line="18932" pos:column="34">(<param><type><name pos:line="18932" pos:column="35">This</name></type></param>,<param><type><name pos:line="18932" pos:column="40">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18933" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="18935" pos:column="1">#<cpp:directive pos:line="18935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18935" pos:column="9">IEnumDebugPrograms2_GetCount</name><parameter_list pos:line="18935" pos:column="37">(<param><type><name pos:line="18935" pos:column="38">This</name></type></param>,<param><type><name pos:line="18935" pos:column="43">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="18936" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="18938" pos:column="1">#<cpp:directive pos:line="18938" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="18938" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="18941" pos:column="1">#<cpp:directive pos:line="18941" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18941" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="18946" pos:column="1">#<cpp:directive pos:line="18946" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="18946" pos:column="9">/* __IEnumDebugPrograms2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="18949" pos:column="1">#<cpp:directive pos:line="18949" pos:column="2">ifndef</cpp:directive> <name pos:line="18949" pos:column="9">__IEnumDebugThreads2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="18950" pos:column="1">#<cpp:directive pos:line="18950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18950" pos:column="9">__IEnumDebugThreads2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="18952" pos:column="1">/* interface IEnumDebugThreads2 */</comment>
<comment type="block" pos:line="18953" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="18956" pos:column="1">EXTERN_C</name> <specifier pos:line="18956" pos:column="10">const</specifier> <name pos:line="18956" pos:column="16">IID</name></type> <name pos:line="18956" pos:column="20">IID_IEnumDebugThreads2</name></decl>;</decl_stmt>

<cpp:if pos:line="18958" pos:column="1">#<cpp:directive pos:line="18958" pos:column="2">if</cpp:directive> <expr><call><name pos:line="18958" pos:column="5">defined</name><argument_list pos:line="18958" pos:column="12">(<argument><expr><name pos:line="18958" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="18958" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="18958" pos:column="29">!</op:operator><call><name pos:line="18958" pos:column="30">defined</name><argument_list pos:line="18958" pos:column="37">(<argument><expr><name pos:line="18958" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="18960" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="18960" pos:column="19">(<argument pos:line="18960" pos:column="20">"0d30dc12-c4f8-433d-9fcc-9ff117e5e5f4"</argument>)</argument_list></macro>
    <label><name pos:line="18961" pos:column="5">IEnumDebugThreads2</name> :</label> <expr_stmt><expr pos:line="18961" pos:column="26">public <name pos:line="18961" pos:column="33">IUnknown</name>
    <block pos:line="18962" pos:column="5">{
    <expr pos:line="18963" pos:column="5">public<op:operator pos:line="18963" pos:column="11">:</op:operator>
        virtual <name pos:line="18964" pos:column="17">HRESULT</name> <name pos:line="18964" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18964" pos:column="43">Next</name><argument_list pos:line="18964" pos:column="47">( 
            <comment type="block" pos:line="18965" pos:column="13">/* [in] */</comment> <argument pos:line="18965" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="18966" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="18966" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugThread2 **rgelt</argument>,
            <comment type="block" pos:line="18967" pos:column="13">/* [out][in] */</comment> <argument pos:line="18967" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="18967" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="18967" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="18969" pos:column="9">virtual <name pos:line="18969" pos:column="17">HRESULT</name> <name pos:line="18969" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18969" pos:column="43">Skip</name><argument_list pos:line="18969" pos:column="47">( 
            <comment type="block" pos:line="18970" pos:column="13">/* [in] */</comment> <argument pos:line="18970" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="18970" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="18970" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="18972" pos:column="9">virtual <name pos:line="18972" pos:column="17">HRESULT</name> <name pos:line="18972" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="18972" pos:column="43">Reset</name><argument_list pos:line="18972" pos:column="48">( <argument><expr><name pos:line="18972" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="18972" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="18972" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="18974" pos:column="9">virtual <name pos:line="18974" pos:column="17">HRESULT</name> <name pos:line="18974" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18974" pos:column="43">Clone</name><argument_list pos:line="18974" pos:column="48">( 
            <comment type="block" pos:line="18975" pos:column="13">/* [out] */</comment> <argument pos:line="18975" pos:column="25">__RPC__deref_out_opt IEnumDebugThreads2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="18975" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="18975" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="18977" pos:column="9">virtual <name pos:line="18977" pos:column="17">HRESULT</name> <name pos:line="18977" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="18977" pos:column="43">GetCount</name><argument_list pos:line="18977" pos:column="51">( 
            <comment type="block" pos:line="18978" pos:column="13">/* [out] */</comment> <argument pos:line="18978" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="18978" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="18978" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="18982" pos:column="1">#<cpp:directive pos:line="18982" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="18982" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="18984" pos:column="5">typedef <type><struct pos:line="18984" pos:column="13">struct <name pos:line="18984" pos:column="20">IEnumDebugThreads2Vtbl</name>
    <block pos:line="18985" pos:column="5">{<public type="default" pos:line="18985" pos:column="6">
        <function_decl><type><name pos:line="18986" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="18988" pos:column="9">HRESULT</name></type> ( <name pos:line="18988" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="18988" pos:column="37">*</type:modifier><name pos:line="18988" pos:column="38">QueryInterface</name> )<parameter_list pos:line="18988" pos:column="54">( 
            <param><decl><type><name pos:line="18989" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="18989" pos:column="32">*</type:modifier></type> <name pos:line="18989" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="18990" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="18990" pos:column="24">__RPC__in</name> <name pos:line="18990" pos:column="34">REFIID</name></type> <name pos:line="18990" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="18991" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="18992" pos:column="13">__RPC__deref_out</name>  <name pos:line="18992" pos:column="31">void</name> <type:modifier pos:line="18992" pos:column="36">*</type:modifier><type:modifier pos:line="18992" pos:column="37">*</type:modifier></type><name pos:line="18992" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18994" pos:column="9">ULONG</name></type> ( <name pos:line="18994" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18994" pos:column="35">*</type:modifier><name pos:line="18994" pos:column="36">AddRef</name> )<parameter_list pos:line="18994" pos:column="44">( 
            <param><decl><type><name pos:line="18995" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="18995" pos:column="32">*</type:modifier></type> <name pos:line="18995" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="18997" pos:column="9">ULONG</name></type> ( <name pos:line="18997" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="18997" pos:column="35">*</type:modifier><name pos:line="18997" pos:column="36">Release</name> )<parameter_list pos:line="18997" pos:column="45">( 
            <param><decl><type><name pos:line="18998" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="18998" pos:column="32">*</type:modifier></type> <name pos:line="18998" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19000" pos:column="9">HRESULT</name> <argument_list pos:line="19000" pos:column="17">( <argument pos:line="19000" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19000" pos:column="44">(</op:operator> 
            <name pos:line="19001" pos:column="13">IEnumDebugThreads2</name> <op:operator pos:line="19001" pos:column="32">*</op:operator> <name pos:line="19001" pos:column="34">This</name><op:operator pos:line="19001" pos:column="38">,</op:operator>
            <comment type="block" pos:line="19002" pos:column="13">/* [in] */</comment> <name pos:line="19002" pos:column="24">ULONG</name> <name pos:line="19002" pos:column="30">celt</name><op:operator pos:line="19002" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19003" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19003" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19003" pos:column="67">(<argument pos:line="19003" pos:column="68">celt</argument>, <argument pos:line="19003" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19003" pos:column="89">IDebugThread2</name> <op:operator pos:line="19003" pos:column="103">*</op:operator><op:operator pos:line="19003" pos:column="104">*</op:operator><name pos:line="19003" pos:column="105">rgelt</name><op:operator pos:line="19003" pos:column="110">,</op:operator>
            <comment type="block" pos:line="19004" pos:column="13">/* [out][in] */</comment> <name pos:line="19004" pos:column="29">__RPC__inout</name> <name pos:line="19004" pos:column="42">ULONG</name> <op:operator pos:line="19004" pos:column="48">*</op:operator><name pos:line="19004" pos:column="49">pceltFetched</name><op:operator pos:line="19004" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19006" pos:column="9">HRESULT</name></type> ( <name pos:line="19006" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19006" pos:column="37">*</type:modifier><name pos:line="19006" pos:column="38">Skip</name> )<parameter_list pos:line="19006" pos:column="44">( 
            <param><decl><type><name pos:line="19007" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="19007" pos:column="32">*</type:modifier></type> <name pos:line="19007" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="19008" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19008" pos:column="24">ULONG</name></type> <name pos:line="19008" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19010" pos:column="9">HRESULT</name></type> ( <name pos:line="19010" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19010" pos:column="37">*</type:modifier><name pos:line="19010" pos:column="38">Reset</name> )<parameter_list pos:line="19010" pos:column="45">( 
            <param><decl><type><name pos:line="19011" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="19011" pos:column="32">*</type:modifier></type> <name pos:line="19011" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19013" pos:column="9">HRESULT</name></type> ( <name pos:line="19013" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19013" pos:column="37">*</type:modifier><name pos:line="19013" pos:column="38">Clone</name> )<parameter_list pos:line="19013" pos:column="45">( 
            <param><decl><type><name pos:line="19014" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="19014" pos:column="32">*</type:modifier></type> <name pos:line="19014" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="19015" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19015" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19015" pos:column="46">IEnumDebugThreads2</name> <type:modifier pos:line="19015" pos:column="65">*</type:modifier><type:modifier pos:line="19015" pos:column="66">*</type:modifier></type><name pos:line="19015" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19017" pos:column="9">HRESULT</name></type> ( <name pos:line="19017" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19017" pos:column="37">*</type:modifier><name pos:line="19017" pos:column="38">GetCount</name> )<parameter_list pos:line="19017" pos:column="48">( 
            <param><decl><type><name pos:line="19018" pos:column="13">IEnumDebugThreads2</name> <type:modifier pos:line="19018" pos:column="32">*</type:modifier></type> <name pos:line="19018" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="19019" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19019" pos:column="25">__RPC__out</name> <name pos:line="19019" pos:column="36">ULONG</name> <type:modifier pos:line="19019" pos:column="42">*</type:modifier></type><name pos:line="19019" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19021" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19022" pos:column="7">IEnumDebugThreads2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19024" pos:column="5">interface</name></type> <name pos:line="19024" pos:column="15">IEnumDebugThreads2</name>
    <argument_list pos:line="19025" pos:column="5">{
        <argument><expr><name pos:line="19026" pos:column="9">CONST_VTBL</name> struct <name pos:line="19026" pos:column="27">IEnumDebugThreads2Vtbl</name> <op:operator pos:line="19026" pos:column="50">*</op:operator><name pos:line="19026" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19031" pos:column="1">#<cpp:directive pos:line="19031" pos:column="2">ifdef</cpp:directive> <name pos:line="19031" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19034" pos:column="1">#<cpp:directive pos:line="19034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19034" pos:column="9">IEnumDebugThreads2_QueryInterface</name><parameter_list pos:line="19034" pos:column="42">(<param><type><name pos:line="19034" pos:column="43">This</name></type></param>,<param><type><name pos:line="19034" pos:column="48">riid</name></type></param>,<param><type><name pos:line="19034" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19035" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19037" pos:column="1">#<cpp:directive pos:line="19037" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19037" pos:column="9">IEnumDebugThreads2_AddRef</name><parameter_list pos:line="19037" pos:column="34">(<param><type><name pos:line="19037" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19038" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19040" pos:column="1">#<cpp:directive pos:line="19040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19040" pos:column="9">IEnumDebugThreads2_Release</name><parameter_list pos:line="19040" pos:column="35">(<param><type><name pos:line="19040" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19041" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19044" pos:column="1">#<cpp:directive pos:line="19044" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19044" pos:column="9">IEnumDebugThreads2_Next</name><parameter_list pos:line="19044" pos:column="32">(<param><type><name pos:line="19044" pos:column="33">This</name></type></param>,<param><type><name pos:line="19044" pos:column="38">celt</name></type></param>,<param><type><name pos:line="19044" pos:column="43">rgelt</name></type></param>,<param><type><name pos:line="19044" pos:column="49">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19045" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19047" pos:column="1">#<cpp:directive pos:line="19047" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19047" pos:column="9">IEnumDebugThreads2_Skip</name><parameter_list pos:line="19047" pos:column="32">(<param><type><name pos:line="19047" pos:column="33">This</name></type></param>,<param><type><name pos:line="19047" pos:column="38">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19048" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19050" pos:column="1">#<cpp:directive pos:line="19050" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19050" pos:column="9">IEnumDebugThreads2_Reset</name><parameter_list pos:line="19050" pos:column="33">(<param><type><name pos:line="19050" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19051" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19053" pos:column="1">#<cpp:directive pos:line="19053" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19053" pos:column="9">IEnumDebugThreads2_Clone</name><parameter_list pos:line="19053" pos:column="33">(<param><type><name pos:line="19053" pos:column="34">This</name></type></param>,<param><type><name pos:line="19053" pos:column="39">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19054" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19056" pos:column="1">#<cpp:directive pos:line="19056" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19056" pos:column="9">IEnumDebugThreads2_GetCount</name><parameter_list pos:line="19056" pos:column="36">(<param><type><name pos:line="19056" pos:column="37">This</name></type></param>,<param><type><name pos:line="19056" pos:column="42">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19057" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19059" pos:column="1">#<cpp:directive pos:line="19059" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19059" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19062" pos:column="1">#<cpp:directive pos:line="19062" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19062" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19067" pos:column="1">#<cpp:directive pos:line="19067" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19067" pos:column="9">/* __IEnumDebugThreads2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19070" pos:column="1">#<cpp:directive pos:line="19070" pos:column="2">ifndef</cpp:directive> <name pos:line="19070" pos:column="9">__IEnumDebugStackFrames2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19071" pos:column="1">#<cpp:directive pos:line="19071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19071" pos:column="9">__IEnumDebugStackFrames2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19073" pos:column="1">/* interface IEnumDebugStackFrames2 */</comment>
<comment type="block" pos:line="19074" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19077" pos:column="1">EXTERN_C</name> <specifier pos:line="19077" pos:column="10">const</specifier> <name pos:line="19077" pos:column="16">IID</name></type> <name pos:line="19077" pos:column="20">IID_IEnumDebugStackFrames2</name></decl>;</decl_stmt>

<cpp:if pos:line="19079" pos:column="1">#<cpp:directive pos:line="19079" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19079" pos:column="5">defined</name><argument_list pos:line="19079" pos:column="12">(<argument><expr><name pos:line="19079" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19079" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19079" pos:column="29">!</op:operator><call><name pos:line="19079" pos:column="30">defined</name><argument_list pos:line="19079" pos:column="37">(<argument><expr><name pos:line="19079" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19081" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19081" pos:column="19">(<argument pos:line="19081" pos:column="20">"cd39102b-4b69-4495-8f29-e0b25c4a8855"</argument>)</argument_list></macro>
    <label><name pos:line="19082" pos:column="5">IEnumDebugStackFrames2</name> :</label> <expr_stmt><expr pos:line="19082" pos:column="30">public <name pos:line="19082" pos:column="37">IUnknown</name>
    <block pos:line="19083" pos:column="5">{
    <expr pos:line="19084" pos:column="5">public<op:operator pos:line="19084" pos:column="11">:</op:operator>
        virtual <name pos:line="19085" pos:column="17">HRESULT</name> <name pos:line="19085" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19085" pos:column="43">Next</name><argument_list pos:line="19085" pos:column="47">( 
            <comment type="block" pos:line="19086" pos:column="13">/* [in] */</comment> <argument pos:line="19086" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19087" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19087" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugStackFrame2 **rgelt</argument>,
            <comment type="block" pos:line="19088" pos:column="13">/* [out][in] */</comment> <argument pos:line="19088" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19088" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19088" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19090" pos:column="9">virtual <name pos:line="19090" pos:column="17">HRESULT</name> <name pos:line="19090" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19090" pos:column="43">Skip</name><argument_list pos:line="19090" pos:column="47">( 
            <comment type="block" pos:line="19091" pos:column="13">/* [in] */</comment> <argument pos:line="19091" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19091" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19091" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19093" pos:column="9">virtual <name pos:line="19093" pos:column="17">HRESULT</name> <name pos:line="19093" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19093" pos:column="43">Reset</name><argument_list pos:line="19093" pos:column="48">( <argument><expr><name pos:line="19093" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19093" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19093" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19095" pos:column="9">virtual <name pos:line="19095" pos:column="17">HRESULT</name> <name pos:line="19095" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19095" pos:column="43">Clone</name><argument_list pos:line="19095" pos:column="48">( 
            <comment type="block" pos:line="19096" pos:column="13">/* [out] */</comment> <argument pos:line="19096" pos:column="25">__RPC__deref_out_opt IEnumDebugStackFrames2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19096" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="19096" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="19098" pos:column="9">virtual <name pos:line="19098" pos:column="17">HRESULT</name> <name pos:line="19098" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19098" pos:column="43">GetCount</name><argument_list pos:line="19098" pos:column="51">( 
            <comment type="block" pos:line="19099" pos:column="13">/* [out] */</comment> <argument pos:line="19099" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19099" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19099" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="19101" pos:column="9">virtual <name pos:line="19101" pos:column="17">HRESULT</name> <name pos:line="19101" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19101" pos:column="43">GetIndex</name><argument_list pos:line="19101" pos:column="51">( 
            <comment type="block" pos:line="19102" pos:column="13">/* [in] */</comment> <argument pos:line="19102" pos:column="24">__RPC__in_opt IDebugStackFrame2 *pStackFrame</argument>,
            <comment type="block" pos:line="19103" pos:column="13">/* [out][in] */</comment> <argument pos:line="19103" pos:column="29">__RPC__inout ULONG *pIndex</argument>)</argument_list></macro> <op:operator pos:line="19103" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="19103" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19107" pos:column="1">#<cpp:directive pos:line="19107" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19107" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19109" pos:column="5">typedef <type><struct pos:line="19109" pos:column="13">struct <name pos:line="19109" pos:column="20">IEnumDebugStackFrames2Vtbl</name>
    <block pos:line="19110" pos:column="5">{<public type="default" pos:line="19110" pos:column="6">
        <function_decl><type><name pos:line="19111" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19113" pos:column="9">HRESULT</name></type> ( <name pos:line="19113" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19113" pos:column="37">*</type:modifier><name pos:line="19113" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19113" pos:column="54">( 
            <param><decl><type><name pos:line="19114" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19114" pos:column="36">*</type:modifier></type> <name pos:line="19114" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="19115" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19115" pos:column="24">__RPC__in</name> <name pos:line="19115" pos:column="34">REFIID</name></type> <name pos:line="19115" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19116" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19117" pos:column="13">__RPC__deref_out</name>  <name pos:line="19117" pos:column="31">void</name> <type:modifier pos:line="19117" pos:column="36">*</type:modifier><type:modifier pos:line="19117" pos:column="37">*</type:modifier></type><name pos:line="19117" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19119" pos:column="9">ULONG</name></type> ( <name pos:line="19119" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19119" pos:column="35">*</type:modifier><name pos:line="19119" pos:column="36">AddRef</name> )<parameter_list pos:line="19119" pos:column="44">( 
            <param><decl><type><name pos:line="19120" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19120" pos:column="36">*</type:modifier></type> <name pos:line="19120" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19122" pos:column="9">ULONG</name></type> ( <name pos:line="19122" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19122" pos:column="35">*</type:modifier><name pos:line="19122" pos:column="36">Release</name> )<parameter_list pos:line="19122" pos:column="45">( 
            <param><decl><type><name pos:line="19123" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19123" pos:column="36">*</type:modifier></type> <name pos:line="19123" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19125" pos:column="9">HRESULT</name> <argument_list pos:line="19125" pos:column="17">( <argument pos:line="19125" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19125" pos:column="44">(</op:operator> 
            <name pos:line="19126" pos:column="13">IEnumDebugStackFrames2</name> <op:operator pos:line="19126" pos:column="36">*</op:operator> <name pos:line="19126" pos:column="38">This</name><op:operator pos:line="19126" pos:column="42">,</op:operator>
            <comment type="block" pos:line="19127" pos:column="13">/* [in] */</comment> <name pos:line="19127" pos:column="24">ULONG</name> <name pos:line="19127" pos:column="30">celt</name><op:operator pos:line="19127" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19128" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19128" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19128" pos:column="67">(<argument pos:line="19128" pos:column="68">celt</argument>, <argument pos:line="19128" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19128" pos:column="89">IDebugStackFrame2</name> <op:operator pos:line="19128" pos:column="107">*</op:operator><op:operator pos:line="19128" pos:column="108">*</op:operator><name pos:line="19128" pos:column="109">rgelt</name><op:operator pos:line="19128" pos:column="114">,</op:operator>
            <comment type="block" pos:line="19129" pos:column="13">/* [out][in] */</comment> <name pos:line="19129" pos:column="29">__RPC__inout</name> <name pos:line="19129" pos:column="42">ULONG</name> <op:operator pos:line="19129" pos:column="48">*</op:operator><name pos:line="19129" pos:column="49">pceltFetched</name><op:operator pos:line="19129" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19131" pos:column="9">HRESULT</name></type> ( <name pos:line="19131" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19131" pos:column="37">*</type:modifier><name pos:line="19131" pos:column="38">Skip</name> )<parameter_list pos:line="19131" pos:column="44">( 
            <param><decl><type><name pos:line="19132" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19132" pos:column="36">*</type:modifier></type> <name pos:line="19132" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="19133" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19133" pos:column="24">ULONG</name></type> <name pos:line="19133" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19135" pos:column="9">HRESULT</name></type> ( <name pos:line="19135" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19135" pos:column="37">*</type:modifier><name pos:line="19135" pos:column="38">Reset</name> )<parameter_list pos:line="19135" pos:column="45">( 
            <param><decl><type><name pos:line="19136" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19136" pos:column="36">*</type:modifier></type> <name pos:line="19136" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19138" pos:column="9">HRESULT</name></type> ( <name pos:line="19138" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19138" pos:column="37">*</type:modifier><name pos:line="19138" pos:column="38">Clone</name> )<parameter_list pos:line="19138" pos:column="45">( 
            <param><decl><type><name pos:line="19139" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19139" pos:column="36">*</type:modifier></type> <name pos:line="19139" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="19140" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19140" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19140" pos:column="46">IEnumDebugStackFrames2</name> <type:modifier pos:line="19140" pos:column="69">*</type:modifier><type:modifier pos:line="19140" pos:column="70">*</type:modifier></type><name pos:line="19140" pos:column="71">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19142" pos:column="9">HRESULT</name></type> ( <name pos:line="19142" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19142" pos:column="37">*</type:modifier><name pos:line="19142" pos:column="38">GetCount</name> )<parameter_list pos:line="19142" pos:column="48">( 
            <param><decl><type><name pos:line="19143" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19143" pos:column="36">*</type:modifier></type> <name pos:line="19143" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="19144" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19144" pos:column="25">__RPC__out</name> <name pos:line="19144" pos:column="36">ULONG</name> <type:modifier pos:line="19144" pos:column="42">*</type:modifier></type><name pos:line="19144" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19146" pos:column="9">HRESULT</name></type> ( <name pos:line="19146" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19146" pos:column="37">*</type:modifier><name pos:line="19146" pos:column="38">GetIndex</name> )<parameter_list pos:line="19146" pos:column="48">( 
            <param><decl><type><name pos:line="19147" pos:column="13">IEnumDebugStackFrames2</name> <type:modifier pos:line="19147" pos:column="36">*</type:modifier></type> <name pos:line="19147" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="19148" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19148" pos:column="24">__RPC__in_opt</name> <name pos:line="19148" pos:column="38">IDebugStackFrame2</name> <type:modifier pos:line="19148" pos:column="56">*</type:modifier></type><name pos:line="19148" pos:column="57">pStackFrame</name></decl></param>,
            <comment type="block" pos:line="19149" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="19149" pos:column="29">__RPC__inout</name> <name pos:line="19149" pos:column="42">ULONG</name> <type:modifier pos:line="19149" pos:column="48">*</type:modifier></type><name pos:line="19149" pos:column="49">pIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19151" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19152" pos:column="7">IEnumDebugStackFrames2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19154" pos:column="5">interface</name></type> <name pos:line="19154" pos:column="15">IEnumDebugStackFrames2</name>
    <argument_list pos:line="19155" pos:column="5">{
        <argument><expr><name pos:line="19156" pos:column="9">CONST_VTBL</name> struct <name pos:line="19156" pos:column="27">IEnumDebugStackFrames2Vtbl</name> <op:operator pos:line="19156" pos:column="54">*</op:operator><name pos:line="19156" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19161" pos:column="1">#<cpp:directive pos:line="19161" pos:column="2">ifdef</cpp:directive> <name pos:line="19161" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19164" pos:column="1">#<cpp:directive pos:line="19164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19164" pos:column="9">IEnumDebugStackFrames2_QueryInterface</name><parameter_list pos:line="19164" pos:column="46">(<param><type><name pos:line="19164" pos:column="47">This</name></type></param>,<param><type><name pos:line="19164" pos:column="52">riid</name></type></param>,<param><type><name pos:line="19164" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19165" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19167" pos:column="1">#<cpp:directive pos:line="19167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19167" pos:column="9">IEnumDebugStackFrames2_AddRef</name><parameter_list pos:line="19167" pos:column="38">(<param><type><name pos:line="19167" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19168" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19170" pos:column="1">#<cpp:directive pos:line="19170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19170" pos:column="9">IEnumDebugStackFrames2_Release</name><parameter_list pos:line="19170" pos:column="39">(<param><type><name pos:line="19170" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19171" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19174" pos:column="1">#<cpp:directive pos:line="19174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19174" pos:column="9">IEnumDebugStackFrames2_Next</name><parameter_list pos:line="19174" pos:column="36">(<param><type><name pos:line="19174" pos:column="37">This</name></type></param>,<param><type><name pos:line="19174" pos:column="42">celt</name></type></param>,<param><type><name pos:line="19174" pos:column="47">rgelt</name></type></param>,<param><type><name pos:line="19174" pos:column="53">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19175" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19177" pos:column="1">#<cpp:directive pos:line="19177" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19177" pos:column="9">IEnumDebugStackFrames2_Skip</name><parameter_list pos:line="19177" pos:column="36">(<param><type><name pos:line="19177" pos:column="37">This</name></type></param>,<param><type><name pos:line="19177" pos:column="42">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19178" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19180" pos:column="1">#<cpp:directive pos:line="19180" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19180" pos:column="9">IEnumDebugStackFrames2_Reset</name><parameter_list pos:line="19180" pos:column="37">(<param><type><name pos:line="19180" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19181" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19183" pos:column="1">#<cpp:directive pos:line="19183" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19183" pos:column="9">IEnumDebugStackFrames2_Clone</name><parameter_list pos:line="19183" pos:column="37">(<param><type><name pos:line="19183" pos:column="38">This</name></type></param>,<param><type><name pos:line="19183" pos:column="43">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19184" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19186" pos:column="1">#<cpp:directive pos:line="19186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19186" pos:column="9">IEnumDebugStackFrames2_GetCount</name><parameter_list pos:line="19186" pos:column="40">(<param><type><name pos:line="19186" pos:column="41">This</name></type></param>,<param><type><name pos:line="19186" pos:column="46">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19187" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19189" pos:column="1">#<cpp:directive pos:line="19189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19189" pos:column="9">IEnumDebugStackFrames2_GetIndex</name><parameter_list pos:line="19189" pos:column="40">(<param><type><name pos:line="19189" pos:column="41">This</name></type></param>,<param><type><name pos:line="19189" pos:column="46">pStackFrame</name></type></param>,<param><type><name pos:line="19189" pos:column="58">pIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19190" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIndex(This,pStackFrame,pIndex) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19192" pos:column="1">#<cpp:directive pos:line="19192" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19192" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19195" pos:column="1">#<cpp:directive pos:line="19195" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19195" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19200" pos:column="1">#<cpp:directive pos:line="19200" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19200" pos:column="9">/* __IEnumDebugStackFrames2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19203" pos:column="1">#<cpp:directive pos:line="19203" pos:column="2">ifndef</cpp:directive> <name pos:line="19203" pos:column="9">__IEnumDebugCodeContexts2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19204" pos:column="1">#<cpp:directive pos:line="19204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19204" pos:column="9">__IEnumDebugCodeContexts2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19206" pos:column="1">/* interface IEnumDebugCodeContexts2 */</comment>
<comment type="block" pos:line="19207" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19210" pos:column="1">EXTERN_C</name> <specifier pos:line="19210" pos:column="10">const</specifier> <name pos:line="19210" pos:column="16">IID</name></type> <name pos:line="19210" pos:column="20">IID_IEnumDebugCodeContexts2</name></decl>;</decl_stmt>

<cpp:if pos:line="19212" pos:column="1">#<cpp:directive pos:line="19212" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19212" pos:column="5">defined</name><argument_list pos:line="19212" pos:column="12">(<argument><expr><name pos:line="19212" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19212" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19212" pos:column="29">!</op:operator><call><name pos:line="19212" pos:column="30">defined</name><argument_list pos:line="19212" pos:column="37">(<argument><expr><name pos:line="19212" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19214" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19214" pos:column="19">(<argument pos:line="19214" pos:column="20">"ad47a80b-eda7-459e-af82-647cc9fbaa50"</argument>)</argument_list></macro>
    <label><name pos:line="19215" pos:column="5">IEnumDebugCodeContexts2</name> :</label> <expr_stmt><expr pos:line="19215" pos:column="31">public <name pos:line="19215" pos:column="38">IUnknown</name>
    <block pos:line="19216" pos:column="5">{
    <expr pos:line="19217" pos:column="5">public<op:operator pos:line="19217" pos:column="11">:</op:operator>
        virtual <name pos:line="19218" pos:column="17">HRESULT</name> <name pos:line="19218" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19218" pos:column="43">Next</name><argument_list pos:line="19218" pos:column="47">( 
            <comment type="block" pos:line="19219" pos:column="13">/* [in] */</comment> <argument pos:line="19219" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19220" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19220" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugCodeContext2 **rgelt</argument>,
            <comment type="block" pos:line="19221" pos:column="13">/* [out][in] */</comment> <argument pos:line="19221" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19221" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19221" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19223" pos:column="9">virtual <name pos:line="19223" pos:column="17">HRESULT</name> <name pos:line="19223" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19223" pos:column="43">Skip</name><argument_list pos:line="19223" pos:column="47">( 
            <comment type="block" pos:line="19224" pos:column="13">/* [in] */</comment> <argument pos:line="19224" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19224" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19224" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19226" pos:column="9">virtual <name pos:line="19226" pos:column="17">HRESULT</name> <name pos:line="19226" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19226" pos:column="43">Reset</name><argument_list pos:line="19226" pos:column="48">( <argument><expr><name pos:line="19226" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19226" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19226" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19228" pos:column="9">virtual <name pos:line="19228" pos:column="17">HRESULT</name> <name pos:line="19228" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19228" pos:column="43">Clone</name><argument_list pos:line="19228" pos:column="48">( 
            <comment type="block" pos:line="19229" pos:column="13">/* [out] */</comment> <argument pos:line="19229" pos:column="25">__RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19229" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="19229" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="19231" pos:column="9">virtual <name pos:line="19231" pos:column="17">HRESULT</name> <name pos:line="19231" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19231" pos:column="43">GetCount</name><argument_list pos:line="19231" pos:column="51">( 
            <comment type="block" pos:line="19232" pos:column="13">/* [out] */</comment> <argument pos:line="19232" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19232" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19232" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19236" pos:column="1">#<cpp:directive pos:line="19236" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19236" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19238" pos:column="5">typedef <type><struct pos:line="19238" pos:column="13">struct <name pos:line="19238" pos:column="20">IEnumDebugCodeContexts2Vtbl</name>
    <block pos:line="19239" pos:column="5">{<public type="default" pos:line="19239" pos:column="6">
        <function_decl><type><name pos:line="19240" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19242" pos:column="9">HRESULT</name></type> ( <name pos:line="19242" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19242" pos:column="37">*</type:modifier><name pos:line="19242" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19242" pos:column="54">( 
            <param><decl><type><name pos:line="19243" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19243" pos:column="37">*</type:modifier></type> <name pos:line="19243" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="19244" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19244" pos:column="24">__RPC__in</name> <name pos:line="19244" pos:column="34">REFIID</name></type> <name pos:line="19244" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19245" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19246" pos:column="13">__RPC__deref_out</name>  <name pos:line="19246" pos:column="31">void</name> <type:modifier pos:line="19246" pos:column="36">*</type:modifier><type:modifier pos:line="19246" pos:column="37">*</type:modifier></type><name pos:line="19246" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19248" pos:column="9">ULONG</name></type> ( <name pos:line="19248" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19248" pos:column="35">*</type:modifier><name pos:line="19248" pos:column="36">AddRef</name> )<parameter_list pos:line="19248" pos:column="44">( 
            <param><decl><type><name pos:line="19249" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19249" pos:column="37">*</type:modifier></type> <name pos:line="19249" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19251" pos:column="9">ULONG</name></type> ( <name pos:line="19251" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19251" pos:column="35">*</type:modifier><name pos:line="19251" pos:column="36">Release</name> )<parameter_list pos:line="19251" pos:column="45">( 
            <param><decl><type><name pos:line="19252" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19252" pos:column="37">*</type:modifier></type> <name pos:line="19252" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19254" pos:column="9">HRESULT</name> <argument_list pos:line="19254" pos:column="17">( <argument pos:line="19254" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19254" pos:column="44">(</op:operator> 
            <name pos:line="19255" pos:column="13">IEnumDebugCodeContexts2</name> <op:operator pos:line="19255" pos:column="37">*</op:operator> <name pos:line="19255" pos:column="39">This</name><op:operator pos:line="19255" pos:column="43">,</op:operator>
            <comment type="block" pos:line="19256" pos:column="13">/* [in] */</comment> <name pos:line="19256" pos:column="24">ULONG</name> <name pos:line="19256" pos:column="30">celt</name><op:operator pos:line="19256" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19257" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19257" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19257" pos:column="67">(<argument pos:line="19257" pos:column="68">celt</argument>, <argument pos:line="19257" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19257" pos:column="89">IDebugCodeContext2</name> <op:operator pos:line="19257" pos:column="108">*</op:operator><op:operator pos:line="19257" pos:column="109">*</op:operator><name pos:line="19257" pos:column="110">rgelt</name><op:operator pos:line="19257" pos:column="115">,</op:operator>
            <comment type="block" pos:line="19258" pos:column="13">/* [out][in] */</comment> <name pos:line="19258" pos:column="29">__RPC__inout</name> <name pos:line="19258" pos:column="42">ULONG</name> <op:operator pos:line="19258" pos:column="48">*</op:operator><name pos:line="19258" pos:column="49">pceltFetched</name><op:operator pos:line="19258" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19260" pos:column="9">HRESULT</name></type> ( <name pos:line="19260" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19260" pos:column="37">*</type:modifier><name pos:line="19260" pos:column="38">Skip</name> )<parameter_list pos:line="19260" pos:column="44">( 
            <param><decl><type><name pos:line="19261" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19261" pos:column="37">*</type:modifier></type> <name pos:line="19261" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="19262" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19262" pos:column="24">ULONG</name></type> <name pos:line="19262" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19264" pos:column="9">HRESULT</name></type> ( <name pos:line="19264" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19264" pos:column="37">*</type:modifier><name pos:line="19264" pos:column="38">Reset</name> )<parameter_list pos:line="19264" pos:column="45">( 
            <param><decl><type><name pos:line="19265" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19265" pos:column="37">*</type:modifier></type> <name pos:line="19265" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19267" pos:column="9">HRESULT</name></type> ( <name pos:line="19267" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19267" pos:column="37">*</type:modifier><name pos:line="19267" pos:column="38">Clone</name> )<parameter_list pos:line="19267" pos:column="45">( 
            <param><decl><type><name pos:line="19268" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19268" pos:column="37">*</type:modifier></type> <name pos:line="19268" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="19269" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19269" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19269" pos:column="46">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19269" pos:column="70">*</type:modifier><type:modifier pos:line="19269" pos:column="71">*</type:modifier></type><name pos:line="19269" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19271" pos:column="9">HRESULT</name></type> ( <name pos:line="19271" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19271" pos:column="37">*</type:modifier><name pos:line="19271" pos:column="38">GetCount</name> )<parameter_list pos:line="19271" pos:column="48">( 
            <param><decl><type><name pos:line="19272" pos:column="13">IEnumDebugCodeContexts2</name> <type:modifier pos:line="19272" pos:column="37">*</type:modifier></type> <name pos:line="19272" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="19273" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19273" pos:column="25">__RPC__out</name> <name pos:line="19273" pos:column="36">ULONG</name> <type:modifier pos:line="19273" pos:column="42">*</type:modifier></type><name pos:line="19273" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19275" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19276" pos:column="7">IEnumDebugCodeContexts2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19278" pos:column="5">interface</name></type> <name pos:line="19278" pos:column="15">IEnumDebugCodeContexts2</name>
    <argument_list pos:line="19279" pos:column="5">{
        <argument><expr><name pos:line="19280" pos:column="9">CONST_VTBL</name> struct <name pos:line="19280" pos:column="27">IEnumDebugCodeContexts2Vtbl</name> <op:operator pos:line="19280" pos:column="55">*</op:operator><name pos:line="19280" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19285" pos:column="1">#<cpp:directive pos:line="19285" pos:column="2">ifdef</cpp:directive> <name pos:line="19285" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19288" pos:column="1">#<cpp:directive pos:line="19288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19288" pos:column="9">IEnumDebugCodeContexts2_QueryInterface</name><parameter_list pos:line="19288" pos:column="47">(<param><type><name pos:line="19288" pos:column="48">This</name></type></param>,<param><type><name pos:line="19288" pos:column="53">riid</name></type></param>,<param><type><name pos:line="19288" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19289" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19291" pos:column="1">#<cpp:directive pos:line="19291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19291" pos:column="9">IEnumDebugCodeContexts2_AddRef</name><parameter_list pos:line="19291" pos:column="39">(<param><type><name pos:line="19291" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19292" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19294" pos:column="1">#<cpp:directive pos:line="19294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19294" pos:column="9">IEnumDebugCodeContexts2_Release</name><parameter_list pos:line="19294" pos:column="40">(<param><type><name pos:line="19294" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19295" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19298" pos:column="1">#<cpp:directive pos:line="19298" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19298" pos:column="9">IEnumDebugCodeContexts2_Next</name><parameter_list pos:line="19298" pos:column="37">(<param><type><name pos:line="19298" pos:column="38">This</name></type></param>,<param><type><name pos:line="19298" pos:column="43">celt</name></type></param>,<param><type><name pos:line="19298" pos:column="48">rgelt</name></type></param>,<param><type><name pos:line="19298" pos:column="54">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19299" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19301" pos:column="1">#<cpp:directive pos:line="19301" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19301" pos:column="9">IEnumDebugCodeContexts2_Skip</name><parameter_list pos:line="19301" pos:column="37">(<param><type><name pos:line="19301" pos:column="38">This</name></type></param>,<param><type><name pos:line="19301" pos:column="43">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19302" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19304" pos:column="1">#<cpp:directive pos:line="19304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19304" pos:column="9">IEnumDebugCodeContexts2_Reset</name><parameter_list pos:line="19304" pos:column="38">(<param><type><name pos:line="19304" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19305" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19307" pos:column="1">#<cpp:directive pos:line="19307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19307" pos:column="9">IEnumDebugCodeContexts2_Clone</name><parameter_list pos:line="19307" pos:column="38">(<param><type><name pos:line="19307" pos:column="39">This</name></type></param>,<param><type><name pos:line="19307" pos:column="44">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19308" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19310" pos:column="1">#<cpp:directive pos:line="19310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19310" pos:column="9">IEnumDebugCodeContexts2_GetCount</name><parameter_list pos:line="19310" pos:column="41">(<param><type><name pos:line="19310" pos:column="42">This</name></type></param>,<param><type><name pos:line="19310" pos:column="47">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19311" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19313" pos:column="1">#<cpp:directive pos:line="19313" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19313" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19316" pos:column="1">#<cpp:directive pos:line="19316" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19316" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19321" pos:column="1">#<cpp:directive pos:line="19321" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19321" pos:column="9">/* __IEnumDebugCodeContexts2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19324" pos:column="1">#<cpp:directive pos:line="19324" pos:column="2">ifndef</cpp:directive> <name pos:line="19324" pos:column="9">__IEnumDebugBoundBreakpoints2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19325" pos:column="1">#<cpp:directive pos:line="19325" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19325" pos:column="9">__IEnumDebugBoundBreakpoints2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19327" pos:column="1">/* interface IEnumDebugBoundBreakpoints2 */</comment>
<comment type="block" pos:line="19328" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19331" pos:column="1">EXTERN_C</name> <specifier pos:line="19331" pos:column="10">const</specifier> <name pos:line="19331" pos:column="16">IID</name></type> <name pos:line="19331" pos:column="20">IID_IEnumDebugBoundBreakpoints2</name></decl>;</decl_stmt>

<cpp:if pos:line="19333" pos:column="1">#<cpp:directive pos:line="19333" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19333" pos:column="5">defined</name><argument_list pos:line="19333" pos:column="12">(<argument><expr><name pos:line="19333" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19333" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19333" pos:column="29">!</op:operator><call><name pos:line="19333" pos:column="30">defined</name><argument_list pos:line="19333" pos:column="37">(<argument><expr><name pos:line="19333" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19335" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19335" pos:column="19">(<argument pos:line="19335" pos:column="20">"0f6b37e0-fcfe-44d9-9112-394ca9b92114"</argument>)</argument_list></macro>
    <label><name pos:line="19336" pos:column="5">IEnumDebugBoundBreakpoints2</name> :</label> <expr_stmt><expr pos:line="19336" pos:column="35">public <name pos:line="19336" pos:column="42">IUnknown</name>
    <block pos:line="19337" pos:column="5">{
    <expr pos:line="19338" pos:column="5">public<op:operator pos:line="19338" pos:column="11">:</op:operator>
        virtual <name pos:line="19339" pos:column="17">HRESULT</name> <name pos:line="19339" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19339" pos:column="43">Next</name><argument_list pos:line="19339" pos:column="47">( 
            <comment type="block" pos:line="19340" pos:column="13">/* [in] */</comment> <argument pos:line="19340" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19341" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19341" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugBoundBreakpoint2 **rgelt</argument>,
            <comment type="block" pos:line="19342" pos:column="13">/* [out][in] */</comment> <argument pos:line="19342" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19342" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19342" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19344" pos:column="9">virtual <name pos:line="19344" pos:column="17">HRESULT</name> <name pos:line="19344" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19344" pos:column="43">Skip</name><argument_list pos:line="19344" pos:column="47">( 
            <comment type="block" pos:line="19345" pos:column="13">/* [in] */</comment> <argument pos:line="19345" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19345" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19345" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19347" pos:column="9">virtual <name pos:line="19347" pos:column="17">HRESULT</name> <name pos:line="19347" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19347" pos:column="43">Reset</name><argument_list pos:line="19347" pos:column="48">( <argument><expr><name pos:line="19347" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19347" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19347" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19349" pos:column="9">virtual <name pos:line="19349" pos:column="17">HRESULT</name> <name pos:line="19349" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19349" pos:column="43">Clone</name><argument_list pos:line="19349" pos:column="48">( 
            <comment type="block" pos:line="19350" pos:column="13">/* [out] */</comment> <argument pos:line="19350" pos:column="25">__RPC__deref_out_opt IEnumDebugBoundBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19350" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="19350" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="19352" pos:column="9">virtual <name pos:line="19352" pos:column="17">HRESULT</name> <name pos:line="19352" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19352" pos:column="43">GetCount</name><argument_list pos:line="19352" pos:column="51">( 
            <comment type="block" pos:line="19353" pos:column="13">/* [out] */</comment> <argument pos:line="19353" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19353" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19353" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19357" pos:column="1">#<cpp:directive pos:line="19357" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19357" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19359" pos:column="5">typedef <type><struct pos:line="19359" pos:column="13">struct <name pos:line="19359" pos:column="20">IEnumDebugBoundBreakpoints2Vtbl</name>
    <block pos:line="19360" pos:column="5">{<public type="default" pos:line="19360" pos:column="6">
        <function_decl><type><name pos:line="19361" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19363" pos:column="9">HRESULT</name></type> ( <name pos:line="19363" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19363" pos:column="37">*</type:modifier><name pos:line="19363" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19363" pos:column="54">( 
            <param><decl><type><name pos:line="19364" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19364" pos:column="41">*</type:modifier></type> <name pos:line="19364" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19365" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19365" pos:column="24">__RPC__in</name> <name pos:line="19365" pos:column="34">REFIID</name></type> <name pos:line="19365" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19366" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19367" pos:column="13">__RPC__deref_out</name>  <name pos:line="19367" pos:column="31">void</name> <type:modifier pos:line="19367" pos:column="36">*</type:modifier><type:modifier pos:line="19367" pos:column="37">*</type:modifier></type><name pos:line="19367" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19369" pos:column="9">ULONG</name></type> ( <name pos:line="19369" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19369" pos:column="35">*</type:modifier><name pos:line="19369" pos:column="36">AddRef</name> )<parameter_list pos:line="19369" pos:column="44">( 
            <param><decl><type><name pos:line="19370" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19370" pos:column="41">*</type:modifier></type> <name pos:line="19370" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19372" pos:column="9">ULONG</name></type> ( <name pos:line="19372" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19372" pos:column="35">*</type:modifier><name pos:line="19372" pos:column="36">Release</name> )<parameter_list pos:line="19372" pos:column="45">( 
            <param><decl><type><name pos:line="19373" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19373" pos:column="41">*</type:modifier></type> <name pos:line="19373" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19375" pos:column="9">HRESULT</name> <argument_list pos:line="19375" pos:column="17">( <argument pos:line="19375" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19375" pos:column="44">(</op:operator> 
            <name pos:line="19376" pos:column="13">IEnumDebugBoundBreakpoints2</name> <op:operator pos:line="19376" pos:column="41">*</op:operator> <name pos:line="19376" pos:column="43">This</name><op:operator pos:line="19376" pos:column="47">,</op:operator>
            <comment type="block" pos:line="19377" pos:column="13">/* [in] */</comment> <name pos:line="19377" pos:column="24">ULONG</name> <name pos:line="19377" pos:column="30">celt</name><op:operator pos:line="19377" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19378" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19378" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19378" pos:column="67">(<argument pos:line="19378" pos:column="68">celt</argument>, <argument pos:line="19378" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19378" pos:column="89">IDebugBoundBreakpoint2</name> <op:operator pos:line="19378" pos:column="112">*</op:operator><op:operator pos:line="19378" pos:column="113">*</op:operator><name pos:line="19378" pos:column="114">rgelt</name><op:operator pos:line="19378" pos:column="119">,</op:operator>
            <comment type="block" pos:line="19379" pos:column="13">/* [out][in] */</comment> <name pos:line="19379" pos:column="29">__RPC__inout</name> <name pos:line="19379" pos:column="42">ULONG</name> <op:operator pos:line="19379" pos:column="48">*</op:operator><name pos:line="19379" pos:column="49">pceltFetched</name><op:operator pos:line="19379" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19381" pos:column="9">HRESULT</name></type> ( <name pos:line="19381" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19381" pos:column="37">*</type:modifier><name pos:line="19381" pos:column="38">Skip</name> )<parameter_list pos:line="19381" pos:column="44">( 
            <param><decl><type><name pos:line="19382" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19382" pos:column="41">*</type:modifier></type> <name pos:line="19382" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19383" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19383" pos:column="24">ULONG</name></type> <name pos:line="19383" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19385" pos:column="9">HRESULT</name></type> ( <name pos:line="19385" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19385" pos:column="37">*</type:modifier><name pos:line="19385" pos:column="38">Reset</name> )<parameter_list pos:line="19385" pos:column="45">( 
            <param><decl><type><name pos:line="19386" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19386" pos:column="41">*</type:modifier></type> <name pos:line="19386" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19388" pos:column="9">HRESULT</name></type> ( <name pos:line="19388" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19388" pos:column="37">*</type:modifier><name pos:line="19388" pos:column="38">Clone</name> )<parameter_list pos:line="19388" pos:column="45">( 
            <param><decl><type><name pos:line="19389" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19389" pos:column="41">*</type:modifier></type> <name pos:line="19389" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19390" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19390" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19390" pos:column="46">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19390" pos:column="74">*</type:modifier><type:modifier pos:line="19390" pos:column="75">*</type:modifier></type><name pos:line="19390" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19392" pos:column="9">HRESULT</name></type> ( <name pos:line="19392" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19392" pos:column="37">*</type:modifier><name pos:line="19392" pos:column="38">GetCount</name> )<parameter_list pos:line="19392" pos:column="48">( 
            <param><decl><type><name pos:line="19393" pos:column="13">IEnumDebugBoundBreakpoints2</name> <type:modifier pos:line="19393" pos:column="41">*</type:modifier></type> <name pos:line="19393" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19394" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19394" pos:column="25">__RPC__out</name> <name pos:line="19394" pos:column="36">ULONG</name> <type:modifier pos:line="19394" pos:column="42">*</type:modifier></type><name pos:line="19394" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19396" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19397" pos:column="7">IEnumDebugBoundBreakpoints2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19399" pos:column="5">interface</name></type> <name pos:line="19399" pos:column="15">IEnumDebugBoundBreakpoints2</name>
    <argument_list pos:line="19400" pos:column="5">{
        <argument><expr><name pos:line="19401" pos:column="9">CONST_VTBL</name> struct <name pos:line="19401" pos:column="27">IEnumDebugBoundBreakpoints2Vtbl</name> <op:operator pos:line="19401" pos:column="59">*</op:operator><name pos:line="19401" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19406" pos:column="1">#<cpp:directive pos:line="19406" pos:column="2">ifdef</cpp:directive> <name pos:line="19406" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19409" pos:column="1">#<cpp:directive pos:line="19409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19409" pos:column="9">IEnumDebugBoundBreakpoints2_QueryInterface</name><parameter_list pos:line="19409" pos:column="51">(<param><type><name pos:line="19409" pos:column="52">This</name></type></param>,<param><type><name pos:line="19409" pos:column="57">riid</name></type></param>,<param><type><name pos:line="19409" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19410" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19412" pos:column="1">#<cpp:directive pos:line="19412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19412" pos:column="9">IEnumDebugBoundBreakpoints2_AddRef</name><parameter_list pos:line="19412" pos:column="43">(<param><type><name pos:line="19412" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19413" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19415" pos:column="1">#<cpp:directive pos:line="19415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19415" pos:column="9">IEnumDebugBoundBreakpoints2_Release</name><parameter_list pos:line="19415" pos:column="44">(<param><type><name pos:line="19415" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19416" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19419" pos:column="1">#<cpp:directive pos:line="19419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19419" pos:column="9">IEnumDebugBoundBreakpoints2_Next</name><parameter_list pos:line="19419" pos:column="41">(<param><type><name pos:line="19419" pos:column="42">This</name></type></param>,<param><type><name pos:line="19419" pos:column="47">celt</name></type></param>,<param><type><name pos:line="19419" pos:column="52">rgelt</name></type></param>,<param><type><name pos:line="19419" pos:column="58">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19420" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19422" pos:column="1">#<cpp:directive pos:line="19422" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19422" pos:column="9">IEnumDebugBoundBreakpoints2_Skip</name><parameter_list pos:line="19422" pos:column="41">(<param><type><name pos:line="19422" pos:column="42">This</name></type></param>,<param><type><name pos:line="19422" pos:column="47">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19423" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19425" pos:column="1">#<cpp:directive pos:line="19425" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19425" pos:column="9">IEnumDebugBoundBreakpoints2_Reset</name><parameter_list pos:line="19425" pos:column="42">(<param><type><name pos:line="19425" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19426" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19428" pos:column="1">#<cpp:directive pos:line="19428" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19428" pos:column="9">IEnumDebugBoundBreakpoints2_Clone</name><parameter_list pos:line="19428" pos:column="42">(<param><type><name pos:line="19428" pos:column="43">This</name></type></param>,<param><type><name pos:line="19428" pos:column="48">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19429" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19431" pos:column="1">#<cpp:directive pos:line="19431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19431" pos:column="9">IEnumDebugBoundBreakpoints2_GetCount</name><parameter_list pos:line="19431" pos:column="45">(<param><type><name pos:line="19431" pos:column="46">This</name></type></param>,<param><type><name pos:line="19431" pos:column="51">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19432" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19434" pos:column="1">#<cpp:directive pos:line="19434" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19434" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19437" pos:column="1">#<cpp:directive pos:line="19437" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19437" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19442" pos:column="1">#<cpp:directive pos:line="19442" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19442" pos:column="9">/* __IEnumDebugBoundBreakpoints2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19445" pos:column="1">#<cpp:directive pos:line="19445" pos:column="2">ifndef</cpp:directive> <name pos:line="19445" pos:column="9">__IEnumDebugPendingBreakpoints2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19446" pos:column="1">#<cpp:directive pos:line="19446" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19446" pos:column="9">__IEnumDebugPendingBreakpoints2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19448" pos:column="1">/* interface IEnumDebugPendingBreakpoints2 */</comment>
<comment type="block" pos:line="19449" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19452" pos:column="1">EXTERN_C</name> <specifier pos:line="19452" pos:column="10">const</specifier> <name pos:line="19452" pos:column="16">IID</name></type> <name pos:line="19452" pos:column="20">IID_IEnumDebugPendingBreakpoints2</name></decl>;</decl_stmt>

<cpp:if pos:line="19454" pos:column="1">#<cpp:directive pos:line="19454" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19454" pos:column="5">defined</name><argument_list pos:line="19454" pos:column="12">(<argument><expr><name pos:line="19454" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19454" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19454" pos:column="29">!</op:operator><call><name pos:line="19454" pos:column="30">defined</name><argument_list pos:line="19454" pos:column="37">(<argument><expr><name pos:line="19454" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19456" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19456" pos:column="19">(<argument pos:line="19456" pos:column="20">"70d2dc1e-4dcc-4786-a072-9a3b600c216b"</argument>)</argument_list></macro>
    <label><name pos:line="19457" pos:column="5">IEnumDebugPendingBreakpoints2</name> :</label> <expr_stmt><expr pos:line="19457" pos:column="37">public <name pos:line="19457" pos:column="44">IUnknown</name>
    <block pos:line="19458" pos:column="5">{
    <expr pos:line="19459" pos:column="5">public<op:operator pos:line="19459" pos:column="11">:</op:operator>
        virtual <name pos:line="19460" pos:column="17">HRESULT</name> <name pos:line="19460" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19460" pos:column="43">Next</name><argument_list pos:line="19460" pos:column="47">( 
            <comment type="block" pos:line="19461" pos:column="13">/* [in] */</comment> <argument pos:line="19461" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19462" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19462" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugPendingBreakpoint2 **rgelt</argument>,
            <comment type="block" pos:line="19463" pos:column="13">/* [out][in] */</comment> <argument pos:line="19463" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19463" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19463" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19465" pos:column="9">virtual <name pos:line="19465" pos:column="17">HRESULT</name> <name pos:line="19465" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19465" pos:column="43">Skip</name><argument_list pos:line="19465" pos:column="47">( 
            <comment type="block" pos:line="19466" pos:column="13">/* [in] */</comment> <argument pos:line="19466" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19466" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19466" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19468" pos:column="9">virtual <name pos:line="19468" pos:column="17">HRESULT</name> <name pos:line="19468" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19468" pos:column="43">Reset</name><argument_list pos:line="19468" pos:column="48">( <argument><expr><name pos:line="19468" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19468" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19468" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19470" pos:column="9">virtual <name pos:line="19470" pos:column="17">HRESULT</name> <name pos:line="19470" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19470" pos:column="43">Clone</name><argument_list pos:line="19470" pos:column="48">( 
            <comment type="block" pos:line="19471" pos:column="13">/* [out] */</comment> <argument pos:line="19471" pos:column="25">__RPC__deref_out_opt IEnumDebugPendingBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19471" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="19471" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="19473" pos:column="9">virtual <name pos:line="19473" pos:column="17">HRESULT</name> <name pos:line="19473" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19473" pos:column="43">GetCount</name><argument_list pos:line="19473" pos:column="51">( 
            <comment type="block" pos:line="19474" pos:column="13">/* [out] */</comment> <argument pos:line="19474" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19474" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19474" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19478" pos:column="1">#<cpp:directive pos:line="19478" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19478" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19480" pos:column="5">typedef <type><struct pos:line="19480" pos:column="13">struct <name pos:line="19480" pos:column="20">IEnumDebugPendingBreakpoints2Vtbl</name>
    <block pos:line="19481" pos:column="5">{<public type="default" pos:line="19481" pos:column="6">
        <function_decl><type><name pos:line="19482" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19484" pos:column="9">HRESULT</name></type> ( <name pos:line="19484" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19484" pos:column="37">*</type:modifier><name pos:line="19484" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19484" pos:column="54">( 
            <param><decl><type><name pos:line="19485" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19485" pos:column="43">*</type:modifier></type> <name pos:line="19485" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="19486" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19486" pos:column="24">__RPC__in</name> <name pos:line="19486" pos:column="34">REFIID</name></type> <name pos:line="19486" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19487" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19488" pos:column="13">__RPC__deref_out</name>  <name pos:line="19488" pos:column="31">void</name> <type:modifier pos:line="19488" pos:column="36">*</type:modifier><type:modifier pos:line="19488" pos:column="37">*</type:modifier></type><name pos:line="19488" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19490" pos:column="9">ULONG</name></type> ( <name pos:line="19490" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19490" pos:column="35">*</type:modifier><name pos:line="19490" pos:column="36">AddRef</name> )<parameter_list pos:line="19490" pos:column="44">( 
            <param><decl><type><name pos:line="19491" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19491" pos:column="43">*</type:modifier></type> <name pos:line="19491" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19493" pos:column="9">ULONG</name></type> ( <name pos:line="19493" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19493" pos:column="35">*</type:modifier><name pos:line="19493" pos:column="36">Release</name> )<parameter_list pos:line="19493" pos:column="45">( 
            <param><decl><type><name pos:line="19494" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19494" pos:column="43">*</type:modifier></type> <name pos:line="19494" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19496" pos:column="9">HRESULT</name> <argument_list pos:line="19496" pos:column="17">( <argument pos:line="19496" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19496" pos:column="44">(</op:operator> 
            <name pos:line="19497" pos:column="13">IEnumDebugPendingBreakpoints2</name> <op:operator pos:line="19497" pos:column="43">*</op:operator> <name pos:line="19497" pos:column="45">This</name><op:operator pos:line="19497" pos:column="49">,</op:operator>
            <comment type="block" pos:line="19498" pos:column="13">/* [in] */</comment> <name pos:line="19498" pos:column="24">ULONG</name> <name pos:line="19498" pos:column="30">celt</name><op:operator pos:line="19498" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19499" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19499" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19499" pos:column="67">(<argument pos:line="19499" pos:column="68">celt</argument>, <argument pos:line="19499" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19499" pos:column="89">IDebugPendingBreakpoint2</name> <op:operator pos:line="19499" pos:column="114">*</op:operator><op:operator pos:line="19499" pos:column="115">*</op:operator><name pos:line="19499" pos:column="116">rgelt</name><op:operator pos:line="19499" pos:column="121">,</op:operator>
            <comment type="block" pos:line="19500" pos:column="13">/* [out][in] */</comment> <name pos:line="19500" pos:column="29">__RPC__inout</name> <name pos:line="19500" pos:column="42">ULONG</name> <op:operator pos:line="19500" pos:column="48">*</op:operator><name pos:line="19500" pos:column="49">pceltFetched</name><op:operator pos:line="19500" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19502" pos:column="9">HRESULT</name></type> ( <name pos:line="19502" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19502" pos:column="37">*</type:modifier><name pos:line="19502" pos:column="38">Skip</name> )<parameter_list pos:line="19502" pos:column="44">( 
            <param><decl><type><name pos:line="19503" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19503" pos:column="43">*</type:modifier></type> <name pos:line="19503" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="19504" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19504" pos:column="24">ULONG</name></type> <name pos:line="19504" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19506" pos:column="9">HRESULT</name></type> ( <name pos:line="19506" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19506" pos:column="37">*</type:modifier><name pos:line="19506" pos:column="38">Reset</name> )<parameter_list pos:line="19506" pos:column="45">( 
            <param><decl><type><name pos:line="19507" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19507" pos:column="43">*</type:modifier></type> <name pos:line="19507" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19509" pos:column="9">HRESULT</name></type> ( <name pos:line="19509" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19509" pos:column="37">*</type:modifier><name pos:line="19509" pos:column="38">Clone</name> )<parameter_list pos:line="19509" pos:column="45">( 
            <param><decl><type><name pos:line="19510" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19510" pos:column="43">*</type:modifier></type> <name pos:line="19510" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="19511" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19511" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19511" pos:column="46">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19511" pos:column="76">*</type:modifier><type:modifier pos:line="19511" pos:column="77">*</type:modifier></type><name pos:line="19511" pos:column="78">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19513" pos:column="9">HRESULT</name></type> ( <name pos:line="19513" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19513" pos:column="37">*</type:modifier><name pos:line="19513" pos:column="38">GetCount</name> )<parameter_list pos:line="19513" pos:column="48">( 
            <param><decl><type><name pos:line="19514" pos:column="13">IEnumDebugPendingBreakpoints2</name> <type:modifier pos:line="19514" pos:column="43">*</type:modifier></type> <name pos:line="19514" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="19515" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19515" pos:column="25">__RPC__out</name> <name pos:line="19515" pos:column="36">ULONG</name> <type:modifier pos:line="19515" pos:column="42">*</type:modifier></type><name pos:line="19515" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19517" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19518" pos:column="7">IEnumDebugPendingBreakpoints2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19520" pos:column="5">interface</name></type> <name pos:line="19520" pos:column="15">IEnumDebugPendingBreakpoints2</name>
    <argument_list pos:line="19521" pos:column="5">{
        <argument><expr><name pos:line="19522" pos:column="9">CONST_VTBL</name> struct <name pos:line="19522" pos:column="27">IEnumDebugPendingBreakpoints2Vtbl</name> <op:operator pos:line="19522" pos:column="61">*</op:operator><name pos:line="19522" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19527" pos:column="1">#<cpp:directive pos:line="19527" pos:column="2">ifdef</cpp:directive> <name pos:line="19527" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19530" pos:column="1">#<cpp:directive pos:line="19530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19530" pos:column="9">IEnumDebugPendingBreakpoints2_QueryInterface</name><parameter_list pos:line="19530" pos:column="53">(<param><type><name pos:line="19530" pos:column="54">This</name></type></param>,<param><type><name pos:line="19530" pos:column="59">riid</name></type></param>,<param><type><name pos:line="19530" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19531" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19533" pos:column="1">#<cpp:directive pos:line="19533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19533" pos:column="9">IEnumDebugPendingBreakpoints2_AddRef</name><parameter_list pos:line="19533" pos:column="45">(<param><type><name pos:line="19533" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19534" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19536" pos:column="1">#<cpp:directive pos:line="19536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19536" pos:column="9">IEnumDebugPendingBreakpoints2_Release</name><parameter_list pos:line="19536" pos:column="46">(<param><type><name pos:line="19536" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19537" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19540" pos:column="1">#<cpp:directive pos:line="19540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19540" pos:column="9">IEnumDebugPendingBreakpoints2_Next</name><parameter_list pos:line="19540" pos:column="43">(<param><type><name pos:line="19540" pos:column="44">This</name></type></param>,<param><type><name pos:line="19540" pos:column="49">celt</name></type></param>,<param><type><name pos:line="19540" pos:column="54">rgelt</name></type></param>,<param><type><name pos:line="19540" pos:column="60">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19541" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19543" pos:column="1">#<cpp:directive pos:line="19543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19543" pos:column="9">IEnumDebugPendingBreakpoints2_Skip</name><parameter_list pos:line="19543" pos:column="43">(<param><type><name pos:line="19543" pos:column="44">This</name></type></param>,<param><type><name pos:line="19543" pos:column="49">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19544" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19546" pos:column="1">#<cpp:directive pos:line="19546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19546" pos:column="9">IEnumDebugPendingBreakpoints2_Reset</name><parameter_list pos:line="19546" pos:column="44">(<param><type><name pos:line="19546" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19547" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19549" pos:column="1">#<cpp:directive pos:line="19549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19549" pos:column="9">IEnumDebugPendingBreakpoints2_Clone</name><parameter_list pos:line="19549" pos:column="44">(<param><type><name pos:line="19549" pos:column="45">This</name></type></param>,<param><type><name pos:line="19549" pos:column="50">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19550" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19552" pos:column="1">#<cpp:directive pos:line="19552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19552" pos:column="9">IEnumDebugPendingBreakpoints2_GetCount</name><parameter_list pos:line="19552" pos:column="47">(<param><type><name pos:line="19552" pos:column="48">This</name></type></param>,<param><type><name pos:line="19552" pos:column="53">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19553" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19555" pos:column="1">#<cpp:directive pos:line="19555" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19555" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19558" pos:column="1">#<cpp:directive pos:line="19558" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19558" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19563" pos:column="1">#<cpp:directive pos:line="19563" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19563" pos:column="9">/* __IEnumDebugPendingBreakpoints2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19566" pos:column="1">#<cpp:directive pos:line="19566" pos:column="2">ifndef</cpp:directive> <name pos:line="19566" pos:column="9">__IEnumDebugErrorBreakpoints2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19567" pos:column="1">#<cpp:directive pos:line="19567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19567" pos:column="9">__IEnumDebugErrorBreakpoints2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19569" pos:column="1">/* interface IEnumDebugErrorBreakpoints2 */</comment>
<comment type="block" pos:line="19570" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19573" pos:column="1">EXTERN_C</name> <specifier pos:line="19573" pos:column="10">const</specifier> <name pos:line="19573" pos:column="16">IID</name></type> <name pos:line="19573" pos:column="20">IID_IEnumDebugErrorBreakpoints2</name></decl>;</decl_stmt>

<cpp:if pos:line="19575" pos:column="1">#<cpp:directive pos:line="19575" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19575" pos:column="5">defined</name><argument_list pos:line="19575" pos:column="12">(<argument><expr><name pos:line="19575" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19575" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19575" pos:column="29">!</op:operator><call><name pos:line="19575" pos:column="30">defined</name><argument_list pos:line="19575" pos:column="37">(<argument><expr><name pos:line="19575" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19577" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19577" pos:column="19">(<argument pos:line="19577" pos:column="20">"e158f5aa-31fe-491b-a9f6-cff934b03a01"</argument>)</argument_list></macro>
    <label><name pos:line="19578" pos:column="5">IEnumDebugErrorBreakpoints2</name> :</label> <expr_stmt><expr pos:line="19578" pos:column="35">public <name pos:line="19578" pos:column="42">IUnknown</name>
    <block pos:line="19579" pos:column="5">{
    <expr pos:line="19580" pos:column="5">public<op:operator pos:line="19580" pos:column="11">:</op:operator>
        virtual <name pos:line="19581" pos:column="17">HRESULT</name> <name pos:line="19581" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19581" pos:column="43">Next</name><argument_list pos:line="19581" pos:column="47">( 
            <comment type="block" pos:line="19582" pos:column="13">/* [in] */</comment> <argument pos:line="19582" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19583" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19583" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugErrorBreakpoint2 **rgelt</argument>,
            <comment type="block" pos:line="19584" pos:column="13">/* [out][in] */</comment> <argument pos:line="19584" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19584" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19584" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19586" pos:column="9">virtual <name pos:line="19586" pos:column="17">HRESULT</name> <name pos:line="19586" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19586" pos:column="43">Skip</name><argument_list pos:line="19586" pos:column="47">( 
            <comment type="block" pos:line="19587" pos:column="13">/* [in] */</comment> <argument pos:line="19587" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19587" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19587" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19589" pos:column="9">virtual <name pos:line="19589" pos:column="17">HRESULT</name> <name pos:line="19589" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19589" pos:column="43">Reset</name><argument_list pos:line="19589" pos:column="48">( <argument><expr><name pos:line="19589" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19589" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19589" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19591" pos:column="9">virtual <name pos:line="19591" pos:column="17">HRESULT</name> <name pos:line="19591" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19591" pos:column="43">Clone</name><argument_list pos:line="19591" pos:column="48">( 
            <comment type="block" pos:line="19592" pos:column="13">/* [out] */</comment> <argument pos:line="19592" pos:column="25">__RPC__deref_out_opt IEnumDebugErrorBreakpoints2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19592" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="19592" pos:column="86">0</lit:literal></expr>;
        
        <expr pos:line="19594" pos:column="9">virtual <name pos:line="19594" pos:column="17">HRESULT</name> <name pos:line="19594" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19594" pos:column="43">GetCount</name><argument_list pos:line="19594" pos:column="51">( 
            <comment type="block" pos:line="19595" pos:column="13">/* [out] */</comment> <argument pos:line="19595" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19595" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19595" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19599" pos:column="1">#<cpp:directive pos:line="19599" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19599" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19601" pos:column="5">typedef <type><struct pos:line="19601" pos:column="13">struct <name pos:line="19601" pos:column="20">IEnumDebugErrorBreakpoints2Vtbl</name>
    <block pos:line="19602" pos:column="5">{<public type="default" pos:line="19602" pos:column="6">
        <function_decl><type><name pos:line="19603" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19605" pos:column="9">HRESULT</name></type> ( <name pos:line="19605" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19605" pos:column="37">*</type:modifier><name pos:line="19605" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19605" pos:column="54">( 
            <param><decl><type><name pos:line="19606" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19606" pos:column="41">*</type:modifier></type> <name pos:line="19606" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19607" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19607" pos:column="24">__RPC__in</name> <name pos:line="19607" pos:column="34">REFIID</name></type> <name pos:line="19607" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19608" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19609" pos:column="13">__RPC__deref_out</name>  <name pos:line="19609" pos:column="31">void</name> <type:modifier pos:line="19609" pos:column="36">*</type:modifier><type:modifier pos:line="19609" pos:column="37">*</type:modifier></type><name pos:line="19609" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19611" pos:column="9">ULONG</name></type> ( <name pos:line="19611" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19611" pos:column="35">*</type:modifier><name pos:line="19611" pos:column="36">AddRef</name> )<parameter_list pos:line="19611" pos:column="44">( 
            <param><decl><type><name pos:line="19612" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19612" pos:column="41">*</type:modifier></type> <name pos:line="19612" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19614" pos:column="9">ULONG</name></type> ( <name pos:line="19614" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19614" pos:column="35">*</type:modifier><name pos:line="19614" pos:column="36">Release</name> )<parameter_list pos:line="19614" pos:column="45">( 
            <param><decl><type><name pos:line="19615" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19615" pos:column="41">*</type:modifier></type> <name pos:line="19615" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19617" pos:column="9">HRESULT</name> <argument_list pos:line="19617" pos:column="17">( <argument pos:line="19617" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19617" pos:column="44">(</op:operator> 
            <name pos:line="19618" pos:column="13">IEnumDebugErrorBreakpoints2</name> <op:operator pos:line="19618" pos:column="41">*</op:operator> <name pos:line="19618" pos:column="43">This</name><op:operator pos:line="19618" pos:column="47">,</op:operator>
            <comment type="block" pos:line="19619" pos:column="13">/* [in] */</comment> <name pos:line="19619" pos:column="24">ULONG</name> <name pos:line="19619" pos:column="30">celt</name><op:operator pos:line="19619" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19620" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19620" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19620" pos:column="67">(<argument pos:line="19620" pos:column="68">celt</argument>, <argument pos:line="19620" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19620" pos:column="89">IDebugErrorBreakpoint2</name> <op:operator pos:line="19620" pos:column="112">*</op:operator><op:operator pos:line="19620" pos:column="113">*</op:operator><name pos:line="19620" pos:column="114">rgelt</name><op:operator pos:line="19620" pos:column="119">,</op:operator>
            <comment type="block" pos:line="19621" pos:column="13">/* [out][in] */</comment> <name pos:line="19621" pos:column="29">__RPC__inout</name> <name pos:line="19621" pos:column="42">ULONG</name> <op:operator pos:line="19621" pos:column="48">*</op:operator><name pos:line="19621" pos:column="49">pceltFetched</name><op:operator pos:line="19621" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19623" pos:column="9">HRESULT</name></type> ( <name pos:line="19623" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19623" pos:column="37">*</type:modifier><name pos:line="19623" pos:column="38">Skip</name> )<parameter_list pos:line="19623" pos:column="44">( 
            <param><decl><type><name pos:line="19624" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19624" pos:column="41">*</type:modifier></type> <name pos:line="19624" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19625" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19625" pos:column="24">ULONG</name></type> <name pos:line="19625" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19627" pos:column="9">HRESULT</name></type> ( <name pos:line="19627" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19627" pos:column="37">*</type:modifier><name pos:line="19627" pos:column="38">Reset</name> )<parameter_list pos:line="19627" pos:column="45">( 
            <param><decl><type><name pos:line="19628" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19628" pos:column="41">*</type:modifier></type> <name pos:line="19628" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19630" pos:column="9">HRESULT</name></type> ( <name pos:line="19630" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19630" pos:column="37">*</type:modifier><name pos:line="19630" pos:column="38">Clone</name> )<parameter_list pos:line="19630" pos:column="45">( 
            <param><decl><type><name pos:line="19631" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19631" pos:column="41">*</type:modifier></type> <name pos:line="19631" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19632" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19632" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19632" pos:column="46">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19632" pos:column="74">*</type:modifier><type:modifier pos:line="19632" pos:column="75">*</type:modifier></type><name pos:line="19632" pos:column="76">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19634" pos:column="9">HRESULT</name></type> ( <name pos:line="19634" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19634" pos:column="37">*</type:modifier><name pos:line="19634" pos:column="38">GetCount</name> )<parameter_list pos:line="19634" pos:column="48">( 
            <param><decl><type><name pos:line="19635" pos:column="13">IEnumDebugErrorBreakpoints2</name> <type:modifier pos:line="19635" pos:column="41">*</type:modifier></type> <name pos:line="19635" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="19636" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19636" pos:column="25">__RPC__out</name> <name pos:line="19636" pos:column="36">ULONG</name> <type:modifier pos:line="19636" pos:column="42">*</type:modifier></type><name pos:line="19636" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19638" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19639" pos:column="7">IEnumDebugErrorBreakpoints2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19641" pos:column="5">interface</name></type> <name pos:line="19641" pos:column="15">IEnumDebugErrorBreakpoints2</name>
    <argument_list pos:line="19642" pos:column="5">{
        <argument><expr><name pos:line="19643" pos:column="9">CONST_VTBL</name> struct <name pos:line="19643" pos:column="27">IEnumDebugErrorBreakpoints2Vtbl</name> <op:operator pos:line="19643" pos:column="59">*</op:operator><name pos:line="19643" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19648" pos:column="1">#<cpp:directive pos:line="19648" pos:column="2">ifdef</cpp:directive> <name pos:line="19648" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19651" pos:column="1">#<cpp:directive pos:line="19651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19651" pos:column="9">IEnumDebugErrorBreakpoints2_QueryInterface</name><parameter_list pos:line="19651" pos:column="51">(<param><type><name pos:line="19651" pos:column="52">This</name></type></param>,<param><type><name pos:line="19651" pos:column="57">riid</name></type></param>,<param><type><name pos:line="19651" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19652" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19654" pos:column="1">#<cpp:directive pos:line="19654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19654" pos:column="9">IEnumDebugErrorBreakpoints2_AddRef</name><parameter_list pos:line="19654" pos:column="43">(<param><type><name pos:line="19654" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19655" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19657" pos:column="1">#<cpp:directive pos:line="19657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19657" pos:column="9">IEnumDebugErrorBreakpoints2_Release</name><parameter_list pos:line="19657" pos:column="44">(<param><type><name pos:line="19657" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19658" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19661" pos:column="1">#<cpp:directive pos:line="19661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19661" pos:column="9">IEnumDebugErrorBreakpoints2_Next</name><parameter_list pos:line="19661" pos:column="41">(<param><type><name pos:line="19661" pos:column="42">This</name></type></param>,<param><type><name pos:line="19661" pos:column="47">celt</name></type></param>,<param><type><name pos:line="19661" pos:column="52">rgelt</name></type></param>,<param><type><name pos:line="19661" pos:column="58">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19662" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19664" pos:column="1">#<cpp:directive pos:line="19664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19664" pos:column="9">IEnumDebugErrorBreakpoints2_Skip</name><parameter_list pos:line="19664" pos:column="41">(<param><type><name pos:line="19664" pos:column="42">This</name></type></param>,<param><type><name pos:line="19664" pos:column="47">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19665" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19667" pos:column="1">#<cpp:directive pos:line="19667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19667" pos:column="9">IEnumDebugErrorBreakpoints2_Reset</name><parameter_list pos:line="19667" pos:column="42">(<param><type><name pos:line="19667" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19668" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19670" pos:column="1">#<cpp:directive pos:line="19670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19670" pos:column="9">IEnumDebugErrorBreakpoints2_Clone</name><parameter_list pos:line="19670" pos:column="42">(<param><type><name pos:line="19670" pos:column="43">This</name></type></param>,<param><type><name pos:line="19670" pos:column="48">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19671" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19673" pos:column="1">#<cpp:directive pos:line="19673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19673" pos:column="9">IEnumDebugErrorBreakpoints2_GetCount</name><parameter_list pos:line="19673" pos:column="45">(<param><type><name pos:line="19673" pos:column="46">This</name></type></param>,<param><type><name pos:line="19673" pos:column="51">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19674" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19676" pos:column="1">#<cpp:directive pos:line="19676" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19676" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19679" pos:column="1">#<cpp:directive pos:line="19679" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19679" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19684" pos:column="1">#<cpp:directive pos:line="19684" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19684" pos:column="9">/* __IEnumDebugErrorBreakpoints2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19687" pos:column="1">#<cpp:directive pos:line="19687" pos:column="2">ifndef</cpp:directive> <name pos:line="19687" pos:column="9">__IEnumDebugMachines2__deprecated_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19688" pos:column="1">#<cpp:directive pos:line="19688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19688" pos:column="9">__IEnumDebugMachines2__deprecated_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19690" pos:column="1">/* interface IEnumDebugMachines2__deprecated */</comment>
<comment type="block" pos:line="19691" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19694" pos:column="1">EXTERN_C</name> <specifier pos:line="19694" pos:column="10">const</specifier> <name pos:line="19694" pos:column="16">IID</name></type> <name pos:line="19694" pos:column="20">IID_IEnumDebugMachines2__deprecated</name></decl>;</decl_stmt>

<cpp:if pos:line="19696" pos:column="1">#<cpp:directive pos:line="19696" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19696" pos:column="5">defined</name><argument_list pos:line="19696" pos:column="12">(<argument><expr><name pos:line="19696" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19696" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19696" pos:column="29">!</op:operator><call><name pos:line="19696" pos:column="30">defined</name><argument_list pos:line="19696" pos:column="37">(<argument><expr><name pos:line="19696" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19698" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19698" pos:column="19">(<argument pos:line="19698" pos:column="20">"61d986ec-1eac-46b6-90ff-402a008f15d1"</argument>)</argument_list></macro>
    <label><name pos:line="19699" pos:column="5">IEnumDebugMachines2__deprecated</name> :</label> <expr_stmt><expr pos:line="19699" pos:column="39">public <name pos:line="19699" pos:column="46">IUnknown</name>
    <block pos:line="19700" pos:column="5">{
    <expr pos:line="19701" pos:column="5">public<op:operator pos:line="19701" pos:column="11">:</op:operator>
        virtual <name pos:line="19702" pos:column="17">HRESULT</name> <name pos:line="19702" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19702" pos:column="43">Next</name><argument_list pos:line="19702" pos:column="47">( 
            <comment type="block" pos:line="19703" pos:column="13">/* [in] */</comment> <argument pos:line="19703" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19704" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19704" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugCoreServer2 **rgelt</argument>,
            <comment type="block" pos:line="19705" pos:column="13">/* [out][in] */</comment> <argument pos:line="19705" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19705" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19705" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19707" pos:column="9">virtual <name pos:line="19707" pos:column="17">HRESULT</name> <name pos:line="19707" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19707" pos:column="43">Skip</name><argument_list pos:line="19707" pos:column="47">( 
            <comment type="block" pos:line="19708" pos:column="13">/* [in] */</comment> <argument pos:line="19708" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19708" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19708" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19710" pos:column="9">virtual <name pos:line="19710" pos:column="17">HRESULT</name> <name pos:line="19710" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19710" pos:column="43">Reset</name><argument_list pos:line="19710" pos:column="48">( <argument><expr><name pos:line="19710" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19710" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19710" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19712" pos:column="9">virtual <name pos:line="19712" pos:column="17">HRESULT</name> <name pos:line="19712" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19712" pos:column="43">Clone</name><argument_list pos:line="19712" pos:column="48">( 
            <comment type="block" pos:line="19713" pos:column="13">/* [out] */</comment> <argument pos:line="19713" pos:column="25">__RPC__deref_out_opt IEnumDebugMachines2__deprecated **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19713" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="19713" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="19715" pos:column="9">virtual <name pos:line="19715" pos:column="17">HRESULT</name> <name pos:line="19715" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19715" pos:column="43">GetCount</name><argument_list pos:line="19715" pos:column="51">( 
            <comment type="block" pos:line="19716" pos:column="13">/* [out] */</comment> <argument pos:line="19716" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19716" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19716" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19720" pos:column="1">#<cpp:directive pos:line="19720" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19720" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19722" pos:column="5">typedef <type><struct pos:line="19722" pos:column="13">struct <name pos:line="19722" pos:column="20">IEnumDebugMachines2__deprecatedVtbl</name>
    <block pos:line="19723" pos:column="5">{<public type="default" pos:line="19723" pos:column="6">
        <function_decl><type><name pos:line="19724" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19726" pos:column="9">HRESULT</name></type> ( <name pos:line="19726" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19726" pos:column="37">*</type:modifier><name pos:line="19726" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19726" pos:column="54">( 
            <param><decl><type><name pos:line="19727" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19727" pos:column="45">*</type:modifier></type> <name pos:line="19727" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="19728" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19728" pos:column="24">__RPC__in</name> <name pos:line="19728" pos:column="34">REFIID</name></type> <name pos:line="19728" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19729" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19730" pos:column="13">__RPC__deref_out</name>  <name pos:line="19730" pos:column="31">void</name> <type:modifier pos:line="19730" pos:column="36">*</type:modifier><type:modifier pos:line="19730" pos:column="37">*</type:modifier></type><name pos:line="19730" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19732" pos:column="9">ULONG</name></type> ( <name pos:line="19732" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19732" pos:column="35">*</type:modifier><name pos:line="19732" pos:column="36">AddRef</name> )<parameter_list pos:line="19732" pos:column="44">( 
            <param><decl><type><name pos:line="19733" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19733" pos:column="45">*</type:modifier></type> <name pos:line="19733" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19735" pos:column="9">ULONG</name></type> ( <name pos:line="19735" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19735" pos:column="35">*</type:modifier><name pos:line="19735" pos:column="36">Release</name> )<parameter_list pos:line="19735" pos:column="45">( 
            <param><decl><type><name pos:line="19736" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19736" pos:column="45">*</type:modifier></type> <name pos:line="19736" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19738" pos:column="9">HRESULT</name> <argument_list pos:line="19738" pos:column="17">( <argument pos:line="19738" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19738" pos:column="44">(</op:operator> 
            <name pos:line="19739" pos:column="13">IEnumDebugMachines2__deprecated</name> <op:operator pos:line="19739" pos:column="45">*</op:operator> <name pos:line="19739" pos:column="47">This</name><op:operator pos:line="19739" pos:column="51">,</op:operator>
            <comment type="block" pos:line="19740" pos:column="13">/* [in] */</comment> <name pos:line="19740" pos:column="24">ULONG</name> <name pos:line="19740" pos:column="30">celt</name><op:operator pos:line="19740" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19741" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19741" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19741" pos:column="67">(<argument pos:line="19741" pos:column="68">celt</argument>, <argument pos:line="19741" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19741" pos:column="89">IDebugCoreServer2</name> <op:operator pos:line="19741" pos:column="107">*</op:operator><op:operator pos:line="19741" pos:column="108">*</op:operator><name pos:line="19741" pos:column="109">rgelt</name><op:operator pos:line="19741" pos:column="114">,</op:operator>
            <comment type="block" pos:line="19742" pos:column="13">/* [out][in] */</comment> <name pos:line="19742" pos:column="29">__RPC__inout</name> <name pos:line="19742" pos:column="42">ULONG</name> <op:operator pos:line="19742" pos:column="48">*</op:operator><name pos:line="19742" pos:column="49">pceltFetched</name><op:operator pos:line="19742" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19744" pos:column="9">HRESULT</name></type> ( <name pos:line="19744" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19744" pos:column="37">*</type:modifier><name pos:line="19744" pos:column="38">Skip</name> )<parameter_list pos:line="19744" pos:column="44">( 
            <param><decl><type><name pos:line="19745" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19745" pos:column="45">*</type:modifier></type> <name pos:line="19745" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="19746" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19746" pos:column="24">ULONG</name></type> <name pos:line="19746" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19748" pos:column="9">HRESULT</name></type> ( <name pos:line="19748" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19748" pos:column="37">*</type:modifier><name pos:line="19748" pos:column="38">Reset</name> )<parameter_list pos:line="19748" pos:column="45">( 
            <param><decl><type><name pos:line="19749" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19749" pos:column="45">*</type:modifier></type> <name pos:line="19749" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19751" pos:column="9">HRESULT</name></type> ( <name pos:line="19751" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19751" pos:column="37">*</type:modifier><name pos:line="19751" pos:column="38">Clone</name> )<parameter_list pos:line="19751" pos:column="45">( 
            <param><decl><type><name pos:line="19752" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19752" pos:column="45">*</type:modifier></type> <name pos:line="19752" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="19753" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19753" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19753" pos:column="46">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19753" pos:column="78">*</type:modifier><type:modifier pos:line="19753" pos:column="79">*</type:modifier></type><name pos:line="19753" pos:column="80">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19755" pos:column="9">HRESULT</name></type> ( <name pos:line="19755" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19755" pos:column="37">*</type:modifier><name pos:line="19755" pos:column="38">GetCount</name> )<parameter_list pos:line="19755" pos:column="48">( 
            <param><decl><type><name pos:line="19756" pos:column="13">IEnumDebugMachines2__deprecated</name> <type:modifier pos:line="19756" pos:column="45">*</type:modifier></type> <name pos:line="19756" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="19757" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19757" pos:column="25">__RPC__out</name> <name pos:line="19757" pos:column="36">ULONG</name> <type:modifier pos:line="19757" pos:column="42">*</type:modifier></type><name pos:line="19757" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19759" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19760" pos:column="7">IEnumDebugMachines2__deprecatedVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19762" pos:column="5">interface</name></type> <name pos:line="19762" pos:column="15">IEnumDebugMachines2__deprecated</name>
    <argument_list pos:line="19763" pos:column="5">{
        <argument><expr><name pos:line="19764" pos:column="9">CONST_VTBL</name> struct <name pos:line="19764" pos:column="27">IEnumDebugMachines2__deprecatedVtbl</name> <op:operator pos:line="19764" pos:column="63">*</op:operator><name pos:line="19764" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19769" pos:column="1">#<cpp:directive pos:line="19769" pos:column="2">ifdef</cpp:directive> <name pos:line="19769" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19772" pos:column="1">#<cpp:directive pos:line="19772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19772" pos:column="9">IEnumDebugMachines2__deprecated_QueryInterface</name><parameter_list pos:line="19772" pos:column="55">(<param><type><name pos:line="19772" pos:column="56">This</name></type></param>,<param><type><name pos:line="19772" pos:column="61">riid</name></type></param>,<param><type><name pos:line="19772" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19773" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19775" pos:column="1">#<cpp:directive pos:line="19775" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19775" pos:column="9">IEnumDebugMachines2__deprecated_AddRef</name><parameter_list pos:line="19775" pos:column="47">(<param><type><name pos:line="19775" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19776" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19778" pos:column="1">#<cpp:directive pos:line="19778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19778" pos:column="9">IEnumDebugMachines2__deprecated_Release</name><parameter_list pos:line="19778" pos:column="48">(<param><type><name pos:line="19778" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19779" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19782" pos:column="1">#<cpp:directive pos:line="19782" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19782" pos:column="9">IEnumDebugMachines2__deprecated_Next</name><parameter_list pos:line="19782" pos:column="45">(<param><type><name pos:line="19782" pos:column="46">This</name></type></param>,<param><type><name pos:line="19782" pos:column="51">celt</name></type></param>,<param><type><name pos:line="19782" pos:column="56">rgelt</name></type></param>,<param><type><name pos:line="19782" pos:column="62">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19783" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19785" pos:column="1">#<cpp:directive pos:line="19785" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19785" pos:column="9">IEnumDebugMachines2__deprecated_Skip</name><parameter_list pos:line="19785" pos:column="45">(<param><type><name pos:line="19785" pos:column="46">This</name></type></param>,<param><type><name pos:line="19785" pos:column="51">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19786" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19788" pos:column="1">#<cpp:directive pos:line="19788" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19788" pos:column="9">IEnumDebugMachines2__deprecated_Reset</name><parameter_list pos:line="19788" pos:column="46">(<param><type><name pos:line="19788" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19789" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19791" pos:column="1">#<cpp:directive pos:line="19791" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19791" pos:column="9">IEnumDebugMachines2__deprecated_Clone</name><parameter_list pos:line="19791" pos:column="46">(<param><type><name pos:line="19791" pos:column="47">This</name></type></param>,<param><type><name pos:line="19791" pos:column="52">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19792" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19794" pos:column="1">#<cpp:directive pos:line="19794" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19794" pos:column="9">IEnumDebugMachines2__deprecated_GetCount</name><parameter_list pos:line="19794" pos:column="49">(<param><type><name pos:line="19794" pos:column="50">This</name></type></param>,<param><type><name pos:line="19794" pos:column="55">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19795" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19797" pos:column="1">#<cpp:directive pos:line="19797" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19797" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19800" pos:column="1">#<cpp:directive pos:line="19800" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19800" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19805" pos:column="1">#<cpp:directive pos:line="19805" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19805" pos:column="9">/* __IEnumDebugMachines2__deprecated_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="19808" pos:column="1">/* interface __MIDL_itf_msdbg_0000_0140 */</comment>
<comment type="block" pos:line="19809" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="19811" pos:column="1">#<cpp:directive pos:line="19811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19811" pos:column="9">EnumMachines_V7</name></cpp:macro> <cpp:value pos:line="19811" pos:column="25">EnumMachines__deprecated</cpp:value></cpp:define>
<cpp:define pos:line="19812" pos:column="1">#<cpp:directive pos:line="19812" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19812" pos:column="9">IEnumDebugMachines2_V7</name></cpp:macro> <cpp:value pos:line="19812" pos:column="32">IEnumDebugMachines2__deprecated</cpp:value></cpp:define>
<cpp:define pos:line="19813" pos:column="1">#<cpp:directive pos:line="19813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19813" pos:column="9">IID_IEnumDebugMachines2_V7</name></cpp:macro> <cpp:value pos:line="19813" pos:column="36">IID_IEnumDebugMachines2__deprecated</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="19816" pos:column="1">extern</specifier> <name pos:line="19816" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="19816" pos:column="22">__MIDL_itf_msdbg_0000_0140_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="19817" pos:column="1">extern</specifier> <name pos:line="19817" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="19817" pos:column="22">__MIDL_itf_msdbg_0000_0140_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="19819" pos:column="1">#<cpp:directive pos:line="19819" pos:column="2">ifndef</cpp:directive> <name pos:line="19819" pos:column="9">__IEnumDebugExceptionInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19820" pos:column="1">#<cpp:directive pos:line="19820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19820" pos:column="9">__IEnumDebugExceptionInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19822" pos:column="1">/* interface IEnumDebugExceptionInfo2 */</comment>
<comment type="block" pos:line="19823" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19826" pos:column="1">EXTERN_C</name> <specifier pos:line="19826" pos:column="10">const</specifier> <name pos:line="19826" pos:column="16">IID</name></type> <name pos:line="19826" pos:column="20">IID_IEnumDebugExceptionInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="19828" pos:column="1">#<cpp:directive pos:line="19828" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19828" pos:column="5">defined</name><argument_list pos:line="19828" pos:column="12">(<argument><expr><name pos:line="19828" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19828" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19828" pos:column="29">!</op:operator><call><name pos:line="19828" pos:column="30">defined</name><argument_list pos:line="19828" pos:column="37">(<argument><expr><name pos:line="19828" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19830" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19830" pos:column="19">(<argument pos:line="19830" pos:column="20">"8e4bbd34-a2f4-41ef-87b5-c563b4ad6ee7"</argument>)</argument_list></macro>
    <label><name pos:line="19831" pos:column="5">IEnumDebugExceptionInfo2</name> :</label> <expr_stmt><expr pos:line="19831" pos:column="32">public <name pos:line="19831" pos:column="39">IUnknown</name>
    <block pos:line="19832" pos:column="5">{
    <expr pos:line="19833" pos:column="5">public<op:operator pos:line="19833" pos:column="11">:</op:operator>
        virtual <name pos:line="19834" pos:column="17">HRESULT</name> <name pos:line="19834" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19834" pos:column="43">Next</name><argument_list pos:line="19834" pos:column="47">( 
            <comment type="block" pos:line="19835" pos:column="13">/* [in] */</comment> <argument pos:line="19835" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19836" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19836" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) EXCEPTION_INFO *rgelt</argument>,
            <comment type="block" pos:line="19837" pos:column="13">/* [out][in] */</comment> <argument pos:line="19837" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19837" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19837" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19839" pos:column="9">virtual <name pos:line="19839" pos:column="17">HRESULT</name> <name pos:line="19839" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19839" pos:column="43">Skip</name><argument_list pos:line="19839" pos:column="47">( 
            <comment type="block" pos:line="19840" pos:column="13">/* [in] */</comment> <argument pos:line="19840" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19840" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19840" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19842" pos:column="9">virtual <name pos:line="19842" pos:column="17">HRESULT</name> <name pos:line="19842" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19842" pos:column="43">Reset</name><argument_list pos:line="19842" pos:column="48">( <argument><expr><name pos:line="19842" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19842" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19842" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19844" pos:column="9">virtual <name pos:line="19844" pos:column="17">HRESULT</name> <name pos:line="19844" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19844" pos:column="43">Clone</name><argument_list pos:line="19844" pos:column="48">( 
            <comment type="block" pos:line="19845" pos:column="13">/* [out] */</comment> <argument pos:line="19845" pos:column="25">__RPC__deref_out_opt IEnumDebugExceptionInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19845" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="19845" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="19847" pos:column="9">virtual <name pos:line="19847" pos:column="17">HRESULT</name> <name pos:line="19847" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19847" pos:column="43">GetCount</name><argument_list pos:line="19847" pos:column="51">( 
            <comment type="block" pos:line="19848" pos:column="13">/* [out] */</comment> <argument pos:line="19848" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19848" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19848" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19852" pos:column="1">#<cpp:directive pos:line="19852" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19852" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19854" pos:column="5">typedef <type><struct pos:line="19854" pos:column="13">struct <name pos:line="19854" pos:column="20">IEnumDebugExceptionInfo2Vtbl</name>
    <block pos:line="19855" pos:column="5">{<public type="default" pos:line="19855" pos:column="6">
        <function_decl><type><name pos:line="19856" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19858" pos:column="9">HRESULT</name></type> ( <name pos:line="19858" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19858" pos:column="37">*</type:modifier><name pos:line="19858" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19858" pos:column="54">( 
            <param><decl><type><name pos:line="19859" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19859" pos:column="38">*</type:modifier></type> <name pos:line="19859" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="19860" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19860" pos:column="24">__RPC__in</name> <name pos:line="19860" pos:column="34">REFIID</name></type> <name pos:line="19860" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19861" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19862" pos:column="13">__RPC__deref_out</name>  <name pos:line="19862" pos:column="31">void</name> <type:modifier pos:line="19862" pos:column="36">*</type:modifier><type:modifier pos:line="19862" pos:column="37">*</type:modifier></type><name pos:line="19862" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19864" pos:column="9">ULONG</name></type> ( <name pos:line="19864" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19864" pos:column="35">*</type:modifier><name pos:line="19864" pos:column="36">AddRef</name> )<parameter_list pos:line="19864" pos:column="44">( 
            <param><decl><type><name pos:line="19865" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19865" pos:column="38">*</type:modifier></type> <name pos:line="19865" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19867" pos:column="9">ULONG</name></type> ( <name pos:line="19867" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19867" pos:column="35">*</type:modifier><name pos:line="19867" pos:column="36">Release</name> )<parameter_list pos:line="19867" pos:column="45">( 
            <param><decl><type><name pos:line="19868" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19868" pos:column="38">*</type:modifier></type> <name pos:line="19868" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19870" pos:column="9">HRESULT</name> <argument_list pos:line="19870" pos:column="17">( <argument pos:line="19870" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19870" pos:column="44">(</op:operator> 
            <name pos:line="19871" pos:column="13">IEnumDebugExceptionInfo2</name> <op:operator pos:line="19871" pos:column="38">*</op:operator> <name pos:line="19871" pos:column="40">This</name><op:operator pos:line="19871" pos:column="44">,</op:operator>
            <comment type="block" pos:line="19872" pos:column="13">/* [in] */</comment> <name pos:line="19872" pos:column="24">ULONG</name> <name pos:line="19872" pos:column="30">celt</name><op:operator pos:line="19872" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19873" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19873" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19873" pos:column="67">(<argument pos:line="19873" pos:column="68">celt</argument>, <argument pos:line="19873" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19873" pos:column="89">EXCEPTION_INFO</name> <op:operator pos:line="19873" pos:column="104">*</op:operator><name pos:line="19873" pos:column="105">rgelt</name><op:operator pos:line="19873" pos:column="110">,</op:operator>
            <comment type="block" pos:line="19874" pos:column="13">/* [out][in] */</comment> <name pos:line="19874" pos:column="29">__RPC__inout</name> <name pos:line="19874" pos:column="42">ULONG</name> <op:operator pos:line="19874" pos:column="48">*</op:operator><name pos:line="19874" pos:column="49">pceltFetched</name><op:operator pos:line="19874" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19876" pos:column="9">HRESULT</name></type> ( <name pos:line="19876" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19876" pos:column="37">*</type:modifier><name pos:line="19876" pos:column="38">Skip</name> )<parameter_list pos:line="19876" pos:column="44">( 
            <param><decl><type><name pos:line="19877" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19877" pos:column="38">*</type:modifier></type> <name pos:line="19877" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="19878" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19878" pos:column="24">ULONG</name></type> <name pos:line="19878" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19880" pos:column="9">HRESULT</name></type> ( <name pos:line="19880" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19880" pos:column="37">*</type:modifier><name pos:line="19880" pos:column="38">Reset</name> )<parameter_list pos:line="19880" pos:column="45">( 
            <param><decl><type><name pos:line="19881" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19881" pos:column="38">*</type:modifier></type> <name pos:line="19881" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19883" pos:column="9">HRESULT</name></type> ( <name pos:line="19883" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19883" pos:column="37">*</type:modifier><name pos:line="19883" pos:column="38">Clone</name> )<parameter_list pos:line="19883" pos:column="45">( 
            <param><decl><type><name pos:line="19884" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19884" pos:column="38">*</type:modifier></type> <name pos:line="19884" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="19885" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19885" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="19885" pos:column="46">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19885" pos:column="71">*</type:modifier><type:modifier pos:line="19885" pos:column="72">*</type:modifier></type><name pos:line="19885" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19887" pos:column="9">HRESULT</name></type> ( <name pos:line="19887" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19887" pos:column="37">*</type:modifier><name pos:line="19887" pos:column="38">GetCount</name> )<parameter_list pos:line="19887" pos:column="48">( 
            <param><decl><type><name pos:line="19888" pos:column="13">IEnumDebugExceptionInfo2</name> <type:modifier pos:line="19888" pos:column="38">*</type:modifier></type> <name pos:line="19888" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="19889" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="19889" pos:column="25">__RPC__out</name> <name pos:line="19889" pos:column="36">ULONG</name> <type:modifier pos:line="19889" pos:column="42">*</type:modifier></type><name pos:line="19889" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19891" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="19892" pos:column="7">IEnumDebugExceptionInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="19894" pos:column="5">interface</name></type> <name pos:line="19894" pos:column="15">IEnumDebugExceptionInfo2</name>
    <argument_list pos:line="19895" pos:column="5">{
        <argument><expr><name pos:line="19896" pos:column="9">CONST_VTBL</name> struct <name pos:line="19896" pos:column="27">IEnumDebugExceptionInfo2Vtbl</name> <op:operator pos:line="19896" pos:column="56">*</op:operator><name pos:line="19896" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="19901" pos:column="1">#<cpp:directive pos:line="19901" pos:column="2">ifdef</cpp:directive> <name pos:line="19901" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="19904" pos:column="1">#<cpp:directive pos:line="19904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19904" pos:column="9">IEnumDebugExceptionInfo2_QueryInterface</name><parameter_list pos:line="19904" pos:column="48">(<param><type><name pos:line="19904" pos:column="49">This</name></type></param>,<param><type><name pos:line="19904" pos:column="54">riid</name></type></param>,<param><type><name pos:line="19904" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19905" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="19907" pos:column="1">#<cpp:directive pos:line="19907" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19907" pos:column="9">IEnumDebugExceptionInfo2_AddRef</name><parameter_list pos:line="19907" pos:column="40">(<param><type><name pos:line="19907" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19908" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19910" pos:column="1">#<cpp:directive pos:line="19910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19910" pos:column="9">IEnumDebugExceptionInfo2_Release</name><parameter_list pos:line="19910" pos:column="41">(<param><type><name pos:line="19910" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19911" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="19914" pos:column="1">#<cpp:directive pos:line="19914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19914" pos:column="9">IEnumDebugExceptionInfo2_Next</name><parameter_list pos:line="19914" pos:column="38">(<param><type><name pos:line="19914" pos:column="39">This</name></type></param>,<param><type><name pos:line="19914" pos:column="44">celt</name></type></param>,<param><type><name pos:line="19914" pos:column="49">rgelt</name></type></param>,<param><type><name pos:line="19914" pos:column="55">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19915" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="19917" pos:column="1">#<cpp:directive pos:line="19917" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19917" pos:column="9">IEnumDebugExceptionInfo2_Skip</name><parameter_list pos:line="19917" pos:column="38">(<param><type><name pos:line="19917" pos:column="39">This</name></type></param>,<param><type><name pos:line="19917" pos:column="44">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19918" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="19920" pos:column="1">#<cpp:directive pos:line="19920" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19920" pos:column="9">IEnumDebugExceptionInfo2_Reset</name><parameter_list pos:line="19920" pos:column="39">(<param><type><name pos:line="19920" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19921" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="19923" pos:column="1">#<cpp:directive pos:line="19923" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19923" pos:column="9">IEnumDebugExceptionInfo2_Clone</name><parameter_list pos:line="19923" pos:column="39">(<param><type><name pos:line="19923" pos:column="40">This</name></type></param>,<param><type><name pos:line="19923" pos:column="45">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19924" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="19926" pos:column="1">#<cpp:directive pos:line="19926" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19926" pos:column="9">IEnumDebugExceptionInfo2_GetCount</name><parameter_list pos:line="19926" pos:column="42">(<param><type><name pos:line="19926" pos:column="43">This</name></type></param>,<param><type><name pos:line="19926" pos:column="48">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="19927" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="19929" pos:column="1">#<cpp:directive pos:line="19929" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="19929" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="19932" pos:column="1">#<cpp:directive pos:line="19932" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19932" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="19937" pos:column="1">#<cpp:directive pos:line="19937" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="19937" pos:column="9">/* __IEnumDebugExceptionInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="19940" pos:column="1">#<cpp:directive pos:line="19940" pos:column="2">ifndef</cpp:directive> <name pos:line="19940" pos:column="9">__IEnumDebugFrameInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="19941" pos:column="1">#<cpp:directive pos:line="19941" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19941" pos:column="9">__IEnumDebugFrameInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="19943" pos:column="1">/* interface IEnumDebugFrameInfo2 */</comment>
<comment type="block" pos:line="19944" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="19947" pos:column="1">EXTERN_C</name> <specifier pos:line="19947" pos:column="10">const</specifier> <name pos:line="19947" pos:column="16">IID</name></type> <name pos:line="19947" pos:column="20">IID_IEnumDebugFrameInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="19949" pos:column="1">#<cpp:directive pos:line="19949" pos:column="2">if</cpp:directive> <expr><call><name pos:line="19949" pos:column="5">defined</name><argument_list pos:line="19949" pos:column="12">(<argument><expr><name pos:line="19949" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="19949" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="19949" pos:column="29">!</op:operator><call><name pos:line="19949" pos:column="30">defined</name><argument_list pos:line="19949" pos:column="37">(<argument><expr><name pos:line="19949" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="19951" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="19951" pos:column="19">(<argument pos:line="19951" pos:column="20">"98bbba48-4c4d-4fff-8340-6097bec9c894"</argument>)</argument_list></macro>
    <label><name pos:line="19952" pos:column="5">IEnumDebugFrameInfo2</name> :</label> <expr_stmt><expr pos:line="19952" pos:column="28">public <name pos:line="19952" pos:column="35">IUnknown</name>
    <block pos:line="19953" pos:column="5">{
    <expr pos:line="19954" pos:column="5">public<op:operator pos:line="19954" pos:column="11">:</op:operator>
        virtual <name pos:line="19955" pos:column="17">HRESULT</name> <name pos:line="19955" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19955" pos:column="43">Next</name><argument_list pos:line="19955" pos:column="47">( 
            <comment type="block" pos:line="19956" pos:column="13">/* [in] */</comment> <argument pos:line="19956" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="19957" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="19957" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) FRAMEINFO *rgelt</argument>,
            <comment type="block" pos:line="19958" pos:column="13">/* [out][in] */</comment> <argument pos:line="19958" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="19958" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="19958" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="19960" pos:column="9">virtual <name pos:line="19960" pos:column="17">HRESULT</name> <name pos:line="19960" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19960" pos:column="43">Skip</name><argument_list pos:line="19960" pos:column="47">( 
            <comment type="block" pos:line="19961" pos:column="13">/* [in] */</comment> <argument pos:line="19961" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="19961" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="19961" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="19963" pos:column="9">virtual <name pos:line="19963" pos:column="17">HRESULT</name> <name pos:line="19963" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="19963" pos:column="43">Reset</name><argument_list pos:line="19963" pos:column="48">( <argument><expr><name pos:line="19963" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="19963" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="19963" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="19965" pos:column="9">virtual <name pos:line="19965" pos:column="17">HRESULT</name> <name pos:line="19965" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19965" pos:column="43">Clone</name><argument_list pos:line="19965" pos:column="48">( 
            <comment type="block" pos:line="19966" pos:column="13">/* [out] */</comment> <argument pos:line="19966" pos:column="25">__RPC__deref_out_opt IEnumDebugFrameInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="19966" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="19966" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="19968" pos:column="9">virtual <name pos:line="19968" pos:column="17">HRESULT</name> <name pos:line="19968" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="19968" pos:column="43">GetCount</name><argument_list pos:line="19968" pos:column="51">( 
            <comment type="block" pos:line="19969" pos:column="13">/* [out] */</comment> <argument pos:line="19969" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="19969" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="19969" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="19973" pos:column="1">#<cpp:directive pos:line="19973" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="19973" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="19975" pos:column="5">typedef <type><struct pos:line="19975" pos:column="13">struct <name pos:line="19975" pos:column="20">IEnumDebugFrameInfo2Vtbl</name>
    <block pos:line="19976" pos:column="5">{<public type="default" pos:line="19976" pos:column="6">
        <function_decl><type><name pos:line="19977" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="19979" pos:column="9">HRESULT</name></type> ( <name pos:line="19979" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19979" pos:column="37">*</type:modifier><name pos:line="19979" pos:column="38">QueryInterface</name> )<parameter_list pos:line="19979" pos:column="54">( 
            <param><decl><type><name pos:line="19980" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="19980" pos:column="34">*</type:modifier></type> <name pos:line="19980" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="19981" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19981" pos:column="24">__RPC__in</name> <name pos:line="19981" pos:column="34">REFIID</name></type> <name pos:line="19981" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="19982" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="19983" pos:column="13">__RPC__deref_out</name>  <name pos:line="19983" pos:column="31">void</name> <type:modifier pos:line="19983" pos:column="36">*</type:modifier><type:modifier pos:line="19983" pos:column="37">*</type:modifier></type><name pos:line="19983" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19985" pos:column="9">ULONG</name></type> ( <name pos:line="19985" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19985" pos:column="35">*</type:modifier><name pos:line="19985" pos:column="36">AddRef</name> )<parameter_list pos:line="19985" pos:column="44">( 
            <param><decl><type><name pos:line="19986" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="19986" pos:column="34">*</type:modifier></type> <name pos:line="19986" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="19988" pos:column="9">ULONG</name></type> ( <name pos:line="19988" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="19988" pos:column="35">*</type:modifier><name pos:line="19988" pos:column="36">Release</name> )<parameter_list pos:line="19988" pos:column="45">( 
            <param><decl><type><name pos:line="19989" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="19989" pos:column="34">*</type:modifier></type> <name pos:line="19989" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="19991" pos:column="9">HRESULT</name> <argument_list pos:line="19991" pos:column="17">( <argument pos:line="19991" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="19991" pos:column="44">(</op:operator> 
            <name pos:line="19992" pos:column="13">IEnumDebugFrameInfo2</name> <op:operator pos:line="19992" pos:column="34">*</op:operator> <name pos:line="19992" pos:column="36">This</name><op:operator pos:line="19992" pos:column="40">,</op:operator>
            <comment type="block" pos:line="19993" pos:column="13">/* [in] */</comment> <name pos:line="19993" pos:column="24">ULONG</name> <name pos:line="19993" pos:column="30">celt</name><op:operator pos:line="19993" pos:column="34">,</op:operator>
            <comment type="block" pos:line="19994" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="19994" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="19994" pos:column="67">(<argument pos:line="19994" pos:column="68">celt</argument>, <argument pos:line="19994" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="19994" pos:column="89">FRAMEINFO</name> <op:operator pos:line="19994" pos:column="99">*</op:operator><name pos:line="19994" pos:column="100">rgelt</name><op:operator pos:line="19994" pos:column="105">,</op:operator>
            <comment type="block" pos:line="19995" pos:column="13">/* [out][in] */</comment> <name pos:line="19995" pos:column="29">__RPC__inout</name> <name pos:line="19995" pos:column="42">ULONG</name> <op:operator pos:line="19995" pos:column="48">*</op:operator><name pos:line="19995" pos:column="49">pceltFetched</name><op:operator pos:line="19995" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="19997" pos:column="9">HRESULT</name></type> ( <name pos:line="19997" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="19997" pos:column="37">*</type:modifier><name pos:line="19997" pos:column="38">Skip</name> )<parameter_list pos:line="19997" pos:column="44">( 
            <param><decl><type><name pos:line="19998" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="19998" pos:column="34">*</type:modifier></type> <name pos:line="19998" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="19999" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="19999" pos:column="24">ULONG</name></type> <name pos:line="19999" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20001" pos:column="9">HRESULT</name></type> ( <name pos:line="20001" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20001" pos:column="37">*</type:modifier><name pos:line="20001" pos:column="38">Reset</name> )<parameter_list pos:line="20001" pos:column="45">( 
            <param><decl><type><name pos:line="20002" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="20002" pos:column="34">*</type:modifier></type> <name pos:line="20002" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20004" pos:column="9">HRESULT</name></type> ( <name pos:line="20004" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20004" pos:column="37">*</type:modifier><name pos:line="20004" pos:column="38">Clone</name> )<parameter_list pos:line="20004" pos:column="45">( 
            <param><decl><type><name pos:line="20005" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="20005" pos:column="34">*</type:modifier></type> <name pos:line="20005" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="20006" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20006" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20006" pos:column="46">IEnumDebugFrameInfo2</name> <type:modifier pos:line="20006" pos:column="67">*</type:modifier><type:modifier pos:line="20006" pos:column="68">*</type:modifier></type><name pos:line="20006" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20008" pos:column="9">HRESULT</name></type> ( <name pos:line="20008" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20008" pos:column="37">*</type:modifier><name pos:line="20008" pos:column="38">GetCount</name> )<parameter_list pos:line="20008" pos:column="48">( 
            <param><decl><type><name pos:line="20009" pos:column="13">IEnumDebugFrameInfo2</name> <type:modifier pos:line="20009" pos:column="34">*</type:modifier></type> <name pos:line="20009" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="20010" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20010" pos:column="25">__RPC__out</name> <name pos:line="20010" pos:column="36">ULONG</name> <type:modifier pos:line="20010" pos:column="42">*</type:modifier></type><name pos:line="20010" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20012" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20013" pos:column="7">IEnumDebugFrameInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20015" pos:column="5">interface</name></type> <name pos:line="20015" pos:column="15">IEnumDebugFrameInfo2</name>
    <argument_list pos:line="20016" pos:column="5">{
        <argument><expr><name pos:line="20017" pos:column="9">CONST_VTBL</name> struct <name pos:line="20017" pos:column="27">IEnumDebugFrameInfo2Vtbl</name> <op:operator pos:line="20017" pos:column="52">*</op:operator><name pos:line="20017" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20022" pos:column="1">#<cpp:directive pos:line="20022" pos:column="2">ifdef</cpp:directive> <name pos:line="20022" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20025" pos:column="1">#<cpp:directive pos:line="20025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20025" pos:column="9">IEnumDebugFrameInfo2_QueryInterface</name><parameter_list pos:line="20025" pos:column="44">(<param><type><name pos:line="20025" pos:column="45">This</name></type></param>,<param><type><name pos:line="20025" pos:column="50">riid</name></type></param>,<param><type><name pos:line="20025" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20026" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20028" pos:column="1">#<cpp:directive pos:line="20028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20028" pos:column="9">IEnumDebugFrameInfo2_AddRef</name><parameter_list pos:line="20028" pos:column="36">(<param><type><name pos:line="20028" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20029" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20031" pos:column="1">#<cpp:directive pos:line="20031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20031" pos:column="9">IEnumDebugFrameInfo2_Release</name><parameter_list pos:line="20031" pos:column="37">(<param><type><name pos:line="20031" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20032" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20035" pos:column="1">#<cpp:directive pos:line="20035" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20035" pos:column="9">IEnumDebugFrameInfo2_Next</name><parameter_list pos:line="20035" pos:column="34">(<param><type><name pos:line="20035" pos:column="35">This</name></type></param>,<param><type><name pos:line="20035" pos:column="40">celt</name></type></param>,<param><type><name pos:line="20035" pos:column="45">rgelt</name></type></param>,<param><type><name pos:line="20035" pos:column="51">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20036" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20038" pos:column="1">#<cpp:directive pos:line="20038" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20038" pos:column="9">IEnumDebugFrameInfo2_Skip</name><parameter_list pos:line="20038" pos:column="34">(<param><type><name pos:line="20038" pos:column="35">This</name></type></param>,<param><type><name pos:line="20038" pos:column="40">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20039" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20041" pos:column="1">#<cpp:directive pos:line="20041" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20041" pos:column="9">IEnumDebugFrameInfo2_Reset</name><parameter_list pos:line="20041" pos:column="35">(<param><type><name pos:line="20041" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20042" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20044" pos:column="1">#<cpp:directive pos:line="20044" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20044" pos:column="9">IEnumDebugFrameInfo2_Clone</name><parameter_list pos:line="20044" pos:column="35">(<param><type><name pos:line="20044" pos:column="36">This</name></type></param>,<param><type><name pos:line="20044" pos:column="41">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20045" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20047" pos:column="1">#<cpp:directive pos:line="20047" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20047" pos:column="9">IEnumDebugFrameInfo2_GetCount</name><parameter_list pos:line="20047" pos:column="38">(<param><type><name pos:line="20047" pos:column="39">This</name></type></param>,<param><type><name pos:line="20047" pos:column="44">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20048" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20050" pos:column="1">#<cpp:directive pos:line="20050" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20050" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20053" pos:column="1">#<cpp:directive pos:line="20053" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20053" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20058" pos:column="1">#<cpp:directive pos:line="20058" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20058" pos:column="9">/* __IEnumDebugFrameInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20061" pos:column="1">#<cpp:directive pos:line="20061" pos:column="2">ifndef</cpp:directive> <name pos:line="20061" pos:column="9">__IEnumDebugSessionFrameInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20062" pos:column="1">#<cpp:directive pos:line="20062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20062" pos:column="9">__IEnumDebugSessionFrameInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20064" pos:column="1">/* interface IEnumDebugSessionFrameInfo2 */</comment>
<comment type="block" pos:line="20065" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="20067" pos:column="1">typedef 
<type><enum pos:line="20068" pos:column="1">enum <name pos:line="20068" pos:column="6">enum_SESSION_CACHE_PRIORITY</name>
    <block pos:line="20069" pos:column="5">{	<decl><name pos:line="20069" pos:column="9">NORMAL_CACHE_PRIORITY</name>	<init pos:line="20069" pos:column="33">= <expr><lit:literal type="number" pos:line="20069" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="20069" pos:column="36">,</op:operator>
	<decl><name pos:line="20070" pos:column="9">HIGH_CACHE_PRIORITY</name>	<init pos:line="20070" pos:column="33">= <expr><lit:literal type="number" pos:line="20070" pos:column="35">1</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="20071" pos:column="9">SESSION_CACHE_PRIORITY</name>;</typedef>


<decl_stmt><decl><type><name pos:line="20074" pos:column="1">EXTERN_C</name> <specifier pos:line="20074" pos:column="10">const</specifier> <name pos:line="20074" pos:column="16">IID</name></type> <name pos:line="20074" pos:column="20">IID_IEnumDebugSessionFrameInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="20076" pos:column="1">#<cpp:directive pos:line="20076" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20076" pos:column="5">defined</name><argument_list pos:line="20076" pos:column="12">(<argument><expr><name pos:line="20076" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20076" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20076" pos:column="29">!</op:operator><call><name pos:line="20076" pos:column="30">defined</name><argument_list pos:line="20076" pos:column="37">(<argument><expr><name pos:line="20076" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20078" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20078" pos:column="19">(<argument pos:line="20078" pos:column="20">"ef7262c4-4a01-42a0-8658-932667b27555"</argument>)</argument_list></macro>
    <label><name pos:line="20079" pos:column="5">IEnumDebugSessionFrameInfo2</name> :</label> <expr_stmt><expr pos:line="20079" pos:column="35">public <name pos:line="20079" pos:column="42">IEnumDebugFrameInfo2</name>
    <block pos:line="20080" pos:column="5">{
    <expr pos:line="20081" pos:column="5">public<op:operator pos:line="20081" pos:column="11">:</op:operator>
        virtual <name pos:line="20082" pos:column="17">HRESULT</name> <name pos:line="20082" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20082" pos:column="43">SetCachePriority</name><argument_list pos:line="20082" pos:column="59">( 
            <comment type="block" pos:line="20083" pos:column="13">/* [in] */</comment> <argument pos:line="20083" pos:column="24">SESSION_CACHE_PRIORITY cachePriority</argument>)</argument_list></macro> <op:operator pos:line="20083" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="20083" pos:column="64">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20087" pos:column="1">#<cpp:directive pos:line="20087" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20087" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20089" pos:column="5">typedef <type><struct pos:line="20089" pos:column="13">struct <name pos:line="20089" pos:column="20">IEnumDebugSessionFrameInfo2Vtbl</name>
    <block pos:line="20090" pos:column="5">{<public type="default" pos:line="20090" pos:column="6">
        <function_decl><type><name pos:line="20091" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20093" pos:column="9">HRESULT</name></type> ( <name pos:line="20093" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20093" pos:column="37">*</type:modifier><name pos:line="20093" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20093" pos:column="54">( 
            <param><decl><type><name pos:line="20094" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20094" pos:column="41">*</type:modifier></type> <name pos:line="20094" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="20095" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20095" pos:column="24">__RPC__in</name> <name pos:line="20095" pos:column="34">REFIID</name></type> <name pos:line="20095" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20096" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20097" pos:column="13">__RPC__deref_out</name>  <name pos:line="20097" pos:column="31">void</name> <type:modifier pos:line="20097" pos:column="36">*</type:modifier><type:modifier pos:line="20097" pos:column="37">*</type:modifier></type><name pos:line="20097" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20099" pos:column="9">ULONG</name></type> ( <name pos:line="20099" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20099" pos:column="35">*</type:modifier><name pos:line="20099" pos:column="36">AddRef</name> )<parameter_list pos:line="20099" pos:column="44">( 
            <param><decl><type><name pos:line="20100" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20100" pos:column="41">*</type:modifier></type> <name pos:line="20100" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20102" pos:column="9">ULONG</name></type> ( <name pos:line="20102" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20102" pos:column="35">*</type:modifier><name pos:line="20102" pos:column="36">Release</name> )<parameter_list pos:line="20102" pos:column="45">( 
            <param><decl><type><name pos:line="20103" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20103" pos:column="41">*</type:modifier></type> <name pos:line="20103" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20105" pos:column="9">HRESULT</name> <argument_list pos:line="20105" pos:column="17">( <argument pos:line="20105" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20105" pos:column="44">(</op:operator> 
            <name pos:line="20106" pos:column="13">IEnumDebugSessionFrameInfo2</name> <op:operator pos:line="20106" pos:column="41">*</op:operator> <name pos:line="20106" pos:column="43">This</name><op:operator pos:line="20106" pos:column="47">,</op:operator>
            <comment type="block" pos:line="20107" pos:column="13">/* [in] */</comment> <name pos:line="20107" pos:column="24">ULONG</name> <name pos:line="20107" pos:column="30">celt</name><op:operator pos:line="20107" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20108" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20108" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20108" pos:column="67">(<argument pos:line="20108" pos:column="68">celt</argument>, <argument pos:line="20108" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20108" pos:column="89">FRAMEINFO</name> <op:operator pos:line="20108" pos:column="99">*</op:operator><name pos:line="20108" pos:column="100">rgelt</name><op:operator pos:line="20108" pos:column="105">,</op:operator>
            <comment type="block" pos:line="20109" pos:column="13">/* [out][in] */</comment> <name pos:line="20109" pos:column="29">__RPC__inout</name> <name pos:line="20109" pos:column="42">ULONG</name> <op:operator pos:line="20109" pos:column="48">*</op:operator><name pos:line="20109" pos:column="49">pceltFetched</name><op:operator pos:line="20109" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20111" pos:column="9">HRESULT</name></type> ( <name pos:line="20111" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20111" pos:column="37">*</type:modifier><name pos:line="20111" pos:column="38">Skip</name> )<parameter_list pos:line="20111" pos:column="44">( 
            <param><decl><type><name pos:line="20112" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20112" pos:column="41">*</type:modifier></type> <name pos:line="20112" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="20113" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20113" pos:column="24">ULONG</name></type> <name pos:line="20113" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20115" pos:column="9">HRESULT</name></type> ( <name pos:line="20115" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20115" pos:column="37">*</type:modifier><name pos:line="20115" pos:column="38">Reset</name> )<parameter_list pos:line="20115" pos:column="45">( 
            <param><decl><type><name pos:line="20116" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20116" pos:column="41">*</type:modifier></type> <name pos:line="20116" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20118" pos:column="9">HRESULT</name></type> ( <name pos:line="20118" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20118" pos:column="37">*</type:modifier><name pos:line="20118" pos:column="38">Clone</name> )<parameter_list pos:line="20118" pos:column="45">( 
            <param><decl><type><name pos:line="20119" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20119" pos:column="41">*</type:modifier></type> <name pos:line="20119" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="20120" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20120" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20120" pos:column="46">IEnumDebugFrameInfo2</name> <type:modifier pos:line="20120" pos:column="67">*</type:modifier><type:modifier pos:line="20120" pos:column="68">*</type:modifier></type><name pos:line="20120" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20122" pos:column="9">HRESULT</name></type> ( <name pos:line="20122" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20122" pos:column="37">*</type:modifier><name pos:line="20122" pos:column="38">GetCount</name> )<parameter_list pos:line="20122" pos:column="48">( 
            <param><decl><type><name pos:line="20123" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20123" pos:column="41">*</type:modifier></type> <name pos:line="20123" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="20124" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20124" pos:column="25">__RPC__out</name> <name pos:line="20124" pos:column="36">ULONG</name> <type:modifier pos:line="20124" pos:column="42">*</type:modifier></type><name pos:line="20124" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20126" pos:column="9">HRESULT</name></type> ( <name pos:line="20126" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20126" pos:column="37">*</type:modifier><name pos:line="20126" pos:column="38">SetCachePriority</name> )<parameter_list pos:line="20126" pos:column="56">( 
            <param><decl><type><name pos:line="20127" pos:column="13">IEnumDebugSessionFrameInfo2</name> <type:modifier pos:line="20127" pos:column="41">*</type:modifier></type> <name pos:line="20127" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="20128" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20128" pos:column="24">SESSION_CACHE_PRIORITY</name></type> <name pos:line="20128" pos:column="47">cachePriority</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20130" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20131" pos:column="7">IEnumDebugSessionFrameInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20133" pos:column="5">interface</name></type> <name pos:line="20133" pos:column="15">IEnumDebugSessionFrameInfo2</name>
    <argument_list pos:line="20134" pos:column="5">{
        <argument><expr><name pos:line="20135" pos:column="9">CONST_VTBL</name> struct <name pos:line="20135" pos:column="27">IEnumDebugSessionFrameInfo2Vtbl</name> <op:operator pos:line="20135" pos:column="59">*</op:operator><name pos:line="20135" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20140" pos:column="1">#<cpp:directive pos:line="20140" pos:column="2">ifdef</cpp:directive> <name pos:line="20140" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20143" pos:column="1">#<cpp:directive pos:line="20143" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20143" pos:column="9">IEnumDebugSessionFrameInfo2_QueryInterface</name><parameter_list pos:line="20143" pos:column="51">(<param><type><name pos:line="20143" pos:column="52">This</name></type></param>,<param><type><name pos:line="20143" pos:column="57">riid</name></type></param>,<param><type><name pos:line="20143" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20144" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20146" pos:column="1">#<cpp:directive pos:line="20146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20146" pos:column="9">IEnumDebugSessionFrameInfo2_AddRef</name><parameter_list pos:line="20146" pos:column="43">(<param><type><name pos:line="20146" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20147" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20149" pos:column="1">#<cpp:directive pos:line="20149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20149" pos:column="9">IEnumDebugSessionFrameInfo2_Release</name><parameter_list pos:line="20149" pos:column="44">(<param><type><name pos:line="20149" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20150" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20153" pos:column="1">#<cpp:directive pos:line="20153" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20153" pos:column="9">IEnumDebugSessionFrameInfo2_Next</name><parameter_list pos:line="20153" pos:column="41">(<param><type><name pos:line="20153" pos:column="42">This</name></type></param>,<param><type><name pos:line="20153" pos:column="47">celt</name></type></param>,<param><type><name pos:line="20153" pos:column="52">rgelt</name></type></param>,<param><type><name pos:line="20153" pos:column="58">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20154" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20156" pos:column="1">#<cpp:directive pos:line="20156" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20156" pos:column="9">IEnumDebugSessionFrameInfo2_Skip</name><parameter_list pos:line="20156" pos:column="41">(<param><type><name pos:line="20156" pos:column="42">This</name></type></param>,<param><type><name pos:line="20156" pos:column="47">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20157" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20159" pos:column="1">#<cpp:directive pos:line="20159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20159" pos:column="9">IEnumDebugSessionFrameInfo2_Reset</name><parameter_list pos:line="20159" pos:column="42">(<param><type><name pos:line="20159" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20160" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20162" pos:column="1">#<cpp:directive pos:line="20162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20162" pos:column="9">IEnumDebugSessionFrameInfo2_Clone</name><parameter_list pos:line="20162" pos:column="42">(<param><type><name pos:line="20162" pos:column="43">This</name></type></param>,<param><type><name pos:line="20162" pos:column="48">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20163" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20165" pos:column="1">#<cpp:directive pos:line="20165" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20165" pos:column="9">IEnumDebugSessionFrameInfo2_GetCount</name><parameter_list pos:line="20165" pos:column="45">(<param><type><name pos:line="20165" pos:column="46">This</name></type></param>,<param><type><name pos:line="20165" pos:column="51">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20166" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 


<cpp:define pos:line="20169" pos:column="1">#<cpp:directive pos:line="20169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20169" pos:column="9">IEnumDebugSessionFrameInfo2_SetCachePriority</name><parameter_list pos:line="20169" pos:column="53">(<param><type><name pos:line="20169" pos:column="54">This</name></type></param>,<param><type><name pos:line="20169" pos:column="59">cachePriority</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20170" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCachePriority(This,cachePriority) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20172" pos:column="1">#<cpp:directive pos:line="20172" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20172" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20175" pos:column="1">#<cpp:directive pos:line="20175" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20175" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20180" pos:column="1">#<cpp:directive pos:line="20180" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20180" pos:column="9">/* __IEnumDebugSessionFrameInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20183" pos:column="1">#<cpp:directive pos:line="20183" pos:column="2">ifndef</cpp:directive> <name pos:line="20183" pos:column="9">__IEnumDebugFrameInfoFilter2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20184" pos:column="1">#<cpp:directive pos:line="20184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20184" pos:column="9">__IEnumDebugFrameInfoFilter2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20186" pos:column="1">/* interface IEnumDebugFrameInfoFilter2 */</comment>
<comment type="block" pos:line="20187" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20190" pos:column="1">EXTERN_C</name> <specifier pos:line="20190" pos:column="10">const</specifier> <name pos:line="20190" pos:column="16">IID</name></type> <name pos:line="20190" pos:column="20">IID_IEnumDebugFrameInfoFilter2</name></decl>;</decl_stmt>

<cpp:if pos:line="20192" pos:column="1">#<cpp:directive pos:line="20192" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20192" pos:column="5">defined</name><argument_list pos:line="20192" pos:column="12">(<argument><expr><name pos:line="20192" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20192" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20192" pos:column="29">!</op:operator><call><name pos:line="20192" pos:column="30">defined</name><argument_list pos:line="20192" pos:column="37">(<argument><expr><name pos:line="20192" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20194" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20194" pos:column="19">(<argument pos:line="20194" pos:column="20">"6CD4FB40-F954-44e0-B8A5-A614481E0831"</argument>)</argument_list></macro>
    <label><name pos:line="20195" pos:column="5">IEnumDebugFrameInfoFilter2</name> :</label> <expr_stmt><expr pos:line="20195" pos:column="34">public <name pos:line="20195" pos:column="41">IEnumDebugFrameInfo2</name>
    <block pos:line="20196" pos:column="5">{
    <expr pos:line="20197" pos:column="5">public<op:operator pos:line="20197" pos:column="11">:</op:operator>
        virtual <name pos:line="20198" pos:column="17">HRESULT</name> <name pos:line="20198" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20198" pos:column="43">CanFilter</name><argument_list pos:line="20198" pos:column="52">( 
            <comment type="block" pos:line="20199" pos:column="13">/* [out] */</comment> <argument pos:line="20199" pos:column="25">__RPC__out BOOL *pfCanFilter</argument>)</argument_list></macro> <op:operator pos:line="20199" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="20199" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="20201" pos:column="9">virtual <name pos:line="20201" pos:column="17">HRESULT</name> <name pos:line="20201" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20201" pos:column="43">IsFiltered</name><argument_list pos:line="20201" pos:column="53">( 
            <comment type="block" pos:line="20202" pos:column="13">/* [out] */</comment> <argument pos:line="20202" pos:column="25">__RPC__out BOOL *pfIsFiltered</argument>)</argument_list></macro> <op:operator pos:line="20202" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20202" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20206" pos:column="1">#<cpp:directive pos:line="20206" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20206" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20208" pos:column="5">typedef <type><struct pos:line="20208" pos:column="13">struct <name pos:line="20208" pos:column="20">IEnumDebugFrameInfoFilter2Vtbl</name>
    <block pos:line="20209" pos:column="5">{<public type="default" pos:line="20209" pos:column="6">
        <function_decl><type><name pos:line="20210" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20212" pos:column="9">HRESULT</name></type> ( <name pos:line="20212" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20212" pos:column="37">*</type:modifier><name pos:line="20212" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20212" pos:column="54">( 
            <param><decl><type><name pos:line="20213" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20213" pos:column="40">*</type:modifier></type> <name pos:line="20213" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="20214" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20214" pos:column="24">__RPC__in</name> <name pos:line="20214" pos:column="34">REFIID</name></type> <name pos:line="20214" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20215" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20216" pos:column="13">__RPC__deref_out</name>  <name pos:line="20216" pos:column="31">void</name> <type:modifier pos:line="20216" pos:column="36">*</type:modifier><type:modifier pos:line="20216" pos:column="37">*</type:modifier></type><name pos:line="20216" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20218" pos:column="9">ULONG</name></type> ( <name pos:line="20218" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20218" pos:column="35">*</type:modifier><name pos:line="20218" pos:column="36">AddRef</name> )<parameter_list pos:line="20218" pos:column="44">( 
            <param><decl><type><name pos:line="20219" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20219" pos:column="40">*</type:modifier></type> <name pos:line="20219" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20221" pos:column="9">ULONG</name></type> ( <name pos:line="20221" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20221" pos:column="35">*</type:modifier><name pos:line="20221" pos:column="36">Release</name> )<parameter_list pos:line="20221" pos:column="45">( 
            <param><decl><type><name pos:line="20222" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20222" pos:column="40">*</type:modifier></type> <name pos:line="20222" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20224" pos:column="9">HRESULT</name> <argument_list pos:line="20224" pos:column="17">( <argument pos:line="20224" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20224" pos:column="44">(</op:operator> 
            <name pos:line="20225" pos:column="13">IEnumDebugFrameInfoFilter2</name> <op:operator pos:line="20225" pos:column="40">*</op:operator> <name pos:line="20225" pos:column="42">This</name><op:operator pos:line="20225" pos:column="46">,</op:operator>
            <comment type="block" pos:line="20226" pos:column="13">/* [in] */</comment> <name pos:line="20226" pos:column="24">ULONG</name> <name pos:line="20226" pos:column="30">celt</name><op:operator pos:line="20226" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20227" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20227" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20227" pos:column="67">(<argument pos:line="20227" pos:column="68">celt</argument>, <argument pos:line="20227" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20227" pos:column="89">FRAMEINFO</name> <op:operator pos:line="20227" pos:column="99">*</op:operator><name pos:line="20227" pos:column="100">rgelt</name><op:operator pos:line="20227" pos:column="105">,</op:operator>
            <comment type="block" pos:line="20228" pos:column="13">/* [out][in] */</comment> <name pos:line="20228" pos:column="29">__RPC__inout</name> <name pos:line="20228" pos:column="42">ULONG</name> <op:operator pos:line="20228" pos:column="48">*</op:operator><name pos:line="20228" pos:column="49">pceltFetched</name><op:operator pos:line="20228" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20230" pos:column="9">HRESULT</name></type> ( <name pos:line="20230" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20230" pos:column="37">*</type:modifier><name pos:line="20230" pos:column="38">Skip</name> )<parameter_list pos:line="20230" pos:column="44">( 
            <param><decl><type><name pos:line="20231" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20231" pos:column="40">*</type:modifier></type> <name pos:line="20231" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="20232" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20232" pos:column="24">ULONG</name></type> <name pos:line="20232" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20234" pos:column="9">HRESULT</name></type> ( <name pos:line="20234" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20234" pos:column="37">*</type:modifier><name pos:line="20234" pos:column="38">Reset</name> )<parameter_list pos:line="20234" pos:column="45">( 
            <param><decl><type><name pos:line="20235" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20235" pos:column="40">*</type:modifier></type> <name pos:line="20235" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20237" pos:column="9">HRESULT</name></type> ( <name pos:line="20237" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20237" pos:column="37">*</type:modifier><name pos:line="20237" pos:column="38">Clone</name> )<parameter_list pos:line="20237" pos:column="45">( 
            <param><decl><type><name pos:line="20238" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20238" pos:column="40">*</type:modifier></type> <name pos:line="20238" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="20239" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20239" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20239" pos:column="46">IEnumDebugFrameInfo2</name> <type:modifier pos:line="20239" pos:column="67">*</type:modifier><type:modifier pos:line="20239" pos:column="68">*</type:modifier></type><name pos:line="20239" pos:column="69">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20241" pos:column="9">HRESULT</name></type> ( <name pos:line="20241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20241" pos:column="37">*</type:modifier><name pos:line="20241" pos:column="38">GetCount</name> )<parameter_list pos:line="20241" pos:column="48">( 
            <param><decl><type><name pos:line="20242" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20242" pos:column="40">*</type:modifier></type> <name pos:line="20242" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="20243" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20243" pos:column="25">__RPC__out</name> <name pos:line="20243" pos:column="36">ULONG</name> <type:modifier pos:line="20243" pos:column="42">*</type:modifier></type><name pos:line="20243" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20245" pos:column="9">HRESULT</name></type> ( <name pos:line="20245" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20245" pos:column="37">*</type:modifier><name pos:line="20245" pos:column="38">CanFilter</name> )<parameter_list pos:line="20245" pos:column="49">( 
            <param><decl><type><name pos:line="20246" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20246" pos:column="40">*</type:modifier></type> <name pos:line="20246" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="20247" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20247" pos:column="25">__RPC__out</name> <name pos:line="20247" pos:column="36">BOOL</name> <type:modifier pos:line="20247" pos:column="41">*</type:modifier></type><name pos:line="20247" pos:column="42">pfCanFilter</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20249" pos:column="9">HRESULT</name></type> ( <name pos:line="20249" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20249" pos:column="37">*</type:modifier><name pos:line="20249" pos:column="38">IsFiltered</name> )<parameter_list pos:line="20249" pos:column="50">( 
            <param><decl><type><name pos:line="20250" pos:column="13">IEnumDebugFrameInfoFilter2</name> <type:modifier pos:line="20250" pos:column="40">*</type:modifier></type> <name pos:line="20250" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="20251" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20251" pos:column="25">__RPC__out</name> <name pos:line="20251" pos:column="36">BOOL</name> <type:modifier pos:line="20251" pos:column="41">*</type:modifier></type><name pos:line="20251" pos:column="42">pfIsFiltered</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20253" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20254" pos:column="7">IEnumDebugFrameInfoFilter2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20256" pos:column="5">interface</name></type> <name pos:line="20256" pos:column="15">IEnumDebugFrameInfoFilter2</name>
    <argument_list pos:line="20257" pos:column="5">{
        <argument><expr><name pos:line="20258" pos:column="9">CONST_VTBL</name> struct <name pos:line="20258" pos:column="27">IEnumDebugFrameInfoFilter2Vtbl</name> <op:operator pos:line="20258" pos:column="58">*</op:operator><name pos:line="20258" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20263" pos:column="1">#<cpp:directive pos:line="20263" pos:column="2">ifdef</cpp:directive> <name pos:line="20263" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20266" pos:column="1">#<cpp:directive pos:line="20266" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20266" pos:column="9">IEnumDebugFrameInfoFilter2_QueryInterface</name><parameter_list pos:line="20266" pos:column="50">(<param><type><name pos:line="20266" pos:column="51">This</name></type></param>,<param><type><name pos:line="20266" pos:column="56">riid</name></type></param>,<param><type><name pos:line="20266" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20267" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20269" pos:column="1">#<cpp:directive pos:line="20269" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20269" pos:column="9">IEnumDebugFrameInfoFilter2_AddRef</name><parameter_list pos:line="20269" pos:column="42">(<param><type><name pos:line="20269" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20270" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20272" pos:column="1">#<cpp:directive pos:line="20272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20272" pos:column="9">IEnumDebugFrameInfoFilter2_Release</name><parameter_list pos:line="20272" pos:column="43">(<param><type><name pos:line="20272" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20273" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20276" pos:column="1">#<cpp:directive pos:line="20276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20276" pos:column="9">IEnumDebugFrameInfoFilter2_Next</name><parameter_list pos:line="20276" pos:column="40">(<param><type><name pos:line="20276" pos:column="41">This</name></type></param>,<param><type><name pos:line="20276" pos:column="46">celt</name></type></param>,<param><type><name pos:line="20276" pos:column="51">rgelt</name></type></param>,<param><type><name pos:line="20276" pos:column="57">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20277" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20279" pos:column="1">#<cpp:directive pos:line="20279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20279" pos:column="9">IEnumDebugFrameInfoFilter2_Skip</name><parameter_list pos:line="20279" pos:column="40">(<param><type><name pos:line="20279" pos:column="41">This</name></type></param>,<param><type><name pos:line="20279" pos:column="46">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20280" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20282" pos:column="1">#<cpp:directive pos:line="20282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20282" pos:column="9">IEnumDebugFrameInfoFilter2_Reset</name><parameter_list pos:line="20282" pos:column="41">(<param><type><name pos:line="20282" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20283" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20285" pos:column="1">#<cpp:directive pos:line="20285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20285" pos:column="9">IEnumDebugFrameInfoFilter2_Clone</name><parameter_list pos:line="20285" pos:column="41">(<param><type><name pos:line="20285" pos:column="42">This</name></type></param>,<param><type><name pos:line="20285" pos:column="47">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20286" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20288" pos:column="1">#<cpp:directive pos:line="20288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20288" pos:column="9">IEnumDebugFrameInfoFilter2_GetCount</name><parameter_list pos:line="20288" pos:column="44">(<param><type><name pos:line="20288" pos:column="45">This</name></type></param>,<param><type><name pos:line="20288" pos:column="50">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20289" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 


<cpp:define pos:line="20292" pos:column="1">#<cpp:directive pos:line="20292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20292" pos:column="9">IEnumDebugFrameInfoFilter2_CanFilter</name><parameter_list pos:line="20292" pos:column="45">(<param><type><name pos:line="20292" pos:column="46">This</name></type></param>,<param><type><name pos:line="20292" pos:column="51">pfCanFilter</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20293" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanFilter(This,pfCanFilter) )</cpp:value></cpp:define> 

<cpp:define pos:line="20295" pos:column="1">#<cpp:directive pos:line="20295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20295" pos:column="9">IEnumDebugFrameInfoFilter2_IsFiltered</name><parameter_list pos:line="20295" pos:column="46">(<param><type><name pos:line="20295" pos:column="47">This</name></type></param>,<param><type><name pos:line="20295" pos:column="52">pfIsFiltered</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20296" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsFiltered(This,pfIsFiltered) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20298" pos:column="1">#<cpp:directive pos:line="20298" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20298" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20301" pos:column="1">#<cpp:directive pos:line="20301" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20301" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20306" pos:column="1">#<cpp:directive pos:line="20306" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20306" pos:column="9">/* __IEnumDebugFrameInfoFilter2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20309" pos:column="1">#<cpp:directive pos:line="20309" pos:column="2">ifndef</cpp:directive> <name pos:line="20309" pos:column="9">__IEnumCodePaths2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20310" pos:column="1">#<cpp:directive pos:line="20310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20310" pos:column="9">__IEnumCodePaths2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20312" pos:column="1">/* interface IEnumCodePaths2 */</comment>
<comment type="block" pos:line="20313" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20316" pos:column="1">EXTERN_C</name> <specifier pos:line="20316" pos:column="10">const</specifier> <name pos:line="20316" pos:column="16">IID</name></type> <name pos:line="20316" pos:column="20">IID_IEnumCodePaths2</name></decl>;</decl_stmt>

<cpp:if pos:line="20318" pos:column="1">#<cpp:directive pos:line="20318" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20318" pos:column="5">defined</name><argument_list pos:line="20318" pos:column="12">(<argument><expr><name pos:line="20318" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20318" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20318" pos:column="29">!</op:operator><call><name pos:line="20318" pos:column="30">defined</name><argument_list pos:line="20318" pos:column="37">(<argument><expr><name pos:line="20318" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20320" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20320" pos:column="19">(<argument pos:line="20320" pos:column="20">"9b13f80d-cfc6-4b78-81ef-1f7cc33f7639"</argument>)</argument_list></macro>
    <label><name pos:line="20321" pos:column="5">IEnumCodePaths2</name> :</label> <expr_stmt><expr pos:line="20321" pos:column="23">public <name pos:line="20321" pos:column="30">IUnknown</name>
    <block pos:line="20322" pos:column="5">{
    <expr pos:line="20323" pos:column="5">public<op:operator pos:line="20323" pos:column="11">:</op:operator>
        virtual <name pos:line="20324" pos:column="17">HRESULT</name> <name pos:line="20324" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20324" pos:column="43">Next</name><argument_list pos:line="20324" pos:column="47">( 
            <comment type="block" pos:line="20325" pos:column="13">/* [in] */</comment> <argument pos:line="20325" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="20326" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="20326" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) CODE_PATH *rgelt</argument>,
            <comment type="block" pos:line="20327" pos:column="13">/* [out][in] */</comment> <argument pos:line="20327" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="20327" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="20327" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="20329" pos:column="9">virtual <name pos:line="20329" pos:column="17">HRESULT</name> <name pos:line="20329" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20329" pos:column="43">Skip</name><argument_list pos:line="20329" pos:column="47">( 
            <comment type="block" pos:line="20330" pos:column="13">/* [in] */</comment> <argument pos:line="20330" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="20330" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="20330" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="20332" pos:column="9">virtual <name pos:line="20332" pos:column="17">HRESULT</name> <name pos:line="20332" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="20332" pos:column="43">Reset</name><argument_list pos:line="20332" pos:column="48">( <argument><expr><name pos:line="20332" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="20332" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20332" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="20334" pos:column="9">virtual <name pos:line="20334" pos:column="17">HRESULT</name> <name pos:line="20334" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20334" pos:column="43">Clone</name><argument_list pos:line="20334" pos:column="48">( 
            <comment type="block" pos:line="20335" pos:column="13">/* [out] */</comment> <argument pos:line="20335" pos:column="25">__RPC__deref_out_opt IEnumCodePaths2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="20335" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="20335" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="20337" pos:column="9">virtual <name pos:line="20337" pos:column="17">HRESULT</name> <name pos:line="20337" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20337" pos:column="43">GetCount</name><argument_list pos:line="20337" pos:column="51">( 
            <comment type="block" pos:line="20338" pos:column="13">/* [out] */</comment> <argument pos:line="20338" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="20338" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="20338" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20342" pos:column="1">#<cpp:directive pos:line="20342" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20342" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20344" pos:column="5">typedef <type><struct pos:line="20344" pos:column="13">struct <name pos:line="20344" pos:column="20">IEnumCodePaths2Vtbl</name>
    <block pos:line="20345" pos:column="5">{<public type="default" pos:line="20345" pos:column="6">
        <function_decl><type><name pos:line="20346" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20348" pos:column="9">HRESULT</name></type> ( <name pos:line="20348" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20348" pos:column="37">*</type:modifier><name pos:line="20348" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20348" pos:column="54">( 
            <param><decl><type><name pos:line="20349" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20349" pos:column="29">*</type:modifier></type> <name pos:line="20349" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="20350" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20350" pos:column="24">__RPC__in</name> <name pos:line="20350" pos:column="34">REFIID</name></type> <name pos:line="20350" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20351" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20352" pos:column="13">__RPC__deref_out</name>  <name pos:line="20352" pos:column="31">void</name> <type:modifier pos:line="20352" pos:column="36">*</type:modifier><type:modifier pos:line="20352" pos:column="37">*</type:modifier></type><name pos:line="20352" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20354" pos:column="9">ULONG</name></type> ( <name pos:line="20354" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20354" pos:column="35">*</type:modifier><name pos:line="20354" pos:column="36">AddRef</name> )<parameter_list pos:line="20354" pos:column="44">( 
            <param><decl><type><name pos:line="20355" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20355" pos:column="29">*</type:modifier></type> <name pos:line="20355" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20357" pos:column="9">ULONG</name></type> ( <name pos:line="20357" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20357" pos:column="35">*</type:modifier><name pos:line="20357" pos:column="36">Release</name> )<parameter_list pos:line="20357" pos:column="45">( 
            <param><decl><type><name pos:line="20358" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20358" pos:column="29">*</type:modifier></type> <name pos:line="20358" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20360" pos:column="9">HRESULT</name> <argument_list pos:line="20360" pos:column="17">( <argument pos:line="20360" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20360" pos:column="44">(</op:operator> 
            <name pos:line="20361" pos:column="13">IEnumCodePaths2</name> <op:operator pos:line="20361" pos:column="29">*</op:operator> <name pos:line="20361" pos:column="31">This</name><op:operator pos:line="20361" pos:column="35">,</op:operator>
            <comment type="block" pos:line="20362" pos:column="13">/* [in] */</comment> <name pos:line="20362" pos:column="24">ULONG</name> <name pos:line="20362" pos:column="30">celt</name><op:operator pos:line="20362" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20363" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20363" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20363" pos:column="67">(<argument pos:line="20363" pos:column="68">celt</argument>, <argument pos:line="20363" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20363" pos:column="89">CODE_PATH</name> <op:operator pos:line="20363" pos:column="99">*</op:operator><name pos:line="20363" pos:column="100">rgelt</name><op:operator pos:line="20363" pos:column="105">,</op:operator>
            <comment type="block" pos:line="20364" pos:column="13">/* [out][in] */</comment> <name pos:line="20364" pos:column="29">__RPC__inout</name> <name pos:line="20364" pos:column="42">ULONG</name> <op:operator pos:line="20364" pos:column="48">*</op:operator><name pos:line="20364" pos:column="49">pceltFetched</name><op:operator pos:line="20364" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20366" pos:column="9">HRESULT</name></type> ( <name pos:line="20366" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20366" pos:column="37">*</type:modifier><name pos:line="20366" pos:column="38">Skip</name> )<parameter_list pos:line="20366" pos:column="44">( 
            <param><decl><type><name pos:line="20367" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20367" pos:column="29">*</type:modifier></type> <name pos:line="20367" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="20368" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20368" pos:column="24">ULONG</name></type> <name pos:line="20368" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20370" pos:column="9">HRESULT</name></type> ( <name pos:line="20370" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20370" pos:column="37">*</type:modifier><name pos:line="20370" pos:column="38">Reset</name> )<parameter_list pos:line="20370" pos:column="45">( 
            <param><decl><type><name pos:line="20371" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20371" pos:column="29">*</type:modifier></type> <name pos:line="20371" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20373" pos:column="9">HRESULT</name></type> ( <name pos:line="20373" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20373" pos:column="37">*</type:modifier><name pos:line="20373" pos:column="38">Clone</name> )<parameter_list pos:line="20373" pos:column="45">( 
            <param><decl><type><name pos:line="20374" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20374" pos:column="29">*</type:modifier></type> <name pos:line="20374" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="20375" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20375" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20375" pos:column="46">IEnumCodePaths2</name> <type:modifier pos:line="20375" pos:column="62">*</type:modifier><type:modifier pos:line="20375" pos:column="63">*</type:modifier></type><name pos:line="20375" pos:column="64">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20377" pos:column="9">HRESULT</name></type> ( <name pos:line="20377" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20377" pos:column="37">*</type:modifier><name pos:line="20377" pos:column="38">GetCount</name> )<parameter_list pos:line="20377" pos:column="48">( 
            <param><decl><type><name pos:line="20378" pos:column="13">IEnumCodePaths2</name> <type:modifier pos:line="20378" pos:column="29">*</type:modifier></type> <name pos:line="20378" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="20379" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20379" pos:column="25">__RPC__out</name> <name pos:line="20379" pos:column="36">ULONG</name> <type:modifier pos:line="20379" pos:column="42">*</type:modifier></type><name pos:line="20379" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20381" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20382" pos:column="7">IEnumCodePaths2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20384" pos:column="5">interface</name></type> <name pos:line="20384" pos:column="15">IEnumCodePaths2</name>
    <argument_list pos:line="20385" pos:column="5">{
        <argument><expr><name pos:line="20386" pos:column="9">CONST_VTBL</name> struct <name pos:line="20386" pos:column="27">IEnumCodePaths2Vtbl</name> <op:operator pos:line="20386" pos:column="47">*</op:operator><name pos:line="20386" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20391" pos:column="1">#<cpp:directive pos:line="20391" pos:column="2">ifdef</cpp:directive> <name pos:line="20391" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20394" pos:column="1">#<cpp:directive pos:line="20394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20394" pos:column="9">IEnumCodePaths2_QueryInterface</name><parameter_list pos:line="20394" pos:column="39">(<param><type><name pos:line="20394" pos:column="40">This</name></type></param>,<param><type><name pos:line="20394" pos:column="45">riid</name></type></param>,<param><type><name pos:line="20394" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20395" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20397" pos:column="1">#<cpp:directive pos:line="20397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20397" pos:column="9">IEnumCodePaths2_AddRef</name><parameter_list pos:line="20397" pos:column="31">(<param><type><name pos:line="20397" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20398" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20400" pos:column="1">#<cpp:directive pos:line="20400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20400" pos:column="9">IEnumCodePaths2_Release</name><parameter_list pos:line="20400" pos:column="32">(<param><type><name pos:line="20400" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20401" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20404" pos:column="1">#<cpp:directive pos:line="20404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20404" pos:column="9">IEnumCodePaths2_Next</name><parameter_list pos:line="20404" pos:column="29">(<param><type><name pos:line="20404" pos:column="30">This</name></type></param>,<param><type><name pos:line="20404" pos:column="35">celt</name></type></param>,<param><type><name pos:line="20404" pos:column="40">rgelt</name></type></param>,<param><type><name pos:line="20404" pos:column="46">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20405" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20407" pos:column="1">#<cpp:directive pos:line="20407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20407" pos:column="9">IEnumCodePaths2_Skip</name><parameter_list pos:line="20407" pos:column="29">(<param><type><name pos:line="20407" pos:column="30">This</name></type></param>,<param><type><name pos:line="20407" pos:column="35">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20408" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20410" pos:column="1">#<cpp:directive pos:line="20410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20410" pos:column="9">IEnumCodePaths2_Reset</name><parameter_list pos:line="20410" pos:column="30">(<param><type><name pos:line="20410" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20411" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20413" pos:column="1">#<cpp:directive pos:line="20413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20413" pos:column="9">IEnumCodePaths2_Clone</name><parameter_list pos:line="20413" pos:column="30">(<param><type><name pos:line="20413" pos:column="31">This</name></type></param>,<param><type><name pos:line="20413" pos:column="36">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20414" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20416" pos:column="1">#<cpp:directive pos:line="20416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20416" pos:column="9">IEnumCodePaths2_GetCount</name><parameter_list pos:line="20416" pos:column="33">(<param><type><name pos:line="20416" pos:column="34">This</name></type></param>,<param><type><name pos:line="20416" pos:column="39">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20417" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20419" pos:column="1">#<cpp:directive pos:line="20419" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20419" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20422" pos:column="1">#<cpp:directive pos:line="20422" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20422" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20427" pos:column="1">#<cpp:directive pos:line="20427" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20427" pos:column="9">/* __IEnumCodePaths2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20430" pos:column="1">#<cpp:directive pos:line="20430" pos:column="2">ifndef</cpp:directive> <name pos:line="20430" pos:column="9">__IEnumDebugModules2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20431" pos:column="1">#<cpp:directive pos:line="20431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20431" pos:column="9">__IEnumDebugModules2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20433" pos:column="1">/* interface IEnumDebugModules2 */</comment>
<comment type="block" pos:line="20434" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20437" pos:column="1">EXTERN_C</name> <specifier pos:line="20437" pos:column="10">const</specifier> <name pos:line="20437" pos:column="16">IID</name></type> <name pos:line="20437" pos:column="20">IID_IEnumDebugModules2</name></decl>;</decl_stmt>

<cpp:if pos:line="20439" pos:column="1">#<cpp:directive pos:line="20439" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20439" pos:column="5">defined</name><argument_list pos:line="20439" pos:column="12">(<argument><expr><name pos:line="20439" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20439" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20439" pos:column="29">!</op:operator><call><name pos:line="20439" pos:column="30">defined</name><argument_list pos:line="20439" pos:column="37">(<argument><expr><name pos:line="20439" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20441" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20441" pos:column="19">(<argument pos:line="20441" pos:column="20">"4c4a2835-682e-4ce1-aebc-1e6b3a165b44"</argument>)</argument_list></macro>
    <label><name pos:line="20442" pos:column="5">IEnumDebugModules2</name> :</label> <expr_stmt><expr pos:line="20442" pos:column="26">public <name pos:line="20442" pos:column="33">IUnknown</name>
    <block pos:line="20443" pos:column="5">{
    <expr pos:line="20444" pos:column="5">public<op:operator pos:line="20444" pos:column="11">:</op:operator>
        virtual <name pos:line="20445" pos:column="17">HRESULT</name> <name pos:line="20445" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20445" pos:column="43">Next</name><argument_list pos:line="20445" pos:column="47">( 
            <comment type="block" pos:line="20446" pos:column="13">/* [in] */</comment> <argument pos:line="20446" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="20447" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="20447" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugModule2 **rgelt</argument>,
            <comment type="block" pos:line="20448" pos:column="13">/* [out][in] */</comment> <argument pos:line="20448" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="20448" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="20448" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="20450" pos:column="9">virtual <name pos:line="20450" pos:column="17">HRESULT</name> <name pos:line="20450" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20450" pos:column="43">Skip</name><argument_list pos:line="20450" pos:column="47">( 
            <comment type="block" pos:line="20451" pos:column="13">/* [in] */</comment> <argument pos:line="20451" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="20451" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="20451" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="20453" pos:column="9">virtual <name pos:line="20453" pos:column="17">HRESULT</name> <name pos:line="20453" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="20453" pos:column="43">Reset</name><argument_list pos:line="20453" pos:column="48">( <argument><expr><name pos:line="20453" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="20453" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20453" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="20455" pos:column="9">virtual <name pos:line="20455" pos:column="17">HRESULT</name> <name pos:line="20455" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20455" pos:column="43">Clone</name><argument_list pos:line="20455" pos:column="48">( 
            <comment type="block" pos:line="20456" pos:column="13">/* [out] */</comment> <argument pos:line="20456" pos:column="25">__RPC__deref_out_opt IEnumDebugModules2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="20456" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="20456" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="20458" pos:column="9">virtual <name pos:line="20458" pos:column="17">HRESULT</name> <name pos:line="20458" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20458" pos:column="43">GetCount</name><argument_list pos:line="20458" pos:column="51">( 
            <comment type="block" pos:line="20459" pos:column="13">/* [out] */</comment> <argument pos:line="20459" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="20459" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="20459" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20463" pos:column="1">#<cpp:directive pos:line="20463" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20463" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20465" pos:column="5">typedef <type><struct pos:line="20465" pos:column="13">struct <name pos:line="20465" pos:column="20">IEnumDebugModules2Vtbl</name>
    <block pos:line="20466" pos:column="5">{<public type="default" pos:line="20466" pos:column="6">
        <function_decl><type><name pos:line="20467" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20469" pos:column="9">HRESULT</name></type> ( <name pos:line="20469" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20469" pos:column="37">*</type:modifier><name pos:line="20469" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20469" pos:column="54">( 
            <param><decl><type><name pos:line="20470" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20470" pos:column="32">*</type:modifier></type> <name pos:line="20470" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="20471" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20471" pos:column="24">__RPC__in</name> <name pos:line="20471" pos:column="34">REFIID</name></type> <name pos:line="20471" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20472" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20473" pos:column="13">__RPC__deref_out</name>  <name pos:line="20473" pos:column="31">void</name> <type:modifier pos:line="20473" pos:column="36">*</type:modifier><type:modifier pos:line="20473" pos:column="37">*</type:modifier></type><name pos:line="20473" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20475" pos:column="9">ULONG</name></type> ( <name pos:line="20475" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20475" pos:column="35">*</type:modifier><name pos:line="20475" pos:column="36">AddRef</name> )<parameter_list pos:line="20475" pos:column="44">( 
            <param><decl><type><name pos:line="20476" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20476" pos:column="32">*</type:modifier></type> <name pos:line="20476" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20478" pos:column="9">ULONG</name></type> ( <name pos:line="20478" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20478" pos:column="35">*</type:modifier><name pos:line="20478" pos:column="36">Release</name> )<parameter_list pos:line="20478" pos:column="45">( 
            <param><decl><type><name pos:line="20479" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20479" pos:column="32">*</type:modifier></type> <name pos:line="20479" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20481" pos:column="9">HRESULT</name> <argument_list pos:line="20481" pos:column="17">( <argument pos:line="20481" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20481" pos:column="44">(</op:operator> 
            <name pos:line="20482" pos:column="13">IEnumDebugModules2</name> <op:operator pos:line="20482" pos:column="32">*</op:operator> <name pos:line="20482" pos:column="34">This</name><op:operator pos:line="20482" pos:column="38">,</op:operator>
            <comment type="block" pos:line="20483" pos:column="13">/* [in] */</comment> <name pos:line="20483" pos:column="24">ULONG</name> <name pos:line="20483" pos:column="30">celt</name><op:operator pos:line="20483" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20484" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20484" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20484" pos:column="67">(<argument pos:line="20484" pos:column="68">celt</argument>, <argument pos:line="20484" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20484" pos:column="89">IDebugModule2</name> <op:operator pos:line="20484" pos:column="103">*</op:operator><op:operator pos:line="20484" pos:column="104">*</op:operator><name pos:line="20484" pos:column="105">rgelt</name><op:operator pos:line="20484" pos:column="110">,</op:operator>
            <comment type="block" pos:line="20485" pos:column="13">/* [out][in] */</comment> <name pos:line="20485" pos:column="29">__RPC__inout</name> <name pos:line="20485" pos:column="42">ULONG</name> <op:operator pos:line="20485" pos:column="48">*</op:operator><name pos:line="20485" pos:column="49">pceltFetched</name><op:operator pos:line="20485" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20487" pos:column="9">HRESULT</name></type> ( <name pos:line="20487" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20487" pos:column="37">*</type:modifier><name pos:line="20487" pos:column="38">Skip</name> )<parameter_list pos:line="20487" pos:column="44">( 
            <param><decl><type><name pos:line="20488" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20488" pos:column="32">*</type:modifier></type> <name pos:line="20488" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="20489" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20489" pos:column="24">ULONG</name></type> <name pos:line="20489" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20491" pos:column="9">HRESULT</name></type> ( <name pos:line="20491" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20491" pos:column="37">*</type:modifier><name pos:line="20491" pos:column="38">Reset</name> )<parameter_list pos:line="20491" pos:column="45">( 
            <param><decl><type><name pos:line="20492" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20492" pos:column="32">*</type:modifier></type> <name pos:line="20492" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20494" pos:column="9">HRESULT</name></type> ( <name pos:line="20494" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20494" pos:column="37">*</type:modifier><name pos:line="20494" pos:column="38">Clone</name> )<parameter_list pos:line="20494" pos:column="45">( 
            <param><decl><type><name pos:line="20495" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20495" pos:column="32">*</type:modifier></type> <name pos:line="20495" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="20496" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20496" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20496" pos:column="46">IEnumDebugModules2</name> <type:modifier pos:line="20496" pos:column="65">*</type:modifier><type:modifier pos:line="20496" pos:column="66">*</type:modifier></type><name pos:line="20496" pos:column="67">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20498" pos:column="9">HRESULT</name></type> ( <name pos:line="20498" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20498" pos:column="37">*</type:modifier><name pos:line="20498" pos:column="38">GetCount</name> )<parameter_list pos:line="20498" pos:column="48">( 
            <param><decl><type><name pos:line="20499" pos:column="13">IEnumDebugModules2</name> <type:modifier pos:line="20499" pos:column="32">*</type:modifier></type> <name pos:line="20499" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="20500" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20500" pos:column="25">__RPC__out</name> <name pos:line="20500" pos:column="36">ULONG</name> <type:modifier pos:line="20500" pos:column="42">*</type:modifier></type><name pos:line="20500" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20502" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20503" pos:column="7">IEnumDebugModules2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20505" pos:column="5">interface</name></type> <name pos:line="20505" pos:column="15">IEnumDebugModules2</name>
    <argument_list pos:line="20506" pos:column="5">{
        <argument><expr><name pos:line="20507" pos:column="9">CONST_VTBL</name> struct <name pos:line="20507" pos:column="27">IEnumDebugModules2Vtbl</name> <op:operator pos:line="20507" pos:column="50">*</op:operator><name pos:line="20507" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20512" pos:column="1">#<cpp:directive pos:line="20512" pos:column="2">ifdef</cpp:directive> <name pos:line="20512" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20515" pos:column="1">#<cpp:directive pos:line="20515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20515" pos:column="9">IEnumDebugModules2_QueryInterface</name><parameter_list pos:line="20515" pos:column="42">(<param><type><name pos:line="20515" pos:column="43">This</name></type></param>,<param><type><name pos:line="20515" pos:column="48">riid</name></type></param>,<param><type><name pos:line="20515" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20516" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20518" pos:column="1">#<cpp:directive pos:line="20518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20518" pos:column="9">IEnumDebugModules2_AddRef</name><parameter_list pos:line="20518" pos:column="34">(<param><type><name pos:line="20518" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20519" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20521" pos:column="1">#<cpp:directive pos:line="20521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20521" pos:column="9">IEnumDebugModules2_Release</name><parameter_list pos:line="20521" pos:column="35">(<param><type><name pos:line="20521" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20522" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20525" pos:column="1">#<cpp:directive pos:line="20525" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20525" pos:column="9">IEnumDebugModules2_Next</name><parameter_list pos:line="20525" pos:column="32">(<param><type><name pos:line="20525" pos:column="33">This</name></type></param>,<param><type><name pos:line="20525" pos:column="38">celt</name></type></param>,<param><type><name pos:line="20525" pos:column="43">rgelt</name></type></param>,<param><type><name pos:line="20525" pos:column="49">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20526" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20528" pos:column="1">#<cpp:directive pos:line="20528" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20528" pos:column="9">IEnumDebugModules2_Skip</name><parameter_list pos:line="20528" pos:column="32">(<param><type><name pos:line="20528" pos:column="33">This</name></type></param>,<param><type><name pos:line="20528" pos:column="38">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20529" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20531" pos:column="1">#<cpp:directive pos:line="20531" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20531" pos:column="9">IEnumDebugModules2_Reset</name><parameter_list pos:line="20531" pos:column="33">(<param><type><name pos:line="20531" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20532" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20534" pos:column="1">#<cpp:directive pos:line="20534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20534" pos:column="9">IEnumDebugModules2_Clone</name><parameter_list pos:line="20534" pos:column="33">(<param><type><name pos:line="20534" pos:column="34">This</name></type></param>,<param><type><name pos:line="20534" pos:column="39">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20535" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20537" pos:column="1">#<cpp:directive pos:line="20537" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20537" pos:column="9">IEnumDebugModules2_GetCount</name><parameter_list pos:line="20537" pos:column="36">(<param><type><name pos:line="20537" pos:column="37">This</name></type></param>,<param><type><name pos:line="20537" pos:column="42">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20538" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20540" pos:column="1">#<cpp:directive pos:line="20540" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20540" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20543" pos:column="1">#<cpp:directive pos:line="20543" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20543" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20548" pos:column="1">#<cpp:directive pos:line="20548" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20548" pos:column="9">/* __IEnumDebugModules2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20551" pos:column="1">#<cpp:directive pos:line="20551" pos:column="2">ifndef</cpp:directive> <name pos:line="20551" pos:column="9">__IEnumDebugPortSuppliers2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20552" pos:column="1">#<cpp:directive pos:line="20552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20552" pos:column="9">__IEnumDebugPortSuppliers2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20554" pos:column="1">/* interface IEnumDebugPortSuppliers2 */</comment>
<comment type="block" pos:line="20555" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20558" pos:column="1">EXTERN_C</name> <specifier pos:line="20558" pos:column="10">const</specifier> <name pos:line="20558" pos:column="16">IID</name></type> <name pos:line="20558" pos:column="20">IID_IEnumDebugPortSuppliers2</name></decl>;</decl_stmt>

<cpp:if pos:line="20560" pos:column="1">#<cpp:directive pos:line="20560" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20560" pos:column="5">defined</name><argument_list pos:line="20560" pos:column="12">(<argument><expr><name pos:line="20560" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20560" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20560" pos:column="29">!</op:operator><call><name pos:line="20560" pos:column="30">defined</name><argument_list pos:line="20560" pos:column="37">(<argument><expr><name pos:line="20560" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20562" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20562" pos:column="19">(<argument pos:line="20562" pos:column="20">"59c9dc99-3eff-4ff3-b201-98acd01b0d87"</argument>)</argument_list></macro>
    <label><name pos:line="20563" pos:column="5">IEnumDebugPortSuppliers2</name> :</label> <expr_stmt><expr pos:line="20563" pos:column="32">public <name pos:line="20563" pos:column="39">IUnknown</name>
    <block pos:line="20564" pos:column="5">{
    <expr pos:line="20565" pos:column="5">public<op:operator pos:line="20565" pos:column="11">:</op:operator>
        virtual <name pos:line="20566" pos:column="17">HRESULT</name> <name pos:line="20566" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20566" pos:column="43">Next</name><argument_list pos:line="20566" pos:column="47">( 
            <comment type="block" pos:line="20567" pos:column="13">/* [in] */</comment> <argument pos:line="20567" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="20568" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="20568" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugPortSupplier2 **rgelt</argument>,
            <comment type="block" pos:line="20569" pos:column="13">/* [out][in] */</comment> <argument pos:line="20569" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="20569" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="20569" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="20571" pos:column="9">virtual <name pos:line="20571" pos:column="17">HRESULT</name> <name pos:line="20571" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20571" pos:column="43">Skip</name><argument_list pos:line="20571" pos:column="47">( 
            <comment type="block" pos:line="20572" pos:column="13">/* [in] */</comment> <argument pos:line="20572" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="20572" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="20572" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="20574" pos:column="9">virtual <name pos:line="20574" pos:column="17">HRESULT</name> <name pos:line="20574" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="20574" pos:column="43">Reset</name><argument_list pos:line="20574" pos:column="48">( <argument><expr><name pos:line="20574" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="20574" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20574" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="20576" pos:column="9">virtual <name pos:line="20576" pos:column="17">HRESULT</name> <name pos:line="20576" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20576" pos:column="43">Clone</name><argument_list pos:line="20576" pos:column="48">( 
            <comment type="block" pos:line="20577" pos:column="13">/* [out] */</comment> <argument pos:line="20577" pos:column="25">__RPC__deref_out_opt IEnumDebugPortSuppliers2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="20577" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="20577" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="20579" pos:column="9">virtual <name pos:line="20579" pos:column="17">HRESULT</name> <name pos:line="20579" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20579" pos:column="43">GetCount</name><argument_list pos:line="20579" pos:column="51">( 
            <comment type="block" pos:line="20580" pos:column="13">/* [out] */</comment> <argument pos:line="20580" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="20580" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="20580" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20584" pos:column="1">#<cpp:directive pos:line="20584" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20584" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20586" pos:column="5">typedef <type><struct pos:line="20586" pos:column="13">struct <name pos:line="20586" pos:column="20">IEnumDebugPortSuppliers2Vtbl</name>
    <block pos:line="20587" pos:column="5">{<public type="default" pos:line="20587" pos:column="6">
        <function_decl><type><name pos:line="20588" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20590" pos:column="9">HRESULT</name></type> ( <name pos:line="20590" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20590" pos:column="37">*</type:modifier><name pos:line="20590" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20590" pos:column="54">( 
            <param><decl><type><name pos:line="20591" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20591" pos:column="38">*</type:modifier></type> <name pos:line="20591" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20592" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20592" pos:column="24">__RPC__in</name> <name pos:line="20592" pos:column="34">REFIID</name></type> <name pos:line="20592" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20593" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20594" pos:column="13">__RPC__deref_out</name>  <name pos:line="20594" pos:column="31">void</name> <type:modifier pos:line="20594" pos:column="36">*</type:modifier><type:modifier pos:line="20594" pos:column="37">*</type:modifier></type><name pos:line="20594" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20596" pos:column="9">ULONG</name></type> ( <name pos:line="20596" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20596" pos:column="35">*</type:modifier><name pos:line="20596" pos:column="36">AddRef</name> )<parameter_list pos:line="20596" pos:column="44">( 
            <param><decl><type><name pos:line="20597" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20597" pos:column="38">*</type:modifier></type> <name pos:line="20597" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20599" pos:column="9">ULONG</name></type> ( <name pos:line="20599" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20599" pos:column="35">*</type:modifier><name pos:line="20599" pos:column="36">Release</name> )<parameter_list pos:line="20599" pos:column="45">( 
            <param><decl><type><name pos:line="20600" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20600" pos:column="38">*</type:modifier></type> <name pos:line="20600" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20602" pos:column="9">HRESULT</name> <argument_list pos:line="20602" pos:column="17">( <argument pos:line="20602" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20602" pos:column="44">(</op:operator> 
            <name pos:line="20603" pos:column="13">IEnumDebugPortSuppliers2</name> <op:operator pos:line="20603" pos:column="38">*</op:operator> <name pos:line="20603" pos:column="40">This</name><op:operator pos:line="20603" pos:column="44">,</op:operator>
            <comment type="block" pos:line="20604" pos:column="13">/* [in] */</comment> <name pos:line="20604" pos:column="24">ULONG</name> <name pos:line="20604" pos:column="30">celt</name><op:operator pos:line="20604" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20605" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20605" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20605" pos:column="67">(<argument pos:line="20605" pos:column="68">celt</argument>, <argument pos:line="20605" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20605" pos:column="89">IDebugPortSupplier2</name> <op:operator pos:line="20605" pos:column="109">*</op:operator><op:operator pos:line="20605" pos:column="110">*</op:operator><name pos:line="20605" pos:column="111">rgelt</name><op:operator pos:line="20605" pos:column="116">,</op:operator>
            <comment type="block" pos:line="20606" pos:column="13">/* [out][in] */</comment> <name pos:line="20606" pos:column="29">__RPC__inout</name> <name pos:line="20606" pos:column="42">ULONG</name> <op:operator pos:line="20606" pos:column="48">*</op:operator><name pos:line="20606" pos:column="49">pceltFetched</name><op:operator pos:line="20606" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20608" pos:column="9">HRESULT</name></type> ( <name pos:line="20608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20608" pos:column="37">*</type:modifier><name pos:line="20608" pos:column="38">Skip</name> )<parameter_list pos:line="20608" pos:column="44">( 
            <param><decl><type><name pos:line="20609" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20609" pos:column="38">*</type:modifier></type> <name pos:line="20609" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20610" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20610" pos:column="24">ULONG</name></type> <name pos:line="20610" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20612" pos:column="9">HRESULT</name></type> ( <name pos:line="20612" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20612" pos:column="37">*</type:modifier><name pos:line="20612" pos:column="38">Reset</name> )<parameter_list pos:line="20612" pos:column="45">( 
            <param><decl><type><name pos:line="20613" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20613" pos:column="38">*</type:modifier></type> <name pos:line="20613" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20615" pos:column="9">HRESULT</name></type> ( <name pos:line="20615" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20615" pos:column="37">*</type:modifier><name pos:line="20615" pos:column="38">Clone</name> )<parameter_list pos:line="20615" pos:column="45">( 
            <param><decl><type><name pos:line="20616" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20616" pos:column="38">*</type:modifier></type> <name pos:line="20616" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20617" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20617" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20617" pos:column="46">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20617" pos:column="71">*</type:modifier><type:modifier pos:line="20617" pos:column="72">*</type:modifier></type><name pos:line="20617" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20619" pos:column="9">HRESULT</name></type> ( <name pos:line="20619" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20619" pos:column="37">*</type:modifier><name pos:line="20619" pos:column="38">GetCount</name> )<parameter_list pos:line="20619" pos:column="48">( 
            <param><decl><type><name pos:line="20620" pos:column="13">IEnumDebugPortSuppliers2</name> <type:modifier pos:line="20620" pos:column="38">*</type:modifier></type> <name pos:line="20620" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20621" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20621" pos:column="25">__RPC__out</name> <name pos:line="20621" pos:column="36">ULONG</name> <type:modifier pos:line="20621" pos:column="42">*</type:modifier></type><name pos:line="20621" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20623" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20624" pos:column="7">IEnumDebugPortSuppliers2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20626" pos:column="5">interface</name></type> <name pos:line="20626" pos:column="15">IEnumDebugPortSuppliers2</name>
    <argument_list pos:line="20627" pos:column="5">{
        <argument><expr><name pos:line="20628" pos:column="9">CONST_VTBL</name> struct <name pos:line="20628" pos:column="27">IEnumDebugPortSuppliers2Vtbl</name> <op:operator pos:line="20628" pos:column="56">*</op:operator><name pos:line="20628" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20633" pos:column="1">#<cpp:directive pos:line="20633" pos:column="2">ifdef</cpp:directive> <name pos:line="20633" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20636" pos:column="1">#<cpp:directive pos:line="20636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20636" pos:column="9">IEnumDebugPortSuppliers2_QueryInterface</name><parameter_list pos:line="20636" pos:column="48">(<param><type><name pos:line="20636" pos:column="49">This</name></type></param>,<param><type><name pos:line="20636" pos:column="54">riid</name></type></param>,<param><type><name pos:line="20636" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20637" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20639" pos:column="1">#<cpp:directive pos:line="20639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20639" pos:column="9">IEnumDebugPortSuppliers2_AddRef</name><parameter_list pos:line="20639" pos:column="40">(<param><type><name pos:line="20639" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20640" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20642" pos:column="1">#<cpp:directive pos:line="20642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20642" pos:column="9">IEnumDebugPortSuppliers2_Release</name><parameter_list pos:line="20642" pos:column="41">(<param><type><name pos:line="20642" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20643" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20646" pos:column="1">#<cpp:directive pos:line="20646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20646" pos:column="9">IEnumDebugPortSuppliers2_Next</name><parameter_list pos:line="20646" pos:column="38">(<param><type><name pos:line="20646" pos:column="39">This</name></type></param>,<param><type><name pos:line="20646" pos:column="44">celt</name></type></param>,<param><type><name pos:line="20646" pos:column="49">rgelt</name></type></param>,<param><type><name pos:line="20646" pos:column="55">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20647" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20649" pos:column="1">#<cpp:directive pos:line="20649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20649" pos:column="9">IEnumDebugPortSuppliers2_Skip</name><parameter_list pos:line="20649" pos:column="38">(<param><type><name pos:line="20649" pos:column="39">This</name></type></param>,<param><type><name pos:line="20649" pos:column="44">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20650" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20652" pos:column="1">#<cpp:directive pos:line="20652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20652" pos:column="9">IEnumDebugPortSuppliers2_Reset</name><parameter_list pos:line="20652" pos:column="39">(<param><type><name pos:line="20652" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20653" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20655" pos:column="1">#<cpp:directive pos:line="20655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20655" pos:column="9">IEnumDebugPortSuppliers2_Clone</name><parameter_list pos:line="20655" pos:column="39">(<param><type><name pos:line="20655" pos:column="40">This</name></type></param>,<param><type><name pos:line="20655" pos:column="45">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20656" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20658" pos:column="1">#<cpp:directive pos:line="20658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20658" pos:column="9">IEnumDebugPortSuppliers2_GetCount</name><parameter_list pos:line="20658" pos:column="42">(<param><type><name pos:line="20658" pos:column="43">This</name></type></param>,<param><type><name pos:line="20658" pos:column="48">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20659" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20661" pos:column="1">#<cpp:directive pos:line="20661" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20661" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20664" pos:column="1">#<cpp:directive pos:line="20664" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20664" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20669" pos:column="1">#<cpp:directive pos:line="20669" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20669" pos:column="9">/* __IEnumDebugPortSuppliers2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20672" pos:column="1">#<cpp:directive pos:line="20672" pos:column="2">ifndef</cpp:directive> <name pos:line="20672" pos:column="9">__IEnumDebugPorts2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20673" pos:column="1">#<cpp:directive pos:line="20673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20673" pos:column="9">__IEnumDebugPorts2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20675" pos:column="1">/* interface IEnumDebugPorts2 */</comment>
<comment type="block" pos:line="20676" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20679" pos:column="1">EXTERN_C</name> <specifier pos:line="20679" pos:column="10">const</specifier> <name pos:line="20679" pos:column="16">IID</name></type> <name pos:line="20679" pos:column="20">IID_IEnumDebugPorts2</name></decl>;</decl_stmt>

<cpp:if pos:line="20681" pos:column="1">#<cpp:directive pos:line="20681" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20681" pos:column="5">defined</name><argument_list pos:line="20681" pos:column="12">(<argument><expr><name pos:line="20681" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20681" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20681" pos:column="29">!</op:operator><call><name pos:line="20681" pos:column="30">defined</name><argument_list pos:line="20681" pos:column="37">(<argument><expr><name pos:line="20681" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20683" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20683" pos:column="19">(<argument pos:line="20683" pos:column="20">"bc827c5e-99ae-4ac8-83ad-2ea5c2034333"</argument>)</argument_list></macro>
    <label><name pos:line="20684" pos:column="5">IEnumDebugPorts2</name> :</label> <expr_stmt><expr pos:line="20684" pos:column="24">public <name pos:line="20684" pos:column="31">IUnknown</name>
    <block pos:line="20685" pos:column="5">{
    <expr pos:line="20686" pos:column="5">public<op:operator pos:line="20686" pos:column="11">:</op:operator>
        virtual <name pos:line="20687" pos:column="17">HRESULT</name> <name pos:line="20687" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20687" pos:column="43">Next</name><argument_list pos:line="20687" pos:column="47">( 
            <comment type="block" pos:line="20688" pos:column="13">/* [in] */</comment> <argument pos:line="20688" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="20689" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="20689" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugPort2 **rgelt</argument>,
            <comment type="block" pos:line="20690" pos:column="13">/* [out][in] */</comment> <argument pos:line="20690" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="20690" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="20690" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="20692" pos:column="9">virtual <name pos:line="20692" pos:column="17">HRESULT</name> <name pos:line="20692" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20692" pos:column="43">Skip</name><argument_list pos:line="20692" pos:column="47">( 
            <comment type="block" pos:line="20693" pos:column="13">/* [in] */</comment> <argument pos:line="20693" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="20693" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="20693" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="20695" pos:column="9">virtual <name pos:line="20695" pos:column="17">HRESULT</name> <name pos:line="20695" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="20695" pos:column="43">Reset</name><argument_list pos:line="20695" pos:column="48">( <argument><expr><name pos:line="20695" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="20695" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20695" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="20697" pos:column="9">virtual <name pos:line="20697" pos:column="17">HRESULT</name> <name pos:line="20697" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20697" pos:column="43">Clone</name><argument_list pos:line="20697" pos:column="48">( 
            <comment type="block" pos:line="20698" pos:column="13">/* [out] */</comment> <argument pos:line="20698" pos:column="25">__RPC__deref_out_opt IEnumDebugPorts2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="20698" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="20698" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="20700" pos:column="9">virtual <name pos:line="20700" pos:column="17">HRESULT</name> <name pos:line="20700" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20700" pos:column="43">GetCount</name><argument_list pos:line="20700" pos:column="51">( 
            <comment type="block" pos:line="20701" pos:column="13">/* [out] */</comment> <argument pos:line="20701" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="20701" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="20701" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20705" pos:column="1">#<cpp:directive pos:line="20705" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20705" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20707" pos:column="5">typedef <type><struct pos:line="20707" pos:column="13">struct <name pos:line="20707" pos:column="20">IEnumDebugPorts2Vtbl</name>
    <block pos:line="20708" pos:column="5">{<public type="default" pos:line="20708" pos:column="6">
        <function_decl><type><name pos:line="20709" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20711" pos:column="9">HRESULT</name></type> ( <name pos:line="20711" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20711" pos:column="37">*</type:modifier><name pos:line="20711" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20711" pos:column="54">( 
            <param><decl><type><name pos:line="20712" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20712" pos:column="30">*</type:modifier></type> <name pos:line="20712" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="20713" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20713" pos:column="24">__RPC__in</name> <name pos:line="20713" pos:column="34">REFIID</name></type> <name pos:line="20713" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20714" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20715" pos:column="13">__RPC__deref_out</name>  <name pos:line="20715" pos:column="31">void</name> <type:modifier pos:line="20715" pos:column="36">*</type:modifier><type:modifier pos:line="20715" pos:column="37">*</type:modifier></type><name pos:line="20715" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20717" pos:column="9">ULONG</name></type> ( <name pos:line="20717" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20717" pos:column="35">*</type:modifier><name pos:line="20717" pos:column="36">AddRef</name> )<parameter_list pos:line="20717" pos:column="44">( 
            <param><decl><type><name pos:line="20718" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20718" pos:column="30">*</type:modifier></type> <name pos:line="20718" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20720" pos:column="9">ULONG</name></type> ( <name pos:line="20720" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20720" pos:column="35">*</type:modifier><name pos:line="20720" pos:column="36">Release</name> )<parameter_list pos:line="20720" pos:column="45">( 
            <param><decl><type><name pos:line="20721" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20721" pos:column="30">*</type:modifier></type> <name pos:line="20721" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20723" pos:column="9">HRESULT</name> <argument_list pos:line="20723" pos:column="17">( <argument pos:line="20723" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20723" pos:column="44">(</op:operator> 
            <name pos:line="20724" pos:column="13">IEnumDebugPorts2</name> <op:operator pos:line="20724" pos:column="30">*</op:operator> <name pos:line="20724" pos:column="32">This</name><op:operator pos:line="20724" pos:column="36">,</op:operator>
            <comment type="block" pos:line="20725" pos:column="13">/* [in] */</comment> <name pos:line="20725" pos:column="24">ULONG</name> <name pos:line="20725" pos:column="30">celt</name><op:operator pos:line="20725" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20726" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20726" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20726" pos:column="67">(<argument pos:line="20726" pos:column="68">celt</argument>, <argument pos:line="20726" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20726" pos:column="89">IDebugPort2</name> <op:operator pos:line="20726" pos:column="101">*</op:operator><op:operator pos:line="20726" pos:column="102">*</op:operator><name pos:line="20726" pos:column="103">rgelt</name><op:operator pos:line="20726" pos:column="108">,</op:operator>
            <comment type="block" pos:line="20727" pos:column="13">/* [out][in] */</comment> <name pos:line="20727" pos:column="29">__RPC__inout</name> <name pos:line="20727" pos:column="42">ULONG</name> <op:operator pos:line="20727" pos:column="48">*</op:operator><name pos:line="20727" pos:column="49">pceltFetched</name><op:operator pos:line="20727" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20729" pos:column="9">HRESULT</name></type> ( <name pos:line="20729" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20729" pos:column="37">*</type:modifier><name pos:line="20729" pos:column="38">Skip</name> )<parameter_list pos:line="20729" pos:column="44">( 
            <param><decl><type><name pos:line="20730" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20730" pos:column="30">*</type:modifier></type> <name pos:line="20730" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="20731" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20731" pos:column="24">ULONG</name></type> <name pos:line="20731" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20733" pos:column="9">HRESULT</name></type> ( <name pos:line="20733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20733" pos:column="37">*</type:modifier><name pos:line="20733" pos:column="38">Reset</name> )<parameter_list pos:line="20733" pos:column="45">( 
            <param><decl><type><name pos:line="20734" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20734" pos:column="30">*</type:modifier></type> <name pos:line="20734" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20736" pos:column="9">HRESULT</name></type> ( <name pos:line="20736" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20736" pos:column="37">*</type:modifier><name pos:line="20736" pos:column="38">Clone</name> )<parameter_list pos:line="20736" pos:column="45">( 
            <param><decl><type><name pos:line="20737" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20737" pos:column="30">*</type:modifier></type> <name pos:line="20737" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="20738" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20738" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20738" pos:column="46">IEnumDebugPorts2</name> <type:modifier pos:line="20738" pos:column="63">*</type:modifier><type:modifier pos:line="20738" pos:column="64">*</type:modifier></type><name pos:line="20738" pos:column="65">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20740" pos:column="9">HRESULT</name></type> ( <name pos:line="20740" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20740" pos:column="37">*</type:modifier><name pos:line="20740" pos:column="38">GetCount</name> )<parameter_list pos:line="20740" pos:column="48">( 
            <param><decl><type><name pos:line="20741" pos:column="13">IEnumDebugPorts2</name> <type:modifier pos:line="20741" pos:column="30">*</type:modifier></type> <name pos:line="20741" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="20742" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20742" pos:column="25">__RPC__out</name> <name pos:line="20742" pos:column="36">ULONG</name> <type:modifier pos:line="20742" pos:column="42">*</type:modifier></type><name pos:line="20742" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20744" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20745" pos:column="7">IEnumDebugPorts2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20747" pos:column="5">interface</name></type> <name pos:line="20747" pos:column="15">IEnumDebugPorts2</name>
    <argument_list pos:line="20748" pos:column="5">{
        <argument><expr><name pos:line="20749" pos:column="9">CONST_VTBL</name> struct <name pos:line="20749" pos:column="27">IEnumDebugPorts2Vtbl</name> <op:operator pos:line="20749" pos:column="48">*</op:operator><name pos:line="20749" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20754" pos:column="1">#<cpp:directive pos:line="20754" pos:column="2">ifdef</cpp:directive> <name pos:line="20754" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20757" pos:column="1">#<cpp:directive pos:line="20757" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20757" pos:column="9">IEnumDebugPorts2_QueryInterface</name><parameter_list pos:line="20757" pos:column="40">(<param><type><name pos:line="20757" pos:column="41">This</name></type></param>,<param><type><name pos:line="20757" pos:column="46">riid</name></type></param>,<param><type><name pos:line="20757" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20758" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20760" pos:column="1">#<cpp:directive pos:line="20760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20760" pos:column="9">IEnumDebugPorts2_AddRef</name><parameter_list pos:line="20760" pos:column="32">(<param><type><name pos:line="20760" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20761" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20763" pos:column="1">#<cpp:directive pos:line="20763" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20763" pos:column="9">IEnumDebugPorts2_Release</name><parameter_list pos:line="20763" pos:column="33">(<param><type><name pos:line="20763" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20764" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20767" pos:column="1">#<cpp:directive pos:line="20767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20767" pos:column="9">IEnumDebugPorts2_Next</name><parameter_list pos:line="20767" pos:column="30">(<param><type><name pos:line="20767" pos:column="31">This</name></type></param>,<param><type><name pos:line="20767" pos:column="36">celt</name></type></param>,<param><type><name pos:line="20767" pos:column="41">rgelt</name></type></param>,<param><type><name pos:line="20767" pos:column="47">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20768" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20770" pos:column="1">#<cpp:directive pos:line="20770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20770" pos:column="9">IEnumDebugPorts2_Skip</name><parameter_list pos:line="20770" pos:column="30">(<param><type><name pos:line="20770" pos:column="31">This</name></type></param>,<param><type><name pos:line="20770" pos:column="36">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20771" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20773" pos:column="1">#<cpp:directive pos:line="20773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20773" pos:column="9">IEnumDebugPorts2_Reset</name><parameter_list pos:line="20773" pos:column="31">(<param><type><name pos:line="20773" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20774" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20776" pos:column="1">#<cpp:directive pos:line="20776" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20776" pos:column="9">IEnumDebugPorts2_Clone</name><parameter_list pos:line="20776" pos:column="31">(<param><type><name pos:line="20776" pos:column="32">This</name></type></param>,<param><type><name pos:line="20776" pos:column="37">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20777" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20779" pos:column="1">#<cpp:directive pos:line="20779" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20779" pos:column="9">IEnumDebugPorts2_GetCount</name><parameter_list pos:line="20779" pos:column="34">(<param><type><name pos:line="20779" pos:column="35">This</name></type></param>,<param><type><name pos:line="20779" pos:column="40">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20780" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20782" pos:column="1">#<cpp:directive pos:line="20782" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20782" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20785" pos:column="1">#<cpp:directive pos:line="20785" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20785" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20790" pos:column="1">#<cpp:directive pos:line="20790" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20790" pos:column="9">/* __IEnumDebugPorts2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20793" pos:column="1">#<cpp:directive pos:line="20793" pos:column="2">ifndef</cpp:directive> <name pos:line="20793" pos:column="9">__IEnumDebugPropertyInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20794" pos:column="1">#<cpp:directive pos:line="20794" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20794" pos:column="9">__IEnumDebugPropertyInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20796" pos:column="1">/* interface IEnumDebugPropertyInfo2 */</comment>
<comment type="block" pos:line="20797" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20800" pos:column="1">EXTERN_C</name> <specifier pos:line="20800" pos:column="10">const</specifier> <name pos:line="20800" pos:column="16">IID</name></type> <name pos:line="20800" pos:column="20">IID_IEnumDebugPropertyInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="20802" pos:column="1">#<cpp:directive pos:line="20802" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20802" pos:column="5">defined</name><argument_list pos:line="20802" pos:column="12">(<argument><expr><name pos:line="20802" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20802" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20802" pos:column="29">!</op:operator><call><name pos:line="20802" pos:column="30">defined</name><argument_list pos:line="20802" pos:column="37">(<argument><expr><name pos:line="20802" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20804" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20804" pos:column="19">(<argument pos:line="20804" pos:column="20">"6c7072c3-3ac4-408f-a680-fc5a2f96903e"</argument>)</argument_list></macro>
    <label><name pos:line="20805" pos:column="5">IEnumDebugPropertyInfo2</name> :</label> <expr_stmt><expr pos:line="20805" pos:column="31">public <name pos:line="20805" pos:column="38">IUnknown</name>
    <block pos:line="20806" pos:column="5">{
    <expr pos:line="20807" pos:column="5">public<op:operator pos:line="20807" pos:column="11">:</op:operator>
        virtual <name pos:line="20808" pos:column="17">HRESULT</name> <name pos:line="20808" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20808" pos:column="43">Next</name><argument_list pos:line="20808" pos:column="47">( 
            <comment type="block" pos:line="20809" pos:column="13">/* [in] */</comment> <argument pos:line="20809" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="20810" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="20810" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) DEBUG_PROPERTY_INFO *rgelt</argument>,
            <comment type="block" pos:line="20811" pos:column="13">/* [out] */</comment> <argument pos:line="20811" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="20811" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="20811" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="20813" pos:column="9">virtual <name pos:line="20813" pos:column="17">HRESULT</name> <name pos:line="20813" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20813" pos:column="43">Skip</name><argument_list pos:line="20813" pos:column="47">( 
            <comment type="block" pos:line="20814" pos:column="13">/* [in] */</comment> <argument pos:line="20814" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="20814" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="20814" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="20816" pos:column="9">virtual <name pos:line="20816" pos:column="17">HRESULT</name> <name pos:line="20816" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="20816" pos:column="43">Reset</name><argument_list pos:line="20816" pos:column="48">( <argument><expr><name pos:line="20816" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="20816" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20816" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="20818" pos:column="9">virtual <name pos:line="20818" pos:column="17">HRESULT</name> <name pos:line="20818" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20818" pos:column="43">Clone</name><argument_list pos:line="20818" pos:column="48">( 
            <comment type="block" pos:line="20819" pos:column="13">/* [out] */</comment> <argument pos:line="20819" pos:column="25">__RPC__deref_out_opt IEnumDebugPropertyInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="20819" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="20819" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="20821" pos:column="9">virtual <name pos:line="20821" pos:column="17">HRESULT</name> <name pos:line="20821" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20821" pos:column="43">GetCount</name><argument_list pos:line="20821" pos:column="51">( 
            <comment type="block" pos:line="20822" pos:column="13">/* [out] */</comment> <argument pos:line="20822" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="20822" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="20822" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20826" pos:column="1">#<cpp:directive pos:line="20826" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20826" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20828" pos:column="5">typedef <type><struct pos:line="20828" pos:column="13">struct <name pos:line="20828" pos:column="20">IEnumDebugPropertyInfo2Vtbl</name>
    <block pos:line="20829" pos:column="5">{<public type="default" pos:line="20829" pos:column="6">
        <function_decl><type><name pos:line="20830" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20832" pos:column="9">HRESULT</name></type> ( <name pos:line="20832" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20832" pos:column="37">*</type:modifier><name pos:line="20832" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20832" pos:column="54">( 
            <param><decl><type><name pos:line="20833" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20833" pos:column="37">*</type:modifier></type> <name pos:line="20833" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="20834" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20834" pos:column="24">__RPC__in</name> <name pos:line="20834" pos:column="34">REFIID</name></type> <name pos:line="20834" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20835" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20836" pos:column="13">__RPC__deref_out</name>  <name pos:line="20836" pos:column="31">void</name> <type:modifier pos:line="20836" pos:column="36">*</type:modifier><type:modifier pos:line="20836" pos:column="37">*</type:modifier></type><name pos:line="20836" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20838" pos:column="9">ULONG</name></type> ( <name pos:line="20838" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20838" pos:column="35">*</type:modifier><name pos:line="20838" pos:column="36">AddRef</name> )<parameter_list pos:line="20838" pos:column="44">( 
            <param><decl><type><name pos:line="20839" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20839" pos:column="37">*</type:modifier></type> <name pos:line="20839" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20841" pos:column="9">ULONG</name></type> ( <name pos:line="20841" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20841" pos:column="35">*</type:modifier><name pos:line="20841" pos:column="36">Release</name> )<parameter_list pos:line="20841" pos:column="45">( 
            <param><decl><type><name pos:line="20842" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20842" pos:column="37">*</type:modifier></type> <name pos:line="20842" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20844" pos:column="9">HRESULT</name> <argument_list pos:line="20844" pos:column="17">( <argument pos:line="20844" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20844" pos:column="44">(</op:operator> 
            <name pos:line="20845" pos:column="13">IEnumDebugPropertyInfo2</name> <op:operator pos:line="20845" pos:column="37">*</op:operator> <name pos:line="20845" pos:column="39">This</name><op:operator pos:line="20845" pos:column="43">,</op:operator>
            <comment type="block" pos:line="20846" pos:column="13">/* [in] */</comment> <name pos:line="20846" pos:column="24">ULONG</name> <name pos:line="20846" pos:column="30">celt</name><op:operator pos:line="20846" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20847" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20847" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20847" pos:column="67">(<argument pos:line="20847" pos:column="68">celt</argument>, <argument pos:line="20847" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20847" pos:column="89">DEBUG_PROPERTY_INFO</name> <op:operator pos:line="20847" pos:column="109">*</op:operator><name pos:line="20847" pos:column="110">rgelt</name><op:operator pos:line="20847" pos:column="115">,</op:operator>
            <comment type="block" pos:line="20848" pos:column="13">/* [out] */</comment> <name pos:line="20848" pos:column="25">__RPC__out</name> <name pos:line="20848" pos:column="36">ULONG</name> <op:operator pos:line="20848" pos:column="42">*</op:operator><name pos:line="20848" pos:column="43">pceltFetched</name><op:operator pos:line="20848" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20850" pos:column="9">HRESULT</name></type> ( <name pos:line="20850" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20850" pos:column="37">*</type:modifier><name pos:line="20850" pos:column="38">Skip</name> )<parameter_list pos:line="20850" pos:column="44">( 
            <param><decl><type><name pos:line="20851" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20851" pos:column="37">*</type:modifier></type> <name pos:line="20851" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="20852" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20852" pos:column="24">ULONG</name></type> <name pos:line="20852" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20854" pos:column="9">HRESULT</name></type> ( <name pos:line="20854" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20854" pos:column="37">*</type:modifier><name pos:line="20854" pos:column="38">Reset</name> )<parameter_list pos:line="20854" pos:column="45">( 
            <param><decl><type><name pos:line="20855" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20855" pos:column="37">*</type:modifier></type> <name pos:line="20855" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20857" pos:column="9">HRESULT</name></type> ( <name pos:line="20857" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20857" pos:column="37">*</type:modifier><name pos:line="20857" pos:column="38">Clone</name> )<parameter_list pos:line="20857" pos:column="45">( 
            <param><decl><type><name pos:line="20858" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20858" pos:column="37">*</type:modifier></type> <name pos:line="20858" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="20859" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20859" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20859" pos:column="46">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20859" pos:column="70">*</type:modifier><type:modifier pos:line="20859" pos:column="71">*</type:modifier></type><name pos:line="20859" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20861" pos:column="9">HRESULT</name></type> ( <name pos:line="20861" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20861" pos:column="37">*</type:modifier><name pos:line="20861" pos:column="38">GetCount</name> )<parameter_list pos:line="20861" pos:column="48">( 
            <param><decl><type><name pos:line="20862" pos:column="13">IEnumDebugPropertyInfo2</name> <type:modifier pos:line="20862" pos:column="37">*</type:modifier></type> <name pos:line="20862" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="20863" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20863" pos:column="25">__RPC__out</name> <name pos:line="20863" pos:column="36">ULONG</name> <type:modifier pos:line="20863" pos:column="42">*</type:modifier></type><name pos:line="20863" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20865" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20866" pos:column="7">IEnumDebugPropertyInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20868" pos:column="5">interface</name></type> <name pos:line="20868" pos:column="15">IEnumDebugPropertyInfo2</name>
    <argument_list pos:line="20869" pos:column="5">{
        <argument><expr><name pos:line="20870" pos:column="9">CONST_VTBL</name> struct <name pos:line="20870" pos:column="27">IEnumDebugPropertyInfo2Vtbl</name> <op:operator pos:line="20870" pos:column="55">*</op:operator><name pos:line="20870" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20875" pos:column="1">#<cpp:directive pos:line="20875" pos:column="2">ifdef</cpp:directive> <name pos:line="20875" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20878" pos:column="1">#<cpp:directive pos:line="20878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20878" pos:column="9">IEnumDebugPropertyInfo2_QueryInterface</name><parameter_list pos:line="20878" pos:column="47">(<param><type><name pos:line="20878" pos:column="48">This</name></type></param>,<param><type><name pos:line="20878" pos:column="53">riid</name></type></param>,<param><type><name pos:line="20878" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20879" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="20881" pos:column="1">#<cpp:directive pos:line="20881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20881" pos:column="9">IEnumDebugPropertyInfo2_AddRef</name><parameter_list pos:line="20881" pos:column="39">(<param><type><name pos:line="20881" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20882" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20884" pos:column="1">#<cpp:directive pos:line="20884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20884" pos:column="9">IEnumDebugPropertyInfo2_Release</name><parameter_list pos:line="20884" pos:column="40">(<param><type><name pos:line="20884" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20885" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="20888" pos:column="1">#<cpp:directive pos:line="20888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20888" pos:column="9">IEnumDebugPropertyInfo2_Next</name><parameter_list pos:line="20888" pos:column="37">(<param><type><name pos:line="20888" pos:column="38">This</name></type></param>,<param><type><name pos:line="20888" pos:column="43">celt</name></type></param>,<param><type><name pos:line="20888" pos:column="48">rgelt</name></type></param>,<param><type><name pos:line="20888" pos:column="54">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20889" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="20891" pos:column="1">#<cpp:directive pos:line="20891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20891" pos:column="9">IEnumDebugPropertyInfo2_Skip</name><parameter_list pos:line="20891" pos:column="37">(<param><type><name pos:line="20891" pos:column="38">This</name></type></param>,<param><type><name pos:line="20891" pos:column="43">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20892" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="20894" pos:column="1">#<cpp:directive pos:line="20894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20894" pos:column="9">IEnumDebugPropertyInfo2_Reset</name><parameter_list pos:line="20894" pos:column="38">(<param><type><name pos:line="20894" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20895" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="20897" pos:column="1">#<cpp:directive pos:line="20897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20897" pos:column="9">IEnumDebugPropertyInfo2_Clone</name><parameter_list pos:line="20897" pos:column="38">(<param><type><name pos:line="20897" pos:column="39">This</name></type></param>,<param><type><name pos:line="20897" pos:column="44">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20898" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="20900" pos:column="1">#<cpp:directive pos:line="20900" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20900" pos:column="9">IEnumDebugPropertyInfo2_GetCount</name><parameter_list pos:line="20900" pos:column="41">(<param><type><name pos:line="20900" pos:column="42">This</name></type></param>,<param><type><name pos:line="20900" pos:column="47">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="20901" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="20903" pos:column="1">#<cpp:directive pos:line="20903" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="20903" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="20906" pos:column="1">#<cpp:directive pos:line="20906" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20906" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="20911" pos:column="1">#<cpp:directive pos:line="20911" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="20911" pos:column="9">/* __IEnumDebugPropertyInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="20914" pos:column="1">#<cpp:directive pos:line="20914" pos:column="2">ifndef</cpp:directive> <name pos:line="20914" pos:column="9">__IEnumDebugReferenceInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="20915" pos:column="1">#<cpp:directive pos:line="20915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20915" pos:column="9">__IEnumDebugReferenceInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="20917" pos:column="1">/* interface IEnumDebugReferenceInfo2 */</comment>
<comment type="block" pos:line="20918" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="20921" pos:column="1">EXTERN_C</name> <specifier pos:line="20921" pos:column="10">const</specifier> <name pos:line="20921" pos:column="16">IID</name></type> <name pos:line="20921" pos:column="20">IID_IEnumDebugReferenceInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="20923" pos:column="1">#<cpp:directive pos:line="20923" pos:column="2">if</cpp:directive> <expr><call><name pos:line="20923" pos:column="5">defined</name><argument_list pos:line="20923" pos:column="12">(<argument><expr><name pos:line="20923" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="20923" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="20923" pos:column="29">!</op:operator><call><name pos:line="20923" pos:column="30">defined</name><argument_list pos:line="20923" pos:column="37">(<argument><expr><name pos:line="20923" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="20925" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="20925" pos:column="19">(<argument pos:line="20925" pos:column="20">"e459dd12-864f-4aaa-abc1-dcecbc267f04"</argument>)</argument_list></macro>
    <label><name pos:line="20926" pos:column="5">IEnumDebugReferenceInfo2</name> :</label> <expr_stmt><expr pos:line="20926" pos:column="32">public <name pos:line="20926" pos:column="39">IUnknown</name>
    <block pos:line="20927" pos:column="5">{
    <expr pos:line="20928" pos:column="5">public<op:operator pos:line="20928" pos:column="11">:</op:operator>
        virtual <name pos:line="20929" pos:column="17">HRESULT</name> <name pos:line="20929" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20929" pos:column="43">Next</name><argument_list pos:line="20929" pos:column="47">( 
            <comment type="block" pos:line="20930" pos:column="13">/* [in] */</comment> <argument pos:line="20930" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="20931" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="20931" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) DEBUG_REFERENCE_INFO *rgelt</argument>,
            <comment type="block" pos:line="20932" pos:column="13">/* [out] */</comment> <argument pos:line="20932" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="20932" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="20932" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="20934" pos:column="9">virtual <name pos:line="20934" pos:column="17">HRESULT</name> <name pos:line="20934" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20934" pos:column="43">Skip</name><argument_list pos:line="20934" pos:column="47">( 
            <comment type="block" pos:line="20935" pos:column="13">/* [in] */</comment> <argument pos:line="20935" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="20935" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="20935" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="20937" pos:column="9">virtual <name pos:line="20937" pos:column="17">HRESULT</name> <name pos:line="20937" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="20937" pos:column="43">Reset</name><argument_list pos:line="20937" pos:column="48">( <argument><expr><name pos:line="20937" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="20937" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="20937" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="20939" pos:column="9">virtual <name pos:line="20939" pos:column="17">HRESULT</name> <name pos:line="20939" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20939" pos:column="43">Clone</name><argument_list pos:line="20939" pos:column="48">( 
            <comment type="block" pos:line="20940" pos:column="13">/* [out] */</comment> <argument pos:line="20940" pos:column="25">__RPC__deref_out_opt IEnumDebugReferenceInfo2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="20940" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="20940" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="20942" pos:column="9">virtual <name pos:line="20942" pos:column="17">HRESULT</name> <name pos:line="20942" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="20942" pos:column="43">GetCount</name><argument_list pos:line="20942" pos:column="51">( 
            <comment type="block" pos:line="20943" pos:column="13">/* [out] */</comment> <argument pos:line="20943" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="20943" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="20943" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="20947" pos:column="1">#<cpp:directive pos:line="20947" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="20947" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="20949" pos:column="5">typedef <type><struct pos:line="20949" pos:column="13">struct <name pos:line="20949" pos:column="20">IEnumDebugReferenceInfo2Vtbl</name>
    <block pos:line="20950" pos:column="5">{<public type="default" pos:line="20950" pos:column="6">
        <function_decl><type><name pos:line="20951" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="20953" pos:column="9">HRESULT</name></type> ( <name pos:line="20953" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20953" pos:column="37">*</type:modifier><name pos:line="20953" pos:column="38">QueryInterface</name> )<parameter_list pos:line="20953" pos:column="54">( 
            <param><decl><type><name pos:line="20954" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20954" pos:column="38">*</type:modifier></type> <name pos:line="20954" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20955" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20955" pos:column="24">__RPC__in</name> <name pos:line="20955" pos:column="34">REFIID</name></type> <name pos:line="20955" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="20956" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="20957" pos:column="13">__RPC__deref_out</name>  <name pos:line="20957" pos:column="31">void</name> <type:modifier pos:line="20957" pos:column="36">*</type:modifier><type:modifier pos:line="20957" pos:column="37">*</type:modifier></type><name pos:line="20957" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20959" pos:column="9">ULONG</name></type> ( <name pos:line="20959" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20959" pos:column="35">*</type:modifier><name pos:line="20959" pos:column="36">AddRef</name> )<parameter_list pos:line="20959" pos:column="44">( 
            <param><decl><type><name pos:line="20960" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20960" pos:column="38">*</type:modifier></type> <name pos:line="20960" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20962" pos:column="9">ULONG</name></type> ( <name pos:line="20962" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="20962" pos:column="35">*</type:modifier><name pos:line="20962" pos:column="36">Release</name> )<parameter_list pos:line="20962" pos:column="45">( 
            <param><decl><type><name pos:line="20963" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20963" pos:column="38">*</type:modifier></type> <name pos:line="20963" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20965" pos:column="9">HRESULT</name> <argument_list pos:line="20965" pos:column="17">( <argument pos:line="20965" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="20965" pos:column="44">(</op:operator> 
            <name pos:line="20966" pos:column="13">IEnumDebugReferenceInfo2</name> <op:operator pos:line="20966" pos:column="38">*</op:operator> <name pos:line="20966" pos:column="40">This</name><op:operator pos:line="20966" pos:column="44">,</op:operator>
            <comment type="block" pos:line="20967" pos:column="13">/* [in] */</comment> <name pos:line="20967" pos:column="24">ULONG</name> <name pos:line="20967" pos:column="30">celt</name><op:operator pos:line="20967" pos:column="34">,</op:operator>
            <comment type="block" pos:line="20968" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="20968" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="20968" pos:column="67">(<argument pos:line="20968" pos:column="68">celt</argument>, <argument pos:line="20968" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="20968" pos:column="89">DEBUG_REFERENCE_INFO</name> <op:operator pos:line="20968" pos:column="110">*</op:operator><name pos:line="20968" pos:column="111">rgelt</name><op:operator pos:line="20968" pos:column="116">,</op:operator>
            <comment type="block" pos:line="20969" pos:column="13">/* [out] */</comment> <name pos:line="20969" pos:column="25">__RPC__out</name> <name pos:line="20969" pos:column="36">ULONG</name> <op:operator pos:line="20969" pos:column="42">*</op:operator><name pos:line="20969" pos:column="43">pceltFetched</name><op:operator pos:line="20969" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="20971" pos:column="9">HRESULT</name></type> ( <name pos:line="20971" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20971" pos:column="37">*</type:modifier><name pos:line="20971" pos:column="38">Skip</name> )<parameter_list pos:line="20971" pos:column="44">( 
            <param><decl><type><name pos:line="20972" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20972" pos:column="38">*</type:modifier></type> <name pos:line="20972" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20973" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="20973" pos:column="24">ULONG</name></type> <name pos:line="20973" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20975" pos:column="9">HRESULT</name></type> ( <name pos:line="20975" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20975" pos:column="37">*</type:modifier><name pos:line="20975" pos:column="38">Reset</name> )<parameter_list pos:line="20975" pos:column="45">( 
            <param><decl><type><name pos:line="20976" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20976" pos:column="38">*</type:modifier></type> <name pos:line="20976" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20978" pos:column="9">HRESULT</name></type> ( <name pos:line="20978" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20978" pos:column="37">*</type:modifier><name pos:line="20978" pos:column="38">Clone</name> )<parameter_list pos:line="20978" pos:column="45">( 
            <param><decl><type><name pos:line="20979" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20979" pos:column="38">*</type:modifier></type> <name pos:line="20979" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20980" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20980" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="20980" pos:column="46">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20980" pos:column="71">*</type:modifier><type:modifier pos:line="20980" pos:column="72">*</type:modifier></type><name pos:line="20980" pos:column="73">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="20982" pos:column="9">HRESULT</name></type> ( <name pos:line="20982" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="20982" pos:column="37">*</type:modifier><name pos:line="20982" pos:column="38">GetCount</name> )<parameter_list pos:line="20982" pos:column="48">( 
            <param><decl><type><name pos:line="20983" pos:column="13">IEnumDebugReferenceInfo2</name> <type:modifier pos:line="20983" pos:column="38">*</type:modifier></type> <name pos:line="20983" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="20984" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="20984" pos:column="25">__RPC__out</name> <name pos:line="20984" pos:column="36">ULONG</name> <type:modifier pos:line="20984" pos:column="42">*</type:modifier></type><name pos:line="20984" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="20986" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="20987" pos:column="7">IEnumDebugReferenceInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="20989" pos:column="5">interface</name></type> <name pos:line="20989" pos:column="15">IEnumDebugReferenceInfo2</name>
    <argument_list pos:line="20990" pos:column="5">{
        <argument><expr><name pos:line="20991" pos:column="9">CONST_VTBL</name> struct <name pos:line="20991" pos:column="27">IEnumDebugReferenceInfo2Vtbl</name> <op:operator pos:line="20991" pos:column="56">*</op:operator><name pos:line="20991" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="20996" pos:column="1">#<cpp:directive pos:line="20996" pos:column="2">ifdef</cpp:directive> <name pos:line="20996" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="20999" pos:column="1">#<cpp:directive pos:line="20999" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20999" pos:column="9">IEnumDebugReferenceInfo2_QueryInterface</name><parameter_list pos:line="20999" pos:column="48">(<param><type><name pos:line="20999" pos:column="49">This</name></type></param>,<param><type><name pos:line="20999" pos:column="54">riid</name></type></param>,<param><type><name pos:line="20999" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21000" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21002" pos:column="1">#<cpp:directive pos:line="21002" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21002" pos:column="9">IEnumDebugReferenceInfo2_AddRef</name><parameter_list pos:line="21002" pos:column="40">(<param><type><name pos:line="21002" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21003" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21005" pos:column="1">#<cpp:directive pos:line="21005" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21005" pos:column="9">IEnumDebugReferenceInfo2_Release</name><parameter_list pos:line="21005" pos:column="41">(<param><type><name pos:line="21005" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21006" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21009" pos:column="1">#<cpp:directive pos:line="21009" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21009" pos:column="9">IEnumDebugReferenceInfo2_Next</name><parameter_list pos:line="21009" pos:column="38">(<param><type><name pos:line="21009" pos:column="39">This</name></type></param>,<param><type><name pos:line="21009" pos:column="44">celt</name></type></param>,<param><type><name pos:line="21009" pos:column="49">rgelt</name></type></param>,<param><type><name pos:line="21009" pos:column="55">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21010" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="21012" pos:column="1">#<cpp:directive pos:line="21012" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21012" pos:column="9">IEnumDebugReferenceInfo2_Skip</name><parameter_list pos:line="21012" pos:column="38">(<param><type><name pos:line="21012" pos:column="39">This</name></type></param>,<param><type><name pos:line="21012" pos:column="44">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21013" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="21015" pos:column="1">#<cpp:directive pos:line="21015" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21015" pos:column="9">IEnumDebugReferenceInfo2_Reset</name><parameter_list pos:line="21015" pos:column="39">(<param><type><name pos:line="21015" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21016" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21018" pos:column="1">#<cpp:directive pos:line="21018" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21018" pos:column="9">IEnumDebugReferenceInfo2_Clone</name><parameter_list pos:line="21018" pos:column="39">(<param><type><name pos:line="21018" pos:column="40">This</name></type></param>,<param><type><name pos:line="21018" pos:column="45">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21019" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="21021" pos:column="1">#<cpp:directive pos:line="21021" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21021" pos:column="9">IEnumDebugReferenceInfo2_GetCount</name><parameter_list pos:line="21021" pos:column="42">(<param><type><name pos:line="21021" pos:column="43">This</name></type></param>,<param><type><name pos:line="21021" pos:column="48">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21022" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21024" pos:column="1">#<cpp:directive pos:line="21024" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21024" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21027" pos:column="1">#<cpp:directive pos:line="21027" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21027" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21032" pos:column="1">#<cpp:directive pos:line="21032" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21032" pos:column="9">/* __IEnumDebugReferenceInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21035" pos:column="1">#<cpp:directive pos:line="21035" pos:column="2">ifndef</cpp:directive> <name pos:line="21035" pos:column="9">__IDebugProcessQueryProperties_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21036" pos:column="1">#<cpp:directive pos:line="21036" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21036" pos:column="9">__IDebugProcessQueryProperties_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21038" pos:column="1">/* interface IDebugProcessQueryProperties */</comment>
<comment type="block" pos:line="21039" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="21042" pos:column="1">enum <name pos:line="21042" pos:column="6">enum_PROCESS_PROPERTY_TYPE</name>
    <block pos:line="21043" pos:column="5">{	<decl><name pos:line="21043" pos:column="9">PROCESS_PROPERTY_COMMAND_LINE</name>	<init pos:line="21043" pos:column="41">= <expr><lit:literal type="number" pos:line="21043" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="21043" pos:column="44">,</op:operator>
	<decl><name pos:line="21044" pos:column="9">PROCESS_PROPERTY_CURRENT_DIRECTORY</name>	<init pos:line="21044" pos:column="49">= <expr><lit:literal type="number" pos:line="21044" pos:column="51">2</lit:literal></expr></init></decl><op:operator pos:line="21044" pos:column="52">,</op:operator>
	<decl><name pos:line="21045" pos:column="9">PROCESS_PROPERTY_ENVIRONMENT_VARIABLES</name>	<init pos:line="21045" pos:column="49">= <expr><lit:literal type="number" pos:line="21045" pos:column="51">3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="21047" pos:column="1">typedef <type><name pos:line="21047" pos:column="9">DWORD</name></type> <name pos:line="21047" pos:column="15">PROCESS_PROPERTY_TYPE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="21050" pos:column="1">EXTERN_C</name> <specifier pos:line="21050" pos:column="10">const</specifier> <name pos:line="21050" pos:column="16">IID</name></type> <name pos:line="21050" pos:column="20">IID_IDebugProcessQueryProperties</name></decl>;</decl_stmt>

<cpp:if pos:line="21052" pos:column="1">#<cpp:directive pos:line="21052" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21052" pos:column="5">defined</name><argument_list pos:line="21052" pos:column="12">(<argument><expr><name pos:line="21052" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21052" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21052" pos:column="29">!</op:operator><call><name pos:line="21052" pos:column="30">defined</name><argument_list pos:line="21052" pos:column="37">(<argument><expr><name pos:line="21052" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21054" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21054" pos:column="19">(<argument pos:line="21054" pos:column="20">"230A0071-62EF-4cae-AAC0-8988C37024BF"</argument>)</argument_list></macro>
    <label><name pos:line="21055" pos:column="5">IDebugProcessQueryProperties</name> :</label> <expr_stmt><expr pos:line="21055" pos:column="36">public <name pos:line="21055" pos:column="43">IUnknown</name>
    <block pos:line="21056" pos:column="5">{
    <expr pos:line="21057" pos:column="5">public<op:operator pos:line="21057" pos:column="11">:</op:operator>
        virtual <name pos:line="21058" pos:column="17">HRESULT</name> <name pos:line="21058" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21058" pos:column="43">QueryProperty</name><argument_list pos:line="21058" pos:column="56">( 
            <comment type="block" pos:line="21059" pos:column="13">/* [in] */</comment> <argument pos:line="21059" pos:column="24">PROCESS_PROPERTY_TYPE dwPropType</argument>,
            <comment type="block" pos:line="21060" pos:column="13">/* [out] */</comment> <argument pos:line="21060" pos:column="25">__RPC__out VARIANT *pvarPropValue</argument>)</argument_list></macro> <op:operator pos:line="21060" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="21060" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="21062" pos:column="9">virtual <name pos:line="21062" pos:column="17">HRESULT</name> <name pos:line="21062" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21062" pos:column="43">QueryProperties</name><argument_list pos:line="21062" pos:column="58">( 
            <comment type="block" pos:line="21063" pos:column="13">/* [in] */</comment> <argument pos:line="21063" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="21064" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="21064" pos:column="33">__RPC__in_ecount_full(celt) PROCESS_PROPERTY_TYPE *rgdwPropTypes</argument>,
            <comment type="block" pos:line="21065" pos:column="13">/* [size_is][out] */</comment> <argument pos:line="21065" pos:column="34">__RPC__out_ecount_full(celt) VARIANT *rgtPropValues</argument>)</argument_list></macro> <op:operator pos:line="21065" pos:column="87">=</op:operator> <lit:literal type="number" pos:line="21065" pos:column="89">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21069" pos:column="1">#<cpp:directive pos:line="21069" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21069" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21071" pos:column="5">typedef <type><struct pos:line="21071" pos:column="13">struct <name pos:line="21071" pos:column="20">IDebugProcessQueryPropertiesVtbl</name>
    <block pos:line="21072" pos:column="5">{<public type="default" pos:line="21072" pos:column="6">
        <function_decl><type><name pos:line="21073" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21075" pos:column="9">HRESULT</name></type> ( <name pos:line="21075" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21075" pos:column="37">*</type:modifier><name pos:line="21075" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21075" pos:column="54">( 
            <param><decl><type><name pos:line="21076" pos:column="13">IDebugProcessQueryProperties</name> <type:modifier pos:line="21076" pos:column="42">*</type:modifier></type> <name pos:line="21076" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="21077" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21077" pos:column="24">__RPC__in</name> <name pos:line="21077" pos:column="34">REFIID</name></type> <name pos:line="21077" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21078" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21079" pos:column="13">__RPC__deref_out</name>  <name pos:line="21079" pos:column="31">void</name> <type:modifier pos:line="21079" pos:column="36">*</type:modifier><type:modifier pos:line="21079" pos:column="37">*</type:modifier></type><name pos:line="21079" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21081" pos:column="9">ULONG</name></type> ( <name pos:line="21081" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21081" pos:column="35">*</type:modifier><name pos:line="21081" pos:column="36">AddRef</name> )<parameter_list pos:line="21081" pos:column="44">( 
            <param><decl><type><name pos:line="21082" pos:column="13">IDebugProcessQueryProperties</name> <type:modifier pos:line="21082" pos:column="42">*</type:modifier></type> <name pos:line="21082" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21084" pos:column="9">ULONG</name></type> ( <name pos:line="21084" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21084" pos:column="35">*</type:modifier><name pos:line="21084" pos:column="36">Release</name> )<parameter_list pos:line="21084" pos:column="45">( 
            <param><decl><type><name pos:line="21085" pos:column="13">IDebugProcessQueryProperties</name> <type:modifier pos:line="21085" pos:column="42">*</type:modifier></type> <name pos:line="21085" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21087" pos:column="9">HRESULT</name></type> ( <name pos:line="21087" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21087" pos:column="37">*</type:modifier><name pos:line="21087" pos:column="38">QueryProperty</name> )<parameter_list pos:line="21087" pos:column="53">( 
            <param><decl><type><name pos:line="21088" pos:column="13">IDebugProcessQueryProperties</name> <type:modifier pos:line="21088" pos:column="42">*</type:modifier></type> <name pos:line="21088" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="21089" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21089" pos:column="24">PROCESS_PROPERTY_TYPE</name></type> <name pos:line="21089" pos:column="46">dwPropType</name></decl></param>,
            <comment type="block" pos:line="21090" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21090" pos:column="25">__RPC__out</name> <name pos:line="21090" pos:column="36">VARIANT</name> <type:modifier pos:line="21090" pos:column="44">*</type:modifier></type><name pos:line="21090" pos:column="45">pvarPropValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21092" pos:column="9">HRESULT</name> <argument_list pos:line="21092" pos:column="17">( <argument pos:line="21092" pos:column="19">STDMETHODCALLTYPE *QueryProperties</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="21092" pos:column="55">(</op:operator> 
            <name pos:line="21093" pos:column="13">IDebugProcessQueryProperties</name> <op:operator pos:line="21093" pos:column="42">*</op:operator> <name pos:line="21093" pos:column="44">This</name><op:operator pos:line="21093" pos:column="48">,</op:operator>
            <comment type="block" pos:line="21094" pos:column="13">/* [in] */</comment> <name pos:line="21094" pos:column="24">ULONG</name> <name pos:line="21094" pos:column="30">celt</name><op:operator pos:line="21094" pos:column="34">,</op:operator>
            <comment type="block" pos:line="21095" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="21095" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="21095" pos:column="54">(<argument pos:line="21095" pos:column="55">celt</argument>)</argument_list></macro> <name pos:line="21095" pos:column="61">PROCESS_PROPERTY_TYPE</name> <op:operator pos:line="21095" pos:column="83">*</op:operator><name pos:line="21095" pos:column="84">rgdwPropTypes</name><op:operator pos:line="21095" pos:column="97">,</op:operator>
            <comment type="block" pos:line="21096" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="21096" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="21096" pos:column="56">(<argument pos:line="21096" pos:column="57">celt</argument>)</argument_list></macro> <name pos:line="21096" pos:column="63">VARIANT</name> <op:operator pos:line="21096" pos:column="71">*</op:operator><name pos:line="21096" pos:column="72">rgtPropValues</name><op:operator pos:line="21096" pos:column="85">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="21098" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21099" pos:column="7">IDebugProcessQueryPropertiesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21101" pos:column="5">interface</name></type> <name pos:line="21101" pos:column="15">IDebugProcessQueryProperties</name>
    <argument_list pos:line="21102" pos:column="5">{
        <argument><expr><name pos:line="21103" pos:column="9">CONST_VTBL</name> struct <name pos:line="21103" pos:column="27">IDebugProcessQueryPropertiesVtbl</name> <op:operator pos:line="21103" pos:column="60">*</op:operator><name pos:line="21103" pos:column="61">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21108" pos:column="1">#<cpp:directive pos:line="21108" pos:column="2">ifdef</cpp:directive> <name pos:line="21108" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21111" pos:column="1">#<cpp:directive pos:line="21111" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21111" pos:column="9">IDebugProcessQueryProperties_QueryInterface</name><parameter_list pos:line="21111" pos:column="52">(<param><type><name pos:line="21111" pos:column="53">This</name></type></param>,<param><type><name pos:line="21111" pos:column="58">riid</name></type></param>,<param><type><name pos:line="21111" pos:column="63">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21112" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21114" pos:column="1">#<cpp:directive pos:line="21114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21114" pos:column="9">IDebugProcessQueryProperties_AddRef</name><parameter_list pos:line="21114" pos:column="44">(<param><type><name pos:line="21114" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21115" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21117" pos:column="1">#<cpp:directive pos:line="21117" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21117" pos:column="9">IDebugProcessQueryProperties_Release</name><parameter_list pos:line="21117" pos:column="45">(<param><type><name pos:line="21117" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21118" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21121" pos:column="1">#<cpp:directive pos:line="21121" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21121" pos:column="9">IDebugProcessQueryProperties_QueryProperty</name><parameter_list pos:line="21121" pos:column="51">(<param><type><name pos:line="21121" pos:column="52">This</name></type></param>,<param><type><name pos:line="21121" pos:column="57">dwPropType</name></type></param>,<param><type><name pos:line="21121" pos:column="68">pvarPropValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21122" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryProperty(This,dwPropType,pvarPropValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="21124" pos:column="1">#<cpp:directive pos:line="21124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21124" pos:column="9">IDebugProcessQueryProperties_QueryProperties</name><parameter_list pos:line="21124" pos:column="53">(<param><type><name pos:line="21124" pos:column="54">This</name></type></param>,<param><type><name pos:line="21124" pos:column="59">celt</name></type></param>,<param><type><name pos:line="21124" pos:column="64">rgdwPropTypes</name></type></param>,<param><type><name pos:line="21124" pos:column="78">rgtPropValues</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21125" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryProperties(This,celt,rgdwPropTypes,rgtPropValues) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21127" pos:column="1">#<cpp:directive pos:line="21127" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21127" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21130" pos:column="1">#<cpp:directive pos:line="21130" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21130" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21135" pos:column="1">#<cpp:directive pos:line="21135" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21135" pos:column="9">/* __IDebugProcessQueryProperties_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21138" pos:column="1">#<cpp:directive pos:line="21138" pos:column="2">ifndef</cpp:directive> <name pos:line="21138" pos:column="9">__IDebugRemoteServer2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21139" pos:column="1">#<cpp:directive pos:line="21139" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21139" pos:column="9">__IDebugRemoteServer2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21141" pos:column="1">/* interface IDebugRemoteServer2 */</comment>
<comment type="block" pos:line="21142" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="21145" pos:column="1">enum <name pos:line="21145" pos:column="6">enum_ENUMERATED_PROCESS_FLAGS</name>
    <block pos:line="21146" pos:column="5">{	<decl><name pos:line="21146" pos:column="9">EPFLAG_SHOW_SECURITY_WARNING</name>	<init pos:line="21146" pos:column="41">= <expr><lit:literal type="number" pos:line="21146" pos:column="43">0x1</lit:literal></expr></init></decl><op:operator pos:line="21146" pos:column="46">,</op:operator>
	<decl><name pos:line="21147" pos:column="9">EPFLAG_SYSTEM_PROCESS</name>	<init pos:line="21147" pos:column="33">= <expr><lit:literal type="number" pos:line="21147" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="21149" pos:column="1">typedef <type><name pos:line="21149" pos:column="9">DWORD</name></type> <name pos:line="21149" pos:column="15">ENUMERATED_PROCESS_FLAGS</name>;</typedef>


<enum pos:line="21152" pos:column="1">enum <name pos:line="21152" pos:column="6">enum_REMOTE_PROCESS_FLAGS</name>
    <block pos:line="21153" pos:column="5">{	<decl><name pos:line="21153" pos:column="9">RPFLAG_DEBUGGER_ATTACH</name>	<init pos:line="21153" pos:column="33">= <expr><lit:literal type="number" pos:line="21153" pos:column="35">0x100</lit:literal></expr></init></decl><op:operator pos:line="21153" pos:column="40">,</op:operator>
	<decl><name pos:line="21154" pos:column="9">RPFLAG_SQL_LOADED</name>	<init pos:line="21154" pos:column="33">= <expr><lit:literal type="number" pos:line="21154" pos:column="35">0x200</lit:literal></expr></init></decl><op:operator pos:line="21154" pos:column="40">,</op:operator>
	<decl><name pos:line="21155" pos:column="9">RPFLAG_CLR_LOADED</name>	<init pos:line="21155" pos:column="33">= <expr><lit:literal type="number" pos:line="21155" pos:column="35">0x400</lit:literal></expr></init></decl><op:operator pos:line="21155" pos:column="40">,</op:operator>
	<decl><name pos:line="21156" pos:column="9">RPFLAG_PROCESS_WOW64</name>	<init pos:line="21156" pos:column="33">= <expr><lit:literal type="number" pos:line="21156" pos:column="35">0x800</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="21158" pos:column="1">typedef <type><name pos:line="21158" pos:column="9">DWORD</name></type> <name pos:line="21158" pos:column="15">REMOTE_PROCESS_FLAGS</name>;</typedef>


<enum pos:line="21161" pos:column="1">enum <name pos:line="21161" pos:column="6">enum_REMOTE_PROCESS_INFO_FIELDS</name>
    <block pos:line="21162" pos:column="5">{	<decl><name pos:line="21162" pos:column="9">RPIF_TITLE</name>	<init pos:line="21162" pos:column="25">= <expr><lit:literal type="number" pos:line="21162" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="21162" pos:column="30">,</op:operator>
	<decl><name pos:line="21163" pos:column="9">RPIF_MODULE_PATH</name>	<init pos:line="21163" pos:column="33">= <expr><lit:literal type="number" pos:line="21163" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="21163" pos:column="38">,</op:operator>
	<decl><name pos:line="21164" pos:column="9">RPIF_COMMAND_LINE</name>	<init pos:line="21164" pos:column="33">= <expr><lit:literal type="number" pos:line="21164" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="21164" pos:column="38">,</op:operator>
	<decl><name pos:line="21165" pos:column="9">RPIF_CURRENT_DIRECTORY</name>	<init pos:line="21165" pos:column="33">= <expr><lit:literal type="number" pos:line="21165" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="21165" pos:column="38">,</op:operator>
	<decl><name pos:line="21166" pos:column="9">RPIF_ENVIRONMENT_VARIABLES</name>	<init pos:line="21166" pos:column="41">= <expr><lit:literal type="number" pos:line="21166" pos:column="43">0x10</lit:literal></expr></init></decl><op:operator pos:line="21166" pos:column="47">,</op:operator>
	<decl><name pos:line="21167" pos:column="9">RPIF_USER_NAME</name>	<init pos:line="21167" pos:column="25">= <expr><lit:literal type="number" pos:line="21167" pos:column="27">0x20</lit:literal></expr></init></decl><op:operator pos:line="21167" pos:column="31">,</op:operator>
	<decl><name pos:line="21168" pos:column="9">RPIF_SESSION_ID</name>	<init pos:line="21168" pos:column="25">= <expr><lit:literal type="number" pos:line="21168" pos:column="27">0x40</lit:literal></expr></init></decl><op:operator pos:line="21168" pos:column="31">,</op:operator>
	<decl><name pos:line="21169" pos:column="9">RPIF_ENUMERATED_FLAGS</name>	<init pos:line="21169" pos:column="33">= <expr><lit:literal type="number" pos:line="21169" pos:column="35">0x80</lit:literal></expr></init></decl><op:operator pos:line="21169" pos:column="39">,</op:operator>
	<decl><name pos:line="21170" pos:column="9">RPIF_DEBUGGER_PRESENT_FLAGS</name>	<init pos:line="21170" pos:column="41">= <expr><lit:literal type="number" pos:line="21170" pos:column="43">0x100</lit:literal></expr></init></decl><op:operator pos:line="21170" pos:column="48">,</op:operator>
	<decl><name pos:line="21171" pos:column="9">RPIF_PROGRAM_TYPE_FLAGS</name>	<init pos:line="21171" pos:column="33">= <expr><lit:literal type="number" pos:line="21171" pos:column="35">0x200</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="21173" pos:column="1">typedef <type><name pos:line="21173" pos:column="9">DWORD</name></type> <name pos:line="21173" pos:column="15">REMOTE_PROCESS_INFO_FIELDS</name>;</typedef>

<typedef pos:line="21175" pos:column="1">typedef <type><struct pos:line="21175" pos:column="9">struct <name pos:line="21175" pos:column="16">tagREMOTE_PROCESS_INFO</name>
    <block pos:line="21176" pos:column="5">{<public type="default" pos:line="21176" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21177" pos:column="5">REMOTE_PROCESS_INFO_FIELDS</name></type> <name pos:line="21177" pos:column="32">Fields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21178" pos:column="5">BSTR</name></type> <name pos:line="21178" pos:column="10">bstrTitle</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21179" pos:column="5">BSTR</name></type> <name pos:line="21179" pos:column="10">bstrModulePath</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21180" pos:column="5">BSTR</name></type> <name pos:line="21180" pos:column="10">bstrCommandLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21181" pos:column="5">BSTR</name></type> <name pos:line="21181" pos:column="10">bstrCurrentDirectory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21182" pos:column="5">BSTR</name></type> <name pos:line="21182" pos:column="10">bstrEnvironmentVariables</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21183" pos:column="5">BSTR</name></type> <name pos:line="21183" pos:column="10">bstrUserName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21184" pos:column="5">DWORD</name></type> <name pos:line="21184" pos:column="11">dwSessionId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21185" pos:column="5">REMOTE_PROCESS_FLAGS</name></type> <name pos:line="21185" pos:column="26">Flags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21186" pos:column="9">REMOTE_PROCESS_INFO</name>;</typedef>

<typedef pos:line="21188" pos:column="1">typedef <type><struct pos:line="21188" pos:column="9">struct <name pos:line="21188" pos:column="16">tagENUMERATED_PROCESS</name>
    <block pos:line="21189" pos:column="5">{<public type="default" pos:line="21189" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21190" pos:column="5">DWORD</name></type> <name pos:line="21190" pos:column="11">dwProcessId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21191" pos:column="5">DWORD</name></type> <name pos:line="21191" pos:column="11">dwSessionId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21192" pos:column="5">BSTR</name></type> <name pos:line="21192" pos:column="10">bstrUserName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21193" pos:column="5">ENUMERATED_PROCESS_FLAGS</name></type> <name pos:line="21193" pos:column="30">dwProcessFlags</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21194" pos:column="9">ENUMERATED_PROCESS</name>;</typedef>

<typedef pos:line="21196" pos:column="1">typedef <type><struct pos:line="21196" pos:column="9">struct <name pos:line="21196" pos:column="16">tagENUMERATED_PROCESS_ARRAY</name>
    <block pos:line="21197" pos:column="5">{<public type="default" pos:line="21197" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21198" pos:column="5">DWORD</name></type> <name pos:line="21198" pos:column="11">dwCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21199" pos:column="5">ENUMERATED_PROCESS</name> <type:modifier pos:line="21199" pos:column="24">*</type:modifier></type><name pos:line="21199" pos:column="25">Members</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21200" pos:column="9">ENUMERATED_PROCESS_ARRAY</name>;</typedef>

<typedef pos:line="21202" pos:column="1">typedef <type><struct pos:line="21202" pos:column="9">struct <name pos:line="21202" pos:column="16">tagPROCESS_LAUNCH_INFO</name>
    <block pos:line="21203" pos:column="5">{<public type="default" pos:line="21203" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21204" pos:column="5">LPCOLESTR</name></type> <name pos:line="21204" pos:column="15">pszExe</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21205" pos:column="5">LPCOLESTR</name></type> <name pos:line="21205" pos:column="15">pszArgs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21206" pos:column="5">LPCOLESTR</name></type> <name pos:line="21206" pos:column="15">pszDir</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21207" pos:column="5">BSTR</name></type> <name pos:line="21207" pos:column="10">bstrEnv</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21208" pos:column="5">BOOL</name></type> <name pos:line="21208" pos:column="10">fLaunchSuspended</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21209" pos:column="9">PROCESS_LAUNCH_INFO</name>;</typedef>

<typedef pos:line="21211" pos:column="1">typedef <type><struct pos:line="21211" pos:column="9">struct <name pos:line="21211" pos:column="16">tagWATCH_COOKIE</name>
    <block pos:line="21212" pos:column="5">{<public type="default" pos:line="21212" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21213" pos:column="5">UINT64</name></type> <name pos:line="21213" pos:column="12">val</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21214" pos:column="9">WATCH_COOKIE</name>;</typedef>

<typedef pos:line="21216" pos:column="1">typedef <type><struct pos:line="21216" pos:column="9">struct <name pos:line="21216" pos:column="16">tagRESUME_COOKIE</name>
    <block pos:line="21217" pos:column="5">{<public type="default" pos:line="21217" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21218" pos:column="5">UINT64</name></type> <name pos:line="21218" pos:column="12">val</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21219" pos:column="9">RESUME_COOKIE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="21222" pos:column="1">EXTERN_C</name> <specifier pos:line="21222" pos:column="10">const</specifier> <name pos:line="21222" pos:column="16">IID</name></type> <name pos:line="21222" pos:column="20">IID_IDebugRemoteServer2</name></decl>;</decl_stmt>

<cpp:if pos:line="21224" pos:column="1">#<cpp:directive pos:line="21224" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21224" pos:column="5">defined</name><argument_list pos:line="21224" pos:column="12">(<argument><expr><name pos:line="21224" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21224" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21224" pos:column="29">!</op:operator><call><name pos:line="21224" pos:column="30">defined</name><argument_list pos:line="21224" pos:column="37">(<argument><expr><name pos:line="21224" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21226" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21226" pos:column="19">(<argument pos:line="21226" pos:column="20">"3d3ce5c4-1508-4711-a5eb-f848f6e10072"</argument>)</argument_list></macro>
    <label><name pos:line="21227" pos:column="5">IDebugRemoteServer2</name> :</label> <expr_stmt><expr pos:line="21227" pos:column="27">public <name pos:line="21227" pos:column="34">IUnknown</name>
    <block pos:line="21228" pos:column="5">{
    <expr pos:line="21229" pos:column="5">public<op:operator pos:line="21229" pos:column="11">:</op:operator>
        virtual <name pos:line="21230" pos:column="17">HRESULT</name> <name pos:line="21230" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21230" pos:column="43">GetRemoteServerName</name><argument_list pos:line="21230" pos:column="62">( 
            <comment type="block" pos:line="21231" pos:column="13">/* [out] */</comment> <argument pos:line="21231" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="21231" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="21231" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="21233" pos:column="9">virtual <name pos:line="21233" pos:column="17">HRESULT</name> <name pos:line="21233" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21233" pos:column="43">GetRemoteComputerInfo</name><argument_list pos:line="21233" pos:column="64">( 
            <comment type="block" pos:line="21234" pos:column="13">/* [out] */</comment> <argument pos:line="21234" pos:column="25">__RPC__out COMPUTER_INFO *pInfo</argument>)</argument_list></macro> <op:operator pos:line="21234" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="21234" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="21236" pos:column="9">virtual <name pos:line="21236" pos:column="17">HRESULT</name> <name pos:line="21236" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21236" pos:column="43">EnumRemoteProcesses</name><argument_list pos:line="21236" pos:column="62">( 
            <comment type="block" pos:line="21237" pos:column="13">/* [out] */</comment> <argument pos:line="21237" pos:column="25">__RPC__out ENUMERATED_PROCESS_ARRAY *pProcessArray</argument>)</argument_list></macro> <op:operator pos:line="21237" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="21237" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="21239" pos:column="9">virtual <name pos:line="21239" pos:column="17">HRESULT</name> <name pos:line="21239" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21239" pos:column="43">GetRemoteProcessInfo</name><argument_list pos:line="21239" pos:column="63">( 
            <comment type="block" pos:line="21240" pos:column="13">/* [in] */</comment> <argument pos:line="21240" pos:column="24">DWORD dwProcessId</argument>,
            <comment type="block" pos:line="21241" pos:column="13">/* [in] */</comment> <argument pos:line="21241" pos:column="24">REMOTE_PROCESS_INFO_FIELDS Fields</argument>,
            <comment type="block" pos:line="21242" pos:column="13">/* [out] */</comment> <argument pos:line="21242" pos:column="25">__RPC__out REMOTE_PROCESS_INFO *pInfo</argument>)</argument_list></macro> <op:operator pos:line="21242" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="21242" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="21244" pos:column="9">virtual <name pos:line="21244" pos:column="17">HRESULT</name> <name pos:line="21244" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21244" pos:column="43">CreateRemoteInstance</name><argument_list pos:line="21244" pos:column="63">( 
            <comment type="block" pos:line="21245" pos:column="13">/* [full][in] */</comment> <argument pos:line="21245" pos:column="30">__RPC__in_opt LPCWSTR szDll</argument>,
            <comment type="block" pos:line="21246" pos:column="13">/* [in] */</comment> <argument pos:line="21246" pos:column="24">WORD wLangId</argument>,
            <comment type="block" pos:line="21247" pos:column="13">/* [in] */</comment> <argument pos:line="21247" pos:column="24">__RPC__in REFCLSID clsidObject</argument>,
            <comment type="block" pos:line="21248" pos:column="13">/* [in] */</comment> <argument pos:line="21248" pos:column="24">__RPC__in REFIID riid</argument>,
            <comment type="block" pos:line="21249" pos:column="13">/* [iid_is][out] */</comment> <argument pos:line="21249" pos:column="33">__RPC__deref_out_opt void **ppvObject</argument>)</argument_list></macro> <op:operator pos:line="21249" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="21249" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="21251" pos:column="9">virtual <name pos:line="21251" pos:column="17">HRESULT</name> <name pos:line="21251" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21251" pos:column="43">WatchForRemoteProcessDestroy</name><argument_list pos:line="21251" pos:column="71">( 
            <comment type="block" pos:line="21252" pos:column="13">/* [in] */</comment> <argument pos:line="21252" pos:column="24">__RPC__in_opt IDebugPortEvents2 *pCallback</argument>,
            <comment type="block" pos:line="21253" pos:column="13">/* [in] */</comment> <argument pos:line="21253" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>,
            <comment type="block" pos:line="21254" pos:column="13">/* [out] */</comment> <argument pos:line="21254" pos:column="25">__RPC__out WATCH_COOKIE *pWatchCookie</argument>)</argument_list></macro> <op:operator pos:line="21254" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="21254" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="21256" pos:column="9">virtual <name pos:line="21256" pos:column="17">HRESULT</name> <name pos:line="21256" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21256" pos:column="43">CloseRemoteWatchCookie</name><argument_list pos:line="21256" pos:column="65">( 
            <comment type="block" pos:line="21257" pos:column="13">/* [in] */</comment> <argument pos:line="21257" pos:column="24">WATCH_COOKIE WatchCookie</argument>)</argument_list></macro> <op:operator pos:line="21257" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="21257" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="21259" pos:column="9">virtual <name pos:line="21259" pos:column="17">HRESULT</name> <name pos:line="21259" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21259" pos:column="43">TerminateRemoteProcess</name><argument_list pos:line="21259" pos:column="65">( 
            <comment type="block" pos:line="21260" pos:column="13">/* [in] */</comment> <argument pos:line="21260" pos:column="24">DWORD dwProcessId</argument>)</argument_list></macro> <op:operator pos:line="21260" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="21260" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="21262" pos:column="9">virtual <name pos:line="21262" pos:column="17">HRESULT</name> <name pos:line="21262" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21262" pos:column="43">LaunchRemoteProcess</name><argument_list pos:line="21262" pos:column="62">( 
            <comment type="block" pos:line="21263" pos:column="13">/* [in] */</comment> <argument pos:line="21263" pos:column="24">PROCESS_LAUNCH_INFO LaunchInfo</argument>,
            <comment type="block" pos:line="21264" pos:column="13">/* [out] */</comment> <argument pos:line="21264" pos:column="25">__RPC__out DWORD *pdwProcessId</argument>,
            <comment type="block" pos:line="21265" pos:column="13">/* [out] */</comment> <argument pos:line="21265" pos:column="25">__RPC__out RESUME_COOKIE *pResumeCookie</argument>)</argument_list></macro> <op:operator pos:line="21265" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="21265" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="21267" pos:column="9">virtual <name pos:line="21267" pos:column="17">HRESULT</name> <name pos:line="21267" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21267" pos:column="43">CloseRemoteResumeCookie</name><argument_list pos:line="21267" pos:column="66">( 
            <comment type="block" pos:line="21268" pos:column="13">/* [in] */</comment> <argument pos:line="21268" pos:column="24">RESUME_COOKIE ResumeCookie</argument>)</argument_list></macro> <op:operator pos:line="21268" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="21268" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="21270" pos:column="9">virtual <name pos:line="21270" pos:column="17">HRESULT</name> <name pos:line="21270" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21270" pos:column="43">DiagnoseRemoteWebDebuggingError</name><argument_list pos:line="21270" pos:column="74">( 
            <comment type="block" pos:line="21271" pos:column="13">/* [full][in] */</comment> <argument pos:line="21271" pos:column="30">__RPC__in_opt LPCWSTR szUrl</argument>)</argument_list></macro> <op:operator pos:line="21271" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="21271" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21275" pos:column="1">#<cpp:directive pos:line="21275" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21275" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21277" pos:column="5">typedef <type><struct pos:line="21277" pos:column="13">struct <name pos:line="21277" pos:column="20">IDebugRemoteServer2Vtbl</name>
    <block pos:line="21278" pos:column="5">{<public type="default" pos:line="21278" pos:column="6">
        <function_decl><type><name pos:line="21279" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21281" pos:column="9">HRESULT</name></type> ( <name pos:line="21281" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21281" pos:column="37">*</type:modifier><name pos:line="21281" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21281" pos:column="54">( 
            <param><decl><type><name pos:line="21282" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21282" pos:column="33">*</type:modifier></type> <name pos:line="21282" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21283" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21283" pos:column="24">__RPC__in</name> <name pos:line="21283" pos:column="34">REFIID</name></type> <name pos:line="21283" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21284" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21285" pos:column="13">__RPC__deref_out</name>  <name pos:line="21285" pos:column="31">void</name> <type:modifier pos:line="21285" pos:column="36">*</type:modifier><type:modifier pos:line="21285" pos:column="37">*</type:modifier></type><name pos:line="21285" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21287" pos:column="9">ULONG</name></type> ( <name pos:line="21287" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21287" pos:column="35">*</type:modifier><name pos:line="21287" pos:column="36">AddRef</name> )<parameter_list pos:line="21287" pos:column="44">( 
            <param><decl><type><name pos:line="21288" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21288" pos:column="33">*</type:modifier></type> <name pos:line="21288" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21290" pos:column="9">ULONG</name></type> ( <name pos:line="21290" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21290" pos:column="35">*</type:modifier><name pos:line="21290" pos:column="36">Release</name> )<parameter_list pos:line="21290" pos:column="45">( 
            <param><decl><type><name pos:line="21291" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21291" pos:column="33">*</type:modifier></type> <name pos:line="21291" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21293" pos:column="9">HRESULT</name></type> ( <name pos:line="21293" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21293" pos:column="37">*</type:modifier><name pos:line="21293" pos:column="38">GetRemoteServerName</name> )<parameter_list pos:line="21293" pos:column="59">( 
            <param><decl><type><name pos:line="21294" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21294" pos:column="33">*</type:modifier></type> <name pos:line="21294" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21295" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21295" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="21295" pos:column="46">BSTR</name> <type:modifier pos:line="21295" pos:column="51">*</type:modifier></type><name pos:line="21295" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21297" pos:column="9">HRESULT</name></type> ( <name pos:line="21297" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21297" pos:column="37">*</type:modifier><name pos:line="21297" pos:column="38">GetRemoteComputerInfo</name> )<parameter_list pos:line="21297" pos:column="61">( 
            <param><decl><type><name pos:line="21298" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21298" pos:column="33">*</type:modifier></type> <name pos:line="21298" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21299" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21299" pos:column="25">__RPC__out</name> <name pos:line="21299" pos:column="36">COMPUTER_INFO</name> <type:modifier pos:line="21299" pos:column="50">*</type:modifier></type><name pos:line="21299" pos:column="51">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21301" pos:column="9">HRESULT</name></type> ( <name pos:line="21301" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21301" pos:column="37">*</type:modifier><name pos:line="21301" pos:column="38">EnumRemoteProcesses</name> )<parameter_list pos:line="21301" pos:column="59">( 
            <param><decl><type><name pos:line="21302" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21302" pos:column="33">*</type:modifier></type> <name pos:line="21302" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21303" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21303" pos:column="25">__RPC__out</name> <name pos:line="21303" pos:column="36">ENUMERATED_PROCESS_ARRAY</name> <type:modifier pos:line="21303" pos:column="61">*</type:modifier></type><name pos:line="21303" pos:column="62">pProcessArray</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21305" pos:column="9">HRESULT</name></type> ( <name pos:line="21305" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21305" pos:column="37">*</type:modifier><name pos:line="21305" pos:column="38">GetRemoteProcessInfo</name> )<parameter_list pos:line="21305" pos:column="60">( 
            <param><decl><type><name pos:line="21306" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21306" pos:column="33">*</type:modifier></type> <name pos:line="21306" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21307" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21307" pos:column="24">DWORD</name></type> <name pos:line="21307" pos:column="30">dwProcessId</name></decl></param>,
            <comment type="block" pos:line="21308" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21308" pos:column="24">REMOTE_PROCESS_INFO_FIELDS</name></type> <name pos:line="21308" pos:column="51">Fields</name></decl></param>,
            <comment type="block" pos:line="21309" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21309" pos:column="25">__RPC__out</name> <name pos:line="21309" pos:column="36">REMOTE_PROCESS_INFO</name> <type:modifier pos:line="21309" pos:column="56">*</type:modifier></type><name pos:line="21309" pos:column="57">pInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21311" pos:column="9">HRESULT</name></type> ( <name pos:line="21311" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21311" pos:column="37">*</type:modifier><name pos:line="21311" pos:column="38">CreateRemoteInstance</name> )<parameter_list pos:line="21311" pos:column="60">( 
            <param><decl><type><name pos:line="21312" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21312" pos:column="33">*</type:modifier></type> <name pos:line="21312" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21313" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="21313" pos:column="30">__RPC__in_opt</name> <name pos:line="21313" pos:column="44">LPCWSTR</name></type> <name pos:line="21313" pos:column="52">szDll</name></decl></param>,
            <comment type="block" pos:line="21314" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21314" pos:column="24">WORD</name></type> <name pos:line="21314" pos:column="29">wLangId</name></decl></param>,
            <comment type="block" pos:line="21315" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21315" pos:column="24">__RPC__in</name> <name pos:line="21315" pos:column="34">REFCLSID</name></type> <name pos:line="21315" pos:column="43">clsidObject</name></decl></param>,
            <comment type="block" pos:line="21316" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21316" pos:column="24">__RPC__in</name> <name pos:line="21316" pos:column="34">REFIID</name></type> <name pos:line="21316" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21317" pos:column="13">/* [iid_is][out] */</comment> <param><decl><type><name pos:line="21317" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="21317" pos:column="54">void</name> <type:modifier pos:line="21317" pos:column="59">*</type:modifier><type:modifier pos:line="21317" pos:column="60">*</type:modifier></type><name pos:line="21317" pos:column="61">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21319" pos:column="9">HRESULT</name></type> ( <name pos:line="21319" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21319" pos:column="37">*</type:modifier><name pos:line="21319" pos:column="38">WatchForRemoteProcessDestroy</name> )<parameter_list pos:line="21319" pos:column="68">( 
            <param><decl><type><name pos:line="21320" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21320" pos:column="33">*</type:modifier></type> <name pos:line="21320" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21321" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21321" pos:column="24">__RPC__in_opt</name> <name pos:line="21321" pos:column="38">IDebugPortEvents2</name> <type:modifier pos:line="21321" pos:column="56">*</type:modifier></type><name pos:line="21321" pos:column="57">pCallback</name></decl></param>,
            <comment type="block" pos:line="21322" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21322" pos:column="24">__RPC__in_opt</name> <name pos:line="21322" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="21322" pos:column="53">*</type:modifier></type><name pos:line="21322" pos:column="54">pProcess</name></decl></param>,
            <comment type="block" pos:line="21323" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21323" pos:column="25">__RPC__out</name> <name pos:line="21323" pos:column="36">WATCH_COOKIE</name> <type:modifier pos:line="21323" pos:column="49">*</type:modifier></type><name pos:line="21323" pos:column="50">pWatchCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21325" pos:column="9">HRESULT</name></type> ( <name pos:line="21325" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21325" pos:column="37">*</type:modifier><name pos:line="21325" pos:column="38">CloseRemoteWatchCookie</name> )<parameter_list pos:line="21325" pos:column="62">( 
            <param><decl><type><name pos:line="21326" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21326" pos:column="33">*</type:modifier></type> <name pos:line="21326" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21327" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21327" pos:column="24">WATCH_COOKIE</name></type> <name pos:line="21327" pos:column="37">WatchCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21329" pos:column="9">HRESULT</name></type> ( <name pos:line="21329" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21329" pos:column="37">*</type:modifier><name pos:line="21329" pos:column="38">TerminateRemoteProcess</name> )<parameter_list pos:line="21329" pos:column="62">( 
            <param><decl><type><name pos:line="21330" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21330" pos:column="33">*</type:modifier></type> <name pos:line="21330" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21331" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21331" pos:column="24">DWORD</name></type> <name pos:line="21331" pos:column="30">dwProcessId</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21333" pos:column="9">HRESULT</name></type> ( <name pos:line="21333" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21333" pos:column="37">*</type:modifier><name pos:line="21333" pos:column="38">LaunchRemoteProcess</name> )<parameter_list pos:line="21333" pos:column="59">( 
            <param><decl><type><name pos:line="21334" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21334" pos:column="33">*</type:modifier></type> <name pos:line="21334" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21335" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21335" pos:column="24">PROCESS_LAUNCH_INFO</name></type> <name pos:line="21335" pos:column="44">LaunchInfo</name></decl></param>,
            <comment type="block" pos:line="21336" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21336" pos:column="25">__RPC__out</name> <name pos:line="21336" pos:column="36">DWORD</name> <type:modifier pos:line="21336" pos:column="42">*</type:modifier></type><name pos:line="21336" pos:column="43">pdwProcessId</name></decl></param>,
            <comment type="block" pos:line="21337" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21337" pos:column="25">__RPC__out</name> <name pos:line="21337" pos:column="36">RESUME_COOKIE</name> <type:modifier pos:line="21337" pos:column="50">*</type:modifier></type><name pos:line="21337" pos:column="51">pResumeCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21339" pos:column="9">HRESULT</name></type> ( <name pos:line="21339" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21339" pos:column="37">*</type:modifier><name pos:line="21339" pos:column="38">CloseRemoteResumeCookie</name> )<parameter_list pos:line="21339" pos:column="63">( 
            <param><decl><type><name pos:line="21340" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21340" pos:column="33">*</type:modifier></type> <name pos:line="21340" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21341" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21341" pos:column="24">RESUME_COOKIE</name></type> <name pos:line="21341" pos:column="38">ResumeCookie</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21343" pos:column="9">HRESULT</name></type> ( <name pos:line="21343" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21343" pos:column="37">*</type:modifier><name pos:line="21343" pos:column="38">DiagnoseRemoteWebDebuggingError</name> )<parameter_list pos:line="21343" pos:column="71">( 
            <param><decl><type><name pos:line="21344" pos:column="13">IDebugRemoteServer2</name> <type:modifier pos:line="21344" pos:column="33">*</type:modifier></type> <name pos:line="21344" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="21345" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="21345" pos:column="30">__RPC__in_opt</name> <name pos:line="21345" pos:column="44">LPCWSTR</name></type> <name pos:line="21345" pos:column="52">szUrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21347" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21348" pos:column="7">IDebugRemoteServer2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21350" pos:column="5">interface</name></type> <name pos:line="21350" pos:column="15">IDebugRemoteServer2</name>
    <argument_list pos:line="21351" pos:column="5">{
        <argument><expr><name pos:line="21352" pos:column="9">CONST_VTBL</name> struct <name pos:line="21352" pos:column="27">IDebugRemoteServer2Vtbl</name> <op:operator pos:line="21352" pos:column="51">*</op:operator><name pos:line="21352" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21357" pos:column="1">#<cpp:directive pos:line="21357" pos:column="2">ifdef</cpp:directive> <name pos:line="21357" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21360" pos:column="1">#<cpp:directive pos:line="21360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21360" pos:column="9">IDebugRemoteServer2_QueryInterface</name><parameter_list pos:line="21360" pos:column="43">(<param><type><name pos:line="21360" pos:column="44">This</name></type></param>,<param><type><name pos:line="21360" pos:column="49">riid</name></type></param>,<param><type><name pos:line="21360" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21361" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21363" pos:column="1">#<cpp:directive pos:line="21363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21363" pos:column="9">IDebugRemoteServer2_AddRef</name><parameter_list pos:line="21363" pos:column="35">(<param><type><name pos:line="21363" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21364" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21366" pos:column="1">#<cpp:directive pos:line="21366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21366" pos:column="9">IDebugRemoteServer2_Release</name><parameter_list pos:line="21366" pos:column="36">(<param><type><name pos:line="21366" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21367" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21370" pos:column="1">#<cpp:directive pos:line="21370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21370" pos:column="9">IDebugRemoteServer2_GetRemoteServerName</name><parameter_list pos:line="21370" pos:column="48">(<param><type><name pos:line="21370" pos:column="49">This</name></type></param>,<param><type><name pos:line="21370" pos:column="54">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21371" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemoteServerName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="21373" pos:column="1">#<cpp:directive pos:line="21373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21373" pos:column="9">IDebugRemoteServer2_GetRemoteComputerInfo</name><parameter_list pos:line="21373" pos:column="50">(<param><type><name pos:line="21373" pos:column="51">This</name></type></param>,<param><type><name pos:line="21373" pos:column="56">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21374" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemoteComputerInfo(This,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="21376" pos:column="1">#<cpp:directive pos:line="21376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21376" pos:column="9">IDebugRemoteServer2_EnumRemoteProcesses</name><parameter_list pos:line="21376" pos:column="48">(<param><type><name pos:line="21376" pos:column="49">This</name></type></param>,<param><type><name pos:line="21376" pos:column="54">pProcessArray</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21377" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumRemoteProcesses(This,pProcessArray) )</cpp:value></cpp:define> 

<cpp:define pos:line="21379" pos:column="1">#<cpp:directive pos:line="21379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21379" pos:column="9">IDebugRemoteServer2_GetRemoteProcessInfo</name><parameter_list pos:line="21379" pos:column="49">(<param><type><name pos:line="21379" pos:column="50">This</name></type></param>,<param><type><name pos:line="21379" pos:column="55">dwProcessId</name></type></param>,<param><type><name pos:line="21379" pos:column="67">Fields</name></type></param>,<param><type><name pos:line="21379" pos:column="74">pInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21380" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemoteProcessInfo(This,dwProcessId,Fields,pInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="21382" pos:column="1">#<cpp:directive pos:line="21382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21382" pos:column="9">IDebugRemoteServer2_CreateRemoteInstance</name><parameter_list pos:line="21382" pos:column="49">(<param><type><name pos:line="21382" pos:column="50">This</name></type></param>,<param><type><name pos:line="21382" pos:column="55">szDll</name></type></param>,<param><type><name pos:line="21382" pos:column="61">wLangId</name></type></param>,<param><type><name pos:line="21382" pos:column="69">clsidObject</name></type></param>,<param><type><name pos:line="21382" pos:column="81">riid</name></type></param>,<param><type><name pos:line="21382" pos:column="86">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21383" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateRemoteInstance(This,szDll,wLangId,clsidObject,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21385" pos:column="1">#<cpp:directive pos:line="21385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21385" pos:column="9">IDebugRemoteServer2_WatchForRemoteProcessDestroy</name><parameter_list pos:line="21385" pos:column="57">(<param><type><name pos:line="21385" pos:column="58">This</name></type></param>,<param><type><name pos:line="21385" pos:column="63">pCallback</name></type></param>,<param><type><name pos:line="21385" pos:column="73">pProcess</name></type></param>,<param><type><name pos:line="21385" pos:column="82">pWatchCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21386" pos:column="5">( (This)-&gt;lpVtbl -&gt; WatchForRemoteProcessDestroy(This,pCallback,pProcess,pWatchCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="21388" pos:column="1">#<cpp:directive pos:line="21388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21388" pos:column="9">IDebugRemoteServer2_CloseRemoteWatchCookie</name><parameter_list pos:line="21388" pos:column="51">(<param><type><name pos:line="21388" pos:column="52">This</name></type></param>,<param><type><name pos:line="21388" pos:column="57">WatchCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21389" pos:column="5">( (This)-&gt;lpVtbl -&gt; CloseRemoteWatchCookie(This,WatchCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="21391" pos:column="1">#<cpp:directive pos:line="21391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21391" pos:column="9">IDebugRemoteServer2_TerminateRemoteProcess</name><parameter_list pos:line="21391" pos:column="51">(<param><type><name pos:line="21391" pos:column="52">This</name></type></param>,<param><type><name pos:line="21391" pos:column="57">dwProcessId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21392" pos:column="5">( (This)-&gt;lpVtbl -&gt; TerminateRemoteProcess(This,dwProcessId) )</cpp:value></cpp:define> 

<cpp:define pos:line="21394" pos:column="1">#<cpp:directive pos:line="21394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21394" pos:column="9">IDebugRemoteServer2_LaunchRemoteProcess</name><parameter_list pos:line="21394" pos:column="48">(<param><type><name pos:line="21394" pos:column="49">This</name></type></param>,<param><type><name pos:line="21394" pos:column="54">LaunchInfo</name></type></param>,<param><type><name pos:line="21394" pos:column="65">pdwProcessId</name></type></param>,<param><type><name pos:line="21394" pos:column="78">pResumeCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21395" pos:column="5">( (This)-&gt;lpVtbl -&gt; LaunchRemoteProcess(This,LaunchInfo,pdwProcessId,pResumeCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="21397" pos:column="1">#<cpp:directive pos:line="21397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21397" pos:column="9">IDebugRemoteServer2_CloseRemoteResumeCookie</name><parameter_list pos:line="21397" pos:column="52">(<param><type><name pos:line="21397" pos:column="53">This</name></type></param>,<param><type><name pos:line="21397" pos:column="58">ResumeCookie</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21398" pos:column="5">( (This)-&gt;lpVtbl -&gt; CloseRemoteResumeCookie(This,ResumeCookie) )</cpp:value></cpp:define> 

<cpp:define pos:line="21400" pos:column="1">#<cpp:directive pos:line="21400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21400" pos:column="9">IDebugRemoteServer2_DiagnoseRemoteWebDebuggingError</name><parameter_list pos:line="21400" pos:column="60">(<param><type><name pos:line="21400" pos:column="61">This</name></type></param>,<param><type><name pos:line="21400" pos:column="66">szUrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21401" pos:column="5">( (This)-&gt;lpVtbl -&gt; DiagnoseRemoteWebDebuggingError(This,szUrl) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21403" pos:column="1">#<cpp:directive pos:line="21403" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21403" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21406" pos:column="1">#<cpp:directive pos:line="21406" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21406" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21411" pos:column="1">#<cpp:directive pos:line="21411" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21411" pos:column="9">/* __IDebugRemoteServer2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21414" pos:column="1">#<cpp:directive pos:line="21414" pos:column="2">ifndef</cpp:directive> <name pos:line="21414" pos:column="9">__IDebugRemoteServerFactory2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21415" pos:column="1">#<cpp:directive pos:line="21415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21415" pos:column="9">__IDebugRemoteServerFactory2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21417" pos:column="1">/* interface IDebugRemoteServerFactory2 */</comment>
<comment type="block" pos:line="21418" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="21421" pos:column="1">EXTERN_C</name> <specifier pos:line="21421" pos:column="10">const</specifier> <name pos:line="21421" pos:column="16">IID</name></type> <name pos:line="21421" pos:column="20">IID_IDebugRemoteServerFactory2</name></decl>;</decl_stmt>

<cpp:if pos:line="21423" pos:column="1">#<cpp:directive pos:line="21423" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21423" pos:column="5">defined</name><argument_list pos:line="21423" pos:column="12">(<argument><expr><name pos:line="21423" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21423" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21423" pos:column="29">!</op:operator><call><name pos:line="21423" pos:column="30">defined</name><argument_list pos:line="21423" pos:column="37">(<argument><expr><name pos:line="21423" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21425" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21425" pos:column="19">(<argument pos:line="21425" pos:column="20">"4a5af829-ca32-4b01-aae4-4c53d260e75c"</argument>)</argument_list></macro>
    <label><name pos:line="21426" pos:column="5">IDebugRemoteServerFactory2</name> :</label> <expr_stmt><expr pos:line="21426" pos:column="34">public <name pos:line="21426" pos:column="41">IUnknown</name>
    <block pos:line="21427" pos:column="5">{
    <expr pos:line="21428" pos:column="5">public<op:operator pos:line="21428" pos:column="11">:</op:operator>
        virtual <name pos:line="21429" pos:column="17">HRESULT</name> <name pos:line="21429" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21429" pos:column="43">CreateServer</name><argument_list pos:line="21429" pos:column="55">( 
            <comment type="block" pos:line="21430" pos:column="13">/* [in] */</comment> <argument pos:line="21430" pos:column="24">__RPC__in_opt IDebugSession2 *pSession</argument>,
            <comment type="block" pos:line="21431" pos:column="13">/* [out] */</comment> <argument pos:line="21431" pos:column="25">__RPC__deref_out_opt IDebugRemoteServer2 **ppRemoteServer</argument>)</argument_list></macro> <op:operator pos:line="21431" pos:column="84">=</op:operator> <lit:literal type="number" pos:line="21431" pos:column="86">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21435" pos:column="1">#<cpp:directive pos:line="21435" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21435" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21437" pos:column="5">typedef <type><struct pos:line="21437" pos:column="13">struct <name pos:line="21437" pos:column="20">IDebugRemoteServerFactory2Vtbl</name>
    <block pos:line="21438" pos:column="5">{<public type="default" pos:line="21438" pos:column="6">
        <function_decl><type><name pos:line="21439" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21441" pos:column="9">HRESULT</name></type> ( <name pos:line="21441" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21441" pos:column="37">*</type:modifier><name pos:line="21441" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21441" pos:column="54">( 
            <param><decl><type><name pos:line="21442" pos:column="13">IDebugRemoteServerFactory2</name> <type:modifier pos:line="21442" pos:column="40">*</type:modifier></type> <name pos:line="21442" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="21443" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21443" pos:column="24">__RPC__in</name> <name pos:line="21443" pos:column="34">REFIID</name></type> <name pos:line="21443" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21444" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21445" pos:column="13">__RPC__deref_out</name>  <name pos:line="21445" pos:column="31">void</name> <type:modifier pos:line="21445" pos:column="36">*</type:modifier><type:modifier pos:line="21445" pos:column="37">*</type:modifier></type><name pos:line="21445" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21447" pos:column="9">ULONG</name></type> ( <name pos:line="21447" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21447" pos:column="35">*</type:modifier><name pos:line="21447" pos:column="36">AddRef</name> )<parameter_list pos:line="21447" pos:column="44">( 
            <param><decl><type><name pos:line="21448" pos:column="13">IDebugRemoteServerFactory2</name> <type:modifier pos:line="21448" pos:column="40">*</type:modifier></type> <name pos:line="21448" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21450" pos:column="9">ULONG</name></type> ( <name pos:line="21450" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21450" pos:column="35">*</type:modifier><name pos:line="21450" pos:column="36">Release</name> )<parameter_list pos:line="21450" pos:column="45">( 
            <param><decl><type><name pos:line="21451" pos:column="13">IDebugRemoteServerFactory2</name> <type:modifier pos:line="21451" pos:column="40">*</type:modifier></type> <name pos:line="21451" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21453" pos:column="9">HRESULT</name></type> ( <name pos:line="21453" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21453" pos:column="37">*</type:modifier><name pos:line="21453" pos:column="38">CreateServer</name> )<parameter_list pos:line="21453" pos:column="52">( 
            <param><decl><type><name pos:line="21454" pos:column="13">IDebugRemoteServerFactory2</name> <type:modifier pos:line="21454" pos:column="40">*</type:modifier></type> <name pos:line="21454" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="21455" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21455" pos:column="24">__RPC__in_opt</name> <name pos:line="21455" pos:column="38">IDebugSession2</name> <type:modifier pos:line="21455" pos:column="53">*</type:modifier></type><name pos:line="21455" pos:column="54">pSession</name></decl></param>,
            <comment type="block" pos:line="21456" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21456" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="21456" pos:column="46">IDebugRemoteServer2</name> <type:modifier pos:line="21456" pos:column="66">*</type:modifier><type:modifier pos:line="21456" pos:column="67">*</type:modifier></type><name pos:line="21456" pos:column="68">ppRemoteServer</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21458" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21459" pos:column="7">IDebugRemoteServerFactory2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21461" pos:column="5">interface</name></type> <name pos:line="21461" pos:column="15">IDebugRemoteServerFactory2</name>
    <argument_list pos:line="21462" pos:column="5">{
        <argument><expr><name pos:line="21463" pos:column="9">CONST_VTBL</name> struct <name pos:line="21463" pos:column="27">IDebugRemoteServerFactory2Vtbl</name> <op:operator pos:line="21463" pos:column="58">*</op:operator><name pos:line="21463" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21468" pos:column="1">#<cpp:directive pos:line="21468" pos:column="2">ifdef</cpp:directive> <name pos:line="21468" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21471" pos:column="1">#<cpp:directive pos:line="21471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21471" pos:column="9">IDebugRemoteServerFactory2_QueryInterface</name><parameter_list pos:line="21471" pos:column="50">(<param><type><name pos:line="21471" pos:column="51">This</name></type></param>,<param><type><name pos:line="21471" pos:column="56">riid</name></type></param>,<param><type><name pos:line="21471" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21472" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21474" pos:column="1">#<cpp:directive pos:line="21474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21474" pos:column="9">IDebugRemoteServerFactory2_AddRef</name><parameter_list pos:line="21474" pos:column="42">(<param><type><name pos:line="21474" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21475" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21477" pos:column="1">#<cpp:directive pos:line="21477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21477" pos:column="9">IDebugRemoteServerFactory2_Release</name><parameter_list pos:line="21477" pos:column="43">(<param><type><name pos:line="21477" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21478" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21481" pos:column="1">#<cpp:directive pos:line="21481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21481" pos:column="9">IDebugRemoteServerFactory2_CreateServer</name><parameter_list pos:line="21481" pos:column="48">(<param><type><name pos:line="21481" pos:column="49">This</name></type></param>,<param><type><name pos:line="21481" pos:column="54">pSession</name></type></param>,<param><type><name pos:line="21481" pos:column="63">ppRemoteServer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21482" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateServer(This,pSession,ppRemoteServer) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21484" pos:column="1">#<cpp:directive pos:line="21484" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21484" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21487" pos:column="1">#<cpp:directive pos:line="21487" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21487" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21492" pos:column="1">#<cpp:directive pos:line="21492" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21492" pos:column="9">/* __IDebugRemoteServerFactory2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21495" pos:column="1">#<cpp:directive pos:line="21495" pos:column="2">ifndef</cpp:directive> <name pos:line="21495" pos:column="9">__IDebugProgramPublisher2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21496" pos:column="1">#<cpp:directive pos:line="21496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21496" pos:column="9">__IDebugProgramPublisher2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21498" pos:column="1">/* interface IDebugProgramPublisher2 */</comment>
<comment type="block" pos:line="21499" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="21502" pos:column="1">EXTERN_C</name> <specifier pos:line="21502" pos:column="10">const</specifier> <name pos:line="21502" pos:column="16">IID</name></type> <name pos:line="21502" pos:column="20">IID_IDebugProgramPublisher2</name></decl>;</decl_stmt>

<cpp:if pos:line="21504" pos:column="1">#<cpp:directive pos:line="21504" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21504" pos:column="5">defined</name><argument_list pos:line="21504" pos:column="12">(<argument><expr><name pos:line="21504" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21504" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21504" pos:column="29">!</op:operator><call><name pos:line="21504" pos:column="30">defined</name><argument_list pos:line="21504" pos:column="37">(<argument><expr><name pos:line="21504" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21506" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21506" pos:column="19">(<argument pos:line="21506" pos:column="20">"a3dddf26-7792-4544-a9a4-d4dfb11cd8f3"</argument>)</argument_list></macro>
    <label><name pos:line="21507" pos:column="5">IDebugProgramPublisher2</name> :</label> <expr_stmt><expr pos:line="21507" pos:column="31">public <name pos:line="21507" pos:column="38">IUnknown</name>
    <block pos:line="21508" pos:column="5">{
    <expr pos:line="21509" pos:column="5">public<op:operator pos:line="21509" pos:column="11">:</op:operator>
        virtual <name pos:line="21510" pos:column="17">HRESULT</name> <name pos:line="21510" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21510" pos:column="43">PublishProgramNode</name><argument_list pos:line="21510" pos:column="61">( 
            <comment type="block" pos:line="21511" pos:column="13">/* [in] */</comment> <argument pos:line="21511" pos:column="24">__RPC__in_opt IDebugProgramNode2 *pProgramNode</argument>)</argument_list></macro> <op:operator pos:line="21511" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="21511" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="21513" pos:column="9">virtual <name pos:line="21513" pos:column="17">HRESULT</name> <name pos:line="21513" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21513" pos:column="43">UnpublishProgramNode</name><argument_list pos:line="21513" pos:column="63">( 
            <comment type="block" pos:line="21514" pos:column="13">/* [in] */</comment> <argument pos:line="21514" pos:column="24">__RPC__in_opt IDebugProgramNode2 *pProgramNode</argument>)</argument_list></macro> <op:operator pos:line="21514" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="21514" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="21516" pos:column="9">virtual <name pos:line="21516" pos:column="17">HRESULT</name> <name pos:line="21516" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21516" pos:column="43">PublishProgram</name><argument_list pos:line="21516" pos:column="57">( 
            <comment type="block" pos:line="21517" pos:column="13">/* [in] */</comment> <argument pos:line="21517" pos:column="24">CONST_GUID_ARRAY Engines</argument>,
            <comment type="block" pos:line="21518" pos:column="13">/* [full][in] */</comment> <argument pos:line="21518" pos:column="30">__RPC__in_opt LPCOLESTR szFriendlyName</argument>,
            <comment type="block" pos:line="21519" pos:column="13">/* [in] */</comment> <argument pos:line="21519" pos:column="24">__RPC__in_opt IUnknown *pDebuggeeInterface</argument>)</argument_list></macro> <op:operator pos:line="21519" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="21519" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="21521" pos:column="9">virtual <name pos:line="21521" pos:column="17">HRESULT</name> <name pos:line="21521" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21521" pos:column="43">UnpublishProgram</name><argument_list pos:line="21521" pos:column="59">( 
            <comment type="block" pos:line="21522" pos:column="13">/* [in] */</comment> <argument pos:line="21522" pos:column="24">__RPC__in_opt IUnknown *pDebuggeeInterface</argument>)</argument_list></macro> <op:operator pos:line="21522" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="21522" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="21524" pos:column="9">virtual <name pos:line="21524" pos:column="17">HRESULT</name> <name pos:line="21524" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21524" pos:column="43">SetDebuggerPresent</name><argument_list pos:line="21524" pos:column="61">( 
            <comment type="block" pos:line="21525" pos:column="13">/* [in] */</comment> <argument pos:line="21525" pos:column="24">BOOL fDebuggerPresent</argument>)</argument_list></macro> <op:operator pos:line="21525" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="21525" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21529" pos:column="1">#<cpp:directive pos:line="21529" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21529" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21531" pos:column="5">typedef <type><struct pos:line="21531" pos:column="13">struct <name pos:line="21531" pos:column="20">IDebugProgramPublisher2Vtbl</name>
    <block pos:line="21532" pos:column="5">{<public type="default" pos:line="21532" pos:column="6">
        <function_decl><type><name pos:line="21533" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21535" pos:column="9">HRESULT</name></type> ( <name pos:line="21535" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21535" pos:column="37">*</type:modifier><name pos:line="21535" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21535" pos:column="54">( 
            <param><decl><type><name pos:line="21536" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21536" pos:column="37">*</type:modifier></type> <name pos:line="21536" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="21537" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21537" pos:column="24">__RPC__in</name> <name pos:line="21537" pos:column="34">REFIID</name></type> <name pos:line="21537" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21538" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21539" pos:column="13">__RPC__deref_out</name>  <name pos:line="21539" pos:column="31">void</name> <type:modifier pos:line="21539" pos:column="36">*</type:modifier><type:modifier pos:line="21539" pos:column="37">*</type:modifier></type><name pos:line="21539" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21541" pos:column="9">ULONG</name></type> ( <name pos:line="21541" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21541" pos:column="35">*</type:modifier><name pos:line="21541" pos:column="36">AddRef</name> )<parameter_list pos:line="21541" pos:column="44">( 
            <param><decl><type><name pos:line="21542" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21542" pos:column="37">*</type:modifier></type> <name pos:line="21542" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21544" pos:column="9">ULONG</name></type> ( <name pos:line="21544" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21544" pos:column="35">*</type:modifier><name pos:line="21544" pos:column="36">Release</name> )<parameter_list pos:line="21544" pos:column="45">( 
            <param><decl><type><name pos:line="21545" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21545" pos:column="37">*</type:modifier></type> <name pos:line="21545" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21547" pos:column="9">HRESULT</name></type> ( <name pos:line="21547" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21547" pos:column="37">*</type:modifier><name pos:line="21547" pos:column="38">PublishProgramNode</name> )<parameter_list pos:line="21547" pos:column="58">( 
            <param><decl><type><name pos:line="21548" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21548" pos:column="37">*</type:modifier></type> <name pos:line="21548" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="21549" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21549" pos:column="24">__RPC__in_opt</name> <name pos:line="21549" pos:column="38">IDebugProgramNode2</name> <type:modifier pos:line="21549" pos:column="57">*</type:modifier></type><name pos:line="21549" pos:column="58">pProgramNode</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21551" pos:column="9">HRESULT</name></type> ( <name pos:line="21551" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21551" pos:column="37">*</type:modifier><name pos:line="21551" pos:column="38">UnpublishProgramNode</name> )<parameter_list pos:line="21551" pos:column="60">( 
            <param><decl><type><name pos:line="21552" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21552" pos:column="37">*</type:modifier></type> <name pos:line="21552" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="21553" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21553" pos:column="24">__RPC__in_opt</name> <name pos:line="21553" pos:column="38">IDebugProgramNode2</name> <type:modifier pos:line="21553" pos:column="57">*</type:modifier></type><name pos:line="21553" pos:column="58">pProgramNode</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21555" pos:column="9">HRESULT</name></type> ( <name pos:line="21555" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21555" pos:column="37">*</type:modifier><name pos:line="21555" pos:column="38">PublishProgram</name> )<parameter_list pos:line="21555" pos:column="54">( 
            <param><decl><type><name pos:line="21556" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21556" pos:column="37">*</type:modifier></type> <name pos:line="21556" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="21557" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21557" pos:column="24">CONST_GUID_ARRAY</name></type> <name pos:line="21557" pos:column="41">Engines</name></decl></param>,
            <comment type="block" pos:line="21558" pos:column="13">/* [full][in] */</comment> <param><decl><type><name pos:line="21558" pos:column="30">__RPC__in_opt</name> <name pos:line="21558" pos:column="44">LPCOLESTR</name></type> <name pos:line="21558" pos:column="54">szFriendlyName</name></decl></param>,
            <comment type="block" pos:line="21559" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21559" pos:column="24">__RPC__in_opt</name> <name pos:line="21559" pos:column="38">IUnknown</name> <type:modifier pos:line="21559" pos:column="47">*</type:modifier></type><name pos:line="21559" pos:column="48">pDebuggeeInterface</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21561" pos:column="9">HRESULT</name></type> ( <name pos:line="21561" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21561" pos:column="37">*</type:modifier><name pos:line="21561" pos:column="38">UnpublishProgram</name> )<parameter_list pos:line="21561" pos:column="56">( 
            <param><decl><type><name pos:line="21562" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21562" pos:column="37">*</type:modifier></type> <name pos:line="21562" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="21563" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21563" pos:column="24">__RPC__in_opt</name> <name pos:line="21563" pos:column="38">IUnknown</name> <type:modifier pos:line="21563" pos:column="47">*</type:modifier></type><name pos:line="21563" pos:column="48">pDebuggeeInterface</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21565" pos:column="9">HRESULT</name></type> ( <name pos:line="21565" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21565" pos:column="37">*</type:modifier><name pos:line="21565" pos:column="38">SetDebuggerPresent</name> )<parameter_list pos:line="21565" pos:column="58">( 
            <param><decl><type><name pos:line="21566" pos:column="13">IDebugProgramPublisher2</name> <type:modifier pos:line="21566" pos:column="37">*</type:modifier></type> <name pos:line="21566" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="21567" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21567" pos:column="24">BOOL</name></type> <name pos:line="21567" pos:column="29">fDebuggerPresent</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21569" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21570" pos:column="7">IDebugProgramPublisher2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21572" pos:column="5">interface</name></type> <name pos:line="21572" pos:column="15">IDebugProgramPublisher2</name>
    <argument_list pos:line="21573" pos:column="5">{
        <argument><expr><name pos:line="21574" pos:column="9">CONST_VTBL</name> struct <name pos:line="21574" pos:column="27">IDebugProgramPublisher2Vtbl</name> <op:operator pos:line="21574" pos:column="55">*</op:operator><name pos:line="21574" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21579" pos:column="1">#<cpp:directive pos:line="21579" pos:column="2">ifdef</cpp:directive> <name pos:line="21579" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21582" pos:column="1">#<cpp:directive pos:line="21582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21582" pos:column="9">IDebugProgramPublisher2_QueryInterface</name><parameter_list pos:line="21582" pos:column="47">(<param><type><name pos:line="21582" pos:column="48">This</name></type></param>,<param><type><name pos:line="21582" pos:column="53">riid</name></type></param>,<param><type><name pos:line="21582" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21583" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21585" pos:column="1">#<cpp:directive pos:line="21585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21585" pos:column="9">IDebugProgramPublisher2_AddRef</name><parameter_list pos:line="21585" pos:column="39">(<param><type><name pos:line="21585" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21586" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21588" pos:column="1">#<cpp:directive pos:line="21588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21588" pos:column="9">IDebugProgramPublisher2_Release</name><parameter_list pos:line="21588" pos:column="40">(<param><type><name pos:line="21588" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21589" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21592" pos:column="1">#<cpp:directive pos:line="21592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21592" pos:column="9">IDebugProgramPublisher2_PublishProgramNode</name><parameter_list pos:line="21592" pos:column="51">(<param><type><name pos:line="21592" pos:column="52">This</name></type></param>,<param><type><name pos:line="21592" pos:column="57">pProgramNode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21593" pos:column="5">( (This)-&gt;lpVtbl -&gt; PublishProgramNode(This,pProgramNode) )</cpp:value></cpp:define> 

<cpp:define pos:line="21595" pos:column="1">#<cpp:directive pos:line="21595" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21595" pos:column="9">IDebugProgramPublisher2_UnpublishProgramNode</name><parameter_list pos:line="21595" pos:column="53">(<param><type><name pos:line="21595" pos:column="54">This</name></type></param>,<param><type><name pos:line="21595" pos:column="59">pProgramNode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21596" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnpublishProgramNode(This,pProgramNode) )</cpp:value></cpp:define> 

<cpp:define pos:line="21598" pos:column="1">#<cpp:directive pos:line="21598" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21598" pos:column="9">IDebugProgramPublisher2_PublishProgram</name><parameter_list pos:line="21598" pos:column="47">(<param><type><name pos:line="21598" pos:column="48">This</name></type></param>,<param><type><name pos:line="21598" pos:column="53">Engines</name></type></param>,<param><type><name pos:line="21598" pos:column="61">szFriendlyName</name></type></param>,<param><type><name pos:line="21598" pos:column="76">pDebuggeeInterface</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21599" pos:column="5">( (This)-&gt;lpVtbl -&gt; PublishProgram(This,Engines,szFriendlyName,pDebuggeeInterface) )</cpp:value></cpp:define> 

<cpp:define pos:line="21601" pos:column="1">#<cpp:directive pos:line="21601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21601" pos:column="9">IDebugProgramPublisher2_UnpublishProgram</name><parameter_list pos:line="21601" pos:column="49">(<param><type><name pos:line="21601" pos:column="50">This</name></type></param>,<param><type><name pos:line="21601" pos:column="55">pDebuggeeInterface</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21602" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnpublishProgram(This,pDebuggeeInterface) )</cpp:value></cpp:define> 

<cpp:define pos:line="21604" pos:column="1">#<cpp:directive pos:line="21604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21604" pos:column="9">IDebugProgramPublisher2_SetDebuggerPresent</name><parameter_list pos:line="21604" pos:column="51">(<param><type><name pos:line="21604" pos:column="52">This</name></type></param>,<param><type><name pos:line="21604" pos:column="57">fDebuggerPresent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21605" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDebuggerPresent(This,fDebuggerPresent) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21607" pos:column="1">#<cpp:directive pos:line="21607" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21607" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21610" pos:column="1">#<cpp:directive pos:line="21610" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21610" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21615" pos:column="1">#<cpp:directive pos:line="21615" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21615" pos:column="9">/* __IDebugProgramPublisher2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21618" pos:column="1">#<cpp:directive pos:line="21618" pos:column="2">ifndef</cpp:directive> <name pos:line="21618" pos:column="9">__IDebugProgramProvider2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21619" pos:column="1">#<cpp:directive pos:line="21619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21619" pos:column="9">__IDebugProgramProvider2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21621" pos:column="1">/* interface IDebugProgramProvider2 */</comment>
<comment type="block" pos:line="21622" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="21625" pos:column="1">enum <name pos:line="21625" pos:column="6">enum_PROVIDER_FLAGS</name>
    <block pos:line="21626" pos:column="5">{	<decl><name pos:line="21626" pos:column="9">PFLAG_NONE</name>	<init pos:line="21626" pos:column="25">= <expr><lit:literal type="number" pos:line="21626" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="21626" pos:column="28">,</op:operator>
	<decl><name pos:line="21627" pos:column="9">PFLAG_REMOTE_PORT</name>	<init pos:line="21627" pos:column="33">= <expr><lit:literal type="number" pos:line="21627" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="21627" pos:column="38">,</op:operator>
	<decl><name pos:line="21628" pos:column="9">PFLAG_DEBUGGEE</name>	<init pos:line="21628" pos:column="25">= <expr><lit:literal type="number" pos:line="21628" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="21628" pos:column="30">,</op:operator>
	<decl><name pos:line="21629" pos:column="9">PFLAG_ATTACHED_TO_DEBUGGEE</name>	<init pos:line="21629" pos:column="41">= <expr><lit:literal type="number" pos:line="21629" pos:column="43">0x4</lit:literal></expr></init></decl><op:operator pos:line="21629" pos:column="46">,</op:operator>
	<decl><name pos:line="21630" pos:column="9">PFLAG_REASON_WATCH</name>	<init pos:line="21630" pos:column="33">= <expr><lit:literal type="number" pos:line="21630" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="21630" pos:column="38">,</op:operator>
	<decl><name pos:line="21631" pos:column="9">PFLAG_GET_PROGRAM_NODES</name>	<init pos:line="21631" pos:column="33">= <expr><lit:literal type="number" pos:line="21631" pos:column="35">0x10</lit:literal></expr></init></decl><op:operator pos:line="21631" pos:column="39">,</op:operator>
	<decl><name pos:line="21632" pos:column="9">PFLAG_GET_IS_DEBUGGER_PRESENT</name>	<init pos:line="21632" pos:column="41">= <expr><lit:literal type="number" pos:line="21632" pos:column="43">0x20</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="21634" pos:column="1">typedef <type><name pos:line="21634" pos:column="9">DWORD</name></type> <name pos:line="21634" pos:column="15">PROVIDER_FLAGS</name>;</typedef>


<enum pos:line="21637" pos:column="1">enum <name pos:line="21637" pos:column="6">enum_PROVIDER_FIELDS</name>
    <block pos:line="21638" pos:column="5">{	<decl><name pos:line="21638" pos:column="9">PFIELD_PROGRAM_NODES</name>	<init pos:line="21638" pos:column="33">= <expr><lit:literal type="number" pos:line="21638" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="21638" pos:column="38">,</op:operator>
	<decl><name pos:line="21639" pos:column="9">PFIELD_IS_DEBUGGER_PRESENT</name>	<init pos:line="21639" pos:column="41">= <expr><lit:literal type="number" pos:line="21639" pos:column="43">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="21641" pos:column="1">typedef <type><name pos:line="21641" pos:column="9">DWORD</name></type> <name pos:line="21641" pos:column="15">PROVIDER_FIELDS</name>;</typedef>

<typedef pos:line="21643" pos:column="1">typedef <type><struct pos:line="21643" pos:column="9">struct <name pos:line="21643" pos:column="16">tagPROGRAM_NODE_ARRAY</name>
    <block pos:line="21644" pos:column="5">{<public type="default" pos:line="21644" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21645" pos:column="5">DWORD</name></type> <name pos:line="21645" pos:column="11">dwCount</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21646" pos:column="5">IDebugProgramNode2</name> <type:modifier pos:line="21646" pos:column="24">*</type:modifier><type:modifier pos:line="21646" pos:column="25">*</type:modifier></type><name pos:line="21646" pos:column="26">Members</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21647" pos:column="9">PROGRAM_NODE_ARRAY</name>;</typedef>

<typedef pos:line="21649" pos:column="1">typedef <type><struct pos:line="21649" pos:column="9">struct <name pos:line="21649" pos:column="16">tagPROVIDER_PROCESS_DATA</name>
    <block pos:line="21650" pos:column="5">{<public type="default" pos:line="21650" pos:column="6">
    <decl_stmt><decl><type><name pos:line="21651" pos:column="5">PROVIDER_FIELDS</name></type> <name pos:line="21651" pos:column="21">Fields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21652" pos:column="5">PROGRAM_NODE_ARRAY</name></type> <name pos:line="21652" pos:column="24">ProgramNodes</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="21653" pos:column="5">BOOL</name></type> <name pos:line="21653" pos:column="10">fIsDebuggerPresent</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="21654" pos:column="9">PROVIDER_PROCESS_DATA</name>;</typedef>


<decl_stmt><decl><type><name pos:line="21657" pos:column="1">EXTERN_C</name> <specifier pos:line="21657" pos:column="10">const</specifier> <name pos:line="21657" pos:column="16">IID</name></type> <name pos:line="21657" pos:column="20">IID_IDebugProgramProvider2</name></decl>;</decl_stmt>

<cpp:if pos:line="21659" pos:column="1">#<cpp:directive pos:line="21659" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21659" pos:column="5">defined</name><argument_list pos:line="21659" pos:column="12">(<argument><expr><name pos:line="21659" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21659" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21659" pos:column="29">!</op:operator><call><name pos:line="21659" pos:column="30">defined</name><argument_list pos:line="21659" pos:column="37">(<argument><expr><name pos:line="21659" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21661" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21661" pos:column="19">(<argument pos:line="21661" pos:column="20">"1959530a-8e53-4e09-ad11-1b7334811cad"</argument>)</argument_list></macro>
    <label><name pos:line="21662" pos:column="5">IDebugProgramProvider2</name> :</label> <expr_stmt><expr pos:line="21662" pos:column="30">public <name pos:line="21662" pos:column="37">IUnknown</name>
    <block pos:line="21663" pos:column="5">{
    <expr pos:line="21664" pos:column="5">public<op:operator pos:line="21664" pos:column="11">:</op:operator>
        virtual <name pos:line="21665" pos:column="17">HRESULT</name> <name pos:line="21665" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21665" pos:column="43">GetProviderProcessData</name><argument_list pos:line="21665" pos:column="65">( 
            <comment type="block" pos:line="21666" pos:column="13">/* [in] */</comment> <argument pos:line="21666" pos:column="24">PROVIDER_FLAGS Flags</argument>,
            <comment type="block" pos:line="21667" pos:column="13">/* [in] */</comment> <argument pos:line="21667" pos:column="24">__RPC__in_opt IDebugDefaultPort2 *pPort</argument>,
            <comment type="block" pos:line="21668" pos:column="13">/* [in] */</comment> <argument pos:line="21668" pos:column="24">AD_PROCESS_ID processId</argument>,
            <comment type="block" pos:line="21669" pos:column="13">/* [in] */</comment> <argument pos:line="21669" pos:column="24">CONST_GUID_ARRAY EngineFilter</argument>,
            <comment type="block" pos:line="21670" pos:column="13">/* [out] */</comment> <argument pos:line="21670" pos:column="25">__RPC__out PROVIDER_PROCESS_DATA *pProcess</argument>)</argument_list></macro> <op:operator pos:line="21670" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="21670" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="21672" pos:column="9">virtual <name pos:line="21672" pos:column="17">HRESULT</name> <name pos:line="21672" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21672" pos:column="43">GetProviderProgramNode</name><argument_list pos:line="21672" pos:column="65">( 
            <comment type="block" pos:line="21673" pos:column="13">/* [in] */</comment> <argument pos:line="21673" pos:column="24">PROVIDER_FLAGS Flags</argument>,
            <comment type="block" pos:line="21674" pos:column="13">/* [in] */</comment> <argument pos:line="21674" pos:column="24">__RPC__in_opt IDebugDefaultPort2 *pPort</argument>,
            <comment type="block" pos:line="21675" pos:column="13">/* [in] */</comment> <argument pos:line="21675" pos:column="24">AD_PROCESS_ID processId</argument>,
            <comment type="block" pos:line="21676" pos:column="13">/* [in] */</comment> <argument pos:line="21676" pos:column="24">__RPC__in REFGUID guidEngine</argument>,
            <comment type="block" pos:line="21677" pos:column="13">/* [in] */</comment> <argument pos:line="21677" pos:column="24">UINT64 programId</argument>,
            <comment type="block" pos:line="21678" pos:column="13">/* [out] */</comment> <argument pos:line="21678" pos:column="25">__RPC__deref_out_opt IDebugProgramNode2 **ppProgramNode</argument>)</argument_list></macro> <op:operator pos:line="21678" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="21678" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="21680" pos:column="9">virtual <name pos:line="21680" pos:column="17">HRESULT</name> <name pos:line="21680" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21680" pos:column="43">WatchForProviderEvents</name><argument_list pos:line="21680" pos:column="65">( 
            <comment type="block" pos:line="21681" pos:column="13">/* [in] */</comment> <argument pos:line="21681" pos:column="24">PROVIDER_FLAGS Flags</argument>,
            <comment type="block" pos:line="21682" pos:column="13">/* [in] */</comment> <argument pos:line="21682" pos:column="24">__RPC__in_opt IDebugDefaultPort2 *pPort</argument>,
            <comment type="block" pos:line="21683" pos:column="13">/* [in] */</comment> <argument pos:line="21683" pos:column="24">AD_PROCESS_ID processId</argument>,
            <comment type="block" pos:line="21684" pos:column="13">/* [in] */</comment> <argument pos:line="21684" pos:column="24">CONST_GUID_ARRAY EngineFilter</argument>,
            <comment type="block" pos:line="21685" pos:column="13">/* [in] */</comment> <argument pos:line="21685" pos:column="24">__RPC__in REFGUID guidLaunchingEngine</argument>,
            <comment type="block" pos:line="21686" pos:column="13">/* [in] */</comment> <argument pos:line="21686" pos:column="24">__RPC__in_opt IDebugPortNotify2 *pEventCallback</argument>)</argument_list></macro> <op:operator pos:line="21686" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="21686" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="21688" pos:column="9">virtual <name pos:line="21688" pos:column="17">HRESULT</name> <name pos:line="21688" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21688" pos:column="43">SetLocale</name><argument_list pos:line="21688" pos:column="52">( 
            <comment type="block" pos:line="21689" pos:column="13">/* [in] */</comment> <argument pos:line="21689" pos:column="24">WORD wLangID</argument>)</argument_list></macro> <op:operator pos:line="21689" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="21689" pos:column="40">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21693" pos:column="1">#<cpp:directive pos:line="21693" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21693" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21695" pos:column="5">typedef <type><struct pos:line="21695" pos:column="13">struct <name pos:line="21695" pos:column="20">IDebugProgramProvider2Vtbl</name>
    <block pos:line="21696" pos:column="5">{<public type="default" pos:line="21696" pos:column="6">
        <function_decl><type><name pos:line="21697" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21699" pos:column="9">HRESULT</name></type> ( <name pos:line="21699" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21699" pos:column="37">*</type:modifier><name pos:line="21699" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21699" pos:column="54">( 
            <param><decl><type><name pos:line="21700" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21700" pos:column="36">*</type:modifier></type> <name pos:line="21700" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="21701" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21701" pos:column="24">__RPC__in</name> <name pos:line="21701" pos:column="34">REFIID</name></type> <name pos:line="21701" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21702" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21703" pos:column="13">__RPC__deref_out</name>  <name pos:line="21703" pos:column="31">void</name> <type:modifier pos:line="21703" pos:column="36">*</type:modifier><type:modifier pos:line="21703" pos:column="37">*</type:modifier></type><name pos:line="21703" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21705" pos:column="9">ULONG</name></type> ( <name pos:line="21705" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21705" pos:column="35">*</type:modifier><name pos:line="21705" pos:column="36">AddRef</name> )<parameter_list pos:line="21705" pos:column="44">( 
            <param><decl><type><name pos:line="21706" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21706" pos:column="36">*</type:modifier></type> <name pos:line="21706" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21708" pos:column="9">ULONG</name></type> ( <name pos:line="21708" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21708" pos:column="35">*</type:modifier><name pos:line="21708" pos:column="36">Release</name> )<parameter_list pos:line="21708" pos:column="45">( 
            <param><decl><type><name pos:line="21709" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21709" pos:column="36">*</type:modifier></type> <name pos:line="21709" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21711" pos:column="9">HRESULT</name></type> ( <name pos:line="21711" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21711" pos:column="37">*</type:modifier><name pos:line="21711" pos:column="38">GetProviderProcessData</name> )<parameter_list pos:line="21711" pos:column="62">( 
            <param><decl><type><name pos:line="21712" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21712" pos:column="36">*</type:modifier></type> <name pos:line="21712" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="21713" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21713" pos:column="24">PROVIDER_FLAGS</name></type> <name pos:line="21713" pos:column="39">Flags</name></decl></param>,
            <comment type="block" pos:line="21714" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21714" pos:column="24">__RPC__in_opt</name> <name pos:line="21714" pos:column="38">IDebugDefaultPort2</name> <type:modifier pos:line="21714" pos:column="57">*</type:modifier></type><name pos:line="21714" pos:column="58">pPort</name></decl></param>,
            <comment type="block" pos:line="21715" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21715" pos:column="24">AD_PROCESS_ID</name></type> <name pos:line="21715" pos:column="38">processId</name></decl></param>,
            <comment type="block" pos:line="21716" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21716" pos:column="24">CONST_GUID_ARRAY</name></type> <name pos:line="21716" pos:column="41">EngineFilter</name></decl></param>,
            <comment type="block" pos:line="21717" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21717" pos:column="25">__RPC__out</name> <name pos:line="21717" pos:column="36">PROVIDER_PROCESS_DATA</name> <type:modifier pos:line="21717" pos:column="58">*</type:modifier></type><name pos:line="21717" pos:column="59">pProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21719" pos:column="9">HRESULT</name></type> ( <name pos:line="21719" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21719" pos:column="37">*</type:modifier><name pos:line="21719" pos:column="38">GetProviderProgramNode</name> )<parameter_list pos:line="21719" pos:column="62">( 
            <param><decl><type><name pos:line="21720" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21720" pos:column="36">*</type:modifier></type> <name pos:line="21720" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="21721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21721" pos:column="24">PROVIDER_FLAGS</name></type> <name pos:line="21721" pos:column="39">Flags</name></decl></param>,
            <comment type="block" pos:line="21722" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21722" pos:column="24">__RPC__in_opt</name> <name pos:line="21722" pos:column="38">IDebugDefaultPort2</name> <type:modifier pos:line="21722" pos:column="57">*</type:modifier></type><name pos:line="21722" pos:column="58">pPort</name></decl></param>,
            <comment type="block" pos:line="21723" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21723" pos:column="24">AD_PROCESS_ID</name></type> <name pos:line="21723" pos:column="38">processId</name></decl></param>,
            <comment type="block" pos:line="21724" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21724" pos:column="24">__RPC__in</name> <name pos:line="21724" pos:column="34">REFGUID</name></type> <name pos:line="21724" pos:column="42">guidEngine</name></decl></param>,
            <comment type="block" pos:line="21725" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21725" pos:column="24">UINT64</name></type> <name pos:line="21725" pos:column="31">programId</name></decl></param>,
            <comment type="block" pos:line="21726" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="21726" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="21726" pos:column="46">IDebugProgramNode2</name> <type:modifier pos:line="21726" pos:column="65">*</type:modifier><type:modifier pos:line="21726" pos:column="66">*</type:modifier></type><name pos:line="21726" pos:column="67">ppProgramNode</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21728" pos:column="9">HRESULT</name></type> ( <name pos:line="21728" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21728" pos:column="37">*</type:modifier><name pos:line="21728" pos:column="38">WatchForProviderEvents</name> )<parameter_list pos:line="21728" pos:column="62">( 
            <param><decl><type><name pos:line="21729" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21729" pos:column="36">*</type:modifier></type> <name pos:line="21729" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="21730" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21730" pos:column="24">PROVIDER_FLAGS</name></type> <name pos:line="21730" pos:column="39">Flags</name></decl></param>,
            <comment type="block" pos:line="21731" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21731" pos:column="24">__RPC__in_opt</name> <name pos:line="21731" pos:column="38">IDebugDefaultPort2</name> <type:modifier pos:line="21731" pos:column="57">*</type:modifier></type><name pos:line="21731" pos:column="58">pPort</name></decl></param>,
            <comment type="block" pos:line="21732" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21732" pos:column="24">AD_PROCESS_ID</name></type> <name pos:line="21732" pos:column="38">processId</name></decl></param>,
            <comment type="block" pos:line="21733" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21733" pos:column="24">CONST_GUID_ARRAY</name></type> <name pos:line="21733" pos:column="41">EngineFilter</name></decl></param>,
            <comment type="block" pos:line="21734" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21734" pos:column="24">__RPC__in</name> <name pos:line="21734" pos:column="34">REFGUID</name></type> <name pos:line="21734" pos:column="42">guidLaunchingEngine</name></decl></param>,
            <comment type="block" pos:line="21735" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21735" pos:column="24">__RPC__in_opt</name> <name pos:line="21735" pos:column="38">IDebugPortNotify2</name> <type:modifier pos:line="21735" pos:column="56">*</type:modifier></type><name pos:line="21735" pos:column="57">pEventCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21737" pos:column="9">HRESULT</name></type> ( <name pos:line="21737" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21737" pos:column="37">*</type:modifier><name pos:line="21737" pos:column="38">SetLocale</name> )<parameter_list pos:line="21737" pos:column="49">( 
            <param><decl><type><name pos:line="21738" pos:column="13">IDebugProgramProvider2</name> <type:modifier pos:line="21738" pos:column="36">*</type:modifier></type> <name pos:line="21738" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="21739" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21739" pos:column="24">WORD</name></type> <name pos:line="21739" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21741" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21742" pos:column="7">IDebugProgramProvider2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21744" pos:column="5">interface</name></type> <name pos:line="21744" pos:column="15">IDebugProgramProvider2</name>
    <argument_list pos:line="21745" pos:column="5">{
        <argument><expr><name pos:line="21746" pos:column="9">CONST_VTBL</name> struct <name pos:line="21746" pos:column="27">IDebugProgramProvider2Vtbl</name> <op:operator pos:line="21746" pos:column="54">*</op:operator><name pos:line="21746" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21751" pos:column="1">#<cpp:directive pos:line="21751" pos:column="2">ifdef</cpp:directive> <name pos:line="21751" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21754" pos:column="1">#<cpp:directive pos:line="21754" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21754" pos:column="9">IDebugProgramProvider2_QueryInterface</name><parameter_list pos:line="21754" pos:column="46">(<param><type><name pos:line="21754" pos:column="47">This</name></type></param>,<param><type><name pos:line="21754" pos:column="52">riid</name></type></param>,<param><type><name pos:line="21754" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21755" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21757" pos:column="1">#<cpp:directive pos:line="21757" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21757" pos:column="9">IDebugProgramProvider2_AddRef</name><parameter_list pos:line="21757" pos:column="38">(<param><type><name pos:line="21757" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21758" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21760" pos:column="1">#<cpp:directive pos:line="21760" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21760" pos:column="9">IDebugProgramProvider2_Release</name><parameter_list pos:line="21760" pos:column="39">(<param><type><name pos:line="21760" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21761" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21764" pos:column="1">#<cpp:directive pos:line="21764" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21764" pos:column="9">IDebugProgramProvider2_GetProviderProcessData</name><parameter_list pos:line="21764" pos:column="54">(<param><type><name pos:line="21764" pos:column="55">This</name></type></param>,<param><type><name pos:line="21764" pos:column="60">Flags</name></type></param>,<param><type><name pos:line="21764" pos:column="66">pPort</name></type></param>,<param><type><name pos:line="21764" pos:column="72">processId</name></type></param>,<param><type><name pos:line="21764" pos:column="82">EngineFilter</name></type></param>,<param><type><name pos:line="21764" pos:column="95">pProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21765" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProviderProcessData(This,Flags,pPort,processId,EngineFilter,pProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="21767" pos:column="1">#<cpp:directive pos:line="21767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21767" pos:column="9">IDebugProgramProvider2_GetProviderProgramNode</name><parameter_list pos:line="21767" pos:column="54">(<param><type><name pos:line="21767" pos:column="55">This</name></type></param>,<param><type><name pos:line="21767" pos:column="60">Flags</name></type></param>,<param><type><name pos:line="21767" pos:column="66">pPort</name></type></param>,<param><type><name pos:line="21767" pos:column="72">processId</name></type></param>,<param><type><name pos:line="21767" pos:column="82">guidEngine</name></type></param>,<param><type><name pos:line="21767" pos:column="93">programId</name></type></param>,<param><type><name pos:line="21767" pos:column="103">ppProgramNode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21768" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProviderProgramNode(This,Flags,pPort,processId,guidEngine,programId,ppProgramNode) )</cpp:value></cpp:define> 

<cpp:define pos:line="21770" pos:column="1">#<cpp:directive pos:line="21770" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21770" pos:column="9">IDebugProgramProvider2_WatchForProviderEvents</name><parameter_list pos:line="21770" pos:column="54">(<param><type><name pos:line="21770" pos:column="55">This</name></type></param>,<param><type><name pos:line="21770" pos:column="60">Flags</name></type></param>,<param><type><name pos:line="21770" pos:column="66">pPort</name></type></param>,<param><type><name pos:line="21770" pos:column="72">processId</name></type></param>,<param><type><name pos:line="21770" pos:column="82">EngineFilter</name></type></param>,<param><type><name pos:line="21770" pos:column="95">guidLaunchingEngine</name></type></param>,<param><type><name pos:line="21770" pos:column="115">pEventCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21771" pos:column="5">( (This)-&gt;lpVtbl -&gt; WatchForProviderEvents(This,Flags,pPort,processId,EngineFilter,guidLaunchingEngine,pEventCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="21773" pos:column="1">#<cpp:directive pos:line="21773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21773" pos:column="9">IDebugProgramProvider2_SetLocale</name><parameter_list pos:line="21773" pos:column="41">(<param><type><name pos:line="21773" pos:column="42">This</name></type></param>,<param><type><name pos:line="21773" pos:column="47">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21774" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21776" pos:column="1">#<cpp:directive pos:line="21776" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21776" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21779" pos:column="1">#<cpp:directive pos:line="21779" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21779" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21784" pos:column="1">#<cpp:directive pos:line="21784" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21784" pos:column="9">/* __IDebugProgramProvider2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21787" pos:column="1">#<cpp:directive pos:line="21787" pos:column="2">ifndef</cpp:directive> <name pos:line="21787" pos:column="9">__IDebugProviderProgramNode2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21788" pos:column="1">#<cpp:directive pos:line="21788" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21788" pos:column="9">__IDebugProviderProgramNode2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21790" pos:column="1">/* interface IDebugProviderProgramNode2 */</comment>
<comment type="block" pos:line="21791" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="21794" pos:column="1">EXTERN_C</name> <specifier pos:line="21794" pos:column="10">const</specifier> <name pos:line="21794" pos:column="16">IID</name></type> <name pos:line="21794" pos:column="20">IID_IDebugProviderProgramNode2</name></decl>;</decl_stmt>

<cpp:if pos:line="21796" pos:column="1">#<cpp:directive pos:line="21796" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21796" pos:column="5">defined</name><argument_list pos:line="21796" pos:column="12">(<argument><expr><name pos:line="21796" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21796" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21796" pos:column="29">!</op:operator><call><name pos:line="21796" pos:column="30">defined</name><argument_list pos:line="21796" pos:column="37">(<argument><expr><name pos:line="21796" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21798" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21798" pos:column="19">(<argument pos:line="21798" pos:column="20">"afdba726-047a-4b83-b8c7-d812fe9caa5c"</argument>)</argument_list></macro>
    <label><name pos:line="21799" pos:column="5">IDebugProviderProgramNode2</name> :</label> <expr_stmt><expr pos:line="21799" pos:column="34">public <name pos:line="21799" pos:column="41">IUnknown</name>
    <block pos:line="21800" pos:column="5">{
    <expr pos:line="21801" pos:column="5">public<op:operator pos:line="21801" pos:column="11">:</op:operator>
        virtual <name pos:line="21802" pos:column="17">HRESULT</name> <name pos:line="21802" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21802" pos:column="43">UnmarshalDebuggeeInterface</name><argument_list pos:line="21802" pos:column="69">( 
            <comment type="block" pos:line="21803" pos:column="13">/* [in] */</comment> <argument pos:line="21803" pos:column="24">__RPC__in REFIID riid</argument>,
            <comment type="block" pos:line="21804" pos:column="13">/* [iid_is][out] */</comment> <argument pos:line="21804" pos:column="33">__RPC__deref_out_opt void **ppvObject</argument>)</argument_list></macro> <op:operator pos:line="21804" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="21804" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21808" pos:column="1">#<cpp:directive pos:line="21808" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21808" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21810" pos:column="5">typedef <type><struct pos:line="21810" pos:column="13">struct <name pos:line="21810" pos:column="20">IDebugProviderProgramNode2Vtbl</name>
    <block pos:line="21811" pos:column="5">{<public type="default" pos:line="21811" pos:column="6">
        <function_decl><type><name pos:line="21812" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21814" pos:column="9">HRESULT</name></type> ( <name pos:line="21814" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21814" pos:column="37">*</type:modifier><name pos:line="21814" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21814" pos:column="54">( 
            <param><decl><type><name pos:line="21815" pos:column="13">IDebugProviderProgramNode2</name> <type:modifier pos:line="21815" pos:column="40">*</type:modifier></type> <name pos:line="21815" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="21816" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21816" pos:column="24">__RPC__in</name> <name pos:line="21816" pos:column="34">REFIID</name></type> <name pos:line="21816" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21817" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21818" pos:column="13">__RPC__deref_out</name>  <name pos:line="21818" pos:column="31">void</name> <type:modifier pos:line="21818" pos:column="36">*</type:modifier><type:modifier pos:line="21818" pos:column="37">*</type:modifier></type><name pos:line="21818" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21820" pos:column="9">ULONG</name></type> ( <name pos:line="21820" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21820" pos:column="35">*</type:modifier><name pos:line="21820" pos:column="36">AddRef</name> )<parameter_list pos:line="21820" pos:column="44">( 
            <param><decl><type><name pos:line="21821" pos:column="13">IDebugProviderProgramNode2</name> <type:modifier pos:line="21821" pos:column="40">*</type:modifier></type> <name pos:line="21821" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21823" pos:column="9">ULONG</name></type> ( <name pos:line="21823" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21823" pos:column="35">*</type:modifier><name pos:line="21823" pos:column="36">Release</name> )<parameter_list pos:line="21823" pos:column="45">( 
            <param><decl><type><name pos:line="21824" pos:column="13">IDebugProviderProgramNode2</name> <type:modifier pos:line="21824" pos:column="40">*</type:modifier></type> <name pos:line="21824" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21826" pos:column="9">HRESULT</name></type> ( <name pos:line="21826" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21826" pos:column="37">*</type:modifier><name pos:line="21826" pos:column="38">UnmarshalDebuggeeInterface</name> )<parameter_list pos:line="21826" pos:column="66">( 
            <param><decl><type><name pos:line="21827" pos:column="13">IDebugProviderProgramNode2</name> <type:modifier pos:line="21827" pos:column="40">*</type:modifier></type> <name pos:line="21827" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="21828" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21828" pos:column="24">__RPC__in</name> <name pos:line="21828" pos:column="34">REFIID</name></type> <name pos:line="21828" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21829" pos:column="13">/* [iid_is][out] */</comment> <param><decl><type><name pos:line="21829" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="21829" pos:column="54">void</name> <type:modifier pos:line="21829" pos:column="59">*</type:modifier><type:modifier pos:line="21829" pos:column="60">*</type:modifier></type><name pos:line="21829" pos:column="61">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21831" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21832" pos:column="7">IDebugProviderProgramNode2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21834" pos:column="5">interface</name></type> <name pos:line="21834" pos:column="15">IDebugProviderProgramNode2</name>
    <argument_list pos:line="21835" pos:column="5">{
        <argument><expr><name pos:line="21836" pos:column="9">CONST_VTBL</name> struct <name pos:line="21836" pos:column="27">IDebugProviderProgramNode2Vtbl</name> <op:operator pos:line="21836" pos:column="58">*</op:operator><name pos:line="21836" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21841" pos:column="1">#<cpp:directive pos:line="21841" pos:column="2">ifdef</cpp:directive> <name pos:line="21841" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21844" pos:column="1">#<cpp:directive pos:line="21844" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21844" pos:column="9">IDebugProviderProgramNode2_QueryInterface</name><parameter_list pos:line="21844" pos:column="50">(<param><type><name pos:line="21844" pos:column="51">This</name></type></param>,<param><type><name pos:line="21844" pos:column="56">riid</name></type></param>,<param><type><name pos:line="21844" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21845" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21847" pos:column="1">#<cpp:directive pos:line="21847" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21847" pos:column="9">IDebugProviderProgramNode2_AddRef</name><parameter_list pos:line="21847" pos:column="42">(<param><type><name pos:line="21847" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21848" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21850" pos:column="1">#<cpp:directive pos:line="21850" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21850" pos:column="9">IDebugProviderProgramNode2_Release</name><parameter_list pos:line="21850" pos:column="43">(<param><type><name pos:line="21850" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21851" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21854" pos:column="1">#<cpp:directive pos:line="21854" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21854" pos:column="9">IDebugProviderProgramNode2_UnmarshalDebuggeeInterface</name><parameter_list pos:line="21854" pos:column="62">(<param><type><name pos:line="21854" pos:column="63">This</name></type></param>,<param><type><name pos:line="21854" pos:column="68">riid</name></type></param>,<param><type><name pos:line="21854" pos:column="73">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21855" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnmarshalDebuggeeInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21857" pos:column="1">#<cpp:directive pos:line="21857" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21857" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21860" pos:column="1">#<cpp:directive pos:line="21860" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21860" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21865" pos:column="1">#<cpp:directive pos:line="21865" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21865" pos:column="9">/* __IDebugProviderProgramNode2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21868" pos:column="1">#<cpp:directive pos:line="21868" pos:column="2">ifndef</cpp:directive> <name pos:line="21868" pos:column="9">__IDebugFirewallConfigurationCallback2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21869" pos:column="1">#<cpp:directive pos:line="21869" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21869" pos:column="9">__IDebugFirewallConfigurationCallback2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21871" pos:column="1">/* interface IDebugFirewallConfigurationCallback2 */</comment>
<comment type="block" pos:line="21872" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="21875" pos:column="1">EXTERN_C</name> <specifier pos:line="21875" pos:column="10">const</specifier> <name pos:line="21875" pos:column="16">IID</name></type> <name pos:line="21875" pos:column="20">IID_IDebugFirewallConfigurationCallback2</name></decl>;</decl_stmt>

<cpp:if pos:line="21877" pos:column="1">#<cpp:directive pos:line="21877" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21877" pos:column="5">defined</name><argument_list pos:line="21877" pos:column="12">(<argument><expr><name pos:line="21877" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21877" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21877" pos:column="29">!</op:operator><call><name pos:line="21877" pos:column="30">defined</name><argument_list pos:line="21877" pos:column="37">(<argument><expr><name pos:line="21877" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21879" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21879" pos:column="19">(<argument pos:line="21879" pos:column="20">"ba3288db-224a-4fd6-a37e-64e7abe9c4a1"</argument>)</argument_list></macro>
    <label><name pos:line="21880" pos:column="5">IDebugFirewallConfigurationCallback2</name> :</label> <expr_stmt><expr pos:line="21880" pos:column="44">public <name pos:line="21880" pos:column="51">IUnknown</name>
    <block pos:line="21881" pos:column="5">{
    <expr pos:line="21882" pos:column="5">public<op:operator pos:line="21882" pos:column="11">:</op:operator>
        virtual <name pos:line="21883" pos:column="17">HRESULT</name> <name pos:line="21883" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="21883" pos:column="43">EnsureDCOMUnblocked</name><argument_list pos:line="21883" pos:column="62">( <argument><expr><name pos:line="21883" pos:column="64">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="21883" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="21883" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21887" pos:column="1">#<cpp:directive pos:line="21887" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21887" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21889" pos:column="5">typedef <type><struct pos:line="21889" pos:column="13">struct <name pos:line="21889" pos:column="20">IDebugFirewallConfigurationCallback2Vtbl</name>
    <block pos:line="21890" pos:column="5">{<public type="default" pos:line="21890" pos:column="6">
        <function_decl><type><name pos:line="21891" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21893" pos:column="9">HRESULT</name></type> ( <name pos:line="21893" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21893" pos:column="37">*</type:modifier><name pos:line="21893" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21893" pos:column="54">( 
            <param><decl><type><name pos:line="21894" pos:column="13">IDebugFirewallConfigurationCallback2</name> <type:modifier pos:line="21894" pos:column="50">*</type:modifier></type> <name pos:line="21894" pos:column="52">This</name></decl></param>,
            <comment type="block" pos:line="21895" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21895" pos:column="24">__RPC__in</name> <name pos:line="21895" pos:column="34">REFIID</name></type> <name pos:line="21895" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21896" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21897" pos:column="13">__RPC__deref_out</name>  <name pos:line="21897" pos:column="31">void</name> <type:modifier pos:line="21897" pos:column="36">*</type:modifier><type:modifier pos:line="21897" pos:column="37">*</type:modifier></type><name pos:line="21897" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21899" pos:column="9">ULONG</name></type> ( <name pos:line="21899" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21899" pos:column="35">*</type:modifier><name pos:line="21899" pos:column="36">AddRef</name> )<parameter_list pos:line="21899" pos:column="44">( 
            <param><decl><type><name pos:line="21900" pos:column="13">IDebugFirewallConfigurationCallback2</name> <type:modifier pos:line="21900" pos:column="50">*</type:modifier></type> <name pos:line="21900" pos:column="52">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21902" pos:column="9">ULONG</name></type> ( <name pos:line="21902" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21902" pos:column="35">*</type:modifier><name pos:line="21902" pos:column="36">Release</name> )<parameter_list pos:line="21902" pos:column="45">( 
            <param><decl><type><name pos:line="21903" pos:column="13">IDebugFirewallConfigurationCallback2</name> <type:modifier pos:line="21903" pos:column="50">*</type:modifier></type> <name pos:line="21903" pos:column="52">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21905" pos:column="9">HRESULT</name></type> ( <name pos:line="21905" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21905" pos:column="37">*</type:modifier><name pos:line="21905" pos:column="38">EnsureDCOMUnblocked</name> )<parameter_list pos:line="21905" pos:column="59">( 
            <param><decl><type><name pos:line="21906" pos:column="13">IDebugFirewallConfigurationCallback2</name> <type:modifier pos:line="21906" pos:column="50">*</type:modifier></type> <name pos:line="21906" pos:column="52">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21908" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21909" pos:column="7">IDebugFirewallConfigurationCallback2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21911" pos:column="5">interface</name></type> <name pos:line="21911" pos:column="15">IDebugFirewallConfigurationCallback2</name>
    <argument_list pos:line="21912" pos:column="5">{
        <argument><expr><name pos:line="21913" pos:column="9">CONST_VTBL</name> struct <name pos:line="21913" pos:column="27">IDebugFirewallConfigurationCallback2Vtbl</name> <op:operator pos:line="21913" pos:column="68">*</op:operator><name pos:line="21913" pos:column="69">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21918" pos:column="1">#<cpp:directive pos:line="21918" pos:column="2">ifdef</cpp:directive> <name pos:line="21918" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="21921" pos:column="1">#<cpp:directive pos:line="21921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21921" pos:column="9">IDebugFirewallConfigurationCallback2_QueryInterface</name><parameter_list pos:line="21921" pos:column="60">(<param><type><name pos:line="21921" pos:column="61">This</name></type></param>,<param><type><name pos:line="21921" pos:column="66">riid</name></type></param>,<param><type><name pos:line="21921" pos:column="71">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21922" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="21924" pos:column="1">#<cpp:directive pos:line="21924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21924" pos:column="9">IDebugFirewallConfigurationCallback2_AddRef</name><parameter_list pos:line="21924" pos:column="52">(<param><type><name pos:line="21924" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21925" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="21927" pos:column="1">#<cpp:directive pos:line="21927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21927" pos:column="9">IDebugFirewallConfigurationCallback2_Release</name><parameter_list pos:line="21927" pos:column="53">(<param><type><name pos:line="21927" pos:column="54">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21928" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="21931" pos:column="1">#<cpp:directive pos:line="21931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21931" pos:column="9">IDebugFirewallConfigurationCallback2_EnsureDCOMUnblocked</name><parameter_list pos:line="21931" pos:column="65">(<param><type><name pos:line="21931" pos:column="66">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="21932" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnsureDCOMUnblocked(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="21934" pos:column="1">#<cpp:directive pos:line="21934" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="21934" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="21937" pos:column="1">#<cpp:directive pos:line="21937" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21937" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="21942" pos:column="1">#<cpp:directive pos:line="21942" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="21942" pos:column="9">/* __IDebugFirewallConfigurationCallback2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="21945" pos:column="1">#<cpp:directive pos:line="21945" pos:column="2">ifndef</cpp:directive> <name pos:line="21945" pos:column="9">__IDebugAttachSecurityCallback2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="21946" pos:column="1">#<cpp:directive pos:line="21946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21946" pos:column="9">__IDebugAttachSecurityCallback2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="21948" pos:column="1">/* interface IDebugAttachSecurityCallback2 */</comment>
<comment type="block" pos:line="21949" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="21952" pos:column="1">EXTERN_C</name> <specifier pos:line="21952" pos:column="10">const</specifier> <name pos:line="21952" pos:column="16">IID</name></type> <name pos:line="21952" pos:column="20">IID_IDebugAttachSecurityCallback2</name></decl>;</decl_stmt>

<cpp:if pos:line="21954" pos:column="1">#<cpp:directive pos:line="21954" pos:column="2">if</cpp:directive> <expr><call><name pos:line="21954" pos:column="5">defined</name><argument_list pos:line="21954" pos:column="12">(<argument><expr><name pos:line="21954" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="21954" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="21954" pos:column="29">!</op:operator><call><name pos:line="21954" pos:column="30">defined</name><argument_list pos:line="21954" pos:column="37">(<argument><expr><name pos:line="21954" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="21956" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="21956" pos:column="19">(<argument pos:line="21956" pos:column="20">"a19e7faf-cb6f-43ba-ac16-bde9823d6dd1"</argument>)</argument_list></macro>
    <label><name pos:line="21957" pos:column="5">IDebugAttachSecurityCallback2</name> :</label> <expr_stmt><expr pos:line="21957" pos:column="37">public <name pos:line="21957" pos:column="44">IUnknown</name>
    <block pos:line="21958" pos:column="5">{
    <expr pos:line="21959" pos:column="5">public<op:operator pos:line="21959" pos:column="11">:</op:operator>
        virtual <name pos:line="21960" pos:column="17">HRESULT</name> <name pos:line="21960" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="21960" pos:column="43">OnUnsafeAttach</name><argument_list pos:line="21960" pos:column="57">( 
            <comment type="block" pos:line="21961" pos:column="13">/* [in] */</comment> <argument pos:line="21961" pos:column="24">__RPC__in_opt IDebugProcess2 *pProcess</argument>)</argument_list></macro> <op:operator pos:line="21961" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="21961" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="21965" pos:column="1">#<cpp:directive pos:line="21965" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="21965" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="21967" pos:column="5">typedef <type><struct pos:line="21967" pos:column="13">struct <name pos:line="21967" pos:column="20">IDebugAttachSecurityCallback2Vtbl</name>
    <block pos:line="21968" pos:column="5">{<public type="default" pos:line="21968" pos:column="6">
        <function_decl><type><name pos:line="21969" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="21971" pos:column="9">HRESULT</name></type> ( <name pos:line="21971" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21971" pos:column="37">*</type:modifier><name pos:line="21971" pos:column="38">QueryInterface</name> )<parameter_list pos:line="21971" pos:column="54">( 
            <param><decl><type><name pos:line="21972" pos:column="13">IDebugAttachSecurityCallback2</name> <type:modifier pos:line="21972" pos:column="43">*</type:modifier></type> <name pos:line="21972" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="21973" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21973" pos:column="24">__RPC__in</name> <name pos:line="21973" pos:column="34">REFIID</name></type> <name pos:line="21973" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="21974" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="21975" pos:column="13">__RPC__deref_out</name>  <name pos:line="21975" pos:column="31">void</name> <type:modifier pos:line="21975" pos:column="36">*</type:modifier><type:modifier pos:line="21975" pos:column="37">*</type:modifier></type><name pos:line="21975" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21977" pos:column="9">ULONG</name></type> ( <name pos:line="21977" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21977" pos:column="35">*</type:modifier><name pos:line="21977" pos:column="36">AddRef</name> )<parameter_list pos:line="21977" pos:column="44">( 
            <param><decl><type><name pos:line="21978" pos:column="13">IDebugAttachSecurityCallback2</name> <type:modifier pos:line="21978" pos:column="43">*</type:modifier></type> <name pos:line="21978" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21980" pos:column="9">ULONG</name></type> ( <name pos:line="21980" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="21980" pos:column="35">*</type:modifier><name pos:line="21980" pos:column="36">Release</name> )<parameter_list pos:line="21980" pos:column="45">( 
            <param><decl><type><name pos:line="21981" pos:column="13">IDebugAttachSecurityCallback2</name> <type:modifier pos:line="21981" pos:column="43">*</type:modifier></type> <name pos:line="21981" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="21983" pos:column="9">HRESULT</name></type> ( <name pos:line="21983" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="21983" pos:column="37">*</type:modifier><name pos:line="21983" pos:column="38">OnUnsafeAttach</name> )<parameter_list pos:line="21983" pos:column="54">( 
            <param><decl><type><name pos:line="21984" pos:column="13">IDebugAttachSecurityCallback2</name> <type:modifier pos:line="21984" pos:column="43">*</type:modifier></type> <name pos:line="21984" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="21985" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="21985" pos:column="24">__RPC__in_opt</name> <name pos:line="21985" pos:column="38">IDebugProcess2</name> <type:modifier pos:line="21985" pos:column="53">*</type:modifier></type><name pos:line="21985" pos:column="54">pProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="21987" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="21988" pos:column="7">IDebugAttachSecurityCallback2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="21990" pos:column="5">interface</name></type> <name pos:line="21990" pos:column="15">IDebugAttachSecurityCallback2</name>
    <argument_list pos:line="21991" pos:column="5">{
        <argument><expr><name pos:line="21992" pos:column="9">CONST_VTBL</name> struct <name pos:line="21992" pos:column="27">IDebugAttachSecurityCallback2Vtbl</name> <op:operator pos:line="21992" pos:column="61">*</op:operator><name pos:line="21992" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="21997" pos:column="1">#<cpp:directive pos:line="21997" pos:column="2">ifdef</cpp:directive> <name pos:line="21997" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="22000" pos:column="1">#<cpp:directive pos:line="22000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22000" pos:column="9">IDebugAttachSecurityCallback2_QueryInterface</name><parameter_list pos:line="22000" pos:column="53">(<param><type><name pos:line="22000" pos:column="54">This</name></type></param>,<param><type><name pos:line="22000" pos:column="59">riid</name></type></param>,<param><type><name pos:line="22000" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="22001" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="22003" pos:column="1">#<cpp:directive pos:line="22003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22003" pos:column="9">IDebugAttachSecurityCallback2_AddRef</name><parameter_list pos:line="22003" pos:column="45">(<param><type><name pos:line="22003" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="22004" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="22006" pos:column="1">#<cpp:directive pos:line="22006" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22006" pos:column="9">IDebugAttachSecurityCallback2_Release</name><parameter_list pos:line="22006" pos:column="46">(<param><type><name pos:line="22006" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="22007" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="22010" pos:column="1">#<cpp:directive pos:line="22010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22010" pos:column="9">IDebugAttachSecurityCallback2_OnUnsafeAttach</name><parameter_list pos:line="22010" pos:column="53">(<param><type><name pos:line="22010" pos:column="54">This</name></type></param>,<param><type><name pos:line="22010" pos:column="59">pProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="22011" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnUnsafeAttach(This,pProcess) )</cpp:value></cpp:define> 

<cpp:endif pos:line="22013" pos:column="1">#<cpp:directive pos:line="22013" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="22013" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="22016" pos:column="1">#<cpp:directive pos:line="22016" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="22016" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="22021" pos:column="1">#<cpp:directive pos:line="22021" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="22021" pos:column="9">/* __IDebugAttachSecurityCallback2_INTERFACE_DEFINED__ */</comment>



<cpp:ifndef pos:line="22025" pos:column="1">#<cpp:directive pos:line="22025" pos:column="2">ifndef</cpp:directive> <name pos:line="22025" pos:column="9">__AD2Lib_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="22026" pos:column="1">#<cpp:directive pos:line="22026" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22026" pos:column="9">__AD2Lib_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="22028" pos:column="1">/* library AD2Lib */</comment>
<comment type="block" pos:line="22029" pos:column="1">/* [uuid] */</comment> 

<cpp:ifdef pos:line="22031" pos:column="1">#<cpp:directive pos:line="22031" pos:column="2">ifdef</cpp:directive> <name pos:line="22031" pos:column="8">DEBUG</name></cpp:ifdef>
<cpp:define pos:line="22032" pos:column="1">#<cpp:directive pos:line="22032" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22032" pos:column="9">MsMachineDebugManager_V7</name></cpp:macro> <cpp:value pos:line="22032" pos:column="34">MsMachineDebugManager_V7_DEBUG</cpp:value></cpp:define>
<cpp:define pos:line="22033" pos:column="1">#<cpp:directive pos:line="22033" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22033" pos:column="9">CLSID_MsMachineDebugManager_V7</name></cpp:macro> <cpp:value pos:line="22033" pos:column="40">CLSID_MsMachineDebugManager_V7_DEBUG</cpp:value></cpp:define>
<cpp:else pos:line="22034" pos:column="1">#<cpp:directive pos:line="22034" pos:column="2">else</cpp:directive></cpp:else>
<cpp:define pos:line="22035" pos:column="1">#<cpp:directive pos:line="22035" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22035" pos:column="9">MsMachineDebugManager_V7</name></cpp:macro> <cpp:value pos:line="22035" pos:column="34">MsMachineDebugManager_V7_RETAIL</cpp:value></cpp:define>
<cpp:define pos:line="22036" pos:column="1">#<cpp:directive pos:line="22036" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22036" pos:column="9">CLSID_MsMachineDebugManager_V7</name></cpp:macro> <cpp:value pos:line="22036" pos:column="40">CLSID_MsMachineDebugManager_V7_RETAIL</cpp:value></cpp:define>
<cpp:endif pos:line="22037" pos:column="1">#<cpp:directive pos:line="22037" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:line="22038" pos:column="1">#<cpp:directive pos:line="22038" pos:column="2">ifdef</cpp:directive> <name pos:line="22038" pos:column="8">DEBUG</name></cpp:ifdef>
<cpp:define pos:line="22039" pos:column="1">#<cpp:directive pos:line="22039" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22039" pos:column="9">MDMUtilServer_V7</name></cpp:macro> <cpp:value pos:line="22039" pos:column="26">MDMUtilServer_V7_DEBUG</cpp:value></cpp:define>
<cpp:define pos:line="22040" pos:column="1">#<cpp:directive pos:line="22040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22040" pos:column="9">CLSID_MDMUtilServer_V7</name></cpp:macro> <cpp:value pos:line="22040" pos:column="32">CLSID_MDMUtilServer_V7_DEBUG</cpp:value></cpp:define>
<cpp:else pos:line="22041" pos:column="1">#<cpp:directive pos:line="22041" pos:column="2">else</cpp:directive></cpp:else>
<cpp:define pos:line="22042" pos:column="1">#<cpp:directive pos:line="22042" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22042" pos:column="9">MDMUtilServer_V7</name></cpp:macro> <cpp:value pos:line="22042" pos:column="26">MDMUtilServer_V7_RETAIL</cpp:value></cpp:define>
<cpp:define pos:line="22043" pos:column="1">#<cpp:directive pos:line="22043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22043" pos:column="9">CLSID_MDMUtilServer_V7</name></cpp:macro> <cpp:value pos:line="22043" pos:column="32">CLSID_MDMUtilServer_V7_RETAIL</cpp:value></cpp:define>
<cpp:endif pos:line="22044" pos:column="1">#<cpp:directive pos:line="22044" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22046" pos:column="1">EXTERN_C</name> <specifier pos:line="22046" pos:column="10">const</specifier> <name pos:line="22046" pos:column="16">IID</name></type> <name pos:line="22046" pos:column="20">LIBID_AD2Lib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="22048" pos:column="1">EXTERN_C</name> <specifier pos:line="22048" pos:column="10">const</specifier> <name pos:line="22048" pos:column="16">CLSID</name></type> <name pos:line="22048" pos:column="22">CLSID_SDMServer</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22050" pos:column="1">#<cpp:directive pos:line="22050" pos:column="2">ifdef</cpp:directive> <name pos:line="22050" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22052" pos:column="1">class</type> <name pos:line="22052" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22052" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22052" pos:column="21">"5eb7d9f7-af21-400e-a2c4-7fd6396f8641"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22053" pos:column="1">SDMServer</name></decl>;</decl_stmt>
<cpp:endif pos:line="22054" pos:column="1">#<cpp:directive pos:line="22054" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22056" pos:column="1">EXTERN_C</name> <specifier pos:line="22056" pos:column="10">const</specifier> <name pos:line="22056" pos:column="16">CLSID</name></type> <name pos:line="22056" pos:column="22">CLSID_MsMachineDebugManager_V7_RETAIL</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22058" pos:column="1">#<cpp:directive pos:line="22058" pos:column="2">ifdef</cpp:directive> <name pos:line="22058" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22060" pos:column="1">class</type> <name pos:line="22060" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22060" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22060" pos:column="21">"73b25ffd-f501-437b-8b11-7f0de383964f"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22061" pos:column="1">MsMachineDebugManager_V7_RETAIL</name></decl>;</decl_stmt>
<cpp:endif pos:line="22062" pos:column="1">#<cpp:directive pos:line="22062" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22064" pos:column="1">EXTERN_C</name> <specifier pos:line="22064" pos:column="10">const</specifier> <name pos:line="22064" pos:column="16">CLSID</name></type> <name pos:line="22064" pos:column="22">CLSID_MsMachineDebugManager_V7_DEBUG</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22066" pos:column="1">#<cpp:directive pos:line="22066" pos:column="2">ifdef</cpp:directive> <name pos:line="22066" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22068" pos:column="1">class</type> <name pos:line="22068" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22068" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22068" pos:column="21">"05e1b201-493d-4678-bbcb-18d9caf5c0a9"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22069" pos:column="1">MsMachineDebugManager_V7_DEBUG</name></decl>;</decl_stmt>
<cpp:endif pos:line="22070" pos:column="1">#<cpp:directive pos:line="22070" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22072" pos:column="1">EXTERN_C</name> <specifier pos:line="22072" pos:column="10">const</specifier> <name pos:line="22072" pos:column="16">CLSID</name></type> <name pos:line="22072" pos:column="22">CLSID_MDMUtilServer_V7_RETAIL</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22074" pos:column="1">#<cpp:directive pos:line="22074" pos:column="2">ifdef</cpp:directive> <name pos:line="22074" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22076" pos:column="1">class</type> <name pos:line="22076" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22076" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22076" pos:column="21">"b20e899d-b079-479d-a4dc-10f758d9cd9a"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22077" pos:column="1">MDMUtilServer_V7_RETAIL</name></decl>;</decl_stmt>
<cpp:endif pos:line="22078" pos:column="1">#<cpp:directive pos:line="22078" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22080" pos:column="1">EXTERN_C</name> <specifier pos:line="22080" pos:column="10">const</specifier> <name pos:line="22080" pos:column="16">CLSID</name></type> <name pos:line="22080" pos:column="22">CLSID_MDMUtilServer_V7_DEBUG</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22082" pos:column="1">#<cpp:directive pos:line="22082" pos:column="2">ifdef</cpp:directive> <name pos:line="22082" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22084" pos:column="1">class</type> <name pos:line="22084" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22084" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22084" pos:column="21">"89370a13-3977-4e7d-aea0-0a9751ae596b"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22085" pos:column="1">MDMUtilServer_V7_DEBUG</name></decl>;</decl_stmt>
<cpp:endif pos:line="22086" pos:column="1">#<cpp:directive pos:line="22086" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22088" pos:column="1">EXTERN_C</name> <specifier pos:line="22088" pos:column="10">const</specifier> <name pos:line="22088" pos:column="16">CLSID</name></type> <name pos:line="22088" pos:column="22">CLSID_ProgramPublisher</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22090" pos:column="1">#<cpp:directive pos:line="22090" pos:column="2">ifdef</cpp:directive> <name pos:line="22090" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22092" pos:column="1">class</type> <name pos:line="22092" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22092" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22092" pos:column="21">"d04d550d-1ea8-4e37-830e-700fea447688"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22093" pos:column="1">ProgramPublisher</name></decl>;</decl_stmt>
<cpp:endif pos:line="22094" pos:column="1">#<cpp:directive pos:line="22094" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="22096" pos:column="1">EXTERN_C</name> <specifier pos:line="22096" pos:column="10">const</specifier> <name pos:line="22096" pos:column="16">CLSID</name></type> <name pos:line="22096" pos:column="22">CLSID_MsProgramProvider</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="22098" pos:column="1">#<cpp:directive pos:line="22098" pos:column="2">ifdef</cpp:directive> <name pos:line="22098" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="22100" pos:column="1">class</type> <name pos:line="22100" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="22100" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="22100" pos:column="21">"170ec3fc-4e80-40ab-a85a-55900c7c70de"</lit:literal></expr></argument>)</argument_list>
<name pos:line="22101" pos:column="1">MsProgramProvider</name></decl>;</decl_stmt>
<cpp:endif pos:line="22102" pos:column="1">#<cpp:directive pos:line="22102" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:endif pos:line="22103" pos:column="1">#<cpp:directive pos:line="22103" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="22103" pos:column="8">/* __AD2Lib_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="22105" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<function_decl><type><name pos:line="22107" pos:column="1">unsigned</name> <name pos:line="22107" pos:column="10">long</name>             <name pos:line="22107" pos:column="27">__RPC_USER</name></type>  <name pos:line="22107" pos:column="39">BSTR_UserSize</name><parameter_list pos:line="22107" pos:column="52">(     <param><decl><type><name pos:line="22107" pos:column="58">unsigned</name></type> <name pos:line="22107" pos:column="67">long</name> <type:modifier pos:line="22107" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22107" pos:column="75">unsigned</name></type> <name pos:line="22107" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="22107" pos:column="102">BSTR</name> <type:modifier pos:line="22107" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22108" pos:column="1">unsigned</name> <name pos:line="22108" pos:column="10">char</name> <type:modifier pos:line="22108" pos:column="15">*</type:modifier> <name pos:line="22108" pos:column="17">__RPC_USER</name></type>  <name pos:line="22108" pos:column="29">BSTR_UserMarshal</name><parameter_list pos:line="22108" pos:column="45">(  <param><decl><type><name pos:line="22108" pos:column="48">unsigned</name></type> <name pos:line="22108" pos:column="57">long</name> <type:modifier pos:line="22108" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22108" pos:column="65">unsigned</name></type> <name pos:line="22108" pos:column="74">char</name> <type:modifier pos:line="22108" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22108" pos:column="82">BSTR</name> <type:modifier pos:line="22108" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22109" pos:column="1">unsigned</name> <name pos:line="22109" pos:column="10">char</name> <type:modifier pos:line="22109" pos:column="15">*</type:modifier> <name pos:line="22109" pos:column="17">__RPC_USER</name></type>  <name pos:line="22109" pos:column="29">BSTR_UserUnmarshal</name><parameter_list pos:line="22109" pos:column="47">(<param><decl><type><name pos:line="22109" pos:column="48">unsigned</name></type> <name pos:line="22109" pos:column="57">long</name> <type:modifier pos:line="22109" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22109" pos:column="65">unsigned</name></type> <name pos:line="22109" pos:column="74">char</name> <type:modifier pos:line="22109" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22109" pos:column="82">BSTR</name> <type:modifier pos:line="22109" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22110" pos:column="1">void</name>                      <name pos:line="22110" pos:column="27">__RPC_USER</name></type>  <name pos:line="22110" pos:column="39">BSTR_UserFree</name><parameter_list pos:line="22110" pos:column="52">(     <param><decl><type><name pos:line="22110" pos:column="58">unsigned</name></type> <name pos:line="22110" pos:column="67">long</name> <type:modifier pos:line="22110" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22110" pos:column="75">BSTR</name> <type:modifier pos:line="22110" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<function_decl><type><name pos:line="22112" pos:column="1">unsigned</name> <name pos:line="22112" pos:column="10">long</name>             <name pos:line="22112" pos:column="27">__RPC_USER</name></type>  <name pos:line="22112" pos:column="39">HWND_UserSize</name><parameter_list pos:line="22112" pos:column="52">(     <param><decl><type><name pos:line="22112" pos:column="58">unsigned</name></type> <name pos:line="22112" pos:column="67">long</name> <type:modifier pos:line="22112" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22112" pos:column="75">unsigned</name></type> <name pos:line="22112" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="22112" pos:column="102">HWND</name> <type:modifier pos:line="22112" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22113" pos:column="1">unsigned</name> <name pos:line="22113" pos:column="10">char</name> <type:modifier pos:line="22113" pos:column="15">*</type:modifier> <name pos:line="22113" pos:column="17">__RPC_USER</name></type>  <name pos:line="22113" pos:column="29">HWND_UserMarshal</name><parameter_list pos:line="22113" pos:column="45">(  <param><decl><type><name pos:line="22113" pos:column="48">unsigned</name></type> <name pos:line="22113" pos:column="57">long</name> <type:modifier pos:line="22113" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22113" pos:column="65">unsigned</name></type> <name pos:line="22113" pos:column="74">char</name> <type:modifier pos:line="22113" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22113" pos:column="82">HWND</name> <type:modifier pos:line="22113" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22114" pos:column="1">unsigned</name> <name pos:line="22114" pos:column="10">char</name> <type:modifier pos:line="22114" pos:column="15">*</type:modifier> <name pos:line="22114" pos:column="17">__RPC_USER</name></type>  <name pos:line="22114" pos:column="29">HWND_UserUnmarshal</name><parameter_list pos:line="22114" pos:column="47">(<param><decl><type><name pos:line="22114" pos:column="48">unsigned</name></type> <name pos:line="22114" pos:column="57">long</name> <type:modifier pos:line="22114" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22114" pos:column="65">unsigned</name></type> <name pos:line="22114" pos:column="74">char</name> <type:modifier pos:line="22114" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22114" pos:column="82">HWND</name> <type:modifier pos:line="22114" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22115" pos:column="1">void</name>                      <name pos:line="22115" pos:column="27">__RPC_USER</name></type>  <name pos:line="22115" pos:column="39">HWND_UserFree</name><parameter_list pos:line="22115" pos:column="52">(     <param><decl><type><name pos:line="22115" pos:column="58">unsigned</name></type> <name pos:line="22115" pos:column="67">long</name> <type:modifier pos:line="22115" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22115" pos:column="75">HWND</name> <type:modifier pos:line="22115" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<function_decl><type><name pos:line="22117" pos:column="1">unsigned</name> <name pos:line="22117" pos:column="10">long</name>             <name pos:line="22117" pos:column="27">__RPC_USER</name></type>  <name pos:line="22117" pos:column="39">VARIANT_UserSize</name><parameter_list pos:line="22117" pos:column="55">(     <param><decl><type><name pos:line="22117" pos:column="61">unsigned</name></type> <name pos:line="22117" pos:column="70">long</name> <type:modifier pos:line="22117" pos:column="75">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22117" pos:column="78">unsigned</name></type> <name pos:line="22117" pos:column="87">long</name></decl></param>            , <param><decl><type><name pos:line="22117" pos:column="105">VARIANT</name> <type:modifier pos:line="22117" pos:column="113">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22118" pos:column="1">unsigned</name> <name pos:line="22118" pos:column="10">char</name> <type:modifier pos:line="22118" pos:column="15">*</type:modifier> <name pos:line="22118" pos:column="17">__RPC_USER</name></type>  <name pos:line="22118" pos:column="29">VARIANT_UserMarshal</name><parameter_list pos:line="22118" pos:column="48">(  <param><decl><type><name pos:line="22118" pos:column="51">unsigned</name></type> <name pos:line="22118" pos:column="60">long</name> <type:modifier pos:line="22118" pos:column="65">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22118" pos:column="68">unsigned</name></type> <name pos:line="22118" pos:column="77">char</name> <type:modifier pos:line="22118" pos:column="82">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22118" pos:column="85">VARIANT</name> <type:modifier pos:line="22118" pos:column="93">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22119" pos:column="1">unsigned</name> <name pos:line="22119" pos:column="10">char</name> <type:modifier pos:line="22119" pos:column="15">*</type:modifier> <name pos:line="22119" pos:column="17">__RPC_USER</name></type>  <name pos:line="22119" pos:column="29">VARIANT_UserUnmarshal</name><parameter_list pos:line="22119" pos:column="50">(<param><decl><type><name pos:line="22119" pos:column="51">unsigned</name></type> <name pos:line="22119" pos:column="60">long</name> <type:modifier pos:line="22119" pos:column="65">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22119" pos:column="68">unsigned</name></type> <name pos:line="22119" pos:column="77">char</name> <type:modifier pos:line="22119" pos:column="82">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22119" pos:column="85">VARIANT</name> <type:modifier pos:line="22119" pos:column="93">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="22120" pos:column="1">void</name>                      <name pos:line="22120" pos:column="27">__RPC_USER</name></type>  <name pos:line="22120" pos:column="39">VARIANT_UserFree</name><parameter_list pos:line="22120" pos:column="55">(     <param><decl><type><name pos:line="22120" pos:column="61">unsigned</name></type> <name pos:line="22120" pos:column="70">long</name> <type:modifier pos:line="22120" pos:column="75">*</type:modifier></decl></param>, <param><decl><type><name pos:line="22120" pos:column="78">VARIANT</name> <type:modifier pos:line="22120" pos:column="86">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<comment type="block" pos:line="22122" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="22124" pos:column="1">#<cpp:directive pos:line="22124" pos:column="2">ifdef</cpp:directive> <name pos:line="22124" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="22126" pos:column="1">#<cpp:directive pos:line="22126" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="22128" pos:column="1">#<cpp:directive pos:line="22128" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
