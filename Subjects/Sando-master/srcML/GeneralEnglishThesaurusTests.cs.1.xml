<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core.UnitTests\Tools\GeneralEnglishThesaurusTests.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">NUnit</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Framework</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Core</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">Tools</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Sando</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">Core</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">UnitTests</name><op:operator pos:line="8" pos:column="31">.</op:operator><name pos:line="8" pos:column="32">Tools</name></name>
<block pos:line="9" pos:column="1">{
    <class><attribute pos:line="10" pos:column="5">[<expr><name pos:line="10" pos:column="6">TestFixture</name></expr>]</attribute>
    <specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">GeneralEnglishThesaurusTests</name>
    <block pos:line="12" pos:column="5">{

        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <specifier pos:line="14" pos:column="17">readonly</specifier> <name pos:line="14" pos:column="26">IThesaurus</name></type> <name pos:line="14" pos:column="37">thesaurus</name> <init pos:line="14" pos:column="47">= <expr><call><name><name pos:line="14" pos:column="49">GeneralEnglishThesaurus</name><op:operator pos:line="14" pos:column="72">.</op:operator><name pos:line="14" pos:column="73">GetInstance</name></name><argument_list pos:line="14" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><attribute pos:line="16" pos:column="9">[<expr><name pos:line="16" pos:column="10">SetUp</name></expr>]</attribute>
        <specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">void</name></type> <name pos:line="17" pos:column="21">setUp</name><parameter_list pos:line="17" pos:column="26">()</parameter_list>
        <block pos:line="18" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">thesaurus</name><op:operator pos:line="19" pos:column="22">.</op:operator><name pos:line="19" pos:column="23">Initialize</name></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="22" pos:column="9">[<expr><name pos:line="22" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">void</name></type> <name pos:line="23" pos:column="21">QueryPopolarWords</name><parameter_list pos:line="23" pos:column="38">()</parameter_list>
        <block pos:line="24" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Assert</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">IsTrue</name></name><argument_list pos:line="25" pos:column="26">(<argument><expr><call><name><name pos:line="25" pos:column="27">thesaurus</name><op:operator pos:line="25" pos:column="36">.</op:operator><name pos:line="25" pos:column="37">GetSynonyms</name></name><argument_list pos:line="25" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="49">"red"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="55">.</op:operator><call><name pos:line="25" pos:column="56">Any</name><argument_list pos:line="25" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">Assert</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">IsTrue</name></name><argument_list pos:line="26" pos:column="26">(<argument><expr><call><name><name pos:line="26" pos:column="27">thesaurus</name><op:operator pos:line="26" pos:column="36">.</op:operator><name pos:line="26" pos:column="37">GetSynonyms</name></name><argument_list pos:line="26" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="26" pos:column="49">"black"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="26" pos:column="57">.</op:operator><call><name pos:line="26" pos:column="58">Any</name><argument_list pos:line="26" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">Assert</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">IsTrue</name></name><argument_list pos:line="27" pos:column="26">(<argument><expr><call><name><name pos:line="27" pos:column="27">thesaurus</name><op:operator pos:line="27" pos:column="36">.</op:operator><name pos:line="27" pos:column="37">GetSynonyms</name></name><argument_list pos:line="27" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="49">"peach"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="27" pos:column="57">.</op:operator><call><name pos:line="27" pos:column="58">Any</name><argument_list pos:line="27" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">Assert</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">IsTrue</name></name><argument_list pos:line="28" pos:column="26">(<argument><expr><call><name><name pos:line="28" pos:column="27">thesaurus</name><op:operator pos:line="28" pos:column="36">.</op:operator><name pos:line="28" pos:column="37">GetSynonyms</name></name><argument_list pos:line="28" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="49">"house"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="28" pos:column="57">.</op:operator><call><name pos:line="28" pos:column="58">Any</name><argument_list pos:line="28" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">Assert</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">IsTrue</name></name><argument_list pos:line="29" pos:column="26">(<argument><expr><call><name><name pos:line="29" pos:column="27">thesaurus</name><op:operator pos:line="29" pos:column="36">.</op:operator><name pos:line="29" pos:column="37">GetSynonyms</name></name><argument_list pos:line="29" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="49">"dictionary"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="29" pos:column="62">.</op:operator><call><name pos:line="29" pos:column="63">Any</name><argument_list pos:line="29" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">IsTrue</name></name><argument_list pos:line="30" pos:column="26">(<argument><expr><call><name><name pos:line="30" pos:column="27">thesaurus</name><op:operator pos:line="30" pos:column="36">.</op:operator><name pos:line="30" pos:column="37">GetSynonyms</name></name><argument_list pos:line="30" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="49">"need"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="56">.</op:operator><call><name pos:line="30" pos:column="57">Any</name><argument_list pos:line="30" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">IsTrue</name></name><argument_list pos:line="31" pos:column="26">(<argument><expr><call><name><name pos:line="31" pos:column="27">thesaurus</name><op:operator pos:line="31" pos:column="36">.</op:operator><name pos:line="31" pos:column="37">GetSynonyms</name></name><argument_list pos:line="31" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="49">"sand"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="31" pos:column="56">.</op:operator><call><name pos:line="31" pos:column="57">Any</name><argument_list pos:line="31" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">IsTrue</name></name><argument_list pos:line="32" pos:column="26">(<argument><expr><call><name><name pos:line="32" pos:column="27">thesaurus</name><op:operator pos:line="32" pos:column="36">.</op:operator><name pos:line="32" pos:column="37">GetSynonyms</name></name><argument_list pos:line="32" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="49">"monkey"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="58">.</op:operator><call><name pos:line="32" pos:column="59">Any</name><argument_list pos:line="32" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="35" pos:column="9">[<expr><name pos:line="35" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="36" pos:column="9">public</specifier> <name pos:line="36" pos:column="16">void</name></type> <name pos:line="36" pos:column="21">QueryWiredWords</name><parameter_list pos:line="36" pos:column="36">()</parameter_list>
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">IsFalse</name></name><argument_list pos:line="38" pos:column="27">(<argument><expr><call><name><name pos:line="38" pos:column="28">thesaurus</name><op:operator pos:line="38" pos:column="37">.</op:operator><name pos:line="38" pos:column="38">GetSynonyms</name></name><argument_list pos:line="38" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="50">"obama"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="58">.</op:operator><call><name pos:line="38" pos:column="59">Any</name><argument_list pos:line="38" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">Assert</name><op:operator pos:line="39" pos:column="19">.</op:operator><name pos:line="39" pos:column="20">IsFalse</name></name><argument_list pos:line="39" pos:column="27">(<argument><expr><call><name><name pos:line="39" pos:column="28">thesaurus</name><op:operator pos:line="39" pos:column="37">.</op:operator><name pos:line="39" pos:column="38">GetSynonyms</name></name><argument_list pos:line="39" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="50">"georgewbush"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="64">.</op:operator><call><name pos:line="39" pos:column="65">Any</name><argument_list pos:line="39" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Assert</name><op:operator pos:line="40" pos:column="19">.</op:operator><name pos:line="40" pos:column="20">IsFalse</name></name><argument_list pos:line="40" pos:column="27">(<argument><expr><call><name><name pos:line="40" pos:column="28">thesaurus</name><op:operator pos:line="40" pos:column="37">.</op:operator><name pos:line="40" pos:column="38">GetSynonyms</name></name><argument_list pos:line="40" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="50">"philly"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="59">.</op:operator><call><name pos:line="40" pos:column="60">Any</name><argument_list pos:line="40" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">Assert</name><op:operator pos:line="41" pos:column="19">.</op:operator><name pos:line="41" pos:column="20">IsFalse</name></name><argument_list pos:line="41" pos:column="27">(<argument><expr><call><name><name pos:line="41" pos:column="28">thesaurus</name><op:operator pos:line="41" pos:column="37">.</op:operator><name pos:line="41" pos:column="38">GetSynonyms</name></name><argument_list pos:line="41" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="50">"fdaf"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="57">.</op:operator><call><name pos:line="41" pos:column="58">Any</name><argument_list pos:line="41" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">Assert</name><op:operator pos:line="42" pos:column="19">.</op:operator><name pos:line="42" pos:column="20">IsFalse</name></name><argument_list pos:line="42" pos:column="27">(<argument><expr><call><name><name pos:line="42" pos:column="28">thesaurus</name><op:operator pos:line="42" pos:column="37">.</op:operator><name pos:line="42" pos:column="38">GetSynonyms</name></name><argument_list pos:line="42" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="50">"verylongwords"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="66">.</op:operator><call><name pos:line="42" pos:column="67">Any</name><argument_list pos:line="42" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">Assert</name><op:operator pos:line="43" pos:column="19">.</op:operator><name pos:line="43" pos:column="20">IsFalse</name></name><argument_list pos:line="43" pos:column="27">(<argument><expr><call><name><name pos:line="43" pos:column="28">thesaurus</name><op:operator pos:line="43" pos:column="37">.</op:operator><name pos:line="43" pos:column="38">GetSynonyms</name></name><argument_list pos:line="43" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="50">"???"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="43" pos:column="56">.</op:operator><call><name pos:line="43" pos:column="57">Any</name><argument_list pos:line="43" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">Assert</name><op:operator pos:line="44" pos:column="19">.</op:operator><name pos:line="44" pos:column="20">IsFalse</name></name><argument_list pos:line="44" pos:column="27">(<argument><expr><call><name><name pos:line="44" pos:column="28">thesaurus</name><op:operator pos:line="44" pos:column="37">.</op:operator><name pos:line="44" pos:column="38">GetSynonyms</name></name><argument_list pos:line="44" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="50">"7455489735"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="44" pos:column="63">.</op:operator><call><name pos:line="44" pos:column="64">Any</name><argument_list pos:line="44" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">Assert</name><op:operator pos:line="45" pos:column="19">.</op:operator><name pos:line="45" pos:column="20">IsFalse</name></name><argument_list pos:line="45" pos:column="27">(<argument><expr><call><name><name pos:line="45" pos:column="28">thesaurus</name><op:operator pos:line="45" pos:column="37">.</op:operator><name pos:line="45" pos:column="38">GetSynonyms</name></name><argument_list pos:line="45" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="50">" "</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="45" pos:column="54">.</op:operator><call><name pos:line="45" pos:column="55">Any</name><argument_list pos:line="45" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="48" pos:column="9">[<expr><name pos:line="48" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="49" pos:column="9">public</specifier> <name pos:line="49" pos:column="16">void</name></type> <name pos:line="49" pos:column="21">GetSynonymsCorrectly</name><parameter_list pos:line="49" pos:column="41">()</parameter_list>
        <block pos:line="50" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">Assert</name><op:operator pos:line="51" pos:column="19">.</op:operator><name pos:line="51" pos:column="20">IsTrue</name></name><argument_list pos:line="51" pos:column="26">(<argument><expr><call><name><name pos:line="51" pos:column="27">thesaurus</name><op:operator pos:line="51" pos:column="36">.</op:operator><name pos:line="51" pos:column="37">GetSynonyms</name></name><argument_list pos:line="51" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="49">"see"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="51" pos:column="55">.</op:operator><call><name pos:line="51" pos:column="56">Select</name><argument_list pos:line="51" pos:column="62">(<argument><expr><lambda><name pos:line="51" pos:column="63">s</name> <op:operator pos:line="51" pos:column="65">=&gt;</op:operator> <name><name pos:line="51" pos:column="68">s</name><op:operator pos:line="51" pos:column="69">.</op:operator><name pos:line="51" pos:column="70">Synonym</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="51" pos:column="78">.</op:operator><call><name pos:line="51" pos:column="79">Contains</name><argument_list pos:line="51" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="88">"watch"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">Assert</name><op:operator pos:line="52" pos:column="19">.</op:operator><name pos:line="52" pos:column="20">IsTrue</name></name><argument_list pos:line="52" pos:column="26">(<argument><expr><call><name><name pos:line="52" pos:column="27">thesaurus</name><op:operator pos:line="52" pos:column="36">.</op:operator><name pos:line="52" pos:column="37">GetSynonyms</name></name><argument_list pos:line="52" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="49">"get"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="55">.</op:operator><call><name pos:line="52" pos:column="56">Select</name><argument_list pos:line="52" pos:column="62">(<argument><expr><lambda><name pos:line="52" pos:column="63">s</name> <op:operator pos:line="52" pos:column="65">=&gt;</op:operator> <name><name pos:line="52" pos:column="68">s</name><op:operator pos:line="52" pos:column="69">.</op:operator><name pos:line="52" pos:column="70">Synonym</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="78">.</op:operator><call><name pos:line="52" pos:column="79">Contains</name><argument_list pos:line="52" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="88">"have"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">Assert</name><op:operator pos:line="53" pos:column="19">.</op:operator><name pos:line="53" pos:column="20">IsTrue</name></name><argument_list pos:line="53" pos:column="26">(<argument><expr><call><name><name pos:line="53" pos:column="27">thesaurus</name><op:operator pos:line="53" pos:column="36">.</op:operator><name pos:line="53" pos:column="37">GetSynonyms</name></name><argument_list pos:line="53" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="49">"however"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="53" pos:column="59">.</op:operator><call><name pos:line="53" pos:column="60">Select</name><argument_list pos:line="53" pos:column="66">(<argument><expr><lambda><name pos:line="53" pos:column="67">s</name> <op:operator pos:line="53" pos:column="69">=&gt;</op:operator> <name><name pos:line="53" pos:column="72">s</name><op:operator pos:line="53" pos:column="73">.</op:operator><name pos:line="53" pos:column="74">Synonym</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="53" pos:column="82">.</op:operator><call><name pos:line="53" pos:column="83">Contains</name><argument_list pos:line="53" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="92">"nevertheless"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">Assert</name><op:operator pos:line="54" pos:column="19">.</op:operator><name pos:line="54" pos:column="20">IsTrue</name></name><argument_list pos:line="54" pos:column="26">(<argument><expr><call><name><name pos:line="54" pos:column="27">thesaurus</name><op:operator pos:line="54" pos:column="36">.</op:operator><name pos:line="54" pos:column="37">GetSynonyms</name></name><argument_list pos:line="54" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="49">"however"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="54" pos:column="59">.</op:operator><call><name pos:line="54" pos:column="60">Select</name><argument_list pos:line="54" pos:column="66">(<argument><expr><lambda><name pos:line="54" pos:column="67">s</name> <op:operator pos:line="54" pos:column="69">=&gt;</op:operator> <name><name pos:line="54" pos:column="72">s</name><op:operator pos:line="54" pos:column="73">.</op:operator><name pos:line="54" pos:column="74">Synonym</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="54" pos:column="82">.</op:operator><call><name pos:line="54" pos:column="83">Contains</name><argument_list pos:line="54" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="92">"withal"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">Assert</name><op:operator pos:line="55" pos:column="19">.</op:operator><name pos:line="55" pos:column="20">IsTrue</name></name><argument_list pos:line="55" pos:column="26">(<argument><expr><call><name><name pos:line="55" pos:column="27">thesaurus</name><op:operator pos:line="55" pos:column="36">.</op:operator><name pos:line="55" pos:column="37">GetSynonyms</name></name><argument_list pos:line="55" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="49">"however"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="59">.</op:operator><call><name pos:line="55" pos:column="60">Select</name><argument_list pos:line="55" pos:column="66">(<argument><expr><lambda><name pos:line="55" pos:column="67">s</name> <op:operator pos:line="55" pos:column="69">=&gt;</op:operator> <name><name pos:line="55" pos:column="72">s</name><op:operator pos:line="55" pos:column="73">.</op:operator><name pos:line="55" pos:column="74">Synonym</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="82">.</op:operator><call><name pos:line="55" pos:column="83">Contains</name><argument_list pos:line="55" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="92">"still"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">Assert</name><op:operator pos:line="56" pos:column="19">.</op:operator><name pos:line="56" pos:column="20">IsTrue</name></name><argument_list pos:line="56" pos:column="26">(<argument><expr><call><name><name pos:line="56" pos:column="27">thesaurus</name><op:operator pos:line="56" pos:column="36">.</op:operator><name pos:line="56" pos:column="37">GetSynonyms</name></name><argument_list pos:line="56" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="49">"however"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="56" pos:column="59">.</op:operator><call><name pos:line="56" pos:column="60">Count</name><argument_list pos:line="56" pos:column="65">()</argument_list></call> <op:operator pos:line="56" pos:column="68">==</op:operator> <lit:literal type="number" pos:line="56" pos:column="71">8</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
